
Coq.micromega.Ztac.eq_incl	40	0.0.1	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0406188964844	4
Coq.micromega.Ztac.elim_concl_eq	40	320.130	synth with cache (only 1: fix gcd_divide 1; only 1: solve [ auto ]).	0.229125976562	138
Coq.micromega.Ztac.elim_concl_le	40	3	synth with cache (only 1: intuition Z.order).	0.0777089595795	63
Coq.micromega.Ztac.elim_concl_lt	40	2	synth with cache (only 1: intuition Z.order).	0.174163103104	134
Coq.micromega.Ztac.Zlt_le_add_1	40	1.66	synth with cache (only 1: intros a b; only 1: apply Z.le_succ_l).	1.04769682884	631
Coq.micromega.Ztac.add_le	40	64	synth with cache (only 1: Z.order_pos).	0.166075944901	149
Coq.micromega.Ztac.mul_le	40	450	synth with cache (only 1: firstorder).	0.555011987686	497
Coq.micromega.ZifyInst.PropAnd	40	66	synth with cache (only 1: RelationClasses.simpl_relation).	0.0636229515076	7
Coq.micromega.ZifyInst.PropOr	40	720	synth with cache (only 1: firstorder).	1.02720785141	1764
Coq.micromega.ZifyInst.PropArrow	40	0.769.195	synth with cache (only 1: repeat split; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intuition).	0.403605222702	304
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.104713201523	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0.3	synth with cache (only 1: constructor; only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).	0.112694978714	116
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	192.708	synth with cache (only 1: fix gcd_greatest 1; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	0.825073957443	588
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	385.195	synth with cache (only 1: intros n m v; only 1: firstorder).	0.186805009842	141
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0225660800934	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0240309238434	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0233209133148	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0246469974518	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0248680114746	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0711498260498	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.1.0.65	synth with cache (only 1: intros a b q; only 1: intro; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	11.8934700489	17429
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	5.32461619377	7461
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.1.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.127484083176	5
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.0.0.194.0.0	synth with cache (only 1: intros; only 1: split; only 1: intro H1; only 1: now subst; only 1: destruct 1; only 1: Z.order').	0.687808990479	796
Coq.micromega.ZMicromega.lt_le_iff	40	0.0	synth with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.0248799324036	2
Coq.micromega.ZMicromega.le_0_iff	40	65.195	synth with cache (only 1: fix le_div2 1; only 1: auto with relations).	6.1048541069	9404
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	3.30115103722	3155
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40	449.516.512	synth with cache (only 1: intros n H; only 1: fix gcd_greatest 1; only 1: now N.nzsimpl).	9.97936105728	3181
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0296578407288	3
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	321.2.4	synth with cache (only 1: fix even_spec 1; only 1: intros e; only 1: CRelationClasses.simpl_crelation).	2.05185604095	3072
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	64.0.576.704.194.0.0.0.3.1.195.71	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: constructor; only 1: auto with zarith; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: constructor; only 1: easy; only 1: case_eq (Zgcd_pol p1); only 1: intros a Ha; only 1: constructor; only 1: inversion H; only 1: easy; only 1: now N.nzsimpl).	25.7295198441	50960
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40	1.0.832.69.67	synth with cache (only 1: intro H; only 1: intros Hq Hr; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	16.8286268711	24379
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40	0.320.512.192.513.450.579.192	synth with cache (only 1: intros a b Hb Hd; only 1: intros _; only 1: red; only 1: intro z; only 1: red; only 1: fix odd_spec 1; only 1: intro H; only 1: auto).	28.5084478855	34386
Coq.micromega.ZMicromega.max_var_nformalae_correct	40	448.321.0.576.1.0.0	synth with cache (only 1: intros; only 1: generalize 1%positive as acc; only 1: generalize 1%positive as acc; only 1: intros m Hm; only 1: generalize 1%positive as acc; only 1: fix le_div2 1; only 1: easy').	12.0509860516	10747
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0633800029755	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	896.833.577.64.514.1.128.192	synth with cache (only 1: intro p; only 1: destruct p; only 1: split; only 1: unfold Z.le, N.le; only 1: now N.nzsimpl; only 1: now constructor; only 1: now rewrite <- ?Z.add_le_mono_l; only 1: now rewrite <- ?Z.pred_le_mono).	6.91080188751	3565
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	4.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	3.84475708008	2499
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	67.0	synth with cache (only 1: unfold tail; only 1: now destruct compare || now destruct p).	0.12976193428	125
Coq.micromega.Env.S.nth_pred_double	40
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.256.64.1	synth with cache (only 1: destr_bool; only 1: induction l as [| a l' Hrec]; only 1: exact eq_refl; only 1: reflexivity).	0.101873874664	72
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	3	synth with cache (only 1: destr_bool).	0.0181398391724	4
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0156528949738	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.0144720077515	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	2.0.192.136	synth with cache (only 1: intros a; only 1: destruct a; only 1: reflexivity; only 1: easy).	0.883769989014	2103
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	256.72	synth with cache (only 1: fix odd_spec 1; only 1: intuition).	3.80419015884	1378
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	1.0.1.130.0.448.0.5.320	synth with cache (only 1: intros H; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: firstorder; only 1: simpl; only 1: destruct H; only 1: reflexivity; only 1: simpl; only 1: auto).	8.40535116196	14795
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40	65.1.387.386	synth with cache (only 1: intros p IH; only 1: fix gcd_greatest 1; only 1: intros; only 1: eauto).	19.9273431301	36732
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	64.321.0	synth with cache (only 1: unfold eval_cnf; only 1: compute; only 1: auto with arith).	0.0767669677734	54
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0429918766022	3
Coq.micromega.Tauto.S.eval_cnf_and_opt	40	0.65.261.0	synth with cache (only 1: unfold eval_cnf; only 1: intros m IH; only 1: fix odd_spec 1; only 1: tauto).	9.20697307587	11128
Coq.micromega.Tauto.S.add_term_correct	40	1.512.256.198	synth with cache (only 1: intro n; only 1: red; only 1: fix odd_spec 1; only 1: tauto).	11.2712879181	2975
Coq.micromega.Tauto.S.no_middle_eval_tt	40	128.576	synth with cache (only 1: intros m; only 1: firstorder  (subst; auto)).	0.589922189713	92
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	1.256.1.256.2	synth with cache (only 1: unfold eval_cnf; only 1: intro n; only 1: simpl; only 1: fix even_spec 1; only 1: tauto).	11.7710330486	7060
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.1294298172	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	4.385.1.1.1	synth with cache (only 1: intro n; only 1: intuition; only 1: now destruct n; only 1: CRelationClasses.reduce; only 1: now destruct n).	12.1078829765	17469
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	832.451	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: firstorder).	0.740325927734	537
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	64.450	synth with cache (only 1: intros p n m Hp; only 1: firstorder).	0.20272397995	148
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0103859901428	3
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	3.3	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	5.12052083015	2261
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	72.3	synth with cache (only 1: simpl; only 1: simpl_relation).	7.96871519089	6418
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	204.0	synth with cache (only 1: simpl; only 1: CRelationClasses.simpl_crelation).	1.18322014809	2094
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP2; only 1: rsimpl).	28.6121740341	8225
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.1.2.0.0.0.0.0.0.192.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros EQ; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	17.4839558601	8135
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0866358280182	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.299782037735	78
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	64.1.130.129.13	synth with cache (only 1: induction M; only 1: simpl_relation; only 1: now N.nzsimpl'; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	6.16627407074	4841
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40	513.768.331	synth with cache (only 1: compute; only 1: fix gcd_greatest 1; only 1: now rewrite ?Pos.add_carry_spec, ?IHp).	19.4622919559	8425
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.00921893119812	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0106279850006	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	2	synth with cache (only 1: exact (SORopp_wd sor)).	0.0120890140533	3
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.0109348297119	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0122530460358	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	2.71370387077	745
Coq.micromega.RingMicromega.Micromega.cleb_sound	40	132.384	synth with cache (only 1: intros LT; only 1: firstorder).	0.880875110626	1024
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40	513.450.512.193.1	synth with cache (only 1: destruct f1; only 1: intros A B f l; only 1: fix gcd_greatest 1; only 1: destruct 1; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	16.6530210972	5230
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40	64.518	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto with *).	2.21711206436	328
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40	576.0.449.3.132	synth with cache (only 1: intro p; only 1: unfold eval_pol; only 1: fix gcd_greatest 1; only 1: intros; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	9.18509912491	7345
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	128.130.390.130	synth with cache (only 1: intro x; only 1: intro Dec; only 1: fix odd_spec 1; only 1: now simpl).	6.23615217209	5592
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40	192.448.129.65	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro UIP; only 1: now simpl).	3.10969281197	1358
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40	193.384.73.1	synth with cache (only 1: intro; only 1: fix odd_spec 1; only 1: vm_compute; only 1: now f_equal).	9.30036878586	5782
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	385.1.2	synth with cache (only 1: induction l; only 1: constructor; only 1: now PeanoNat.Nat.nzsimpl).	0.110059976578	154
Coq.micromega.Refl.make_impl_map	40	3.256.320.0.0.384	synth with cache (only 1: intros H; only 1: induction l; only 1: simpl; only 1: intros q; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: firstorder).	1.07681012154	1348
Coq.micromega.Refl.make_conj_cons	40	1.0.449.3	synth with cache (only 1: intros n m p; only 1: fix gcd_greatest 1; only 1: simpl; only 1: easy).	0.994781017303	1550
Coq.micromega.Refl.make_conj_impl	40	0.0.70.0.0.0	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: firstorder; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	19.6192622185	23507
Coq.micromega.Refl.make_conj_in	40	2.0.2.0.258.577.0.0.0.0.0	synth with cache (only 1: induction l; only 1: induction 1; only 1: firstorder; only 1: simpl; only 1: destruct l; only 1: destruct 2; only 1: CRelationClasses.simpl_crelation; only 1: easy; only 1: firstorder; only 1: subst; only 1: firstorder).	22.6992020607	73755
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.1	synth with cache (only 1: intros a b c H H'; only 1: rewrite make_conj_cons; only 1: intuition).	0.0899038314819	4
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0300240516663	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0117340087891	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.68.0	synth with cache (only 1: intro; only 1: apply Rminus_diag_uniq; only 1: field).	0.692492008209	1072
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	323.0.0.576.0.129.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: intros a0; only 1: discriminate; only 1: fix le_div2 1; only 1: now destruct Hn || easy; only 1: congruence; only 1: now destruct n).	3.84595608711	4819
Coq.micromega.RMicromega.Q2R_m_Proper	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qnum, Qden; only 1: intros; only 1: set (X1 := IZR x1) in *; only 1: pose proof (IZR_nz x2) as X2nz; only 1: set (X2 := IZR (Z.pos x2)) in *; only 1: set (Y1 := IZR y1) in *; only 1: pose proof (IZR_nz y2) as Y2nz; only 1: set (Y2 := IZR (Z.pos y2)) in *; only 1: assert (X1 * Y2 = Y1 * X2); only 1: unfold X1, X2, Y1, Y2; only 1: do 2 rewrite <- mult_IZR; only 1: f_equal; only 1: auto; only 1: clear H; only 1: field_simplify_eq; only 1: rewrite H0; only 1: ring; only 1: auto).	5.44049215317	4504
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0351939201355	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0691101551056	7
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0471088886261	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	1	synth with cache (only 1: now intros []).	0.021203994751	2
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	0.2.0.0	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.214372873306	278
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40	129.513.576.641.128	synth with cache (only 1: intros n IH; only 1: intros a0; only 1: intros q r; only 1: fix sqrtrem_spec 1; only 1: auto with datatypes).	10.087667942	7654
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	320.64.131.386	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: intros a; only 1: auto with sets).	2.11821603775	3996
Coq.rtauto.Bintree.Store.get_In	40	132.514.192.513	synth with cache (only 1: intros a a' Ha; only 1: intros Hab; only 1: fix sqrtrem_spec 1; only 1: now try split).	8.46599817276	19345
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40	65.642.5.67.1.2	synth with cache (only 1: intro i; only 1: intros a; only 1: generalize i; only 1: intro W; only 1: fix gcd_divide 1; only 1: auto with arith).	33.3935861588	67189
Coq.rtauto.Bintree.Map.get_map	40	384.267	synth with cache (only 1: fix odd_spec 1; only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym).	1.99043798447	4478
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40	576.64.130	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro x; only 1: auto with relations).	2.06854987144	2949
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40
Coq.rtauto.Rtauto.with_env.compose1	40	64.130.128.256.0.0.644	synth with cache (only 1: intro eq_rect_eq; only 1: induction F; only 1: auto; only 1: intro n; only 1: intros Ha Eq; only 1: CRelationClasses.simpl_crelation; only 1: firstorder).	2.81164979935	5458
Coq.rtauto.Rtauto.with_env.compose2	40	192.448.642	synth with cache (only 1: intro; only 1: fix odd_spec 1; only 1: now f_equal).	1.57260584831	864
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40	0.448.2.0.192.0.0	synth with cache (only 1: induction F; only 1: simpl; only 1: red; only 1: tauto; only 1: simpl; only 1: fix odd_spec 1; only 1: auto).	0.880936145782	1538
Coq.rtauto.Rtauto.with_env.project	40	65.453.0.64.257	synth with cache (only 1: intros c; only 1: intros l1 l2; only 1: intro i; only 1: fix odd_spec 1; only 1: now f_equal).	35.9530742168	90750
Coq.rtauto.Rtauto.with_env.interp_proof	40
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	1.0.1.0.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: cring; only 1: rewrite ring_sub_def; only 1: rewrite <- H; only 1: cring).	1.31080102921	710
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: intro; only 1: trivial).	0.0407619476318	3
Coq.nsatz.Nsatz.nsatz1.Rext	40
Coq.nsatz.Nsatz.nsatz1.Rset	40	1	synth with cache (only 1: apply ring_setoid).	0.371509075165	199
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	194	synth with cache (only 1: easy').	0.0678179264069	15
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0385010242462	1
Coq.nsatz.Nsatz.Rcri	40	580	synth with cache (only 1: simpl_relation).	0.514015197754	343
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	synth with cache (only 1: discriminate).	0.0403368473053	3
Coq.nsatz.Nsatz.Qcri	40	1.0.0.0.0.192.131	synth with cache (only 1: intro H3; only 1: repeat red; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	11.5474090576	9859
Coq.nsatz.Nsatz.Qdi	40	256.384.0.960.642.320	synth with cache (only 1: assert (H : (1 + 1)%Z = 2%Z) by now Z.nzsimpl'; only 1: repeat split; only 1: fix gcd_greatest 1; only 1: intros; only 1: auto with real; only 1: easy || now destruct y).	12.3640041351	10779
Coq.nsatz.Nsatz.Z_one_zero	40	0.2	synth with cache (only 1: intro EQ; only 1: discriminate).	0.0720191001892	4
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0487289428711	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0653359889984	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.1	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.11860704422	248
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	synth with cache (only 1: now Z.nzsimpl).	0.463793039322	53
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0793378353119	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now destruct n).	0.0197229385376	1
Coq.omega.OmegaLemmas.new_var	40	641	synth with cache (only 1: eauto with *).	0.252019882202	103
Coq.omega.OmegaLemmas.OMEGA1	40	1.0	synth with cache (only 1: intros; only 1: Z.order).	0.0297200679779	3
Coq.omega.OmegaLemmas.OMEGA2	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0562350749969	4
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40	320.583	synth with cache (only 1: fix gcd_divide 1; only 1: now rewrite ?Pos.add_carry_spec, ?IHp).	4.36892294884	3894
Coq.omega.OmegaLemmas.OMEGA5	40	0.0.0.131.0.1.5	synth with cache (only 1: destruct x; only 1: simpl; only 1: intuition; only 1: subst; only 1: now Z.nzsimpl; only 1: easy || now destruct y; only 1: easy).	3.94484305382	10315
Coq.omega.OmegaLemmas.OMEGA6	40	0.3.136.5.192	synth with cache (only 1: intros a; only 1: intros H; only 1: rewrite H; only 1: Z.nzsimpl; only 1: trivial).	18.1199100018	24208
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	2.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: now Z.nzsimpl).	0.12291097641	5
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	3.81892108917	110
Coq.omega.OmegaLemmas.OMEGA15	40
Coq.omega.OmegaLemmas.OMEGA16	40	640.3	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: easy').	0.225440979004	55
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.181757926941	2
Coq.omega.OmegaLemmas.OMEGA18	40	384.65.964	synth with cache (only 1: intros H1 n H2; only 1: rewrite H2 in H1; only 1: auto with sets).	3.5104739666	4464
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0868279933929	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	65.64.3.132.576.0	synth with cache (only 1: intros; only 1: inversion H; only 1: destruct x; only 1: now split; only 1: easy || now destruct 1; only 1: let rec mul_permut := let rec mul_permut_rec := let rec mul_push := gen_mul_push rmul Rsth Reqe ARth in fun t => match t with | rmul ?x ?y => mul_permut_rec y || mul_permut_rec x | _ => mul_push t; apply (Rmul_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => mul_permut_rec t end in mul_permut).	3.30058598518	5019
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.128.323.0	synth with cache (only 1: intro; only 1: destruct x; only 1: now f_equal; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: reflexivity; only 1: subst; only 1: reflexivity).	1.53659796715	1955
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).	0.268265008926	252
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0591630935669	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0362820625305	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0608639717102	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0425620079041	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.0.450.448.0	synth with cache (only 1: revert q; only 1: intro Dec; only 1: constructor 1; only 1: apply Pos.eqb_eq; only 1: apply Pos.eqb_eq).	1.66524600983	1453
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	64.1.6	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intuition).	7.85662889481	4239
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40	193.6.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now f_equal).	2.77361011505	4602
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	5.0.192.66.3.261.5	synth with cache (only 1: split; only 1: case p; only 1: destr_bool; only 1: reflexivity; only 1: intros n m Hn; only 1: easy; only 1: now destruct 1).	21.971173048	20652
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40	321.1.129	synth with cache (only 1: revert n; only 1: fix even_spec 1; only 1: now Nat.nzsimpl).	0.212057828903	98
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	257.67	synth with cache (only 1: intros m; only 1: now destruct 1).	0.863806962967	256
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40	0.384.384.518.67	synth with cache (only 1: intro n; only 1: intro LT; only 1: intro H0; only 1: fix even_spec 1; only 1: Pos.solve_max).	19.5908541679	32482
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40	130.256.448.129.320.129	synth with cache (only 1: compute; only 1: intros s2; only 1: intros Hbf Hce Hdf; only 1: fix gcd_greatest 1; only 1: intros q; only 1: intuition).	11.5345101357	8865
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.funind.Recdef.le_lt_SS	40	387	synth with cache (only 1: auto with *).	0.0272169113159	28
Coq.funind.Recdef.Splus_lt	40	204	synth with cache (only 1: now intuition).	0.189368963242	628
Coq.funind.Recdef.SSplus_lt	40	257.0.0.0.0.0.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: firstorder).	0.0889468193054	36
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0284938812256	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	3	synth with cache (only 1: Z.order').	0.0677320957184	22
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.9	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	2.14414620399	1714
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0221381187439	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	257.1.193.320.321	synth with cache (only 1: intros b Hb IH; only 1: intro H1; only 1: intros a; only 1: intros; only 1: firstorder).	1.25970482826	1072
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0213730335236	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	65.129.453	synth with cache (only 1: intros n H; only 1: Bool.destr_bool; only 1: firstorder).	1.9190890789	3064
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0292088985443	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	65	synth with cache (only 1: now auto).	0.0287370681763	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	64.1.0.64.128.128	synth with cache (only 1: intros n m p; only 1: subst; only 1: unfold Basics.flip, respectful; only 1: intros; only 1: symmetry; only 1: auto with arith).	0.322705030441	33
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	7	synth with cache (only 1: eauto).	0.330352067947	184
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40	0.0.1.0.1.128.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in let rec norm := gen_srewrite_sr Rsth Reqe ARth in let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: now rewrite !IHp; only 1: simpl; only 1: now rewrite !IHp; only 1: simpl; only 1: trivial).	7.22301912308	482
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.920604944229	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.903593063354	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	130.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	1.47487092018	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	5.10184121132	373
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	16.4081931114	1643
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	577.578.385	synth with cache (only 1: constructor 1; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	8.92500686646	337
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	2.192.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: auto; only 1: now destruct 1).	10.2007598877	105
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	449	synth with cache (only 1: now Z.nzsimpl).	2.9569580555	52
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.027820110321	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0294940471649	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0254590511322	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	6	synth with cache (only 1: intuition).	1.44429111481	1689
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	64.0.768.64.0.0.5	synth with cache (only 1: destruct x; only 1: intros x y H7; only 1: reflexivity; only 1: intros q r; only 1: now rewrite <- ?N.succ_le_mono; only 1: intros x y H7; only 1: reflexivity || discriminate).	24.0750200748	5494
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	131.0.129	synth with cache (only 1: intros Hx; only 1: intros x y; only 1: now subst).	0.970067024231	737
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40	515	synth with cache (only 1: firstorder).	0.01802110672	36
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	194	synth with cache (only 1: easy').	0.0943050384521	15
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	66.449.1217	synth with cache (only 1: intro h'; only 1: intros Hb; only 1: apply Rmult_comm).	3.42517709732	2087
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0419251918793	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40	256.769.0.194.640.0.0.3.321	synth with cache (only 1: intro abs; only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: intro p; only 1: intuition; only 1: simpl; only 1: fix gcd_divide 1; only 1: now rewrite ?IHj).	6.34102416039	11163
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	synth with cache (only 1: reflexivity).	0.0217521190643	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	192	synth with cache (only 1: now auto).	0.0288050174713	13
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	65	synth with cache (only 1: firstorder).	0.0336928367615	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	77	synth with cache (only 1: easy').	0.77438211441	1133
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	455	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.434060096741	262
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.593	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	2.76948308945	2977
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	65.2	synth with cache (only 1: intros; only 1: firstorder).	0.361112833023	238
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	2.454	synth with cache (only 1: intros x y H; only 1: firstorder).	2.99344205856	4330
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	1.0.64	synth with cache (only 1: intro z; only 1: intros; only 1: auto).	0.0431289672852	32
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	3	synth with cache (only 1: firstorder).	0.0428528785706	13
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	64	synth with cache (only 1: firstorder).	0.029177904129	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0158760547638	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0201368331909	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	195	synth with cache (only 1: now f_equiv).	0.0357410907745	16
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	7	synth with cache (only 1: firstorder).	0.441644906998	260
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	8	synth with cache (only 1: firstorder).	4.26732206345	6713
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	4.128.451	synth with cache (only 1: intros y q u H; only 1: intros H'; only 1: firstorder).	4.0978770256	7225
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	69.64.68.450	synth with cache (only 1: intros Hy; only 1: intros a; only 1: intro LT; only 1: firstorder).	9.57421994209	5407
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	515.321.256	synth with cache (only 1: intros LTa LTb; only 1: intros n IH m H; only 1: firstorder).	2.40259790421	2270
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	129.320.256.196	synth with cache (only 1: intro H1; only 1: intros n m; only 1: intros Hnm Hpq; only 1: firstorder).	0.939218044281	469
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	70.578	synth with cache (only 1: intro LT; only 1: CRelationClasses.simpl_crelation).	2.19324302673	3818
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	896.65	synth with cache (only 1: intros a b; only 1: now intuition).	0.0541360378265	35
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	35	synth with cache (only 1: firstorder).	4.55585217476	5924
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	24	synth with cache (only 1: firstorder).	0.802093029022	2377
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0322949886322	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0338959693909	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	325.0.0.128.1.0	synth with cache (only 1: mrewrite; only 1: elim ARth; only 1: intros a Ha; only 1: elim ARth; only 1: intros; only 1: now f_equiv).	18.4567141533	11501
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0380680561066	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0366580486298	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0387721061707	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.2	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0697050094604	4
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	384.134	synth with cache (only 1: fix le_div2 1; only 1: now Z.nzsimpl).	6.75111722946	468
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	257.387	synth with cache (only 1: fix even_spec 1; only 1: N.auto').	1.25923204422	514
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	1.258.0	synth with cache (only 1: intros x y H; only 1: rewrite <- H; only 1: rrefl).	0.290923118591	104
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	192.193.65	synth with cache (only 1: intros m; only 1: fix le_div2 1; only 1: N.auto').	2.93828392029	1108
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0634529590607	1
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	68.130.512	synth with cache (only 1: intros a b; only 1: intros x y z; only 1: firstorder).	6.09647488594	2166
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0419430732727	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0384759902954	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0396039485931	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0310480594635	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	1.66175293922	357
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.2.0.4	synth with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: norm).	1.52829289436	778
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.042760848999	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0477659702301	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	81	synth with cache (only 1: exact (Ropp_ext Reqe)).	8.00428795815	6352
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0472359657288	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	322	synth with cache (only 1: easy).	0.169783115387	23
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	128.451.832.67.0.256	synth with cache (only 1: intros m H; only 1: apply Ncring_initial.Zsth; only 1: destruct H; only 1: now intuition; apply Z.lt_le_incl; only 1: CRelationClasses.simpl_crelation; only 1: eauto with *).	3.96260094643	2297
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	769.64.448	synth with cache (only 1: intros c Hc IH; only 1: CRelationClasses.simpl_crelation; only 1: firstorder).	0.670427799225	233
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	132.385	synth with cache (only 1: intros x; only 1: firstorder).	2.73697495461	1612
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	130.576.128.386.3.260.195	synth with cache (only 1: intros E1; only 1: intros H; only 1: elim ARth; only 1: intros k H1 H2; only 1: intros a Ha; only 1: intros n m p; only 1: simpl_relation).	6.77350997925	9489
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	65.385.833.132.768.192.448.320.5	synth with cache (only 1: constructor; only 1: now f_equal; only 1: now rewrite ?Hx; only 1: intros EQ; only 1: intros Hy; only 1: intros n m Hn H; only 1: etransitivity; only 1: PeanoNat.Nat.auto'; only 1: auto).	39.1966311932	36915
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	0.0.641.576	synth with cache (only 1: intros IH m H1 H2; only 1: elim H1; only 1: intros; only 1: now symmetry).	0.986496925354	162
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	513.2.321	synth with cache (only 1: intros a b Ha Hb; only 1: unfold Pequiv; only 1: CRelationClasses.simpl_crelation).	4.31313204765	1841
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	210	synth with cache (only 1: CRelationClasses.simpl_crelation).	2.38358402252	3126
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	196.129.640.517	synth with cache (only 1: case N.pos_div_eucl; only 1: now constructor; only 1: firstorder; only 1: CRelationClasses.simpl_crelation).	29.4483060837	18971
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40	192.256.770.65.129	synth with cache (only 1: intros EQ; only 1: intros Az LS; only 1: intros Hy; only 1: fix le_div2 1; only 1: tauto).	25.1957268715	5707
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.576.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: CRelationClasses.simpl_crelation; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	8.38011717796	1838
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	0.3.0.0.0.0.0.3.128.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intuition; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	37.6686930656	14512
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40	320.129.0.64.4	synth with cache (only 1: intros; only 1: f_equiv; only 1: revert P1; only 1: fix even_spec 1; only 1: eauto with *).	12.4815180302	2124
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40	1.128.449.1.512.576.65	synth with cache (only 1: intro He; only 1: intros (U, V); only 1: intro; only 1: simpl; only 1: fix gcd_divide 1; only 1: intro; only 1: trivial).	17.5845940113	6585
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40	2.321	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	2.45592284203	891
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	128.69.195.576	synth with cache (only 1: intro LE; only 1: compute; only 1: fix odd_spec 1; only 1: now simpl).	12.3224670887	36717
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.0199790000916	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	320.518	synth with cache (only 1: intros a b c Hb; only 1: firstorder).	5.21316719055	4508
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0610780715942	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.1.0.7.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	8.29881000519	12205
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	65.2.2.65	synth with cache (only 1: destr_bool; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: rewrite H1; only 1: easy).	1.87846302986	1120
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0182278156281	1
Coq.setoid_ring.Rings_Q.Qdi	40	1.2.512.257.8.1	synth with cache (only 1: constructor; only 1: unfold Qplus, Qle, Qlt; only 1: intro LE; only 1: fix gcd_divide 1; only 1: trivial; only 1: discriminate).	33.647400856	28333
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.0131559371948	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	synth with cache (only 1: unlock; only 1: discriminate).	0.0721340179443	38
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.0147190093994	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	2.9	synth with cache (only 1: destruct 1; only 1: auto).	0.364034891129	901
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0164170265198	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.014643907547	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2	synth with cache (only 1: intuition).	0.028913974762	3
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0167510509491	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0108659267426	1
Coq.ssr.ssrbool.is_true_true	40	128	synth with cache (only 1: exact (erefl _)).	0.00659418106079	9
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: discriminate).	0.00714778900146	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.00923299789429	2
Coq.ssr.ssrbool.negbT	40	0.1.0	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0123128890991	4
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.00838088989258	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.00928997993469	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.00873422622681	1
Coq.ssr.ssrbool.negbK	40	1.153	synth with cache (only 1: intro p; only 1: Bool.destr_bool).	0.27439904213	1203
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.00690102577209	1
Coq.ssr.ssrbool.negb_inj	40	0.69	synth with cache (only 1: intro z; only 1: Bool.destr_bool).	0.0343759059906	59
Coq.ssr.ssrbool.negbLR	40	6	synth with cache (only 1: Bool.destr_bool).	0.0445690155029	52
Coq.ssr.ssrbool.negbRL	40	8	synth with cache (only 1: Bool.destr_bool).	0.147434949875	129
Coq.ssr.ssrbool.contra	40	7.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	1.09633803368	3294
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0118680000305	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0115489959717	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.011962890625	1
Coq.ssr.ssrbool.contraT	40	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.567953109741	982
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.0094211101532	1
Coq.ssr.ssrbool.contraFT	40	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.745933055878	918
Coq.ssr.ssrbool.contraFN	40	2.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.696496963501	621
Coq.ssr.ssrbool.contraTF	40	2.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.571606874466	579
Coq.ssr.ssrbool.contraNF	40	2.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.649652957916	670
Coq.ssr.ssrbool.contraFF	40	0.2.74	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).	0.87203001976	1731
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0.23	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).	0.363667011261	907
Coq.ssr.ssrbool.BoolIf.ifT	40	2	synth with cache (only 1: by case : b ).	0.0121650695801	3
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.00649094581604	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0110039710999	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.00726819038391	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	2	synth with cache (only 1: by case b).	0.00779294967651	3
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.0070469379425	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.0075159072876	1
Coq.ssr.ssrbool.BoolIf.ifE	40	129	synth with cache (only 1: exact (erefl _)).	0.0129208564758	10
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0105741024017	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0103590488434	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.00714898109436	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	1.1.192	synth with cache (only 1: inversion 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.0246150493622	17
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40	197.74.129.199	synth with cache (only 1: destruct b; only 1: intros n m; only 1: auto with bool; only 1: auto with bool).	16.0038640499	6280
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.130	synth with cache (only 1: induction 1; only 1: by case : Pb ; constructor; auto).	0.0178189277649	12
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	0.0.72	synth with cache (only 1: repeat split; only 1: exact : introTF true _ ; only 1: exact : elimTF true _ ).	0.121423959732	222
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	65.135	synth with cache (only 1: inversion 1; only 1: intuition).	0.117205858231	251
Coq.ssr.ssrbool.impliesPn	40	64.130.130	synth with cache (only 1: inversion 1; only 1: intro z; only 1: tauto).	0.104303121567	129
Coq.ssr.ssrbool.unlessL	40	6.65.66.3	synth with cache (only 1: repeat split; only 1: intro z; only 1: intro p; only 1: auto).	0.302505970001	1002
Coq.ssr.ssrbool.unlessR	40	0.193.197.3	synth with cache (only 1: repeat split; only 1: intro p; only 1: intros H x0; only 1: intuition).	0.124096870422	406
Coq.ssr.ssrbool.unless_sym	40	64.1.8.129.66.202.5	synth with cache (only 1: split; only 1: intros H ?; only 1: intro p; only 1: intuition; only 1: apply H; only 1: auto; only 1: intuition).	2.60129499435	16961
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40	4.4.198.201.71.136	synth with cache (only 1: constructor; only 1: intro; only 1: intros A P; only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	10.3214159012	47502
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.0.130.136	synth with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: intuition; only 1: intuition).	0.108114004135	324
Coq.ssr.ssrbool.classic_bind	40	10.194.64.128.72.194.208	synth with cache (only 1: intro p; only 1: intros H ?; only 1: intuition; only 1: apply H; only 1: intro x; only 1: Bool.destr_bool; only 1: intuition).	23.528826952	119360
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.0.0.0.0.0.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.0291340351105	44
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0101008415222	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0112788677216	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0128839015961	1
Coq.ssr.ssrbool.pair_andP	40	6	synth with cache (only 1: intuition).	0.0267100334167	71
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.00703310966492	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.00550985336304	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.00915193557739	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0053608417511	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.00587797164917	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0105051994324	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.00920915603638	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.007493019104	1
Coq.ssr.ssrbool.andTb	40	0.65	synth with cache (only 1: red; only 1: reflexivity).	0.00918817520142	7
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.00440001487732	1
Coq.ssr.ssrbool.andbT	40	2.64	synth with cache (only 1: intro x; only 1: Bool.destr_bool).	0.0116400718689	8
Coq.ssr.ssrbool.andbF	40	69	synth with cache (only 1: by case).	0.017637014389	48
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.00623798370361	1
Coq.ssr.ssrbool.andbC	40	0.75	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.164517879486	394
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.00594615936279	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.00748991966248	1
Coq.ssr.ssrbool.andbAC	40	1	synth with cache (only 1: by do 3!case).	0.0117609500885	2
Coq.ssr.ssrbool.andbACA	40	0.69	synth with cache (only 1: intro z; only 1: Bool.destr_bool).	0.0274560451508	59
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.00550699234009	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.0050311088562	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.00904011726379	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.00550198554993	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.00633907318115	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.00673294067383	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.00835204124451	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.00902795791626	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.00908088684082	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.012717962265	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.00727510452271	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.00637578964233	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0772180557251	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.00694298744202	1
Coq.ssr.ssrbool.andb_orl	40	1.65	synth with cache (only 1: case  =>// undecP; only 1: Bool.destr_bool).	0.0167961120605	8
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by case).	0.00638198852539	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.00934481620789	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.00906205177307	1
Coq.ssr.ssrbool.andb_idl	40	0.0.68.7	synth with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: by [  ]; only 1: now constructor).	0.172083854675	421
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0107960700989	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0114908218384	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0142030715942	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0108580589294	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0103480815887	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0146811008453	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0149049758911	1
Coq.ssr.ssrbool.negb_and	40	0	synth with cache (only 1: Bool.destr_bool).	0.00962591171265	1
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00822520256042	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00756216049194	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00762796401978	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0074520111084	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00740694999695	1
Coq.ssr.ssrbool.implybT	40	0	synth with cache (only 1: by case : b ).	0.00632381439209	1
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.0246429443359	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.00591707229614	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.00642800331116	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.00548982620239	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00745797157288	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00752305984497	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0076470375061	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00769805908203	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0075740814209	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0101659297943	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0108389854431	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0144550800323	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.00568890571594	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.00555205345154	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.00752401351929	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.00675797462463	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.00865006446838	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.00903582572937	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.00947093963623	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0130300521851	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.00886607170105	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.00936508178711	1
Coq.ssr.ssrbool.addKb	40	1	synth with cache (only 1: by do 2!case).	0.00978899002075	2
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.00697493553162	1
Coq.ssr.ssrbool.addIb	40	1	synth with cache (only 1: by do 3!case).	0.0122060775757	2
Coq.ssr.ssrbool.addbI	40	2	synth with cache (only 1: by do 3!case).	0.0129988193512	3
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.00680303573608	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.0840010643005	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00753116607666	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.00812792778015	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.67	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.0911548137665	106
Coq.ssr.ssrbool.subrelUl	40	67.64.4.192	synth with cache (only 1: intro A; only 1: intro p; only 1: simpl in *; only 1: by move ->).	0.165066957474	374
Coq.ssr.ssrbool.subrelUr	40	2.75.193.194.13.195	synth with cache (only 1: intro A; only 1: simpl; only 1: intros H; only 1: inversion 1; only 1: red; only 1: intuition).	5.64036893845	28601
Coq.ssr.ssrbool.sub_refl	40	1.134	synth with cache (only 1: inversion 1; only 1: intuition).	0.0410168170929	152
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.00776505470276	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.0080931186676	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.00782585144043	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	synth with cache (only 1: by [  ]).	0.00518107414246	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0	synth with cache (only 1: by [  ]).	0.00567412376404	1
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.00616097450256	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	synth with cache (only 1: reflexivity).	0.00650382041931	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.131	synth with cache (only 1: intuition; only 1: by [  ]).	0.0486190319061	33
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.00764584541321	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.00822019577026	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	128.68.194	synth with cache (only 1: intros H; only 1: simpl in *; only 1: intuition).	0.144647836685	256
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0148150920868	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.00829315185547	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.00734686851501	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0107488632202	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0110268592834	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.00789189338684	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.00796794891357	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.00814199447632	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.01478099823	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0154459476471	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.00859117507935	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0157589912415	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0109720230103	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	3	synth with cache (only 1: by move  =>? ?; auto).	0.0203728675842	4
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	5.259.70.64.65.64.265	synth with cache (only 1: intros H x0; only 1: intro p; only 1: intuition; only 1: subst; only 1: rewrite H; only 1: by split => hP G _ /(_ hP); only 1: by [  ]).	7.1874320507	17260
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	260.64.139.130.67.141	synth with cache (only 1: intro H; only 1: inversion 1; only 1: inversion 1; only 1: rewrite H; only 1: reflexivity || destruct H; only 1: apply H0).	15.7178790569	44994
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0127081871033	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0104150772095	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0110931396484	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0111401081085	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0157558917999	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.015328168869	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.70	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.189828872681	231
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0171811580658	1
Coq.ssr.ssrbool.sub_in2	40	260.128.1.67.64	synth with cache (only 1: intros n m; only 1: red; only 1: move  =>f0 fP; only 1: intro A; only 1: auto with bool).	0.702688932419	1847
Coq.ssr.ssrbool.sub_in3	40	128.257.256.14	synth with cache (only 1: red; only 1: intros H ?; only 1: intros ? ? ? Fl Fr; only 1: by move  =>? ?; auto).	0.486451864243	1138
Coq.ssr.ssrbool.sub_in12	40	0.68	synth with cache (only 1: intro z; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.122852802277	57
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.00831484794617	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	4	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0273449420929	46
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0454301834106	86
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.00873208045959	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	257.128.128.128.197.132.128	synth with cache (only 1: intros P b H H0; only 1: symmetry; only 1: destruct H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: auto with bool).	1.52354812622	3522
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00770115852356	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0150971412659	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0153548717499	2
Coq.ssr.ssrfun.unitE	40	0.3.133.198	synth with cache (only 1: intro p; only 1: unfold not; only 1: destruct p; only 1: tauto).	0.287982940674	1398
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	2	synth with cache (only 1: split).	0.00960397720337	3
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.9	synth with cache (only 1: intros; only 1: by [  ]).	0.0585150718689	158
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	2.0	synth with cache (only 1: intros H ?; only 1: split).	0.00854110717773	4
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0138669013977	1
Coq.ssr.ssrfun.Sig.svalP	40	2	synth with cache (only 1: apply proj2_sig).	0.00626301765442	3
Coq.ssr.ssrfun.Sig.s2valP	40
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.00725698471069	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0111560821533	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0146701335907	1
Coq.ssr.ssrfun.Injections.can_pcan	40	1.44.64.15	synth with cache (only 1: red; only 1: intros H H'; only 1: rewrite H; only 1: reflexivity).	14.6008729935	113378
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.00899696350098	2
Coq.ssr.ssrfun.Injections.canLR	40	1.70.64	synth with cache (only 1: intro z; only 1: inversion 1; only 1: trivial).	0.120186090469	381
Coq.ssr.ssrfun.Injections.canRL	40	7.2	synth with cache (only 1: destruct 2; only 1: auto).	0.253237962723	821
Coq.ssr.ssrfun.Some_inj	40	64.137.2.131	synth with cache (only 1: intro; only 1: Bool.destr_bool; only 1: inversion_clear H; only 1: intuition).	1.09841585159	3353
Coq.ssr.ssrfun.of_voidK	40	0.128	synth with cache (only 1: intros H; only 1: destruct H).	0.0110900402069	10
Coq.ssr.ssrfun.esymK	40	0.0.43	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.650620937347	4691
Coq.ssr.ssrfun.etrans_id	40	0.13	synth with cache (only 1: subst; only 1: reflexivity).	0.0646550655365	312
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	67.65	synth with cache (only 1: intros Hfst Hsnd; only 1: Bool.destr_bool).	0.0398128032684	103
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	6.86	synth with cache (only 1: red; only 1: auto).	1.51530504227	7062
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	8.193	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: auto).	0.205060958862	504
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	5.68.8.69.70.71.69	synth with cache (only 1: intro H; only 1: intro H1; only 1: intros n m; only 1: apply H; only 1: simpl; only 1: destruct m; only 1: trivial).	13.9076709747	64174
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40	68.68.20	synth with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).	0.310057878494	1551
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0117259025574	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	1	synth with cache (only 1: auto).	0.0115520954132	2
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: now trivial).	0.00980806350708	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.0100300312042	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.00895690917969	1
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40	1.704.770.256.5	synth with cache (only 1: apply Fin.rect2; only 1: RelationClasses.simpl_relation; only 1: intros m IH H; only 1: fix gcd_greatest 1; only 1: eauto).	7.89452004433	12501
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	449.64	synth with cache (only 1: intros a b n Ha; only 1: congruence).	0.135852098465	179
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	322.0	synth with cache (only 1: intros; only 1: now try PeanoNat.Nat.order').	0.03093791008	19
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.449.576.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: Bool.destr_bool; only 1: now try PeanoNat.Nat.order'; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	7.09802484512	1665
Coq.Vectors.VectorSpec.uncons_cons	40	64	synth with cache (only 1: auto with *).	0.0210468769073	5
Coq.Vectors.VectorSpec.append_comm_cons	40	2.0	synth with cache (only 1: intros; only 1: now simpl).	0.0356719493866	24
Coq.Vectors.VectorSpec.splitat_append	40	2.320.386.7	synth with cache (only 1: intros n Hn; only 1: fix odd_spec 1; only 1: intro H1; only 1: now simpl).	35.4000668526	18165
Coq.Vectors.VectorSpec.append_splitat	40	256.0.261.64.131	synth with cache (only 1: intro UIP; only 1: intros c Hc IH; only 1: fix odd_spec 1; only 1: intros; only 1: firstorder).	13.6539878845	7755
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40	192.195	synth with cache (only 1: fix le_div2 1; only 1: now rewrite ?Ha).	0.0990419387817	65
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	384.513.1.192.454.0.79	synth with cache (only 1: destruct m as [| m]; only 1: now PeanoNat.Nat.nzsimpl; only 1: induction n; only 1: intuition; only 1: simpl; only 1: compute; only 1: constructor).	27.3857131004	39087
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	1.448.193	synth with cache (only 1: intros a b H; only 1: fix gcd_divide 1; only 1: easy).	0.355306148529	317
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	385.129.0.768	synth with cache (only 1: intros b LT; only 1: intros; only 1: destruct H; only 1: now rewrite ?Hx).	0.103386878967	148
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.0139141082764	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0176870822906	2
Coq.Setoids.Setoid.Seq_trans	40	2.0.0.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0496628284454	27
Coq.Setoids.Setoid.gen_st	40	4	synth with cache (only 1: simpl_relation).	0.0205099582672	21
Coq.Bool.IfProp.Iftrue_inv	40	0.0.67.0	synth with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: tauto; only 1: discriminate).	0.071573972702	108
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0254111289978	6
Coq.Bool.IfProp.IfProp_true	40	1.72	synth with cache (only 1: inversion 1; only 1: auto with bool).	0.555411100388	1614
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0369799137115	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0317239761353	21
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	67	synth with cache (only 1: now induction n).	0.506625890732	127
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0451381206512	3
Coq.Bool.Zerob.zerob_false_intro	40	0.512.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: intuition Nat.order; only 1: trivial).	0.434715986252	21
Coq.Bool.Zerob.zerob_false_elim	40	321.0.0.0	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: easy || now destruct 1).	0.440793991089	20
Coq.Bool.DecBool.ifdec_left	40	0.0.1.2.6.3	synth with cache (only 1: unfold not; only 1: destruct H; only 1: reflexivity; only 1: intros H ?; only 1: destruct H; only 1: assumption).	3.5417599678	10211
Coq.Bool.DecBool.ifdec_right	40	0.0.130.64.0.0.6	synth with cache (only 1: unfold not; only 1: intros; only 1: case H; only 1: symmetry; only 1: destruct H0 in H; only 1: trivial; only 1: auto).	7.03912091255	11876
Coq.Bool.Sumbool.sumbool_of_bool	40	2.73.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: right; only 1: repeat split).	0.765022993088	4799
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.116067886353	198
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0177791118622	3
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0283961296082	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0258059501648	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	synth with cache (only 1: discriminate).	0.00888800621033	3
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00859808921814	1
Coq.Bool.Bool.eq_true_false_abs	40	1.2.1.1.132.69	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).	0.67729306221	2373
Coq.Bool.Bool.not_true_is_false	40	2.6.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.267830133438	568
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0177791118622	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.2.69	synth with cache (only 1: intro H1; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.617048978806	1114
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0229659080505	3
Coq.Bool.Bool.leb_implb	40	2.0.2.0.128.0.128.0.2	synth with cache (only 1: destr_bool; only 1: split; only 1: symmetry; only 1: intuition; only 1: symmetry; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.978972196579	1780
Coq.Bool.Bool.eqb_subst	40	1.3	synth with cache (only 1: intro x; only 1: destr_bool).	0.0696539878845	81
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.0120241641998	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.0122511386871	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0275168418884	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0695829391479	36
Coq.Bool.Bool.negb_orb	40	3	synth with cache (only 1: destr_bool).	0.0279920101166	14
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.0137329101562	1
Coq.Bool.Bool.negb_involutive	40	2	synth with cache (only 1: destr_bool).	0.0134830474854	3
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.0128929615021	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.0126628875732	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.0140378475189	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.011647939682	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.0115218162537	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.0114951133728	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0184960365295	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0192201137543	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.171068906784	104
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.036924123764	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0294899940491	5
Coq.Bool.Bool.orb_prop	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0797138214111	51
Coq.Bool.Bool.orb_true_intro	40	1.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.340315818787	356
Coq.Bool.Bool.orb_false_intro	40	2	synth with cache (only 1: destr_bool).	0.0479090213776	27
Coq.Bool.Bool.orb_false_elim	40	0.0.64.129.0.1	synth with cache (only 1: destruct b1; only 1: simpl; only 1: intro p; only 1: inversion 1; only 1: simpl; only 1: auto).	0.251014947891	253
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.0126810073853	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0112318992615	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.011430978775	1
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0117027759552	2
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0116062164307	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0113220214844	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.0147299766541	1
Coq.Bool.Bool.orb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0186839103699	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0339691638947	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.03533411026	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.183497905731	134
Coq.Bool.Bool.andb_false_intro1	40	1.1.0	synth with cache (only 1: destruct b1; only 1: destr_bool; only 1: destr_bool).	0.0399210453033	26
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0174660682678	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.0115220546722	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0116498470306	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.0119228363037	1
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.0114431381226	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.0116539001465	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.2	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0566301345825	37
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.0116651058197	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.0133309364319	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0187301635742	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0173141956329	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0172848701477	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0181579589844	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.0404419898987	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.0138509273529	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.0139560699463	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0133209228516	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0132749080658	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0120720863342	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.0107510089874	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.0113279819489	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.014965057373	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.0175740718842	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.0162258148193	1
Coq.Bool.Bool.xorb_move_l_r_1	40	1	synth with cache (only 1: destr_bool).	0.0247528553009	11
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0195550918579	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.0202209949493	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.020663022995	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.0137190818787	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0265901088715	5
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.0137660503387	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0429182052612	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.0.0.0.0.0.0.2.0.0.1	synth with cache (only 1: destruct b1; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intros [? ?]; only 1: intuition; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intros [? ?]; only 1: intuition).	0.534926891327	609
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0173041820526	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0168800354004	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0228500366211	5
Coq.Bool.Bool.absurd_eq_true	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0179119110107	3
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.0181329250336	1
Coq.Bool.Bool.Is_true_eq_true	40	1.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.0181729793549	4
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.0135819911957	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0181381702423	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.0129098892212	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.021989107132	3
Coq.Bool.Bool.orb_prop_elim	40	1.0.4.0.4.4.0.2	synth with cache (only 1: destr_bool; only 1: left; only 1: apply H; only 1: intuition; only 1: left; only 1: apply H; only 1: left; only 1: apply H).	4.3269970417	15375
Coq.Bool.Bool.orb_prop_intro	40	0.2.0.0.0.3	synth with cache (only 1: destruct a, b; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: simpl; only 1: tauto).	0.293423175812	335
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0702159404755	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0749480724335	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0245881080627	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0222489833832	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0177931785583	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0153260231018	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0155980587006	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0180959701538	3
Coq.Bool.Bool.andb_if	40	1	synth with cache (only 1: destr_bool).	0.0166261196136	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.0117449760437	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0142018795013	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.0101299285889	1
Coq.Bool.Bool.reflect_iff	40	3.0.0.0.2.12	synth with cache (only 1: red; only 1: intros A B []; only 1: auto; only 1: repeat split; only 1: intuition; only 1: discriminate).	3.52864599228	11006
Coq.Bool.Bool.iff_reflect	40	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0735130310059	63
Coq.Bool.Bool.reflect_dec	40	0.3.0.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).	0.0672171115875	79
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0254690647125	6
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).	0.0894191265106	76
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	131.0.0.0.0.128.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: CRelationClasses.simpl_crelation; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	1.67233896255	1392
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	448.0.2.513.64.192.64.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: now try PeanoNat.Nat.order'; only 1: induction x; only 1: intros l m n; only 1: fix le_div2 1; only 1: red; only 1: auto with datatypes; only 1: intuition PeanoNat.Nat.order).	4.9241809845	5992
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	64.0.0.1.1.64.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: firstorder; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: firstorder).	14.0221810341	12967
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	64.2.0.64.0.0.0.0.3.0.0.0.64.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: red; only 1: trivial; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: red; only 1: intro; only 1: firstorder; only 1: intro; only 1: intro; only 1: firstorder).	25.6013309956	36707
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	1.0.128.65.0.64.384.66.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intro; only 1: pattern a; only 1: intros H; only 1: elim (Aeq_dec a a0); only 1: intros N; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym; only 1: unfold not; only 1: auto with datatypes).	15.7878899574	16168
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	4	synth with cache (only 1: intuition).	1.00377297401	1009
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	1.09585499763	788
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	128.128.128.1.0.0.384.1	synth with cache (only 1: simple induction x; only 1: now try PeanoNat.Nat.order'; only 1: simpl; only 1: intros a0 l; only 1: case (Aeq_dec a a0); only 1: now induction l; only 1: red; only 1: now simpl).	1.25215911865	729
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.1.448.0.64.64.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: intro Hxz; only 1: intuition; only 1: simpl; only 1: intro n; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	1.0956029892	770
Coq.Lists.ListSet.first_definitions.set_union_intro	40	64.0.0.0.0.640.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: easy || now destruct 1; only 1: simpl; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: firstorder).	0.369338035583	93
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.576.1	synth with cache (only 1: simple induction x; only 1: now PeanoNat.Nat.nzsimpl'; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	1.28615999222	882
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0467278957367	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40	0.0.0.448.128.0.0.0.0.0.0.0.128.0	synth with cache (only 1: simple induction x; only 1: eauto; only 1: simpl; only 1: intros a0 l Hrec y; only 1: generalize (set_mem_correct1 a0 y); only 1: elim (set_mem a0 y); only 1: simpl; only 1: intros; only 1: elim H0; only 1: firstorder; only 1: congruence; only 1: eauto with datatypes; only 1: intros; only 1: eauto with datatypes).	2.93270301819	1602
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.2.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	3.2099750042	3210
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.4.0.321.0.256	synth with cache (only 1: induction l as [| a tail]; only 1: simpl in *; only 1: red; only 1: tauto; only 1: simpl; only 1: intuition).	27.6631250381	11689
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40	64.512.2.0.192.1.2.256.2.0.0.3	synth with cache (only 1: exists nil; only 1: split; only 1: now constructor; only 1: rewrite <- (firstn_all (A:=l))  at 1; only 1: intros Hab; only 1: destruct l as [| x l]; only 1: simpl; only 1: intros H; only 1: intuition; only 1: simpl; only 1: fix gcd_divide 1; only 1: tauto).	27.0894780159	40109
Coq.Lists.Streams.Streams.unfold_Stream	40	0.18.15	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	1.13840484619	6800
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.0.0.7	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	2.00130414963	3320
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	0.0.1.3.1.4.66.130.1.4	synth with cache (only 1: intro x; only 1: case x; only 1: intros Hfst Hsnd; only 1: destruct 1; only 1: case x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: trivial with datatypes; only 1: assumption; only 1: assumption).	16.4653151035	13883
Coq.Lists.Streams.Streams.trans_EqSt	40	2.0.128.0.0.0.65.0.0.0.0.0.0.128.0.0.0.2.65.129	synth with cache (only 1: inversion 1; only 1: inversion 1; only 1: case H; only 1: intros; only 1: case H; only 1: intros; only 1: destruct H0 in H; only 1: case H; only 1: intros; only 1: case H; only 1: intros; only 1: case H; only 1: intros; only 1: coinduction ltac:(Eq_sym); only 1: case H; only 1: intros; only 1: case H; only 1: induction 1; only 1: intros; only 1: assumption).	38.9513299465	15625
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	7.8.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	17.6181461811	1194
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0443239212036	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0312221050262	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.65.0.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros s; only 1: intros [Hl Hr]; only 1: apply IHn).	0.236994028091	120
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.262058019638	86
Coq.Lists.List.Facts.nil_cons	40	451.320	synth with cache (only 1: intros H1 H2 H3; only 1: easy).	0.174739837646	440
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	67.0.320	synth with cache (only 1: fix odd_spec 1; only 1: intros a r; only 1: CRelationClasses.simpl_crelation).	0.30743598938	398
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.0.0.4.3.194	synth with cache (only 1: compute; only 1: destruct l; only 1: split; only 1: auto; only 1: reflexivity; only 1: firstorder  discriminate).	1.58547592163	5828
Coq.Lists.List.Facts.hd_error_nil	40	1	synth with cache (only 1: firstorder  discriminate).	0.0128607749939	2
Coq.Lists.List.Facts.hd_error_cons	40	2.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).	0.0206379890442	4
Coq.Lists.List.Facts.in_eq	40	0.0	synth with cache (only 1: intros a r; only 1: firstorder  discriminate).	0.0209000110626	2
Coq.Lists.List.Facts.in_cons	40	65.321.0.0	synth with cache (only 1: destruct l as [| x xs]; only 1: firstorder  discriminate; only 1: repeat red; only 1: firstorder).	0.0609850883484	39
Coq.Lists.List.Facts.not_in_cons	40	0.192.321.0.3	synth with cache (only 1: simpl in *; only 1: split; only 1: intros H'; only 1: firstorder; only 1: intuition).	0.549233198166	880
Coq.Lists.List.Facts.in_nil	40	2.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: firstorder).	0.0222539901733	5
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0126140117645	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	386.64.0	synth with cache (only 1: simpl; only 1: intros a; only 1: Morphisms.solve_proper).	0.0325870513916	26
Coq.Lists.List.Facts.app_nil_r	40	261.2.0.0.7.64	synth with cache (only 1: intro; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now Morphisms.f_equiv).	8.37730503082	11183
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.610794067383	553
Coq.Lists.List.Facts.app_assoc	40	64.64.70	synth with cache (only 1: fix gcd_divide 1; only 1: intros Az RS; only 1: intuition).	5.23730492592	18960
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0518231391907	7
Coq.Lists.List.Facts.app_comm_cons	40	0	synth with cache (only 1: auto using app_assoc).	0.0158331394196	1
Coq.Lists.List.Facts.app_eq_nil	40	0.0.128.128	synth with cache (only 1: intros [| a] b; only 1: easy || now destruct 1; only 1: simpl; only 1: inversion 1).	0.0784249305725	71
Coq.Lists.List.Facts.app_eq_unit	40	385.323.322	synth with cache (only 1: intros a n H; only 1: fix even_spec 1; only 1: intuition Nat.order).	10.6664969921	21623
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	128.0.0.320.1.256.0	synth with cache (only 1: destruct l as [| x l]; only 1: auto with *; only 1: intros; only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: reflexivity; only 1: CRelationClasses.simpl_crelation).	0.581210136414	783
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	0.0.449.1.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: intros n Hn; only 1: simpl; only 1: intuition).	2.04320001602	4424
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.app_inv_head	40	128.129.0.192.1.0.3	synth with cache (only 1: destruct l as [| x l]; only 1: simpl; only 1: now symmetry; only 1: intro n; only 1: simpl; only 1: fix even_spec 1; only 1: assumption).	3.84001398087	1348
Coq.Lists.List.Facts.app_inv_tail	40	1.264	synth with cache (only 1: fix even_spec 1; only 1: auto).	4.22974300385	6089
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.1	synth with cache (only 1: intros n l d; only 1: simpl; only 1: auto).	0.0260670185089	4
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	0.448.4.128.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: intros RS' n; only 1: intros [| ] ?; only 1: now elim H; only 1: auto with arith).	28.1498301029	7720
Coq.Lists.List.Elts.app_nth2	40	0.0.129.0.0.0.512.0.1.384.0.0.1	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: induction 1; only 1: auto; only 1: auto with arith; only 1: revert a; only 1: intros y H0 H1; only 1: destruct n; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: auto with arith).	6.72940897942	3219
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40	257.392.3	synth with cache (only 1: revert n; only 1: fix gcd_divide 1; only 1: intuition Nat.Private_Tac.order).	3.36403298378	9817
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40	128.257.194.512.64.0.0.0.1.0.1.0.0	synth with cache (only 1: revert n; only 1: induction l; only 1: simpl; only 1: destruct n; only 1: easy; only 1: simpl; only 1: split; only 1: intro H; only 1: now f_equal; only 1: Tactics.program_simpl; only 1: inversion H; only 1: fix le_div2 1; only 1: firstorder).	11.2164161205	13311
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	2.385.4.0	synth with cache (only 1: revert l; only 1: revert n; only 1: fix gcd_greatest 1; only 1: auto).	19.5776760578	32296
Coq.Lists.List.Elts.nth_error_nth	40	0.64.257	synth with cache (only 1: fix le_div2 1; only 1: intros m a b Ha Hb; only 1: auto with arith).	0.206372022629	263
Coq.Lists.List.Elts.nth_error_nth'	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	2.0	synth with cache (only 1: simpl; only 1: split).	0.0204029083252	4
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0267839431763	3
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.3.576	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto).	0.173532962799	459
Coq.Lists.List.ListOps.rev_involutive	40	65.705.2.0.1.6.0.256.6	synth with cache (only 1: induction l; only 1: destr_bool; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: auto; only 1: generalize (app_nil_r (A:=l)); only 1: fix even_spec 1; only 1: trivial).	37.7033162117	98684
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40	1.580.64	synth with cache (only 1: intros Hfst Hsnd; only 1: fix gcd_divide 1; only 1: auto).	8.82032895088	7018
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40	1.0.65	synth with cache (only 1: fix le_div2 1; only 1: intro y; only 1: firstorder).	0.0698549747467	77
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	64.3.0.65.3	synth with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: trivial; only 1: simpl in *; only 1: intuition).	4.15031886101	15834
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0	synth with cache (only 1: split).	0.0116910934448	1
Coq.Lists.List.ListOps.concat_cons	40	0.0.0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: intro y; only 1: simpl; only 1: trivial).	0.0420391559601	7
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40
Coq.Lists.List.Map.map_cons	40	128	synth with cache (only 1: now Nat.nzsimpl').	0.0269980430603	9
Coq.Lists.List.Map.in_map	40
Coq.Lists.List.Map.in_map_iff	40	1.2.0.0.133.0.0.0	synth with cache (only 1: induction l; only 1: intro n; only 1: firstorder  (subst; auto); only 1: symmetry; only 1: intuition; only 1: firstorder  (subst; auto); only 1: simpl in *; only 1: firstorder).	8.59906291962	20598
Coq.Lists.List.Map.map_length	40	1.256.0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: Nat.bitwise; only 1: auto).	0.0497779846191	27
Coq.Lists.List.Map.map_nth	40	0.0.0.1.386.0.0.1.64.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros a n; only 1: induction n; only 1: trivial; only 1: trivial; only 1: intro LT; only 1: intros [| n]; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	7.36155390739	18683
Coq.Lists.List.Map.map_nth_error	40	0.256.260	synth with cache (only 1: intro m; only 1: fix even_spec 1; only 1: auto).	16.5697851181	24653
Coq.Lists.List.Map.map_app	40	833.128.0.0.1.1	synth with cache (only 1: induction l; only 1: intros l2; only 1: simpl; only 1: reflexivity; only 1: fix odd_spec 1; only 1: now intuition).	0.340379953384	661
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	193.0.1.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool).	0.213431835175	308
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	1.0.0.0.0.1.65	synth with cache (only 1: intros n m; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	1.54742598534	1182
Coq.Lists.List.concat_map	40	1.129.192.69	synth with cache (only 1: intros Hab; only 1: intros a Ha; only 1: fix le_div2 1; only 1: auto).	25.7067608833	33168
Coq.Lists.List.map_id	40	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0377640724182	7
Coq.Lists.List.map_map	40	448.0.0.0.0.0.384.258	synth with cache (only 1: intros m Hm; only 1: intros n IH; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: easy).	1.53831195831	1078
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40	2.66.64.320.512.384.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intro LE; only 1: induction 1; only 1: intro H1; only 1: CRelationClasses.simpl_crelation; only 1: firstorder; only 1: firstorder  (subst; auto)).	9.04379606247	8926
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	384.1.0.0.2.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: now rewrite <- H).	0.406157016754	390
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	258.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: Nat.auto').	0.0387032032013	19
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.0.2.66.0.0.0.0.514	synth with cache (only 1: intros H; only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: intros LT; only 1: intros; only 1: rewrite IHl; only 1: reflexivity).	3.00007915497	6940
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40	128.384.130.513	synth with cache (only 1: intros a; only 1: intros x y; only 1: fix le_div2 1; only 1: auto with sets).	17.8864102364	12501
Coq.Lists.List.Bool.existsb_app	40	0.576.256	synth with cache (only 1: intros H; only 1: fix gcd_divide 1; only 1: auto).	0.0918321609497	130
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.593902826309	743
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40	0.1.128.129.65.1.0.1	synth with cache (only 1: firstorder; only 1: simpl; only 1: case_eq (f a); only 1: elim H0; only 1: inversion H; only 1: fix odd_spec 1; only 1: easy; only 1: intuition congruence).	2.37980508804	2879
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0215418338776	2
Coq.Lists.List.Bool.partition_length	40	0.384.641.321.512.0.256.64.0.67.1.1.0.1.0.1	synth with cache (only 1: revert l1 l2 l; only 1: intros l l1 l2; only 1: revert l1 l2 l; only 1: intros l l1 l2; only 1: revert l1 l2 l; only 1: induction l1 as [| x1 l1]; only 1: intro n; only 1: induction l; only 1: inversion 1; only 1: eauto; only 1: simpl; only 1: discriminate; only 1: intro p; only 1: intros n; only 1: fix even_spec 1; only 1: auto).	39.4301769733	81621
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40	193.3.64.576.450	synth with cache (only 1: intros m; only 1: intro; only 1: fix even_spec 1; only 1: intros; only 1: easy).	3.74725413322	6242
Coq.Lists.List.Filtering.filter_ext_in	40
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.025671005249	4
Coq.Lists.List.ListPairs.in_split_l	40	257.384.5.448.0.0.0	synth with cache (only 1: destruct l; only 1: intros; only 1: auto; only 1: intros (m, H); only 1: simpl; only 1: fix le_div2 1; only 1: firstorder  discriminate).	27.5160410404	65539
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	8.33145308495	12444
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	321.642	synth with cache (only 1: fix gcd_greatest 1; only 1: destr_bool).	4.7299759388	1207
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0527119636536	8
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40	0.1.193.0.192.0.0.0.0.322.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: CRelationClasses.simpl_crelation; only 1: destruct l'; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intros H'; only 1: intros; only 1: firstorder; only 1: injection H; only 1: auto).	22.2956488132	36081
Coq.Lists.List.ListPairs.combine_length	40	1.0.0.0.3.192.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: congruence; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	30.7102310658	56222
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.1.2.0.0.0.0.0.65	synth with cache (only 1: intros EQ; only 1: induction l; only 1: firstorder  (subst; auto); only 1: intros; only 1: simpl in *; only 1: destruct H; only 1: destruct H; only 1: auto; only 1: auto).	1.26062893867	3251
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	2.256	synth with cache (only 1: RelationClasses.reduce; only 1: auto with arith).	0.0173418521881	20
Coq.Lists.List.length_order.lel_trans	40	0.1.0.0.130.64	synth with cache (only 1: revert m; only 1: intro p; only 1: unfold lel; only 1: intros; only 1: rewrite H; only 1: auto).	0.975759029388	1776
Coq.Lists.List.length_order.lel_cons_cons	40	1.0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).	0.119504928589	51
Coq.Lists.List.length_order.lel_cons	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0185298919678	3
Coq.Lists.List.length_order.lel_tail	40	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0201590061188	4
Coq.Lists.List.length_order.lel_nil	40	193.0.448.0.0.69.130.1	synth with cache (only 1: symmetry; only 1: revert n; only 1: destruct l'; only 1: generalize (app_nil_r (A:=l)); only 1: intros E; only 1: intro n; only 1: f_equal; only 1: now try split).	10.8245279789	26673
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: solve [ auto ]).	0.0132989883423	2
Coq.Lists.List.SetIncl.incl_tl	40	64.64	synth with cache (only 1: intros Hfst Hsnd; only 1: firstorder).	0.0374550819397	48
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0118489265442	2
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0146489143372	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0145089626312	1
Coq.Lists.List.SetIncl.incl_cons	40	2.64.64	synth with cache (only 1: intuition; only 1: red; only 1: firstorder  (subst; auto)).	0.219842910767	320
Coq.Lists.List.SetIncl.incl_app	40	1.195.128	synth with cache (only 1: intro; only 1: fix le_div2 1; only 1: auto with arith).	4.45859599113	8246
Coq.Lists.List.Cutting.firstn_nil	40	0.64.64.3.71.642	synth with cache (only 1: etransitivity; only 1: induction n as [| n IH]; only 1: simpl; only 1: intuition; only 1: easy; only 1: reflexivity).	8.28969097137	45636
Coq.Lists.List.Cutting.firstn_cons	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.0175189971924	3
Coq.Lists.List.Cutting.firstn_all	40	66.0.0.448.4	synth with cache (only 1: induction l as [| x l IH]; only 1: Nat.auto'; only 1: simpl; only 1: f_equal; only 1: assumption).	0.208109855652	307
Coq.Lists.List.Cutting.firstn_all2	40	0.513.0.0.3.0.320.0.0.0.0.0	synth with cache (only 1: induction n; only 1: intros [| a l] H; only 1: now simpl; only 1: simpl; only 1: simpl in H; only 1: auto with *; only 1: simpl; only 1: intros [| x l] H; only 1: simpl in *; only 1: now simpl; only 1: Morphisms.f_equiv; only 1: auto with arith).	4.19683599472	11463
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: now simpl).	0.0128300189972	1
Coq.Lists.List.Cutting.firstn_le_length	40
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40	512.448.449.770.135	synth with cache (only 1: compute; only 1: intro p; only 1: intros LT; only 1: fix gcd_divide 1; only 1: congruence).	6.89441299438	18973
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0271210670471	4
Coq.Lists.List.Cutting.skipn_nil	40	448.2	synth with cache (only 1: intros; only 1: now induction n).	0.0300090312958	11
Coq.Lists.List.Cutting.skipn_cons	40	0	synth with cache (only 1: now simpl).	0.0145878791809	1
Coq.Lists.List.Cutting.skipn_none	40	320.0.2.2	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: now Nat.nzsimpl').	0.181569099426	339
Coq.Lists.List.Cutting.skipn_all2	40	385.0.0.0.256.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: auto with *).	1.06599783897	1348
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40
Coq.Lists.List.Cutting.skipn_length	40
Coq.Lists.List.Cutting.skipn_all	40	320.0.2	synth with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: now Nat.nzsimpl').	0.0738880634308	95
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.257.64.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: Nat.nzsimpl; only 1: auto using in_app_or, in_or_app; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.693248987198	620
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40	2.320	synth with cache (only 1: fix le_div2 1; only 1: auto).	1.71305704117	1365
Coq.Lists.List.Combining.combine_nil	40	0.0.0.320	synth with cache (only 1: compute; only 1: destruct l as [| x xs]; only 1: auto; only 1: auto).	0.0475318431854	32
Coq.Lists.List.Combining.combine_firstn_l	40	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: trivial).	2.63047099113	654
Coq.Lists.List.Combining.combine_firstn_r	40	65.0.388.451	synth with cache (only 1: intros x; only 1: fix gcd_greatest 1; only 1: intros l'; only 1: firstorder).	7.28395199776	17967
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40
Coq.Lists.List.Add.Add_length	40	0.0.0.1.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: auto).	0.120713949203	130
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40	0.450.320.66.193.385.65.64.130	synth with cache (only 1: intros H'; only 1: induction l as [| y l]; only 1: firstorder  (subst; auto); only 1: intros _ H; only 1: red; only 1: intro H0; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: fix le_div2 1; only 1: now f_equal).	33.239839077	55451
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0483410358429	4
Coq.Lists.List.ReDun.nodup_fixed_point	40	3.323.1.0	synth with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: fix odd_spec 1; only 1: auto).	5.20454597473	12479
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40	193.450.64.193.1.0	synth with cache (only 1: induction l as [| a l]; only 1: intros H; only 1: generalize H; only 1: intuition; only 1: fix gcd_greatest 1; only 1: assumption).	6.36382102966	4010
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40	0.514.2.0.3	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: constructor; only 1: fix even_spec 1; only 1: firstorder  (subst; auto)).	5.00498604774	13497
Coq.Lists.List.NatSeq.seq_length	40
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	256	synth with cache (only 1: now rewrite <- ?Nat.add_le_mono_r).	0.0617499351501	89
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.0.512	synth with cache (only 1: intros LTa LTb; only 1: inversion 1; only 1: auto).	0.0602362155914	87
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40	1.386.263	synth with cache (only 1: intros H H1 H2; only 1: fix gcd_greatest 1; only 1: auto).	31.6563570499	82586
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	1.257	synth with cache (only 1: intros c H H'; only 1: abstract now inversion 1).	0.0619020462036	62
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40
Coq.Lists.List.Forall2.Forall2_refl	40	2	synth with cache (only 1: auto).	0.0112388134003	3
Coq.Lists.List.Forall2.Forall2_app_inv_l	40	64.131.708.64.65	synth with cache (only 1: intro z; only 1: intros x; only 1: intros H'; only 1: fix even_spec 1; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	15.4375209808	34719
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.0.0.1.1	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: now f_equal).	0.103095054626	176
Coq.Lists.List.Repeat.repeat_spec	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0.2	synth with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.696515083313	59
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	512.1.640.2	synth with cache (only 1: induction l; only 1: intros a0; only 1: intuition; only 1: CRelationClasses.simpl_crelation).	1.36603689194	2230
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	193.2	synth with cache (only 1: intros; only 1: now rewrite <- H).	0.355822086334	392
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0253961086273	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40	257.192.260.3	synth with cache (only 1: revert l₂; only 1: intros h; only 1: fix le_div2 1; only 1: contradiction || auto).	17.5506649017	40131
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0327360630035	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40	64.453.0	synth with cache (only 1: intros Pl₁; only 1: fix gcd_greatest 1; only 1: eauto).	3.81950497627	2743
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.0.0.0.1.0.3	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	1.3390610218	1376
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	256	synth with cache (only 1: easy).	0.142215967178	244
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	321.3.512	synth with cache (only 1: intro; only 1: intros H; only 1: now PeanoNat.Nat.nzsimpl').	0.233903884888	483
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	0.0.513.192.128	synth with cache (only 1: intros n m; only 1: intros a r; only 1: fix gcd_greatest 1; only 1: intros; only 1: auto).	1.8477871418	489
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.0.64.64	synth with cache (only 1: intros H; only 1: intros Az LS; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.999569177628	222
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.0.5	synth with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: firstorder).	0.941192865372	1232
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.3	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.171684980392	96
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.143733978271	2
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.287622928619	2
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	704.384.129.1.141.2	synth with cache (only 1: intuition; only 1: case H; only 1: auto; only 1: intros H'; only 1: fix even_spec 1; only 1: easy || now destruct 1).	19.5326180458	40782
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	0.513.66.128.384.64	synth with cache (only 1: induction l as [| x l IHl]; only 1: now rewrite ?Ha; only 1: intro Dec; only 1: intro H; only 1: fix gcd_greatest 1; only 1: eauto).	22.9940738678	26453
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	192	synth with cache (only 1: now right).	0.0445098876953	43
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	2.0.128.194.128.64.1.128	synth with cache (only 1: intros N; only 1: intros; only 1: intro; only 1: red; only 1: intros a n; only 1: intro p; only 1: rewrite 2!InA_cons; only 1: firstorder).	38.2487459183	11436
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0770151615143	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.257	synth with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.107005119324	20
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.320	synth with cache (only 1: intro n; only 1: rewrite InA_app_iff; only 1: tauto).	0.0649130344391	23
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	128.386.0.385.1	synth with cache (only 1: induction s1; only 1: now try PeanoNat.Nat.order'; only 1: simpl; only 1: fix even_spec 1; only 1: eassumption).	0.840483903885	985
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	0.196.320.65.64.0.4	synth with cache (only 1: intros N; only 1: induction l; only 1: firstorder  (subst; auto); only 1: rewrite <- (firstn_all (A:=l))  at 1; only 1: generalize (rev_involutive (A:=l)); only 1: fix odd_spec 1; only 1: auto).	19.461796999	55624
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	129.128	synth with cache (only 1: simpl_relation; only 1: now rewrite H).	0.158055067062	17
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	65.1.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: firstorder).	0.0856521129608	17
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	64.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: firstorder).	0.0381531715393	6
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.0.1.384.1	synth with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: eauto; only 1: constructor; only 1: eauto).	0.442770957947	480
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	1.2.0.65	synth with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).	1.69802999496	450
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).	0.0541200637817	7
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40	256.449.128.192.320.0	synth with cache (only 1: induction 1; only 1: eauto with *; only 1: intro z; only 1: clear H0; only 1: fix gcd_divide 1; only 1: auto using Sorted, LocallySorted, HdRel).	1.71060204506	1148
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40	1.2.449.1.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: f_equiv; only 1: auto; only 1: auto).	16.5432860851	3407
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	1.71.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	12.7462389469	2956
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40	512.448.69.512.128.0	synth with cache (only 1: simple induction l; only 1: now simpl; only 1: pose proof H as H'; only 1: intro; only 1: fix odd_spec 1; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	31.5402019024	12028
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	1.0.0.0.0.0.0	synth with cache (only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: revert P a f; only 1: intros; only 1: now f_equal).	0.0530359745026	16
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0128149986267	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0391581058502	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40	321.256.388.64.452	synth with cache (only 1: intros Hqp Hrp; only 1: intros r H; only 1: intros a b c0; only 1: fix sqrtrem_spec 1; only 1: now rewrite <- ?PeanoNat.Nat.succ_le_mono).	22.8152270317	42570
Coq.NArith.BinNat.N.recursion_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.017961025238	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: trivial).	0.0109322071075	1
Coq.NArith.BinNat.N.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0162870883942	2
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.0120930671692	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0334420204163	6
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.570815086365	792
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.2.1.0.0.0.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	30.2123131752	49598
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	1.57449603081	2114
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.019259929657	3
Coq.NArith.BinNat.N.pred_sub	40	129.0.0.4.0.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: now destruct p; only 1: trivial; only 1: CRelationClasses.simpl_crelation).	2.62277603149	6408
Coq.NArith.BinNat.N.succ_0_discr	40	0.513.1.0.257	synth with cache (only 1: intros H; only 1: pose proof (PeanoNat.Nat.pred_succ n) as EQ'; only 1: destruct n; only 1: destr_bool; only 1: destr_eq H).	0.257363080978	442
Coq.NArith.BinNat.N.add_0_l	40	2.0.0	synth with cache (only 1: destruct n; only 1: auto; only 1: reflexivity).	0.0478591918945	31
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	386.1.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy').	0.113291978836	167
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.0129289627075	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	321.3.0.64.579	synth with cache (only 1: destruct sqrtrem as (s, rm); only 1: easy; only 1: revert m; only 1: fix even_spec 1; only 1: now PeanoNat.Nat.nzsimpl').	13.8906319141	16582
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40	386.3.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now subst).	4.18522405624	6037
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.0.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0310161113739	5
Coq.NArith.BinNat.N.compare_le_iff	40	0.0	synth with cache (only 1: unfold leb, le; only 1: apply iff_refl).	0.0196402072906	2
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40	192.516.323.0	synth with cache (only 1: revert m; only 1: compute; only 1: fix odd_spec 1; only 1: PeanoNat.Nat.auto').	11.3058030605	20230
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.110423088074	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	448	synth with cache (only 1: destr_bool).	0.0999979972839	29
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40	704.129.0.320.0.0	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: unfold succ, add; only 1: constructor; only 1: eauto).	0.271991014481	121
Coq.NArith.BinNat.N.succ_double_add	40
Coq.NArith.BinNat.N.double_mul	40	64.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy || now destruct 1).	0.0504240989685	9
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0234410762787	3
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0174169540405	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.921700954437	697
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	128.325	synth with cache (only 1: fix even_spec 1; only 1: easy).	1.52090501785	1226
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.256.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: now rewrite <- ?add_le_mono_r; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.995757102966	582
Coq.NArith.BinNat.N.compare_0_r	40	0.0.0.0.0.0.128	synth with cache (only 1: case Pos.compare_spec; only 1: congruence; only 1: intro H; only 1: intro H1; only 1: false_hyp H nlt_0_r; only 1: intros; only 1: easy').	0.150675058365	15
Coq.NArith.BinNat.N.pow_0_r	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0218570232391	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	0.0.64.258	synth with cache (only 1: destruct p; only 1: order'; only 1: intro H; only 1: easy).	1.60381507874	1183
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	71	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.690378904343	847
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40	64.256.320.0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: repeat red; only 1: fix even_spec 1; only 1: now f_equal).	0.102955102921	55
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	1.0.128.129.192.193.576	synth with cache (only 1: apply PeanoNat.Nat.A'A_right; only 1: destruct 1; only 1: revert n m; only 1: intro p; only 1: fix odd_spec 1; only 1: intros H; only 1: trivial).	6.08857393265	6652
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.129.0.1	synth with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: intro H1; only 1: now destruct div_eucl).	1.78670597076	242
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0205051898956	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	1.0.2.512.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: intros [x y]; only 1: exists bb; only 1: simpl; only 1: now rewrite Pos.mul_comm).	2.83284187317	3601
Coq.NArith.BinNat.N.gcd_greatest	40	256.0.320.1.576.384.0.0.1.193	synth with cache (only 1: intro H; only 1: destruct a as [| p], b as [| q]; only 1: intro; only 1: now nzsimpl; only 1: intuition Private_Tac.order; only 1: CRelationClasses.simpl_crelation; only 1: rewrite <- ggcd_gcd; only 1: fix le_div2 1; only 1: simpl; only 1: trivial using PeanoNat.Nat.gcd_divide_l).	10.1408650875	14497
Coq.NArith.BinNat.N.gcd_nonneg	40	1	synth with cache (only 1: apply le_0_l).	0.935000896454	859
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	0	synth with cache (only 1: now destruct a).	0.01646900177	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0377099514008	4
Coq.NArith.BinNat.N.testbit_neg_r	40	4	synth with cache (only 1: now induction n).	0.488762140274	377
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.020886182785	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.2.512.1	synth with cache (only 1: intro H; only 1: destruct (PeanoNat.Nat.le_gt_cases n m); only 1: now apply le_succ_l; only 1: trivial).	0.997792005539	1571
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0135159492493	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0236229896545	3
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0133368968964	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	194.832.64.320.0.0.64.0.512.0.0.1.1.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: destruct p; only 1: destruct p; only 1: destruct p; only 1: destr_bool; only 1: now destruct p; only 1: now simpl; only 1: simpl; only 1: trivial; only 1: reflexivity || apply f_equal || exfalso; only 1: split; only 1: PeanoNat.Nat.auto'; only 1: apply CMorphisms.reflexive_proper).	24.3089408875	40830
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.0183391571045	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.4	synth with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.343317985535	270
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0356349945068	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0334949493408	1
Coq.NArith.Ndec.Neqb_complete	40	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0316047668457	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40	3.1.320.68.320.64.1	synth with cache (only 1: induction a; only 1: intro H; only 1: destr_eq H; only 1: intros a n; only 1: induction n; only 1: trivial; only 1: now destruct p).	32.3187310696	38319
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	0.1.0.256.0.0.515.1	synth with cache (only 1: intros H l; only 1: induction l as [| x l IHl]; only 1: eqb2eq; only 1: intros <-; only 1: now Nat.nzsimpl; only 1: eqb2eq; only 1: intros <-; only 1: destr_eq H).	2.33437204361	4719
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	2.0.4	synth with cache (only 1: intros H0; only 1: eqb2eq; only 1: now subst).	0.530949831009	395
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).	0.0438129901886	3
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.519.65	synth with cache (only 1: intro p; only 1: fix gcd_divide 1; only 1: auto with bool).	19.6883080006	17457
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40	257.328.456.102.257	synth with cache (only 1: constructor; only 1: apply lt_wf_rec; only 1: constructor; only 1: fix le_div2 1; only 1: easy').	29.7843689919	94568
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	1.2.0.1.0.4.132	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: auto; only 1: intuition; only 1: unfold Nleb; only 1: apply Nat.leb_le; only 1: left).	1.8724257946	2224
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	3.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.651322126389	336
Coq.NArith.Ndec.Nmin_le_5	40	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.0539889335632	2
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0573399066925	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.704.2	synth with cache (only 1: destruct a; only 1: eauto; only 1: now try N.order').	0.155174970627	199
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40
Coq.NArith.Ndist.ni_min_O_r	40	0.0.2.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.388506889343	234
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0236661434174	2
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2.70	synth with cache (only 1: intros x; only 1: destruct x; only 1: trivial; only 1: trivial).	0.995071172714	1657
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.1.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	1.69944882393	1637
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40	133.517.4	synth with cache (only 1: intros n m; only 1: fix gcd_divide 1; only 1: assumption).	9.85016012192	22096
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40	194.708.194.0.512	synth with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: intro l'; only 1: fix gcd_greatest 1; only 1: now Nat.nzsimpl').	34.0063931942	40550
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2.0	synth with cache (only 1: intros a Ha; only 1: split).	0.0261280536652	4
Coq.NArith.Ndigits.Nshiftl_nat_S	40	2.0	synth with cache (only 1: intros a n; only 1: reflexivity).	0.0272040367126	4
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40	64.65	synth with cache (only 1: fix odd_spec 1; only 1: solve [ auto ]).	0.089704990387	45
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0262989997864	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.0.0	synth with cache (only 1: intros q r; only 1: simpl; only 1: auto).	0.0333118438721	3
Coq.NArith.Ndigits.Pshiftl_nat_N	40	320.193.2.512.64.64.257.3	synth with cache (only 1: intros; only 1: Nat.cases n; only 1: N.bitwise; only 1: revert m; only 1: N.auto'; only 1: unfold N.shiftl_nat; only 1: fix sqrtrem_spec 1; only 1: eassumption).	26.0438361168	56068
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_land_spec).	1.2189810276	834
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.855301856995	460
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	256.193.128.193.0.195.0	synth with cache (only 1: intros; only 1: induction n as [| n H]; only 1: trivial; only 1: induction n; only 1: auto with *; only 1: intuition N.order; only 1: easy || now destruct y).	8.31264710426	7654
Coq.NArith.Ndigits.Ndouble_bit0	40	0.65.0.0.0.1	synth with cache (only 1: destruct n; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: exact eq_refl; only 1: now split).	0.213459014893	209
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.2.0	synth with cache (only 1: destruct n; only 1: split; only 1: trivial).	0.183897018433	102
Coq.NArith.Ndigits.Ndiv2_double	40	1.2.130.1.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: Nat2N.nat2N; only 1: inversion 1; only 1: unfold N.div2, N.to_nat; only 1: now destruct p).	11.2708120346	19866
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.256.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now rewrite ?Pos.square_xO; only 1: now destruct p).	0.797944784164	393
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	67.1.264	synth with cache (only 1: intro Hb; only 1: fix odd_spec 1; only 1: now N.nzsimpl).	35.7840929031	11732
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	1.0.0.0.192	synth with cache (only 1: intro H1; only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: split).	0.230557918549	154
Coq.NArith.Ndigits.Nsame_bit0	40	0.578.260	synth with cache (only 1: compute; only 1: fix gcd_greatest 1; only 1: firstorder).	12.5723469257	7269
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.192.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: tauto; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	1.21066188812	1034
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.67218208313	605
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40	64.0.0.0.0.322.0.128.256.514.198	synth with cache (only 1: intro H1; only 1: induction H1; only 1: solve_proper; only 1: destruct p; only 1: reflexivity; only 1: compute; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destr_bool).	9.33685302734	11142
Coq.NArith.Ndigits.N0_less_1	40	1.68.708	synth with cache (only 1: intros le_mn0; only 1: fix odd_spec 1; only 1: now try N.order').	3.14877200127	5048
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	0	synth with cache (only 1: N.order).	0.0196859836578	1
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40	65.73.516.0.1	synth with cache (only 1: intros EQ; only 1: N.bitwise; only 1: revert m; only 1: fix odd_spec 1; only 1: now repeat split).	3.6764690876	13295
Coq.NArith.Nnat.N2Nat.inj_iff	40	64.2.1.0.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: now N.nzsimpl).	0.796535015106	1457
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	1.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.22657084465	189
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40	64.640.3.451.0.0	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: compute; only 1: generalize (Pos.sqrtrem_spec p); only 1: fix le_div2 1; only 1: now try Nat.order').	1.62044215202	3825
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.4.0.2.5	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.676157951355	1998
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	3.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	3.31875300407	544
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0410258769989	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0344159603119	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: clear IHn; only 1: nat2N).	0.0503880977631	5
Coq.NArith.Nnat.Nat2N.inj_add	40	0	synth with cache (only 1: nat2N).	0.0905210971832	1
Coq.NArith.Nnat.Nat2N.inj_sub	40	6.0.258	synth with cache (only 1: induction n as [| n IH]; only 1: nat2N; only 1: nat2N).	1.2407579422	2539
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0354101657867	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0363459587097	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.03790807724	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0363428592682	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0232470035553	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0333290100098	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	259.0	synth with cache (only 1: destruct x; only 1: destr_bool).	4.48056197166	147
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40	256.2.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: now BinInt.Z.nzsimpl).	8.53604912758	9188
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0245020389557	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0342228412628	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40	0.68.0.1	synth with cache (only 1: elim s; only 1: reflexivity; only 1: fix gcd_divide 1; only 1: auto).	19.7489998341	18741
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	65	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0490691661835	6
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	synth with cache (only 1: trivial).	0.0193841457367	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	67	synth with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0194270610809	8
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	607	synth with cache (only 1: firstorder).	1.5237300396	6810
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.157692909241	3
Coq.Reals.Ratan.pos_half_prf	40	1	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.646407842636	522
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	130.0	synth with cache (only 1: intuition; only 1: lra).	0.0660510063171	10
Coq.Reals.Ratan.pos_opp_lt	40	2.0	synth with cache (only 1: intros; only 1: lra).	0.0546929836273	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	1.1.448.1.1.0.0	synth with cache (only 1: intro; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: apply Rminus_diag_uniq_sym; only 1: unfold Rdiv; only 1: ring).	6.91477704048	12743
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	448.129.129.768	synth with cache (only 1: edestruct Rle_lt_dec; only 1: intros Az RS; only 1: easy'; only 1: now destruct 1 || now destruct 2).	1.27666187286	1304
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	836.321.0.3	synth with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: compute; only 1: firstorder).	5.52075004578	11904
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40	512.647	synth with cache (only 1: fix sqrtrem_spec 1; only 1: now N.nzsimpl).	25.3079760075	41761
Coq.Reals.RList.RList_P21	40	0.1	synth with cache (only 1: intros n m H; only 1: now f_equal).	0.0465309619904	48
Coq.Reals.RList.RList_P22	40	515.129.0.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: now N.nzsimpl).	0.369742155075	530
Coq.Reals.RList.RList_P23	40	576.0.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: apply INR_eq; only 1: now elim H).	0.115685939789	39
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	513.769.710.448	synth with cache (only 1: intro H'; only 1: intros Hnm Hpq; only 1: fix even_odd_double 1; only 1: now rewrite ?IHp).	24.7476708889	29598
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40	384.320.706.513.640.0	synth with cache (only 1: intro; only 1: intro f; only 1: vm_compute; only 1: intro H4; only 1: fix odd_spec 1; only 1: now rewrite <- ?Nat.add_le_mono_r).	5.25614595413	4755
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.200176000595	87
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	193.0.0.0.3	synth with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: eauto).	0.839113950729	644
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.1.0.0.385.0.512.1	synth with cache (only 1: intros r1 r2; only 1: intro He; only 1: unfold Rmin; only 1: intros a b; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: unfold Rle; only 1: auto with real).	2.05637907982	2936
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.256.0.0.0.0.193.0	synth with cache (only 1: intros; only 1: inversion H; only 1: clear H; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intro; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: auto).	0.290278911591	161
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	64.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: firstorder).	0.075700044632	8
Coq.Reals.Rbasic_fun.Rmin_left	40	64.0.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: auto with zarith real).	0.637403011322	237
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0616791248322	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0665919780731	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: eauto using Rle_trans, Rle_refl).	0.0664110183716	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intros Eq0; only 1: auto).	0.0969259738922	8
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.317262172699	194
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0813889503479	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.829946994781	175
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0587930679321	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0706670284271	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.714904069901	337
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40	2.0.576.2.1	synth with cache (only 1: intros z H; only 1: red; only 1: fix gcd_divide 1; only 1: intro; only 1: auto with real).	13.8787889481	8546
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40	448.1.1.0.4.4	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: intro; only 1: case (Rcase_abs x); only 1: auto with real; only 1: now destruct 1 || trivial).	24.2111110687	51880
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	5.35692691803	1936
Coq.Reals.ROrderedType.Reqb_eq	40	0.0.132.1.2	synth with cache (only 1: Bool.destr_bool; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: fix gcd_divide 1; only 1: unfold not; only 1: intuition eauto  3).	22.0141911507	19741
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	0.128.0.387.704.0.0.0.577.230	synth with cache (only 1: repeat split; only 1: intros n' Hn'; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial; only 1: generalize 1%positive as acc; only 1: intros a H; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intro n; only 1: intuition eauto  2).	8.50072097778	20294
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	131.1.704	synth with cache (only 1: intros Ha'; only 1: intros A A_wd A0 AS n; only 1: now f_equiv).	1.92310595512	1920
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	66.0	synth with cache (only 1: intros; only 1: reflexivity).	0.06276512146	55
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40	130.896.1.898.0.0.0.0.0.0.0	synth with cache (only 1: intros N0 H5; only 1: unfold Un_cv; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: fix even_odd_double 1; only 1: intro; only 1: Bool.destr_bool; only 1: auto).	28.7657618523	39264
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	65.1345.0.0	synth with cache (only 1: intros; only 1: destruct (Rle_dec a b) as [Hle| Hnle]; only 1: auto with qarith; only 1: easy).	0.160117864609	71
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	1156	synth with cache (only 1: firstorder).	7.24825716019	2307
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	451.1.448	synth with cache (only 1: intros H; only 1: intros; only 1: now inversion_clear H0).	3.02384805679	2964
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	2.64.66	synth with cache (only 1: intros Hz; only 1: Bool.destr_bool; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	6.2689499855	1524
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0121309757233	2
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intros p0; only 1: auto with real).	0.0171799659729	2
Coq.Reals.Rfunctions.pow_1	40	193.65	synth with cache (only 1: simpl in *; only 1: firstorder).	0.0931980609894	112
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0430998802185	8
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0.1	synth with cache (only 1: simpl; only 1: intros; only 1: auto with real).	0.0237061977386	17
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	384.64.0.128.1	synth with cache (only 1: simple induction n; only 1: now f_equal; only 1: simpl; only 1: intros m IH; only 1: auto with zarith real).	0.769877910614	891
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40	640.322.640.0.448.450	synth with cache (only 1: intros m Hm; only 1: intro H1; only 1: exists 0%nat; only 1: fix gcd_divide 1; only 1: intros a b; only 1: auto with sets).	1.53745102882	2558
Coq.Reals.Rfunctions.pow_R1	40	129.128.384.512.0.834.130	synth with cache (only 1: unfold IZR; only 1: induction n as [| n Hrecn]; only 1: intro; only 1: destruct H; only 1: auto with *; only 1: fix le_div2 1; only 1: tauto).	9.82929801941	14075
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.775803089142	676
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40	0.514.128.322	synth with cache (only 1: intro He; only 1: intros a b; only 1: fix even_equiv 1; only 1: assumption).	10.4637041092	12135
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	448.0.4.1.256.514.65.64.3	synth with cache (only 1: intros [| n]; only 1: Morphisms.f_equiv; only 1: simpl in *; only 1: Nat.induct ltac:(n); only 1: auto with *; only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_l; only 1: now subst).	33.7021341324	40860
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.00815200805664	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	1.5.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.608299016953	1009
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40	192.0.321.386.0.0.452	synth with cache (only 1: intros H l; only 1: intro Hx; only 1: intros; only 1: revert l; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: now f_equal).	17.0865170956	12469
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0861029624939	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	0.0.1.0.0	synth with cache (only 1: intros H; only 1: unfold R_dist; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: apply Rabs_R0).	0.0761511325836	39
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0613338947296	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.2.0.0.1.1	synth with cache (only 1: intros n; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.791281938553	746
Coq.Reals.Rprod.C_maj	40	4.578.320.0	synth with cache (only 1: simpl; only 1: intros b; only 1: fix gcd_divide 1; only 1: trivial).	15.7923510075	11882
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.0	synth with cache (only 1: intros a; only 1: apply Nat.div2_double).	0.0578122138977	2
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.0606210231781	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	2.0.192.0.1	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: eauto; only 1: intros; only 1: auto with real).	0.760457992554	1147
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	128.385.0.1.0.576.128.64	synth with cache (only 1: intros x y H H0; only 1: intro H10; only 1: intro abs; only 1: unfold limit1_in, limit_in; only 1: unfold dist; only 1: simpl; only 1: intros def_n0; only 1: firstorder).	12.4925301075	15303
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.0676739215851	3
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	1152.1	synth with cache (only 1: intros n p nN pN y b_y xny; only 1: firstorder).	0.437349081039	245
Coq.Reals.Rpower.D_in_ext	40	577.0.256.0.832.512	synth with cache (only 1: intro H; only 1: intros N2 H5; only 1: unfold D_in; only 1: intros a n; only 1: unfold limit1_in; only 1: easy || now destruct 1).	1.85543298721	1684
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40	0.128.193.130.322.129.707	synth with cache (only 1: intros x y; only 1: intros H; only 1: cut (1%positive = 1%positive); only 1: contradict H; only 1: fix le_div2 1; only 1: now rewrite ?Hx; only 1: reflexivity).	38.7048680782	39804
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	64.0.1.1.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: easy').	0.618802785873	117
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40	130.0.320.128	synth with cache (only 1: intros P_or_Q; only 1: fix gcd_divide 1; only 1: intros; only 1: eauto with arith).	1.21620392799	512
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	64.128.833	synth with cache (only 1: intros l2; only 1: fix sqrtrem_spec 1; only 1: now Z.nzsimpl).	1.25537085533	231
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	64.134	synth with cache (only 1: intros Hab; only 1: firstorder).	0.795758008957	1538
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.032509803772	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0412230491638	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.321.515.0.65	synth with cache (only 1: intros LT; only 1: intro n; only 1: intros l1; only 1: destruct 1; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	5.95015287399	7488
Coq.Reals.RIneq.Rgt_not_eq	40	640.0.129.325.320.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: contradict H; only 1: rewrite <- H0; only 1: intros (Hc1, Hc2) || intros Hc; only 1: apply (Rlt_irrefl r1); only 1: now Nat.nzsimpl').	11.9375200272	23579
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.266957998276	94
Coq.Reals.RIneq.Rlt_le	40	128.0	synth with cache (only 1: red; only 1: auto with *).	0.159288883209	101
Coq.Reals.RIneq.Rgt_ge	40	515.384	synth with cache (only 1: intro H0; only 1: firstorder).	0.656288862228	644
Coq.Reals.RIneq.Rle_ge	40	67.0.65.0.0	synth with cache (only 1: intros; only 1: red; only 1: destruct H; only 1: tauto; only 1: intuition try easy).	0.991209983826	1198
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0492339134216	5
Coq.Reals.RIneq.Rlt_gt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0266160964966	2
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.0205888748169	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0789141654968	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0359170436859	3
Coq.Reals.RIneq.Rnot_lt_le	40	4.1.1.64.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: intros n m; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).	16.9417300224	23343
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.601748943329	405
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.8.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	15.0257987976	21990
Coq.Reals.RIneq.Rnot_lt_ge	40	2.0	synth with cache (only 1: intros r1 r2 H; only 1: eauto using Rnot_lt_le with rorders).	0.188582897186	138
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	synth with cache (only 1: intros; only 1: auto with real).	0.0943639278412	72
Coq.Reals.RIneq.Rlt_not_ge	40	194.384.0.644.384.512.576.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intros Hx; only 1: intro H7; only 1: intros f Hf H0; only 1: intros * []; only 1: intuition eauto  3; only 1: contradict H; only 1: auto with *).	39.0984518528	25036
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0453372001648	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0447080135345	4
Coq.Reals.RIneq.Rge_not_lt	40	0.64.65.1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: case H1; only 1: intuition; only 1: auto with real).	0.739929914474	525
Coq.Reals.RIneq.Rle_not_gt	40	0.2.0.0.0.2	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: tauto).	1.23364901543	1351
Coq.Reals.RIneq.Rge_not_gt	40	0.0.2	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.74135518074	344
Coq.Reals.RIneq.Req_le	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0352489948273	3
Coq.Reals.RIneq.Req_ge	40	130.1	synth with cache (only 1: destruct 1; only 1: now right).	0.133005142212	71
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.038675069809	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0313191413879	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0427160263062	4
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.102680921555	4
Coq.Reals.RIneq.Rle_le_eq	40	1.1	synth with cache (only 1: intros a b; only 1: intuition).	0.207292795181	121
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0467910766602	1
Coq.Reals.RIneq.Rlt_eq_compat	40	0.0.1.128.384.2	synth with cache (only 1: intros a b n Hn H; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: intros le_mn2; only 1: intros m; only 1: subst; only 1: eauto).	1.02118992805	1277
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0449669361115	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	642.386.128.384.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros x y H z t H0; only 1: intuition; only 1: red; only 1: firstorder).	1.36636614799	1087
Coq.Reals.RIneq.Rle_lt_trans	40	0.256.386.0.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros E sig_forall_dec sig_not_dec Einhab Ebound; only 1: intro Hxy; only 1: intuition eauto  3).	0.691017150879	740
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.136352777481	76
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40	0.193.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: compute; only 1: intuition eauto  2).	0.915561914444	1304
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.198124885559	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0.1	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.110043048859	5
Coq.Reals.RIneq.Rge_dec	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.289002895355	108
Coq.Reals.RIneq.Rlt_le_dec	40	640.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: firstorder).	0.111876010895	58
Coq.Reals.RIneq.Rgt_ge_dec	40	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0776040554047	5
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.111569166183	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	1.20072412491	1398
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0661981105804	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.508908987045	575
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.558809041977	332
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.707123994827	1056
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	386.0	synth with cache (only 1: intros; only 1: ring).	1.27779102325	91
Coq.Reals.RIneq.Rplus_ne	40	1.256.2	synth with cache (only 1: split; only 1: auto with *; only 1: ring).	1.16778612137	175
Coq.Reals.RIneq.Rplus_opp_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	2.92989087105	98
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	707	synth with cache (only 1: firstorder).	0.282067060471	132
Coq.Reals.RIneq.Rplus_eq_compat_r	40	2.64	synth with cache (only 1: intro H; only 1: congruence).	0.149857997894	142
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0510840415955	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0524659156799	4
Coq.Reals.RIneq.Rmult_0_r	40	1.1	synth with cache (only 1: intros; only 1: field).	0.0962600708008	48
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0587158203125	2
Coq.Reals.RIneq.Rmult_ne	40	2.0.0.0.132	synth with cache (only 1: intuition; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	8.97578883171	2159
Coq.Reals.RIneq.Rmult_1_r	40	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.211130142212	77
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0273551940918	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	65.1	synth with cache (only 1: intros r r1 r2; only 1: now destruct 1 || trivial).	0.0761139392853	41
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40	2.65.0.577.2.384.5	synth with cache (only 1: intro H; only 1: intros (Hc1, Hc2) || intros Hc; only 1: destruct 1 as [EQ| EQ]; only 1: firstorder  (subst; auto); only 1: ring; only 1: rewrite EQ  at 1; only 1: auto with real).	29.6571199894	34452
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0	synth with cache (only 1: intros a b Hb; only 1: auto with real).	0.0329051017761	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0206918716431	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	66.4	synth with cache (only 1: intros r b; only 1: intuition).	1.24627494812	1132
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0	synth with cache (only 1: intros r1 r2 H; only 1: auto with real).	0.0393421649933	2
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.0	synth with cache (only 1: intros x y H; only 1: now subst).	0.276210069656	209
Coq.Reals.RIneq.Ropp_0	40	2	synth with cache (only 1: ring).	0.0388219356537	35
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.384.1	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: ring).	0.0458810329437	16
Coq.Reals.RIneq.Ropp_involutive	40	1.1	synth with cache (only 1: intros; only 1: ring).	0.434612035751	54
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.0.641	synth with cache (only 1: intro abs; only 1: intros; only 1: ring).	0.176244974136	91
Coq.Reals.RIneq.Ropp_mult_distr_l	40	3.514.640.66.3.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intro x; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros m IH; only 1: ring).	12.4483821392	6211
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0549468994141	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.192.320.0.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intros H; only 1: intro H2; only 1: ring).	3.29663991928	2651
Coq.Reals.RIneq.Ropp_mult_distr_r	40
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0345439910889	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.474002122879	36
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0308709144592	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.03502202034	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0350568294525	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.640.0.0.1.192.0.192.0.4.0.0	synth with cache (only 1: intros r b; only 1: pattern r at 2; only 1: unfold Rminus; only 1: pattern r at 2; only 1: intuition; only 1: pattern r at 2; only 1: intuition; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite <- H; only 1: apply CReal_plus_opp_r).	38.5647330284	83993
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	641.451	synth with cache (only 1: symmetry; only 1: firstorder).	6.66994023323	9518
Coq.Reals.RIneq.Rplus_minus	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0323488712311	3
Coq.Reals.RIneq.Rminus_eq_contra	40	2.320.0	synth with cache (only 1: intros; only 1: intros n; only 1: auto with real).	0.138134002686	42
Coq.Reals.RIneq.Rminus_not_eq	40	0.64.0	synth with cache (only 1: red; only 1: intros H x0; only 1: auto with real).	0.150382995605	75
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0434441566467	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.124543905258	55
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0403151512146	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0426309108734	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	128.0.641.0	synth with cache (only 1: intros a b Hb; only 1: field_simplify; only 1: field; only 1: now subst).	0.11016201973	37
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.0.2.4.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real; only 1: auto with real).	6.9654109478	4466
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.1.647	synth with cache (only 1: intros b Hb IH; only 1: field; only 1: auto with real).	33.1531789303	55647
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	192	synth with cache (only 1: intuition).	0.0897889137268	90
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	193	synth with cache (only 1: intuition).	0.0709228515625	55
Coq.Reals.RIneq.Rplus_le_compat_l	40	577	synth with cache (only 1: firstorder).	0.530700922012	490
Coq.Reals.RIneq.Rplus_ge_compat_l	40	386.130	synth with cache (only 1: intros n m H1 H2; only 1: firstorder).	0.961241960526	940
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.1.0.0.64.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: generalize H; only 1: intro; only 1: intro; only 1: auto with real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	1.64858388901	1688
Coq.Reals.RIneq.Rplus_ge_compat_r	40	578.0.192.64	synth with cache (only 1: intro n; only 1: red; only 1: intros; only 1: firstorder).	0.507443189621	222
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.032466173172	4
Coq.Reals.RIneq.Rplus_ge_compat	40	0.449.65.128	synth with cache (only 1: intros x Hx IH; only 1: intro abs; only 1: fix gcd_greatest 1; only 1: auto with real).	0.742709875107	658
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40	706.1.67.448.192	synth with cache (only 1: intros k H1 H2; only 1: intros a H; only 1: firstorder; only 1: subst; only 1: firstorder).	8.84422302246	20810
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	515.1.768.2.0.514.385	synth with cache (only 1: intros n IH; only 1: intros a H; only 1: intros; only 1: red; only 1: firstorder; only 1: pose proof H as H'; only 1: CRelationClasses.simpl_crelation).	24.1784350872	38635
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.515	synth with cache (only 1: intros a Ha; only 1: intuition).	0.176510095596	152
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40	0.387.69.64	synth with cache (only 1: intros Hb; only 1: intros a H; only 1: fix odd_spec 1; only 1: auto).	29.6174049377	52928
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40	0.0.513.193.4	synth with cache (only 1: intro; only 1: intros m H; only 1: fix gcd_divide 1; only 1: intro; only 1: auto with real).	22.7357189655	44794
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	576.0	synth with cache (only 1: intros; only 1: auto using Rplus_le_compat_l with rorders).	0.0795269012451	55
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0612370967865	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	1	synth with cache (only 1: auto with real).	0.0844838619232	68
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	192.67	synth with cache (only 1: intros H1 n H2; only 1: firstorder).	0.353036880493	350
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.192.320.0	synth with cache (only 1: unfold Rge; only 1: intros EQ; only 1: intros Hx; only 1: auto with real).	0.145759105682	120
Coq.Reals.RIneq.Ropp_le_contravar	40	2	synth with cache (only 1: auto with real).	0.219744920731	168
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0626080036163	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0345478057861	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0264990329742	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0274631977081	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0259320735931	5
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0307679176331	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.5	synth with cache (only 1: unfold Rgt; only 1: auto with real).	1.7231400013	4327
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.0.67.64	synth with cache (only 1: intros x y H; only 1: firstorder; only 1: right; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	21.4164221287	29010
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	0	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.0359330177307	1
Coq.Reals.RIneq.Rmult_gt_compat_l	40	770.384	synth with cache (only 1: intros i j Hi E; only 1: firstorder).	0.157181024551	96
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	256.64.0.65	synth with cache (only 1: intro H4; only 1: do 2 intro; only 1: intros n m; only 1: auto with *).	0.113518953323	106
Coq.Reals.RIneq.Rmult_ge_compat_r	40	258	synth with cache (only 1: intuition).	0.107956886292	91
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	64.129	synth with cache (only 1: intros n m H1 H2; only 1: auto with *).	0.173654079437	73
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	2.0.321.512.257.64	synth with cache (only 1: intros GT; only 1: intros Hab; only 1: intros l; only 1: intros H3; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: eauto using Rmult_lt_compat_l with rorders).	2.89188718796	2891
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	1.48563098907	2280
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	192.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with zarith).	0.057156085968	26
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0475780963898	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	642.1	synth with cache (only 1: intros; only 1: firstorder).	0.87539100647	821
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.834.2.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: pattern r2 at 3; only 1: CRelationClasses.simpl_crelation; only 1: auto with real; only 1: ring).	4.66430687904	6506
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	7.75865602493	9134
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0357720851898	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0412628650665	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	6.41592717171	2150
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40	385.1.67.0.0.2.1	synth with cache (only 1: intros; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: Bool.destr_bool; only 1: rewrite Rplus_comm; only 1: trivial using Nat2Z.is_nonneg).	7.63948392868	11850
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40	1.512.392	synth with cache (only 1: intros q; only 1: fix sqrtrem_spec 1; only 1: auto with real).	3.88430309296	6966
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	0.0.577.1.3	synth with cache (only 1: induction n; only 1: auto with real; only 1: constructor 1; only 1: rewrite S_INR; only 1: auto with real).	1.3968000412	1768
Coq.Reals.RIneq.INR_lt	40	1.194.7.192	synth with cache (only 1: red; only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto with real).	37.3921689987	68348
Coq.Reals.RIneq.le_INR	40	323.0.128.0.1	synth with cache (only 1: intros n m; only 1: induction 1; only 1: right; only 1: auto with real; only 1: eauto with *).	1.08830595016	1526
Coq.Reals.RIneq.INR_not_0	40	0.256.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: simpl in *; only 1: reflexivity).	0.0583519935608	18
Coq.Reals.RIneq.not_0_INR	40	257.128.66	synth with cache (only 1: induction n; only 1: easy'; only 1: firstorder).	4.75123095512	778
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.1.0.9	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	15.6809179783	20437
Coq.Reals.RIneq.INR_IPR	40	256.9	synth with cache (only 1: fix even_spec 1; only 1: auto with relations).	33.8276801109	25698
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	0.0.0.512.0.0.3.578.578.129.1	synth with cache (only 1: intro t; only 1: case N.div_eucl; only 1: N.Private_Tac.order || (right; N.Private_Tac.order) || (left; N.Private_Tac.order); only 1: N.Private_Tac.order || (right; N.Private_Tac.order) || (left; N.Private_Tac.order); only 1: case t; only 1: intros; only 1: auto with real; only 1: now try split; only 1: intros H; only 1: unfold IZR; only 1: auto with real).	4.8800368309	11647
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40	66.130.5	synth with cache (only 1: red; only 1: fix even_spec 1; only 1: tauto).	12.3060920238	27860
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40	705.0.640.326	synth with cache (only 1: intro LE; only 1: fix gcd_greatest 1; only 1: intros; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	16.4810810089	27607
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40	257.323.1	synth with cache (only 1: intro z; only 1: fix even_spec 1; only 1: auto with arith).	2.77498412132	5973
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40	192.196.256	synth with cache (only 1: intros P_or_Q; only 1: fix odd_spec 1; only 1: now rewrite ?IHj).	1.41723012924	2347
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40	641.513.194.257.128.515	synth with cache (only 1: intro LE; only 1: intro abs; only 1: intros EQ; only 1: unfold Rle; only 1: fix even_spec 1; only 1: now try split).	32.4694330692	46816
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.481236934662	258
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	5.0	synth with cache (only 1: intros; only 1: ring).	0.703314065933	1166
Coq.Reals.RIneq.double_var	40	0.4.0.136	synth with cache (only 1: cut (1%positive = 1%positive); only 1: intros; only 1: field; only 1: trivial).	1.91730093956	4222
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40	1.2.2.1	synth with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply eq_IZR; only 1: auto with zarith real).	1.57612204552	1789
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.123324871063	55
Coq.Reals.RIneq.le_epsilon	40	257.576.257.576.64.0.0.66.1.0.0.65	synth with cache (only 1: intros H1; only 1: red; only 1: intro; only 1: unfold Rle; only 1: intro; only 1: right; only 1: apply Rquot1; only 1: split; only 1: fix odd_spec 1; only 1: auto with arith; only 1: fix odd_spec 1; only 1: auto with arith).	26.5792298317	17297
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.0.0.320.578	synth with cache (only 1: intro; only 1: intro m; only 1: unfold Rdiv; only 1: intros; only 1: ring).	1.18417596817	588
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.045884847641	4
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40	1.193.69	synth with cache (only 1: fix even_spec 1; only 1: intros Az AS AP n; only 1: auto).	10.8912010193	4359
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	641.833.3.770.0	synth with cache (only 1: intros n m H; only 1: case (Rcase_abs 1); only 1: auto with real; only 1: fix even_odd_double 1; only 1: now rewrite ?H, ?IHp).	5.84619688988	10136
Coq.Reals.ArithProp.le_minusni_n	40	385.321.1.1.4	synth with cache (only 1: intros n m; only 1: Nat.induct ltac:(m); only 1: intros LE; only 1: now Nat.nzsimpl'; only 1: auto with *).	10.0093259811	13511
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	832.3.387	synth with cache (only 1: simpl in *; only 1: fix even_odd_double 1; only 1: now rewrite <- ?Z.add_le_mono_l).	0.660220861435	1231
Coq.Reals.ArithProp.le_double	40	0.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.0140540599823	2
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	384.1	synth with cache (only 1: intro n; only 1: firstorder).	0.16189289093	256
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	3	synth with cache (only 1: auto with real).	0.0387380123138	4
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1088.0.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: set (I := fun n : nat => a + INR n * del < b); only 1: easy || now destruct 1).	0.0825629234314	22
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40	832.0.0.0.0.1088.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros f; only 1: intros; only 1: assert (H0 : a <= b); only 1: elim H; only 1: intros; only 1: apply Rle_trans with c; only 1: assumption; only 1: assumption; only 1: elim H; only 1: fix even_odd_double 1; only 1: clear H; only 1: destruct (Rle_dec b b) as [Hle'| Hnle']; only 1: assumption; only 1: intros; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	18.5907590389	2954
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40	448.960.385.896.1025	synth with cache (only 1: unfold RiemannInt; only 1: intros RS' n; only 1: intros Hug Heub; only 1: fix odd_equiv 1; only 1: easy).	8.46324205399	4756
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40	256.512.68.0.65.1	synth with cache (only 1: intro Hnotz; only 1: intros Heq; only 1: intros; only 1: elim (Rplus_ne 1); only 1: fix odd_spec 1; only 1: intuition subst; auto with qarith).	31.6515591145	16228
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	4.0	synth with cache (only 1: intro; only 1: field).	0.500059127808	343
Coq.Reals.Ranalysis2.quadruple_var	40	66.0.1.129.449	synth with cache (only 1: destruct (archimed 0) as [H1 H2]; only 1: intro z; only 1: rewrite <- minus_IZR in H2; only 1: unfold Rdiv; only 1: field).	2.54078197479	1870
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40	577.448.512.577.448.512.385.640.1.64	synth with cache (only 1: intros a b; only 1: intros; only 1: red; only 1: destruct H; only 1: fix odd_spec 1; only 1: intro H; only 1: now destruct Hn || easy; only 1: fix odd_spec 1; only 1: intro H; only 1: now destruct Hn || easy).	30.0606789589	3000
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40	256.7	synth with cache (only 1: fix even_spec 1; only 1: intuition Nat.order).	19.9756958485	4349
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	512.386.69	synth with cache (only 1: red; only 1: intro p; only 1: eauto using N.Private_Tac.eq_trans, N.Private_Tac.eq_sym).	8.34136605263	49927
Coq.Reals.Rseries.sequence.Un_bound_imp	40	1.1.257.1.704.0	synth with cache (only 1: intros; only 1: inversion_clear 1; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite ?H1, ?H2; only 1: rewrite Ropp_involutive; only 1: apply H).	2.38261198997	3595
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	832.0.385	synth with cache (only 1: intros a Ha; only 1: intros; only 1: firstorder).	0.210083007812	234
Coq.Reals.Rseries.Un_growing_shift	40	130.0.384.128	synth with cache (only 1: intros a b H; only 1: intros Hn; only 1: Nat.nzsimpl; only 1: Nat.auto').	0.3959441185	193
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	258.5.130	synth with cache (only 1: intro n; only 1: fix ind_0_1_SS 1; only 1: auto with zarith).	21.3465819359	26853
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40	256.833.320.832.0.0.0.704.0.256.192	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: intro n; only 1: intro; only 1: intro LE; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros l2; only 1: clear H; only 1: fix gcd_greatest 1; only 1: firstorder  (subst; auto)).	4.27542209625	3502
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40	257.448.1.192.128.194.577	synth with cache (only 1: intro Hyp_F_NE; only 1: intro H'; only 1: red; only 1: intro z; only 1: unfold R_dist; only 1: fix even_equiv 1; only 1: auto with zarith).	34.7283530235	54152
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.0.65.129.385	synth with cache (only 1: intros b; only 1: red; only 1: intros a n m H; only 1: unfold opp_fct; only 1: auto with real).	1.47288894653	2549
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40	64.769.0.0.192.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rplus_le_reg_l with (- f x); only 1: rewrite Rplus_opp_l; only 1: pose proof (MVT_cor1 f _ _ pr H3) as H4; only 1: elim H4; only 1: unfold Z.sub, Rminus; only 1: intros; only 1: elim H5; only 1: fix le_div2 1; only 1: auto).	7.52752494812	3951
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40	64.386.960.577	synth with cache (only 1: intros n m p H; only 1: intro abs; only 1: fix gcd_divide 1; only 1: contradiction || auto).	2.22456693649	3399
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40	512.641.513.1.64.0.0.0.128.0	synth with cache (only 1: unfold continuity_pt, minus_fct; only 1: intros x Px; only 1: intro; only 1: intro; only 1: RelationClasses.reduce; only 1: elim (Rplus_ne 1); only 1: clear H; only 1: intros Ha; only 1: fix le_div2 1; only 1: easy || now destruct 1).	13.8315000534	8969
Coq.Reals.Ranalysis1.continuity_pt_const	40	0.0.257.642.193.65.0	synth with cache (only 1: intros n m H; only 1: elim (Rplus_ne 1); only 1: intros NEQ; only 1: fix gcd_divide 1; only 1: discriminate || clear H; only 1: intro; only 1: auto with zarith real).	30.2569789886	58186
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.0	synth with cache (only 1: intros; only 1: trivial).	0.0377979278564	3
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40	3.193.0.512.0	synth with cache (only 1: unfold continuity; only 1: intros p q n m H; only 1: apply continuity_pt_mult; only 1: auto with relations; only 1: trivial).	23.5265250206	16947
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	65.128.0.128.1.67	synth with cache (only 1: intros a n; only 1: intros; only 1: intros N; only 1: apply continuity_pt_inv; only 1: solve [ auto ]; only 1: easy || now destruct 1).	22.6705229282	18351
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40	576.641.834.256.0.0.3.0	synth with cache (only 1: unfold derivable_pt_lim; only 1: intros x y z; only 1: intros; only 1: elim (H eps H0); only 1: intros E; only 1: vm_compute in H; only 1: fix gcd_divide 1; only 1: now Nat.nzsimpl).	30.0421350002	42943
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	256.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: auto with *).	0.116992950439	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	1.27917385101	1242
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	707.64	synth with cache (only 1: intro; only 1: eauto).	0.606950044632	651
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.66	synth with cache (only 1: intros a b; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.578511953354	585
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0608930587769	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.4.1	synth with cache (only 1: intros p0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	1.18351411819	3689
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.2.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.506792068481	253
Coq.Reals.Ranalysis1.derive_pt_comp	40	0.576.256.2.3.64	synth with cache (only 1: intros E1; only 1: intros n; only 1: intros h; only 1: intros EQ; only 1: fix gcd_divide 1; only 1: auto with real).	17.2159609795	34572
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40
Coq.Reals.Ranalysis1.derive_pt_pow	40	0.0.385.0.0.640.833.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: apply derive_pt_eq_0; only 1: rewrite Rmult_0_l; only 1: replace (fun _ : R => 1) with (fct_cte 1); only 1: apply derivable_pt_lim_const; only 1: reflexivity; only 1: cut (1%positive = 1%positive); only 1: fix gcd_divide 1; only 1: intros H'2; only 1: replace (fun y : R => y ^ S n) with (fun y : R => y * y ^ n); only 1: auto with sets; only 1: reflexivity; only 1: reflexivity).	15.188024044	20695
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	448.3.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: unfold has_ub in H; only 1: firstorder).	1.68904399872	2945
Coq.Reals.SeqProp.min_ss	40	512.512.387.1	synth with cache (only 1: intros n m; only 1: simple induction 1; only 1: intros y Ey; only 1: firstorder).	1.50137591362	1724
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	705.0.2	synth with cache (only 1: intros r1 r2 H; only 1: fix even_odd_double 1; only 1: now destruct n).	0.412710905075	205
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40	512.768.256.128.0.641.0.2.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: pose proof (Vn_Un_Wn_order Un pr1 pr2) as H; only 1: unfold has_ub in pr1; only 1: unfold bound in pr1; only 1: elim pr1; only 1: intros; only 1: exists x; only 1: unfold is_upper_bound; only 1: clear H0; only 1: elim pr1; only 1: intros a b; only 1: intros m; only 1: fix sqrtrem_spec 1; only 1: Nat.auto').	29.6757931709	39125
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0259540081024	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.149208068848	115
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.1	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0366468429565	3
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0413899421692	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.1.2	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	0.365133047104	679
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.1.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: now apply (IZR_lt 0 2); only 1: apply PI_RGT_0).	0.429060935974	593
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	2.9	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	1.30729603767	3753
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40	768.960.256.960.832.66.0.0.0.0.704.0	synth with cache (only 1: intros; only 1: intros l H6; only 1: intro; only 1: exists 1; only 1: split; only 1: exact Rlt_0_1; only 1: unfold D_x, no_cond; only 1: N.nzsimpl'; only 1: reduce in H; only 1: intro H17; only 1: fix even_odd_double 1; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	19.4732139111	21783
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	128.0.896.640.192	synth with cache (only 1: red; only 1: intros H H0; only 1: fix gcd_divide 1; only 1: intros; only 1: auto with real).	2.77961778641	2064
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.0.128	synth with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	5.5599501133	6506
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0762941837311	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.577	synth with cache (only 1: intros * x; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.131043195724	57
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0649809837341	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.0.1025	synth with cache (only 1: intro Streicher_K; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	1.48887395859	374
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.836	synth with cache (only 1: intros IHP'; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	3.10324001312	611
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	1.63557982445	945
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	65	synth with cache (only 1: auto with real).	0.346518993378	153
Coq.Reals.DiscrR.IZR_eq	40	0.1	synth with cache (only 1: intros n m H; only 1: now Morphisms.f_equiv).	0.0895409584045	57
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.3.0	synth with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	1.48108792305	570
Coq.Reals.ConstructiveReals.CReq_sym	40	130.578.512.0	synth with cache (only 1: intros p q H H0; only 1: pose proof H as H'; only 1: destruct p; only 1: firstorder).	0.758898019791	771
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	64.384.64.577	synth with cache (only 1: intros a' Ha'; only 1: fix sqrtrem_spec 1; only 1: intros E; only 1: intuition).	0.424897193909	184
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40	321.66.320	synth with cache (only 1: intro LE; only 1: fix even_spec 1; only 1: auto with sets).	0.609126091003	539
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	15	synth with cache (only 1: eauto with arith).	1.53149580956	1537
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	193.192.323	synth with cache (only 1: intro l'; only 1: fix odd_spec 1; only 1: easy').	1.77367591858	842
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	193.1	synth with cache (only 1: destruct x as [xn limx]; only 1: now rewrite ?Pos.square_xO).	0.124212026596	85
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40	448.704	synth with cache (only 1: eexists; only 1: apply proj2_sig).	0.467019081116	191
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40	130.0.64.256.192	synth with cache (only 1: intro LE; only 1: intros NEQ; only 1: fix odd_spec 1; only 1: intros; only 1: intuition).	2.64468193054	599
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	513.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CRealEq_sym; only 1: apply CRealEq_sym; only 1: apply CRealEq_sym; only 1: apply CReal_plus_opp_r; only 1: apply CReal_plus_proper_r; only 1: now Z.nzsimpl').	9.34789896011	771
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	194.256.64.387	synth with cache (only 1: intros Hn; only 1: intro H; only 1: intros <-; only 1: now Nat.nzsimpl).	17.925812006	2647
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	194.641	synth with cache (only 1: intros (EQ, EQ'); only 1: ring).	5.34196400642	685
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0763549804688	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	321.4	synth with cache (only 1: intros [n maj]; only 1: ring).	8.58235001564	2298
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	256.0.67	synth with cache (only 1: intro H; only 1: intro abs; only 1: ring).	5.38734602928	624
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0758838653564	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40	128.192.320.449	synth with cache (only 1: intros x x' Hx; only 1: fix even_spec 1; only 1: intros a Ha; only 1: tauto).	1.57343196869	194
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	1	synth with cache (only 1: assumption).	0.0306761264801	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.1.2	synth with cache (only 1: intros n m H1 H2; only 1: apply CReal_mult_proper_l; only 1: assumption).	6.81830883026	4153
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0496530532837	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.1.0.8	synth with cache (only 1: intros x IH; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	9.78583693504	23648
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40	448.1.896.832.128.128.833.896	synth with cache (only 1: intros a; only 1: intro H3; only 1: intros s1; only 1: intro Hyp; only 1: intros x Hxn Hxp; only 1: fix gcd_greatest 1; only 1: intro; only 1: auto with qarith).	39.3816030025	21153
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	65.193.129.706	synth with cache (only 1: intros E0; only 1: fix le_div2 1; only 1: intros n; only 1: auto).	6.4182100296	8857
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0	synth with cache (only 1: intros; only 1: apply derivable_pt_id).	0.042102098465	2
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	1472.2	synth with cache (only 1: intros; only 1: now intuition).	0.305047988892	27
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	64.769.512.0.1.704.128	synth with cache (only 1: intro x; only 1: intros n Hn; only 1: intro X0; only 1: unfold Rle; only 1: intros D' H5; only 1: simple induction 1; only 1: auto).	28.6184921265	12179
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	66.128.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: lra).	0.750588178635	816
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	193.385.900	synth with cache (only 1: intros H'; only 1: compute; only 1: auto with *).	6.34926891327	13564
Coq.Reals.AltSeries.PI_tg_decreasing	40	704.6.3.68.459	synth with cache (only 1: <Coq.Strings.Ascii.t_eqb>; only 1: constructor; only 1: revert n; only 1: fix even_spec 1; only 1: easy || now destruct y).	39.01339221	70473
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0589108467102	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0720770359039	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0587079524994	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0672478675842	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	256.0.512.0.1.0.0.0.0.2.0.2	synth with cache (only 1: intros r b; only 1: intro; only 1: replace r with (r + 0); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply max_mono; only 1: eauto with *; only 1: intros a Ha; only 1: intuition; only 1: firstorder).	39.2297439575	48901
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.642	synth with cache (only 1: intros a a' Ha; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	4.73838710785	4866
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	1.71565079689	2541
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0520119667053	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0527698993683	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40	0.0.0.384.0.1.0.0.0.515	synth with cache (only 1: intro Hxy; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply max_min_antimonotone; only 1: do 3 red; only 1: compute; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	20.8498380184	16967
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.453.1.0.4	synth with cache (only 1: intro r; only 1: intro; only 1: replace 0 with (r * 0); only 1: firstorder; only 1: auto with real).	37.3256149292	44742
Coq.Reals.Rlimit.eps2	40	0.0.1.0.0.320	synth with cache (only 1: symmetry; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.573719978333	474
Coq.Reals.Rlimit.eps4	40
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.0883369445801	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.9	synth with cache (only 1: intros a Ha; only 1: lra).	1.13958001137	3641
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	897.451.0	synth with cache (only 1: intros; only 1: intros env f; only 1: firstorder).	1.01352095604	1368
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	705.384.1	synth with cache (only 1: intros; only 1: set (R := fun m n : nat => (n <= m)%nat -> (m - n <= m)%nat); only 1: firstorder).	0.514502048492	65
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.768.2.705.0.0.0.0.2.128	synth with cache (only 1: intros a; only 1: unfold sqrt; only 1: case Rcase_abs; only 1: intro; only 1: intros H'2; only 1: auto with real; only 1: intros H2; only 1: intro; only 1: clear H; only 1: apply Rsqrt_positivity).	27.3029918671	26208
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40	128.512.258	synth with cache (only 1: intro m; only 1: fix le_div2 1; only 1: tauto).	1.09985399246	811
Coq.Reals.R_sqrt.sqrt_lem_0	40	1.0.512.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: generalize (Rle_le_eq x² y²); only 1: intro; only 1: elim H2; only 1: intros _ H3; only 1: elim H2; only 1: Tactics.program_simpl; only 1: apply sqrt_sqrt; only 1: assumption).	8.06916499138	5111
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.11026096344	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0892789363861	5
Coq.Reals.R_sqrt.sqrt_pow2	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0609550476074	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.419129133224	119
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	2.23349189758	1729
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	328.513.64	synth with cache (only 1: intros H; only 1: intros x; only 1: eauto with *).	11.1678748131	7698
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40	192.256.325.202	synth with cache (only 1: intros a0; only 1: fix le_div2 1; only 1: intros (a, H); only 1: N.auto').	32.5190210342	63820
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	129.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: Morphisms.solve_proper).	0.68762087822	244
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.101711034775	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0700681209564	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.100718975067	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.07155585289	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.5.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	29.289137125	38438
Coq.Reals.Rtrigo1.PI2_RGT_0	40	1.0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.232291221619	89
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40	65.769.192	synth with cache (only 1: intros y Ey; only 1: fix gcd_divide 1; only 1: auto with real).	0.641685009003	629
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.322.0.0.0	synth with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: replace (2 * PI2 / 2) with PI2 by field; only 1: fix even_spec 1; only 1: auto).	8.33499693871	2365
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	768.0.3.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: firstorder).	0.509881019592	746
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.1.256	synth with cache (only 1: rewrite <- Rmult_1_r; only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.114721775055	74
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40	0.1026.66.0	synth with cache (only 1: intros x H1 H2; only 1: generalize PI_4; only 1: fix gcd_greatest 1; only 1: assumption).	8.75333714485	12131
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	2.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: pattern p at 1; only 1: rewrite Rmult_comm; only 1: pattern p at 1; only 1: rewrite Rmult_comm; only 1: ring_Rsqr).	2.31708788872	2007
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2); only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring; only 1: pattern p at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	3.58458900452	1376
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40	576.577.768.256.1	synth with cache (only 1: intro; only 1: intros a Ha; only 1: intro H; only 1: fix even_spec 1; only 1: easy || now destruct 1).	9.81147813797	2287
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40	129.256.896.0.0.0.576.0.0.0.0.0.0	synth with cache (only 1: intros x y H1 H2 H3 H4; only 1: rewrite <- (cos_neg x); only 1: rewrite <- (cos_neg y); only 1: rewrite <- (cos_period (- x) 1); only 1: rewrite <- (cos_period (- y) 1); only 1: unfold INR; only 1: constructor; only 1: generalize (Rplus_le_compat_l (-3 * (PI / 2)) PI x H1); only 1: generalize (Rplus_le_compat_l (-3 * (PI / 2)) x (2 * PI) H2); only 1: generalize (Rplus_le_compat_l (-3 * (PI / 2)) PI y H3); only 1: fix odd_spec 1; only 1: compute; only 1: auto with real).	35.1417000294	10560
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40	768.834.0.704.1.1088.260.0	synth with cache (only 1: intros; only 1: contradiction  (Rlt_irrefl 0); only 1: contradict H; only 1: red; only 1: elim (Rplus_ne (-1)); only 1: intros a b; only 1: fix even_equiv 1; only 1: eauto using Rnot_lt_le with rorders).	17.7627308369	10118
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0333631038666	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0.0	synth with cache (only 1: intros; only 1: auto with arith).	0.0617589950562	2
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0947790145874	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	709.384.448.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: intuition; only 1: generalize 1%Z; only 1: now intuition; apply Z.lt_le_incl).	9.8985478878	13038
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.647537946701	542
Coq.Reals.PartSum.cond_pos_sum	40	193.128.65	synth with cache (only 1: intro LS'; only 1: fix even_spec 1; only 1: auto with arith).	0.253741979599	166
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	513.0.832.0.65.65.4	synth with cache (only 1: intros [| n| n]; only 1: now Z.nzsimpl; only 1: intros Hn; only 1: intros; only 1: exact eq_refl; only 1: intros; only 1: now Nat.nzsimpl').	5.17352986336	2503
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40	129.322.72	synth with cache (only 1: intros EQ; only 1: fix gcd_divide 1; only 1: now Nat.nzsimpl).	34.6214878559	16699
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	128.579	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: firstorder  (subst; auto)).	14.0351769924	3053
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	128.17	synth with cache (only 1: fix le_div2 1; only 1: now f_equal).	7.76316094398	9320
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	321.0.13	synth with cache (only 1: fix even_spec 1; only 1: intro y; only 1: now try split).	5.97018790245	7125
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.508958816528	271
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	192.258.1.128	synth with cache (only 1: intros P_or_Q; only 1: intros; only 1: inversion H; only 1: now Nat.nzsimpl').	5.33146309853	837
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	1	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.0836730003357	32
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	1	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.16786813736	91
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: intros EQ; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	2.18311500549	3574
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40	66.512.128.384.0	synth with cache (only 1: intros k p q H1 H2; only 1: intros a b H; only 1: intros l L%Nat.sub_0_le; only 1: fix odd_spec 1; only 1: now auto with arith).	0.186060905457	58
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	640	synth with cache (only 1: now rewrite ?(rpow_pow_N pow_th)).	0.0836961269379	96
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	64.66.897.65	synth with cache (only 1: intros H; only 1: intros (Hr, Hr'); only 1: CRelationClasses.simpl_crelation; only 1: now elim H).	29.4347760677	2065
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	67	synth with cache (only 1: auto with arith).	0.0687429904938	8
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	707.0.256.256.65.640.192.0.385.64.1.256.0.0.582	synth with cache (only 1: Nat.cases n; only 1: intros; only 1: now Nat.nzsimpl; only 1: simple induction 1; only 1: rewrite Nat.mul_1_l; only 1: apply Nat.succ_lt_mono; only 1: induction n; only 1: Nat.order'; only 1: auto; only 1: intros H1; only 1: generalize H; only 1: intros l; only 1: intros H0; only 1: simpl; only 1: firstorder).	15.8603510857	22410
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40	0.448.260	synth with cache (only 1: intros q; only 1: fix odd_spec 1; only 1: now auto).	6.05111885071	3918
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.925622940063	615
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	320.320.320.320.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CRealEq_trans _ (z + y)); only 1: apply (CRealEq_trans _ (z + y)); only 1: apply (CRealEq_trans _ (z + y)); only 1: apply (CRealEq_trans _ (z + y)); only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: now subst; only 1: now subst; only 1: now subst; only 1: now subst).	23.9529118538	15266
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	389.3	synth with cache (only 1: simpl; only 1: f_equiv).	0.579400062561	931
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	448.0	synth with cache (only 1: intros; only 1: f_equiv).	0.443089962006	115
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0207278728485	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	260.1	synth with cache (only 1: intros (x, y); only 1: f_equiv).	1.5069270134	867
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40	65.195.260	synth with cache (only 1: repeat red; only 1: fix even_spec 1; only 1: now f_equal).	4.63318490982	9773
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40	448.128.64.194	synth with cache (only 1: intros LT; only 1: fix even_spec 1; only 1: intros c Hc IH; only 1: firstorder  discriminate).	0.94091796875	1236
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40	320.1.64.709	synth with cache (only 1: apply lt_wf_rec; only 1: constructor; only 1: intros n m p; only 1: f_equiv).	4.33773708344	6757
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40	64.769.256.2.640	synth with cache (only 1: intro LT; only 1: intros Hx; only 1: elim (Rplus_ne 1); only 1: fix gcd_divide 1; only 1: auto with real).	18.590692997	10812
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.0	synth with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	1.21548104286	215
Coq.Reals.Rtrigo_reg.derivable_cos	40
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40	512.64.384.0.0.0.65.1.0	synth with cache (only 1: intros; only 1: set (C := Rmax 1 (Rmax (Rabs x) (Rabs y))); only 1: intro; only 1: intro; only 1: pose proof (archimed_cor1 eps H) as H0; only 1: elim H0; only 1: fix ind_0_1_SS 1; only 1: unfold Un_cv, R_dist; only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).	36.8671591282	14850
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	64	synth with cache (only 1: firstorder).	0.238311052322	166
Coq.Reals.Rgeom.isometric_translation	40	0.64.1.192.576	synth with cache (only 1: compute; only 1: intros n m Hn; only 1: intros; only 1: rewrite Rmult_plus_distr_r; only 1: ring_Rsqr).	0.860877990723	794
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40	896.768.0.0.1024.192.322.320	synth with cache (only 1: red; only 1: intros H1; only 1: intro H; only 1: intro p; only 1: unfold Cauchy_crit, bound; only 1: unfold is_upper_bound; only 1: fix gcd_greatest 1; only 1: intuition subst; auto with qarith).	11.7594320774	13512
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40	705.448.640.0	synth with cache (only 1: unfold Rdiv; only 1: intros a b H; only 1: fix ind_0_1_SS 1; only 1: now rewrite <- ?Z.succ_le_mono).	0.847190141678	715
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40	64.960.769.577	synth with cache (only 1: intros H1 H2 H3; only 1: intros a H; only 1: fix even_odd_double 1; only 1: auto with real).	3.34773087502	3734
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40	833.384.2.0.1.0	synth with cache (only 1: intro; only 1: rewrite <- Ropp_0; only 1: intro; only 1: exists 1%nat; only 1: fix even_equiv 1; only 1: auto with datatypes).	5.46120405197	7005
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	1.2.0.66	synth with cache (only 1: induction 1; only 1: auto; only 1: intuition; only 1: auto with ordered_type).	2.10697007179	1641
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.0.1.8.640.642.64	synth with cache (only 1: intros a b H; only 1: intro n; only 1: destr_bool; only 1: elim H0; only 1: intros m x e f; only 1: eauto with *; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	31.1356229782	49369
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	1.3.256.2.577	synth with cache (only 1: intros a b H; only 1: intros; only 1: constructor; only 1: intuition_in; only 1: intuition).	14.0015339851	8801
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	132	synth with cache (only 1: easy).	0.102878093719	55
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.0.2	synth with cache (only 1: red; only 1: intros; only 1: intuition_in).	0.440806150436	150
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	0.0.5.64	synth with cache (only 1: intro; only 1: red; only 1: intuition_in; only 1: eauto with ordered_type).	28.5297968388	11213
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.0.448.256.65.65	synth with cache (only 1: intro; only 1: intros m IH; only 1: compute; only 1: intro z; only 1: intuition_in; only 1: order).	16.1478610039	2557
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.0	synth with cache (only 1: intros; only 1: eauto with ordered_type).	0.0497231483459	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0348219871521	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0319690704346	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0318028926849	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.0.257.512	synth with cache (only 1: intros a; only 1: intros Hn Hn'; only 1: intros m x y; only 1: eauto with ordered_type).	0.88879108429	211
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0486040115356	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0439441204071	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	2	synth with cache (only 1: intuition).	0.0256071090698	3
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	132	synth with cache (only 1: easy).	0.206784009933	87
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	448.0.7	synth with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto with relations).	9.05618810654	3362
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	450.0.0.256.0	synth with cache (only 1: destruct m; only 1: intros a b; only 1: intuition_in; only 1: intuition_in; only 1: easy || now destruct y).	0.17339515686	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	128.66.0.256	synth with cache (only 1: intros Ha; only 1: unfold lt_tree; only 1: compute; only 1: auto using in_app_or, in_or_app).	0.793756008148	481
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	2.768.0	synth with cache (only 1: unfold create; only 1: intros x y H z; only 1: intuition_in).	0.633692979813	140
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40	64.320.451.321	synth with cache (only 1: intros x y Hx; only 1: fix gcd_greatest 1; only 1: intro Hn; only 1: auto  4).	32.4657869339	8725
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40	1.386.258	synth with cache (only 1: intros x y; only 1: fix le_div2 1; only 1: auto).	5.02567887306	7817
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40	65.579.576.66	synth with cache (only 1: intros hyp; only 1: intros Hx; only 1: fix gcd_divide 1; only 1: assumption).	2.53190302849	4039
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40	2.1.448.0.512.448.3.0	synth with cache (only 1: intros m x; only 1: induction m; only 1: easy || now destruct y; only 1: intros Hz; only 1: simpl; only 1: fix even_spec 1; only 1: intro; only 1: eauto).	9.46977305412	8298
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40	64.0.258.73	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: intros; only 1: firstorder).	7.94370412827	21151
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40	130.128.193.384.584.448	synth with cache (only 1: generalize LT; only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: now destruct 1 || intros _; only 1: compute; only 1: fix le_div2 1; only 1: tauto).	14.4749860764	31417
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.1.129.0	synth with cache (only 1: unfold elements; only 1: intros Hab; only 1: intros; only 1: simpl in *; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	1.32771801949	1168
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40	704.512.451.512.321.193	synth with cache (only 1: intros a b Ha Hb; only 1: intro H0; only 1: intros n; only 1: intros x y H; only 1: fix gcd_divide 1; only 1: now repeat split).	15.9635667801	11736
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	256.0.512.80.64	synth with cache (only 1: intros m; only 1: apply eq_true_iff_eq; only 1: destruct m; only 1: intuition; only 1: intuition try easy).	3.11634802818	7424
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	512.0.2.768.386	synth with cache (only 1: intros n m; only 1: intros x x' Hx; only 1: simpl; only 1: unfold IfEq; only 1: now destruct 1 || now destruct 2).	8.84963011742	5244
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.106512069702	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40	0.0.0.128.1.514.0.0.706.196	synth with cache (only 1: red; only 1: intros a0 a; only 1: intros m x; only 1: intuition; only 1: elim H0; only 1: intuition; only 1: constructor 1; only 1: order; only 1: intuition_in; only 1: intuition_in).	34.2534952164	62320
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	65	synth with cache (only 1: now rewrite <- ?N.add_le_mono_l).	0.0304012298584	6
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	0.385.577.705.576.832.193.193	synth with cache (only 1: intros (a', H); only 1: intros EQ; only 1: intros a; only 1: intro H0; only 1: revert a; only 1: destruct H; only 1: now try Nat.order'; only 1: intuition_in).	6.76840090752	7510
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	0.130.131	synth with cache (only 1: intros (c, Hc); only 1: simpl_relation; only 1: auto using find_1, add_1 with ordered_type).	3.18264889717	5218
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	0.384.1.385.1.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros E1; only 1: generalize y, e; only 1: CRelationClasses.simpl_crelation; only 1: eauto using add_2, add_3).	3.16478490829	3555
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	1.449.834.0.67.0.0.192.0.193	synth with cache (only 1: intro H1; only 1: destruct H1; only 1: intro H; only 1: intuition; only 1: elim H0; only 1: red; only 1: compute; only 1: fix sqrtrem_spec 1; only 1: easy; only 1: auto).	19.3650560379	21935
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	192.0.386.384.194.64.320	synth with cache (only 1: intros hyp; only 1: red; only 1: generalize 1%Z; only 1: intros Ha; only 1: fix odd_spec 1; only 1: intros; only 1: now rewrite ?IHj).	12.4852159023	7854
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40	320.641.0.128.2.1	synth with cache (only 1: intro n; only 1: do 2 unfold In in *; only 1: intros a b Ha Hb; only 1: do 2 rewrite In_alt; only 1: fix gcd_divide 1; only 1: now Z.nzsimpl).	1.591796875	2073
Coq.FSets.FMapAVL.IntMake.map2_1	40	0.896.128.64.129.320	synth with cache (only 1: intros a b c; only 1: intros (c1, P2) H0 H1; only 1: unfold Equivb, Equiv, Raw.Proofs.Equivb, In; only 1: intro; only 1: fix sqrtrem_spec 1; only 1: auto).	2.08629989624	656
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	1.3.0.770.2.10	synth with cache (only 1: red; only 1: intros [| x2 d2 r2 e2]; only 1: reduce; only 1: trivial; only 1: simpl; only 1: auto).	5.77425289154	14197
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.1	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.0325407981873	3
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	193.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0311682224274	10
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	64.65.322.4.3.65.2.64	synth with cache (only 1: constructor; only 1: intros n; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition; only 1: fix le_div2 1; only 1: intros a Ha; only 1: tauto).	25.4314761162	30134
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	5	synth with cache (only 1: intuition).	4.53583908081	1638
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	390	synth with cache (only 1: intuition).	2.60799813271	1393
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	1	synth with cache (only 1: intuition).	0.160242795944	72
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	7	synth with cache (only 1: intuition).	16.8945980072	1637
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.0.0.0.448.4	synth with cache (only 1: intro H; only 1: intuition auto; BinNat.N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto; only 1: auto).	8.77691292763	6812
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	4	synth with cache (only 1: intuition).	0.294638156891	106
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	5.4	synth with cache (only 1: intro a'; only 1: intuition).	2.55433011055	1318
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	4.64	synth with cache (only 1: intro p; only 1: intuition).	3.41356801987	813
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	65.6.0	synth with cache (only 1: split; only 1: intuition; only 1: firstorder).	1.05029606819	920
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.0.3	synth with cache (only 1: intuition; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	4.81960105896	1942
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.513.768.257.0.0.1.2	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: intuition; only 1: intros a b Hb; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros y Hy; only 1: eauto).	1.52370810509	944
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	64.0.641	synth with cache (only 1: intro Hxy; only 1: red; only 1: firstorder).	0.16428899765	56
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	578	synth with cache (only 1: firstorder).	0.808305025101	326
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	384.2	synth with cache (only 1: intros n; only 1: now rewrite ?IHj).	0.0678839683533	32
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.384.258	synth with cache (only 1: intros a b H; only 1: CRelationClasses.reduce; only 1: auto).	0.227513074875	265
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	193.0.1.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite (In_eq_iff s H); only 1: firstorder  (subst; auto)).	2.27087020874	983
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	66.385	synth with cache (only 1: intros n H1 H2 m H3; only 1: firstorder).	1.27215003967	374
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.448.0.1.512.1.704.257.448	synth with cache (only 1: intros n m p; only 1: intros H; only 1: intros a0; only 1: intuition; only 1: intro; only 1: do 2 rewrite remove_iff; only 1: intros; only 1: firstorder; only 1: eauto with set).	15.9718470573	20196
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.0.64.0.194.449.261	synth with cache (only 1: intros Hn; only 1: intros Hx Hy; only 1: intro H; only 1: intuition; only 1: intros Hab; only 1: do 2 rewrite union_iff; only 1: intuition).	26.078138113	36018
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	385.385.2.0.64.66	synth with cache (only 1: intro H; only 1: red; only 1: intros n'; only 1: intro H2; only 1: intros l m a; only 1: eauto with *).	4.26566696167	5074
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.0.448.0.320.1.135.450	synth with cache (only 1: intro Hxy; only 1: intros Hz; only 1: intros; only 1: intros Hab; only 1: do 2 rewrite diff_iff; only 1: destr_bool; only 1: split; only 1: intuition; only 1: intuition).	32.8906629086	46467
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.513.448.3.64	synth with cache (only 1: intro He; only 1: intros; only 1: vm_compute in H; only 1: intros n m; only 1: eauto with set).	1.42284297943	2129
Coq.FSets.FSetPositive.PositiveSet.In_1	40	65.769.193.448	synth with cache (only 1: intros [| a l] H; only 1: auto with *; only 1: intros n m p; only 1: congruence).	1.09361100197	673
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	1.384.1	synth with cache (only 1: intros n; only 1: intro LT; only 1: intuition PeanoNat.Nat.order).	0.0455529689789	63
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	2.324.0	synth with cache (only 1: intros; only 1: intros LT; only 1: now rewrite <- ?BinNat.N.add_le_mono_l).	1.21746301651	871
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	386.195.2	synth with cache (only 1: intros x y z; only 1: intros EQ; only 1: firstorder using StronglySorted_inv).	19.1735179424	14017
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	321.0	synth with cache (only 1: intros; only 1: now rewrite <- ?BinNat.N.add_le_mono_r).	0.0378170013428	18
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.0206229686737	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	322.0	synth with cache (only 1: intros n; only 1: firstorder).	0.0298910140991	19
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	128.129	synth with cache (only 1: intro EQ; only 1: now PeanoNat.Nat.nzsimpl).	0.0663640499115	15
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	2.0	synth with cache (only 1: fix odd_spec 1; only 1: eassumption).	0.025356054306	4
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	386.256.384.0	synth with cache (only 1: intros n; only 1: induction n as [| p H]; only 1: now try split; only 1: intros n [=<-] le_mn1 le_mn2).	0.438146829605	54
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	384.2.577.5.194	synth with cache (only 1: intro H; only 1: intros; only 1: generalize H; only 1: fix even_spec 1; only 1: now BinInt.Z.nzsimpl).	7.0180478096	9572
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40	128.513.64.68.256.386	synth with cache (only 1: intro LE; only 1: compute; only 1: intro LS'; only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: now rewrite ?Ha).	6.26520490646	12619
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	321.1.133	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: now rewrite <- ?BinInt.Z.add_le_mono_l).	26.2733461857	8632
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	0.196.257.453	synth with cache (only 1: intro p; only 1: intros Az RS; only 1: fix even_spec 1; only 1: trivial).	18.36627388	26496
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	64	synth with cache (only 1: destr_bool).	0.238095998764	110
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	195.1	synth with cache (only 1: intros n m; only 1: now destruct n).	2.03383493423	2126
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: now split; only 1: now split).	0.0508000850677	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0314691066742	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	268.276.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: now constructor; only 1: constructor).	12.4473121166	54762
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0289487838745	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0297040939331	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	1.02821111679	1066
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.0.0.0.0.0.1.7.0.0.0.0.12.2.65	synth with cache (only 1: intros a; only 1: rewrite compare_inv; only 1: destruct a; only 1: unfold compare_fun; only 1: case is_empty; only 1: reflexivity; only 1: trivial; only 1: destruct b; only 1: unfold compare_fun; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: unfold compare_fun; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	14.4977841377	51125
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40	0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0.0.0.448.0	synth with cache (only 1: induction a as [| l IHl o r IHr]; only 1: inversion_clear 1; only 1: intros; only 1: rewrite compare_inv; only 1: simpl; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity; only 1: destruct o; only 1: intro; only 1: discriminate; only 1: simpl is_empty; only 1: rewrite <- andb_lazy_alt, andb_true_iff; only 1: intros [Hl Hr]; only 1: destruct b as [| l' [| ] r']; only 1: simpl compare_fun; only 1: rewrite Hl, Hr; only 1: trivial; only 1: simpl compare_fun; only 1: trivial; only 1: simpl compare_fun; only 1: rewrite (IHl Hl), (IHr Hr); only 1: simpl; only 1: case (is_empty l'); only 1: case (is_empty r'); only 1: trivial; only 1: trivial; only 1: trivial).	24.8078789711	39670
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	1.64.451	synth with cache (only 1: intros a0 a; only 1: fix le_div2 1; only 1: intuition congruence).	1.27869701385	1596
Coq.FSets.FSetPositive.PositiveSet.add_3	40	128.326	synth with cache (only 1: fix le_div2 1; only 1: now f_equal).	7.61127305031	12672
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40	576.449.322.131	synth with cache (only 1: intros a n; only 1: intro Hn; only 1: fix gcd_greatest 1; only 1: now destruct a).	24.4310500622	42022
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	323.0.0	synth with cache (only 1: intros a n m H; only 1: rewrite remove_spec; only 1: now BinInt.Z.swap_greater).	0.721116065979	471
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.1.3	synth with cache (only 1: intros n m p; only 1: rewrite remove_spec; only 1: intros (H, H'); only 1: trivial).	0.571568965912	662
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.641	synth with cache (only 1: firstorder; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.275556087494	130
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	448.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto with *).	0.04731798172	27
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40	128.2.4.128.195	synth with cache (only 1: intros Hab; only 1: intros Hn; only 1: unfold In; only 1: fix odd_spec 1; only 1: PeanoNat.Nat.auto').	7.52848005295	14960
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0294167995453	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0.512	synth with cache (only 1: intros p H; only 1: intro; only 1: rewrite inter_spec; only 1: tauto).	0.51950097084	311
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.26527094841	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	64.0.66.0.0.0.1	synth with cache (only 1: induction x; only 1: rewrite diff_spec; only 1: tauto; only 1: rewrite diff_spec; only 1: now try split; only 1: rewrite diff_spec; only 1: now subst).	0.938107013702	781
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	321.2.0	synth with cache (only 1: intros s s' x; only 1: fix odd_spec 1; only 1: now rewrite ?Hx).	0.584707021713	648
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	1.0.448.0.69	synth with cache (only 1: intros a; only 1: unfold filter; only 1: intros x x' Hx; only 1: rewrite xfilter_spec; only 1: intuition congruence).	23.0876369476	33946
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	3.0.259.0.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: red; only 1: rewrite xforall_spec; only 1: auto).	3.96910500526	7464
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.3	synth with cache (only 1: intros n m Hn; only 1: rewrite partition_filter; only 1: apply eq_refl).	1.25387096405	1940
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40	1.132	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	0.922313213348	1251
Coq.FSets.FSetPositive.PositiveSet.elements_1	40	577.257.133.0	synth with cache (only 1: unfold In; only 1: intros n m; only 1: fix sqrtrem_spec 1; only 1: eauto with arith).	5.29360604286	9548
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40	0.13	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.975147008896	4263
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40	257.577.68	synth with cache (only 1: intros n m; only 1: fix le_div2 1; only 1: BinNat.N.auto').	1.6538438797	3678
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40	2.128.256	synth with cache (only 1: intros n m Hm; only 1: fix sqrtrem_spec 1; only 1: auto).	0.199980020523	112
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40	193.706.0.0.576.68	synth with cache (only 1: intros a b Ha Hb; only 1: induction a as [| l IHl o r IHr]; only 1: discriminate; only 1: clear; only 1: fix sqrtrem_spec 1; only 1: now subst).	18.6272699833	18453
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.058413028717	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	3	synth with cache (only 1: now intros []).	0.0266978740692	4
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40	1.192.66.64.771	synth with cache (only 1: intros a; only 1: intros Hy; only 1: intros q; only 1: fix sqrtrem_spec 1; only 1: intuition).	2.75123786926	3165
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	64.2.320.7.5	synth with cache (only 1: intros H; only 1: destruct H; only 1: tauto; only 1: trivial; only 1: solve [ auto ]).	37.722165823	9163
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40	0.576.448.327	synth with cache (only 1: intros E1; only 1: fix gcd_greatest 1; only 1: intros q; only 1: auto).	2.02411484718	2147
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: simpl in H; only 1: destruct (in_app_or _ _ _ H); only 1: apply in_or_app; only 1: left; only 1: apply IHm1; only 1: auto; only 1: apply in_or_app; only 1: right; only 1: destruct (in_inv H0); only 1: injection H1 as [=-> ->]; only 1: apply in_eq; only 1: apply in_cons; only 1: apply IHm2; only 1: auto; only 1: simpl; only 1: simpl in H; only 1: destruct (in_app_or _ _ _ H); only 1: apply in_or_app; only 1: left; only 1: apply IHm1; only 1: auto; only 1: apply in_or_app; only 1: right; only 1: apply IHm2; only 1: auto).	6.31906509399	3791
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.576.0	synth with cache (only 1: induction m; only 1: auto with bool; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	15.6088750362	7928
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).	11.1082661152	7401
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	320.1.0.64.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: intuition try easy; only 1: simpl; only 1: auto; only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.189861059189	52
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	387.0.12	synth with cache (only 1: intro EQ; only 1: intros; only 1: congruence).	1.37442803383	1968
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	66	synth with cache (only 1: intuition).	0.028599023819	7
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0829119682312	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40	448.448.1.0	synth with cache (only 1: unfold MapsTo; only 1: intro H; only 1: fix gcd_divide 1; only 1: now N.nzsimpl).	0.488719940186	180
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40	192.515.137	synth with cache (only 1: red; only 1: fix gcd_greatest 1; only 1: now rewrite <- ?Nat.add_le_mono_l).	15.4888899326	23782
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40	0.0.0.0.0.0.192.0.0.0.0.64.0.256.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (xelements_complete _ _ _ _ H); only 1: clear H; only 1: intros; only 1: revert p0 H; only 1: induction p; only 1: destruct p0; only 1: simpl; only 1: intros; only 1: eauto; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros; only 1: discriminate; only 1: destruct p0; only 1: simpl; only 1: now rewrite <- ?N.add_le_mono_l; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: intros; only 1: eauto; only 1: destruct p0; only 1: now Z.nzsimpl; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros; only 1: discriminate).	17.4886639118	17222
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40	128.515.320.257	synth with cache (only 1: intros n IH; only 1: intros a b H; only 1: fix odd_spec 1; only 1: now simpl).	2.18926095963	3876
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	65.513.64.518	synth with cache (only 1: intros l H; only 1: intros a b c; only 1: fix sqrtrem_spec 1; only 1: auto with arith).	3.93438982964	7554
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.64074087143	2132
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0598721504211	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	11.0	synth with cache (only 1: intros; only 1: intuition).	2.47606992722	6231
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40	0.256.64.2.194.257	synth with cache (only 1: intro eq_dep_eq; only 1: intros x; only 1: right; only 1: red; only 1: fix even_spec 1; only 1: intuition).	1.44997000694	1798
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	129.69	synth with cache (only 1: intros L R n; only 1: intuition).	2.19485497475	2807
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.1.65	synth with cache (only 1: repeat red; only 1: firstorder  (subst; auto); only 1: apply (empty_1 H)).	2.04743099213	200
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.3	synth with cache (only 1: destr_bool; only 1: intuition).	0.0815360546112	56
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.384.0.0.0.256.0.129.64	synth with cache (only 1: intros E; only 1: intros x; only 1: split; only 1: firstorder using StronglySorted_inv; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros n; only 1: apply add_2; only 1: auto; only 1: auto).	1.65475702286	1484
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	0.0632038116455	8
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	386.1.0.0.1.0.64.0.0.514	synth with cache (only 1: intros m; only 1: unfold In; only 1: intros; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: eauto with *).	6.23874092102	10971
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	1.0.321.1.4.4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: now auto; only 1: intuition; only 1: discriminate).	12.1800010204	23698
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.0.320	synth with cache (only 1: intros n m p Hm; only 1: intros; only 1: auto with map).	0.0467388629913	32
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	448.0.0.64.2.131.3.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: symmetry; only 1: rewrite <- find_mapsto_iff; only 1: firstorder; only 1: apply add_3 with x e; only 1: auto; only 1: auto with *).	18.4111959934	25292
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.39098405838	138
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.65.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with *; only 1: auto with map).	0.297789096832	56
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2	synth with cache (only 1: repeat split).	0.0279290676117	30
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.0	synth with cache (only 1: intros; only 1: now intuition).	0.266386985779	4
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	128.192.64.66.449	synth with cache (only 1: intros H0; only 1: intros EQ; only 1: intros a b H; only 1: red in H; only 1: congruence).	4.30124497414	6065
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	3	synth with cache (only 1: auto).	0.0612349510193	78
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	321.193.576.256.1.320.1.0.64.263.3	synth with cache (only 1: split; only 1: intro z; only 1: red; only 1: intuition; only 1: intros (e, H); only 1: compute; only 1: now intuition; only 1: intros (Ha, H); only 1: vm_compute; only 1: intros LE EQ; only 1: eauto).	5.1211578846	7554
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40	65.390	synth with cache (only 1: fix gcd_divide 1; only 1: eauto with arith).	10.7417488098	11095
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40	192.321.256.0.513.0.1.457	synth with cache (only 1: intros Ha Hb H; only 1: apply fold_rec; only 1: intros; only 1: now BinInt.Z.nzsimpl'; only 1: intros; only 1: contradict H2; only 1: intros Hab; only 1: firstorder  (subst; auto)).	11.4838349819	12161
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	1.195.0.324.0.582	synth with cache (only 1: intros m'; only 1: rewrite cardinal_1, elements_Empty; only 1: generalize LT; only 1: intros; only 1: rewrite H  at 1; only 1: constructor).	8.47920107841	12249
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	0.0.0.0.0.0.0.513.192.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: exfalso; only 1: intuition auto; BinNat.N.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	1.19656705856	1530
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	66.1.129	synth with cache (only 1: intros y Ryx; only 1: compute; only 1: firstorder  discriminate).	1.01426410675	1571
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40	128.66.0.576.513	synth with cache (only 1: intros Hb; only 1: intros r H; only 1: unfold partition; only 1: fix odd_spec 1; only 1: now subst).	5.52101898193	3902
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	325.1	synth with cache (only 1: intros m m' Hm; only 1: firstorder  (subst; auto)).	1.0891149044	1185
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	0.2	synth with cache (only 1: compute; only 1: firstorder).	0.492872953415	24
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.0.64.128	synth with cache (only 1: intro; only 1: intro H; only 1: do 2 rewrite cardinal_fold; only 1: intros Hiff; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	5.35800814629	2185
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	1.0.132	synth with cache (only 1: intro H1; only 1: fix even_spec 1; only 1: intuition).	1.61251306534	2201
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40	0.5.128	synth with cache (only 1: red; only 1: fix odd_spec 1; only 1: auto).	3.04746603966	2889
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40	64.1.449.131.195.129	synth with cache (only 1: intro EQ; only 1: intros m a b Ha; only 1: destruct b; only 1: fix odd_spec 1; only 1: intros; only 1: auto with arith).	29.5518400669	54560
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40	0.0.771.66.192.194	synth with cache (only 1: intros H; only 1: intros Hb; only 1: intro; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: intuition).	3.45856881142	5799
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	320.1.128	synth with cache (only 1: intros Hb; only 1: intro H; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r).	0.0726191997528	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	448	synth with cache (only 1: now constructor).	0.0209670066833	29
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	386.384.3	synth with cache (only 1: intros; only 1: intro x; only 1: now destruct 1).	3.80439281464	6575
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	576.386.450.66	synth with cache (only 1: intros i j Hi E; only 1: intros a Ha; only 1: fix le_div2 1; only 1: easy || now destruct 1).	21.1965749264	22580
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	0.0.0.64.512.512.193.256.0.0.1	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: functional induction (add x e' m); only 1: intros EQ; only 1: eauto with *; only 1: intros H ?; only 1: intros s; only 1: eauto; only 1: inversion_clear 2; only 1: auto; only 1: auto).	2.81767296791	2404
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	0.0.449.256	synth with cache (only 1: intros LT; only 1: fix gcd_greatest 1; only 1: intros NoDup hyp; only 1: auto).	0.301186084747	304
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	1.448.0.0.64.449.1.1.2	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: generalize Hm; only 1: intros a b c; only 1: intro H1; only 1: generalize Hm; only 1: clear Hm; only 1: fix odd_spec 1; only 1: trivial).	29.8364531994	49064
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	0.0.578.514.1	synth with cache (only 1: intros m Hm x y; only 1: intros a n; only 1: fix odd_spec 1; only 1: generalize Hm; only 1: auto).	28.2615571022	25058
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.104712963104	8
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	256.393	synth with cache (only 1: fix odd_spec 1; only 1: simpl_relation).	4.08247709274	10777
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	3	synth with cache (only 1: auto).	0.0146510601044	4
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	1	synth with cache (only 1: auto).	0.0251731872559	29
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	3	synth with cache (only 1: auto).	0.0440599918365	62
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	769.0.384.7	synth with cache (only 1: induction m; only 1: intuition PeanoNat.Nat.order; only 1: simpl in *; only 1: CRelationClasses.simpl_crelation).	8.74651098251	14751
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40	64.513.0.450	synth with cache (only 1: intros n IH; only 1: intros m Hm x; only 1: fix gcd_greatest 1; only 1: trivial).	5.656291008	5910
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	192.65.0.70	synth with cache (only 1: intros n Hn; only 1: intros m Hm x; only 1: fix even_spec 1; only 1: now auto with arith).	34.1294579506	23334
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40	64.0.256.2.0	synth with cache (only 1: unfold Equivb, equal; only 1: unfold Submap, submap; only 1: fix le_div2 1; only 1: intros; only 1: solve [ auto ]).	8.58114814758	10207
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40	514.330	synth with cache (only 1: fix odd_spec 1; only 1: PeanoNat.Nat.auto').	6.91982007027	19256
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	2.68907499313	2881
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40	193.195.0	synth with cache (only 1: unfold combine, combine_r, combine_l; only 1: fix odd_spec 1; only 1: PeanoNat.Nat.auto').	8.20276904106	6651
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40	1.196.128	synth with cache (only 1: intros m Hm; only 1: fix even_spec 1; only 1: auto).	2.46301198006	1812
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40	1.387.385.257.192	synth with cache (only 1: repeat red; only 1: intros l1 l2; only 1: intros x y z; only 1: fix even_spec 1; only 1: auto).	2.00382995605	3629
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40	192.256.128.1.1.4.0	synth with cache (only 1: intros m; only 1: case m; only 1: induction m; only 1: red; only 1: fix gcd_greatest 1; only 1: intros f Hf H0; only 1: auto with sets).	4.20065307617	10481
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	133	synth with cache (only 1: easy).	0.0924639701843	219
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	256.9	synth with cache (only 1: fix even_spec 1; only 1: eauto).	19.1968510151	11901
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	128.320.0.704.0.514.0.256.384.64.580	synth with cache (only 1: intros (m, H); only 1: intros l'; only 1: intro n; only 1: intros a0; only 1: red; only 1: pattern n; only 1: simpl in *; only 1: destruct m; only 1: inversion 1; only 1: intro LE; only 1: now f_equal).	20.9885308743	37107
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40	0.448.129.66.128	synth with cache (only 1: unfold Decidable.decidable, not; only 1: intros [Hl Hr]; only 1: intros Az RS n H1 H2; only 1: fix gcd_greatest 1; only 1: auto).	3.47380590439	4016
Coq.FSets.FMapWeakList.Make.Elt.add_3	40	1.449.66.384.0	synth with cache (only 1: intros m; only 1: intros a b H; only 1: intros RS' n; only 1: fix even_spec 1; only 1: auto).	1.90511608124	1128
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40	2.322.66.128	synth with cache (only 1: intro n; only 1: intros a' y H H0; only 1: fix le_div2 1; only 1: auto).	16.9875609875	18957
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40	64.321.512.324.513	synth with cache (only 1: intros (U, V); only 1: intros A l; only 1: fix le_div2 1; only 1: induction 1; only 1: auto with arith).	9.65979886055	25427
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	66.64.0	synth with cache (only 1: intros m; only 1: intro; only 1: trivial).	0.0268909931183	11
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0196189880371	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	258.455.0.138	synth with cache (only 1: compute; only 1: intros; only 1: destruct m; only 1: now simpl).	2.14508700371	9513
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	322.0	synth with cache (only 1: intros m; only 1: now split).	0.0240409374237	19
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40	1.707.448.66.0.384	synth with cache (only 1: intros P H0 HS; only 1: intros m; only 1: intros a Ha; only 1: intros hyp; only 1: fix gcd_greatest 1; only 1: auto).	8.59524178505	14584
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	synth with cache (only 1: red; only 1: auto).	0.0239470005035	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	synth with cache (only 1: Dec.fsetdec).	0.0367469787598	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	834.320.3.321.1.194	synth with cache (only 1: intro LE; only 1: intros; only 1: repeat red; only 1: intuition; only 1: firstorder; only 1: firstorder).	8.81344985962	9475
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	128.128.0.515.132.387.129.0.0.705	synth with cache (only 1: split; only 1: red; only 1: unfold In; only 1: intros Hab; only 1: vm_compute; only 1: intros Hb; only 1: Dec.fsetdec; only 1: red; only 1: red; only 1: now subst).	4.8707048893	14667
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	129.0.262	synth with cache (only 1: intros q; only 1: intros; only 1: firstorder).	2.0960021019	2116
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	8.6.0.132	synth with cache (only 1: intros n; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	11.6821100712	15794
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	2.90077805519	985
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	70	synth with cache (only 1: intuition).	2.38151597977	762
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0325319766998	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	8	synth with cache (only 1: auto with set).	0.229143857956	405
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	2.86998200417	535
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	197.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	1.23396205902	449
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	5.21626782417	1198
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.0296940803528	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	14.8130328655	2314
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	3.05841207504	677
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (diff s s') x), (mem_iff s x), (mem_iff s' x), (diff_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (mem x (diff s s')); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	22.4070608616	6980
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.0.256	synth with cache (only 1: intros def_n0; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.143425941467	66
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.384.3.2.1	synth with cache (only 1: rewrite mem_iff; only 1: intros; only 1: destruct (mem x s); only 1: now PeanoNat.Nat.nzsimpl'; only 1: intuition).	2.61155796051	2239
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: auto with set).	0.0274541378021	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	384.0.1.0.1.0.1.0.0.3	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: easy').	8.27152514458	1434
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0430459976196	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0419230461121	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	0.1.0.0	synth with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: auto).	0.0418410301208	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	578.0	synth with cache (only 1: intros; only 1: firstorder).	0.797662973404	94
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.733431100845	158
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	3	synth with cache (only 1: auto with set).	0.0594019889832	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0288829803467	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	2.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.395394086838	153
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.0.0.0.2	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.480509996414	136
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: auto with set).	0.0273129940033	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0397629737854	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0332870483398	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0345959663391	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0309419631958	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set).	0.0294909477234	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0376408100128	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0356440544128	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0314791202545	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.146161079407	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0311050415039	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.038407087326	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.031387090683	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0324330329895	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0305871963501	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.027704000473	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0302050113678	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	4.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	1.06492114067	348
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0280361175537	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0294568538666	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0863170623779	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0306870937347	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0341701507568	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0327157974243	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0286819934845	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.104913949966	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0368700027466	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.0.0.0.0.0.1.66	synth with cache (only 1: inversion 1; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	5.24551320076	2514
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.0244069099426	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0763320922852	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.743175983429	826
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	0.0.513.257.67	synth with cache (only 1: intro; only 1: intro H; only 1: compute in H; only 1: rewrite <- not_mem_iff; only 1: intuition).	1.49669313431	1944
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.512	synth with cache (only 1: intros H ?; only 1: auto with set fset).	0.0417680740356	34
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	2	synth with cache (only 1: solve_proper).	0.0498340129852	23
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	897	synth with cache (only 1: now intuition).	0.719847917557	112
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0321910381317	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	707.2.0.0.0.577.256	synth with cache (only 1: intro a; only 1: vm_compute; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: intros H0 H1; only 1: eauto with *).	14.4166660309	13106
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	1.3.257	synth with cache (only 1: intros a n H; only 1: f_equal; only 1: auto).	1.01058077812	315
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	0.0.1.2.1.128.320.0.0	synth with cache (only 1: intros; only 1: apply fold_rel with (R := eqA); only 1: now subst; only 1: intros Az RS; only 1: intuition; only 1: rewrite H; only 1: intuition; only 1: auto; only 1: auto).	20.4596300125	4804
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40	261.512.0.0.0.0.782.75	synth with cache (only 1: intuition; only 1: assert (comm : forall x y, x + y = y + x); only 1: intros n m; only 1: nzinduct n; only 1: now PeanoNat.Nat.nzsimpl; only 1: intro; only 1: firstorder using StronglySorted_inv; only 1: eauto with *).	29.7072029114	80134
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40	65.256.0.0.3.385.0.1	synth with cache (only 1: intro n; only 1: intuition; only 1: exists n; only 1: intros; only 1: split; only 1: auto; only 1: fix le_div2 1; only 1: auto with sets).	0.917048931122	1997
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	67.577.1	synth with cache (only 1: simpl; only 1: firstorder; only 1: eauto with set).	0.722034931183	1125
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	580.321.2	synth with cache (only 1: simpl in *; only 1: intro Pdec; only 1: eauto).	0.381073951721	1050
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	129.259.0.195.384.321.576	synth with cache (only 1: intros m; only 1: reduce; only 1: compute in H; only 1: generalize H; only 1: case M.equal; only 1: eauto; only 1: now simpl).	22.7752139568	54627
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40	0.449.192.76	synth with cache (only 1: intros EQ; only 1: intro H1; only 1: fix gcd_greatest 1; only 1: now auto with arith).	4.42184686661	19813
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.0.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).	1.84139418602	4621
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40	0.512.193.134	synth with cache (only 1: intros A B f l; only 1: intros Hb; only 1: fix gcd_divide 1; only 1: auto).	3.04925489426	6958
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	64.0.457.0.3	synth with cache (only 1: intros n m; only 1: unfold elements; only 1: fix gcd_greatest 1; only 1: intros; only 1: intuition).	16.3431777954	44422
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	194.0.0.2.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case M.empty; only 1: firstorder; only 1: case (M.elements s); only 1: simpl_relation).	1.18889403343	1822
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.360966920853	208
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	29.1840720177	10353
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	33.3338150978	5049
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0327649116516	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.1	synth with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.249964952469	68
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.1.66.0	synth with cache (only 1: unfold singleton; only 1: intros x y H; only 1: case (M.singleton x); only 1: firstorder).	0.696408033371	919
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0.0.256.0	synth with cache (only 1: intros s s' x; only 1: simpl_relation; only 1: unfold union; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).	0.208953142166	208
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0281097888947	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0273139476776	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0.0.0.4	synth with cache (only 1: intros; only 1: unfold inter; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.singleton x); only 1: case (M.inter s s'); only 1: firstorder).	1.69010090828	5151
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0300149917603	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.384.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: intros n IH; only 1: case (M.inter s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.439347028732	477
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40	0.193.0.0.582.6	synth with cache (only 1: intro; only 1: intros a b Ha; only 1: unfold elements; only 1: case (M.elements s); only 1: fix even_spec 1; only 1: firstorder).	14.6878619194	39274
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0168471336365	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	193.448.1	synth with cache (only 1: intros; only 1: intros x y z; only 1: now rewrite H).	0.207827091217	106
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40	0.513.1.2.0.4.0.0	synth with cache (only 1: intros s x y; only 1: intros; only 1: case (M.mem x s); only 1: auto; only 1: case (M.remove x s); only 1: case (M.elements s); only 1: fix gcd_greatest 1; only 1: firstorder).	10.4066579342	33568
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.0.0.0.0.66.1	synth with cache (only 1: intros s x; only 1: intro n; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	9.77188181877	5255
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.294459104538	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0480890274048	6
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40	192.194.0.0.0	synth with cache (only 1: intros s f; only 1: unfold partition; only 1: case M.partition; only 1: fix even_spec 1; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	4.33511400223	4148
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	6	synth with cache (only 1: solve_proper).	4.19285798073	4688
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40	3.129.322.15.0	synth with cache (only 1: split; only 1: fix odd_spec 1; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro; only 1: intuition).	31.2867729664	70936
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.187179088593	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	192.192.0.0	synth with cache (only 1: red; only 1: split; only 1: now subst; only 1: now subst).	0.0372488498688	22
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.45933008194	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.063422203064	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0292210578918	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.048308134079	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0515549182892	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0419981479645	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0313799381256	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0635740756989	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.057336807251	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0765421390533	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0479698181152	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.204071998596	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.7	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.837296962738	650
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0620539188385	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	1.384.3	synth with cache (only 1: intuition; only 1: repeat red; only 1: fsetdec).	0.155926942825	141
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.0820322036743	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.163926839828	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.104919910431	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.129498004913	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.288870096207	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.138715982437	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.107935190201	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.282725095749	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	3	synth with cache (only 1: fsetdec).	0.133167028427	17
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0755209922791	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.111023902893	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.107849121094	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.165817975998	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	3.65	synth with cache (only 1: intro n; only 1: fsetdec).	0.304785966873	179
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.170948028564	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.311647891998	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.277533769608	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0391359329224	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0379641056061	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0594909191132	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0611231327057	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0646569728851	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0751509666443	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0728759765625	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	synth with cache (only 1: fsetdec).	0.0933380126953	41
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0834980010986	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0727641582489	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.104475021362	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.101130962372	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.145354032516	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.195077896118	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.207916975021	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.176994085312	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0.64	synth with cache (only 1: intro; only 1: fsetdec).	0.174865007401	46
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.056832075119	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0514209270477	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0451989173889	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0405600070953	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0563027858734	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0657920837402	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0763881206512	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.047691822052	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.110476016998	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.11191701889	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.171694993973	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.142336845398	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	0.0.0.0.0.1.2.321	synth with cache (only 1: constructor; only 1: intro H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).	0.669669866562	1098
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.512.130	synth with cache (only 1: intros n m; only 1: pattern n; only 1: fsetdec).	0.282692909241	120
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.396416902542	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.347903966904	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.286202192307	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.0.128.0.0.0.193.67	synth with cache (only 1: intros x H2; only 1: intro EQ; only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: CRelationClasses.simpl_crelation; only 1: intros; only 1: eauto).	0.788239002228	1238
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	512.385.0.0.1.581	synth with cache (only 1: intros Hn Hm; only 1: intros n m p H; only 1: intros; only 1: apply fold_rec; only 1: now try rewrite H; only 1: fsetdec).	13.512168169	11432
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.0.0.0.1.448.451.259	synth with cache (only 1: intro n; only 1: intro Hn; only 1: intros a Ha; only 1: intuition; only 1: rewrite M.fold_1; only 1: auto; only 1: exact eq_equivalence; only 1: eauto).	3.00843691826	6162
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.132.320	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	24.9367530346	35440
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0345151424408	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	512.193	synth with cache (only 1: intro l'; only 1: firstorder).	0.10254907608	63
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.64.0.0.0.388	synth with cache (only 1: intro a'; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: intro; only 1: fsetdec).	4.23314595222	7752
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.1.0.0.0.2.3	synth with cache (only 1: intros; only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with *; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	3.81113290787	10532
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	1	synth with cache (only 1: auto with set fset).	0.630574941635	609
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0317759513855	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0353178977966	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).	0.0358049869537	4
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.65	synth with cache (only 1: intros a n p Hn; only 1: intros; only 1: intuition).	1.43015599251	8
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	448.64.129.2	synth with cache (only 1: split; only 1: intro H; only 1: reflexivity; only 1: now rewrite <- ?BinInt.Z.add_le_mono_r).	0.131269931793	115
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.0.70	synth with cache (only 1: intros Heq; only 1: intros n'; only 1: fsetdec).	2.30550718307	2512
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0.194.65.128	synth with cache (only 1: intros a b c0; only 1: intros H; only 1: intros R L n; only 1: fsetdec).	1.5582690239	1149
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.4	synth with cache (only 1: intro m; only 1: intuition).	0.287353992462	165
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	3.73	synth with cache (only 1: intros m IH; only 1: fsetdec).	1.37420988083	1748
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.514.0	synth with cache (only 1: intros a Ha; only 1: intros n m; only 1: fsetdec).	0.136384963989	149
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.100629091263	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.141222000122	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0.66	synth with cache (only 1: intros l; only 1: fsetdec).	0.587044000626	124
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0.193.137	synth with cache (only 1: repeat red; only 1: intro H2; only 1: fsetdec).	2.07570886612	1745
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	131.0	synth with cache (only 1: intros a b n Ha Hb Hn; only 1: fsetdec).	0.974823951721	147
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.323089122772	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.0.64	synth with cache (only 1: intro H; only 1: unfold Subset; only 1: firstorder).	0.169906139374	16
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.386	synth with cache (only 1: intros n m p q; only 1: fsetdec).	0.142733097076	44
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.512.321	synth with cache (only 1: intros Hn; only 1: intro p; only 1: fsetdec).	0.481265068054	128
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0.0.129	synth with cache (only 1: intros y q u H; only 1: intuition; only 1: fsetdec).	0.213074922562	89
Coq.FSets.FMapList.Raw.Elt.empty_1	40	322	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.134714126587	140
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	4	synth with cache (only 1: constructor).	0.017462015152	45
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	388.0	synth with cache (only 1: intros; only 1: now destruct 1).	0.241527080536	398
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40	2.512.449.0.321.448	synth with cache (only 1: intros a H; only 1: intros m; only 1: unfold PX.MapsTo; only 1: intros x x' Hxx'; only 1: fix gcd_divide 1; only 1: auto).	29.5924129486	13999
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40	2.448.1.1	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: fix le_div2 1; only 1: auto).	1.06495380402	1191
Coq.FSets.FMapList.Raw.Elt.remove_1	40	193.194.0.1.0	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: clear Hm; only 1: fix le_div2 1; only 1: now simpl).	3.64907884598	3361
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	0.514.66.1	synth with cache (only 1: intros m Hm x y; only 1: intro n; only 1: fix gcd_greatest 1; only 1: intuition).	15.0284268856	10467
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	65.578.0.4.1	synth with cache (only 1: intros m Hm x; only 1: generalize Hm; only 1: clear Hm; only 1: fix gcd_greatest 1; only 1: tauto).	20.1181440353	25694
Coq.FSets.FMapList.Raw.Elt.elements_1	40	129	synth with cache (only 1: auto with arith).	0.0690150260925	23
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0141220092773	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	65.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: tauto).	0.0406310558319	7
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40	576.129.0.64.1.0	synth with cache (only 1: intros m Hm m' Hm' cmp; only 1: clear Hm Hm'; only 1: fix odd_spec 1; only 1: destruct m'; only 1: now auto with arith; only 1: now trivial).	3.36086797714	2629
Coq.FSets.FMapList.Raw.Elt.equal_cons	40	386.128.641.1.0	synth with cache (only 1: intros m Hm m' Hm' cmp; only 1: unfold Equivb; only 1: intros a b Ha; only 1: fix even_spec 1; only 1: CRelationClasses.simpl_crelation).	8.90196204185	1680
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	3.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).	2.19583106041	1514
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	64.0.2.1.0.0.0.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: eauto).	7.05075907707	6856
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40	0.0.0.66.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: intros (e, abs); only 1: inversion abs; only 1: simpl; only 1: destruct a as (x', e); only 1: intros hyp; only 1: inversion hyp; only 1: clear hyp; only 1: inversion H; only 1: subst; only 1: rename x0 into e'; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: destruct IHm as (e'', hyp); only 1: firstorder; only 1: exists e''; only 1: constructor 2; only 1: auto).	24.9764389992	21011
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	67.1.0.0.0.0.0.64.1	synth with cache (only 1: induction m; only 1: intros l1 l2; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear H; only 1: eauto).	6.97497391701	4927
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	1.24532580376	579
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40	64.0.135.64	synth with cache (only 1: intros hyp; only 1: fix le_div2 1; only 1: intros; only 1: eauto with *).	17.2877721786	6739
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40	514.384.256.194.129	synth with cache (only 1: compute; only 1: intros a b l H; only 1: intros y [H1 H2]; only 1: fix le_div2 1; only 1: eauto).	14.0141630173	6628
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40	2.0.452.256	synth with cache (only 1: intros H x; only 1: fix le_div2 1; only 1: intros; only 1: auto).	37.1376619339	34206
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40	64.577.1.0.192.257.320.64	synth with cache (only 1: unfold eqk, ltk; only 1: intro a; only 1: intro EQ; only 1: intros n m p; only 1: rewrite <- map2_alt_equiv; only 1: unfold map2_alt; only 1: fix gcd_greatest 1; only 1: firstorder  (subst; auto)).	18.3154211044	22726
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	1.576	synth with cache (only 1: intro p; only 1: inversion 1).	0.0515580177307	81
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40	448.1.64.3.324	synth with cache (only 1: intros (H, H'); only 1: intros sorted belong1; only 1: intros l; only 1: simpl; only 1: easy || now destruct 1).	34.1031451225	38731
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40	0.192.192	synth with cache (only 1: repeat red; only 1: fix even_spec 1; only 1: eauto with *).	1.08201980591	346
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0137989521027	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0204350948334	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	513.579.0	synth with cache (only 1: intros m; only 1: destruct m; only 1: auto with relations).	0.146603107452	274
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	193.0	synth with cache (only 1: intros m; only 1: f_equiv).	0.0254271030426	12
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40	1.517.320.257.0	synth with cache (only 1: intros m; only 1: intro n; only 1: intros Hab; only 1: fix gcd_greatest 1; only 1: auto).	24.2157809734	12792
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40	1.448.66.0.0.0.0.0.0.0.0.0.0.0.0.0.0.448.66	synth with cache (only 1: intro n; only 1: intros H a b; only 1: pattern a; only 1: simpl; only 1: pattern a; only 1: simpl; only 1: pattern a; only 1: simpl; only 1: pattern a; only 1: simpl; only 1: pattern a; only 1: simpl; only 1: pattern a; only 1: simpl; only 1: pattern a; only 1: simpl; only 1: intros EQ; only 1: fix odd_spec 1; only 1: trivial).	9.54183697701	16035
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40	449.449.260.320.0	synth with cache (only 1: intros elt elt' m; only 1: intros x; only 1: intro n; only 1: fix even_spec 1; only 1: now f_equiv).	6.50690484047	14991
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40	577.193.256.512.65	synth with cache (only 1: intro; only 1: intros a; only 1: intros N; only 1: fix le_div2 1; only 1: PeanoNat.Nat.auto').	2.27611494064	3400
Coq.FSets.FMapList.Make_ord.eq_equal	40	192.0.1.0	synth with cache (only 1: destr_bool; only 1: revert m; only 1: fix even_spec 1; only 1: auto with ordered_type).	0.0390820503235	8
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40	384.129.449.197.448.3.3	synth with cache (only 1: unfold eq; only 1: intros; only 1: f_equiv; only 1: intro H0; only 1: compute; only 1: fix gcd_divide 1; only 1: auto with *).	24.6969749928	53403
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40	192.66.514	synth with cache (only 1: intros (U, V); only 1: fix gcd_greatest 1; only 1: intuition congruence).	3.56074380875	7309
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	1.64	synth with cache (only 1: red; only 1: auto with sets).	0.0225150585175	7
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40	1.448.577.64	synth with cache (only 1: intros l1 l2; only 1: intro LE; only 1: fix odd_spec 1; only 1: auto using d_nil).	1.19106578827	1616
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40	0.0.0.256.199	synth with cache (only 1: intro n; only 1: fix gcd_divide 1; only 1: intros l1 l2; only 1: intros; only 1: auto with sets).	6.80411601067	15998
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40	1.325.1.65	synth with cache (only 1: intro; only 1: intro; only 1: fix le_div2 1; only 1: auto).	11.0977630615	26038
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40	64.449.389.2.448	synth with cache (only 1: intros a; only 1: intro H; only 1: intro H1; only 1: fix gcd_greatest 1; only 1: easy).	36.3813519478	66434
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	192.66.320.448	synth with cache (only 1: intros a b Ha; only 1: intro H; only 1: intros n l d; only 1: now apply H).	32.9225480556	2026
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.1.2.3.8	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	28.8440411091	4394
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.67.10	synth with cache (only 1: red; only 1: left; only 1: assumption).	0.266998052597	808
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.129.0.0.70	synth with cache (only 1: intro H; only 1: intros y H2; only 1: induction H2; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	4.17045378685	411
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.128.1	synth with cache (only 1: red; only 1: intros H; only 1: auto with sets).	0.0242331027985	8
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	66.0.3.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: constructor).	36.2101531029	61844
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.64	synth with cache (only 1: red; only 1: unfold unorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]).	0.326237916946	209
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.2.0.0.0.0.0.8	synth with cache (only 1: induction d; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	31.2237510681	64850
Coq.Numbers.DecimalFacts.unorm_invol	40	0	synth with cache (only 1: now induction d).	0.0178010463715	1
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	5	synth with cache (only 1: now induction d).	0.268306970596	69
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0	synth with cache (only 1: now destruct n).	0.0267140865326	1
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	0.0.1.64.192.0.0.0.129.0.0.0.0.0.0.0.65	synth with cache (only 1: intros H; only 1: simpl; only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl in *; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: Morphisms.solve_proper; only 1: easy || now destruct y; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	13.4566349983	11572
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0248761177063	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2	synth with cache (only 1: auto with arith).	0.0393769741058	27
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.0328750610352	4
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40	0.1.458.128.705.67.0	synth with cache (only 1: simpl; only 1: Bool.destr_bool; only 1: inversion H; only 1: cut (1%positive = 1%positive); only 1: fix gcd_divide 1; only 1: trivial; only 1: trivial).	25.1143429279	46443
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	1.0.0.0.0.0.0	synth with cache (only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: revert n; only 1: intros; only 1: now simpl).	0.0574209690094	21
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	1.0.0.0.0.0.0.0.192.0.128.3.0.4.0	synth with cache (only 1: unfold Nat.of_uint; only 1: induction d; only 1: now Nat.nzsimpl; only 1: trivial; only 1: now Morphisms.f_equiv; only 1: simpl; only 1: reflexivity || destruct H; only 1: now destruct nztail; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	3.50269198418	5912
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	512.8.1	synth with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: N.auto').	2.99263596535	2642
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40	131.1.770.900.0.0.192.3	synth with cache (only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: intros HH; only 1: unfold N.to_uint, Pos.to_uint; only 1: destruct (Pos.of_uint d) eqn:E; only 1: eexists; only 1: eauto; only 1: generalize (DecimalPos.Unsigned.to_of d); only 1: firstorder).	9.59804606438	22393
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.18243598938	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	66.0.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now Morphisms.f_equiv).	0.0707719326019	8
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	1.19575190544	1037
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0409531593323	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0401659011841	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0395720005035	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0385298728943	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.2.196	synth with cache (only 1: intro y0; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	2.29227209091	1554
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.64.0	synth with cache (only 1: intros n m p; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	0.137676954269	30
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.35002684593	1971
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	1.1.192.389	synth with cache (only 1: intro p; only 1: firstorder; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.39368700981	1470
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0363550186157	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.577.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now trivial; only 1: simpl; only 1: now try order').	0.658681869507	520
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.123237133026	208
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.71	synth with cache (only 1: firstorder; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	2.32456803322	3472
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).	3.19490098953	3242
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	3.256.320	synth with cache (only 1: intros a b H; only 1: intro; only 1: now rewrite <- H).	0.422518968582	244
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0671999454498	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0681960582733	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0777931213379	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0300509929657	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	192.0.449	synth with cache (only 1: intros H; only 1: bitwise; only 1: solve_proper).	0.130239963531	119
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0303490161896	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40	386.0.0.64	synth with cache (only 1: intros b; only 1: intro n; only 1: bitwise; only 1: auto with bool).	0.352128982544	273
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	449.193.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: generalize (log2_le_mono _ _ (le_succ_diag_r a)); only 1: CRelationClasses.simpl_crelation).	0.0943779945374	38
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	64.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: solve_proper).	28.4968540668	34050
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40	68.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.380730867386	359
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	450.0.1.256	synth with cache (only 1: intros n; only 1: intros a b; only 1: bitwise; only 1: firstorder).	3.1403939724	3168
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0355999469757	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0382399559021	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	513.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: simpl_relation).	0.585749864578	661
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	1.449.576.1.64.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: f_equiv; only 1: bitwise; only 1: pose proof (lt_trichotomy m 0); only 1: compute; only 1: now rewrite Ha, Hb).	37.2931511402	12878
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.0.3.72	synth with cache (only 1: unfold lnot; only 1: rewrite opp_0; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0).	0.383605957031	979
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.150605916977	147
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	1.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0582640171051	16
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40	0.0.514.258.3	synth with cache (only 1: intros a a' Ha; only 1: apply bits_inj'; only 1: compute; only 1: intros; only 1: now rewrite Ha).	5.55208492279	7682
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0345299243927	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0823769569397	25
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.1.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	1.17648887634	1679
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0669028759003	25
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	1.05910897255	1075
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	3.576.0	synth with cache (only 1: unfold lcm; only 1: intros H x0; only 1: apply abs_nonneg).	1.20418190956	665
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.805245161057	1208
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.1.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.773985147476	1151
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.252671957016	165
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.330741882324	315
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0438458919525	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	4.08215808868	4520
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.256.0.128.0.0.0.0.0.0.0.512.321.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: destruct_max n; only 1: trivial; only 1: now rewrite opp_nonneg_nonpos; only 1: pose proof (lt_trichotomy n 0); only 1: assert (AUX : forall a b, 0 < a -> 0 < b -> S a + S b <= S a * S b); only 1: intros a b Ha Hb; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: apply le_succ_l; only 1: rewrite <- add_assoc, <- (add_0_l (a + b)), (add_comm b); only 1: apply add_lt_mono_r; only 1: now apply mul_pos_pos; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros n1 n2 H; only 1: now apply divide_abs_l).	2.8080201149	2855
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	2.74326300621	1937
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	3.23139500618	3224
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	32.488256216	18838
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	6.23212099075	3189
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0435109138489	3
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	2.3.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.335736989975	391
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.3.0	synth with cache (only 1: intro n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.499223947525	500
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.6.1	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	21.2142448425	8807
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.0.0.194	synth with cache (only 1: intros Hfst Hsnd; only 1: intro; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	3.6225540638	2262
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.259.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: apply lt_pred_le; only 1: order).	3.33179497719	3020
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	0.2.256.0.321.128.6	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases n m) as [LE| LT]; only 1: congruence; only 1: intro H; only 1: setoid_rewrite H; only 1: apply lt_le_incl; only 1: apply lt_pred_l).	8.1200261116	15413
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	1.0.192.0.0.2.386.67.67	synth with cache (only 1: red; only 1: intros n H; only 1: rewrite <- lt_le_pred; only 1: split; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: intro RS'; only 1: now apply lt_pred_le; only 1: apply lt_pred_le).	15.4750130177	34536
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.371013879776	246
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.4.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	1.44990420341	1716
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.0.0.5.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply lt_succ_r).	10.1153128147	10896
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.6.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	5.33016610146	3486
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	5.42786502838	9362
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.2.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').	0.73114490509	842
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0521628856659	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0569820404053	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	258.1.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: intuition).	0.0736620426178	93
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.1.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	3.0848069191	2921
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0513389110565	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	6.2.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	37.2471790314	38592
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0282609462738	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.0561981201172	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.1.0.130	synth with cache (only 1: intro EQ; only 1: intros n m Hn; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	5.41047286987	6916
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0498299598694	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	2.05991101265	2764
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.03511095047	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.4.0.0.384.0.1.257.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: pose proof lt_m1_0 as F; only 1: apply mod_pos_bound; only 1: intuition order; only 1: apply (symmetry (x:=_)); only 1: rewrite <- div_mod; only 1: auto; only 1: intuition order; only 1: auto).	27.8238401413	58069
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0366089344025	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	1.2146821022	739
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.392916917801	351
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.510872125626	828
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.029069185257	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0313618183136	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.0.0.0.0.66	synth with cache (only 1: intros LT EQ; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	1.46894598007	1875
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.264479160309	209
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: order; only 1: trivial; only 1: trivial).	1.40090203285	1222
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.13884806633	149
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: split; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order).	13.5902569294	19584
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial).	0.51761007309	298
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.180422067642	44
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0392940044403	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0373899936676	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0391550064087	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0473580360413	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	0.873719930649	972
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.256.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: rewrite (div_mod a b)  at 1 by order; only 1: firstorder; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	2.25918602943	2523
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.653789043427	313
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.0.1.0.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	1.76317286491	1768
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	192.192.65.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now nzsimpl; only 1: apply H; only 1: apply H).	0.171831846237	76
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.0.1.2	synth with cache (only 1: intros a b c; only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	8.53933501244	11988
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.0.0.64.0.0.257	synth with cache (only 1: compute; only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: now nzsimpl; only 1: intro H1; only 1: tauto; only 1: intro H1; only 1: tauto).	0.55305981636	419
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.0.0.0.2.0.0.0.448	synth with cache (only 1: Tactics.program_simpl; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: symmetry; only 1: symmetry; only 1: now apply div_mod).	5.83931493759	4823
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0654129981995	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0406401157379	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.1.1.1.1.1	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).	5.77306008339	2066
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.1.3.2.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	2.37238097191	3938
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0248029232025	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.4521920681	262
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.0.322	synth with cache (only 1: intros Az RS; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.390491008759	370
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0319259166718	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.1.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).	0.0414659976959	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	6.0.0.1.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	18.3998441696	23551
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.1.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.064325094223	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.56797003746	449
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	4.0.64.320.0.0.1.0.1.1	synth with cache (only 1: nzinduct m; only 1: nzsimpl; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: intro m; only 1: hnf; only 1: rewrite <- 2!add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.99098300934	4155
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.308290958405	145
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.2.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.885610103607	999
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0305171012878	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	0.1.1.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0); only 1: pos_or_neg b; only 1: rewrite abs_eq in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: rewrite <- opp_0, eq_opp_r; only 1: rewrite abs_neq' in Hr; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: now apply mod_always_pos; only 1: now rewrite <- div_mod; only 1: trivial).	14.2307240963	15619
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	1.74347901344	2331
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: apply div_small; only 1: intuition).	14.8692960739	26336
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	1.77201104164	2252
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.207506895065	216
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.796307086945	995
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0266909599304	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0267400741577	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.256.0	synth with cache (only 1: intros; only 1: apply (symmetry (x:=_)); only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	1.39691996574	1259
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.0.0.0.0.0.0.0.1.0.1.256	synth with cache (only 1: firstorder; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: pos_or_neg b; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: rewrite abs_neq'; only 1: order; only 1: order; only 1: nzsimpl; only 1: now try split).	1.37013792992	1365
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: order; only 1: order; only 1: trivial).	1.74145197868	1552
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.343287944794	213
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: split; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order).	8.38331794739	5722
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0371799468994	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.2.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.936533927917	885
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.343920946121	286
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0513792037964	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	1.36463403702	1489
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.1.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.647181987762	605
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.1.0.0.0.1.0.0.0.0.64.0	synth with cache (only 1: intros; only 1: destruct (mod_always_pos a c); only 1: order; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	37.1256108284	38863
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.441596031189	251
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.0.64.2	synth with cache (only 1: intros a b c; only 1: intro; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	1.38606405258	1520
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.0.0.1.0.192.257.192.128	synth with cache (only 1: intros a b; only 1: intro n; only 1: compute; only 1: intro; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: order; only 1: intro H1; only 1: order).	2.74508309364	3594
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	1.10688114166	950
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0	synth with cache (only 1: BinInt.Z.order).	0.0256679058075	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	132	synth with cache (only 1: lia).	0.227988004684	305
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0245099067688	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.1	synth with cache (only 1: intros; only 1: unfold wB, base; only 1: auto with zarith).	0.147904872894	70
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0348589420319	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.508735895157	624
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	192.0	synth with cache (only 1: unfold to_Z, minus_one; only 1: reflexivity).	0.0421550273895	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	1.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.643780946732	644
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	577.1.0.0	synth with cache (only 1: intros; only 1: unfold add_carry, to_Z; only 1: symmetry; only 1: exact eq_refl).	0.0593659877777	37
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: trivial).	0.0387830734253	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	synth with cache (only 1: RelationClasses.simpl_relation).	0.0218620300293	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	3.60574412346	794
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.5.0	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	1.40516400337	989
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).	0.0517880916595	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	322	synth with cache (only 1: now Nat.nzsimpl).	0.35001206398	53
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	385.257	synth with cache (only 1: repeat red; only 1: tauto).	0.0468189716339	32
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: tauto).	0.0270130634308	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: trivial).	0.0260059833527	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	267	synth with cache (only 1: congruence).	1.71710705757	1419
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40	1.706.515.131.1.1.195.9	synth with cache (only 1: intros; only 1: case N.div_eucl; only 1: constructor; only 1: constructor; only 1: intros HH1; only 1: inversion_clear H; only 1: fix sqrtrem_spec 1; only 1: auto).	12.042951107	17476
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.423851013184	237
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0499520301819	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.0370218753815	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0238938331604	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	1.3	synth with cache (only 1: intro H0; only 1: now subst).	13.449739933	363
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.088301897049	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	194.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: intuition).	0.0440330505371	14
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	65	synth with cache (only 1: now constructor).	0.0222229957581	6
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40	256.513.387.192	synth with cache (only 1: N.nzsimpl; only 1: intro HF; only 1: fix gcd_divide 1; only 1: auto with *).	11.8622300625	13480
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.1.256.6.2	synth with cache (only 1: intros H2; only 1: apply eq_true_iff_eq; only 1: destr_bool; only 1: intuition; only 1: intuition).	1.33824419975	3210
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0570590496063	3
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0366690158844	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	641.196.0.128.0	synth with cache (only 1: apply bit_ext; only 1: intros H; only 1: generalize (lsl_spec 0 i); only 1: fix odd_spec 1; only 1: CRelationClasses.simpl_crelation).	2.93750500679	1843
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: now rewrite andb_false_r).	0.0440850257874	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).	0.0497741699219	6
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	323.1.64.0	synth with cache (only 1: apply bit_ext; only 1: intro x; only 1: rewrite !lxor_spec, xorb_comm; only 1: ring).	2.70987796783	1279
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	1.67.0.64	synth with cache (only 1: intros n m Hn; only 1: intros A B f l; only 1: intros Base Step; only 1: firstorder).	1.77019119263	2082
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.257	synth with cache (only 1: intros a n; only 1: auto using eqb_correct, eqb_complete).	0.0788269042969	84
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40	65.258.512.129.1.129.385.768	synth with cache (only 1: intro LE; only 1: compute; only 1: case Z.quotrem; only 1: tauto; only 1: assumption; only 1: fix gcd_divide 1; only 1: intros m Hm; only 1: firstorder).	24.3304460049	5199
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.4.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	2.79959702492	645
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40	0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.589	synth with cache (only 1: split; only 1: intros; only 1: zify; only 1: rewrite Z.add_0_l; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z; only 1: intros; only 1: zify; only 1: now rewrite Z.add_comm; only 1: intros; only 1: zify; only 1: now rewrite Zplus_mod_idemp_r, Zplus_mod_idemp_l, Z.add_assoc; only 1: intros; only 1: zify; only 1: rewrite Z.mul_1_l; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z; only 1: intros; only 1: zify; only 1: now rewrite Z.mul_comm; only 1: intros; only 1: zify; only 1: now rewrite Zmult_mod_idemp_r, Zmult_mod_idemp_l, Z.mul_assoc; only 1: intros; only 1: zify; only 1: now rewrite <- Zplus_mod, Zmult_mod_idemp_l, Z.mul_add_distr_r; only 1: intros; only 1: zify; only 1: unfold Z.sub; only 1: now rewrite Zplus_mod_idemp_r; only 1: intros; only 1: red; only 1: rewrite add_opp_r; only 1: zify; only 1: now rewrite Z.sub_diag, Zmod_0_l).	27.6672148705	18949
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	194.192.0.64.65.517	synth with cache (only 1: constructor; only 1: now f_equal; only 1: intros s2 n; only 1: now Z.swap_greater; only 1: intros x H2; only 1: congruence).	0.867779016495	1572
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40	384.0.263	synth with cache (only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: intuition auto; Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	2.86577701569	1970
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0	synth with cache (only 1: split).	0.00790596008301	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	64	synth with cache (only 1: intuition).	0.00939583778381	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40	128.577.1.261	synth with cache (only 1: intros a b; only 1: intros Az LS; only 1: fix odd_spec 1; only 1: firstorder).	9.54269886017	4319
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.0.9	synth with cache (only 1: intros a; only 1: zify; only 1: apply NZ_to_Z_mod).	1.46043801308	3511
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.0.0.194.768.0.0	synth with cache (only 1: intros; only 1: zify; only 1: etransitivity; only 1: now Nat.nzsimpl; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.939881086349	887
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	1.1	synth with cache (only 1: simpl; only 1: auto).	0.0714747905731	4
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: reflexivity).	0.0452711582184	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0436780452728	1
Coq.Numbers.DecimalString.NilZero.sis	40	0.0.0.0.0.0.0.0.192.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct s; only 1: intros [=<-]; only 1: simpl; only 1: case Ascii.eqb_spec; only 1: intros ->; only 1: destruct (NilEmpty.uint_of_string s) eqn:Hs; only 1: simpl; only 1: intros [=<-]; only 1: simpl; only 1: f_equal; only 1: now apply NilEmpty.sus; only 1: simpl; only 1: intros [=<-]; only 1: destruct d; only 1: firstorder; only 1: apply NilEmpty.sus; only 1: simpl; only 1: destruct uint_of_char; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: now destruct uint_of_char).	10.1367330551	5826
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	3.3.0	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	1.87037014961	3595
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	2.576.1.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: rewrite H; only 1: intuition; only 1: parity_binop).	0.425990104675	522
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.1.8.128.0	synth with cache (only 1: intros n H; only 1: contradict H; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	22.7694859505	23670
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.1.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0261578559875	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.0.1.1	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: intro H; only 1: right; only 1: apply lt_0_succ).	0.534496068954	876
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.2	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0907499790192	96
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.65.2.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.258.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: assert (AUX : forall a b, 0 <= a <= b -> b * a + a * b <= a * a + b * b); only 1: intros a b (Ha, H); only 1: destruct (le_exists_sub _ _ H) as (d, (EQ, Hd)); only 1: rewrite EQ; only 1: rewrite 2!mul_add_distr_r; only 1: rewrite !add_assoc; only 1: apply add_le_mono_r; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: trivial; only 1: order; only 1: intros n IH; only 1: rewrite <- le_succ_l; only 1: now rewrite pred_succ).	19.8784270287	33454
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.0.0.0.0.67	synth with cache (only 1: intros H; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	1.660187006	1945
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.0.1.0.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	4.37468385696	7954
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	129.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: now nzsimpl).	0.105120897293	108
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.287248134613	608
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0808048248291	99
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.173202037811	238
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.0.1	synth with cache (only 1: intros n IH; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0979809761047	151
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0412409305573	75
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.1.4.0.1.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl').	4.56595516205	4586
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.241558074951	571
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0130178928375	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0137350559235	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	2.87419080734	4974
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.739228963852	1170
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	27.2936770916	28048
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.1.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.117522001266	145
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (0 < b) by (apply lt_trans with 1; auto using lt_0_1); only 1: destruct (lt_ge_cases a b); only 1: rewrite Private_NZDiv.div_small; only 1: order; only 1: order; only 1: rewrite (div_mod a b)  at 2 by order; only 1: apply lt_le_trans with (b * (a / b)); only 1: rewrite <- (mul_1_l (a / b))  at 1; only 1: rewrite <- mul_lt_mono_pos_r; only 1: auto; only 1: apply Private_NZDiv.div_str_pos; only 1: auto; only 1: rewrite <- (add_0_r (b * (a / b)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order).	3.84987902641	3714
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	6.55206513405	8722
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0460708141327	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.384485006332	382
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.257.0.0.192.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: intuition; only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: destruct (le_gt_cases a 0); only 1: now rewrite mul_comm; only 1: now rewrite mul_comm).	0.521302938461	526
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.919064044952	1588
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.2.0.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	28.2538671494	29954
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.3.0.0.0.0.0.0.64.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite !(mul_comm c); only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c); only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	10.566945076	6099
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.3.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.543613910675	693
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.1.0.64	synth with cache (only 1: intros m IH; only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.637535095215	895
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	128.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto using sub_add_le).	0.0274300575256	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.0.0.64.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: order; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.0320191383362	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.924420833588	1066
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	128.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto using sub_add_le).	0.199079036713	143
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	64.64.1.0.385.0	synth with cache (only 1: intros; only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto; only 1: auto).	0.999001026154	1740
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	1.84976696968	1491
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	64.0.0.0.0.64.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: now apply H; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: now apply H).	0.157871007919	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.0.0.1.0.0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	5.46653819084	9984
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0480489730835	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.0465650558472	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	448.0.0.65.0.64.64.2	synth with cache (only 1: intros ? ? E1 ? ? E2 ?; only 1: intro H; only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: simpl_relation; only 1: compute; only 1: f_equiv; only 1: firstorder; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	14.6984291077	7184
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.330	synth with cache (only 1: compute in *; only 1: now rewrite recursion_0).	2.02673101425	4531
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40	384.256.1.768.640.128.256.2.1.384.193.65.1	synth with cache (only 1: intros n H; only 1: apply le_succ_l in H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: f_equiv; only 1: apply le_succ_l in H; only 1: intro H1; only 1: intro LS'; only 1: PeanoNat.Nat.auto'; only 1: intro l'; only 1: easy || now destruct 1; only 1: apply le_succ_l in H; only 1: unfold PeanoNat.Nat.lcm; only 1: f_equiv').	12.9110350609	17530
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.1.0.0.65.0.0	synth with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: apply lt_eq_cases; only 1: now left; only 1: apply eq_le_incl; only 1: now rewrite H2).	1.21136188507	705
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	4.54255199432	5143
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.0	synth with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.0616800785065	30
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	0.821938037872	630
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	0.1.0.0.385.3.192	synth with cache (only 1: intro H1; only 1: apply Private_NZDiv.div_small; only 1: destr_bool; only 1: order'; only 1: transitivity 1; only 1: apply lt_0_1; only 1: order').	0.990019083023	1480
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.67	synth with cache (only 1: intro; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.276812076569	336
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.2.0.2.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	2.99966001511	2925
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.656824111938	489
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0194690227509	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	323.0.0.0.0.256.320.0.128.7	synth with cache (only 1: split; only 1: easy; only 1: intros a; only 1: repeat red; only 1: intro H1; only 1: intros; only 1: now rewrite H; only 1: intros n; only 1: intros P b H H0; only 1: congruence).	2.43552088737	3964
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	129.0.4	synth with cache (only 1: repeat red; only 1: intros; only 1: now rewrite <- H).	1.40309405327	969
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.0.68	synth with cache (only 1: intro H1; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	2.6245970726	1394
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0405731201172	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	3.9488670826	2548
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.3	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	2.08093690872	1573
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.551351070404	173
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.318286895752	119
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.171983003616	125
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0281069278717	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.192.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: revert m; only 1: destr_bool).	0.114359855652	120
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0288889408112	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	320.129.448.0.1	synth with cache (only 1: intros; only 1: bitwise; only 1: destruct (le_gt_cases a 0); only 1: intuition; only 1: firstorder).	0.227779150009	221
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	64.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition order).	0.0406920909882	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	258.0.0.257	synth with cache (only 1: intros x; only 1: intros; only 1: bitwise; only 1: auto with *).	0.912173032761	1241
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	196.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	1.95109200478	2556
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.294945955276	682
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0310659408569	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	385.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	0.101576089859	42
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40	0.64.130.259.1	synth with cache (only 1: intros a Ha; only 1: apply succ_inj; only 1: compute; only 1: do 2 f_equiv; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	4.08362984657	5290
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40	0.198.0	synth with cache (only 1: intros; only 1: compute; only 1: now rewrite shiftl_1_l).	31.5047631264	15178
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.259.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: compute; only 1: now rewrite Ha, Hb).	2.08096194267	1569
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	0.324.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: compute; only 1: now rewrite Ha, Hb).	8.76329088211	5062
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0362780094147	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	1.84379696846	1520
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.0.0.0.65	synth with cache (only 1: repeat split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.147439956665	177
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.2.0.0.0.0.0.1	synth with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: order'; only 1: apply le_0_l; only 1: now nzsimpl).	0.815121173859	760
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	64.64.2.0.0.128.3	synth with cache (only 1: cases ltac:(n); only 1: simpl_relation; only 1: exfalso; only 1: now apply H; only 1: intros n m; only 1: intro; only 1: now nzsimpl').	2.06254506111	3279
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	1.56502699852	795
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.448.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: apply eq_iff_eq_true; only 1: apply (symmetry (x:=_)); only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	4.06255722046	3257
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.64.0.0.0.1.0.0	synth with cache (only 1: intros n m p H; only 1: rewrite <- (add_0_r n); only 1: apply lt_le_trans with (m + p); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l; only 1: nzinduct p m; only 1: now apply add_le_mono_l; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	2.31219291687	2564
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	3.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	2.24521613121	1735
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.188388109207	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0502090454102	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.73674297333	2845
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.384.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: CRelationClasses.simpl_crelation; only 1: order').	0.21267580986	141
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.904444932938	1029
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.1.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.433761119843	499
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.2.0.0.0.0.257	synth with cache (only 1: repeat split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	13.7073330879	16957
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	36.3297948837	19231
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	17.7468400002	12189
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	2.0	synth with cache (only 1: intros; only 1: eauto).	0.0137360095978	4
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.600840091705	727
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0223350524902	4
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	4.137.3	synth with cache (only 1: intro H; only 1: unfold lcm; only 1: now nzsimpl').	19.8076341152	27033
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	1.15212893486	1167
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.1.0.0.0.64.1.449.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: induct n; only 1: order; only 1: intros Az LS; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_refl; only 1: trivial).	5.12229704857	5424
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).	1.38577103615	1588
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.1.1.2.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.523003101349	766
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.2.1.1.2.2	synth with cache (only 1: intros z n H; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl; only 1: trivial).	13.5915601254	23319
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.2	synth with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	0.080157995224	69
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	128.10.0.0	synth with cache (only 1: intros; only 1: rewrite <- !Unsigned.to_of; only 1: rewrite H; only 1: now subst).	3.09291100502	8116
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.3.7.2	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	0.84544801712	1679
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	8.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl').	19.8328180313	30934
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.4.131	synth with cache (only 1: compute; only 1: intros n m; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	1.50470495224	4138
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.2.450.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro Hxz; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	1.01258897781	1819
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0149788856506	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.911019086838	1304
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.1.0.0.72.128	synth with cache (only 1: intro H; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: solve_proper).	2.64810800552	5225
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	8.00589799881	12713
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	9.15130209923	13529
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	2.0176460743	2914
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.932024002075	668
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.192.384.0.196.64	synth with cache (only 1: intuition; only 1: rewrite <- H1; only 1: destruct (mod_bound_pos a b); only 1: Bool.destr_bool; only 1: apply H0; only 1: auto; only 1: apply mod_small; only 1: auto).	13.7804250717	29025
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0906341075897	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.176026105881	70
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0588490962982	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.65.1	synth with cache (only 1: intros n m; only 1: intuition; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.578968048096	493
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.121000051498	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.07648992538	1227
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.4.0.3.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.96792197227	6869
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.240122079849	61
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0440011024475	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	72.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).	1.8109061718	1393
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.7.1.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	1.1520011425	2675
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	256.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: eauto).	0.0336198806763	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0307569503784	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	193.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: now constructor).	0.0320048332214	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0279428958893	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.028627872467	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0254969596863	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0289371013641	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	1	synth with cache (only 1: order).	0.091166973114	30
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	64.192.0	synth with cache (only 1: intros x y z; only 1: intro; only 1: intuition order).	0.0361869335175	29
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	3	synth with cache (only 1: order).	0.303929805756	246
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.3.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.170022010803	236
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	256.1.5.0.256	synth with cache (only 1: intros LT EQ; only 1: intro H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto using Private_OrderTac.Tac.eq_sym).	2.95345497131	6176
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.5.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	1.10629701614	1626
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	0.4.1.66	synth with cache (only 1: simpl_relation; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite <- le_succ_l; only 1: tauto).	5.42789006233	6646
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.166221141815	240
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.080225944519	66
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.33282995224	377
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.0.0.8.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	5.44937396049	9447
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.169348955154	154
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	2.4.129.0.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: red; only 1: generalize (le_gt_cases n m); only 1: intuition order).	28.2095880508	17615
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	1.1.1.0.65.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: unfold decidable; only 1: rewrite lt_eq_cases; only 1: intuition; only 1: intuition order; only 1: intuition order).	31.1276750565	1521
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.3.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	4.39972496033	931
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	4.128	synth with cache (only 1: intros z Hz; only 1: intuition order).	0.570199966431	793
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0181729793549	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.669836044312	266
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	2.1.0.1.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.72552895546	563
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0187721252441	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0191640853882	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.2.194.0	synth with cache (only 1: intros n m; only 1: compute; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	1.54070305824	609
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.2.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	2.18966293335	831
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	0.593677043915	550
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	64.194.1	synth with cache (only 1: intros RS' n; only 1: intros H; only 1: intuition order).	0.0881400108337	115
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	67.13	synth with cache (only 1: intros L R n; only 1: firstorder).	3.16685009003	10595
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	2.193.68.64.65	synth with cache (only 1: intro y0; only 1: compute; only 1: intro H1; only 1: intros RS' n; only 1: intuition order).	5.12772607803	6911
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	2.131.1.130.192.130.192.3	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: intros x; only 1: auto with *; only 1: intros x; only 1: auto with *; only 1: intros n n' Hn m m' Hm; only 1: compute; only 1: now rewrite <- !lt_succ_r, Hn, Hm).	19.819631815	27875
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.1.256.1.0.64	synth with cache (only 1: intros m H; only 1: reduce; only 1: induction n; only 1: intuition PeanoNat.Nat.order; only 1: simpl; only 1: auto).	1.46188592911	410
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	513.320.194.2.65.192	synth with cache (only 1: red; only 1: intro z; only 1: split; only 1: compute; only 1: CRelationClasses.simpl_crelation; only 1: firstorder).	1.05159401894	2793
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	65.326	synth with cache (only 1: compute; only 1: solve_proper).	0.110598087311	507
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.1	synth with cache (only 1: intros a; only 1: reflexivity).	0.0194878578186	3
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.321.0.0.0.0	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: simpl_relation; only 1: now rewrite PeanoNat.Nat.pred_succ).	0.212014913559	49
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	1.0.388.3	synth with cache (only 1: induction n; only 1: CRelationClasses.simpl_crelation; only 1: apply lt_succ_diag_r; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	1.55615997314	3857
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	0.389.449	synth with cache (only 1: unfold all; only 1: fix gcd_divide 1; only 1: now unfold ofnat).	3.65500617027	10067
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	0.192.322.195.5	synth with cache (only 1: simpl; only 1: intro EQ; only 1: fix gcd_divide 1; only 1: intro LT; only 1: now f_equiv).	4.79803395271	11644
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0564610958099	3
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.0.1.2.0.257	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: exists 0; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: now nzsimpl).	1.80172801018	1435
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.68.0.0	synth with cache (only 1: intros n m p (q, Hq); only 1: exists q; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite mul_shuffle3, Hq).	1.94927215576	1376
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.8.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	4.04993200302	3011
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	192.3.0.0.1.0.259	synth with cache (only 1: intros h1 h2; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: now f_equiv).	13.1647241116	6507
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.313356161118	135
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.2.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	1.92349815369	1508
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0865468978882	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.329424858093	223
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.1.0.1.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.768718957901	603
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.393882989883	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.25112104416	417
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	1.0.192.0.0.192.2	synth with cache (only 1: intro n; only 1: hnf; only 1: rewrite <- even_spec, <- odd_spec; only 1: split; only 1: induction 1; only 1: now rewrite <- negb_odd, odd_succ, negb_even; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.804381132126	539
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	7.31084299088	2958
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.7.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	1.64402294159	2423
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.2.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	3.91370820999	481
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	1.132.259.0.4	synth with cache (only 1: intros; only 1: apply even_add_even; only 1: simpl_relation; only 1: exists m; only 1: now nzsimpl).	11.4826529026	8121
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.156014204025	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.188863039017	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0512039661407	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0501780509949	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.0.0.9.0	synth with cache (only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').	0.719288110733	1338
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.107430934906	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.1	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0643110275269	18
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0392680168152	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.0.0.0.195	synth with cache (only 1: intros H; only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	3.53945589066	2851
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	1.0.0.1.0.2	synth with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	1.38294219971	1094
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.128.67.65.0.0.0.66.0	synth with cache (only 1: intros a Ha; only 1: rewrite <- (add_0_r a)  at 2; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: generalize (log2_le_mono _ _ (le_succ_diag_r a)); only 1: nzsimpl'; only 1: reflexivity; only 1: order).	12.6124389172	23269
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.3.0.0.0.0.64	synth with cache (only 1: intro y0; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	4.81689500809	4777
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.1.128.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: rewrite <- (add_0_r a)  at 1; only 1: order_pos; only 1: order).	10.4133961201	4943
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0191748142242	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	5	synth with cache (only 1: firstorder).	0.17856502533	368
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	1.0.0.0.1.256	synth with cache (only 1: intros A C h1 h2; only 1: apply h1; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: assumption).	0.207390069962	281
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).	0.101847887039	299
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.0.0.0.65.0.1.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: firstorder; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H; only 1: symmetry; only 1: now f_equiv).	0.297639131546	195
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	0.814609050751	702
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0388040542603	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0339739322662	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0313060283661	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.521469116211	730
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0142560005188	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	4.73.65	synth with cache (only 1: simpl_relation; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).	1.64944505692	6193
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	65.64	synth with cache (only 1: intro H1; only 1: intuition).	0.0452840328217	40
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0125529766083	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0174429416656	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.0.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.253334999084	317
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.0	synth with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: intuition).	0.272058010101	103
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	256.577.642.833.0.2	synth with cache (only 1: intro n; only 1: compute; only 1: revert n; only 1: intros Hm; only 1: fix odd_spec 1; only 1: now subst).	8.04630899429	8081
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.3.832.0.649.0	synth with cache (only 1: intros; only 1: induction x; only 1: simpl; only 1: intuition Z.order; only 1: now f_equal; only 1: now f_equal).	14.6043920517	16742
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	synth with cache (only 1: solve_proper).	1.82130289078	1113
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.129.0.0.1.0	synth with cache (only 1: split; only 1: destruct 1; only 1: auto; only 1: auto; only 1: CRelationClasses.reduce; only 1: eauto).	0.11772108078	122
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	321.0	synth with cache (only 1: intros; only 1: now try BinNat.N.order').	0.027850151062	18
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.321	synth with cache (only 1: intros P F; only 1: firstorder using Sorted_inv).	0.130792140961	62
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	2.262.2	synth with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: red; only 1: eauto).	26.5302839279	36514
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	196.0.1.22	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: eauto).	0.705413818359	1797
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	3.0.0.0.0.0.0.0	synth with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).	1.02048182487	837
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	6.0.0.129.1.66.1	synth with cache (only 1: split; only 1: firstorder; only 1: red; only 1: intro H1; only 1: firstorder; only 1: red; only 1: apply Logic.eq_trans).	9.68863892555	21742
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	196.64.193.0.0.0.265.135.256	synth with cache (only 1: constructor; only 1: red; only 1: CRelationClasses.simpl_crelation; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: intros p Hn Hm; only 1: intros LT; only 1: eauto with *).	13.2262899876	47934
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	128	synth with cache (only 1: now try PeanoNat.Nat.order').	0.0363450050354	25
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0204479694366	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0264840126038	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.01935505867	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.0203559398651	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.0194139480591	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	synth with cache (only 1: order).	0.0197739601135	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.040431022644	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0192728042603	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	194.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: CRelationClasses.simpl_crelation).	0.0311880111694	14
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.018100976944	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	2.263.2	synth with cache (only 1: intro H; only 1: compute; only 1: order).	0.899564027786	2371
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.021733045578	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0213930606842	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0190360546112	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.448.705.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros n; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.495404958725	780
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.463997125626	441
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0518360137939	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.193.2.4	synth with cache (only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite H by intuition; only 1: eauto).	3.40883088112	7568
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	0.257	synth with cache (only 1: fix odd_spec 1; only 1: auto).	0.355792999268	254
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.320.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: Bool.destr_bool; only 1: constructor; only 1: auto).	0.0673990249634	18
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	65.0.0.1	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: firstorder).	0.459096908569	500
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	385.2	synth with cache (only 1: intros x y H; only 1: now apply H).	0.216197013855	75
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	1	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0190618038177	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0182108879089	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.1	synth with cache (only 1: intros l'; only 1: auto with ordered_type).	0.0229420661926	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.0198791027069	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.027853012085	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0337040424347	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.196	synth with cache (only 1: fix le_div2 1; only 1: intuition).	0.571831941605	641
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	130.258.256.385	synth with cache (only 1: intros a Ha; only 1: intro Hxz; only 1: fix le_div2 1; only 1: PeanoNat.Nat.auto').	5.88668107986	8189
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0260760784149	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	2	synth with cache (only 1: eauto with ordered_type).	0.0590801239014	23
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0.1	synth with cache (only 1: unfold eqk, eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).	0.144953012466	66
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	387.192.321.0.0.3	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: intros m H1 H2; only 1: firstorder using StronglySorted_inv; only 1: eauto with *).	1.15074086189	1897
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.060417175293	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.1.134.323.578.0	synth with cache (only 1: constructor; only 1: intros a; only 1: intro; only 1: contradict H; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	22.547752142	27838
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0284130573273	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0243320465088	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0258269309998	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.0.322	synth with cache (only 1: fix odd_spec 1; only 1: intros; only 1: eauto with ordered_type).	0.285979032516	300
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40	0.1.64.448.448.64.0.325.385	synth with cache (only 1: intros a H; only 1: intros n IH; only 1: destruct a; only 1: now f_equal; only 1: intros x; only 1: induction 1; only 1: elim H0; only 1: eauto with ordered_type; only 1: intuition).	12.1172809601	25231
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	1.128.448	synth with cache (only 1: intros Az RS; only 1: intros m H; only 1: now rewrite H).	0.107840061188	57
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	2.257.0.128.0.129.449	synth with cache (only 1: intros a; only 1: intros x y H; only 1: intuition; only 1: elim H0; only 1: intuition; only 1: intros c Hc IH; only 1: eauto with *).	3.36952495575	3463
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	0.320.256.192.193.0.1.576.66.259.513.0	synth with cache (only 1: simple induction l; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intros n m H1; only 1: unfold eqke, ltk; only 1: intro LT; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: generalize H; only 1: generalize (app_nil_r (A:=l)); only 1: intro EQ; only 1: fix le_div2 1; only 1: auto).	18.2853970528	26462
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40	0.0.386.1.64.256.256	synth with cache (only 1: intro EQ; only 1: intro H1; only 1: intros l; only 1: induction l; only 1: fix le_div2 1; only 1: destruct H1 as [e' H2]; only 1: eauto with ordered_type).	23.3243820667	13946
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40	0.448.321.385.195	synth with cache (only 1: intro p; only 1: intros n; only 1: intros y H0 H1; only 1: fix even_spec 1; only 1: auto with ordered_type).	8.36295986176	3138
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.0.64.64.0	synth with cache (only 1: inversion_clear 1; only 1: induction l; only 1: firstorder using StronglySorted_rect; only 1: eauto with *; only 1: eauto with *).	0.0579390525818	11
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	64.0.0.0.0.65	synth with cache (only 1: intros (N, IN); only 1: unfold eqke; only 1: inversion_clear 1; only 1: intros; only 1: intuition; only 1: firstorder).	0.832803010941	721
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0419089794159	6
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: reflexivity || destruct H; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	1.88016104698	3517
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	1.0224070549	1509
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.1.0.0.0.0.1.1.0.1.0.64.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: setoid_rewrite  <- H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	4.80106401443	6241
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	4.0	synth with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.253862857819	308
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.0.2	synth with cache (only 1: red; only 1: compute; only 1: iorder).	0.0565059185028	36
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	64.64.0.0.64.67	synth with cache (only 1: intros x y EQ WF; only 1: apply CRelationClasses.partial_order_antisym; only 1: compute; only 1: iorder; only 1: auto with *; only 1: auto with *).	0.268443107605	289
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.67	synth with cache (only 1: compute; only 1: iorder).	0.0843110084534	42
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0181331634521	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.0.0.0.0.0.0.0.0.0.0.128.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: destruct (compare_spec x y); only 1: destruct (compare_spec x y); only 1: destruct (compare_spec x y); only 1: destruct (compare_spec x y); only 1: destruct (compare_spec x y); only 1: firstorder; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	14.5879991055	11136
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.256	synth with cache (only 1: CRelationClasses.reduce_goal; only 1: iorder).	0.147119998932	85
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0244579315186	3
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0276839733124	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	0.0.0.0.1.0.1.0.0.0.0.0.140	synth with cache (only 1: compute; only 1: intros; only 1: destruct eq_dec; only 1: elim_compare x y; only 1: auto; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: elim_compare x y; only 1: order; only 1: auto; only 1: auto).	11.9112999439	11644
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	1.0.1.0.1.1.0.0.3	synth with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).	8.53084611893	4036
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	4.0	synth with cache (only 1: intro H; only 1: order).	0.0943441390991	89
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0269930362701	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0232200622559	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	synth with cache (only 1: order).	1.02736783028	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.0172638893127	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.0169351100922	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.0170810222626	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0262768268585	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0282561779022	4
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.01682305336	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	synth with cache (only 1: order).	0.0173671245575	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0166878700256	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.0162839889526	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0	synth with cache (only 1: intro H; only 1: order).	0.0198380947113	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0141501426697	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0142779350281	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.014240026474	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0152430534363	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	128.128.0.1.1.1.0.0.67.1.3	synth with cache (only 1: split; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: split; only 1: order; only 1: order; only 1: order; only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: simpl_relation; only 1: simpl_relation).	3.46984505653	5151
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0202169418335	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.0.0.0	synth with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.067547082901	54
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0196981430054	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.023934841156	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.256.0.193.0.4.64	synth with cache (only 1: unfold not; only 1: case leb_spec0; only 1: constructor; only 1: intros H x0; only 1: discriminate; only 1: now trivial; only 1: constructor; only 1: trivial; only 1: trivial).	10.2964150906	8344
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.10	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	7.41858506203	11550
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.132.64.4.0.9	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: case leb_spec0; only 1: auto with bool; only 1: intro p; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	23.27465415	53517
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0257608890533	3
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	451.0.0.0.130.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: intro n; only 1: firstorder; only 1: left; only 1: rewrite <- H; only 1: easy).	7.27672314644	12779
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.577.0.1.65.128.260	synth with cache (only 1: destruct l as [| a l']; only 1: easy; only 1: intros l2; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: rewrite ?PeanoNat.Nat.add_0_l, ?PeanoNat.Nat.add_0_r, ?H; only 1: auto).	7.0514819622	17352
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.513.768.3	synth with cache (only 1: intros x y z H; only 1: firstorder using Sorted_inv; only 1: rewrite ?PeanoNat.Nat.add_0_l, ?PeanoNat.Nat.add_0_r, ?H; only 1: eauto).	0.41065788269	586
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	1.387.450.449	synth with cache (only 1: intros n m p q; only 1: intro LE; only 1: fix le_div2 1; only 1: auto).	3.12645792961	5294
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	65.1.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: firstorder).	0.115829944611	63
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	66.1.0.2	synth with cache (only 1: simple induction l; only 1: intros; only 1: auto; only 1: firstorder).	1.81215810776	3371
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	5	synth with cache (only 1: solve_proper).	6.05439519882	6488
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	4.0	synth with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	3.92588710785	1768
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.1	synth with cache (only 1: reduce; only 1: intuition).	0.0300381183624	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0358159542084	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0290479660034	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	1.65.0	synth with cache (only 1: intros x y H; only 1: destruct H; only 1: auto).	0.0272810459137	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	1	synth with cache (only 1: auto).	0.0121200084686	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0127429962158	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0170869827271	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	64.2	synth with cache (only 1: induction 1; only 1: firstorder).	0.122256994247	74
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	128.67.67.576.0	synth with cache (only 1: intros; only 1: destruct e; only 1: compute; only 1: revert H H0; only 1: eauto).	2.09476804733	3585
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	65.192.64	synth with cache (only 1: intros f g l H; only 1: fix even_spec 1; only 1: trivial).	0.265670061111	109
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.64.0.0.64.3	synth with cache (only 1: split; only 1: compute; only 1: intuition; only 1: auto; only 1: repeat red; only 1: eauto).	0.236513137817	232
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0577440261841	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	192.128.0.385.66.0	synth with cache (only 1: unfold eqke; only 1: intros z n H; only 1: induction H; only 1: left; only 1: now f_equal; only 1: auto  4).	2.00294303894	3353
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.2.1	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: intuition).	0.580689907074	726
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	193.2.3.129.64.450.1.512.192	synth with cache (only 1: intros E; only 1: intros Az RS; only 1: compute; only 1: intros s; only 1: intros H; only 1: pose proof H as H'; only 1: do 2 rewrite InA_alt; only 1: firstorder  (subst; auto); only 1: eauto with arith).	22.7578909397	30815
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	128.128.1.384.129	synth with cache (only 1: intro l'; only 1: intro LT; only 1: inversion 1; only 1: now PeanoNat.Nat.nzsimpl; only 1: congruence).	0.771692991257	837
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.0.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.999783992767	1155
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	1.321.1.64.65	synth with cache (only 1: intros EQ; only 1: intros Compat Hl Hr; only 1: intro H; only 1: rewrite <- H; only 1: trivial).	0.563844919205	897
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40	2.512.0.321.0.65.0	synth with cache (only 1: unfold lt; only 1: intros EQ; only 1: intros x y H; only 1: rewrite <- H in *; only 1: assert (eq x x) by reflexivity; only 1: fix le_div2 1; only 1: easy).	14.6904549599	18387
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.294085979462	215
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	0.566029787064	868
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	3.2	synth with cache (only 1: apply max_r; only 1: order).	0.0441708564758	112
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: destruct (lt_total n m); only 1: destruct (lt_total n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: destruct (lt_total n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order).	0.647732019424	1129
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0121288299561	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	1.0.0.4.1.0.134	synth with cache (only 1: compute; only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: apply max_r || apply max_l; only 1: order; only 1: intuition).	6.204018116	6096
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	1	synth with cache (only 1: solve_max).	0.0264029502869	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.360872983932	318
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	2	synth with cache (only 1: solve_max).	0.0262060165405	13
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0136361122131	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	3	synth with cache (only 1: solve_max).	0.0246410369873	14
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	4	synth with cache (only 1: solve_max).	0.223960876465	252
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0134499073029	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	2	synth with cache (only 1: solve_max).	0.15642118454	120
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0222821235657	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0420157909393	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	0.331387042999	362
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	synth with cache (only 1: apply min_l; only 1: order).	0.00985908508301	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.2.1.12	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	1.67307710648	2707
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0114560127258	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	4	synth with cache (only 1: solve_min).	0.0557231903076	61
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0155999660492	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.128.0.0.2.1.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intros x; only 1: intuition; only 1: order; only 1: order).	1.81440401077	2420
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	2.934071064	2724
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	3	synth with cache (only 1: solve_min).	0.0168108940125	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.012855052948	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	5	synth with cache (only 1: solve_min).	0.081197977066	113
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	4	synth with cache (only 1: solve_min).	0.152702093124	141
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0127890110016	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.308223962784	253
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0617589950562	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.1.0.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.074126958847	74
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.5	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0646448135376	67
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.8	synth with cache (only 1: apply min_l; only 1: solve_max).	4.27741599083	2435
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	0.533509969711	407
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.0.13	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	1.67875695229	7590
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	1.129.256.67.3.0.68	synth with cache (only 1: intro x; only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros n m; only 1: intro A; only 1: congruence; only 1: auto).	6.47248792648	13130
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0140480995178	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.2.256	synth with cache (only 1: intro; only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.225166082382	396
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.0.7.67.192	synth with cache (only 1: intros x y; only 1: intuition; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	3.55088305473	10053
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0136520862579	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.026153087616	31
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	1.0.387.321.0.0.1	synth with cache (only 1: induction 1; only 1: unfold eq; only 1: pose proof (compare_sym x x) as H; only 1: generalize H; only 1: fix le_div2 1; only 1: intros; only 1: auto).	27.6327412128	9584
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	384.65.68	synth with cache (only 1: intros H; only 1: intros n; only 1: congruence).	24.4657199383	6133
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	64.0.3.1	synth with cache (only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	0.107119083405	384
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0407161712646	5
Coq.ZArith.Znat.positive_N_Z	40	0.1.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: simpl; only 1: f_equal).	0.0302488803864	4
Coq.ZArith.Znat.positive_N_nat	40	1	synth with cache (only 1: trivial).	0.0176618099213	2
Coq.ZArith.Znat.positive_nat_N	40	1.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.130217075348	140
Coq.ZArith.Znat.Z_N_nat	40	0.0.65.10	synth with cache (only 1: destruct n; only 1: easy; only 1: trivial; only 1: trivial).	1.23021101952	2175
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.0.72	synth with cache (only 1: induction n; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: trivial).	4.7058839798	4478
Coq.ZArith.Znat.Zabs_nat_N	40
Coq.ZArith.Znat.N2Z.id	40	0	synth with cache (only 1: now destruct n).	0.019378900528	1
Coq.ZArith.Znat.N2Z.inj	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: now try N.order'; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: intros Hn; only 1: easy || now destruct Hb; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: now f_equal).	0.639546871185	772
Coq.ZArith.Znat.N2Z.inj_iff	40	1.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros EQ; only 1: now Morphisms.f_equiv).	35.2667460442	45009
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.2.65.0.64.0	synth with cache (only 1: destruct n; only 1: intros Hab; only 1: simpl in *; only 1: now N.nzsimpl; only 1: simpl; only 1: easy).	0.349832773209	732
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0170729160309	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0173969268799	1
Coq.ZArith.Znat.N2Z.inj_compare	40	256.0.0.0.0.0.3.0	synth with cache (only 1: destruct n, m; only 1: easy || now destruct y; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: constructor).	0.142948150635	353
Coq.ZArith.Znat.N2Z.inj_le	40	0.1.516.1	synth with cache (only 1: unfold N.leb, N.le; only 1: constructor 1; only 1: now destruct n, m; only 1: now destruct n, m).	16.7274401188	32439
Coq.ZArith.Znat.N2Z.inj_lt	40	64.0.704.704.65.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: split; only 1: discriminate || intros _; only 1: intros H; only 1: N.auto'; only 1: intro; only 1: now subst; only 1: now rewrite <- ?N.succ_le_mono; only 1: now rewrite <- ?N.succ_le_mono; only 1: simpl; only 1: easy).	1.38372397423	1661
Coq.ZArith.Znat.N2Z.inj_ge	40	0.1	synth with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).	0.0245809555054	3
Coq.ZArith.Znat.N2Z.inj_gt	40	0.3	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.0649778842926	65
Coq.ZArith.Znat.N2Z.inj_abs_N	40	130.128.256.138.24	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: easy'; only 1: intuition Nat.order; only 1: f_equal).	3.09719395638	11256
Coq.ZArith.Znat.N2Z.inj_add	40	2	synth with cache (only 1: now destruct n, m).	0.0199749469757	3
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0202791690826	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40
Coq.ZArith.Znat.N2Z.inj_pred_max	40	3.0.320.464	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: now destruct p).	4.73487091064	6362
Coq.ZArith.Znat.N2Z.inj_pred	40	1.579.387.192.0.321.128.0	synth with cache (only 1: intros H; only 1: Z.bitwise; only 1: induction n; only 1: unfold Z.pred; only 1: N.order'; only 1: destruct H; only 1: simpl in *; only 1: now destruct p).	19.4190409184	25479
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40	64.1.259.130	synth with cache (only 1: revert m; only 1: fix le_div2 1; only 1: unfold Z.le, Z.max; only 1: now Z.nzsimpl).	16.9459998608	32600
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.0.12.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: now f_equal).	20.8408219814	97045
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0285060405731	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	1.43930315971	806
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0415771007538	6
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	320.1.705.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: intros H'; only 1: f_equal; only 1: now repeat split).	9.07602095604	10507
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.019679069519	2
Coq.ZArith.Znat.Z2N.inj_pos	40	65.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now simpl).	0.0511889457703	9
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0195739269257	2
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	2.52174687386	2104
Coq.ZArith.Znat.Z2N.inj_succ	40
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.678945064545	489
Coq.ZArith.Znat.Z2N.inj_compare	40	1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1; only 1: trivial; only 1: now destruct 1).	5.96661901474	7522
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40	1.64.1.192.256.64.576.65.0.0.0.0.0.2	synth with cache (only 1: destruct n, m; only 1: intros n m; only 1: split; only 1: trivial; only 1: N.order; only 1: easy || now destruct y; only 1: now f_equal; only 1: intros H ?; only 1: now Z.nzsimpl; only 1: firstorder; only 1: intuition Nat.order; only 1: now destruct 1; only 1: easy || now destruct 1; only 1: now destruct 1 || now destruct 2).	13.3771238327	14714
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.512.1.0.0.448.0.0.65.0.1.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: induction p using Pos.peano_ind; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: Bool.destr_bool; only 1: trivial).	1.66104197502	2303
Coq.ZArith.Znat.Z2N.inj_quot2	40
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.043566942215	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0275058746338	2
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	synth with cache (only 1: now destruct n).	0.0172479152679	2
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0196740627289	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0194871425629	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.020112991333	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0174100399017	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	64.256.0.2	synth with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: contradiction || auto; only 1: auto with relations).	0.165965080261	73
Coq.ZArith.Znat.Zabs2N.inj_succ	40	128.1.0.0.321.1.0.0	synth with cache (only 1: unfold Z.succ; only 1: intros; only 1: destruct n; only 1: generalize H; only 1: now Z.nzsimpl; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	1.17848014832	1338
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	26.4661371708	25864
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.1.448.0.0.448.0.1	synth with cache (only 1: destruct n, m; only 1: Nat2N.nat2N; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	18.1936180592	36423
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.64.0.0.1.1.0.0.6.129	synth with cache (only 1: intuition; only 1: destruct n; only 1: unfold Z.pred; only 1: rewrite <- N.sub_1_r; only 1: rewrite !abs_N_nonneg; only 1: trivial; only 1: Z.order'; only 1: now Z.nzsimpl'; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	32.453318119	29219
Coq.ZArith.Znat.Zabs2N.inj_compare	40	264	synth with cache (only 1: now destruct n, m).	4.51206803322	2752
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0299999713898	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0340580940247	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	66.198.198	synth with cache (only 1: N.bitwise; only 1: do 2 Morphisms.f_equiv; only 1: now destruct n as [| [| | ]| [| | ]]).	23.8990530968	33475
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	1.09976911545	1472
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0229749679565	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0143840312958	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	64.0.322.0.256.0	synth with cache (only 1: destruct n; only 1: discriminate; only 1: destruct n; only 1: now rewrite <- ?N.add_le_mono_l; only 1: simpl; only 1: now Nat.nzsimpl).	0.286866903305	375
Coq.ZArith.Znat.Nat2Z.id	40
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.29131102562	175
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40
Coq.ZArith.Znat.Z2Nat.inj	40	385.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: congruence).	0.0490469932556	22
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0347230434418	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	65	synth with cache (only 1: do 2 Morphisms.f_equiv).	0.0320858955383	6
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: trivial).	0.0124640464783	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0138931274414	1
Coq.ZArith.Znat.Z2Nat.inj_add	40	0.1.0.320.1.0.0.640.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros x y; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now Z.nzsimpl; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	22.1201658249	25423
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0192959308624	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0238060951233	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.1.0.0.0.0.1.0.0.1.0.0.0.0.1.0.0.0.18	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	15.6338119507	35632
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.14032793045	124
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: trivial).	0.0130410194397	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0140130519867	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0130100250244	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0827460289001	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0798189640045	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.320.0.0.0.0.384.320.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now N.nzsimpl; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: now N.nzsimpl; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	2.34383797646	2869
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0182008743286	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	2.49791288376	4390
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	5.40522694588	6568
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0195891857147	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	10.2675299644	7026
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40	3.520.323	synth with cache (only 1: intro Hxz; only 1: fix gcd_divide 1; only 1: now Z.nzsimpl).	39.2958500385	57534
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	35.1751549244	67926
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40	0.0.66.130.3.257.833	synth with cache (only 1: firstorder; only 1: destruct H as [H2 H3]; only 1: revert n m; only 1: intros z; only 1: fix le_div2 1; only 1: intros q; only 1: trivial).	23.495773077	23022
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	4.1.64.0.0.0	synth with cache (only 1: intros a n a0 l h Hl EQ; only 1: case Z.compare_spec; only 1: intro H1; only 1: tauto; only 1: Z.order; only 1: Z.order).	2.162940979	3048
Coq.ZArith.Zcompare.Zle_compare	40	0.1.0.0.2	synth with cache (only 1: intros EQ n Hn; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: Z.order).	1.7090408802	1614
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.0.65.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: contradict H; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.305035114288	296
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0365929603577	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0334899425507	2
Coq.ZArith.Zquot.Zquot_0_r	40	334	synth with cache (only 1: now destruct a as [| [| | ]| ]).	1.99520087242	5296
Coq.ZArith.Zquot.Zrem_0_r	40	0.0.0.0.0.139	synth with cache (only 1: case a; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity).	2.15689396858	8328
Coq.ZArith.Zquot.Zrem_0_l	40	1	synth with cache (only 1: now destruct a).	0.0102889537811	2
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.01083111763	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.1.64.0	synth with cache (only 1: intros Ha Hb; only 1: zero_or_not b; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.609127998352	433
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.406903982162	268
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.227423906326	122
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	9.92496991158	5596
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0.512	synth with cache (only 1: intros a0; only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.352373123169	230
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	515	synth with cache (only 1: firstorder).	0.0621612071991	79
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	322	synth with cache (only 1: constructor).	0.0930919647217	165
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	0.192.260.390.0.192	synth with cache (only 1: intuition try easy; only 1: induction n; only 1: Nat.Private_Tac.order || (right; Nat.Private_Tac.order) || (left; Nat.Private_Tac.order); only 1: right; only 1: (right; Z.order) || (left; Z.order); only 1: trivial).	6.82394599915	19046
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	258.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: now N.nzsimpl).	0.104269981384	17
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	65.0.0	synth with cache (only 1: simpl; only 1: intros m w le; only 1: auto with typeclass_instances).	0.0429620742798	7
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: auto).	0.0229349136353	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	1.0.0.0.0.0.0.0.64.0.0.0.384.0	synth with cache (only 1: destruct z; only 1: intros P_or_Q; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: intuition try easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct 1 || trivial).	0.973980903625	765
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	0.195.1.0.0.129	synth with cache (only 1: intro n; only 1: destruct n as [| p| p]; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: trivial).	5.67903900146	7393
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).	0.36198091507	58
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	1.1.67.8	synth with cache (only 1: intros n z; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	24.9281249046	35866
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40	0.642.0.130	synth with cache (only 1: intros EQ; only 1: unfold two_power_nat, shift_nat; only 1: fix sqrtrem_spec 1; only 1: trivial).	8.3912460804	11216
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.7	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.274105072021	403
Coq.ZArith.BinInt.Z.pos_sub_spec	40	128.0.70.0	synth with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: symmetry; only 1: easy || now destruct 1).	39.8819999695	90347
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40	512.0.66.1	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intros q; only 1: auto with *).	1.29390406609	556
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.0.1.64.7	synth with cache (only 1: induction n; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_l; only 1: simpl; only 1: trivial; only 1: trivial).	0.432490110397	595
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.654.210	synth with cache (only 1: pattern n; only 1: compute; only 1: now destruct n).	3.56932091713	18393
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	2.448.321.321.128.897.771.513.199.0	synth with cache (only 1: simpl; only 1: pattern n; only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: assert (Proper (Logic.eq ==> Logic.eq ==> Logic.eq) N.compare); only 1: intros a b Ha; only 1: now rewrite Ha; only 1: destruct n; only 1: f_equiv; only 1: easy'; only 1: auto).	6.08760905266	11053
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.2.0.0.256.7	synth with cache (only 1: destruct n; only 1: exact eq_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.722866773605	1653
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.0.0.0.0.448.512.0.0.0.0.128.0	synth with cache (only 1: destruct n, m; only 1: now rewrite <- ?N.add_le_mono_r; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: destr_bool; only 1: N.auto'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	8.45780682564	12869
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	66	synth with cache (only 1: auto).	0.0163898468018	7
Coq.ZArith.BinInt.Z.two_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.019327878952	2
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0158720016479	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0168681144714	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0220458507538	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0.83	synth with cache (only 1: rewrite <- (PeanoNat.Nat.mul_1_l n)  at 1; only 1: now destruct n).	3.87178897858	7341
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0157561302185	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	448.3.0	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.629872083664	805
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40	67.1.3	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now destruct n).	6.58936500549	4666
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	1	synth with cache (only 1: reflexivity).	0.165227890015	138
Coq.ZArith.BinInt.Z.compare_le_iff	40	704.0.0.576.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intro LT; only 1: reflexivity; only 1: now split; only 1: firstorder).	0.213999032974	243
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.64.128.2.2.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: unfold not; only 1: intuition; only 1: intuition; only 1: intuition).	16.2943019867	38115
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).	3.0072851181	3993
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	67.0.64.320.0.0	synth with cache (only 1: unfold le, min; only 1: intuition; only 1: destruct sqrtrem as (s, rm); only 1: intuition; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: now destruct n).	1.89703011513	484
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0336890220642	5
Coq.ZArith.BinInt.Z.sgn_null	40	0.451	synth with cache (only 1: fix le_div2 1; only 1: trivial).	0.302919864655	395
Coq.ZArith.BinInt.Z.sgn_pos	40	64.576.130.452	synth with cache (only 1: setoid_replace 1%nat with (1 * 1)%nat by now PeanoNat.Nat.nzsimpl; only 1: rewrite <- (PeanoNat.Nat.succ_pred n)  at 2 by trivial; only 1: fix sqrtrem_spec 1; only 1: auto with *).	2.1997590065	995
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0240259170532	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: now destruct n).	0.0172231197357	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	448.64.0.0.0.192.1.5	synth with cache (only 1: revert m; only 1: destruct m; only 1: destruct (N.lt_trichotomy n 1) as [H1| [H1| H1]]; only 1: now destruct n; only 1: now destruct n; only 1: now destruct n; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: auto with sets).	1.0922729969	1349
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	synth with cache (only 1: now nzsimpl').	0.0356838703156	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	4	synth with cache (only 1: now destruct n).	1.06140017509	419
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _; only 1: simpl; only 1: trivial).	0.0369119644165	7
Coq.ZArith.BinInt.Z.even_spec	40	640.192.2.133	synth with cache (only 1: revert n; only 1: fix odd_spec 1; only 1: intro H; only 1: trivial using PeanoNat.Nat.square_nonneg).	4.45548391342	8923
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: trivial).	0.01416015625	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.0.64.192.192.320	synth with cache (only 1: destruct sqrtrem as (s, rm); only 1: now rewrite <- ?Pos.compare_antisym; only 1: induction n; only 1: now rewrite add_comm; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	0.367543935776	264
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.0167400836945	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.634348869324	426
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	1.448.0.0.1.385.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: inversion_clear H; only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: inversion_clear H; only 1: now destruct n, m).	2.58592009544	1687
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.2.1.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	5.09535217285	4361
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	192.512.0.0.0.0.0.0.0.128.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now N.nzsimpl'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: eauto with *; only 1: intuition).	1.01564407349	937
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.1.0.0.192.0.0.320.0.2	synth with cache (only 1: intros EQ; only 1: destruct a as [| a], n; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: auto with relations; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).	8.46744513512	8747
Coq.ZArith.BinInt.Z.testbit_Zpos	40
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	64	synth with cache (only 1: intuition).	0.0145559310913	5
Coq.ZArith.BinInt.Z.testbit_0_l	40	5	synth with cache (only 1: now destruct n).	0.065092086792	150
Coq.ZArith.BinInt.Z.testbit_neg_r	40	9	synth with cache (only 1: now induction n).	0.712370872498	876
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40	320.129.64.0	synth with cache (only 1: revert a m; only 1: intros m H; only 1: fix even_spec 1; only 1: easy).	0.663876771927	440
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	193.128.576.128.64.65.0	synth with cache (only 1: unfold lt, gt; only 1: destruct (max_spec m n) as [(H, E)| (H, E)]; only 1: destruct (PeanoNat.Nat.lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: trivial using gcd_divide_l; only 1: intuition PeanoNat.Nat.order; only 1: trivial using gcd_divide_l; only 1: now injection 1 || (intros; now f_equal)).	1.20377779007	802
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0121030807495	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.64.192.0.1.0.64.192.512	synth with cache (only 1: destruct (lt_trichotomy n m) as [LT| [EQ| GT]]; only 1: rewrite <- Pos.lt_succ_r; only 1: intro H; only 1: now apply lt_lt_succ_r; only 1: intros; only 1: Private_Tac.order; only 1: rewrite <- Pos.lt_succ_r; only 1: intro H; only 1: now apply lt_lt_succ_r).	1.65676283836	1125
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.01056599617	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	128.0.1.576.576	synth with cache (only 1: apply PeanoNat.Nat.bits_inj; only 1: rewrite PeanoNat.Nat.mul_comm; only 1: unfold testbit; only 1: simpl; only 1: now f_equal).	0.160793066025	135
Coq.ZArith.BinInt.Z.add_diag	40	0.0.1	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.14967417717	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.192.448.258.576.768.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: compute; only 1: destruct n; only 1: intuition order; only 1: order_pos'; only 1: Private_Tac.order || (right; Private_Tac.order) || (left; Private_Tac.order); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	20.8785250187	25950
Coq.ZArith.BinInt.Pos2Z.id	40	1	synth with cache (only 1: now destruct p).	0.0205190181732	2
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.0173301696777	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0304028987885	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	321	synth with cache (only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0237760543823	22
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	833	synth with cache (only 1: destr_bool).	0.0495297908783	90
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.017431974411	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.118736982346	4
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0270199775696	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.0	synth with cache (only 1: rewrite <- Pos.add_1_r; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0256278514862	3
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0240530967712	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	0.0.0.0.130.0	synth with cache (only 1: intros; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct H).	3.7798781395	832
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1	synth with cache (only 1: reflexivity).	0.0191130638123	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0.261.0.580.203	synth with cache (only 1: f_equiv; only 1: intros n; only 1: intros; only 1: now apply H; only 1: now apply Pos.iter_swap_gen).	31.3006279469	40919
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0192110538483	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	1.0	synth with cache (only 1: simpl; only 1: trivial).	0.023285150528	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: reflexivity).	0.0194518566132	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.0180780887604	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: reflexivity).	0.0260531902313	2
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.015321969986	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.2	synth with cache (only 1: unfold Z.sqrtrem, Z.sqrt, Pos.sqrt; only 1: trivial).	0.0242340564728	4
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.0154838562012	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	320.64.1.1.6.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: repeat split; only 1: now PeanoNat.Nat.nzsimpl).	6.0187959671	3006
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.0176961421967	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0320279598236	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.0179839134216	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0352690219879	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	194	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0365719795227	15
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	3	synth with cache (only 1: easy).	0.0624160766602	17
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0162620544434	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0261812210083	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	synth with cache (only 1: easy).	0.0231330394745	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0180349349976	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.0.1.128	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: simpl; only 1: intros H; only 1: now rewrite <- Pos.compare_antisym).	0.233668088913	137
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	65.0.1	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: assumption).	0.065997838974	78
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	577.0	synth with cache (only 1: intros; only 1: eexact H).	0.0766139030457	87
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0175330638885	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0263299942017	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0180571079254	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.0197989940643	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: trivial).	0.0175709724426	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0173280239105	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.0153758525848	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	3	synth with cache (only 1: split).	0.0249471664429	4
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0192880630493	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0187861919403	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.0193998813629	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0219700336456	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.576.522.199	synth with cache (only 1: cut (1%positive = 1%positive); only 1: fix gcd_divide 1; only 1: now N.nzsimpl; only 1: easy).	4.19498682022	11852
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0285170078278	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.137145042419	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.2.448.0.12	synth with cache (only 1: intros H; only 1: destruct x; only 1: now rewrite <- ?Z.succ_le_mono; only 1: easy || now destruct y; only 1: easy).	12.3206310272	5418
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0759589672089	5
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0688447952271	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.46915602684	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	577.0.0.0.0.0.6	synth with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_l).	0.663383960724	1590
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.120585918427	74
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0	synth with cache (only 1: intros n m H; only 1: now subst).	0.0213191509247	2
Coq.ZArith.BinInt.ZL0	40	0	synth with cache (only 1: trivial).	0.0148179531097	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	8	synth with cache (only 1: now Z.nzsimpl').	5.4620039463	1121
Coq.ZArith.BinInt.Z_eq_mult	40	4	synth with cache (only 1: now destruct m).	0.197561979294	74
Coq.ZArith.Zcomplements.floor_gt0	40	1.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0292210578918	4
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	0.258	synth with cache (only 1: intro m; only 1: now destruct n).	0.0804738998413	20
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0	synth with cache (only 1: trivial).	0.0161919593811	1
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40	67.67.0.0.405	synth with cache (only 1: compute; only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	4.77378797531	12200
Coq.ZArith.Zeven.Zeven_odd_bool	40	0.0.0.0.0.0.0.64.0.0.0.0.1.512.90	synth with cache (only 1: induction n; only 1: auto with sets; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now f_equal; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	38.0073180199	37354
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	1.79128599167	2409
Coq.ZArith.Zeven.Zeven_not_Zodd	40	65.768.65.0.0.1.64.512.0.320.0.0.0.1.1	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: intros r H; only 1: tauto; only 1: CRelationClasses.reduce; only 1: easy || now destruct y; only 1: auto; only 1: destruct p; only 1: simpl; only 1: now intuition; only 1: eauto; only 1: now destruct 1 || intros _).	17.2215020657	36974
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0561780929565	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.030011177063	1
Coq.ZArith.Zeven.Zodd_div2	40	704.449.0.0.0.0.0.0.0.64.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: now try split; only 1: BinNat.N.auto').	4.90099406242	2621
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	2.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.306046009064	59
Coq.ZArith.Zeven.Zodd_quot2	40	1.65.0.129.0.0.0.512.1.0.0.0.0.1.0	synth with cache (only 1: intros a Ha; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.xI_succ_xO; only 1: Bool.destr_bool; only 1: easy; only 1: simpl; only 1: now split; only 1: now destruct Ha || clear Ha; only 1: simpl; only 1: now destruct a; only 1: now Z.nzsimpl').	24.0979938507	18783
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.0	synth with cache (only 1: intros Hn Hn'; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.885170936584	289
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	2.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.321524858475	205
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.458806991577	306
Coq.ZArith.Zeven.Zeven_2p	40	128.64.256.0.0.321.513.448.0.1.384.0.3.74.1	synth with cache (only 1: change 2 with (1 + 1); only 1: Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: easy'; only 1: simpl; only 1: induction p; only 1: now try split; only 1: now rewrite <- ?BinNat.N.succ_le_mono; only 1: now Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: now Z.nzsimpl; only 1: now simpl; only 1: now Z.nzsimpl).	14.0667169094	36669
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	3.1.5.384.137.450.512.9	synth with cache (only 1: simpl; only 1: PeanoNat.Nat.nzsimpl'; only 1: repeat red; only 1: destruct p; only 1: easy'; only 1: easy || now destruct Hb; only 1: simpl; only 1: now destruct p).	24.3205690384	62772
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0719048976898	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0702979564667	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0189909934998	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0210859775543	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.0197079181671	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.0.580.64	synth with cache (only 1: destruct 1; only 1: firstorder  (subst; auto); only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	5.76846289635	3680
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	513.65.0.256	synth with cache (only 1: red; only 1: intro H; only 1: apply Z.lt_gt_cases; only 1: N.auto').	0.322034835815	230
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	256.643	synth with cache (only 1: intros Hz; only 1: firstorder).	1.97718811035	721
Coq.ZArith.Znumtheory.Zis_gcd_0	40	322	synth with cache (only 1: RelationClasses.simpl_relation).	0.290904045105	162
Coq.ZArith.Znumtheory.Zis_gcd_1	40	519	synth with cache (only 1: CRelationClasses.simpl_crelation).	1.68894886971	977
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0395021438599	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0732970237732	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	1.0.0.0.259.1	synth with cache (only 1: intros; only 1: inversion H; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	1.58404684067	1025
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40	2.193.1.128.64.322	synth with cache (only 1: intro Hb; only 1: intros Ha; only 1: intros x y; only 1: generalize x, y; only 1: fix le_div2 1; only 1: trivial).	30.1787469387	6649
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0596067905426	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40	385.642.192.130.194	synth with cache (only 1: intro m; only 1: intro p; only 1: intro Hb; only 1: fix sqrtrem_spec 1; only 1: now subst).	39.7214050293	42192
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	518	synth with cache (only 1: firstorder).	1.80529403687	1306
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.0.256.1.256.389.0	synth with cache (only 1: intros n; only 1: Z.nzsimpl'; only 1: repeat red; only 1: apply Zis_gcd_intro; only 1: now Nat.nzsimpl; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	1.98805212975	2768
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	514.0.1.1.0.0.3	synth with cache (only 1: intro z; only 1: intros; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intro; only 1: now apply H).	20.3213689327	11361
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	259	synth with cache (only 1: firstorder  discriminate).	0.0854489803314	36
Coq.ZArith.Znumtheory.not_prime_1	40	129.66	synth with cache (only 1: intuition; only 1: now destruct H).	0.152064085007	80
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	0.389	synth with cache (only 1: intros (H, _); only 1: now apply (Zlt_le_succ 1)).	0.547601938248	584
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40	384.0.13	synth with cache (only 1: fix gcd_divide 1; only 1: intros a b; only 1: easy).	9.28789305687	21093
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40	64.641	synth with cache (only 1: fix gcd_greatest 1; only 1: easy || now destruct 1).	1.11689686775	166
Coq.ZArith.Znumtheory.not_prime_divide	40	192.258	synth with cache (only 1: fix even_spec 1; only 1: N.auto').	0.214230060577	80
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	3.1.128.259.2.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: destruct b; only 1: easy || now destruct y; only 1: now apply Z.mod_eq; only 1: easy).	3.83789587021	6257
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40	513.448.1.709	synth with cache (only 1: intros a0; only 1: intros Hb; only 1: fix even_spec 1; only 1: eauto).	25.5485198498	20472
Coq.ZArith.Zdiv.Zmod_0_l	40	321.0	synth with cache (only 1: intros; only 1: eauto).	0.0466129779816	18
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0216979980469	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	64.0	synth with cache (only 1: intros; only 1: easy).	0.0125949382782	5
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0176441669464	4
Coq.ZArith.Zdiv.Zmod_1_r	40	0.512.1.448	synth with cache (only 1: intro RS'; only 1: symmetry; only 1: N.nzsimpl; only 1: Z.order).	0.304847955704	298
Coq.ZArith.Zdiv.Zdiv_1_r	40	192.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl).	0.0461049079895	11
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	1.449.513	synth with cache (only 1: intros a Ha; only 1: fix sqrtrem_spec 1; only 1: easy).	0.924225091934	1066
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0230598449707	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40	384.0.192	synth with cache (only 1: fix gcd_divide 1; only 1: intros a b H; only 1: now auto with arith).	0.0554251670837	92
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.1.640	synth with cache (only 1: intros Hn; only 1: intros a Ha; only 1: rewrite Z.div_exact; only 1: auto; only 1: now Z.nzsimpl).	7.56077599525	3213
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40	385.453	synth with cache (only 1: fix gcd_divide 1; only 1: now Nat.nzsimpl).	2.1548781395	5036
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40	66.512.64	synth with cache (only 1: intros Hb; only 1: fix le_div2 1; only 1: auto).	0.248687028885	212
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40	385.832.200	synth with cache (only 1: intro; only 1: fix gcd_greatest 1; only 1: now f_equiv).	8.29679203033	14488
Coq.ZArith.Zdiv.Zplus_mod	40	256.320.770	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros n; only 1: now N.nzsimpl).	0.565196037292	551
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0161788463593	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0.388	synth with cache (only 1: intros H; only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.431314945221	988
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0158669948578	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	3	synth with cache (only 1: reflexivity).	0.0215599536896	24
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	448.0	synth with cache (only 1: intros; only 1: now f_equal).	0.0823669433594	41
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	196.64.385.0.6.0	synth with cache (only 1: unfold eqm; only 1: split; only 1: auto; only 1: intros n m H; only 1: now subst; only 1: CRelationClasses.simpl_crelation).	9.00421094894	5365
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40	1.387.640.576.644	synth with cache (only 1: intros Hz; only 1: intros a n H; only 1: intros Hn; only 1: fix gcd_divide 1; only 1: auto).	27.002423048	17523
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.2.2	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	3.51927113533	699
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	1.256.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: Z.swap_greater; only 1: Z.order).	3.60158896446	2691
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.65.129	synth with cache (only 1: intro EQ; only 1: destruct 1; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	6.46443414688	1983
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.0.0.129	synth with cache (only 1: intros a n H; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	1.10636878014	1567
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.0	synth with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).	0.136620044708	6
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0398569107056	3
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.0194289684296	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.704.7.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: intuition Nat.Private_Tac.order; only 1: auto).	6.41724991798	9835
Coq.ZArith.Zabs.Zabs_intro	40	65.0.64.198.576.1	synth with cache (only 1: intros a b Hb; only 1: intro p; only 1: destruct b; only 1: auto; only 1: auto; only 1: auto with sets).	3.22675299644	6140
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.00929307937622	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	synth with cache (only 1: auto with relations).	0.0082859992981	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0620651245117	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.064248085022	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.00825595855713	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	130	synth with cache (only 1: auto with relations).	0.0790100097656	61
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	64	synth with cache (only 1: Morphisms.solve_proper).	0.0101461410522	5
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.00821495056152	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.00851821899414	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.00735807418823	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: trivial).	0.00933504104614	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0074348449707	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.00782012939453	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0281670093536	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	514.64	synth with cache (only 1: Z.bitwise; only 1: easy || now destruct Hb).	0.789211988449	122
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	6.7	synth with cache (only 1: unfold Pos.to_nat; only 1: apply Pos2Nat.inj_iter).	0.865813970566	1115
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	66.1.0.0.448	synth with cache (only 1: intro m; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: easy).	4.73057389259	2225
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	synth with cache (only 1: trivial).	0.035099029541	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	130.0	synth with cache (only 1: simpl; only 1: now split).	0.0487649440765	10
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	514.0.4.192.1.391	synth with cache (only 1: reflexivity || apply f_equal || exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: apply Nat.lt_succ_lt_pred; only 1: revert n; only 1: fix le_div2 1; only 1: now try split).	6.08722996712	3866
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	2.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: now Z.nzsimpl).	0.426038980484	27
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	768.0.1.2.0.66.320.128.1	synth with cache (only 1: Nat.induct n; only 1: split; only 1: revert m; only 1: intros Hn; only 1: intros l1 l2; only 1: Nat.nzsimpl; only 1: simpl; only 1: f_equal; only 1: intuition N.order).	36.8328700066	36695
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	7	synth with cache (only 1: apply two_power_pos_equiv).	6.35400891304	4970
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	64.2.704.456.1	synth with cache (only 1: intros; only 1: destruct x; only 1: now symmetry; only 1: split; only 1: now Nat.nzsimpl).	5.57789897919	6340
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0285770893097	2
Coq.ZArith.auxiliary.Zle_left	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0220129489899	1
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0250828266144	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.021803855896	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	synth with cache (only 1: apply Z.lt_0_sub).	0.0219008922577	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	1.98734903336	1113
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0466611385345	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0505750179291	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.514.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: firstorder; only 1: now case Z.compare_spec).	0.325181007385	325
Coq.ZArith.Zmax.Zpos_max_1	40	1.257.129.9	synth with cache (only 1: induction p; only 1: tauto; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now Z.nzsimpl').	1.00100111961	1395
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	68	synth with cache (only 1: Z.solve_min).	0.111817121506	46
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	2.448.385.197.0	synth with cache (only 1: unfold Z.min, Pos.min; only 1: destruct p as [| p| p]; only 1: now Z.swap_greater; only 1: now try PeanoNat.Nat.order'; only 1: now Z.nzsimpl).	2.58819913864	3048
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	2.0.0.0.128.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: intros LT; only 1: auto; only 1: left; only 1: auto; only 1: now intuition).	1.1375849247	910
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	321	synth with cache (only 1: Z.order_pos).	0.311872959137	93
Coq.ZArith.Zorder.Zlt_not_le	40	0.64	synth with cache (only 1: intros Hb; only 1: Z.order).	0.280663013458	40
Coq.ZArith.Zorder.Zle_not_gt	40	0.0.448	synth with cache (only 1: repeat red; only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0629990100861	43
Coq.ZArith.Zorder.Zgt_not_le	40	64	synth with cache (only 1: now rewrite <- ?Z.succ_le_mono).	0.12368106842	5
Coq.ZArith.Zorder.Znot_ge_lt	40
Coq.ZArith.Zorder.Znot_lt_ge	40	1.65.0	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.0439631938934	8
Coq.ZArith.Zorder.Znot_gt_le	40	66	synth with cache (only 1: easy').	0.114424943924	29
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0344550609589	4
Coq.ZArith.Zorder.not_Zne	40	0.451.128.448.0.6.194.65	synth with cache (only 1: intros H; only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: auto; only 1: induction n; only 1: now Z.swap_greater; only 1: now BinNat.N.nzsimpl; only 1: easy).	3.78847813606	8302
Coq.ZArith.Zorder.Zgt_asym	40	65.1	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.232944965363	41
Coq.ZArith.Zorder.Zgt_irrefl	40	196	synth with cache (only 1: easy).	0.503308057785	497
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.15842294693	70
Coq.ZArith.Zorder.Zle_gt_trans	40	1.0.68	synth with cache (only 1: intro LE; only 1: Z.swap_greater; only 1: Z.order).	0.446745157242	384
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0489587783813	2
Coq.ZArith.Zorder.Zge_trans	40	1.3	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	2.08151102066	2458
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0421810150146	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0215899944305	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0178160667419	1
Coq.ZArith.Zorder.Zgt_succ	40	0.0.459	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	1.25676178932	1018
Coq.ZArith.Zorder.Znot_le_succ	40	0.0.135.6.129	synth with cache (only 1: intros H; only 1: apply H; only 1: reflexivity || destruct H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	22.0503249168	47407
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40	128.67.710.1	synth with cache (only 1: Z.swap_greater; only 1: firstorder; only 1: apply Z.le_succ_l; only 1: intuition).	3.89524888992	6073
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0187900066376	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0180101394653	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0339200496674	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0197539329529	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0345690250397	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0181360244751	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	128.4.65.128	synth with cache (only 1: intros Az RS; only 1: eapply Pos.Private_Tac.lt_irrefl; only 1: constructor; only 1: now destruct n as [| [| | ]| [| | ]]).	16.4422581196	6398
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.171915054321	180
Coq.ZArith.Zorder.Zle_neg_pos	40	0.2	synth with cache (only 1: intros a b; only 1: easy).	0.0328650474548	4
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intro n; only 1: reflexivity).	0.0248548984528	2
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.0280590057373	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0233190059662	2
Coq.ZArith.Zorder.Zle_0_nat	40	192.0.0.324.0.197	synth with cache (only 1: red; only 1: intros; only 1: destruct n; only 1: simpl; only 1: discriminate; only 1: now try split).	3.76633191109	8619
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0225479602814	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0212798118591	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	synth with cache (only 1: apply Z.add_le_mono_l).	0.0240178108215	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.0233271121979	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0255107879639	3
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0286729335785	4
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0451650619507	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0439701080322	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.124601840973	24
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0345640182495	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0184981822968	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0180079936981	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0501589775085	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40
Coq.ZArith.Zorder.Zmult_ge_compat_l	40
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	2.578.64.323	synth with cache (only 1: intros H H'; only 1: unfold Z.le; only 1: firstorder; only 1: now apply Z.mul_le_mono_nonneg).	5.61661601067	5566
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0364670753479	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0203068256378	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0361189842224	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0201539993286	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0506808757782	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.054426908493	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	0.0.0.0.768.0.192	synth with cache (only 1: destruct n; only 1: easy || now destruct y; only 1: fix gcd_greatest 1; only 1: easy || now destruct y; only 1: simpl; only 1: Z.swap_greater; only 1: easy).	0.527704000473	175
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0313642024994	4
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	0.0.0.512.1.0.0.320.128.65.323.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: destruct n, m; only 1: reflexivity; only 1: unfold Z.le, Z.lt in *; only 1: now try split; only 1: easy; only 1: auto; only 1: easy; only 1: eauto using BinNat.N.Private_Tac.eq_trans, BinNat.N.Private_Tac.eq_sym; only 1: auto; only 1: destr_eq H; only 1: destr_eq H).	16.4694139957	5203
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	0.0.0.0.193.0.0.512.1.0.69	synth with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: easy || now destruct y; only 1: intros a Ha; only 1: constructor; only 1: Z.order; only 1: apply Z.mul_lt_mono_pos_l; only 1: now destruct 1 || intros _; only 1: easy || now destruct y; only 1: apply Z.mul_lt_mono_pos_r; only 1: apply Z.mul_pos_pos; only 1: easy).	7.9306910038	10728
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0316779613495	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0461840629578	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0180881023407	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.4.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: apply Z.leb_le; only 1: auto with arith).	0.626039028168	884
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	194	synth with cache (only 1: eauto).	0.0209500789642	15
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.136.64	synth with cache (only 1: unfold Z.le, Z.min; only 1: constructor; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	28.9792580605	47407
Coq.ZArith.Zbool.Zge_is_le_bool	40
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0397188663483	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.2	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.112570047379	176
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0266029834747	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	0.0.0.0.3.68	synth with cache (only 1: unfold Z.le, Z.max; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	8.72161197662	19807
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.804505109787	1528
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.1.641.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: intuition BinNat.N.order; only 1: constructor; only 1: trivial).	0.627328872681	414
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.1.0.0.0.1	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: now intuition).	2.60549902916	3979
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.3	synth with cache (only 1: intro; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.315459012985	278
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0222759246826	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0164520740509	2
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.129.1.0.5.4.4.2.2.1	synth with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: destruct r using Acc_inv_dep; only 1: apply F_ext; only 1: intros [? ?]; only 1: auto).	23.5580830574	53228
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.035101890564	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0160751342773	3
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.6.8.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	1.59638786316	3698
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	5.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.165099859238	146
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	129.65.137.3.131.192	synth with cache (only 1: intros eq_rect_eq; only 1: intros n m; only 1: intro; only 1: intros [HypL HypR]; only 1: subst; only 1: repeat split).	4.40087103844	18446
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP).	0.0116271972656	3
Coq.Program.Equality.UIP_refl_refl	40	24	synth with cache (only 1: apply UIP).	20.8469309807	88990
Coq.Program.Equality.inj_pairT2_refl	40	4	synth with cache (only 1: apply UIP).	0.0162758827209	17
Coq.Program.Equality.solution_left	40	2.66.3	synth with cache (only 1: intro eq_rect_eq; only 1: inversion 1; only 1: trivial).	0.121912956238	158
Coq.Program.Equality.solution_right	40	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.019161939621	5
Coq.Program.Equality.deletion	40	1.1	synth with cache (only 1: intros; only 1: trivial).	0.0158009529114	4
Coq.Program.Equality.simplification_heq	40	0.2.4.3	synth with cache (only 1: intros H H'; only 1: subst; only 1: apply H; only 1: trivial).	0.272541999817	499
Coq.Program.Equality.simplification_existT2	40	0.0.0.5.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.299823045731	546
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0202569961548	3
Coq.Program.Combinators.compose_id_left	40	1	synth with cache (only 1: auto).	0.0147490501404	2
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0184149742126	2
Coq.Program.Combinators.compose_assoc	40	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: reflexivity).	0.0861179828644	85
Coq.Program.Combinators.flip_flip	40	0	synth with cache (only 1: reflexivity).	0.0140428543091	1
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.01970911026	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0594079494476	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40	576.2.0.705.192.5	synth with cache (only 1: intros H; only 1: intros H0; only 1: intros m; only 1: do 2 rewrite multiplicity_In; only 1: intros; only 1: congruence).	10.9797239304	14844
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40	193.0.0.0.67.1.1.5	synth with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: intros H; only 1: compute in H; only 1: specialize (H x); only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: simpl_relation).	4.01109790802	6387
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40	66.65.0.0.0.640.1.1	synth with cache (only 1: induction l1; only 1: simpl; only 1: intros [| n]; only 1: constructor; only 1: trivial; only 1: simpl; only 1: fix even_spec 1; only 1: CRelationClasses.simpl_crelation).	0.750571966171	1641
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	320.0.391.0.1.64	synth with cache (only 1: intros [| n]; only 1: intros; only 1: apply Permutation_refl; only 1: fix gcd_greatest 1; only 1: simpl; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r).	12.234139204	31842
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	64.2.64.1.0.0.449.0.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: Bool.destr_bool; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H as [H2 H3]; only 1: auto; only 1: eauto using Add_head).	6.75315999985	14623
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40	2.448.130.192.6.451.0	synth with cache (only 1: intro; only 1: elim l; only 1: constructor; only 1: intro H; only 1: intros eq_rect_eq; only 1: fix odd_spec 1; only 1: auto).	3.8388710022	14579
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	3.128.128	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: intuition; only 1: auto).	0.172161817551	213
Coq.Sorting.Permutation.Permutation.Permutation_sym	40	64.321.322.195	synth with cache (only 1: intros EQ; only 1: intros x; only 1: fix gcd_divide 1; only 1: auto with *).	9.56944298744	21783
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	384.450	synth with cache (only 1: intros b LT; only 1: eauto with *).	0.178488969803	95
Coq.Sorting.Permutation.Permutation_cons	40	387.128.0.0	synth with cache (only 1: repeat red; only 1: intros f g l H; only 1: intro n; only 1: CRelationClasses.simpl_crelation).	0.48845410347	497
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	1.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: intros; only 1: auto; only 1: clear H; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition; only 1: auto).	14.0284509659	19388
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	128.322.64	synth with cache (only 1: intros Su; only 1: fix gcd_divide 1; only 1: tauto).	4.3569419384	1457
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0197839736938	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	67.256.1	synth with cache (only 1: induction l; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r; only 1: eauto with arith).	2.43273615837	745
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.0.193.132	synth with cache (only 1: intros H; only 1: intro EQ; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.97367191315	2889
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	64.384.320.259	synth with cache (only 1: intros Hab; only 1: intro H'; only 1: fix gcd_divide 1; only 1: firstorder  (subst; auto)).	1.28865408897	2211
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	0.0.0.0.0.0.0.0.64.129	synth with cache (only 1: intros h; only 1: intro y; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	12.0173408985	830
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40	1.321.259.321	synth with cache (only 1: intros l H; only 1: unfold CMorphisms.respectful, CRelationClasses.relation_equivalence in *; only 1: fix le_div2 1; only 1: auto using Injective_map_NoDup, seq_NoDup).	7.34732198715	2496
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40	256.577.64.0.195.67	synth with cache (only 1: intros H; only 1: fix le_div2 1; only 1: unfold adapt; only 1: rewrite <- H; only 1: CRelationClasses.simpl_crelation; only 1: solve_proper).	5.62813282013	6233
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	66	synth with cache (only 1: now split).	0.0363481044769	7
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.321	synth with cache (only 1: intros n m H1 H2; only 1: auto).	1.56072282791	44
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	65.0.64	synth with cache (only 1: destruct eqA_equiv; only 1: unfold permutation, meq; only 1: congruence).	1.79019594193	341
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0837669372559	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	0.0.384.1.0.0	synth with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: now subst; only 1: trivial; only 1: trivial).	2.8092238903	585
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	1.0.1.192.64.1	synth with cache (only 1: unfold permutation; only 1: intros a H; only 1: intro; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	4.55083489418	1544
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	385.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: now rewrite <- ?N.add_le_mono_l).	5.24804401398	1343
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	129.2.194.0.0.0.65.128	synth with cache (only 1: intros n m; only 1: intro y0; only 1: destruct eqA_dec as [_| NEQ]; only 1: intros; only 1: auto; only 1: intros E1; only 1: contradict NEQ; only 1: reflexivity || apply f_equal || exfalso).	15.5193428993	10868
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.126332998276	5
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	0.64.384.0.0.577.2.129	synth with cache (only 1: intros x; only 1: intros l a; only 1: intro; only 1: rewrite multiplicity_InA; only 1: rewrite multiplicity_InA; only 1: repeat red; only 1: elim H; only 1: auto with arith).	15.7294940948	8268
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.66	synth with cache (only 1: inversion 1 as [H1| ?]; only 1: auto).	0.150751829147	268
Coq.Sorting.Sorted.defs.Sorted_inv	40	579.0	synth with cache (only 1: inversion 1; only 1: auto with bool).	0.140114068985	263
Coq.Sorting.Sorted.defs.Sorted_rect	40	128.0.452.0.386	synth with cache (only 1: intros m H1 H2; only 1: intro; only 1: fix odd_spec 1; only 1: intros E; only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym).	8.32774209976	23842
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.193.128	synth with cache (only 1: intro Ha; only 1: inversion 1; only 1: auto).	0.161226034164	110
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0361080169678	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	2.0.2.0.0.1.65	synth with cache (only 1: intro H; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	3.6903719902	7323
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: auto with arith).	0.0814030170441	3
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.070338010788	2
Coq.Sorting.Heap.defs.invert_heap	40	0.3.195	synth with cache (only 1: intros H1 H2 n; only 1: inversion_clear 1; only 1: auto with datatypes).	4.54739689827	1927
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	5.19851207733	1817
Coq.Sorting.Heap.defs.low_trans	40	64.3.64.1	synth with cache (only 1: simple induction T; only 1: firstorder; only 1: simpl; only 1: firstorder using Sorted_inv).	17.2103521824	4437
Coq.Sorting.Heap.defs.Equivalence_instance_0	40	321.1.768.0.0.29	synth with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: intros Hn Hm; only 1: intros; only 1: congruence).	12.5052599907	6813
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.2.1.0.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	10.7950658798	4455
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	1.7	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	9.72876119614	5728
Coq.Sorting.Heap.defs.list_to_heap	40	128.2	synth with cache (only 1: fix merge 1; only 1: now auto).	0.0973138809204	24
Coq.Sorting.Heap.defs.heap_to_list	40	1.128.13	synth with cache (only 1: fix merge 1; only 1: intros n m; only 1: auto with datatypes).	10.5655319691	7164
Coq.Sorting.Heap.defs.treesort	40	1.320.3	synth with cache (only 1: fix merge 1; only 1: intro H; only 1: auto with datatypes).	3.11334180832	697
Coq.Init.Wf.Well_founded.Acc_inv	40	2.7.0	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.173031806946	433
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0163362026215	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0157241821289	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	1.29	synth with cache (only 1: intros f [x]; only 1: auto).	0.62196803093	2622
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.0.0.64.0.69.0.6.147.0.9.1	synth with cache (only 1: intro z; only 1: intros H x0; only 1: intro; only 1: inversion_clear H; only 1: reflexivity || destruct H; only 1: trivial; only 1: induction n; only 1: assumption; only 1: destruct H0 in H; only 1: reflexivity || destruct H; only 1: assumption; only 1: auto).	20.9253330231	148767
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.015949010849	6
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00529098510742	2
Coq.Init.Peano.not_eq_S	40	0.8	synth with cache (only 1: intro H; only 1: auto).	0.121948003769	256
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.015499830246	24
Coq.Init.Peano.n_Sn	40	3.0.64.36.5	synth with cache (only 1: red; only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: auto).	9.29730796814	79873
Coq.Init.Peano.plus_n_O	40	0.5.0.1.31	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.502730131149	2652
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0142991542816	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.04509806633	70
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0178837776184	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0137841701508	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0272159576416	23
Coq.Init.Peano.le_n_S	40	1.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0305049419403	23
Coq.Init.Peano.nat_case	40	1.3.129.7	synth with cache (only 1: induction n; only 1: intros H ?; only 1: trivial; only 1: trivial).	0.480145931244	1157
Coq.Init.Peano.nat_double_ind	40	1.1.13.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	1.69064497948	5930
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	4.0.0.0.64.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction 1; only 1: apply f_equal, IHn, le_S_n; only 1: trivial; only 1: apply f_equal, IHn, le_S_n; only 1: auto).	2.02291202545	2511
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.27525281906	1216
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.433635950089	257
Coq.Init.Peano.nat_rect_succ_r	40	0.5.1.0.8	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	1.65868115425	3827
Coq.Init.Peano.nat_rect_plus	40	0.0.1.3.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.226160049438	245
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.0.6.28	synth with cache (only 1: intro H; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	1.88896512985	14282
Coq.Init.Datatypes.eq_true_ind_r	40	1.76.67.0	synth with cache (only 1: intro; only 1: intros h1 h2; only 1: destruct 1; only 1: assumption).	0.193233013153	951
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00911283493042	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00927805900574	3
Coq.Init.Datatypes.surjective_pairing	40	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).	0.0474371910095	87
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0172479152679	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0419309139252	26
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	1.05740690231	2115
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0082700252533	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00729513168335	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00749492645264	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0152080059052	5
Coq.Init.Logic_Type.identity_ind_r	40	0.0.4	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0571210384369	162
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00972485542297	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00951194763184	3
Coq.Init.Specif.sigT_eta	40	0.59	synth with cache (only 1: destruct p; only 1: reflexivity).	0.899801015854	9351
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0108888149261	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0122539997101	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0128040313721	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.10.4	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.369166851044	1325
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.67.46	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	0.990519046783	11440
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0201809406281	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0194220542908	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.0215811729431	2
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.67.9.9	synth with cache (only 1: destruct p; only 1: simpl in *; only 1: subst; only 1: reflexivity).	1.14077591896	3505
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.9.12.68	synth with cache (only 1: symmetry; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	8.76572394371	23756
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0265209674835	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0294940471649	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0543501377106	6
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	6.4.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	2.70922994614	4657
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0301160812378	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.3.2.0.2	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.945085048676	1118
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	2.2.2.6.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: simpl in *; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).	23.7173638344	35751
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0398991107941	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0490050315857	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0747489929199	6
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	130.0.0.2.1.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist2_uncurried; only 1: apply H).	1.04676198959	667
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0391988754272	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.024698972702	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.0.0.0.192.0.706.78	synth with cache (only 1: split; only 1: intro; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	13.6183290482	7774
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.070708990097	3
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.1.0.2.94	synth with cache (only 1: red; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	14.9907488823	46378
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	1.640.640.2.0.133.76.388.65	synth with cache (only 1: reduce; only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: generalize H; only 1: generalize H; only 1: simpl; only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: induction x; only 1: fix gcd_greatest 1; only 1: auto with arith).	33.0057089329	115216
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	129.0.0.0.0.1.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.216440916061	155
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40	128.448.323	synth with cache (only 1: fix gcd_divide 1; only 1: intro Streicher_K; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.711498022079	609
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40	192.64.195	synth with cache (only 1: fix even_spec 1; only 1: intros E; only 1: auto with arith).	1.04634785652	855
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	2.0.0.0.1.5.3	synth with cache (only 1: simpl; only 1: intro n; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: apply Z.square_nonneg).	4.91154098511	8364
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.0174369812012	1
Coq.QArith.Qfield.Examples.ex2	40	0	synth with cache (only 1: exact Qplus_comm).	0.017569065094	1
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0993959903717	5
Coq.QArith.Qfield.Examples.ex4	40	1	synth with cache (only 1: now split).	0.0177760124207	2
Coq.QArith.Qfield.Examples.ex5	40	2	synth with cache (only 1: trivial).	0.0226891040802	3
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0288279056549	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0512020587921	5
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.03297996521	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0338199138641	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0880780220032	17
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0481109619141	4
Coq.QArith.Qcanon.Qred_identity	40	257.513.67	synth with cache (only 1: intros p1; only 1: fix sqrtrem_spec 1; only 1: N.auto').	1.37268519402	2218
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40	321.384.133.64.67.67	synth with cache (only 1: intros m; only 1: case N.pos_div_eucl; only 1: firstorder  (subst; auto); only 1: now constructor; only 1: fix odd_spec 1; only 1: tauto).	16.8115708828	23286
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40	576.584	synth with cache (only 1: fix gcd_greatest 1; only 1: destr_bool).	2.91232991219	2041
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).	0.02960896492	3
Coq.QArith.Qcanon.Qcgt_alt	40	0.1.258.65	synth with cache (only 1: unfold Z.lcm; only 1: intros l1 l2; only 1: symmetry; only 1: apply Z.gt_lt_iff).	1.58300900459	1963
Coq.QArith.Qcanon.Qcle_alt	40	450.448.0	synth with cache (only 1: intros; only 1: repeat red; only 1: auto with qarith).	0.0394268035889	47
Coq.QArith.Qcanon.Qcge_alt	40	129.64.385.256	synth with cache (only 1: intro eq_dep_eq; only 1: unfold Qeq, Qmult, Qplus; only 1: fix sqrtrem_spec 1; only 1: now rewrite ?Hx).	1.22046399117	1000
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	2	synth with cache (only 1: now Z.nzsimpl).	0.0623519420624	3
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	76.3.576	synth with cache (only 1: intros (m, H); only 1: qc; only 1: ring).	30.9649629593	37193
Coq.QArith.Qcanon.Qcplus_0_r	40	78.0.577	synth with cache (only 1: intros (m, H); only 1: qc; only 1: ring).	33.8723099232	36847
Coq.QArith.Qcanon.Qcplus_comm	40	1.0.0.0.1.512.0.1	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qinv; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.673225164413	699
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	0.319962978363	195
Coq.QArith.Qcanon.Qcmult_assoc	40	6.1.0.3.0.320	synth with cache (only 1: symmetry; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	37.8685438633	39699
Coq.QArith.Qcanon.Qcmult_0_l	40	193.1.7	synth with cache (only 1: induction n; only 1: qc; only 1: now constructor).	2.16774606705	2628
Coq.QArith.Qcanon.Qcmult_0_r	40	1.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	1.2696018219	2764
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.0.0.3.0.128.66	synth with cache (only 1: intro p; only 1: intros LE; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	2.64273905754	6839
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	0.0.0.512	synth with cache (only 1: intros (Hc1, Hc2) || intros Hc; only 1: intros; only 1: qc; only 1: ring).	2.66308808327	856
Coq.QArith.Qcanon.Qcmult_integral	40	2.256	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.460559129715	271
Coq.QArith.Qcanon.Qcmult_integral_l	40	514.577.512	synth with cache (only 1: intro; only 1: fix gcd_divide 1; only 1: auto with qarith).	6.7300889492	1828
Coq.QArith.Qcanon.Qcmult_inv_r	40	64.322.0	synth with cache (only 1: unfold Q2Qc; only 1: fix gcd_divide 1; only 1: auto with arith).	0.343993902206	327
Coq.QArith.Qcanon.Qcmult_inv_l	40	64.322.1	synth with cache (only 1: unfold Q2Qc; only 1: fix gcd_divide 1; only 1: auto with arith).	0.764529943466	893
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40
Coq.QArith.Qcanon.Qcle_antisym	40	129	synth with cache (only 1: intuition).	0.0450210571289	19
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	193	synth with cache (only 1: congruence).	0.213021993637	145
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.1.448.0	synth with cache (only 1: intros x y z; only 1: intros m Hm; only 1: apply Qle_lt_trans with y; only 1: auto with qarith; only 1: assumption).	0.847213983536	897
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	129.0.1.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: intuition).	0.6418800354	522
Coq.QArith.Qcanon.Qcnot_lt_le	40	65.64	synth with cache (only 1: intuition; only 1: Z.order).	0.371002912521	245
Coq.QArith.Qcanon.Qcnot_le_lt	40	65.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: Z.order).	1.08427000046	156
Coq.QArith.Qcanon.Qclt_not_le	40	0.1.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.lt_nge).	0.0509369373322	46
Coq.QArith.Qcanon.Qcle_not_lt	40	130.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: auto with qarith).	0.129204034805	49
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40	0.0.66.64	synth with cache (only 1: intro p; only 1: fix le_div2 1; only 1: intros m H1; only 1: auto with arith).	2.00691080093	2598
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	65.385.513.65.64.512	synth with cache (only 1: intros (H1, H2); only 1: red; only 1: intro; only 1: fix le_div2 1; only 1: intros Hb; only 1: auto with arith).	12.2793850899	9137
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	65.897.0.512.129.385.0	synth with cache (only 1: unfold Qcmult, Qcle; only 1: intros N; only 1: intro H; only 1: fix even_spec 1; only 1: unfold Qclt, Qcplus, Qcopp; only 1: destruct H as [p H]; only 1: assumption).	17.163629055	14530
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	2.512.130.0	synth with cache (only 1: unfold Qcmult, Qcle, Qclt; only 1: intros a b Ha; only 1: fix even_spec 1; only 1: auto with *).	3.67680191994	3906
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	451.64.450.0	synth with cache (only 1: intros; only 1: destruct n; only 1: now simpl; only 1: eauto with *).	15.0843291283	1788
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.131	synth with cache (only 1: repeat split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	5.06578612328	2840
Coq.QArith.Qcanon.Qcft	40	0.0.0.1.0.448.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: constructor; only 1: constructor; only 1: exact Qcplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: reflexivity; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r; only 1: unfold Q2Qc; only 1: intros H; only 1: discriminate H; only 1: intros; only 1: now subst; only 1: intros; only 1: rewrite Qcmult_comm; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	14.5438120365	14606
Coq.QArith.Qcanon.test_field	40	0.0.1.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	15.2837090492	4937
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	64.1	synth with cache (only 1: symmetry; only 1: tauto).	0.0390269756317	5
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	129.768.1	synth with cache (only 1: symmetry; only 1: hnf; only 1: now f_equal).	0.143450021744	33
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	0.2	synth with cache (only 1: red; only 1: now Z.nzsimpl).	0.106990098953	4
Coq.QArith.QArith_base.Qeq_sym	40	0.65.0	synth with cache (only 1: symmetry; only 1: destruct H; only 1: apply Z.eq_refl).	0.0343010425568	7
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	321.0.320.65.256.0.256.128.71	synth with cache (only 1: split; only 1: congruence; only 1: intros (a', H); only 1: unfold Qeq; only 1: now Z.nzsimpl'; only 1: intros H H1 H2; only 1: elim H1; only 1: intros; only 1: eauto with *).	2.66884279251	2791
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.0198838710785	1
Coq.QArith.QArith_base.Qeq_bool_neq	40	706.0.130.68	synth with cache (only 1: destruct x; only 1: fix odd_spec 1; only 1: intros H l; only 1: intuition Pos.Private_Tac.order).	4.32796216011	7475
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.582.129	synth with cache (only 1: generalize 1%Z; only 1: intros (m, H); only 1: apply Zle_is_le_bool).	6.10661506653	10821
Coq.QArith.QArith_base.Qnot_eq_sym	40	192.5	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	1.03289699554	928
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.73.385	synth with cache (only 1: intros n; only 1: induction n; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	6.73335599899	10033
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	256.0.12	synth with cache (only 1: Z.bitwise; only 1: simpl; only 1: now Z.nzsimpl).	25.1378071308	55295
Coq.QArith.QArith_base.Qplus_comp	40	194.384.128.256.198	synth with cache (only 1: intros a b Hb; only 1: intro LE; only 1: intro H0; only 1: fix le_div2 1; only 1: now destruct a).	7.43883299828	7789
Coq.QArith.QArith_base.Qopp_comp	40	0.768.324.129.1	synth with cache (only 1: repeat red; only 1: intros H; only 1: intros H'; only 1: fix gcd_divide 1; only 1: now Z.nzsimpl').	10.085819006	8002
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40	64.0.513.0.384.129.1	synth with cache (only 1: unfold Qeq, Qplus; only 1: intros a m; only 1: intros l l'; only 1: simpl; only 1: fix odd_spec 1; only 1: intros XY YZ; only 1: intuition).	19.0480260849	9520
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40	833.705.128.512	synth with cache (only 1: intros (q, Hq); only 1: intros Hn; only 1: fix gcd_divide 1; only 1: now Nat.nzsimpl').	1.88361620903	867
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40	0.640.834.258	synth with cache (only 1: intros (a', H); only 1: contradict H; only 1: fix odd_spec 1; only 1: contradiction).	3.63057899475	2878
Coq.QArith.QArith_base.Q_apart_0_1	40	64	synth with cache (only 1: now N.nzsimpl).	0.0721559524536	5
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40
Coq.QArith.QArith_base.Qplus_0_r	40	2.0.449.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: N.nzsimpl; only 1: simpl; only 1: now rewrite Pos.mul_1_r).	0.752632141113	310
Coq.QArith.QArith_base.Qplus_comm	40	0.0.0.0.1.0.3.320.258	synth with cache (only 1: intuition; only 1: induction x; only 1: generalize 1%Z; only 1: red; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: f_equiv).	10.2172391415	5159
Coq.QArith.QArith_base.Qopp_involutive	40	6.4.323.0	synth with cache (only 1: destr_bool; only 1: red; only 1: simpl; only 1: ring).	14.0896420479	33866
Coq.QArith.QArith_base.Qplus_opp_r	40	0.1.577.0.64.834	synth with cache (only 1: intro p; only 1: revert p; only 1: unfold Qeq; only 1: firstorder; only 1: simpl; only 1: ring).	8.30074501038	3697
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: congruence).	0.0297610759735	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.64.0.1	synth with cache (only 1: red; only 1: simpl; only 1: symmetry; only 1: now Z.nzsimpl).	0.121845960617	70
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.0	synth with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.072126865387	57
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.087327003479	22
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	320.0.704.192.129	synth with cache (only 1: compute; only 1: intros a n; only 1: fix gcd_divide 1; only 1: intros; only 1: now subst).	7.65374112129	762
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0990190505981	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).	0.0227298736572	4
Coq.QArith.QArith_base.inject_Z_opp	40	0	synth with cache (only 1: now destruct x).	0.0211048126221	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.64.0.1	synth with cache (only 1: red; only 1: simpl; only 1: intros l1 l2; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.376514911652	362
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	262	synth with cache (only 1: intuition).	0.109536886215	248
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	12	synth with cache (only 1: apply Z.lt_irrefl).	2.16679382324	3926
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	463.384	synth with cache (only 1: intros HH; only 1: congruence).	18.4673779011	64505
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40	0.384.707	synth with cache (only 1: intros Hn Hm; only 1: fix gcd_divide 1; only 1: firstorder).	9.32995009422	12468
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	706.2	synth with cache (only 1: firstorder; only 1: Z.order || apply Z.lt_0_1).	1.03639793396	715
Coq.QArith.QArith_base.Qnot_le_lt	40	131	synth with cache (only 1: Z.Private_Tac.order).	0.0762150287628	12
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.017902135849	2
Coq.QArith.QArith_base.Qle_not_lt	40	384.0.6	synth with cache (only 1: intro; only 1: apply Z.nlt_ge; only 1: auto with arith).	1.96829891205	426
Coq.QArith.QArith_base.Qle_lt_or_eq	40	1.322.198.128	synth with cache (only 1: intros a n; only 1: generalize 1%Z; only 1: intros Hm; only 1: apply Z.lt_eq_cases).	6.39245700836	11152
Coq.QArith.QArith_base.Q_dec	40	129.194.192	synth with cache (only 1: intros Hab; only 1: fix le_div2 1; only 1: intuition).	1.05424189568	421
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40	193.324.0.449.0	synth with cache (only 1: unfold Qlt, Qle; only 1: intro; only 1: simpl; only 1: fix le_div2 1; only 1: easy).	4.59123277664	8688
Coq.QArith.QArith_base.Qle_minus_iff	40	129.2.832	synth with cache (only 1: intros (U, V); only 1: fix even_spec 1; only 1: destr_bool).	1.48243093491	1035
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40	576.448.449.128.512.128.0.64	synth with cache (only 1: intros a n Ha; only 1: intro E; only 1: induction a; only 1: case N.pos_div_eucl; only 1: auto with sets; only 1: left; only 1: fix gcd_divide 1; only 1: now destruct 1 || trivial).	1.95944404602	1122
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	6.83371710777	9515
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	512.256.0.0.68.64	synth with cache (only 1: intro n; only 1: intros q; only 1: unfold Qle, Qlt; only 1: simpl; only 1: Z.nzsimpl; only 1: firstorder).	23.0778009892	24605
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40	384.0.642.384.448.512.192.64.0.1	synth with cache (only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: intros; only 1: unfold Qlt, Qle; only 1: generalize H; only 1: generalize H; only 1: red; only 1: intros _; only 1: fix gcd_greatest 1; only 1: simpl in *; only 1: tauto).	34.2932548523	24637
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0287148952484	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40	67.773.3.384	synth with cache (only 1: intros x x' Hx; only 1: unfold Qle, Qlt; only 1: fix odd_spec 1; only 1: intuition).	14.5427339077	21078
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.0.0.0.129.0.576	synth with cache (only 1: reduce; only 1: simpl; only 1: apply Pos.min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	33.7180869579	3141
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40	0.450.640.391	synth with cache (only 1: intro LT; only 1: destruct q; only 1: fix gcd_divide 1; only 1: assumption).	18.987390995	24698
Coq.QArith.Qround.Qfloor_Z	40
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	4.79738116264	4808
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40	2.448.194.2	synth with cache (only 1: unfold Qlt, Qle, Qeq; only 1: intros Base Step; only 1: fix gcd_greatest 1; only 1: auto with zarith).	7.32244610786	2983
Coq.QArith.Qabs.Qabs_pos	40	4.66.704.1	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: now split; only 1: intuition; only 1: easy).	5.50863599777	9926
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.520790815353	383
Coq.QArith.Qabs.Qabs_nonneg	40	2.0.0.196.321	synth with cache (only 1: intros (a, H); only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').	9.63464808464	7226
Coq.QArith.Qabs.Zabs_Qabs	40	259	synth with cache (only 1: now Z.swap_greater).	0.0407409667969	38
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	1.3.2.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).	12.6486911774	7434
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	1	synth with cache (only 1: reflexivity).	0.0159959793091	2
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.0193798542023	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0149438381195	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	0.4.5.130.4.3.128	synth with cache (only 1: intros H; only 1: split; only 1: intros; only 1: inversion 1; only 1: auto; only 1: intros h1 h2; only 1: auto).	8.16784286499	14322
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3	synth with cache (only 1: apply H).	0.0174701213837	4
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0230050086975	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0280148983002	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0195689201355	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0	synth with cache (only 1: simpl_crelation).	0.0297238826752	1
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	1	synth with cache (only 1: firstorder).	0.0223441123962	2
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	7.1	synth with cache (only 1: intro; only 1: firstorder).	1.02030491829	1025
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0299730300903	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0185599327087	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0274920463562	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0212988853455	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	11	synth with cache (only 1: firstorder).	0.165004968643	201
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.296792030334	52
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.960910081863	647
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	9.51527500153	7469
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.716984987259	279
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	1	synth with cache (only 1: firstorder).	0.0433888435364	11
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	8	synth with cache (only 1: firstorder).	0.192862987518	99
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.65	synth with cache (only 1: intros x y H'; only 1: simpl_crelation).	0.0593180656433	13
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.67	synth with cache (only 1: hnf; only 1: auto).	0.0569489002228	22
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0306050777435	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	synth with cache (only 1: reduce; only 1: auto).	0.0276091098785	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0180819034576	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	2	synth with cache (only 1: simpl_crelation).	0.0519371032715	17
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0248498916626	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0216791629791	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.0.0.0.0	synth with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).	0.0756869316101	8
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	4	synth with cache (only 1: firstorder).	0.0701429843903	38
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0222089290619	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.2	synth with cache (only 1: intros; only 1: simpl_crelation).	0.0522940158844	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0565121173859	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.0.0.0.0.1.3.0.0.69	synth with cache (only 1: intro z; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: apply Hf; only 1: auto; only 1: auto; only 1: apply Hf; only 1: auto; only 1: auto).	6.92158794403	3497
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.075777053833	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	64.3.64.0.0.0.0.0.0.0.0.0.0.0.0.0.5.192.65	synth with cache (only 1: intros x; only 1: intros A P; only 1: firstorder; only 1: transitivity y; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: hnf; only 1: auto; only 1: tauto).	5.59877896309	8900
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	0.1.64.67.132.65	synth with cache (only 1: intros n m; only 1: intros [HypL HypR]; only 1: compute; only 1: intro H1; only 1: destruct 1; only 1: eauto).	12.01040411	9798
Coq.Classes.CEquivalence.pointwise_reflexive	40	2	synth with cache (only 1: simpl_crelation).	0.0181970596313	3
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0116581916809	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0163531303406	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.39479804039	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: reflexivity).	0.0104820728302	3
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0118370056152	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0145552158356	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	4.1	synth with cache (only 1: hnf; only 1: auto).	0.0745289325714	121
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0231430530548	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0241470336914	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0330238342285	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0407469272614	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0133321285248	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0123310089111	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	3.3.0.131	synth with cache (only 1: intro p; only 1: split; only 1: auto; only 1: auto).	0.122328996658	377
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.012934923172	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.0146930217743	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2	synth with cache (only 1: firstorder).	0.014240026474	3
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0198919773102	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	2.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0526461601257	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.0.0.128.0.65	synth with cache (only 1: intros n m; only 1: revert m; only 1: intros h1 h2; only 1: simpl_relation; only 1: transitivity y; only 1: auto; only 1: auto).	0.162531852722	123
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	0.256.64.129.65.0.129.132	synth with cache (only 1: intros A P H; only 1: intro; only 1: unfold respectful; only 1: destruct H; only 1: intros x; only 1: intros [? ?]; only 1: intros H x0; only 1: eauto).	16.0876908302	19833
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.0368120670319	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0363960266113	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0147259235382	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.389536857605	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	synth with cache (only 1: auto).	0.0105581283569	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.0131039619446	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0209319591522	6
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	4.1	synth with cache (only 1: hnf; only 1: auto).	0.145360946655	195
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0255489349365	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0284359455109	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0393669605255	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0393159389496	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0132610797882	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0141031742096	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0230150222778	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.107046127319	30
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	3	synth with cache (only 1: firstorder).	0.016743183136	4
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0200181007385	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.0875689983368	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0209181308746	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	2	synth with cache (only 1: reflexivity).	0.009202003479	3
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0104379653931	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00822710990906	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	1.0.4.0.65.5	synth with cache (only 1: split; only 1: intros Hfst Hsnd; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: firstorder).	0.706833124161	1212
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.2	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0150940418243	4
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0124530792236	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	2.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.014575958252	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0160629749298	2
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.0.0.65	synth with cache (only 1: intros x' x'' Hx' Hx''; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0792038440704	12
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.0	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.018100976944	2
Coq.Classes.Morphisms.Relations.forall_subrelation	40	2	synth with cache (only 1: firstorder).	0.0189039707184	12
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0138399600983	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00947499275208	1
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	7	synth with cache (only 1: firstorder).	0.0452599525452	74
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	0.374841928482	432
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	1.70681095123	3919
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.64.0	synth with cache (only 1: hnf; only 1: intro; only 1: firstorder).	0.0221629142761	6
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	6	synth with cache (only 1: firstorder).	0.0346360206604	52
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3	synth with cache (only 1: simpl_relation).	0.0267119407654	7
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	synth with cache (only 1: simpl_relation).	0.0658431053162	99
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	2	synth with cache (only 1: firstorder).	0.0484290122986	18
Coq.Classes.Morphisms.GenericInstances.flip1	40	1.64.0	synth with cache (only 1: reduce; only 1: apply H; only 1: intuition).	0.0282590389252	16
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0117869377136	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0194928646088	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0105020999908	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: simpl_relation).	0.0142319202423	1
Coq.Classes.Morphisms.proper_proper	40	1.0.0.0.0.1.0	synth with cache (only 1: reduce; only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: split; only 1: firstorder; only 1: firstorder).	0.248533010483	152
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	7	synth with cache (only 1: firstorder).	0.160773038864	119
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	synth with cache (only 1: firstorder).	0.0136511325836	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	synth with cache (only 1: simpl_relation).	0.0205211639404	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	2.65.3	synth with cache (only 1: intros x x' Hxx'; only 1: unfold respectful; only 1: simpl_relation).	0.693512201309	421
Coq.Classes.Morphisms.proper_sym_impl_iff	40	3.2.64.4.72.1	synth with cache (only 1: intros; only 1: intro p; only 1: firstorder; only 1: rewrite <- H; only 1: simpl_relation; only 1: auto).	12.6626598835	19166
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	0.0.0.0.0.0.128.0.0.67	synth with cache (only 1: intro H1; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx' y y' Hyy'; only 1: constructor; only 1: apply Hf; only 1: auto; only 1: auto; only 1: apply Hf; only 1: auto; only 1: auto).	1.324436903	895
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.194	synth with cache (only 1: intros LT; only 1: firstorder).	0.0263810157776	16
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0100979804993	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0284678936005	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.00840282440186	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	1	synth with cache (only 1: firstorder).	0.00880694389343	2
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0184872150421	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.244119882584	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0121939182281	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.128	synth with cache (only 1: CRelationClasses.reduce_goal; only 1: firstorder).	0.0192458629608	10
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.00926995277405	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.00943493843079	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.130	synth with cache (only 1: intros a b; only 1: firstorder).	0.0177500247955	12
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.00918579101562	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.00934195518494	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	0.65.65.196	synth with cache (only 1: intros a b n Ha Hb; only 1: intro LE; only 1: compute in H; only 1: eauto).	0.641669988632	1230
Coq.Classes.DecidableClass.Decidable_sound	40	76.65.3	synth with cache (only 1: intro H; only 1: intro; only 1: apply H0).	0.668421983719	2415
Coq.Classes.DecidableClass.Decidable_complete	40	1.66.79	synth with cache (only 1: intro p; only 1: intros (x, (Hx, Huni)); only 1: assumption).	0.954558134079	3839
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	15	synth with cache (only 1: apply Nat.eqb_eq).	2.4986269474	7102
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	4	synth with cache (only 1: apply Nat.leb_le).	0.0762741565704	148
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	264.462	synth with cache (only 1: destruct x; only 1: easy || now destruct y).	16.5953159332	20062
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	1	synth with cache (only 1: apply _).	0.0205631256104	2
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.018296957016	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0175940990448	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	256.192.0.65	synth with cache (only 1: intros n m p Hp; only 1: intros H H1 H2; only 1: rewrite H1; only 1: auto with relations).	0.080687046051	39
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	67.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: firstorder  discriminate).	2.15917801857	1716
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.48407793045	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	449.193	synth with cache (only 1: intros H E; only 1: now trivial).	0.0994920730591	193
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0104479789734	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	synth with cache (only 1: firstorder).	0.00836515426636	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	synth with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0195651054382	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.00903701782227	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	192.0	synth with cache (only 1: unfold to_nat; only 1: do 2 constructor).	0.0461428165436	11
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.1.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: f_equal; only 1: auto).	0.778507947922	723
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	3.451.0.65.77	synth with cache (only 1: Nat.bitwise; only 1: Nat.induct n; only 1: f_equal; only 1: fix gcd_greatest 1; only 1: auto).	34.7782239914	34781
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0285730361938	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40	2.448	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	0.098405122757	155
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	128.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: auto with relations).	1.33533406258	2006
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0299379825592	4
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	323.2.384.257.192.1	synth with cache (only 1: intros n m; only 1: Morphisms.f_equiv; only 1: intros r H; only 1: fix even_spec 1; only 1: intros Hy; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	2.12668991089	4879
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	4.0.0.1	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	5.8275270462	1569
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	synth with cache (only 1: decide equality).	0.0215699672699	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	131	synth with cache (only 1: tauto).	0.0124108791351	12
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0146150588989	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0168080329895	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.0.0.0.1.325	synth with cache (only 1: unfold Decidable.decidable, not; only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.857117891312	714
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0344560146332	1
Coq.PArith.BinPos.Pos.pred_succ	40	65.0.1.1.0.0.64.0.0.0.1.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now split; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equiv).	1.41689181328	1884
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40	1.456	synth with cache (only 1: fix le_div2 1; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	2.28106188774	4854
Coq.PArith.BinPos.Pos.pred_N_succ	40	64.0.0.448.0.1.0.64.258.0.194.385.0.0.3.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: induction p; only 1: simpl; only 1: assert (Proper (Logic.eq ==> Logic.eq ==> Logic.eq) PeanoNat.Nat.compare); only 1: simpl in *; only 1: solve_proper; only 1: simpl_relation; only 1: now try PeanoNat.Nat.order'; only 1: simpl; only 1: trivial; only 1: now f_equal; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: simpl; only 1: now f_equal; only 1: intuition PeanoNat.Nat.order).	12.3974330425	21797
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0149390697479	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0175220966339	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40	0.325.448.1.71	synth with cache (only 1: red; only 1: revert q; only 1: intro LE; only 1: fix odd_spec 1; only 1: now f_equal).	36.0331389904	46178
Coq.PArith.BinPos.Pos.add_carry_add	40	65.64.2	synth with cache (only 1: revert q; only 1: fix le_div2 1; only 1: intuition).	0.257370948792	271
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40	66.384.0	synth with cache (only 1: revert p q; only 1: fix even_spec 1; only 1: easy).	0.205099105835	216
Coq.PArith.BinPos.Pos.add_cancel_r	40	258.0.1.2.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: congruence).	4.27547287941	2017
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	synth with cache (only 1: simpl; only 1: f_equal).	0.0207748413086	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	synth with cache (only 1: auto).	0.0156788825989	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: trivial).	0.0560429096222	1
Coq.PArith.BinPos.Pos.mul_1_r	40	0.0.0.2.0.1.0.14	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).	38.2645318508	71399
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.64.0.0	synth with cache (only 1: split; only 1: revert q r; only 1: intros UIP_refl y; only 1: apply mul_reg_r; only 1: congruence).	0.379443883896	233
Coq.PArith.BinPos.Pos.mul_cancel_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	64.320.0.1.64.0.0.1.0.0.0.257.0.0	synth with cache (only 1: destruct p; only 1: intros; only 1: rewrite <- H; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: intro H; only 1: intuition; only 1: destr_eq H; only 1: discriminate; only 1: now rewrite ?Ha; only 1: split).	1.22983717918	2765
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0352830886841	1
Coq.PArith.BinPos.Pos.square_xO	40	1.5.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.529164791107	798
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40	64.323.195.196	synth with cache (only 1: intros a b c Ha Hb; only 1: intro H1; only 1: fix odd_spec 1; only 1: easy).	19.5531058311	60891
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0396358966827	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	448.0.0.0.0.69.1.0.0	synth with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: symmetry in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: reflexivity || destruct H).	7.11258101463	18488
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	65.4.3	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: apply PeanoNat.Nat.odd_spec).	5.81727480888	7369
Coq.PArith.BinPos.Pos.ltb_lt	40	65.1.0	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.0249500274658	7
Coq.PArith.BinPos.Pos.leb_le	40	256.64.321.1.1	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros EQ; only 1: rewrite PeanoNat.Nat.even_spec; only 1: firstorder).	1.81939697266	1281
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40	1.322.513.3	synth with cache (only 1: revert q c; only 1: intros n EQ; only 1: fix even_spec 1; only 1: auto).	4.92795395851	10834
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	1.0.0.0.1.1	synth with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	1.07682514191	1155
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	1.62703418732	2535
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0604069232941	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.174144983292	101
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.158495187759	101
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.179226875305	162
Coq.PArith.BinPos.Pos.compare_xO_xO	40	65	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0275111198425	6
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0141921043396	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.3.5.384.0.3.1	synth with cache (only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: Bool.destr_bool; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	15.7132129669	34283
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	578.193.128.7	synth with cache (only 1: induction p; only 1: now PeanoNat.Nat.nzsimpl; only 1: now PeanoNat.Nat.nzsimpl'; only 1: firstorder).	0.539969921112	1386
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	1.0.0.192.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: constructor; only 1: auto; only 1: auto; only 1: now split).	0.263748884201	248
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.1	synth with cache (only 1: unfold le; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0277650356293	4
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.1	synth with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	2.83144307137	4704
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0248730182648	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0157330036163	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	1.1.2	synth with cache (only 1: unfold ge; only 1: unfold le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.380973100662	258
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0268158912659	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0150291919708	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	2.66.323.3	synth with cache (only 1: induction p using peano_rect; only 1: intro LT; only 1: easy'; only 1: now destruct p).	1.82848501205	5972
Coq.PArith.BinPos.Pos.nlt_1_r	40	5	synth with cache (only 1: now destruct p).	0.248803138733	392
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.0462300777435	62
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0207178592682	2
Coq.PArith.BinPos.Pos.lt_nle	40	0.4	synth with cache (only 1: unfold ltb, lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.706208944321	703
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.3	synth with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).	1.0556640625	1602
Coq.PArith.BinPos.Pos.lt_lt_succ	40	449.513.68	synth with cache (only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: intro A; only 1: congruence).	1.443805933	2990
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40	64.128.8	synth with cache (only 1: intros H; only 1: fix even_spec 1; only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym).	2.81777906418	9303
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	4	synth with cache (only 1: solve_proper).	0.353736877441	286
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0256509780884	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.449	synth with cache (only 1: intros a H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	0.368842840195	455
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	1.0.64.5.0	synth with cache (only 1: split; only 1: unfold gt, le, compare; only 1: intros m; only 1: now rewrite compare_refl; only 1: exact PeanoNat.Nat.le_trans).	0.440816164017	995
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.1	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0907640457153	63
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.2.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0649180412292	95
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.633378982544	803
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.64.64.0	synth with cache (only 1: unfold le; only 1: rewrite (PeanoNat.Nat.mul_comm p); only 1: rewrite (PeanoNat.Nat.mul_comm p); only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.509865999222	453
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	256.128.449.322.128	synth with cache (only 1: repeat red; only 1: cut (succ p = succ p); only 1: fix le_div2 1; only 1: eauto; only 1: auto with typeclass_instances).	0.63795208931	494
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.020651102066	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.1.0.384.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	0.413923978806	597
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0157611370087	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0345520973206	5
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	129.264.4	synth with cache (only 1: unfold lt; only 1: fix even_spec 1; only 1: now f_equiv).	15.4448878765	28331
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40	128.386.256	synth with cache (only 1: intro H2; only 1: fix gcd_divide 1; only 1: tauto).	0.87968993187	838
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40	64.449.8	synth with cache (only 1: revert m; only 1: fix gcd_divide 1; only 1: now destruct compare || now destruct p).	2.30696797371	4366
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0289261341095	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0281100273132	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.276566028595	322
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	389	synth with cache (only 1: now induction n).	0.0977098941803	150
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0446650981903	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0166578292847	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0456910133362	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.42337012291	248
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.411051034927	221
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.0.0.64.2	synth with cache (only 1: apply max_monotone; only 1: intros [q| q| ] r H; only 1: now apply mul_le_mono_l; only 1: now apply mul_le_mono_l; only 1: now apply mul_le_mono_l).	0.560515165329	380
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.4	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	1.04786610603	1142
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0304100513458	5
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.128.1.0.515.66.0	synth with cache (only 1: induction p; only 1: intro; only 1: pose proof H as H'; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intuition; only 1: firstorder).	8.53842401505	19221
Coq.PArith.BinPos.Pos.of_nat_succ	40	128.0.128.512.0.257.0.0.0.384	synth with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: PeanoNat.Nat.induct n; only 1: intros; only 1: now intuition; only 1: intros H H1 H2; only 1: f_equal; only 1: Private_Tac.order).	0.889561891556	896
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	257.389	synth with cache (only 1: fix odd_spec 1; only 1: easy).	1.13691496849	2034
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	129.72.67	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: now subst).	18.9344408512	38633
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	2	synth with cache (only 1: reflexivity).	0.0157527923584	3
Coq.PArith.BinPos.Pminus_mask_Gt	40	1.265.1.385.67	synth with cache (only 1: intro; only 1: destruct H; only 1: revert q; only 1: fix le_div2 1; only 1: auto).	4.11045098305	14169
Coq.PArith.BinPos.Pplus_minus	40	64.1.133	synth with cache (only 1: fix even_spec 1; only 1: intros x y H; only 1: intuition).	11.5697660446	22162
Coq.PArith.BinPos.Dcompare	40	0.4.0.64.25	synth with cache (only 1: intro H; only 1: destruct H; only 1: now intuition; only 1: tauto; only 1: now intuition).	7.8663418293	37430
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: now subst).	0.255611181259	146
Coq.Arith.Le.le_elim_rel	40	449.513.65.706.320	synth with cache (only 1: intros n EQ; only 1: intros a0; only 1: intros H; only 1: fix gcd_divide 1; only 1: RelationClasses.simpl_relation).	3.32940816879	5103
Coq.Arith.Even.even_equiv	40	384.0	synth with cache (only 1: fix even_spec 1; only 1: now symmetry).	0.0649361610413	115
Coq.Arith.Even.odd_equiv	40	64.0.64.2	synth with cache (only 1: fix odd_spec 1; only 1: symmetry; only 1: rewrite odd_spec; only 1: auto with *).	0.239766120911	470
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0305290222168	5
Coq.Arith.Even.not_even_and_odd	40	4.0.2.258.0	synth with cache (only 1: induction n; only 1: now try split; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).	1.55769085884	4019
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.13533115387	1
Coq.Arith.Even.even_even_plus	40	0.0.192.192.256.0.1.1.389	synth with cache (only 1: induction 1; only 1: intro H; only 1: Nat.nzsimpl; only 1: auto with arith; only 1: Nat.nzsimpl'; only 1: elim H; only 1: fix even_spec 1; only 1: simpl; only 1: auto).	2.96232891083	5967
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0715701580048	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.0701580047607	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0694971084595	1
Coq.Arith.Even.even_plus_aux	40	0.0.4	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	1.02205705643	430
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.195512056351	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0694811344147	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0714609622955	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0749130249023	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0712327957153	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0699079036713	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.110481977463	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.069433927536	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.162998914719	1
Coq.Arith.Even.even_mult_l	40	1.450	synth with cache (only 1: compute; only 1: parity_binop).	0.946705102921	1702
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0482399463654	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0707659721375	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.069384098053	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0706939697266	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.053652048111	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0495591163635	1
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.018100976944	1
Coq.Arith.Minus.minus_Sn_m	40	66.64.128	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: easy).	1.37606692314	257
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.0407259464264	1
Coq.Arith.Minus.minus_diag_reverse	40	386.193.192.391.9	synth with cache (only 1: induction n; only 1: reflexivity || destruct H; only 1: induction n; only 1: Nat.auto'; only 1: apply IHn).	1.48757696152	7226
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	65.0.0.0	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: intuition).	0.281479120255	35
Coq.Arith.Minus.plus_minus	40	128.513.640.65.0.64.195	synth with cache (only 1: Nat.cases m; only 1: Nat.nzsimpl; only 1: now Nat.nzsimpl; only 1: induction n; only 1: now try split; only 1: fix odd_spec 1; only 1: now simpl).	26.4607560635	3295
Coq.Arith.Minus.minus_plus	40	384.0.0.385.130.257.65.10.384	synth with cache (only 1: Nat.cases ltac:(n); only 1: apply Nat.sub_0_r; only 1: symmetry; only 1: induction n as [| n IH]; only 1: destruct m; only 1: Morphisms.solve_proper; only 1: simpl; only 1: auto; only 1: Nat.auto').	18.1250970364	20264
Coq.Arith.Minus.le_plus_minus_r	40	0.0.1.0.2.0.0.0.0.0.1.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	18.8287849426	30651
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	517.65	synth with cache (only 1: intros n IH; only 1: RelationClasses.simpl_relation).	0.326478004456	1151
Coq.Arith.Between.Between.between_le	40	256.0.5	synth with cache (only 1: induction 1; only 1: auto with arith; only 1: firstorder).	1.21012401581	2699
Coq.Arith.Between.Between.between_Sk_l	40	321.1.386.257.65	synth with cache (only 1: intros p IH; only 1: intro H; only 1: fix odd_spec 1; only 1: intros; only 1: firstorder).	1.61396312714	4299
Coq.Arith.Between.Between.between_restr	40	0.640.1.5.513	synth with cache (only 1: intros H H'; only 1: intros a Ha; only 1: intros Hab; only 1: fix gcd_greatest 1; only 1: auto with arith).	22.1283948421	66547
Coq.Arith.Between.Between.exists_le_S	40
Coq.Arith.Between.Between.exists_S_le	40	640.7.67	synth with cache (only 1: intro H; only 1: fix le_div2 1; only 1: easy || now destruct 1).	12.3442327976	32227
Coq.Arith.Between.Between.in_int_intro	40	256.66	synth with cache (only 1: intro H; only 1: CRelationClasses.simpl_crelation).	0.017040014267	12
Coq.Arith.Between.Between.in_int_lt	40	384.640.3	synth with cache (only 1: intros L R n; only 1: intros (k, Hk); only 1: now try PeanoNat.Nat.order').	0.461755037308	406
Coq.Arith.Between.Between.in_int_p_Sq	40	0.65.67	synth with cache (only 1: fix le_div2 1; only 1: intros a b; only 1: intuition).	2.0709400177	2379
Coq.Arith.Between.Between.in_int_S	40	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0126581192017	2
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0	synth with cache (only 1: intros * []; only 1: auto with arith).	0.0123958587646	2
Coq.Arith.Between.Between.between_in_int	40	0.582	synth with cache (only 1: fix odd_spec 1; only 1: auto).	1.86316084862	6238
Coq.Arith.Between.Between.in_int_between	40	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.325903177261	698
Coq.Arith.Between.Between.exists_in_int	40	256.198	synth with cache (only 1: fix even_spec 1; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r).	0.615891933441	1677
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	258.130.269.1	synth with cache (only 1: inversion 1; only 1: firstorder; only 1: inversion H; only 1: Tactics.program_simpl).	2.26159310341	16352
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40	641.1.0.0.576.0.576.0.5.454	synth with cache (only 1: Nat.double_induct n m; only 1: destruct m; only 1: (right; Nat.order) || (left; Nat.order); only 1: RelationClasses.reduce; only 1: now right; only 1: compute; only 1: intro n; only 1: now right; only 1: intros n m H; only 1: firstorder).	21.4565119743	32039
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	192.0.0.0.0.65.321.2	synth with cache (only 1: destruct n; only 1: auto with sets; only 1: revert m; only 1: destruct m; only 1: intro; only 1: now right; only 1: intro H; only 1: now Nat.nzsimpl').	1.22774481773	2535
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40	512.323.0.128.0.0.0.1.0.0.1.5	synth with cache (only 1: revert m; only 1: induction n; only 1: intro m; only 1: Nat.nzsimpl; only 1: right; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: Nat.auto'; only 1: simpl; only 1: Nat.nzsimpl'; only 1: firstorder).	4.11318087578	11961
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40	577.66.449.0.129.448.0.256.0.513.450.129	synth with cache (only 1: induction n; only 1: fix odd_spec 1; only 1: induction 1 as [? ?| ]; only 1: intros H; only 1: auto with typeclass_instances; only 1: intros Hb; only 1: auto using Nat.Private_OrderTac.Tac.eq_sym; only 1: intros Hab; only 1: intros H; only 1: destruct H; only 1: now Nat.nzsimpl; only 1: firstorder).	3.90739679337	7400
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	256.384.69.64	synth with cache (only 1: intros n H; only 1: intros a0 a; only 1: fix odd_spec 1; only 1: CRelationClasses.simpl_crelation).	2.27092289925	6256
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40	0.641.0.0.0.3	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: fix le_div2 1; only 1: easy).	3.3085129261	5583
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40	1.323.0	synth with cache (only 1: rewrite odd_equiv; only 1: fix even_equiv 1; only 1: trivial).	0.224045991898	418
Coq.Arith.Div2.even_odd_div2	40	0.1.320.1.128.448.0.0.0.1.0.1.0.0.0.0.1.5	synth with cache (only 1: split; only 1: split; only 1: rewrite even_equiv; only 1: intros (p, ->); only 1: rewrite Nat.div2_succ_double; only 1: apply Nat.div2_double; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: trivial; only 1: apply odd_div2 in Od; only 1: rewrite <- Od; only 1: intro Od'; only 1: elim (n_Sn _ Od'); only 1: constructor 1; only 1: intuition; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: fix even_spec 1; only 1: trivial; only 1: trivial).	8.65425109863	11085
Coq.Arith.Div2.double_S	40	2.451.256.257.261.0.64.201	synth with cache (only 1: nzinduct n; only 1: eexists; only 1: intro n; only 1: Nat.induct n; only 1: repeat split; only 1: RelationClasses.reduce_goal; only 1: compute; only 1: auto).	20.5141558647	35549
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	131.515.0	synth with cache (only 1: intros; only 1: eexists; only 1: intuition).	1.61022400856	1043
Coq.Arith.Div2.odd_S2n	40	0.0.1	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0317039489746	28
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.10590004921	160
Coq.Arith.Div2.div2_double_plus_one	40	513.1.1.0.65	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: simpl; only 1: intros a H; only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	4.79173707962	5675
Coq.Arith.Plus.plus_assoc_reverse	40	322.449.256.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: compute; only 1: revert m; only 1: eauto).	1.11128020287	647
Coq.Arith.Plus.plus_reg_l	40	130.321	synth with cache (only 1: fix gcd_divide 1; only 1: eauto).	0.389190912247	569
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	1	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0512719154358	29
Coq.Arith.Plus.plus_le_compat_r	40	0.0.11	synth with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).	8.25592708588	12375
Coq.Arith.Plus.plus_lt_compat_l	40	2	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0190479755402	3
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40	448.449.0.73.384	synth with cache (only 1: red; only 1: Nat.induct n; only 1: apply Nat.add_le_mono; only 1: fix gcd_greatest 1; only 1: now repeat split).	32.6689119339	51158
Coq.Arith.Plus.plus_lt_le_compat	40	1	synth with cache (only 1: apply Nat.add_le_mono).	0.0168159008026	2
Coq.Arith.Plus.plus_lt_compat	40	192.386	synth with cache (only 1: fix odd_spec 1; only 1: intuition Nat.order).	0.0374279022217	40
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40	450.1.0.65.1.2.512	synth with cache (only 1: Nat.induct ltac:(n); only 1: Nat.nzsimpl; only 1: left; only 1: intro z; only 1: intro H; only 1: Nat.nzsimpl; only 1: Nat.auto').	1.44618487358	2273
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40	3.449.388	synth with cache (only 1: revert n; only 1: RelationClasses.reduce_goal; only 1: now rewrite <- Nat.le_add_r).	3.94943809509	6548
Coq.Arith.Plus.plus_is_O	40	193.0.0.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: congruence).	6.76155996323	2507
Coq.Arith.Plus.plus_is_one	40	386.0.396	synth with cache (only 1: fix gcd_divide 1; only 1: intro H; only 1: firstorder).	10.3204221725	19479
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	64	synth with cache (only 1: now Nat.order).	0.11496090889	50
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0129401683807	1
Coq.Arith.Lt.le_lt_n_Sm	40	2	synth with cache (only 1: apply Nat.lt_succ_r).	0.0457668304443	33
Coq.Arith.Lt.le_not_lt	40	129.3	synth with cache (only 1: intros LT EQ; only 1: Nat.order').	3.08023810387	1818
Coq.Arith.Lt.lt_not_le	40	129.1	synth with cache (only 1: intros LT EQ; only 1: Nat.order').	0.192427873611	8
Coq.Arith.Lt.neq_0_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').	0.0226390361786	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0303010940552	4
Coq.Arith.Lt.lt_n_S	40	0	synth with cache (only 1: apply le_n_S).	0.0135779380798	1
Coq.Arith.Lt.lt_S_n	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0390388965607	53
Coq.Arith.Lt.S_pred	40	256.0.128.1.0.1.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros n H; only 1: exfalso; only 1: inversion H; only 1: intros m H; only 1: f_equal).	0.763396978378	1518
Coq.Arith.Lt.S_pred_pos	40	0.320.135.0	synth with cache (only 1: intros; only 1: induction n; only 1: now inversion H; only 1: now f_equal).	0.722411155701	1652
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	193.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: Nat.auto').	0.0345058441162	14
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.64.0.0.640.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: induction 1; only 1: apply IHn; only 1: auto with arith; only 1: firstorder; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	11.8115971088	1397
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	11.8694119453	16021
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.392155885696	374
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0118489265442	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0124070644379	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0121049880981	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0154669284821	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.258.258.132	synth with cache (only 1: intro H; only 1: intros p IH; only 1: fix even_spec 1; only 1: auto).	4.61826586723	9084
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0455920696259	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40	386.0.321.0.0.0.8	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: simpl; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: simpl; only 1: eauto with *).	4.96514582634	6058
Coq.Arith.Compare_dec.zerop	40	5.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	0.714820861816	1450
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.403856992722	265
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.340497970581	298
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.13259100914	134
Coq.Arith.Compare_dec.le_lt_eq_dec	40	65.138	synth with cache (only 1: fix odd_spec 1; only 1: assumption).	12.1490421295	4065
Coq.Arith.Compare_dec.le_dec	40	2.0.0.1.0.0.0.2.384.0.0.1.7	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intuition Nat.order; only 1: eauto with *; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).	29.6635839939	19921
Coq.Arith.Compare_dec.lt_dec	40	3.192.2.392	synth with cache (only 1: compute; only 1: right; only 1: fix le_div2 1; only 1: trivial).	4.78868603706	6665
Coq.Arith.Compare_dec.gt_dec	40	0	synth with cache (only 1: apply le_dec).	0.0185029506683	1
Coq.Arith.Compare_dec.ge_dec	40	1.3.1	synth with cache (only 1: destruct (le_gt_dec n m); only 1: apply le_dec; only 1: apply le_dec).	0.45249414444	614
Coq.Arith.Compare_dec.dec_le	40	0.0.0.1.580.67	synth with cache (only 1: revert m; only 1: CRelationClasses.reduce; only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).	39.3812119961	21977
Coq.Arith.Compare_dec.dec_lt	40	5	synth with cache (only 1: apply Nat.le_decidable).	0.903066158295	729
Coq.Arith.Compare_dec.dec_gt	40	2	synth with cache (only 1: apply Nat.lt_decidable).	0.0210039615631	3
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0212419033051	1
Coq.Arith.Compare_dec.not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.0178711414337	1
Coq.Arith.Compare_dec.not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.0242898464203	3
Coq.Arith.Compare_dec.not_ge	40	1	synth with cache (only 1: apply Nat.nle_gt).	0.0236070156097	2
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.0231490135193	2
Coq.Arith.Compare_dec.nat_compare_lt	40	129.67.0	synth with cache (only 1: revert m; only 1: fix le_div2 1; only 1: auto with *).	7.87291812897	11633
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40	450.0.0.0.1.0.0.0.0.0.0.1.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: easy; only 1: intros; only 1: apply Peano.le_0_n; only 1: destruct m; only 1: simpl; only 1: split; only 1: inversion 1; only 1: now destruct 1; only 1: simpl; only 1: firstorder).	11.2982931137	12177
Coq.Arith.Compare_dec.nat_compare_ge	40	258.640.1	synth with cache (only 1: revert m; only 1: fix gcd_divide 1; only 1: auto with *).	0.642631053925	693
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0218839645386	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	synth with cache (only 1: apply Nat.compare_gt_iff).	0.0194821357727	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	65.4.6	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now Nat.nzsimpl).	33.1226220131	55645
Coq.Arith.Compare_dec.leb_correct	40	128.65.0.0.0.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: fix even_spec 1; only 1: now Nat.nzsimpl).	0.897820949554	896
Coq.Arith.Compare_dec.leb_complete	40	0	synth with cache (only 1: apply Nat.leb_le).	0.0196399688721	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0389339923859	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.0	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.0369250774384	2
Coq.Arith.Compare_dec.leb_compare	40	64.64.1.0.0.1.0.0.64.0.0.1.0.1.0.0.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: split; only 1: intros; only 1: easy; only 1: congruence; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: auto with arith; only 1: auto with arith).	28.0187120438	13776
Coq.Arith.EqNat.eq_nat_refl	40	513.322.13	synth with cache (only 1: induction n; only 1: reflexivity || destruct H; only 1: now intuition).	0.484821081161	1802
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0320980548859	6
Coq.Arith.EqNat.eq_nat_eq	40	2	synth with cache (only 1: apply eq_nat_is_eq).	0.539140939713	380
Coq.Arith.EqNat.eq_nat_elim	40	0.384.5.130	synth with cache (only 1: intros EQ; only 1: intros op Hop; only 1: fix gcd_divide 1; only 1: contradiction || auto).	7.92786693573	25554
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	704.129.128.66.0.194.258	synth with cache (only 1: Nat.cases n; only 1: Morphisms.solve_proper; only 1: intros; only 1: Nat.induct ltac:(n); only 1: easy; only 1: intros q; only 1: now intuition).	0.589833021164	1558
Coq.Arith.EqNat.beq_nat_true	40	512.0.3.0.0.0.1.0.0.3	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: auto with sets).	3.11294198036	5844
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	128.0.3.0.0.0.1.0.0.128	synth with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	4.53368210793	9717
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.0148940086365	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.1.2.193.256.128.199	synth with cache (only 1: intros h1 h2; only 1: intros x; only 1: intros H; only 1: compute; only 1: induction n; only 1: eauto; only 1: auto).	16.3589119911	43832
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0258409976959	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0131249427795	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.0131380558014	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0113871097565	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0143761634827	2
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0301678180695	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.64.5	synth with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto).	0.107444047928	141
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: auto).	0.0115208625793	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0216097831726	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.0.0.1.0.0.0.0.1.0.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	4.92915701866	7146
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40	0.0.0.0.0.0.0.0.0.128.0.2.0.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: intro y0; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).	16.2956039906	25350
Coq.Arith.PeanoNat.Nat.compare_antisym	40	2.1.0.64.0.0.64.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: CRelationClasses.simpl_crelation; only 1: destruct m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite ?IHn; only 1: easy).	2.30296301842	2633
Coq.Arith.PeanoNat.Nat.compare_succ	40	64.0.1.0.0	synth with cache (only 1: revert m; only 1: destruct m; only 1: auto; only 1: simpl; only 1: eauto).	0.0447731018066	23
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.900491952896	957
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.1.0.1.0.0.0.0.0.0.0.2	synth with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	9.46857714653	22499
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.1.0.1.0.0.0.0.0.0.0.0.257	synth with cache (only 1: intro; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.16412210464	1421
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.258	synth with cache (only 1: intro; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.82447886467	909
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0216999053955	3
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	synth with cache (only 1: now nzsimpl').	0.0198841094971	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	576.129.0.0	synth with cache (only 1: inversion 1; only 1: simpl; only 1: solve_proper; only 1: easy || now destruct 1).	0.0466380119324	29
Coq.Arith.PeanoNat.Nat.square_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0204179286957	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	323.1.2.128.138	synth with cache (only 1: red; only 1: induction 1; only 1: rewrite add_succ_r in H; only 1: simpl in H; only 1: CRelationClasses.simpl_crelation).	1.26505017281	3326
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	128.0	synth with cache (only 1: fix even_spec 1; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.161749124527	127
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40	64.320.130.1	synth with cache (only 1: intros y q u H; only 1: intros _; only 1: fix even_spec 1; only 1: auto).	6.17665290833	5520
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	2.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0246660709381	4
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).	0.126722097397	90
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0180380344391	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	384.0.0.0.385.0	synth with cache (only 1: intros; only 1: apply bi_induction; only 1: solve_proper; only 1: now exists 0; only 1: fix even_spec 1; only 1: auto with relations).	0.477813959122	289
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	13	synth with cache (only 1: apply le_0_l).	0.466392993927	732
Coq.Arith.PeanoNat.Nat.div2_double	40	0.0.193.2.1.0.64.0.0.386	synth with cache (only 1: induct ltac:(n); only 1: simpl; only 1: reflexivity; only 1: intro m; only 1: intro H; only 1: simpl; only 1: simpl in H; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: rewrite succ_r; only 1: auto).	11.3008978367	4110
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.0.192.1	synth with cache (only 1: induction n; only 1: firstorder; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.382540941238	324
Coq.Arith.PeanoNat.Nat.le_div2	40	321.128.325.320.323	synth with cache (only 1: induct ltac:(n); only 1: reflexivity || destruct H; only 1: fix gcd_greatest 1; only 1: intros LE EQ; only 1: eauto using Private_Tac.eq_trans, Private_Tac.eq_sym).	25.2168171406	55360
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0355999469757	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.0.3	synth with cache (only 1: induct ltac:(n); only 1: trivial; only 1: destr_bool).	0.211280107498	199
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	256.0.128.64.256.1.192.320	synth with cache (only 1: destruct a; only 1: fix gcd_greatest 1; only 1: intros n m; only 1: auto with *; only 1: fix even_spec 1; only 1: intros m IH; only 1: intro H; only 1: simpl_relation).	19.3201789856	6970
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	1.0.192.0.0.0.0.385.65	synth with cache (only 1: intros L R n; only 1: destruct divmod as (q', u'); only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: fix gcd_divide 1; only 1: simpl; only 1: now f_equal).	18.8679020405	9781
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40	577.66.0	synth with cache (only 1: intros m a b Ha; only 1: fix odd_spec 1; only 1: now trivial).	1.32204413414	229
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	65.0.1.0.133.4	synth with cache (only 1: unfold testbit; only 1: set (a' := S a) in *; only 1: fold testbit; only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: left).	12.2051560879	2632
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	1.384.0.0.0.65.3.1.322	synth with cache (only 1: apply False_rec; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: apply le_lt_trans with n; only 1: now apply div2_decr; only 1: revert n; only 1: fix le_div2 1; only 1: destruct n; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial).	6.7591881752	11383
Coq.Arith.PeanoNat.Nat.div2_spec	40	3	synth with cache (only 1: now nzsimpl').	0.0202829837799	4
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0144979953766	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	449.65.0	synth with cache (only 1: intros x y; only 1: symmetry; only 1: now Nat.order).	0.0624740123749	30
Coq.Arith.Compare.discrete_nat	40	128.576.70	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a; only 1: intuition).	24.5780229568	31372
Coq.Arith.Gt.gt_n_S	40	325	synth with cache (only 1: auto with *).	0.299602985382	273
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.013386964798	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0167551040649	2
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.0168349742889	1
Coq.Arith.Gt.gt_not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.0176250934601	2
Coq.Arith.Gt.le_S_gt	40	257	synth with cache (only 1: now Nat.nzsimpl').	0.0296919345856	18
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.0140249729156	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.0141971111298	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.015251159668	1
Coq.Arith.Gt.le_gt_trans	40	65.257.449.0.0.0.0	synth with cache (only 1: nzinduct p m; only 1: intros _ H; only 1: apply Nat.le_succ_l; only 1: false_hyp H Nat.lt_irrefl; only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	2.5686621666	2373
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	259.0.0.0.0.256.0.194.0.139	synth with cache (only 1: nzinduct n; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono; only 1: compute; only 1: Nat.cases ltac:(n); only 1: constructor 1; only 1: intro; only 1: intuition; only 1: intro; only 1: intuition; only 1: CRelationClasses.simpl_crelation).	4.68095088005	8933
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0157129764557	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0173799991608	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.67.135	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.188032865524	458
Coq.Logic.JMeq.JMeq_trans	40	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0633208751678	56
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0193569660187	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0199429988861	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0207920074463	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0225110054016	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0250508785248	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0214800834656	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0189990997314	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0204679965973	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.398614883423	377
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.4.70	synth with cache (only 1: intro H; only 1: intros [x y]; only 1: assumption).	0.372177839279	999
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0265650749207	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	5.64	synth with cache (only 1: intros a Ha; only 1: tauto).	0.420306921005	698
Coq.Logic.Classical_Prop.not_imply_elim	40	384.448.0.0.197	synth with cache (only 1: intuition; only 1: destruct (classic P); only 1: auto; only 1: reflexivity || destruct H; only 1: firstorder using PropExtensionalityFacts.PredExt_imp_PropExt, PropExtensionalityFacts.PredExt_imp_PropFunExt, PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt).	1.33035492897	2780
Coq.Logic.Classical_Prop.not_imply_elim2	40	128.1.64.0.64	synth with cache (only 1: intros n Hn; only 1: intro H; only 1: RelationClasses.reduce; only 1: apply H; only 1: auto with relations).	0.0482189655304	24
Coq.Logic.Classical_Prop.imply_to_or	40	0.66.64	synth with cache (only 1: intro H1; only 1: intro m; only 1: tauto).	0.36697602272	328
Coq.Logic.Classical_Prop.imply_to_and	40	128.0.0.0.64.0.0.192	synth with cache (only 1: constructor 1; only 1: apply NNPP; only 1: red; only 1: intuition PeanoNat.Nat.order; only 1: intro; only 1: apply H; only 1: intro; only 1: now simpl).	0.124717950821	111
Coq.Logic.Classical_Prop.or_to_imply	40	130.0	synth with cache (only 1: intros; only 1: intuition).	0.0313909053802	10
Coq.Logic.Classical_Prop.not_and_or	40	0.514	synth with cache (only 1: intros m H1; only 1: tauto).	0.206084012985	46
Coq.Logic.Classical_Prop.or_not_and	40	1	synth with cache (only 1: tauto).	0.0581431388855	68
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0242578983307	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0241150856018	1
Coq.Logic.Classical_Prop.imply_and_or	40	64.129	synth with cache (only 1: intros a b c0; only 1: RelationClasses.simpl_relation).	0.0698301792145	65
Coq.Logic.Classical_Prop.imply_and_or2	40	0.2	synth with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	0.0293209552765	4
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	64.516.65.3.385	synth with cache (only 1: intros z; only 1: intro; only 1: intros n H; only 1: fix gcd_divide 1; only 1: tauto).	6.85444498062	10156
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.16.74	synth with cache (only 1: intro H; only 1: destruct H; only 1: eauto).	2.52015304565	10676
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	1.6	synth with cache (only 1: red; only 1: eauto).	0.125163793564	236
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	1.1.0.0.0.1.0.0.0.66.0.0	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: exact (fun X => X); only 1: exact bool; only 1: exact p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: cbn; only 1: auto; only 1: auto; only 1: auto).	0.759742975235	669
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	0.22.134	synth with cache (only 1: intros q; only 1: subst; only 1: reflexivity).	6.30900120735	13451
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.75.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.265331983566	595
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.53867316246	252
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	128.576	synth with cache (only 1: intros x y Hxy; only 1: firstorder).	0.395036935806	219
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	389.133	synth with cache (only 1: intros H0; only 1: eauto).	1.33461093903	2801
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	1.133.9.1.3	synth with cache (only 1: intros; only 1: intro x; only 1: firstorder; only 1: apply H; only 1: firstorder).	6.22874999046	15632
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: exists x; only 1: apply H1; only 1: assumption).	0.140107154846	144
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	1.0.12	synth with cache (only 1: compute; only 1: intros A B P R H; only 1: eauto).	2.24006891251	7182
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.4.0.6.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.657693147659	1340
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	256.0.64.128.3.322.130	synth with cache (only 1: red; only 1: intros H; only 1: intros P H0 HS; only 1: intro n; only 1: apply H; only 1: intro x; only 1: now try PeanoNat.Nat.order').	4.88631296158	15433
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.4.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	1.05093789101	2423
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	2.45501899719	3838
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.728683948517	1000
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.134.15.36	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: destruct e; only 1: auto).	1.92024707794	12360
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40	0.0.11.0.0.64.9.10.132	synth with cache (only 1: intros H ?; only 1: destruct (H A); only 1: unfold not; only 1: constructor; only 1: rewrite H0; only 1: exact I; only 1: right; only 1: rewrite H0; only 1: exact (fun H => H)).	14.1889891624	118678
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	129.0.0.4.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.0792200565338	209
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	142	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.73251414299	930
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40	384.128.258.193.577.451	synth with cache (only 1: Nat.cases ltac:(n); only 1: firstorder; only 1: intros LT; only 1: fix gcd_divide 1; only 1: intro n; only 1: RelationClasses.simpl_relation).	2.95835804939	5983
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	130.64.0	synth with cache (only 1: unfold not; only 1: intros n1 m1 H; only 1: firstorder).	0.0335299968719	42
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	129.0.384.0	synth with cache (only 1: unfold not; only 1: intros H; only 1: intros P notall; only 1: firstorder).	0.0276730060577	49
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	69	synth with cache (only 1: firstorder).	0.206161975861	686
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0278899669647	4
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	64.320.2.5.10	synth with cache (only 1: intros (l, L); only 1: induction l; only 1: left; only 1: now PeanoNat.Nat.nzsimpl; only 1: eauto).	4.81379103661	12918
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	2.08539509773	2632
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	209.134	synth with cache (only 1: compute; only 1: eauto).	1.04519891739	4388
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0219931602478	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40	0.333.712.3.0.73	synth with cache (only 1: compute; only 1: intros; only 1: inversion H; only 1: inversion_clear H; only 1: Morphisms.f_equiv; only 1: auto).	33.2532331944	107954
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.0.0.0.0.0.0.448.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: intros [a [Ha1| Ha2]]; only 1: exists true; only 1: auto; only 1: exists false; only 1: auto; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now BinInt.Z.nzsimpl'; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	14.1248600483	6926
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.69.0	synth with cache (only 1: intros; only 1: subst; only 1: trivial).	0.185180902481	212
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0242948532104	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0231878757477	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0244619846344	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.14.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.738285064697	1745
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	synth with cache (only 1: reflexivity).	0.0182840824127	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	synth with cache (only 1: reflexivity).	0.0140221118927	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0143611431122	4
Coq.Logic.HLevels.false_hprop	40	0.0	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.00742697715759	2
Coq.Logic.HLevels.true_hprop	40	5.1.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).	0.0700781345367	204
Coq.Logic.HLevels.not_hprop	40	0.0.1.1.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0591049194336	68
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	0.0.1.67.65.193.3.2.129.64	synth with cache (only 1: intro x; only 1: intros p q; only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intro; only 1: intro A; only 1: subst; only 1: intro p; only 1: destruct r, 1; only 1: destruct p; only 1: reflexivity).	13.7536549568	50529
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40	0.196.65.708	synth with cache (only 1: intros H'; only 1: intros a Ha; only 1: fix le_div2 1; only 1: auto).	15.4581770897	18416
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40	1.645.576.2.2.577.0	synth with cache (only 1: intros P HP; only 1: case N.div_eucl; only 1: firstorder; only 1: firstorder; only 1: intros le_mn2; only 1: fix gcd_greatest 1; only 1: auto).	19.6407911777	25130
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	1.130.332	synth with cache (only 1: intros a Ha; only 1: fix odd_spec 1; only 1: firstorder).	5.84261608124	10738
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	1.3.129.128.3	synth with cache (only 1: intro; only 1: intros H ?; only 1: intro z; only 1: destruct 1; only 1: auto).	0.258631944656	418
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0178351402283	3
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.68.65.3.81.6	synth with cache (only 1: intro; only 1: intro H; only 1: intro x; only 1: inversion 1; only 1: subst; only 1: reflexivity).	2.61261582375	14597
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	3.70.65.69	synth with cache (only 1: intro H; only 1: inversion 1; only 1: exists eq_refl; only 1: reflexivity).	0.694929122925	2522
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	3.4.64	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: apply eq_dep_intro).	0.248673915863	361
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	128.7.131	synth with cache (only 1: intros x' x'' Hx' Hx''; only 1: induction 1; only 1: reflexivity || destruct H).	0.552129983902	1099
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.7.0.0.72.2	synth with cache (only 1: split; only 1: intro H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.85002803802	6488
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0227718353271	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0218739509583	12
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.4.128.67.0.0.75.0	synth with cache (only 1: split; only 1: intro H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: inversion 1; only 1: destruct H2; only 1: rewrite H; only 1: reflexivity).	2.56271290779	8190
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.1.1.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0616300106049	72
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.131.0	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: split).	0.217097997665	260
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	6.67.67.72	synth with cache (only 1: intro H; only 1: destruct 1; only 1: subst; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	1.69994401932	4358
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	7.130.0	synth with cache (only 1: intro eq_dep_eq; only 1: intro A; only 1: auto).	0.575417995453	1416
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	2.8.0.2.6.3	synth with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).	5.48904585838	31778
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	73.195.0	synth with cache (only 1: intros eq_rect_eq; only 1: intro A; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.84880399704	2094
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0808250904083	96
Coq.Logic.EqdepFacts.f_eq_dep	40	1.2	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0358700752258	40
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0348610877991	23
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.0142321586609	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.453936100006	809
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	3.64.131.65.70.3.11	synth with cache (only 1: intros; only 1: change A with ((fun _ => A) I); only 1: apply H; only 1: constructor; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt; only 1: inversion 1; only 1: auto).	2.01088500023	7523
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	64.0.0.0.0	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: induction 1).	0.025022983551	8
Coq.Logic.IndefiniteDescription.constructive_definite_description	40	1.130.332	synth with cache (only 1: intros a Ha; only 1: fix odd_spec 1; only 1: firstorder).	4.54766201973	10730
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	2.129.69	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: assumption).	0.77560210228	1479
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40	1.131.335	synth with cache (only 1: intros a Ha; only 1: fix odd_spec 1; only 1: firstorder).	7.620885849	24580
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	4.0.64.66	synth with cache (only 1: intro z; only 1: destruct 1; only 1: auto; only 1: contradiction).	0.541947841644	1274
Coq.Logic.Decidable.dec_True	40	1.1.0	synth with cache (only 1: unfold decidable; only 1: constructor; only 1: trivial).	0.0162649154663	14
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.0106389522552	2
Coq.Logic.Decidable.dec_or	40	1.130.67	synth with cache (only 1: unfold decidable; only 1: intros H; only 1: tauto).	0.131166934967	274
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0282280445099	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0172889232635	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0234341621399	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0322721004486	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0152380466461	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.0158929824829	1
Coq.Logic.Decidable.not_and	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0255019664764	3
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0686869621277	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0216670036316	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0556268692017	2
Coq.Logic.Decidable.not_true_iff	40	0.1.2.64.0.0.2	synth with cache (only 1: split; only 1: intro H; only 1: apply H; only 1: repeat split; only 1: intro H; only 1: intro H1; only 1: apply H).	0.0791909694672	197
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.0107398033142	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0194330215454	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.022922039032	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0271120071411	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0271458625793	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0267369747162	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0277199745178	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0495080947876	2
Coq.Logic.Decidable.not_or_iff	40	1	synth with cache (only 1: tauto).	0.0269219875336	20
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.0176730155945	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.03560090065	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0363659858704	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40	0.257.65.193	synth with cache (only 1: compute; only 1: intro m; only 1: fix odd_spec 1; only 1: now f_equal).	1.30886888504	2275
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	2.1.6.130	synth with cache (only 1: compute; only 1: intuition; only 1: inv; only 1: easy).	7.17965698242	15029
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.1	synth with cache (only 1: red; only 1: auto_tc).	0.0211760997772	3
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0894131660461	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.0.0.1.65.393	synth with cache (only 1: inversion H; only 1: auto_tc; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	3.77090287209	2040
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0453429222107	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.379224061966	363
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0164029598236	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0178439617157	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0497739315033	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	3	synth with cache (only 1: eauto with *).	0.0800259113312	64
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0181651115417	2
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0187981128693	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.0.193	synth with cache (only 1: inversion H; only 1: unfold remove; only 1: auto_tc; only 1: ok).	0.41663813591	173
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40	0.580	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	1.26803588867	1279
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	130	synth with cache (only 1: now destruct 1).	0.0270788669586	11
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	130.0.137.134	synth with cache (only 1: intros m Hm; only 1: destruct m; only 1: easy; only 1: now simpl).	2.68144702911	7969
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.0184190273285	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0232539176941	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	1.0.0.577.256.256.258.8	synth with cache (only 1: destruct 1; only 1: repeat split; only 1: auto with *; only 1: intuition Nat.order; only 1: now Nat.nzsimpl'; only 1: intros; only 1: intuition; only 1: auto).	1.07439208031	2445
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.0.0.0.0.0.0.2	synth with cache (only 1: intros s1 s2 B1 B2; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	29.9171199799	31027
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	450.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: inA).	0.622996091843	559
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40	1.384.1.1.0.0.0.0.0.0	synth with cache (only 1: revert l2 acc; only 1: induction l1 as [| x1 l1 IH1]; only 1: intros l2 acc; only 1: simpl; only 1: inA; only 1: tauto; only 1: intros acc; only 1: simpl; only 1: fix le_div2 1; only 1: auto).	17.7010838985	10753
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	193.321.7	synth with cache (only 1: inversion 1; only 1: now f_equal; only 1: auto with *).	0.806346893311	2554
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0462250709534	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	256.0.0.0.256.0.1	synth with cache (only 1: intros H; only 1: destruct t; only 1: abstract now inversion 1; only 1: descolor; only 1: invrb; only 1: invrb; only 1: now auto).	0.724894046783	766
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: auto; only 1: auto).	2.308562994	1335
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	576.578	synth with cache (only 1: fix gcd_greatest 1; only 1: CRelationClasses.simpl_crelation).	0.181445121765	133
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40	576.1.576.0.0.0.0.1.0.4	synth with cache (only 1: case lbalS_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: auto; only 1: invrb; only 1: ok; only 1: fix gcd_greatest 1; only 1: invrb; only 1: Tactics.program_simpl).	10.113191843	12614
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40	642.581	synth with cache (only 1: fix gcd_greatest 1; only 1: now trivial).	21.7326869965	21474
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.1.0.1.6.452	synth with cache (only 1: intros a; only 1: destruct s; only 1: right; only 1: assumption; only 1: descolor; only 1: ok; only 1: ok).	26.4408631325	62768
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40	1.578.0.0.640.9	synth with cache (only 1: destruct s as [| c l y r]; only 1: destr_bool; only 1: invrb; only 1: auto; only 1: fix sqrtrem_spec 1; only 1: auto).	8.66727209091	7932
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	synth with cache (only 1: invrb; only 1: auto).	0.024425983429	3
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40	0.0.768.390	synth with cache (only 1: fix gcd_greatest 1; only 1: intro A; only 1: unfold remove; only 1: auto_tc).	8.07729196548	18555
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	66	synth with cache (only 1: now split).	0.0271909236908	7
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40	320.256.384.193.0.70	synth with cache (only 1: compute in *; only 1: intros U V; only 1: intro LS'; only 1: intro H1; only 1: fix odd_spec 1; only 1: firstorder).	8.99729394913	12915
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	71	synth with cache (only 1: ok).	0.151432037354	371
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	643.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: ok).	0.375759124756	846
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.1	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.096118927002	90
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.0.0.704	synth with cache (only 1: intros a; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.12515091896	1670
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.64.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: trivial; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.103404045105	67
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	576.704.576.704.384.129.0.0.1.133	synth with cache (only 1: assert (le0 : forall n, 0 <= n) by (induction n; auto); only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: intro LT; only 1: firstorder using Sorted_inv; only 1: intros z; only 1: inA; only 1: intros z; only 1: inA).	11.1911051273	25435
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.323455095291	358
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	3	synth with cache (only 1: solve_proper).	0.141588926315	138
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: congruence; only 1: easy).	0.034707069397	4
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	synth with cache (only 1: trivial).	0.0198781490326	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	640	synth with cache (only 1: reflexivity || discriminate).	0.0258748531342	41
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	193.1	synth with cache (only 1: fix even_spec 1; only 1: now f_equal).	0.0257389545441	10
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	128.2	synth with cache (only 1: intros; only 1: now PeanoNat.Nat.nzsimpl).	0.150504827499	45
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	193.0.577	synth with cache (only 1: intros LT; only 1: fix even_spec 1; only 1: now subst).	0.231714963913	108
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	128.2.832	synth with cache (only 1: intros E; only 1: fix odd_spec 1; only 1: firstorder).	1.42956995964	948
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	448.388	synth with cache (only 1: intros RS' n; only 1: destr_bool).	0.60940694809	404
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	128.0.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: now split; only 1: discriminate; only 1: discriminate; only 1: now destruct n).	1.08115410805	1100
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.096076965332	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	1.3.192	synth with cache (only 1: intros q; only 1: fix even_spec 1; only 1: easy).	2.25819802284	1318
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40	65.64.262	synth with cache (only 1: fix odd_spec 1; only 1: intros c Hc IH; only 1: intuition).	30.0247309208	38011
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	1.6.832	synth with cache (only 1: intros l2; only 1: fix even_spec 1; only 1: auto).	10.4991660118	14106
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0394380092621	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.035346031189	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0382461547852	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0356328487396	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40	512.67.448.320.256.192	synth with cache (only 1: intro Eq; only 1: intro y0; only 1: intro; only 1: intros a n; only 1: fix le_div2 1; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	3.68830394745	3245
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor).	3.23576402664	2784
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.0.3	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.27840590477	154
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	65.3.66.0	synth with cache (only 1: unfold In; only 1: intro H'; only 1: fix even_spec 1; only 1: tauto).	5.28455901146	5846
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	512.192.516	synth with cache (only 1: fix le_div2 1; only 1: intros n m Hn; only 1: auto with datatypes).	12.0858700275	6315
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.5	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	12.7545959949	13055
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	704.8	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.898863077164	2118
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	448.1.0.641.0.0	synth with cache (only 1: unfold Empty, In; only 1: intros s H; only 1: fix gcd_divide 1; only 1: induction s as [| l IHl o r IHr]; only 1: discriminate; only 1: BinNat.N.auto').	2.33467411995	2244
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40	128.640.64.384.0	synth with cache (only 1: unfold In; only 1: red; only 1: intros m Hm; only 1: fix gcd_divide 1; only 1: now f_equal).	2.42478919029	2155
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	64.13.128	synth with cache (only 1: intro H; only 1: rewrite H; only 1: firstorder).	3.87971115112	10064
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0507290363312	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0497641563416	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0408470630646	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0423481464386	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0455231666565	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0437531471252	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0599482059479	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0633678436279	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.136.0	synth with cache (only 1: intros P; only 1: intros m; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	4.15142607689	2817
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.513.0	synth with cache (only 1: intros; only 1: rewrite ?BinNat.N.add_0_l, ?BinNat.N.add_0_r, ?H; only 1: intuition).	0.490152835846	28
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	259	synth with cache (only 1: auto with *).	0.554738998413	77
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	0.387	synth with cache (only 1: red; only 1: intuition).	1.16852807999	154
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	8	synth with cache (only 1: intuition).	1.10632205009	339
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	1	synth with cache (only 1: intuition).	0.040274143219	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.0246350765228	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0391871929169	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0379009246826	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	516	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0588400363922	93
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	2.0.129.0.65.256	synth with cache (only 1: intro LS'; only 1: intro; only 1: intros E; only 1: intros m Hm; only 1: rewrite E; only 1: auto).	1.76957201958	885
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	66	synth with cache (only 1: firstorder).	0.0244948863983	7
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	0.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.016832113266	2
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.0.0.64.0.0	synth with cache (only 1: split; only 1: congruence; only 1: intros EQ; only 1: intros; only 1: intro; only 1: intuition).	0.0244841575623	9
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.448.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: intros Ha; only 1: auto).	0.0738158226013	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	513.448.193	synth with cache (only 1: intro Eq; only 1: vm_compute; only 1: eauto with *).	0.168511867523	161
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	384.384.384.384.0.0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: rewrite mem_iff; only 1: destruct (mem x s), (mem x' s'); only 1: abstract now inversion 1; only 1: abstract now inversion 1; only 1: abstract now inversion 1; only 1: abstract now inversion 1).	0.276454925537	209
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	1.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0506448745728	5
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	3.0.448.2	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: intros a; only 1: rewrite union_spec; only 1: intuition).	1.20172381401	1311
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.130.0.321.3.320	synth with cache (only 1: intros m; only 1: intros; only 1: intros Ha Hb; only 1: intro Hxy; only 1: intro H0; only 1: rewrite inter_spec; only 1: intuition).	5.24012517929	8268
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.2.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.30825304985	140
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	0.0.323.320.0.0.388.128.0	synth with cache (only 1: intros f Hf; only 1: intros a b Hb; only 1: intros q; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder using Sorted_inv; only 1: intuition; only 1: intuition).	14.1815640926	20673
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0387501716614	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.313650131226	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: intros P; only 1: intuition).	0.0231740474701	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	2	synth with cache (only 1: intuition).	0.0541789531708	48
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	65.264.1	synth with cache (only 1: intros; only 1: rewrite H  at 1; only 1: firstorder).	1.77771401405	1989
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	1.448	synth with cache (only 1: intro; only 1: auto).	0.0229461193085	31
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0506160259247	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	1.65	synth with cache (only 1: intros y H0 H1; only 1: intuition).	0.0477650165558	32
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0527358055115	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	1.576	synth with cache (only 1: intros H; only 1: fsetdec).	0.0986890792847	66
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0553660392761	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.1.64.261.1.1	synth with cache (only 1: intros; only 1: red; only 1: intro H2; only 1: rewrite <- H; only 1: rewrite diff_spec; only 1: intuition).	20.0663101673	19092
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.1	synth with cache (only 1: intros H1; only 1: fsetdec).	0.0825479030609	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.479683160782	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0449860095978	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.8	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.82692193985	958
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0597550868988	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0589580535889	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	2.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0988929271698	22
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.383985996246	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	1	synth with cache (only 1: fsetdec).	0.111354827881	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.136303901672	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.142244100571	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.143285989761	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0938339233398	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.319301843643	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0926678180695	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	1	synth with cache (only 1: intuition fsetdec).	0.0792229175568	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.117001056671	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.114551067352	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.173606872559	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.102904081345	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.184651851654	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.332766056061	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.297394990921	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0413420200348	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0404739379883	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0632679462433	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0629990100861	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0622019767761	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0771708488464	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0773458480835	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0.130	synth with cache (only 1: intros k H1 H2; only 1: fsetdec).	0.098207950592	21
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0875279903412	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0812749862671	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.1076130867	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.106427907944	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.146708011627	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.197016954422	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.209909915924	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.182971954346	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.149841070175	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0586769580841	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.055242061615	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0406610965729	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0399210453033	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0581250190735	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0694811344147	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.081934928894	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0443041324615	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.119845867157	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.109230995178	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.180489063263	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.152580976486	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	2.128.128.0.1	synth with cache (only 1: generalize (F.mem_iff s x); only 1: rewrite F.mem_iff; only 1: intros H; only 1: intro n; only 1: fsetdec).	0.454399108887	132
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.1	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.175734043121	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	1.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.242213010788	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.412478208542	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0.65.512.11	synth with cache (only 1: generalize (F.mem_iff (inter s s') x), (F.mem_iff s x), (F.mem_iff s' x), (inter_spec s s' x); only 1: intros le_mn2; only 1: intros LT; only 1: expAdd; only 1: fsetdec).	12.5284481049	6062
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.292629957199	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	193.320.0.457.385	synth with cache (only 1: intros H H'; only 1: intros a b n; only 1: apply fold_rec; only 1: now BinNat.N.nzsimpl; only 1: firstorder).	6.86597704887	16682
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	65.129.0.0.0.451.1.451.128.64	synth with cache (only 1: intro EQ; only 1: intro; only 1: intros a b; only 1: intros; only 1: red in H; only 1: apply fold_rec_bis; only 1: eauto; only 1: auto with *; only 1: pose proof H as H'; only 1: firstorder).	32.929090023	73410
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0374531745911	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.512.128.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: simpl in *; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: exists e; only 1: auto with relations).	0.33962392807	274
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	517.0.8	synth with cache (only 1: intros a Ha; only 1: rewrite <- union_inter_cardinal; only 1: CRelationClasses.simpl_crelation).	3.39024090767	6841
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.0	synth with cache (only 1: intros a b H; only 1: auto with set).	0.0235929489136	2
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.4	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	4.09832501411	2415
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0707468986511	60
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	66.326.1.0.193	synth with cache (only 1: intros s2; only 1: intro H; only 1: intros m; only 1: compute; only 1: Dec.fsetdec).	13.8258731365	7249
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.1.195.770.0	synth with cache (only 1: intros a b H; only 1: apply eq_iff_eq_true; only 1: compute; only 1: rewrite H; only 1: auto).	4.68083119392	4083
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0310599803925	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0337951183319	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	448.1.128.0.0.8	synth with cache (only 1: constructor; only 1: ok; only 1: ok; only 1: intro n; only 1: inversion 1; only 1: auto with arith).	0.361017227173	639
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: eauto).	2.34409809113	1086
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40	0.326	synth with cache (only 1: fix gcd_divide 1; only 1: intuition_in).	6.38085007668	5959
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0316791534424	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40	577.258.1.68	synth with cache (only 1: intros s1 s2; only 1: intro; only 1: fix even_spec 1; only 1: now try split).	36.934196949	87392
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0584661960602	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	4.87437486649	587
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	261	synth with cache (only 1: auto with *).	1.22275495529	771
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0378751754761	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	128.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: simpl_relation).	1.82692193985	364
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	3.12528204918	879
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	1.0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.0420799255371	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.40639996529	706
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.1.128.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intro n; only 1: intros; only 1: auto with set).	0.131274223328	58
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	1.256.512.64.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: intros (EQ, LE); only 1: intros a0; only 1: fix le_div2 1; only 1: auto).	5.57188200951	1372
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	2.18493509293	1015
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0430269241333	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.127580165863	79
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.0521869659424	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.7	synth with cache (only 1: intros H; only 1: rewrite (equal_2 H); only 1: auto).	0.75853395462	703
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0341060161591	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.0	synth with cache (only 1: apply subset_1; only 1: auto with set).	0.0249059200287	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	196	synth with cache (only 1: auto with *).	2.45356798172	448
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	2	synth with cache (only 1: auto with set).	0.0258760452271	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	1.0	synth with cache (only 1: intro; only 1: auto with set relations).	0.0319969654083	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0239250659943	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.272756099701	100
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1.0.0.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.322818040848	77
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.0.1.0	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0535080432892	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0205988883972	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0386760234833	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0244660377502	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0243649482727	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.021712064743	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: auto with set relations).	0.0221979618073	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0208818912506	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0231530666351	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.0217599868774	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0976891517639	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0214259624481	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0274138450623	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0262200832367	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0254650115967	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0237560272217	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0210268497467	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0234560966492	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0239520072937	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0223038196564	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0216889381409	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.10115480423	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0217227935791	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0685741901398	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0208060741425	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0203301906586	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0213329792023	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0357570648193	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	67.0.0.0.0.1.128	synth with cache (only 1: intros E; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: eauto with *).	20.0298650265	7202
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.0216319561005	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0681800842285	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	1.50694894791	1436
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.0.0.0.0.2.0.0.0.0.512	synth with cache (only 1: intros H4; only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	6.83479189873	8832
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	65.0	synth with cache (only 1: intros; only 1: firstorder).	0.105054140091	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	0.640.2.66.385	synth with cache (only 1: intros H; only 1: intros m; only 1: intuition; only 1: f_equiv; only 1: intuition).	1.15674710274	779
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	707	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0712139606476	64
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0279920101166	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40	0.0.0.768.0.67.0.0	synth with cache (only 1: red; only 1: intros; only 1: intros H1; only 1: do 2 (rewrite filter_spec; auto); only 1: firstorder using Sorted_inv; only 1: rewrite <- H; only 1: apply Comp; only 1: auto with relations).	3.56767582893	1450
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	449.450.1.449	synth with cache (only 1: intros b LT; only 1: intro H; only 1: fix sqrtrem_spec 1; only 1: intuition N.order).	27.3591780663	10508
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	0.0.0.64.1.0.194.0.577	synth with cache (only 1: intros LE EQ; only 1: red; only 1: intro H1; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: Dec.fsetdec; only 1: auto; only 1: auto; only 1: auto).	8.98073196411	6666
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	195.192.0.0.0.1	synth with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros n m; only 1: intuition).	0.521288156509	523
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.66.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	0.66937494278	717
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0435400009155	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	1.0.0	synth with cache (only 1: unfold decidable; only 1: intros A R1 Sym1 B R2 Sym2 C R3 f Hf; only 1: auto).	0.0385091304779	4
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.65	synth with cache (only 1: intros a n p Hn; only 1: intros; only 1: intuition).	1.42442107201	8
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	2	synth with cache (only 1: intuition).	0.0210411548615	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0.65	synth with cache (only 1: intros n EQ; only 1: fsetdec).	0.90428686142	257
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	synth with cache (only 1: fsetdec).	0.0392751693726	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	2.73	synth with cache (only 1: intros H2 H3; only 1: fsetdec).	10.4215509892	18831
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	3.576.258.2	synth with cache (only 1: intro n; only 1: intros EQ; only 1: intros s; only 1: fsetdec).	1.64943099022	1791
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	8.64	synth with cache (only 1: intros a b Ha Hb; only 1: fsetdec).	3.81268310547	6222
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.320.0	synth with cache (only 1: intros n m; only 1: intro EQ; only 1: fsetdec).	0.476004123688	69
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.170338153839	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	synth with cache (only 1: fsetdec).	0.0950789451599	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	321.0.64.64.454.0	synth with cache (only 1: red; only 1: intros x y; only 1: intros H4; only 1: intros a Ha; only 1: intuition; only 1: fsetdec).	13.8801081181	4908
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0.1	synth with cache (only 1: intros f Hf s s' Hs a; only 1: fsetdec).	0.37498998642	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.0.451.384.192	synth with cache (only 1: intros a m; only 1: intros N; only 1: intros P F; only 1: rewrite singleton_spec; only 1: intuition).	3.43006801605	4582
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0	synth with cache (only 1: fsetdec).	0.109347820282	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.140643835068	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0828459262848	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	196.1	synth with cache (only 1: fix even_spec 1; only 1: auto with arith).	0.968579053879	1022
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	65.1.64.1	synth with cache (only 1: intros x y z; only 1: intros H; only 1: intro n; only 1: intuition_in).	0.240932941437	82
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.66	synth with cache (only 1: repeat red; only 1: intuition_in).	0.0647168159485	32
Coq.MSets.MSetGenTree.Props.lt_leaf	40	1.128.193	synth with cache (only 1: intros N; only 1: intros n IH; only 1: now rewrite <- ?Nat.succ_le_mono).	0.0462031364441	21
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0280270576477	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0778069496155	3
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.170839071274	4
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	577.322.193	synth with cache (only 1: intro Eq; only 1: fix gcd_divide 1; only 1: easy || now destruct 1).	2.08094215393	2387
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.577.0.128	synth with cache (only 1: intro m; only 1: intros; only 1: intros LE EQ; only 1: order).	0.226790904999	123
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0328249931335	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0243489742279	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	322.0.64.321	synth with cache (only 1: intros i j Hi E; only 1: fix odd_spec 1; only 1: intros m H; only 1: auto with *).	4.39247202873	3734
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	65.64.128.0.64	synth with cache (only 1: intros a Ha; only 1: intro H; only 1: intros LT; only 1: fix odd_spec 1; only 1: intuition).	2.63479089737	1804
Coq.MSets.MSetGenTree.Props.empty_spec	40	642.513	synth with cache (only 1: intro Ha; only 1: Nat.auto').	0.203006982803	234
Coq.MSets.MSetGenTree.Props.empty_ok	40	130	synth with cache (only 1: auto with datatypes).	0.0183069705963	11
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	65.2	synth with cache (only 1: fix even_spec 1; only 1: assumption).	13.4480140209	6881
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.93759894371	878
Coq.MSets.MSetGenTree.Props.choose_spec1	40	0.0.0.1.128.128.576.1.13	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: intros; only 1: destr_bool; only 1: destruct l; only 1: intros l; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: auto).	39.3671309948	58216
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40	2.260.320.64	synth with cache (only 1: intro; only 1: intros x y H'; only 1: fix even_spec 1; only 1: auto).	21.6108398438	14368
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40	129.384.457	synth with cache (only 1: intros NF; only 1: fix odd_spec 1; only 1: firstorder using StronglySorted_inv).	2.77426695824	6562
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	0	synth with cache (only 1: firstorder).	0.124388933182	1
Coq.MSets.MSetGenTree.Props.eq_Leq	40	0.3.2.0	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	3.47664785385	6648
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40	0.0.64.2.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: unfold elements; only 1: fix even_spec 1; only 1: intros; only 1: now rewrite !elements_app, !app_nil_r).	1.47369790077	1962
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	128.384.323.128.130.0.1	synth with cache (only 1: intros H; only 1: simpl; only 1: intro LS'; only 1: intro n; only 1: intros x; only 1: fix odd_spec 1; only 1: easy).	18.7275500298	12215
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40	0.322.131.320	synth with cache (only 1: intros n IH; only 1: intros EQ; only 1: fix even_spec 1; only 1: auto).	12.6752910614	13462
Coq.MSets.MSetGenTree.Props.compare_Cmp	40	65.68.448	synth with cache (only 1: intros a; only 1: fix le_div2 1; only 1: solve [ auto ]).	1.39207410812	2576
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	385.1.259	synth with cache (only 1: intros Compat Hl Hr; only 1: fix even_spec 1; only 1: now Nat.nzsimpl').	15.5627391338	21071
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	513.514.67.1.322	synth with cache (only 1: intro z; only 1: intros; only 1: intros q; only 1: fix gcd_divide 1; only 1: eauto with *).	37.3273570538	58302
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	129.196.65.448.0.448.0.323.66	synth with cache (only 1: split; only 1: repeat constructor; only 1: intros; only 1: now apply H; only 1: intros; only 1: now apply H; only 1: firstorder; only 1: red; only 1: firstorder  (subst; auto)).	17.4940350056	19982
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40	129.328	synth with cache (only 1: fix le_div2 1; only 1: now simpl).	3.10348510742	4642
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	320.450.192.65.66.0	synth with cache (only 1: repeat red; only 1: intro; only 1: intros a r; only 1: intros Hb; only 1: fix odd_spec 1; only 1: easy).	11.5473921299	6177
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40	67.651	synth with cache (only 1: fix gcd_greatest 1; only 1: tauto).	3.29893398285	4788
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	398	synth with cache (only 1: firstorder using StronglySorted_inv).	21.7557790279	36535
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	642.0.256.384	synth with cache (only 1: intro H0; only 1: intros n m; only 1: intro H'; only 1: firstorder using Sorted_inv).	0.212079048157	258
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40	64.129.0	synth with cache (only 1: intros x1 x2 s1 s1' s2 s2' Ab1 Ab2 Ad1 Ad2 LT; only 1: fix even_spec 1; only 1: trivial).	0.632479906082	192
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	67.0.3.384.0.3	synth with cache (only 1: intros x y z; only 1: intros; only 1: intuition auto; MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: rewrite 2!InA_cons; only 1: firstorder).	37.660312891	91619
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	577.1	synth with cache (only 1: intros n m; only 1: let rec add_permut := let rec add_permut_rec := let rec add_push := Ring_theory.gen_add_push radd Rsth Reqe ARth in fun t => match t with | radd ?x ?y => add_permut_rec y || add_permut_rec x | _ => add_push t; apply (Ring_theory.Radd_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- req ?t _ => add_permut_rec t end in add_permut).	0.244073152542	22
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	320.0	synth with cache (only 1: intros; only 1: now BinInt.Z.nzsimpl').	0.292459964752	17
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	70.1.0	synth with cache (only 1: unfold Subset, Included, In, mkEns; only 1: intros; only 1: firstorder).	24.7117238045	14217
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	129.0.0.1.0.0.1.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: rewrite elements_Empty in H; only 1: intros; only 1: rewrite elements_iff in H0; only 1: rewrite H in H0; only 1: inversion H0; only 1: intro; only 1: intuition PeanoNat.Nat.order).	1.63842701912	1069
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.1.137.65	synth with cache (only 1: intro H; only 1: red in H; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	20.2141001225	22793
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	514.1.0.1.4.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: firstorder).	13.5213720798	9864
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0	synth with cache (only 1: solve_proper).	0.0283451080322	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	194.514.576	synth with cache (only 1: intros m Le; only 1: fix gcd_divide 1; only 1: auto with relations).	2.34925293922	4087
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	5.8	synth with cache (only 1: fix even_spec 1; only 1: auto).	3.94910979271	7250
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	8.94240999222	7046
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).	0.0828621387482	233
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.64.0.0.0.5.1.0	synth with cache (only 1: intros; only 1: split; only 1: unfold singleton; only 1: intros; only 1: inv; only 1: auto; only 1: left; only 1: auto).	6.3050801754	3870
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).	0.0152480602264	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	130.0	synth with cache (only 1: unfold empty; only 1: now subst).	0.0209889411926	10
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.2	synth with cache (only 1: repeat red; only 1: auto).	0.0157389640808	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	64.1.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: trivial).	0.0344338417053	7
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2	synth with cache (only 1: constructors).	0.00851392745972	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	129.1.64.1.0.2	synth with cache (only 1: repeat red; only 1: induction s; only 1: auto; only 1: intros n IH; only 1: inv; only 1: firstorder).	5.65529179573	6630
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40	0.448.0.0.3.512	synth with cache (only 1: intros m Hm; only 1: set (acc := nil); only 1: assert (Hacc : Ok acc) by constructors; only 1: clearbody acc; only 1: fix le_div2 1; only 1: intuition).	3.03128290176	3447
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40	449.193.66	synth with cache (only 1: clear; only 1: fix le_div2 1; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	6.51889300346	5528
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40	577.64.3.64	synth with cache (only 1: clear; only 1: fix even_spec 1; only 1: intros IH m H1 H2; only 1: firstorder  (subst; auto)).	35.440486908	36850
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40	385.576.2.65.65.0.0.0	synth with cache (only 1: induction s; only 1: intros; only 1: discriminate; only 1: intros l; only 1: rewrite InA_cons; only 1: simpl; only 1: intro Hxz; only 1: CRelationClasses.simpl_crelation).	5.79253721237	5664
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	1.64.512.0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: destr_bool; only 1: easy; only 1: inversion H).	0.141227960587	54
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0186321735382	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	1.48081207275	1458
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	64	synth with cache (only 1: auto using Sorted, LocallySorted, HdRel).	0.0221171379089	5
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	0.4	synth with cache (only 1: fix gcd_greatest 1; only 1: intuition).	4.27698993683	4052
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	3.28179812431	2626
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	64	synth with cache (only 1: eauto).	0.0269827842712	5
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.64.64.0.0.576.1.454	synth with cache (only 1: intros n IH; only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: inv; only 1: intros m; only 1: constructor; only 1: auto).	1.87742185593	2232
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	64.0.385.2.0	synth with cache (only 1: intros m a b Ha Hb; only 1: inv; only 1: fix even_spec 1; only 1: intros; only 1: auto with relations).	1.58119297028	1501
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	1.454.66.2	synth with cache (only 1: intros EQ; only 1: inv; only 1: fix odd_spec 1; only 1: auto).	7.60981607437	8918
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40	1.449.0.448.0.66.640.386.384	synth with cache (only 1: intro RS'; only 1: intros a Ha; only 1: intros H x0; only 1: destruct 1; only 1: constructor; only 1: reflexivity || destruct H; only 1: simpl in *; only 1: fix even_spec 1; only 1: auto).	26.6106030941	30920
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40	256.388	synth with cache (only 1: fix gcd_divide 1; only 1: intuition PeanoNat.Nat.order).	10.3190641403	3812
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.207079172134	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	0	synth with cache (only 1: auto).	0.0229759216309	1
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	323	synth with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.0502378940582	24
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	643.1	synth with cache (only 1: fix even_spec 1; only 1: firstorder).	0.468891859055	545
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	322.0.1	synth with cache (only 1: split; only 1: intuition; only 1: now auto with arith).	0.19610786438	181
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	194.4.0.64	synth with cache (only 1: intros m; only 1: intro H; only 1: inv; only 1: tauto).	0.445705890656	777
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	2.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0436310768127	5
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	1.1.512	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto).	0.108278036118	105
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	2.448.2.1.130	synth with cache (only 1: red; only 1: intuition; only 1: destruct H0; only 1: now destruct compare; only 1: discriminate H).	2.02406907082	3103
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40	64.0.320.65.0.0.128.0.0.0	synth with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: inversion 2; only 1: intros y Hy; only 1: simpl; only 1: inversion 2; only 1: inversion H; only 1: fix even_spec 1; only 1: inv; only 1: eassumption).	5.95308494568	3106
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40	0.321.0.2.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: red; only 1: intuition; only 1: inv; only 1: destruct s as [| b s]; only 1: discriminate; only 1: fix odd_spec 1; only 1: auto).	4.42911291122	5032
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	129.1	synth with cache (only 1: intro s; only 1: auto using in_app_or, in_or_app).	0.0303528308868	8
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: intros n H; only 1: auto).	0.0290901660919	3
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40	0.256.0.448.64.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: intuition; only 1: intros x Hs; only 1: fix even_spec 1; only 1: simpl; only 1: intro n; only 1: auto).	0.646595001221	247
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40	257.448.0.640.64.0.0.0.0.0.0.0	synth with cache (only 1: intros s f x; only 1: repeat rewrite <- isok_iff; only 1: revert s f x; only 1: simple induction s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intro H; only 1: intros x y z H1 H2; only 1: inv; only 1: fix gcd_divide 1; only 1: CRelationClasses.simpl_crelation).	3.79514503479	2852
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40	2.0.256.0.0.256.0.256.321.64.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s f; only 1: simple induction s; only 1: auto; only 1: induction s; only 1: intros a b H; only 1: intro x; only 1: simpl; only 1: fix odd_spec 1; only 1: intros; only 1: inv; only 1: eauto with arith; only 1: intros x l Hrec f Hs; only 1: auto).	4.28731894493	5556
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40	64.192.384.0.0.320.0.0.0.0.0.0.448.0.0.192.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s f; only 1: simple induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros x l Hrec f Hs; only 1: inv; only 1: generalize (Hrec f H); only 1: generalize (partition_inf1 (s:=l) f (x:=x)); only 1: case (f x); only 1: case (partition f l); only 1: simpl; only 1: auto; only 1: intros n IH; only 1: case (partition f l); only 1: case (partition f l); only 1: intro LE; only 1: case (partition f l); only 1: case (partition f l); only 1: case (partition f l); only 1: case (partition f l); only 1: case (partition f l); only 1: case (partition f l); only 1: generalize H; only 1: case (partition f l); only 1: case (partition f l); only 1: intro H1; only 1: fix even_spec 1; only 1: easy).	29.3826100826	19623
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	1.577.384.448.256.0.0.1	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: congruence; only 1: intros x y H; only 1: intros RS' n; only 1: rewrite <- H in *; only 1: inversion_clear 1; only 1: easy).	5.3365790844	1591
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40	64.448.257.449	synth with cache (only 1: intros m; only 1: intros z n H; only 1: fix gcd_divide 1; only 1: trivial).	6.93430519104	1738
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40	0.1.385	synth with cache (only 1: fix le_div2 1; only 1: intros s Hs; only 1: auto).	5.40652894974	3086
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: now Z.nzsimpl).	0.116510868073	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0291640758514	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	4.0.0.1.10.128.1.1.8	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: intros H; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	33.2423820496	84743
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.445536851883	347
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	2.0.0.2.129.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.14.64	synth with cache (only 1: repeat split; only 1: induction 1; only 1: left; only 1: auto; only 1: generalize IHclos_trans2; only 1: clear IHclos_trans2; only 1: induction IHclos_trans1; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: inversion 1; only 1: left; only 1: auto; only 1: apply clos_t1n_trans; only 1: auto).	16.519313097	48464
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	3.14995598793	5648
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.5.17	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.698975086212	1890
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	2.0.5.128.12	synth with cache (only 1: intro y0; only 1: intros n m; only 1: right with y0; only 1: auto; only 1: left).	0.706812858582	1681
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.318516016006	356
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	2.34104299545	4657
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	3.5230281353	7018
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.4.0.0.1.197	synth with cache (only 1: intros H; only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.991162776947	1997
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.0.0.5.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	0.799406051636	1849
Coq.Sets.Uniset.defs.leb_refl	40	0	synth with cache (only 1: destr_bool).	0.0137438774109	1
Coq.Sets.Uniset.defs.incl_left	40	1.2.3.132.129.130.130.128.65	synth with cache (only 1: intros H H'; only 1: inversion_clear H; only 1: inversion_clear H; only 1: inversion_clear H; only 1: reflexivity || destruct H; only 1: destruct H'; only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	3.72825407982	9546
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0279951095581	4
Coq.Sets.Uniset.defs.seq_refl	40	3	synth with cache (only 1: auto).	0.013867855072	4
Coq.Sets.Uniset.defs.seq_trans	40	1.128.129.4.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: simpl; only 1: symmetry; only 1: rewrite H; only 1: auto).	0.648668050766	669
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0246829986572	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0246040821075	3
Coq.Sets.Uniset.defs.union_empty_right	40
Coq.Sets.Uniset.defs.union_comm	40
Coq.Sets.Uniset.defs.union_ass	40	1.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).	0.355859994888	187
Coq.Sets.Uniset.defs.seq_left	40	1.0.128.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: symmetry; only 1: rewrite H; only 1: auto).	0.257308959961	89
Coq.Sets.Uniset.defs.seq_right	40	1.0.0.0.0.64.128	synth with cache (only 1: intros Hfst Hsnd; only 1: intro x; only 1: unfold seq; only 1: simpl; only 1: intros; only 1: elim H; only 1: auto).	0.312866926193	148
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	1.1.2.1.1.0.0.0.0.0.2	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	20.9256031513	22359
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.1	synth with cache (only 1: intuition; only 1: split).	0.0243980884552	3
Coq.Sets.Multiset.multiset_defs.meq_trans	40	64.1	synth with cache (only 1: unfold meq; only 1: eauto using PeanoNat.Nat.Private_OrderTac.Tac.eq_trans, PeanoNat.Nat.Private_OrderTac.Tac.eq_sym).	0.287651777267	258
Coq.Sets.Multiset.multiset_defs.meq_sym	40	128.0.257.0	synth with cache (only 1: unfold meq; only 1: fix even_spec 1; only 1: destruct y; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.058559179306	41
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0266079902649	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0306680202484	4
Coq.Sets.Multiset.multiset_defs.munion_comm	40	194.65.1	synth with cache (only 1: destruct x; only 1: intro H; only 1: CRelationClasses.simpl_crelation).	1.43497800827	1218
Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.258.0.0.1.0.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: unfold multiplicity; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: Bool.destr_bool; only 1: auto with arith).	1.83713102341	1591
Coq.Sets.Multiset.multiset_defs.meq_left	40	577.128.0	synth with cache (only 1: unfold meq; only 1: intros n H; only 1: simpl_relation).	0.353843927383	354
Coq.Sets.Multiset.multiset_defs.meq_right	40	384.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: auto with sets).	0.0596899986267	14
Coq.Sets.Multiset.multiset_defs.munion_rotate	40	1.451.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: fix gcd_greatest 1; only 1: auto with arith).	6.50169801712	4270
Coq.Sets.Multiset.multiset_defs.meq_congr	40	193.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: CRelationClasses.simpl_crelation).	0.169763088226	78
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	2.770.2.320.0	synth with cache (only 1: unfold munion; only 1: intros a Ha; only 1: unfold meq; only 1: fix gcd_greatest 1; only 1: auto using munion_comm, munion_ass, meq_left, meq_right, meq_sym).	38.867718935	37759
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	64.321.0.256.192.1	synth with cache (only 1: unfold munion; only 1: intros Hb; only 1: red; only 1: unfold multiplicity; only 1: fix odd_spec 1; only 1: easy).	1.20043087006	542
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	0.64.512.576.128.1.0.2	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intro y0; only 1: intros m H1 H2; only 1: fix even_spec 1; only 1: intros H; only 1: auto).	31.3770811558	42188
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	448	synth with cache (only 1: auto  6 with sets).	0.0100429058075	29
Coq.Sets.Integers.Integers_sect.le_antisym	40	0.192	synth with cache (only 1: intro H'0; only 1: PeanoNat.Nat.order).	0.0179378986359	14
Coq.Sets.Integers.Integers_sect.le_trans	40	0.256.1.0	synth with cache (only 1: red; only 1: intros n m p; only 1: intros nna a; only 1: PeanoNat.Nat.Private_Tac.order).	0.0539300441742	94
Coq.Sets.Integers.Integers_sect.le_Order	40	0.0.0.0.0.0.0.0.0.0.0.705.0.0.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: now left; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: intros x y H H'; only 1: rewrite (PeanoNat.Nat.le_antisymm x y); only 1: auto; only 1: auto; only 1: auto).	0.937369823456	1858
Coq.Sets.Integers.Integers_sect.triv_nat	40	129.0	synth with cache (only 1: intro n; only 1: easy).	0.0122818946838	9
Coq.Sets.Integers.Integers_sect.nat_po	40	1.128.64.1.0.2.448.64.67.263.131.197	synth with cache (only 1: generalize Inclusion_is_transitive; only 1: intro H; only 1: generalize Inclusion_is_transitive; only 1: generalize Inclusion_is_transitive; only 1: intros H'9 H'10; only 1: eexists; only 1: auto with sets; only 1: split; only 1: exact le_reflexive; only 1: intros m IH; only 1: intuition PeanoNat.Nat.order; only 1: exact le_antisym).	1.73991703987	12286
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	192.448.68	synth with cache (only 1: intro A; only 1: fix gcd_greatest 1; only 1: eauto).	4.32689905167	6040
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40	512.4.257.64.2.5.2	synth with cache (only 1: intro H'4; only 1: elim H'4; only 1: elim le_total_order; only 1: intro H'8; only 1: RelationClasses.simpl_relation; only 1: eapply PeanoNat.Nat.Private_OrderTac.Tac.lt_irrefl; only 1: now apply H).	21.1935319901	32084
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.4.3.1	synth with cache (only 1: intros; only 1: intro p; only 1: red; only 1: auto).	0.662317991257	1050
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.888997077942	498
Coq.Sets.Relations_1_facts.contains_is_preorder	40	2.0.1.2.2	synth with cache (only 1: intro A; only 1: split; only 1: intros H'0 H'1; only 1: trivial; only 1: auto  10 with sets).	0.115154027939	175
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	0.64.2.131.1.0.136.2.3.3	synth with cache (only 1: intro A; only 1: split; only 1: auto  10 with sets; only 1: intros ? ? ? [Hl Hr]; only 1: destruct 1; only 1: auto  10 with sets; only 1: intros n m; only 1: destruct 1; only 1: red; only 1: auto).	9.37726902962	35005
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.64.2.2.1	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intro p; only 1: red; only 1: intro x; only 1: auto  10 with sets).	0.418376922607	455
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0234961509705	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0450019836426	30
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3	synth with cache (only 1: auto  10 with sets).	0.0124418735504	7
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.011255979538	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	1.0.0.0.0.0.71	synth with cache (only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.899038076401	2796
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.0.1.0.2.0.0.0.0.1.64.1.0.2	synth with cache (only 1: generalize Rstar_contains_R; only 1: intro T; only 1: unfold Symmetric, Complement; only 1: intro H1; only 1: intros U R; only 1: red in T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	17.1868209839	33541
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.0.0.2.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	1.85569882393	3181
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.087788105011	85
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0387749671936	26
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	0.258.0.512.0.0.193	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intro p; only 1: destruct 1; only 1: now try split; only 1: intuition).	0.436342954636	641
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40	0.320.129.1.0.66	synth with cache (only 1: intros x1 H'0; only 1: intros x0 H'; only 1: red; only 1: compute; only 1: fix even_spec 1; only 1: trivial).	10.9825780392	23654
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40	640.192.258.512	synth with cache (only 1: intros ReprFunChoice P; only 1: fix le_div2 1; only 1: intros a b n Ha; only 1: auto  8 using add_soustr_xy, add_soustr_1, add_soustr_2 with sets).	1.96637606621	3368
Coq.Sets.Image.Image.Pigeonhole	40	1.192.0.320.64.1.64.321	synth with cache (only 1: unshelve refine (let F := exist (fun P => ~ ~ P -> P) False _ in _); only 1: eauto; only 1: unshelve refine (let F := exist (fun P => ~ ~ P -> P) False _ in _); only 1: auto with arith; only 1: intros x1 H'0; only 1: intro n'; only 1: fix odd_spec 1; only 1: auto with sets).	15.3467259407	14220
Coq.Sets.Image.Image.Pigeonhole_principle	40	321.512.192.1.0.129	synth with cache (only 1: intros P notall; only 1: unfold not; only 1: intro n'; only 1: intros m Hm IHm; only 1: fix le_div2 1; only 1: auto with relations).	3.40078401566	4724
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	448.65.0.64.66.192.1.1.0.320.65	synth with cache (only 1: intro HP; only 1: intros B; only 1: intros x YX; only 1: apply Strict_super_set_contains_new_element; only 1: red; only 1: intro H1; only 1: firstorder; only 1: firstorder; only 1: red; only 1: intros Hab; only 1: congruence).	9.77879405022	17113
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	1.0.0.512.64.0.256	synth with cache (only 1: generalize Inclusion_is_transitive; only 1: intros X K H'5 L Y H'6; only 1: generalize H'6; only 1: fix gcd_greatest 1; only 1: intro H'1; only 1: intros; only 1: auto).	0.457590818405	527
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	64	synth with cache (only 1: destruct 1).	0.0163459777832	5
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.8	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.425033092499	322
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.0166449546814	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.0	synth with cache (only 1: red; only 1: auto with sets).	0.0179278850555	2
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.3.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.129.0	synth with cache (only 1: elim Inclusion_is_an_order; only 1: repeat split; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets; only 1: red; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	38.1616790295	34189
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	128.128.0.0.0.128.0.129.0.0.0.0.2.135	synth with cache (only 1: constructor; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x H'; only 1: intro z; only 1: intro X; only 1: compute; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: intro H; only 1: contradiction).	3.20331692696	4865
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	2.2.64.0.0.1.64.65.0	synth with cache (only 1: intros x y z H' H'0; only 1: intro H1; only 1: red in H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	3.81596803665	3227
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0362088680267	9
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.0173909664154	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0167920589447	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	1.130.2	synth with cache (only 1: intro X; only 1: inversion 1; only 1: auto with sets).	0.280303001404	160
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0320751667023	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	65.384.3	synth with cache (only 1: intro X; only 1: intros c Hc IH; only 1: CRelationClasses.simpl_crelation).	1.00818586349	1227
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	2.320.384.193.0	synth with cache (only 1: unfold Subtract at 1; only 1: intro H1; only 1: intros LT; only 1: intros * []; only 1: auto using Noone_in_empty with sets).	0.446087121964	658
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	4.65.129.68	synth with cache (only 1: intros n IH; only 1: Bool.destr_bool; only 1: firstorder; only 1: auto  7 using Inhabited_Setminus with sets).	13.2271227837	22547
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.192.0.0.0.0	synth with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros EQ; only 1: auto with sets).	0.0758290290833	52
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.0.1.0.65.0.0	synth with cache (only 1: generalize Rstar_transitive; only 1: intro T1; only 1: compute; only 1: red in T1; only 1: intros x0 H'0; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	0.742639064789	815
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	66.450.2.256.256	synth with cache (only 1: intro z; only 1: intros n m H; only 1: red; only 1: fix even_spec 1; only 1: auto).	4.4096570015	7294
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	64.128.0	synth with cache (only 1: intros X x H'; only 1: compute; only 1: CRelationClasses.simpl_crelation).	0.196989059448	187
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.129.0.0	synth with cache (only 1: intros A B x H'; only 1: red; only 1: induction 1; only 1: auto with sets).	0.199604034424	38
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	516.0.0.0.64.320.0	synth with cache (only 1: unfold Add at 1; only 1: intro H2; only 1: intros A; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: easy || now destruct 1).	2.34805297852	5295
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	1.193.0.64.1.0.0.256.0	synth with cache (only 1: intros X x H'; only 1: intros a b; only 1: red; only 1: apply Setminus_intro; only 1: red; only 1: left; only 1: auto with sets; only 1: induction 1; only 1: auto with sets).	16.6822419167	5130
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.98583984375	1421
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40	3.513.128.449.193	synth with cache (only 1: intros z; only 1: intros A P H; only 1: intro X; only 1: fix gcd_greatest 1; only 1: tauto).	7.99808716774	11829
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40	0.256.320	synth with cache (only 1: intros Base Step; only 1: fix odd_spec 1; only 1: auto with sets).	0.345881938934	127
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	66.0	synth with cache (only 1: intro A; only 1: auto  10 with sets).	0.0400350093842	29
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0151259899139	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.7	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.271744966507	239
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0141191482544	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0152068138123	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	68.6	synth with cache (only 1: intros X H'; only 1: auto  10 with sets).	0.515465021133	423
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0163249969482	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	1.65	synth with cache (only 1: intro H'; only 1: auto  6 with sets).	0.115778923035	29
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.63129091263	2465
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	1.36848711967	1535
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.2.0.0.0.2.0.0.0.3.66.64	synth with cache (only 1: intro x; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	1.37917900085	2240
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	0.0.0.0.0.0.0.0.0.0.1.69.0.0.0.0.0.2	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 2; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	3.98946285248	5400
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.2.0.1.0.192.64.0.65.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0 H'1; only 1: generalize H'0; only 1: generalize H'0; only 1: intros H ?; only 1: generalize H'0; only 1: intros; only 1: inversion_clear H; only 1: generalize H'0; only 1: auto with sets; only 1: generalize H'0; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	19.0853061676	28911
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.0.1.64	synth with cache (only 1: intros x H; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.254638910294	117
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.0.0.0.0.0.0.2	synth with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.674862146378	713
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.1.0.65.0	synth with cache (only 1: intros B C x H'; only 1: destruct 1; only 1: auto using Add_intro2 with sets; only 1: right; only 1: assumption).	0.149071931839	71
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	65.65.0.0.192.64.1.1.128	synth with cache (only 1: intros x2 H'1; only 1: intros x H'0; only 1: apply Extensionality_Ensembles; only 1: generalize H'1; only 1: intro X; only 1: unfold Add; only 1: split; only 1: auto  10 with sets; only 1: auto  10 with sets).	2.73260402679	2325
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	65.0.0.65.128.192	synth with cache (only 1: intro H; only 1: intro p; only 1: intro X; only 1: intros x y; only 1: unfold Add; only 1: auto  10 with sets).	0.941536188126	819
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.192.192.64	synth with cache (only 1: intros H'0 H'1; only 1: intros x y; only 1: intros [Hl Hr]; only 1: auto with sets).	0.0649631023407	60
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0166289806366	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0203249454498	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.192.0.0.129.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: induction 1; only 1: unfold In in *; only 1: exfalso; only 1: reflexivity || destruct H; only 1: auto with sets).	0.492835044861	415
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.15873003006	109
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	0.0.0.0.0.192.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H; only 1: constructor; only 1: inversion H; only 1: intuition; only 1: inversion H; only 1: intuition; only 1: intros x H; only 1: constructor; only 1: inversion H; only 1: inversion H0; only 1: intuition; only 1: inversion H; only 1: inversion H0; only 1: inversion H0; only 1: induction 1; only 1: inversion H0; only 1: inversion H0; only 1: intuition; only 1: inversion H0; only 1: intuition).	4.84026503563	4265
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.0.130.129.0.0.128.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x1 H'0; only 1: unfold In in *; only 1: exfalso; only 1: generalize H'0; only 1: intros [Hl Hr]; only 1: intuition; only 1: intuition).	1.09112095833	1571
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	0.129.0.129.0.0.9	synth with cache (only 1: red; only 1: intros A B []; only 1: split; only 1: intros n m; only 1: trivial; only 1: intros n m; only 1: trivial).	0.680761814117	2049
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	12.64.68	synth with cache (only 1: intro; only 1: intro H1; only 1: elim H1).	0.558320999146	2382
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0	synth with cache (only 1: destruct 1).	0.00891613960266	1
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.65.1	synth with cache (only 1: intros x H; only 1: constructor; only 1: auto with sets).	0.122262954712	170
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0154399871826	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.10.2.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	1.10731291771	5110
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	1.66.1.2.2.134	synth with cache (only 1: induction 1; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H0 in H; only 1: auto with sets).	1.16531610489	4717
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.70.4.129.65.3.3.3	synth with cache (only 1: unfold Add at 1; only 1: red; only 1: intro H'1; only 1: intro x; only 1: intros H; only 1: elim (Noone_in_empty x); only 1: reflexivity || destruct H; only 1: auto using Add_intro2 with sets).	13.8383719921	81526
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.629914999008	1203
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0294840335846	24
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.0.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).	0.0179188251495	3
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.421401977539	573
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0188131332397	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	1.1.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.410233020782	348
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0161859989166	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0151669979095	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.128.1	synth with cache (only 1: intro; only 1: intros [Hl Hr]; only 1: auto with sets).	0.0842990875244	141
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.1.65	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.209858179092	469
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	0.450.448.0.193.1.64.5	synth with cache (only 1: intro x; only 1: intros a; only 1: intro H; only 1: elim H; only 1: auto with sets; only 1: intros n IH; only 1: fix gcd_divide 1; only 1: auto using incl_soustr_add_l with sets).	29.2857108116	76802
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40	0.132.194	synth with cache (only 1: intros x y; only 1: fix le_div2 1; only 1: auto with sets).	19.5391919613	8471
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40	0.257.70	synth with cache (only 1: intros f Hf; only 1: fix le_div2 1; only 1: auto with sets).	32.3389229774	72323
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40	1.449.192.64.0	synth with cache (only 1: intros X c1 H'; only 1: intro H'5; only 1: intros n; only 1: fix gcd_greatest 1; only 1: auto using add_soustr_1 with sets).	0.59493803978	534
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40