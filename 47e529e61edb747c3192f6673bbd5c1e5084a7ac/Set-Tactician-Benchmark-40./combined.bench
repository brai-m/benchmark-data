
Coq.Init.Wf.Well_founded.Acc_inv	40	7.10.1	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.999660015106	2356
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0114669799805	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00967001914978	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	1.46	synth with cache (only 1: intros f [x]; only 1: auto).	0.609869003296	2981
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	0.22.5.1.42.15.12	synth with cache (only 1: intro; only 1: intro; only 1: intro H; only 1: destruct r using Acc_inv_dep; only 1: destruct H; only 1: simpl; only 1: auto).	31.8754968643	180807
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00745797157288	2
Coq.Init.Peano.not_eq_S	40	5.2.1.2	synth with cache (only 1: red; only 1: intros h1 h2; only 1: intro H; only 1: auto).	0.11593914032	175
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.0112988948822	14
Coq.Init.Peano.n_Sn	40	3.0.4.27.5	synth with cache (only 1: red; only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: auto).	1.53859591484	7864
Coq.Init.Peano.plus_n_O	40	0.4.0.2.21	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.25724697113	764
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0150480270386	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.014848947525	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0180749893188	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.014524936676	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0125050544739	6
Coq.Init.Peano.le_n_S	40	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.025985956192	23
Coq.Init.Peano.nat_case	40	0.1.5.5	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.120799064636	256
Coq.Init.Peano.nat_double_ind	40	0.2.2.12.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: auto).	0.639372110367	1696
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	27.0761349201	20760
Coq.Init.Peano.min_l	40	0.0.1.0.2.0.3.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	8.56486105919	5071
Coq.Init.Peano.min_r	40	0.0.1.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.29154109955	3622
Coq.Init.Peano.nat_rect_succ_r	40	5.6.1.0.5	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: reflexivity).	0.816380023956	2006
Coq.Init.Peano.nat_rect_plus	40	0.0.1.4.0.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.130676984787	106
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.0.7.35	synth with cache (only 1: intro H; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	1.26026010513	7481
Coq.Init.Datatypes.eq_true_ind_r	40	0.6.25.0	synth with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).	0.35232591629	1976
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0078341960907	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00820398330688	3
Coq.Init.Datatypes.surjective_pairing	40	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: reflexivity).	0.0117909908295	12
Coq.Init.Datatypes.injective_projections	40	0.1.2.4.13.7	synth with cache (only 1: intros A B []; only 1: intros [Hl Hr]; only 1: simpl in *; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	1.56400799751	5041
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0105490684509	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.014004945755	6
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	9.34037303925	22751
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00206208229065	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	0.0.0.1.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00481104850769	11
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00309014320374	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.1.0.1.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.089282989502	666
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0899250507355	359
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.57275390625	2796
Coq.Init.Logic.imp_iff_compat_l	40	8.8.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.110737085342	735
Coq.Init.Logic.imp_iff_compat_r	40	2.0.2.0.2.1.2.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.254894971848	1057
Coq.Init.Logic.not_iff_compat	40	3.4.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0206799507141	64
Coq.Init.Logic.neg_false	40	0.0.11.0.0.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.218392848969	1117
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.072282075882	83
Coq.Init.Logic.and_assoc	40	9.3.0.0.1.0.2.0.0.8.0.6.0.0	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: apply H; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: assumption; only 1: apply HypR; only 1: apply HypR).	10.2849071026	52141
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.428789138794	806
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	3.0	synth with cache (only 1: intros; only 1: assumption).	0.00792908668518	5
Coq.Init.Logic.iff_to_and	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0173370838165	10
Coq.Init.Logic.universal_quantification.inst	40	9	synth with cache (only 1: auto).	0.00957608222961	19
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.00542807579041	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.4.3.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.0655159950256	158
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.4	synth with cache (only 1: destruct 1; only 1: trivial).	0.00746297836304	6
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00824308395386	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00631308555603	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00651788711548	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	20.1	synth with cache (only 1: destruct 2; only 1: auto).	0.185183048248	788
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.0.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.00984215736389	7
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00945210456848	4
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00953888893127	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00984191894531	4
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.1.1.3	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0175969600677	9
Coq.Init.Logic.rew_opp_r	40	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.010153055191	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0115931034088	3
Coq.Init.Logic.f_equal2	40	0.3.0.0.1	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 2; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.0155889987946	9
Coq.Init.Logic.f_equal3	40	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0132279396057	5
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0161368846893	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0203881263733	6
Coq.Init.Logic.f_equal_compose	40	0.13.1.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.472041130066	989
Coq.Init.Logic.eq_trans_refl_l	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00922608375549	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00813007354736	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00940704345703	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0104179382324	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00942087173462	2
Coq.Init.Logic.eq_trans_assoc	40	1.2.2.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0131511688232	9
Coq.Init.Logic.rew_map	40	0.11	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0910019874573	106
Coq.Init.Logic.eq_trans_map	40	4.26.2.9.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	11.3564078808	50353
Coq.Init.Logic.map_subst	40	1.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0113210678101	3
Coq.Init.Logic.map_subst_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0129117965698	3
Coq.Init.Logic.rew_swap	40	4.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0151131153107	8
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0143148899078	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0116531848907	2
Coq.Init.Logic.eq_trans_map_distr	40	2.3.1.16.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.915969133377	2386
Coq.Init.Logic.eq_sym_map_distr	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0115070343018	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.1	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0203418731689	14
Coq.Init.Logic.eq_trans_rew_distr	40	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.016988992691	14
Coq.Init.Logic.rew_const	40	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0137259960175	15
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	5.0.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.012638092041	8
Coq.Init.Logic.inhabited_covariant	40	0.0.5	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.0127079486847	16
Coq.Init.Logic.eq_stepl	40	2.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0890440940857	117
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.013023853302	4
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0298459529877	18
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0181500911713	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0076949596405	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00631093978882	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00579595565796	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0102088451385	5
Coq.Init.Logic_Type.identity_ind_r	40	0.10.7	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).	0.114485025406	548
Coq.Init.Logic_Type.identity_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00848722457886	4
Coq.Init.Logic_Type.identity_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00742983818054	4
Coq.Init.Specif.sigT_eta	40	0.31	synth with cache (only 1: destruct p; only 1: reflexivity).	0.12803196907	571
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0093150138855	2
Coq.Init.Specif.sigT2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0110669136047	2
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0110239982605	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.1.12	synth with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.0938711166382	205
Coq.Init.Specif.inhabited_sig_to_exists	40	1.0.0.48.44	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: trivial).	1.86614012718	25867
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0185339450836	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0167090892792	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	1.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.0215289592743	3
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.35	synth with cache (only 1: subst; only 1: reflexivity).	3.44032287598	6233
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.4.29.0	synth with cache (only 1: destruct p', q'; only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).	3.15980291367	5358
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0217690467834	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0221271514893	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.1.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.039806842804	7
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	5.2.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	0.959764957428	693
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.113765001297	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.4.4.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.747861862183	591
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	4.2.2.0.0.2.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	4.0186560154	3081
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0305428504944	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.030308008194	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.1.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0547909736633	7
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	9.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	8.59880399704	5953
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0313429832458	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0151259899139	3