
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	31.22.27.59	search with cache (only 1: intros x y H z; only 1: generalize x, y; only 1: intros; only 1: now elim H).	27.9370019436	92687
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0108349323273	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0112979412079	2
Coq.micromega.OrderedRing.Rplus_comm	40	12.12.7	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.443634033203	1068
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0121898651123	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0126659870148	2
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40	6.0.1.5.0.11.4.8.0	search with cache (only 1: intros; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: left; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: auto).	31.2160930634	32237
Coq.micromega.OrderedRing.Rlt_neq	40	0.4.9	search with cache (only 1: intros; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.210228919983	348
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.2.3.0.9	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	1.67865896225	1685
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	1.0	search with cache (only 1: intros; only 1: now subst).	0.0328228473663	3
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	1.0	search with cache (only 1: intros; only 1: Z.order).	0.01518201828	3
Coq.micromega.Ztac.elim_concl_lt	40	4.0	search with cache (only 1: intros; only 1: Z.order).	0.118052959442	93
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	5.0	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.0266079902649	7
Coq.micromega.Ztac.mul_le	40
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0411579608917	2
Coq.micromega.ZifyInst.PropArrow	40	0.147	search with cache (only 1: constructor; only 1: tauto).	4.93184804916	11276
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0711529254913	2
Coq.micromega.ZifyInst.PropNot	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0217261314392	2
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	6.3.3.61	search with cache (only 1: destruct x; only 1: tauto; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	1.47419786453	3415
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40	1.0.5.25.9.11.8	search with cache (only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: destruct (SORsetoid sor) as (_, Equivalence_Symmetric, _); only 1: destruct (SORsetoid sor) as (_, _, Equivalence_Transitive); only 1: split; only 1: exact (SORplus_wd sor); only 1: exact (SORtimes_wd sor); only 1: exact (SORopp_wd sor)).	5.08016395569	16309
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.1.0.1	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.027291059494	20
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.3.0.1	search with cache (only 1: intros; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.108289957047	23
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	1.6.14.4.57	search with cache (only 1: induction x as [x IH| x IH| ]; only 1: now f_equal; only 1: easy; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy).	6.69735789299	7588
Coq.micromega.ZMicromega.lt_le_iff	40	1.7.1.7.4.74	search with cache (only 1: destruct x; only 1: now f_equal; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy).	14.0190429688	14767
Coq.micromega.ZMicromega.le_0_iff	40	0.0.0.35.0	search with cache (only 1: intros; only 1: generalize 1; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	2.23255109787	1539
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40	1.8.1.8.4.76	search with cache (only 1: destruct x; only 1: now f_equal; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy).	18.7876689434	20309
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.1.0.0.0.1.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	5.78276491165	6486
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	2	search with cache (only 1: tauto).	0.018895149231	3
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	1.1.61.70	search with cache (only 1: destruct x; only 1: now f_equiv; only 1: intuition congruence; only 1: intuition congruence).	10.1696250439	32260
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	1.2.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: auto).	0.0210809707642	6
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	3.0.1.0.3.0.1.0.89	search with cache (only 1: destruct x; only 1: split; only 1: compute; only 1: congruence; only 1: auto with zarith; only 1: split; only 1: compute; only 1: congruence; only 1: auto with zarith).	13.8465080261	55793
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	12.12.6.0	search with cache (only 1: destruct x; only 1: now f_equal; only 1: easy; only 1: easy).	1.00618910789	1564
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	1.2.22	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	1.07448005676	1737
Coq.micromega.Env.nth_pred_double	40	0.0.22	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.874316215515	1439
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	2.2.0	search with cache (only 1: induction l as [| a l IH]; only 1: constructor; only 1: constructor).	0.0100998878479	7
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	0.0.8.25	search with cache (only 1: intros x H2; only 1: elim H2; only 1: congruence; only 1: congruence).	0.734030008316	1974
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: reflexivity).	0.00531792640686	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00514578819275	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	2.3.0.42	search with cache (only 1: intros [| ]; only 1: reflexivity; only 1: simpl; only 1: congruence).	1.76673388481	3861
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.2.1.8	search with cache (only 1: destruct f; only 1: reflexivity; only 1: simpl; only 1: congruence).	0.0768480300903	166
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	4.5.2.12.1.2.12	search with cache (only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	25.8936970234	77377
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.1.0.1.1.7.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: congruence).	0.536469936371	986
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	0.0.6.13.11.11.3	search with cache (only 1: intros; only 1: clear; only 1: constructor; only 1: destruct 1; only 1: red; only 1: tauto; only 1: tauto).	10.410918951	19034
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0123698711395	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	38	search with cache (only 1: eauto).	0.950363874435	1189
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	1.9.3.1.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: repeat rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	1.94712495804	884
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.1.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0385520458221	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	10.10.10.89	search with cache (only 1: destruct x; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	17.7387640476	62598
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	21	search with cache (only 1: exact (Radd_ext Reqe)).	0.080904006958	208
Coq.micromega.EnvRing.rmul_ext_Proper	40	22	search with cache (only 1: exact (Rmul_ext Reqe)).	0.103724002838	231
Coq.micromega.EnvRing.ropp_ext_Proper	40	22	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0988230705261	231
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.39	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.643451929092	1136
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.1.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0436210632324	5
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0315589904785	5
Coq.micromega.EnvRing.mkZmon_ok	40	1.1.1.75	search with cache (only 1: induction M; only 1: Esimpl; only 1: now jump_simpl; only 1: now jump_simpl).	13.2645421028	12936
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	3.48.0	search with cache (only 1: intros; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	4.58972501755	7349
Coq.micromega.RingMicromega.eval_pol_mul	40	4.67.0	search with cache (only 1: intros; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	11.6298120022	19858
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	18.25.36	search with cache (only 1: induction l as [| x xs Hl]; only 1: constructor; only 1: firstorder).	4.95389294624	26547
Coq.micromega.Refl.make_impl_map	40
Coq.micromega.Refl.make_conj_cons	40	34.17.27	search with cache (only 1: destruct l as [| x l]; only 1: now constructor; only 1: firstorder).	11.1888480186	48327
Coq.micromega.Refl.make_conj_impl	40	0.0.3.20.0.2.25.0	search with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: tauto).	17.9842078686	57801
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	20.31.3	search with cache (only 1: intros i j Hi E; only 1: rewrite make_conj_cons; only 1: firstorder).	32.5157899857	51545
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	4.22	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: auto with real arith).	0.424854040146	381
Coq.micromega.RMicromega.Q2R_1	40	0.5.27	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: rewrite RIneq.Rinv_1; only 1: auto with real rorders).	0.450600147247	606
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	2.0.2.1.2.0.0.2.1.10.15.0.0.0	search with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: intro l; only 1: easy; only 1: intros; only 1: easy; only 1: congruence; only 1: simpl; only 1: case n; only 1: intros; only 1: easy; only 1: intros n0 H'0; only 1: easy).	9.22246909142	26590
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40
Coq.rtauto.Bintree.length_map	40	5.1.1.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0574071407318	75
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	1.1.1.24.4	search with cache (only 1: intros; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.345017910004	1344
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.4.4.22	search with cache (only 1: destruct i; only 1: reflexivity || congruence; only 1: reflexivity || congruence; only 1: reflexivity || congruence).	0.266571998596	1195
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.1.27.7.1	search with cache (only 1: unfold empty, get; only 1: intro H; only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	8.68964409828	48343
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	2.0.13.0.4.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B H; only 1: intro m; only 1: apply IHF; only 1: auto).	2.14156699181	7956
Coq.rtauto.Rtauto.compose3	40	0.0.14.1.1.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B C H; only 1: intro m; only 1: apply IHF; only 1: auto).	1.70435714722	5745
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	0.0.2.1.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: cring).	0.532611131668	20
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	17	search with cache (only 1: repeat split).	1.10316801071	394
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	27	search with cache (only 1: trivial).	0.0402328968048	361
Coq.nsatz.Nsatz.Rcri	40	14.3.3.9	search with cache (only 1: intros eps H9; only 1: red; only 1: red; only 1: auto with real).	0.219699144363	1045
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.0340280532837	1
Coq.nsatz.Nsatz.Zcri	40	54	search with cache (only 1: auto with *).	0.657225131989	4750
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	search with cache (only 1: now Z.nzsimpl).	0.185228824615	4
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	3	search with cache (only 1: now Z.nzsimpl).	0.128556013107	4
Coq.omega.OmegaLemmas.Zred_factor6	40	4.1	search with cache (only 1: symmetry; only 1: now Z.nzsimpl).	0.0641329288483	7
Coq.omega.OmegaLemmas.new_var	40	0.4.2.0.4.2.85.76	search with cache (only 1: apply lt_wf_ind; only 1: left; only 1: intros; only 1: apply lt_wf_ind; only 1: trivial; only 1: intros; only 1: exists x; only 1: trivial).	15.7178590298	71246
Coq.omega.OmegaLemmas.OMEGA1	40	1.10	search with cache (only 1: intro H; only 1: now subst).	0.342401027679	47
Coq.omega.OmegaLemmas.OMEGA2	40	4.0	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.0262229442596	6
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	7.0.9.0.13.7	search with cache (only 1: apply lt_wf_ind; only 1: left; only 1: intros n H q; only 1: subst; only 1: intros; only 1: now subst).	5.54229307175	4852
Coq.omega.OmegaLemmas.OMEGA6	40	3.20.11.2.13.7	search with cache (only 1: apply lt_wf_ind; only 1: left; only 1: intros; only 1: subst; only 1: Z.nzsimpl; only 1: auto).	35.3032689095	51243
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.2.1.1.1	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.269763946533	12
Coq.omega.OmegaLemmas.OMEGA15	40	2.2.0.3	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.604712963104	112
Coq.omega.OmegaLemmas.OMEGA16	40	2.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal).	0.0194959640503	5
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0604810714722	2
Coq.omega.OmegaLemmas.OMEGA18	40	0.0.8.4	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: subst; only 1: auto).	0.620548963547	183
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0686061382294	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.mod_0_r_ext	40	1.1.0.38.30	search with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: now subst; only 1: now subst).	5.08821105957	10146
Coq.omega.PreOmega.div_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0128309726715	6
Coq.omega.PreOmega.rem_0_r_ext	40	3.3.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.0856099128723	118
Coq.omega.PreOmega.quot_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.012845993042	6
Coq.omega.PreOmega.rem_bound_pos_pos	40
Coq.omega.PreOmega.rem_bound_neg_pos	40
Coq.omega.PreOmega.rem_bound_pos_neg	40
Coq.omega.PreOmega.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.33.14	search with cache (only 1: destruct H; only 1: simpl in *; only 1: tauto).	0.845187187195	4847
Coq.btauto.Algebra.Decidable_complete	40	3.2.14.15	search with cache (only 1: destruct H; only 1: generalize 1%positive; only 1: simpl; only 1: tauto).	1.59523296356	3677
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40	36.2.16	search with cache (only 1: destruct H; only 1: simpl; only 1: intuition congruence).	5.63722491264	25722
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	1.1.0.2.0.0.0.1	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.324167013168	345
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	12.5.10	search with cache (only 1: zify; only 1: induction H; only 1: auto).	0.564853906631	669
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	2	search with cache (only 1: tauto).	0.0201380252838	3
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	31.1	search with cache (only 1: intros EQ; only 1: auto with arith).	0.417979955673	1234
Coq.funind.Recdef.Splus_lt	40	2.1.31	search with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.384166002274	3175
Coq.funind.Recdef.SSplus_lt	40	1.5.5	search with cache (only 1: apply Nat.nlt_ge; only 1: apply Nat.nlt_ge; only 1: auto with arith).	0.112257003784	128
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.00850987434387	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	2	search with cache (only 1: now f_equal).	0.0108120441437	3
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	0	search with cache (only 1: assumption).	0.0120718479156	1
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0122368335724	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40	0.6.0	search with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).	0.593044042587	202
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	0.0.0	search with cache (only 1: intros; only 1: Esimpl; only 1: Esimpl).	0.28297495842	3
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	8.0	search with cache (only 1: intros; only 1: apply norm_aux_spec).	0.208512067795	14
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	5	search with cache (only 1: trivial).	0.0162630081177	6
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	7	search with cache (only 1: eauto).	0.0488770008087	11
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	18	search with cache (only 1: eauto).	0.774864912033	287
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40	26.6	search with cache (only 1: rewrite rdiv_def; only 1: eauto).	7.95314407349	1263
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0739789009094	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0617311000824	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	6.2.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.25199508667	113
Coq.setoid_ring.Field_theory.PEpow_0_r	40	13.0	search with cache (only 1: intros l; only 1: eauto).	0.597388982773	357
Coq.setoid_ring.Field_theory.PEpow_1_r	40	4.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.0354061126709	7
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.14.1.0	search with cache (only 1: destruct l1; only 1: trivial; only 1: destruct 1; only 1: trivial).	1.77222323418	1123
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.2	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.105795860291	26
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	0.5.2	search with cache (only 1: intro l; only 1: destruct 1; only 1: trivial).	0.0819959640503	24
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0.3.7.36.0.25.187	search with cache (only 1: split; only 1: intros HH; only 1: trivial; only 1: easy; only 1: intros l subst_l_ok res P p; only 1: subst; only 1: trivial).	14.7598290443	42413
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	2.2.2.1	search with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.100697994232	122
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	1.6.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0134139060974	10
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	14.3.3.9	search with cache (only 1: intros eps H9; only 1: red; only 1: red; only 1: auto with real).	0.264802932739	1045
Coq.setoid_ring.Rings_R.R_one_zero	40	27	search with cache (only 1: trivial).	0.0660469532013	361
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	2	search with cache (only 1: reflexivity).	0.0136451721191	3
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	179	search with cache (only 1: now N.nzsimpl').	1.37364506721	17124
Coq.setoid_ring.Ring_theory.IDmorph	40	74	search with cache (only 1: now N.nzsimpl').	3.79980707169	13253
Coq.setoid_ring.Ring_theory.Eqsth	40
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	23.23.32	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	1.90911102295	6079
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0834419727325	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	23	search with cache (only 1: trivial).	0.117825984955	282
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.2.3.5	search with cache (only 1: constructor; only 1: exact (SRadd_ext SReqe); only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.215754985809	168
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	6	search with cache (only 1: solve_proper).	0.0142951011658	7
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0123100280762	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0122439861298	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	33.3.0.0.0.3.3.4	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	11.551787138	41673
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	16	search with cache (only 1: trivial).	0.353448152542	304
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	1	search with cache (only 1: mrewrite).	0.0280528068542	2
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0304231643677	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0110070705414	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.4.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0182199478149	8
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0120878219604	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	7	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0807189941406	24
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	6	search with cache (only 1: exact (Radd_ext Reqe)).	0.0360660552979	25
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	7	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0375499725342	26
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	5	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0282480716705	22
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0116600990295	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.1.0.1.1.1.16	search with cache (only 1: induction w; only 1: destruct n; only 1: norm; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	5.98620009422	2637
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.3.0.0	search with cache (only 1: induction x; only 1: simpl; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.0270290374756	8
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	10	search with cache (only 1: exact (Radd_ext Reqe)).	0.110837221146	47
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	11	search with cache (only 1: exact (Rmul_ext Reqe)).	0.207163095474	69
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	11	search with cache (only 1: exact (Ropp_ext Reqe)).	0.107629060745	63
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	6	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0240359306335	13
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	73	search with cache (only 1: now f_equal).	10.8040320873	2730
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	21	search with cache (only 1: exact (Radd_ext Reqe)).	0.0756540298462	208
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	22	search with cache (only 1: exact (Rmul_ext Reqe)).	0.169189929962	231
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	22	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0921580791473	231
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.39	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.742170095444	1136
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40
Coq.setoid_ring.Ring_polynom.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	1.2.1.0.0.0.1.0.0.1.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: intros; only 1: Esimpl; only 1: rewrite IHP2; only 1: Esimpl).	16.0296199322	8076
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	5.0.2	search with cache (only 1: intro x; only 1: intros; only 1: reflexivity).	0.0137519836426	10
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.0.1	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.016096830368	5
Coq.setoid_ring.Ncring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.0.1.57.1	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	23.3361151218	14812
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.0.5.7	search with cache (only 1: intros x y H7; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	0.240091085434	423
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	43	search with cache (only 1: exact Qmult_comm).	1.81591701508	2626
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0106730461121	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00436902046204	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.120	search with cache (only 1: unlock; only 1: discriminate).	5.21180200577	55914
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	33	search with cache (only 1: by case : k ).	0.0976479053497	595
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.3.3	search with cache (only 1: intro H; only 1: destruct H; only 1: trivial).	0.0104458332062	13
Coq.ssr.ssreflect.iffLR	40	0.1	search with cache (only 1: intros; only 1: tauto).	0.00910902023315	3
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.00702691078186	1
Coq.ssr.ssreflect.iffLRn	40	3	search with cache (only 1: tauto).	0.0152249336243	4
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.00777077674866	1
Coq.ssr.ssreflect.abstract_context	40	0.163.129	search with cache (only 1: intro H; only 1: apply H; only 1: trivial).	13.8958799839	194313
Coq.ssr.ssrbool.prop_congr	40	0.1	search with cache (only 1: induction 1; only 1: tauto).	0.00738501548767	3
Coq.ssr.ssrbool.is_true_true	40	40	search with cache (only 1: by [  ]).	0.0474729537964	816
Coq.ssr.ssrbool.not_false_is_true	40	6.16	search with cache (only 1: intro H; only 1: discriminate).	0.0362899303436	276
Coq.ssr.ssrbool.is_true_locked_true	40	5.144	search with cache (only 1: unlock; only 1: by [  ]).	1.79517102242	27253
Coq.ssr.ssrbool.negbT	40	0.3.16	search with cache (only 1: intro x; only 1: subst; only 1: by [  ]).	0.0512959957123	346
Coq.ssr.ssrbool.negbTE	40	65	search with cache (only 1: by case : b ).	2.41823291779	22061
Coq.ssr.ssrbool.negbF	40	0.32	search with cache (only 1: inversion 1; only 1: reflexivity).	0.176251888275	1259
Coq.ssr.ssrbool.negbFE	40	42	search with cache (only 1: by case : b ).	0.379886865616	3197
Coq.ssr.ssrbool.negbK	40	3	search with cache (only 1: by case).	0.00584888458252	4
Coq.ssr.ssrbool.negbNE	40	0.15	search with cache (only 1: red; only 1: by case : b ).	0.0203990936279	152
Coq.ssr.ssrbool.negb_inj	40	11.61	search with cache (only 1: red; only 1: Bool.destr_bool).	0.818176031113	6379
Coq.ssr.ssrbool.negbLR	40	0.8.0.8.153.0	search with cache (only 1: intros; only 1: destruct c; only 1: subst; only 1: reflexivity; only 1: subst; only 1: reflexivity).	9.61184096336	124529
Coq.ssr.ssrbool.negbRL	40	18.6.0	search with cache (only 1: intros; only 1: destruct H; only 1: by case : b ).	0.123346090317	984
Coq.ssr.ssrbool.contra	40	3.18.155	search with cache (only 1: destruct c; only 1: by case : b ; only 1: trivial).	13.0645461082	113006
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.00839114189148	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.00693106651306	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.00685811042786	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  => // ->).	0.00674510002136	1
Coq.ssr.ssrbool.contraFT	40
Coq.ssr.ssrbool.contraFN	40	27.18.20.18	search with cache (only 1: intros; only 1: subst; only 1: red; only 1: intuition).	2.16480302811	12861
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0058708190918	1
Coq.ssr.ssrbool.ifT	40	2.12.5	search with cache (only 1: intros; only 1: rewrite H; only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.161518096924	403
Coq.ssr.ssrbool.ifF	40	2	search with cache (only 1: by move ->).	0.00680613517761	3
Coq.ssr.ssrbool.ifN	40	86	search with cache (only 1: by case : b  => //; case : c ).	1.64553403854	13822
Coq.ssr.ssrbool.if_same	40	0	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.00496602058411	1
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.00400495529175	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.00483798980713	1
Coq.ssr.ssrbool.if_arg	40	8	search with cache (only 1: by case b).	0.00565099716187	9
Coq.ssr.ssrbool.ifE	40	10	search with cache (only 1: reflexivity).	0.0133759975433	21
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0081467628479	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.00716185569763	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by move <-; case Hb).	0.00474405288696	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	6.6.13.29	search with cache (only 1: intro H; only 1: destruct H; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.08533000946	3587
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	11.27	search with cache (only 1: destruct 1; only 1: by case : Pb ; constructor; auto).	0.365772008896	841
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	16	search with cache (only 1: by case Pb).	0.140733003616	108
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	3.4.2.7	search with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: tauto).	0.153430938721	272
Coq.ssr.ssrbool.impliesPn	40	6.11.45.6	search with cache (only 1: intro H; only 1: destruct H; only 1: intros h1 h2; only 1: tauto).	3.46097207069	18183
Coq.ssr.ssrbool.unlessL	40	1.0.21.72	search with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).	0.69317817688	5301
Coq.ssr.ssrbool.unlessR	40	1.0.22.73	search with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).	0.729016065598	5547
Coq.ssr.ssrbool.unless_sym	40	1.0.1.0.17.23.22.73	search with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	4.40137600899	33920
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	1.24	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.0603260993958	334
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	2.0.3.2.0.3.161	search with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	2.47093820572	21146
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.00861597061157	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.00873684883118	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0103960037231	1
Coq.ssr.ssrbool.pair_andP	40	100	search with cache (only 1: tauto).	2.16881608963	14345
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	2	search with cache (only 1: by case b1; constructor).	0.00491619110107	3
Coq.ssr.ssrbool.idPn	40	3	search with cache (only 1: by case b1; constructor).	0.00521302223206	4
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.00574398040771	1
Coq.ssr.ssrbool.negPn	40	4	search with cache (only 1: by case b1; constructor; auto).	0.0055410861969	5
Coq.ssr.ssrbool.negPf	40	3	search with cache (only 1: by case b1; constructor; auto).	0.00628399848938	4
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	9	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0358140468597	10
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.00823783874512	1
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.00610208511353	2
Coq.ssr.ssrbool.andTb	40	1	search with cache (only 1: constructor).	0.00502681732178	2
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.00410294532776	1
Coq.ssr.ssrbool.andbT	40	58	search with cache (only 1: case  =>// undecP).	0.560532808304	3115
Coq.ssr.ssrbool.andbF	40	2	search with cache (only 1: by case).	0.00542521476746	3
Coq.ssr.ssrbool.andbb	40	3	search with cache (only 1: by case).	0.00596618652344	4
Coq.ssr.ssrbool.andbC	40	22.35	search with cache (only 1: intro H; only 1: intuition).	0.407386064529	2231
Coq.ssr.ssrbool.andbA	40	3	search with cache (only 1: by case).	0.00637602806091	4
Coq.ssr.ssrbool.andbCA	40	1	search with cache (only 1: by do 2!case).	0.00678992271423	2
Coq.ssr.ssrbool.andbAC	40	14	search with cache (only 1: by do 3!case).	0.0332050323486	75
Coq.ssr.ssrbool.andbACA	40	14	search with cache (only 1: by do 3!case).	0.0366377830505	75
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: Bool.destr_bool).	0.00656199455261	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.0040397644043	1
Coq.ssr.ssrbool.orbT	40	1	search with cache (only 1: Bool.destr_bool).	0.00757098197937	2
Coq.ssr.ssrbool.orbF	40	2	search with cache (only 1: by case).	0.00575685501099	3
Coq.ssr.ssrbool.orbb	40	3	search with cache (only 1: by case).	0.00587487220764	4
Coq.ssr.ssrbool.orbC	40	1	search with cache (only 1: by do 2!case).	0.00584697723389	2
Coq.ssr.ssrbool.orbA	40	3	search with cache (only 1: by case).	0.00663089752197	4
Coq.ssr.ssrbool.orbCA	40	1	search with cache (only 1: by do 2!case).	0.00674414634705	2
Coq.ssr.ssrbool.orbAC	40	14	search with cache (only 1: by do 3!case).	0.0357160568237	75
Coq.ssr.ssrbool.orbACA	40	14	search with cache (only 1: by do 3!case).	0.0380251407623	75
Coq.ssr.ssrbool.andbN	40	16	search with cache (only 1: by case : b ).	0.0303430557251	160
Coq.ssr.ssrbool.andNb	40	16	search with cache (only 1: by case : b ).	0.0297219753265	160
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : b ).	0.00476598739624	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.00435996055603	1
Coq.ssr.ssrbool.andb_orl	40	5.24	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.234694004059	501
Coq.ssr.ssrbool.andb_orr	40	2	search with cache (only 1: by case).	0.00633692741394	3
Coq.ssr.ssrbool.orb_andl	40	4	search with cache (only 1: by do 3!case).	0.0109379291534	5
Coq.ssr.ssrbool.orb_andr	40	2	search with cache (only 1: by case).	0.00682687759399	3
Coq.ssr.ssrbool.andb_idl	40	0.0.2.14.0.0.136.19	search with cache (only 1: intros; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: destruct H; only 1: trivial; only 1: trivial; only 1: trivial).	9.22440218925	60592
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.00858187675476	1
Coq.ssr.ssrbool.andb_id2l	40
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.012895822525	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.00862288475037	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.00822401046753	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0126798152924	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.012797832489	1
Coq.ssr.ssrbool.negb_and	40	55	search with cache (only 1: by case : a ; case : b  => // ->).	0.355914115906	1551
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.00600099563599	1
Coq.ssr.ssrbool.andbK	40	15	search with cache (only 1: by case : a ; case : b ).	0.130120038986	91
Coq.ssr.ssrbool.andKb	40	15	search with cache (only 1: by case : a ; case : b ).	0.129686117172	91
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.00632905960083	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00491881370544	1
Coq.ssr.ssrbool.implybT	40	4	search with cache (only 1: by case : b ).	0.00542497634888	5
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: tauto).	0.00322508811951	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.00349092483521	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: trivial).	0.00306606292725	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : b ).	0.00434684753418	2
Coq.ssr.ssrbool.negb_imply	40	16	search with cache (only 1: by case : a ; case : b ).	0.0406498908997	108
Coq.ssr.ssrbool.implybE	40	15	search with cache (only 1: by case : a ; case : b ).	0.0374510288239	91
Coq.ssr.ssrbool.implyNb	40	15	search with cache (only 1: by case : a ; case : b ).	0.0379168987274	91
Coq.ssr.ssrbool.implybN	40	15	search with cache (only 1: by case : a ; case : b ).	0.0308990478516	91
Coq.ssr.ssrbool.implybNN	40	15	search with cache (only 1: by case : a ; case : b ).	0.0391471385956	91
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0117039680481	1
Coq.ssr.ssrbool.implyb_idr	40	62	search with cache (only 1: by case : a ; case : b  => // ->).	1.2158138752	3462
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0163819789886	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00670599937439	1
Coq.ssr.ssrbool.addbF	40	2	search with cache (only 1: by case).	0.00608396530151	3
Coq.ssr.ssrbool.addbb	40	2	search with cache (only 1: by case).	0.00625705718994	3
Coq.ssr.ssrbool.addbC	40	1	search with cache (only 1: by do 2!case).	0.00590682029724	2
Coq.ssr.ssrbool.addbA	40	8	search with cache (only 1: by do 3!case).	0.0148050785065	9
Coq.ssr.ssrbool.addbCA	40	1	search with cache (only 1: by do 2!case).	0.00794005393982	2
Coq.ssr.ssrbool.addbAC	40	14	search with cache (only 1: by do 3!case).	0.0387861728668	75
Coq.ssr.ssrbool.addbACA	40	19	search with cache (only 1: by do 4!case).	0.115087032318	165
Coq.ssr.ssrbool.andb_addl	40	4	search with cache (only 1: by do 3!case).	0.0142240524292	5
Coq.ssr.ssrbool.andb_addr	40	2	search with cache (only 1: by case).	0.00836682319641	3
Coq.ssr.ssrbool.addKb	40	7	search with cache (only 1: by do 2!case).	0.0102479457855	8
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by do 2!case).	0.00692415237427	1
Coq.ssr.ssrbool.addIb	40	4	search with cache (only 1: by do 3!case).	0.0296778678894	5
Coq.ssr.ssrbool.addbI	40	4	search with cache (only 1: by do 3!case).	0.0153238773346	5
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.00711297988892	1
Coq.ssr.ssrbool.addbT	40	0	search with cache (only 1: by case : b ).	0.00581502914429	1
Coq.ssr.ssrbool.addbN	40	15	search with cache (only 1: by case : a ; case : b ).	0.0396730899811	91
Coq.ssr.ssrbool.addNb	40	15	search with cache (only 1: by case : a ; case : b ).	0.0399107933044	91
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40	20.12.37	search with cache (only 1: red; only 1: simpl in *; only 1: by move  =>b b' ->).	0.92071390152	7049
Coq.ssr.ssrbool.subrelUr	40	32.26.3.39	search with cache (only 1: intro x; only 1: simpl in *; only 1: red; only 1: intuition).	6.07057499886	50356
Coq.ssr.ssrbool.sub_refl	40	0.11	search with cache (only 1: red; only 1: trivial).	0.0114510059357	46
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	4	search with cache (only 1: by case : pT pp ).	0.00640606880188	5
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	1	search with cache (only 1: by case : msp  => _ /= ->).	0.00679707527161	2
Coq.ssr.ssrbool.unfold_in	40	1	search with cache (only 1: trivial).	0.00427389144897	2
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: trivial).	0.00393509864807	1
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: trivial).	0.00456595420837	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.00567603111267	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	1	search with cache (only 1: auto).	0.00524878501892	2
Coq.ssr.ssrbool.in1W	40	2.8.9	search with cache (only 1: intros; only 1: intro x; only 1: auto).	0.161217927933	368
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.00598382949829	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.00561809539795	1
Coq.ssr.ssrbool.in1T	40	4	search with cache (only 1: auto).	0.011027097702	5
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0112271308899	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0131711959839	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0126268863678	2
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  =>? ?; auto).	0.014899969101	3
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0202639102936	4
Coq.ssr.ssrbool.on1W	40	3	search with cache (only 1: by move  =>? ?).	0.00877404212952	4
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0046501159668	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0055251121521	1
Coq.ssr.ssrbool.on1T	40	4	search with cache (only 1: by move  =>? ?; auto).	0.0128691196442	5
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0118589401245	2
Coq.ssr.ssrbool.on2T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0056459903717	1
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0128171443939	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.00788998603821	1
Coq.ssr.ssrbool.subon2	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0185420513153	4
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	11.49.17	search with cache (only 1: intros; only 1: subst; only 1: auto).	2.22909903526	6312
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	4	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0220711231232	5
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.00717997550964	1
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.00768995285034	3
Coq.ssr.ssrbool.inW_bij	40	3.3.91.93	search with cache (only 1: intros [x y]; only 1: exists x; only 1: by move  =>? ?; only 1: by move  =>? ?).	34.9508068562	145039
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0075671672821	1
Coq.ssr.ssrbool.inT_bij	40	3	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.011234998703	4
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.010125875473	1
Coq.ssr.ssrbool.sub_in_bij	40	3.23	search with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.26961684227	370
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0136201381683	1
Coq.ssr.ssrbool.sub_in2	40	11.43.2	search with cache (only 1: intros; only 1: intro x; only 1: auto).	0.749938964844	4202
Coq.ssr.ssrbool.sub_in3	40	57.8	search with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.12486195564	3889
Coq.ssr.ssrbool.sub_in12	40	0.32	search with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.365817070007	550
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.00725507736206	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	21	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.248420000076	208
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00606417655945	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.00775098800659	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	8	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0150699615479	16
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0124061107635	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	2	search with cache (only 1: tauto).	0.00532293319702	3
Coq.ssr.ssrfun.unitE	40	0.9.20.21	search with cache (only 1: intro H; only 1: intuition; only 1: reflexivity || destruct H; only 1: tauto).	0.249397993088	2581
Coq.ssr.ssrfun.frefl	40	2	search with cache (only 1: split).	0.00423383712769	3
Coq.ssr.ssrfun.fsym	40	3.5	search with cache (only 1: intros; only 1: by [  ]).	0.00876402854919	10
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	2	search with cache (only 1: by [  ]).	0.00462818145752	3
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	3.20.2.128.2	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct H; only 1: auto).	5.78111600876	66048
Coq.ssr.ssrfun.all_tag2	40	55	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.430711984634	2985
Coq.ssr.ssrfun.svalP	40	121	search with cache (only 1: apply proj2_sig).	0.792713165283	7458
Coq.ssr.ssrfun.s2valP	40	22	search with cache (only 1: by case : u ).	0.0335230827332	231
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.00663304328918	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.00934386253357	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0139470100403	1
Coq.ssr.ssrfun.can_pcan	40	3.59.20	search with cache (only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: reflexivity).	9.70204806328	84976
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.00967693328857	1
Coq.ssr.ssrfun.canLR	40	2.15.3	search with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: auto).	0.142452001572	427
Coq.ssr.ssrfun.canRL	40	5.15.0.28	search with cache (only 1: intro z; only 1: intros; only 1: destruct H; only 1: auto).	1.06426906586	6302
Coq.ssr.ssrfun.Some_inj	40	0.27	search with cache (only 1: inversion 1; only 1: tauto).	0.214545965195	852
Coq.ssr.ssrfun.of_voidK	40	13.24	search with cache (only 1: intro x; only 1: intuition).	0.228834152222	946
Coq.ssr.ssrfun.esymK	40	0.6.135	search with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	1.74863290787	14528
Coq.ssr.ssrfun.etrans_id	40	2.121	search with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.91250705719	7854
Coq.ssr.ssrfun.inj_id	40	1	search with cache (only 1: by [  ]).	0.00598907470703	2
Coq.ssr.ssrfun.inj_can_sym	40	0.0.65	search with cache (only 1: red; only 1: intros; only 1: auto).	1.65171504021	8315
Coq.ssr.ssrfun.inj_comp	40	2.24.2	search with cache (only 1: intros Hfst Hsnd; only 1: intros H; only 1: auto).	0.444391965866	1177
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	4.4.17	search with cache (only 1: exists f; only 1: trivial; only 1: trivial).	0.210477113724	452
Coq.ssr.ssrunder.Under_rel_from_rel	40	1.7	search with cache (only 1: intros A P H; only 1: trivial).	0.0102400779724	17
Coq.ssr.ssrunder.Under_relE	40	3	search with cache (only 1: trivial).	0.00541090965271	4
Coq.ssr.ssrunder.over_rel	40	1.7	search with cache (only 1: intros A P H; only 1: trivial).	0.00979280471802	17
Coq.ssr.ssrunder.over_rel_done	40	0.2.1.1	search with cache (only 1: red; only 1: red; only 1: intros; only 1: trivial).	0.00890803337097	8
Coq.ssr.ssrunder.under_rel_done	40	0.2.1	search with cache (only 1: red; only 1: intros; only 1: trivial).	0.00826096534729	6
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.0.11.18	search with cache (only 1: intros Heq; only 1: intros m w le; only 1: intros <-; only 1: auto with arith).	0.865124940872	1765
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40	2.3.29	search with cache (only 1: induction p; only 1: trivial; only 1: trivial).	1.27134490013	3151
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	6	search with cache (only 1: now f_equal).	0.0115070343018	7
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.2.0.0.0.0.2	search with cache (only 1: induction p; only 1: trivial; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.512978076935	421
Coq.Vectors.VectorSpec.uncons_cons	40	1	search with cache (only 1: trivial).	0.0977258682251	29
Coq.Vectors.VectorSpec.append_comm_cons	40	3.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: intros m w le; only 1: auto with *).	0.0854880809784	8
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	9.0.22	search with cache (only 1: induction n; only 1: assumption; only 1: left).	0.334975004196	1413
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	17.19	search with cache (only 1: intros Heq; only 1: congruence).	0.939574956894	4038
Coq.Setoids.Setoid.Seq_refl	40	0.3	search with cache (only 1: CRelationClasses.simpl_crelation; only 1: firstorder).	0.0113499164581	5
Coq.Setoids.Setoid.Seq_sym	40	0	search with cache (only 1: firstorder).	0.00730395317078	1
Coq.Setoids.Setoid.Seq_trans	40	5.0	search with cache (only 1: intros; only 1: firstorder).	0.0478069782257	7
Coq.Setoids.Setoid.gen_st	40	20	search with cache (only 1: simpl_relation).	0.0218439102173	186
Coq.Bool.IfProp.Iftrue_inv	40	5.32.0.1	search with cache (only 1: intros; only 1: subst; only 1: inversion_clear H; only 1: assumption).	1.20637488365	12044
Coq.Bool.IfProp.Iffalse_inv	40	1.0.0.0.0.7	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0808110237122	276
Coq.Bool.IfProp.IfProp_true	40	6.33.1	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with bool).	2.67906594276	16885
Coq.Bool.IfProp.IfProp_false	40	1.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto with bool).	0.00833582878113	11
Coq.Bool.IfProp.IfProp_or	40	4.4.7	search with cache (only 1: destruct 1; only 1: tauto; only 1: tauto).	0.496553897858	1585
Coq.Bool.IfProp.IfProp_sum	40	1.0.2.3.1.0.1.3.15	search with cache (only 1: intros A B []; only 1: intro H; only 1: left; only 1: inversion H; only 1: auto with bool; only 1: intro H; only 1: right; only 1: inversion H; only 1: auto with bool).	8.81635308266	40736
Coq.Bool.Zerob.zerob_true_intro	40	15.0	search with cache (only 1: intros; only 1: now subst).	0.173249959946	262
Coq.Bool.Zerob.zerob_true_elim	40	0.6.1	search with cache (only 1: destruct n; only 1: now BinInt.Z.swap_greater; only 1: inversion 1).	0.0286889076233	20
Coq.Bool.Zerob.zerob_false_intro	40	2.6.22	search with cache (only 1: induction n; only 1: now BinInt.Z.swap_greater; only 1: easy).	0.675669908524	1155
Coq.Bool.Zerob.zerob_false_elim	40	2.6.22	search with cache (only 1: induction n; only 1: now BinInt.Z.swap_greater; only 1: easy).	1.00421690941	1508
Coq.Bool.DecBool.ifdec_left	40	0.4.17.4.0	search with cache (only 1: destruct H; only 1: reflexivity; only 1: intros; only 1: destruct H; only 1: assumption).	0.763847112656	5124
Coq.Bool.DecBool.ifdec_right	40
Coq.Bool.Sumbool.sumbool_of_bool	40	0.30.0.22.17.17	search with cache (only 1: intro H1; only 1: elim H1; only 1: left; only 1: auto; only 1: right; only 1: auto).	6.62757301331	109021
Coq.Bool.Sumbool.bool_eq_rec	40	8.8.13.1.13	search with cache (only 1: intro H; only 1: intros; only 1: destruct H; only 1: auto; only 1: auto).	0.317825078964	3500
Coq.Bool.Sumbool.bool_eq_ind	40	3.3.2	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0113089084625	45
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.00695610046387	7
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H1; only 1: auto; only 1: auto; only 1: case H1; only 1: auto; only 1: auto).	0.00587892532349	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	0	search with cache (only 1: discriminate).	0.00374603271484	1
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00299119949341	1
Coq.Bool.Bool.eq_true_false_abs	40	34.25.12	search with cache (only 1: intro H; only 1: inversion 1; only 1: inversion 1).	2.05281186104	35455
Coq.Bool.Bool.not_true_is_false	40	3.0.9.14.16.20	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros; only 1: reflexivity || destruct H; only 1: auto; only 1: trivial).	1.47258090973	20618
Coq.Bool.Bool.not_false_is_true	40	2.2	search with cache (only 1: destr_bool; only 1: intuition).	0.0062038898468	6
Coq.Bool.Bool.not_true_iff_false	40	0.0.2.13.0.2.10.13.31.12	search with cache (only 1: intro H; only 1: constructor; only 1: intro x; only 1: reflexivity || destruct H; only 1: intuition; only 1: trivial; only 1: intro x; only 1: destruct H; only 1: discriminate; only 1: discriminate).	8.20705699921	116859
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00910806655884	3
Coq.Bool.Bool.leb_implb	40	3.12.3.3.0.1.0.0.1.5.31.14	search with cache (only 1: intro H; only 1: constructor; only 1: destruct H; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: destruct H; only 1: trivial; only 1: red; only 1: trivial).	10.8295450211	130723
Coq.Bool.Bool.eqb_subst	40	0.0.8.13	search with cache (only 1: intro H; only 1: destruct b1; only 1: destr_bool; only 1: destr_bool).	0.244696140289	1174
Coq.Bool.Bool.eqb_reflx	40	3.3.16.18	search with cache (only 1: intro H1; only 1: elim H1; only 1: trivial; only 1: trivial).	0.308020114899	2616
Coq.Bool.Bool.eqb_prop	40	3.1.13.5.3.3.5.2.3	search with cache (only 1: intros n m; only 1: elim m; only 1: induction n; only 1: trivial; only 1: trivial; only 1: induction n; only 1: intro x; only 1: auto; only 1: trivial).	5.01276707649	42487
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0136141777039	6
Coq.Bool.Bool.eqb_false_iff	40
Coq.Bool.Bool.negb_orb	40	0.0.0.0.6.1	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial).	0.0545101165771	180
Coq.Bool.Bool.negb_andb	40	3	search with cache (only 1: destr_bool).	0.0159220695496	29
Coq.Bool.Bool.negb_involutive	40	0.0.17.18	search with cache (only 1: intro H1; only 1: elim H1; only 1: reflexivity; only 1: reflexivity).	0.220062971115	1675
Coq.Bool.Bool.negb_involutive_reverse	40	3.3.16.18	search with cache (only 1: intro H1; only 1: elim H1; only 1: trivial; only 1: trivial).	0.312060117722	2616
Coq.Bool.Bool.negb_sym	40	7	search with cache (only 1: destr_bool).	0.013247013092	25
Coq.Bool.Bool.no_fixpoint_negb	40	27.27.18.18	search with cache (only 1: intro H1; only 1: elim H1; only 1: inversion 1; only 1: inversion 1).	6.14540719986	115580
Coq.Bool.Bool.eqb_negb1	40	1	search with cache (only 1: destr_bool).	0.00601196289062	2
Coq.Bool.Bool.eqb_negb2	40	1	search with cache (only 1: destr_bool).	0.00542783737183	2
Coq.Bool.Bool.if_negb	40	7.17	search with cache (only 1: intro H; only 1: destr_bool).	0.0503740310669	347
Coq.Bool.Bool.negb_true_iff	40	0.28.0.28.16.17	search with cache (only 1: intro H1; only 1: elim H1; only 1: simpl in *; only 1: intuition; only 1: simpl in *; only 1: intuition).	9.19358205795	138349
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0102210044861	3
Coq.Bool.Bool.orb_true_iff	40
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0187709331512	6
Coq.Bool.Bool.orb_true_elim	40	0.0.0.7	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0341200828552	59
Coq.Bool.Bool.orb_prop	40	0.0.0.7	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0361640453339	70
Coq.Bool.Bool.orb_true_intro	40	0.0.0.8	search with cache (only 1: destr_bool; only 1: destruct H; only 1: trivial; only 1: trivial).	0.0548980236053	148
Coq.Bool.Bool.orb_false_intro	40	0.3.3	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0113618373871	17
Coq.Bool.Bool.orb_false_elim	40	1.8	search with cache (only 1: destr_bool; only 1: intuition).	0.0454511642456	84
Coq.Bool.Bool.orb_diag	40	1	search with cache (only 1: destr_bool).	0.00698900222778	2
Coq.Bool.Bool.orb_true_r	40	1	search with cache (only 1: destr_bool).	0.0066180229187	2
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: reflexivity).	0.00491499900818	1
Coq.Bool.Bool.orb_false_r	40	1	search with cache (only 1: destr_bool).	0.00598406791687	2
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: reflexivity).	0.005047082901	1
Coq.Bool.Bool.orb_negb_r	40	1	search with cache (only 1: destr_bool).	0.00651001930237	2
Coq.Bool.Bool.orb_comm	40	3	search with cache (only 1: destr_bool).	0.0139648914337	26
Coq.Bool.Bool.orb_assoc	40	8	search with cache (only 1: destr_bool).	0.0152380466461	22
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.018975019455	6
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0217838287354	6
Coq.Bool.Bool.andb_true_eq	40	1.8	search with cache (only 1: destr_bool; only 1: intuition).	0.0666201114655	94
Coq.Bool.Bool.andb_false_intro1	40	0.1.3	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0131819248199	15
Coq.Bool.Bool.andb_false_intro2	40	0.0.3	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0141470432281	14
Coq.Bool.Bool.andb_false_r	40	1	search with cache (only 1: destr_bool).	0.00802707672119	2
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: reflexivity).	0.0060031414032	1
Coq.Bool.Bool.andb_diag	40	1	search with cache (only 1: destr_bool).	0.00722908973694	2
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00736689567566	2
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: reflexivity).	0.00582790374756	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.8	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.107249975204	109
Coq.Bool.Bool.andb_negb_r	40	1	search with cache (only 1: destr_bool).	0.00891494750977	2
Coq.Bool.Bool.andb_comm	40	3	search with cache (only 1: destr_bool).	0.0155880451202	26
Coq.Bool.Bool.andb_assoc	40	8	search with cache (only 1: destr_bool).	0.016569852829	22
Coq.Bool.Bool.andb_orb_distrib_r	40	8	search with cache (only 1: destr_bool).	0.0174381732941	22
Coq.Bool.Bool.andb_orb_distrib_l	40	8	search with cache (only 1: destr_bool).	0.0179898738861	22
Coq.Bool.Bool.orb_andb_distrib_r	40	8	search with cache (only 1: destr_bool).	0.0178680419922	22
Coq.Bool.Bool.orb_andb_distrib_l	40	8	search with cache (only 1: destr_bool).	0.0573642253876	22
Coq.Bool.Bool.absorption_andb	40	3	search with cache (only 1: destr_bool).	0.0194330215454	30
Coq.Bool.Bool.absorption_orb	40	3	search with cache (only 1: destr_bool).	0.0184781551361	30
Coq.Bool.Bool.xorb_false_r	40	1	search with cache (only 1: destr_bool).	0.00935912132263	2
Coq.Bool.Bool.xorb_false_l	40	1	search with cache (only 1: destr_bool).	0.00864410400391	2
Coq.Bool.Bool.xorb_true_r	40	14	search with cache (only 1: trivial).	0.017539024353	78
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00646901130676	1
Coq.Bool.Bool.xorb_nilpotent	40	1	search with cache (only 1: destr_bool).	0.00816082954407	2
Coq.Bool.Bool.xorb_comm	40	0.0.3.1	search with cache (only 1: intros n m; only 1: elim m; only 1: reflexivity; only 1: reflexivity).	0.012964963913	17
Coq.Bool.Bool.xorb_assoc_reverse	40	8	search with cache (only 1: destr_bool).	0.0180771350861	22
Coq.Bool.Bool.xorb_eq	40	8	search with cache (only 1: destr_bool).	0.0237159729004	30
Coq.Bool.Bool.xorb_move_l_r_1	40	8	search with cache (only 1: destr_bool).	0.024603843689	28
Coq.Bool.Bool.xorb_move_l_r_2	40	8	search with cache (only 1: destr_bool).	0.0253911018372	28
Coq.Bool.Bool.xorb_move_r_l_1	40	8	search with cache (only 1: destr_bool).	0.0280251502991	30
Coq.Bool.Bool.xorb_move_r_l_2	40	8	search with cache (only 1: destr_bool).	0.0276479721069	30
Coq.Bool.Bool.negb_xorb_l	40	3	search with cache (only 1: destr_bool).	0.0195679664612	30
Coq.Bool.Bool.negb_xorb_r	40	4	search with cache (only 1: destr_bool).	0.0352139472961	60
Coq.Bool.Bool.xorb_negb_negb	40	4	search with cache (only 1: destr_bool).	0.0208539962769	37
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.029853105545	6
Coq.Bool.Bool.eq_true_iff_eq	40	4.0.4.0.8	search with cache (only 1: destr_bool; only 1: destruct H; only 1: intuition; only 1: destruct H; only 1: intuition).	0.708336114883	1914
Coq.Bool.Bool.eq_true_negb_classical	40	2.2	search with cache (only 1: destr_bool; only 1: intuition).	0.0115690231323	6
Coq.Bool.Bool.eq_true_not_negb	40	2.2	search with cache (only 1: destr_bool; only 1: intuition).	0.0114789009094	6
Coq.Bool.Bool.absurd_eq_bool	40	1	search with cache (only 1: induction 1).	0.00671792030334	2
Coq.Bool.Bool.absurd_eq_true	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.00790405273438	6
Coq.Bool.Bool.trans_eq_bool	40	0.0.1	search with cache (only 1: induction 1; only 1: destruct 1; only 1: auto).	0.00915908813477	4
Coq.Bool.Bool.Is_true_eq_true	40	0.2	search with cache (only 1: destr_bool; only 1: auto).	0.00892305374146	4
Coq.Bool.Bool.Is_true_eq_left	40	8.26.13	search with cache (only 1: intro H; only 1: inversion 1; only 1: reflexivity).	0.730189085007	6178
Coq.Bool.Bool.Is_true_eq_right	40	16.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.100186109543	475
Coq.Bool.Bool.eqb_refl	40	9.9.18.14.14.18	search with cache (only 1: intro H1; only 1: red; only 1: red; only 1: elim H1; only 1: auto; only 1: auto).	3.36550807953	56484
Coq.Bool.Bool.eqb_eq	40	0.0.10	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.101665973663	142
Coq.Bool.Bool.orb_prop_elim	40	0.0.5.4	search with cache (only 1: intros n m; only 1: induction n; only 1: tauto; only 1: tauto).	0.0920748710632	152
Coq.Bool.Bool.orb_prop_intro	40	2.2.2.2.5.2.2	search with cache (only 1: red; only 1: red; only 1: destruct a, b; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.810953140259	3892
Coq.Bool.Bool.andb_prop_intro	40	0.0.5.4	search with cache (only 1: intros n m; only 1: induction n; only 1: tauto; only 1: tauto).	0.120259046555	291
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.10	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.168650150299	323
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.10	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0915420055389	162
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0.1	search with cache (only 1: induction 1; only 1: constructor; only 1: tauto; only 1: tauto).	0.0136549472809	5
Coq.Bool.Bool.negb_prop_elim	40	0.0.18.18	search with cache (only 1: intro H1; only 1: elim H1; only 1: tauto; only 1: tauto).	0.385480880737	1919
Coq.Bool.Bool.negb_prop_intro	40	0.2.1	search with cache (only 1: destr_bool; only 1: destruct H; only 1: tauto).	0.0127999782562	6
Coq.Bool.Bool.negb_prop_classical	40	0.1	search with cache (only 1: destr_bool; only 1: tauto).	0.0121939182281	3
Coq.Bool.Bool.negb_prop_involutive	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0134999752045	4
Coq.Bool.Bool.andb_if	40	2	search with cache (only 1: destr_bool).	0.0116958618164	3
Coq.Bool.Bool.negb_if	40	2	search with cache (only 1: destr_bool).	0.0100350379944	3
Coq.Bool.Bool.andb_lazy_alt	40	6.0	search with cache (only 1: intros; only 1: trivial).	0.00913405418396	8
Coq.Bool.Bool.orb_lazy_alt	40	6.0	search with cache (only 1: intros; only 1: trivial).	0.00773811340332	8
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	19.0.4.1.3.3	search with cache (only 1: destr_bool; only 1: left; only 1: tauto; only 1: right; only 1: destruct H; only 1: auto with bool).	1.87860417366	8807
Coq.Bool.Bool.reflect_dec	40	9.6.0.2	search with cache (only 1: destruct 1; only 1: constructor; only 1: auto; only 1: intuition).	0.303114175797	924
Coq.Bool.Bool.eqb_spec	40
Coq.Bool.BoolEq.beq_eq_true	40	0.2	search with cache (only 1: destruct 1; only 1: auto).	0.00763988494873	4
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.4.1.2.0.3.1.0.3.10.2	search with cache (only 1: simple induction x; only 1: intro eq; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec b a0); only 1: left; only 1: now subst; only 1: right; only 1: auto with arith).	20.0646848679	39038
Coq.Lists.ListSet.set_add_intro	40	0.0.7	search with cache (only 1: inversion 1; only 1: auto with arith; only 1: auto with arith).	0.0497109889984	43
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.1.0.2.1.3.0.0.3.6.3	search with cache (only 1: simple induction x; only 1: intros [H1| H2]; only 1: simpl; only 1: auto with datatypes; only 1: auto with arith; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	7.18973302841	10328
Coq.Lists.ListSet.set_add_not_empty	40	4.0.6.0.2.3.4.45	search with cache (only 1: unfold not; only 1: simple induction x; only 1: now subst; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: intros _ _ [=]).	8.06449985504	23021
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	1.0.0.2.0.3.2.0.6.5	search with cache (only 1: simple induction y; only 1: intro H; only 1: simpl; only 1: eauto; only 1: intros a0 l H [Ha0a| Hal]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: rewrite set_add_iff; only 1: tauto).	6.57613492012	11591
Coq.Lists.ListSet.set_union_intro	40	3.0	search with cache (only 1: intros i j Hi E; only 1: intuition).	0.0210189819336	5
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.3.2.0.1.2.5	search with cache (only 1: simple induction x; only 1: tauto; only 1: intros; only 1: simpl in *; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	1.2766919136	1540
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.3	search with cache (only 1: intros; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0199189186096	7
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	11.0	search with cache (only 1: intros i j Hi E; only 1: eauto with arith).	0.350918054581	205
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	1.7	search with cache (only 1: intros (x, (Hx, Huni)); only 1: trivial).	0.00603103637695	10
Coq.Lists.Streams.tl_nth_tl	40	2.18.1.7.10	search with cache (only 1: induction n; only 1: intros (x, (Hx, Huni)); only 1: trivial; only 1: simpl in *; only 1: trivial).	1.69149494171	9186
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	0.29.3.30.19	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto; only 1: destruct H; only 1: trivial).	28.8905940056	121665
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	19.11.22	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	1.54139304161	10768
Coq.Lists.Streams.Str_nth_tl_map	40	1.0.3.1.3	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: intros m hypind; only 1: trivial).	0.0925619602203	188
Coq.Lists.Streams.Str_nth_map	40	1.4.2.0	search with cache (only 1: induction n; only 1: trivial; only 1: intros s; only 1: apply IHn).	0.0354290008545	57
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	4.5.0.4	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.266784906387	553
Coq.Lists.Streams.Str_nth_zipWith	40	1.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: apply IHn).	0.0136489868164	5
Coq.Lists.List.nil_cons	40	2.2.0	search with cache (only 1: intros a b; only 1: intro m; only 1: discriminate).	0.0127770900726	7
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.1.0	search with cache (only 1: destruct l as [| x xs]; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.0160739421844	4
Coq.Lists.List.length_zero_iff_nil	40	0.1.10	search with cache (only 1: destruct l; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.0614922046661	84
Coq.Lists.List.hd_error_nil	40	1	search with cache (only 1: firstorder  discriminate).	0.00968289375305	2
Coq.Lists.List.hd_error_cons	40	1	search with cache (only 1: firstorder  discriminate).	0.0101020336151	2
Coq.Lists.List.in_eq	40	1	search with cache (only 1: firstorder  discriminate).	0.0103869438171	2
Coq.Lists.List.in_cons	40	1	search with cache (only 1: firstorder  discriminate).	0.0114510059357	2
Coq.Lists.List.not_in_cons	40	4.0.1.13.1.8.10.9	search with cache (only 1: split; only 1: simpl; only 1: auto; only 1: intros; only 1: inversion 1; only 1: subst; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	7.4561419487	18494
Coq.Lists.List.in_nil	40	1	search with cache (only 1: firstorder  discriminate).	0.00960111618042	2
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0096640586853	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	2.3	search with cache (only 1: intro H; only 1: firstorder  discriminate).	0.0119960308075	7
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40	0.0.12.6.37	search with cache (only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: simpl; only 1: apply f_equal; only 1: firstorder  discriminate).	3.69298815727	19684
Coq.Lists.List.app_assoc	40	2.1.3.1.2.3.39	search with cache (only 1: induction l as [| a tail]; only 1: intro H; only 1: firstorder  discriminate; only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: auto).	30.4629049301	152312
Coq.Lists.List.app_assoc_reverse	40	1.0.2.2.4.2	search with cache (only 1: intros l m n; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.48636007309	446
Coq.Lists.List.app_comm_cons	40	0.0.0.0.0	search with cache (only 1: destruct x as [| a l]; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0181820392609	5
Coq.Lists.List.app_eq_nil	40	0.2.3.11	search with cache (only 1: destruct l; only 1: intro H; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.328435897827	496
Coq.Lists.List.app_eq_unit	40	1.0.2.8.0.15.0.1.1	search with cache (only 1: destruct x as [| a l]; only 1: intros; only 1: firstorder  discriminate; only 1: destruct l; only 1: intros; only 1: inversion_clear H; only 1: intuition; only 1: intros; only 1: discriminate H).	17.046298027	39114
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.4.0.0	search with cache (only 1: intro H; only 1: intros; only 1: simpl; only 1: auto).	0.0193750858307	8
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40
Coq.Lists.List.app_nth1	40	0.0.0.0.14.6.0.3.12.5	search with cache (only 1: intros l m a; only 1: elim l; only 1: intro H; only 1: simpl; only 1: inversion 1; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	33.763368845	133018
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40
Coq.Lists.List.nth_error_app2	40
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	0.0.1.2.0.1.4.9	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: intros; only 1: now simpl; only 1: simpl; only 1: intros; only 1: auto with arith).	10.1958520412	16576
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	8	search with cache (only 1: intuition).	0.0126149654388	9
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	1.1.8.18	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: trivial; only 1: intuition).	2.66476416588	6598
Coq.Lists.List.count_occ_cons_neq	40	14.20	search with cache (only 1: simpl; only 1: now destruct (eq_dec x y)).	7.20837807655	12050
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	10.7.23.0.0.2.3	search with cache (only 1: induction l as [| x l]; only 1: intro y; only 1: auto; only 1: intro y; only 1: simpl in *; only 1: rewrite IHl; only 1: now simpl).	33.6873438358	119330
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	7.5.1	search with cache (only 1: induction l as [| x l]; only 1: now f_equal; only 1: firstorder  discriminate).	0.181432962418	293
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0119969844818	2
Coq.Lists.List.concat_cons	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0124659538269	3
Coq.Lists.List.concat_app	40	4.0.0.6.1.7.1.14.1.41	search with cache (only 1: intro H2; only 1: intros; only 1: elim H2; only 1: auto; only 1: intros l m a; only 1: induction l as [| x l]; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: trivial).	16.9594688416	59988
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	4.0	search with cache (only 1: simpl; only 1: trivial).	0.0146970748901	6
Coq.Lists.List.in_map	40
Coq.Lists.List.in_map_iff	40	0.0.2	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	1.07805585861	33
Coq.Lists.List.map_length	40	0.0.0.2.0	search with cache (only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	0.0230588912964	7
Coq.Lists.List.map_nth	40	0.0.7.0.0.8.0	search with cache (only 1: induction l; only 1: induction n as [| n IH]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: induction n as [| n IH]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	2.84248185158	4787
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.1.0.0.2.10	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	0.400850057602	507
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	14.0.2.13	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: discriminate).	3.15257191658	7023
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.19.1.15.1	search with cache (only 1: induction l as [| x l]; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: split).	1.62140488625	6787
Coq.Lists.List.concat_map	40	1.0.6.4.27.10.10.2	search with cache (only 1: induction l as [| x l]; only 1: firstorder  (subst; auto); only 1: simpl map; only 1: rewrite map_app; only 1: induction l as [| a l' Hrec]; only 1: firstorder  (subst; auto); only 1: rewrite IHl; only 1: auto).	26.2015938759	140027
Coq.Lists.List.map_id	40	2.1.12.8.6.7.9.5.1	search with cache (only 1: induction l as [| x l]; only 1: now f_equal; only 1: destruct l; only 1: trivial; only 1: destruct l; only 1: trivial; only 1: simpl in *; only 1: f_equal; only 1: auto).	8.95216107368	31450
Coq.Lists.List.map_map	40	4.12.15.6.2	search with cache (only 1: induction l as [| x l]; only 1: now f_equal; only 1: simpl map; only 1: rewrite IHl; only 1: trivial).	3.81786799431	10515
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.5.3.0	search with cache (only 1: intros A B f l; only 1: intros; only 1: apply map_ext_in; only 1: auto).	0.0867881774902	103
Coq.Lists.List.fold_left_app	40	1.2.1.0.13	search with cache (only 1: induction l; only 1: intros; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto).	0.991461992264	2659
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.4.1.1.3.0.0	search with cache (only 1: intros A B f l; only 1: intros; only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.62407588959	2262
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.379570960999	294
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40	1.2.0.14.13.7	search with cache (only 1: simpl; only 1: intro H1; only 1: intro H2; only 1: rewrite H1; only 1: rewrite H2; only 1: auto).	3.58117508888	4258
Coq.Lists.List.partition_cons2	40	0.1	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0164279937744	3
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	1.14.20	search with cache (only 1: intros y H0 H1; only 1: rewrite filter_map; only 1: apply ext_in_map).	38.6767809391	19728
Coq.Lists.List.filter_ext_in_iff	40	0.1.20.16.14.4	search with cache (only 1: intro y; only 1: intros; only 1: rewrite filter_map; only 1: split; only 1: apply ext_in_map; only 1: apply map_ext_in).	34.7201838493	59293
Coq.Lists.List.filter_ext	40	0.0.4.1	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0416641235352	32
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	1.28496408463	1170
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0267350673676	8
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.3.1.16.1.0.2.0	search with cache (only 1: induction l; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: destruct l'; only 1: trivial; only 1: simpl in *; only 1: auto).	2.87532496452	7378
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	19.0.10.0.17	search with cache (only 1: induction l as [| a l' Hrec]; only 1: trivial; only 1: firstorder; only 1: subst; only 1: firstorder).	5.06202793121	16055
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	39	search with cache (only 1: left).	0.515733003616	841
Coq.Lists.List.lel_trans	40	18.6	search with cache (only 1: unfold lel; only 1: now intros -> ->).	0.673913955688	474
Coq.Lists.List.lel_cons_cons	40	4.10.9	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.908281087875	1225
Coq.Lists.List.lel_cons	40	4.0.9	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.267727851868	237
Coq.Lists.List.lel_tail	40	1.1.0.0.2	search with cache (only 1: intros; only 1: unfold lel; only 1: apply Nat.le_trans with (length m); only 1: auto with arith; only 1: auto with arith).	0.0935571193695	26
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0.2.2.1	search with cache (only 1: induction l as [| x l]; only 1: intro y; only 1: tauto; only 1: auto).	0.019376039505	9
Coq.Lists.List.incl_tl	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0150480270386	2
Coq.Lists.List.incl_tran	40	7.1	search with cache (only 1: intros l1 l2; only 1: solve [ auto ]).	0.02903008461	35
Coq.Lists.List.incl_appl	40	0.3	search with cache (only 1: intros l1 l2 Eq x; only 1: intuition).	0.0342798233032	34
Coq.Lists.List.incl_appr	40	1	search with cache (only 1: auto with datatypes).	0.0388078689575	39
Coq.Lists.List.incl_cons	40
Coq.Lists.List.incl_app	40
Coq.Lists.List.firstn_nil	40	2.3.7	search with cache (only 1: induction n; only 1: tauto; only 1: tauto).	0.0594849586487	98
Coq.Lists.List.firstn_cons	40	5	search with cache (only 1: easy).	0.0117750167847	6
Coq.Lists.List.firstn_all	40	1.5.10.0.6.2.11.3.0	search with cache (only 1: induction l as [| x l]; only 1: tauto; only 1: destruct l; only 1: tauto; only 1: destruct l; only 1: tauto; only 1: simpl in *; only 1: rewrite IHl; only 1: reflexivity).	5.13223791122	13510
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0.1.0	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: easy).	0.0155899524689	4
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40	0.0.3.0.0.14.3.0.2	search with cache (only 1: induction l; only 1: destruct n; only 1: tauto; only 1: easy; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: simpl in *; only 1: auto with arith).	3.72332596779	8390
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40	1.0.0.2.1.6	search with cache (only 1: induction l1; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: firstorder).	0.523519039154	751
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	3	search with cache (only 1: tauto).	0.0249960422516	27
Coq.Lists.List.skipn_nil	40	0.1.13	search with cache (only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0842730998993	195
Coq.Lists.List.skipn_cons	40	5	search with cache (only 1: easy).	0.0118899345398	6
Coq.Lists.List.skipn_none	40	6.0.1	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: trivial).	0.0187439918518	10
Coq.Lists.List.skipn_all2	40	0.0.0.0.0.0.0.16.0.2.0.1	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l as [| x xs]; only 1: intro y; only 1: now simpl; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	9.39939904213	24388
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40	0.1.3.7.0.2.0	search with cache (only 1: induction n; only 1: simpl; only 1: solve [ auto ]; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	6.79413509369	3304
Coq.Lists.List.skipn_length	40	0.1.1.0.7.3.0.15	search with cache (only 1: induction n; only 1: destruct l; only 1: tauto; only 1: trivial; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	26.9964079857	9304
Coq.Lists.List.skipn_all	40	7.0.0	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: trivial).	0.408487081528	22
Coq.Lists.List.skipn_app	40	0.1.2.3.0.0.0.0.2	search with cache (only 1: induction n as [| k iHk]; only 1: intros; only 1: now simpl; only 1: intros; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: apply iHk).	1.62772798538	2280
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	1.0.14	search with cache (only 1: induction l as [| a l' Hrec]; only 1: tauto; only 1: trivial).	0.0770890712738	130
Coq.Lists.List.combine_firstn_l	40	0.6.4.1.16.0.0	search with cache (only 1: induction l; only 1: tauto; only 1: destruct l'; only 1: trivial; only 1: simpl in *; only 1: f_equal; only 1: trivial).	5.72893691063	10434
Coq.Lists.List.combine_firstn_r	40	0.1.0.0.1.0.0.2.0.8.11.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l; only 1: induction l as [| a l' Hrec]; only 1: tauto; only 1: trivial; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	2.50789809227	6425
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	0.0.3.14	search with cache (only 1: simpl; only 1: induction 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.461889982224	389
Coq.Lists.List.Add_length	40	7.0.2.3	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.606666088104	302
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.6	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0245189666748	22
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0358779430389	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	18	search with cache (only 1: now subst).	0.459576129913	495
Coq.Lists.List.Exists_cons	40	1.0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: firstorder).	0.0316228866577	6
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	6.2.0.0.0.1.6.3.4.6.1	search with cache (only 1: split; only 1: induction 1; only 1: induction 1; only 1: inversion 1; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| a l]; only 1: intros H; only 1: constructor; only 1: firstorder).	13.9779150486	32983
Coq.Lists.List.Forall_inv	40	0.13	search with cache (only 1: inversion 1; only 1: auto).	0.0511219501495	81
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.15.20	search with cache (only 1: intro H; only 1: inversion 1; only 1: auto).	0.60893702507	1632
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.8.0.0.0.0.0	search with cache (only 1: intro Pdec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: constructor; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	1.48738408089	1722
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	3.3.7.9.0.0	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).	1.11212182045	3004
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: trivial).	0.0095579624176	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	2.3.0.9.0.8.4.0.2	search with cache (only 1: induction l1; only 1: intros; only 1: inversion H; only 1: trivial; only 1: intros; only 1: inversion H; only 1: subst; only 1: simpl; only 1: auto).	8.58104300499	35306
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40
Coq.Lists.List.repeat_spec	40
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	1.1.18	search with cache (only 1: constructor; only 1: auto; only 1: auto).	0.525589942932	707
Coq.Lists.SetoidPermutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.0.3.0.0.50	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply permA_skip; only 1: do 2 (etransitivity; try eassumption)).	20.2093601227	59444
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0199151039124	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	8.0.0.0.4	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: intuition; only 1: eauto).	1.82296681404	1148
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.4	search with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip).	0.028030872345	15
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40
Coq.Lists.SetoidList.InA_nil	40	19.10	search with cache (only 1: intuition; only 1: inversion_clear H).	1.84362602234	2229
Coq.Lists.SetoidList.InA_alt	40
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	1.0.4	search with cache (only 1: red; only 1: firstorder; only 1: invlist InA).	0.0402290821075	24
Coq.Lists.SetoidList.eqlistA_altdef	40
Coq.Lists.SetoidList.equivlist_equiv	40	42	search with cache (only 1: firstorder using StronglySorted_inv).	5.31826615334	14845
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40
Coq.Lists.SetoidList.In_InA	40	6.0.0.4	search with cache (only 1: intros H; only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.499852895737	419
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.19.7	search with cache (only 1: intuition; only 1: inv; only 1: trivial).	7.36937713623	2210
Coq.Lists.SetoidList.InA_double_head	40	0.0	search with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.0710790157318	2
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0716850757599	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.0	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.0229258537292	5
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.8	search with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: tauto).	0.0837578773499	22
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.2.0.2.7	search with cache (only 1: constructor; only 1: rewrite !InA_cons; only 1: tauto; only 1: rewrite !InA_cons; only 1: tauto).	0.592523097992	180
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.14	search with cache (only 1: intros H; only 1: rewrite InA_app_iff; only 1: tauto).	0.322087049484	230
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	1.1.0.4.5.7.2.1.2.7	search with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).	3.97030806541	12232
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	2.0.2.0.22.2.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: destruct IHl; only 1: auto).	24.0195531845	45489
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	4.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: intuition).	0.0297288894653	14
Coq.Lists.SetoidList.InA_InfA	40	0.0.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.023992061615	6
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.2.1.1.10	search with cache (only 1: induction 1; only 1: intros; only 1: eauto; only 1: constructor; only 1: eauto).	0.946128129959	473
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	1.9.5.14	search with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: intuition).	9.06132888794	14926
Coq.Lists.SetoidList.app_eqlistA_compat	40	1.6.0.1.8.2	search with cache (only 1: intros x l' H H0; only 1: induction H; only 1: intros; only 1: intuition; only 1: simpl; only 1: auto).	8.1572561264	2328
Coq.Lists.SetoidList.eqlistA_app	40	2.4.2.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.150311946869	149
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	6.1	search with cache (only 1: intros; only 1: now rewrite H).	0.0334420204163	19
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.eq_dec	40
Coq.NArith.BinNat.discr	40
Coq.NArith.BinNat.peano_rect_base	40	15	search with cache (only 1: auto).	0.0355310440063	97
Coq.NArith.BinNat.peano_rect_succ	40
Coq.NArith.BinNat.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0102119445801	1
Coq.NArith.BinNat.peano_rec_succ	40	0.0.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0205299854279	6
Coq.NArith.BinNat.bi_induction	40
Coq.NArith.BinNat.recursion_wd	40
Coq.NArith.BinNat.recursion_0	40	0	search with cache (only 1: trivial).	0.0106649398804	1
Coq.NArith.BinNat.recursion_succ	40
Coq.NArith.BinNat.one_succ	40	0	search with cache (only 1: auto).	0.0102369785309	1
Coq.NArith.BinNat.two_succ	40	1	search with cache (only 1: trivial).	0.0103549957275	2
Coq.NArith.BinNat.pred_0	40	8	search with cache (only 1: now f_equal).	0.0112671852112	9
Coq.NArith.BinNat.pos_pred_spec	40	2	search with cache (only 1: trivial).	0.0111310482025	3
Coq.NArith.BinNat.succ_pos_spec	40	3.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0176768302917	9
Coq.NArith.BinNat.pos_pred_succ	40
Coq.NArith.BinNat.succ_pos_pred	40
Coq.NArith.BinNat.pred_succ	40	3.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.0660181045532	15
Coq.NArith.BinNat.pred_sub	40	25.2.9	search with cache (only 1: induction n; only 1: auto; only 1: now destruct p).	0.494055986404	2284
Coq.NArith.BinNat.succ_0_discr	40	27	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.280916929245	1098
Coq.NArith.BinNat.add_0_l	40	9	search with cache (only 1: trivial).	0.0113711357117	10
Coq.NArith.BinNat.add_succ_l	40
Coq.NArith.BinNat.sub_0_r	40	5.2.25	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.217939138412	636
Coq.NArith.BinNat.sub_succ_r	40
Coq.NArith.BinNat.mul_0_l	40	3	search with cache (only 1: reflexivity).	0.00983095169067	4
Coq.NArith.BinNat.mul_succ_l	40
Coq.NArith.BinNat.eqb_eq	40
Coq.NArith.BinNat.ltb_lt	40
Coq.NArith.BinNat.leb_le	40
Coq.NArith.BinNat.compare_eq_iff	40
Coq.NArith.BinNat.compare_lt_iff	40	7.0	search with cache (only 1: unfold ltb, lt; only 1: now subst).	0.0127701759338	9
Coq.NArith.BinNat.compare_le_iff	40	4	search with cache (only 1: now subst).	0.0107100009918	5
Coq.NArith.BinNat.compare_antisym	40
Coq.NArith.BinNat.min_l	40
Coq.NArith.BinNat.min_r	40	1.8.0.0.8.12.0	search with cache (only 1: unfold min, le; only 1: intro H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: case Pos.compare_spec; only 1: congruence; only 1: now subst; only 1: auto).	2.65193891525	7486
Coq.NArith.BinNat.max_l	40
Coq.NArith.BinNat.max_r	40	1.0.0.0.1	search with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.025887966156	16
Coq.NArith.BinNat.lt_succ_r	40
Coq.NArith.BinNat.double_spec	40	13	search with cache (only 1: reflexivity).	0.024866104126	60
Coq.NArith.BinNat.succ_double_spec	40
Coq.NArith.BinNat.double_add	40
Coq.NArith.BinNat.succ_double_add	40	4	search with cache (only 1: now destruct n, m).	0.0283961296082	12
Coq.NArith.BinNat.double_mul	40	4.4.34.12	search with cache (only 1: cases m; only 1: now destruct n; only 1: intro m; only 1: now destruct n, m).	14.1031451225	17013
Coq.NArith.BinNat.succ_double_mul	40
Coq.NArith.BinNat.div2_double	40	36	search with cache (only 1: now destruct n).	0.27311706543	658
Coq.NArith.BinNat.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0116770267487	1
Coq.NArith.BinNat.double_inj	40
Coq.NArith.BinNat.succ_double_inj	40
Coq.NArith.BinNat.succ_double_lt	40
Coq.NArith.BinNat.double_lt_mono	40	3.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: auto).	0.372423887253	357
Coq.NArith.BinNat.double_le_mono	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0250020027161	10
Coq.NArith.BinNat.succ_double_lt_mono	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0257380008698	10
Coq.NArith.BinNat.succ_double_le_mono	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0255279541016	10
Coq.NArith.BinNat.compare_0_r	40	32	search with cache (only 1: now destruct n).	0.733590841293	2169
Coq.NArith.BinNat.pow_0_r	40	4	search with cache (only 1: trivial).	0.0108840465546	5
Coq.NArith.BinNat.pow_succ_r	40
Coq.NArith.BinNat.pow_neg_r	40	2.0.9.6.0.2.11.29	search with cache (only 1: destruct n, p; only 1: now rewrite <- ?add_le_mono_l; only 1: intro H; only 1: easy; only 1: easy; only 1: intro H; only 1: simpl in *; only 1: easy).	29.8807001114	25638
Coq.NArith.BinNat.square_spec	40
Coq.NArith.BinNat.size_log2	40
Coq.NArith.BinNat.size_gt	40
Coq.NArith.BinNat.size_le	40
Coq.NArith.BinNat.log2_spec	40
Coq.NArith.BinNat.log2_nonpos	40	4.2.22	search with cache (only 1: destruct n; only 1: now rewrite <- sub_0_le; only 1: easy).	0.569240808487	1103
Coq.NArith.BinNat.even_spec	40
Coq.NArith.BinNat.odd_spec	40
Coq.NArith.BinNat.pos_div_eucl_spec	40
Coq.NArith.BinNat.div_eucl_spec	40
Coq.NArith.BinNat.div_mod'	40
Coq.NArith.BinNat.div_mod	40	0.1.0.6	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0434558391571	26
Coq.NArith.BinNat.pos_div_eucl_remainder	40
Coq.NArith.BinNat.mod_lt	40
Coq.NArith.BinNat.mod_bound_pos	40
Coq.NArith.BinNat.sqrtrem_sqrt	40
Coq.NArith.BinNat.sqrtrem_spec	40
Coq.NArith.BinNat.sqrt_spec	40
Coq.NArith.BinNat.sqrt_neg	40	2.0.0.0.0	search with cache (only 1: destruct n; only 1: intros Hn; only 1: reflexivity; only 1: intros Hn; only 1: easy).	0.0216319561005	7
Coq.NArith.BinNat.ggcd_gcd	40
Coq.NArith.BinNat.ggcd_correct_divisors	40
Coq.NArith.BinNat.gcd_divide_l	40
Coq.NArith.BinNat.gcd_divide_r	40
Coq.NArith.BinNat.gcd_greatest	40
Coq.NArith.BinNat.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0106840133667	2
Coq.NArith.BinNat.testbit_even_0	40
Coq.NArith.BinNat.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.0118410587311	1
Coq.NArith.BinNat.testbit_succ_r_div2	40
Coq.NArith.BinNat.testbit_odd_succ	40
Coq.NArith.BinNat.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0231537818909	14
Coq.NArith.BinNat.testbit_neg_r	40
Coq.NArith.BinNat.shiftr_succ_r	40
Coq.NArith.BinNat.shiftl_succ_r	40
Coq.NArith.BinNat.shiftr_spec	40
Coq.NArith.BinNat.shiftl_spec_high	40
Coq.NArith.BinNat.shiftl_spec_low	40
Coq.NArith.BinNat.div2_spec	40	3	search with cache (only 1: trivial).	0.0109388828278	4
Coq.NArith.BinNat.pos_lxor_spec	40
Coq.NArith.BinNat.lxor_spec	40
Coq.NArith.BinNat.pos_lor_spec	40
Coq.NArith.BinNat.lor_spec	40
Coq.NArith.BinNat.pos_land_spec	40
Coq.NArith.BinNat.land_spec	40
Coq.NArith.BinNat.pos_ldiff_spec	40
Coq.NArith.BinNat.ldiff_spec	40
Coq.NArith.BinNat.gt_lt_iff	40
Coq.NArith.BinNat.gt_lt	40	21.7.1	search with cache (only 1: intros EQ; only 1: apply lt_nge; only 1: now nzsimpl').	2.41947197914	1609
Coq.NArith.BinNat.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0118501186371	1
Coq.NArith.BinNat.ge_le_iff	40
Coq.NArith.BinNat.ge_le	40	12.38.2	search with cache (only 1: intros EQ; only 1: apply le_ngt; only 1: trivial).	5.35412406921	4613
Coq.NArith.BinNat.le_ge	40	1	search with cache (only 1: apply ge_le_iff).	0.0125920772552	2
Coq.NArith.BinNat.pos_pred_shiftl_low	40
Coq.NArith.BinNat.pos_pred_shiftl_high	40
Coq.NArith.BinNat.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0311281681061	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	1	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0311319828033	2
Coq.NArith.Ndec.Neqb_complete	40	67	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	8.47009396553	35254
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	12.7.3.13.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: absurd (false = true); only 1: auto; only 1: inversion H; only 1: apply Ndouble_plus_one_bit0).	2.9576010704	8210
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	0.0.1.0.0.0.1.2.18	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: eqb2eq; only 1: intro; only 1: subst; only 1: now rewrite N.lxor_nilpotent in *; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	1.59626817703	1485
Coq.NArith.Ndec.Ndiv2_eq	40	0.0.87	search with cache (only 1: eqb2eq; only 1: intros x; only 1: now inversion x).	9.81479406357	33707
Coq.NArith.Ndec.Ndiv2_neq	40	0.8.0	search with cache (only 1: intro H; only 1: eqb2eq; only 1: now intros <-).	0.0606908798218	41
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	0.9.13.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: intros; only 1: rewrite H; only 1: trivial).	1.46510505676	928
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	0.10.7.12.0.0.1.1.0	search with cache (only 1: intro H; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: rewrite !N2Nat.inj_succ_double; only 1: trivial).	19.7097239494	53605
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	1.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0583839416504	5
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.2.3.1	search with cache (only 1: induction a as [| p]; only 1: now f_equal; only 1: intro H; only 1: now simpl).	0.0436489582062	61
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	23.0.0.1.2.2.13.71	search with cache (only 1: intros n; only 1: induction n; only 1: reflexivity; only 1: induction n; only 1: simpl in *; only 1: trivial; only 1: simpl in *; only 1: congruence).	27.7218589783	120089
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.1.68.0	search with cache (only 1: unfold ni_min; only 1: intros n; only 1: induction n; only 1: trivial; only 1: trivial).	3.76761484146	17437
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.0.0.0.2	search with cache (only 1: simple induction d; only 1: unfold ni_min; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0191569328308	18
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0.0.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0106799602509	6
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.0.0.0.1	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0106511116028	7
Coq.NArith.Ndist.ni_le_refl	40	1.0.0.2.1.0.0.0.78.29	search with cache (only 1: compute; only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: intros; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	9.54262185097	42415
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.1.3.2	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).	0.114633798599	59
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	1.0.6.0.7	search with cache (only 1: destruct a; only 1: trivial; only 1: <Coq.Strings.String.t_eqb>; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.363015890121	728
Coq.NArith.Ndigits.Nshiftr_nat_S	40	1.0	search with cache (only 1: intros s2 n; only 1: now subst).	0.0153679847717	3
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1.0	search with cache (only 1: intros s2 n; only 1: now subst).	0.0148260593414	3
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.4	search with cache (only 1: simpl; only 1: reflexivity).	0.0154650211334	6
Coq.NArith.Ndigits.Pshiftl_nat_S	40	1.0	search with cache (only 1: intros s2 n; only 1: now subst).	0.0149111747742	3
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	2.1.0.1.0.77.2.12	search with cache (only 1: induction n; only 1: now f_equal; only 1: case p; only 1: <Coq.Strings.String.t_eqb>; only 1: now subst; only 1: <Coq.Strings.String.t_eqb>; only 1: now subst; only 1: trivial).	11.6986458302	64165
Coq.NArith.Ndigits.Ndouble_bit0	40	2.1.12	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.118402004242	160
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.01726603508	3
Coq.NArith.Ndigits.Ndiv2_double	40	2.2.4.13.2.12	search with cache (only 1: induction n; only 1: now f_equal; only 1: destruct p; only 1: now try rewrite H; only 1: trivial; only 1: now f_equal).	1.94604420662	6672
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.0.0.1.0.2.3.0	search with cache (only 1: destruct n; only 1: now f_equal; only 1: destruct p; only 1: intro H; only 1: reflexivity; only 1: intro H; only 1: discriminate H; only 1: intro H; only 1: trivial).	0.452704191208	549
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.6	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: trivial).	0.047000169754	27
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.1.0.0.0.0.0.2.0.0.3.0.0.0.2.6	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	3.57892990112	9129
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.1.1.0.0.2.0.0.3.9	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: unfold Nless; only 1: simpl; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	14.1144189835	33095
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.test	40
Coq.NArith.Nnat.id	40
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	0.0.0.2.0.0	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros; only 1: now subst).	0.022421836853	8
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40
Coq.NArith.Nnat.inj_succ	40	1.5.11.0.44	search with cache (only 1: destruct a; only 1: now f_equal; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: trivial).	0.929900169373	3166
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_mul	40
Coq.NArith.Nnat.inj_sub	40
Coq.NArith.Nnat.inj_pred	40
Coq.NArith.Nnat.inj_div2	40
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_max	40
Coq.NArith.Nnat.inj_min	40
Coq.NArith.Nnat.inj_iter	40
Coq.NArith.Nnat.id	40	18.0.11	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).	0.583704948425	1361
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	0.0.1.0	search with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: intros; only 1: now subst).	0.0310029983521	16
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40
Coq.NArith.Nnat.inj_succ	40	14	search with cache (only 1: nat2N).	0.0594639778137	79
Coq.NArith.Nnat.inj_pred	40	14	search with cache (only 1: nat2N).	0.0590839385986	79
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_sub	40	14	search with cache (only 1: nat2N).	0.0841608047485	136
Coq.NArith.Nnat.inj_mul	40	14	search with cache (only 1: nat2N).	0.122468948364	136
Coq.NArith.Nnat.inj_div2	40	14	search with cache (only 1: nat2N).	0.126831054688	129
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_min	40	14	search with cache (only 1: nat2N).	0.114461183548	133
Coq.NArith.Nnat.inj_max	40	14	search with cache (only 1: nat2N).	0.162299871445	241
Coq.NArith.Nnat.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	16	search with cache (only 1: t_eqb).	0.0332860946655	174
Coq.Strings.Ascii.eqb_eq	40	3	search with cache (only 1: t_eqb).	0.00743794441223	4
Coq.Strings.Ascii.eqb_neq	40	3	search with cache (only 1: t_eqb).	0.0080349445343	4
Coq.Strings.Ascii.eqb_compat	40	15	search with cache (only 1: t_eqb).	0.0201458930969	91
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	5	search with cache (only 1: t_eqb).	0.0262529850006	6
Coq.Strings.String.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0204598903656	1
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0223228931427	1
Coq.Strings.String.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0163350105286	1
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.4.0.4.1.4.18	search with cache (only 1: elim s; only 1: reflexivity; only 1: intros n; only 1: simpl; only 1: intros n'; only 1: intros ->; only 1: t_eqb).	0.60923409462	1546
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.18.5.6	search with cache (only 1: induction s as [| ? ? IHs]; only 1: trivial; only 1: simpl; only 1: t_eqb).	0.2415599823	1119
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.to_N_of_pos	40	2	search with cache (only 1: trivial).	0.0167119503021	3
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.to_N_of_pos	40	2	search with cache (only 1: trivial).	0.0183138847351	3
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.to_N_of_pos	40	2	search with cache (only 1: trivial).	0.00750303268433	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	94.25	search with cache (only 1: intros a a_encad; only 1: lra).	4.92262506485	27478
Coq.Reals.Ratan.pos_half_prf	40	0	search with cache (only 1: intuition).	0.0211410522461	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	1.1	search with cache (only 1: intros a a_encad; only 1: lra).	0.0476899147034	19
Coq.Reals.Ratan.pos_opp_lt	40	1.1.0	search with cache (only 1: intro n; only 1: intros t; only 1: lra).	0.0350298881531	5
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	2.5.9.5	search with cache (only 1: intros n m; only 1: induction n; only 1: easy; only 1: auto with real arith).	0.920829057693	2210
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	3.2.1.1.4	search with cache (only 1: simple induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: auto with zarith).	0.409958124161	562
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.19.0.4.3	search with cache (only 1: intros; only 1: generalize (eq_sym H); only 1: intros; only 1: elim H; only 1: reflexivity).	1.09557700157	7766
Coq.Reals.RList.RList_P22	40	0.0.0.0.0.0.1	search with cache (only 1: simple induction l1; only 1: tauto; only 1: simple induction r0; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity).	0.0299530029297	8
Coq.Reals.RList.RList_P23	40	1.1.11.4.1.1.0.0.1	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: apply INR_eq; only 1: rewrite H; only 1: rewrite S_INR; only 1: reflexivity).	9.50829291344	29317
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	14.18.1	search with cache (only 1: intros low high k H1 H2; only 1: rewrite (sigma_split H1 H2); only 1: ring).	30.4355640411	45578
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.1.0.0.1.67	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.667698144913	4765
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.3.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: exact H1; only 1: intro H1; only 1: auto with real).	0.0698270797729	21
Coq.Reals.Rbasic_fun.Rmin_left	40
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	search with cache (only 1: intros x y H; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0234458446503	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0308010578156	7
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.7.8	search with cache (only 1: intros x y H H0; only 1: apply Rmin_case_strong; only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intros; only 1: eauto using Rle_trans, Rle_refl).	4.91805696487	1806
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0.5	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.241775035858	344
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.1	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0468180179596	25
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.3.0.1.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: exact H1; only 1: intro H1; only 1: auto with real).	0.270603895187	163
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.0371658802032	9
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.1.0	search with cache (only 1: intros x y H; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0231711864471	5
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.033301115036	7
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0275428295135	9
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.15.1.5.1.2.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	33.9259550571	72081
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	6.0.39.0	search with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: trivial; only 1: auto with real).	36.4938001633	39619
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.lt_strorder	40
Coq.Reals.ROrderedType.lt_compat	40	10.42	search with cache (only 1: intros Ha H; only 1: intuition subst; easy).	0.616391897202	1908
Coq.Reals.ROrderedType.le_lteq	40	0.14.0	search with cache (only 1: intros; only 1: compute; only 1: auto).	0.276155948639	265
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	3.1.2.1.5.5.0	search with cache (only 1: intro; only 1: red; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.517480134964	1594
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	5.3.4.2.6.7.0	search with cache (only 1: intro; only 1: red; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	14.1611630917	42151
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.13	search with cache (only 1: intros d Temp; only 1: tauto).	0.126942873001	228
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40	1.1.6.0.0.1.2	search with cache (only 1: intros f g l a b X X0; only 1: elim X; only 1: intros x p; only 1: elim X0; only 1: simpl; only 1: intros x0 p0; only 1: field).	11.4363000393	3588
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	9.24.49	search with cache (only 1: fix even_equiv 1; only 1: intros H'1; only 1: trivial).	4.05572295189	37371
Coq.Reals.Rfunctions.fact_simpl	40	22	search with cache (only 1: now do 2 constructor).	0.0549159049988	241
Coq.Reals.Rfunctions.simpl_fact	40	8.24.49	search with cache (only 1: fix even_equiv 1; only 1: intros H'1; only 1: trivial).	2.25654101372	13255
Coq.Reals.Rfunctions.pow_O	40	3.0	search with cache (only 1: intro; only 1: now do 2 constructor).	0.015429019928	5
Coq.Reals.Rfunctions.pow_1	40	81.21	search with cache (only 1: intros H'1; only 1: ring).	7.48064303398	39952
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	14.0	search with cache (only 1: intros; only 1: auto using Rge_le).	0.996180057526	1011
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	1.0.49	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: auto).	8.63977813721	61017
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.5.0.1.0.4	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	4.53175520897	6385
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40	3.46	search with cache (only 1: fix even_equiv 1; only 1: auto with real arith).	0.887747049332	2166
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.2.0.5.0.1.0.4	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 1 with (1 * 1); only 1: auto with real; only 1: auto with real).	24.7492260933	32659
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.0131099224091	1
Coq.Reals.Rfunctions.powerRZ_1	40	1.0	search with cache (only 1: simpl; only 1: auto with real).	0.0149869918823	3
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40
Coq.Reals.Rfunctions.powerRZ_le	40	5.3	search with cache (only 1: intros x y n; only 1: auto with real).	0.0282690525055	24
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	36.84	search with cache (only 1: intros; only 1: lia).	1.47738409042	14539
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	0.0.1.2.34.1.34.8.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: trivial; only 1: simpl in HrecN; only 1: replace (2 * S N)%nat with (S (S (2 * N))); only 1: simpl; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	33.8731091022	67744
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	1.1.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros f1 f2 X X0 H x; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	0.510003805161	598
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	0.0.4.1.0	search with cache (only 1: intros f g D D1 x H; only 1: unfold D_in; only 1: rewrite <- H; only 1: intros H0; only 1: auto).	0.0735640525818	16
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	2.0.2.2	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.013573884964	19
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	1.0.16.7	search with cache (only 1: intros abs; only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.817412853241	1195
Coq.Reals.RIneq.Rge_refl	40	0.1.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0161600112915	4
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.1.0.0	search with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto using Z.lt_pred_l).	0.0212662220001	5
Coq.Reals.RIneq.Rlt_not_eq	40	0.1.0.4.0.2	search with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto using Z.lt_pred_l).	0.279403924942	149
Coq.Reals.RIneq.Rgt_not_eq	40	0.1.0.5.0.3	search with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto using Z.lt_pred_l).	0.533809900284	531
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.0.1.0.0.6.3	search with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_not_eq; only 1: trivial; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: trivial).	1.29501104355	1835
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	0.0.3.2	search with cache (only 1: red; only 1: intros; only 1: left; only 1: trivial).	0.0196418762207	9
Coq.Reals.RIneq.Rgt_ge	40	0.3.2	search with cache (only 1: red; only 1: intros; only 1: tauto).	0.018070936203	8
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	0.0.7.2	search with cache (only 1: red; only 1: destruct 1; only 1: tauto; only 1: auto with real).	0.39702296257	254
Coq.Reals.RIneq.Rlt_gt	40	0.3.2	search with cache (only 1: red; only 1: intros; only 1: trivial).	0.0172491073608	8
Coq.Reals.RIneq.Rgt_lt	40	1	search with cache (only 1: trivial).	0.0133988857269	2
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.4	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0274918079376	14
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.4	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.018835067749	7
Coq.Reals.RIneq.Rnot_lt_le	40	17.1.0.8	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition eauto  3).	5.90674901009	15477
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.1.0.4	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.151057004929	59
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.0.0.5.0.5	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: tauto; only 1: subst; only 1: auto with rorders; only 1: contradiction).	1.03704190254	589
Coq.Reals.RIneq.Rnot_lt_ge	40	1.5	search with cache (only 1: intros; only 1: eauto using Rnot_lt_le with rorders).	0.0339739322662	19
Coq.Reals.RIneq.Rlt_not_le	40	0.2.0.0.2.0.0.3.0.18.14.0.5	search with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: apply (CRealLt_asym (Rrepr r1) (Rrepr r2)); only 1: rewrite Rlt_def in H, H0; only 1: apply CRealLtEpsilon in H0; only 1: assumption; only 1: rewrite Rlt_def in H, H0; only 1: apply CRealLtEpsilon in H; only 1: assumption; only 1: apply (Rlt_irrefl r1); only 1: subst; only 1: auto using Z.lt_pred_l).	26.2767169476	88821
Coq.Reals.RIneq.Rgt_not_le	40	3	search with cache (only 1: auto using Rnot_lt_le with real).	0.016401052475	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	3	search with cache (only 1: auto using Rnot_lt_le with real).	0.0167319774628	4
Coq.Reals.RIneq.Rle_not_lt	40	0.1.0.0.5	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto).	0.218894004822	131
Coq.Reals.RIneq.Rge_not_lt	40	1.1.0.0.5	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.3219871521	199
Coq.Reals.RIneq.Rle_not_gt	40	0.0.5	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: trivial).	0.0872709751129	40
Coq.Reals.RIneq.Rge_not_gt	40	1.1.0.1.5	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.498899936676	345
Coq.Reals.RIneq.Req_le	40	3.4	search with cache (only 1: red; only 1: auto using Rnot_lt_le with real).	0.020271062851	9
Coq.Reals.RIneq.Req_ge	40	0.5	search with cache (only 1: red; only 1: tauto).	0.0583820343018	7
Coq.Reals.RIneq.Req_le_sym	40	4	search with cache (only 1: auto using Rnot_lt_le with real).	0.0566980838776	5
Coq.Reals.RIneq.Req_ge_sym	40	8	search with cache (only 1: intuition).	0.037141084671	19
Coq.Reals.RIneq.Rgt_asym	40	0.1.0.6	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: tauto).	0.107495069504	39
Coq.Reals.RIneq.Rle_antisym	40	0.0.1.0.0.3	search with cache (only 1: intros x y [H| H] abs; only 1: exfalso; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto; only 1: auto).	0.027755022049	10
Coq.Reals.RIneq.Rge_antisym	40	4	search with cache (only 1: auto using Rnot_lt_le with real).	0.0427639484406	25
Coq.Reals.RIneq.Rle_le_eq	40	1.1.1.1.13.19.0	search with cache (only 1: intros; only 1: intuition eauto  3; only 1: eauto with real; only 1: subst; only 1: auto with rorders; only 1: subst; only 1: auto with rorders).	9.62954092026	22961
Coq.Reals.RIneq.Rge_ge_eq	40	1	search with cache (only 1: intuition).	0.0576660633087	16
Coq.Reals.RIneq.Rlt_eq_compat	40	0.32.6	search with cache (only 1: intros; only 1: subst; only 1: trivial).	6.0266160965	12573
Coq.Reals.RIneq.Rgt_eq_compat	40	2.1.0.0.8	search with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace y with y'; only 1: replace x with x'; only 1: assumption).	0.339145898819	327
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	0.3.6	search with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	0.21711397171	88
Coq.Reals.RIneq.Rle_lt_trans	40	0.1.3	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0500240325928	16
Coq.Reals.RIneq.Rlt_le_trans	40	0.1.3	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0546209812164	16
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	1.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.123531103134	11
Coq.Reals.RIneq.Rgt_dec	40	2.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.163727998734	18
Coq.Reals.RIneq.Rge_dec	40	2.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.186733007431	17
Coq.Reals.RIneq.Rlt_le_dec	40	2.6.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.271338939667	201
Coq.Reals.RIneq.Rgt_ge_dec	40	1.6.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0893790721893	42
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.2.1.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: trivial).	0.371875047684	243
Coq.Reals.RIneq.Rge_gt_dec	40	1.7.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.743332862854	259
Coq.Reals.RIneq.Rlt_or_le	40	0.1.2.0.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: trivial).	0.287817001343	227
Coq.Reals.RIneq.Rgt_or_ge	40	2.1.2.0.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	1.00962400436	822
Coq.Reals.RIneq.Rle_or_lt	40	0.0.2.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: trivial).	0.0435829162598	27
Coq.Reals.RIneq.Rge_or_gt	40	2.0.2.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.74064207077	302
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	7	search with cache (only 1: intuition eauto  4 with real).	0.0356271266937	17
Coq.Reals.RIneq.Rplus_opp_l	40
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	3.0.4	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: now f_equal).	0.0456440448761	18
Coq.Reals.RIneq.Rplus_eq_compat_r	40	3.0.4	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: now f_equal).	0.0458869934082	18
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40	9.4	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	1.14551496506	376
Coq.Reals.RIneq.Rplus_0_r_uniq	40	2.0.0.0.1	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0429627895355	8
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.3.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.724477052689	13
Coq.Reals.RIneq.Rinv_r_sym	40	0.3.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.730473041534	13
Coq.Reals.RIneq.Rmult_0_r	40	2.15.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	2.03609800339	2395
Coq.Reals.RIneq.Rmult_0_l	40	2.0	search with cache (only 1: intros; only 1: ring).	0.023017168045	4
Coq.Reals.RIneq.Rmult_ne	40	1.1.2.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rmult_1_l).	1.03041219711	11
Coq.Reals.RIneq.Rmult_1_r	40	1.2.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	1.02808094025	8
Coq.Reals.RIneq.Rmult_eq_compat_l	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0354630947113	19
Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real; only 1: now f_equal).	0.43886590004	21
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40	8.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	2.06733202934	535
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0389950275421	19
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0338971614838	19
Coq.Reals.RIneq.Rmult_neq_0_reg	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0504529476166	19
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	4.2	search with cache (only 1: intros x y H; only 1: auto with real).	0.212685823441	35
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0343289375305	19
Coq.Reals.RIneq.Ropp_0	40
Coq.Reals.RIneq.Ropp_eq_0_compat	40	2.6.1	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	3.17846298218	131
Coq.Reals.RIneq.Ropp_involutive	40	40.6	search with cache (only 1: intuition eauto  4 with real; only 1: field).	26.4380030632	36239
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40
Coq.Reals.RIneq.Ropp_mult_distr_l	40
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40
Coq.Reals.RIneq.Rmult_opp_opp	40
Coq.Reals.RIneq.Ropp_mult_distr_r	40
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40
Coq.Reals.RIneq.Rminus_0_r	40	1.0	search with cache (only 1: intros; only 1: ring).	0.0236778259277	3
Coq.Reals.RIneq.Rminus_0_l	40	2.0	search with cache (only 1: intros; only 1: ring).	0.0242731571198	4
Coq.Reals.RIneq.Ropp_minus_distr	40
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0268528461456	3
Coq.Reals.RIneq.Rminus_diag_eq	40
Coq.Reals.RIneq.Rminus_diag_uniq	40	8.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	0.99636387825	593
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40
Coq.Reals.RIneq.Rminus_eq_contra	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0383620262146	17
Coq.Reals.RIneq.Rminus_not_eq	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0444340705872	17
Coq.Reals.RIneq.Rminus_not_eq_right	40	4.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0433971881866	17
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.19.2	search with cache (only 1: intros x y H; only 1: rewrite Rmult_comm; only 1: ring).	14.0361449718	3370
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.6.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0414597988129	13
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.2.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.033077955246	6
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.9.2	search with cache (only 1: intros x y H; only 1: field; only 1: trivial).	1.22936987877	334
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.9.2	search with cache (only 1: intros x y H; only 1: field; only 1: trivial).	2.41970896721	354
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.11.2	search with cache (only 1: intros x y H; only 1: field; only 1: trivial).	3.85323596001	667
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.2.9	search with cache (only 1: red; only 1: intros x y H; only 1: auto with real).	0.761372804642	713
Coq.Reals.RIneq.Rplus_lt_compat_r	40	10.6	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	23.9322369099	2174
Coq.Reals.RIneq.Rplus_gt_compat_r	40	15	search with cache (only 1: intuition).	1.27414417267	912
Coq.Reals.RIneq.Rplus_le_compat_l	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.0.0.7.0.0.1.0.0.10	search with cache (only 1: red; only 1: intros a b; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with real; only 1: intro; only 1: right; only 1: auto with zarith real).	13.8123731613	11414
Coq.Reals.RIneq.Rplus_le_compat_r	40	5.2.1.0.6	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	4.12685108185	2185
Coq.Reals.RIneq.Rplus_ge_compat_r	40	15	search with cache (only 1: intuition).	0.953402996063	943
Coq.Reals.RIneq.Rplus_lt_compat	40	6.7.0	search with cache (only 1: intros a b; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	3.67054796219	395
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	1.1.0.0.7	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.783090114594	298
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40	6.1.7.0	search with cache (only 1: intros a b; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  4 with real).	7.85251402855	993
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	3.3.1.0.7	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	2.11144590378	1718
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	3.3.2.0.8	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	3.41409897804	2882
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.1.0.0.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real).	0.0306451320648	7
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.1.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: apply Rplus_lt_compat_l; only 1: assumption).	0.0263619422913	8
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	11	search with cache (only 1: auto using Rnot_lt_le with real).	0.69252204895	136
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1	search with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	0.0433268547058	19
Coq.Reals.RIneq.Ropp_lt_contravar	40	7.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0306780338287	16
Coq.Reals.RIneq.Ropp_gt_contravar	40	7.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.031121969223	16
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	11.1.8.12	search with cache (only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  4 with real).	30.1068160534	16487
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	7.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0375127792358	16
Coq.Reals.RIneq.Ropp_le_contravar	40	7.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real).	0.0339109897614	16
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0	search with cache (only 1: intros a b; only 1: auto with real).	0.0171780586243	2
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0210318565369	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.1.0.0.3.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto using Z.lt_pred_l; only 1: replace 1 with (/ r * r); only 1: auto with real; only 1: auto with real).	0.0847039222717	13
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0169749259949	3
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.020968914032	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0230967998505	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.3	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0473489761353	27
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.3	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0554769039154	27
Coq.Reals.RIneq.Ropp_ge_cancel	40	1.0.0.3	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0626409053802	25
Coq.Reals.RIneq.Rmult_lt_compat_r	40	11.9	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	4.70387506485	2036
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	search with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	0.0547499656677	22
Coq.Reals.RIneq.Rmult_gt_compat_l	40	18	search with cache (only 1: intuition).	1.26089787483	929
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40	5.3.2.0.9	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	13.9498989582	6045
Coq.Reals.RIneq.Rmult_ge_compat_l	40	17	search with cache (only 1: intuition).	0.889328956604	889
Coq.Reals.RIneq.Rmult_ge_compat_r	40	18	search with cache (only 1: intuition).	1.0236530304	1083
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	18	search with cache (only 1: intuition).	0.908122062683	932
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	8.9.0	search with cache (only 1: intros a b; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  4 with real).	10.1443490982	928
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	8	search with cache (only 1: auto with real rorders).	0.0639579296112	35
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.4.0.1.0.9	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	1.43731188774	1107
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	1.1.2.0.9	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: apply Rmult_lt_reg_l with r; only 1: assumption; only 1: auto).	2.32282209396	883
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.0.9	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.585119009018	457
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40	0.0.0.0.0.0.4.6.0	search with cache (only 1: intros a b; only 1: intuition eauto  4 with real; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	4.74642109871	903
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.3.2	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0372538566589	34
Coq.Reals.RIneq.Rle_0_1	40	1.0.4.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0431418418884	29
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.40061306953	1620
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	1.2.0.0.3	search with cache (only 1: intros x y H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).	0.0792710781097	84
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	13.8.1.2	search with cache (only 1: intros x y H; only 1: elim H; only 1: auto with real; only 1: intuition).	26.9967041016	9665
Coq.Reals.RIneq.INR_not_0	40	2.7.1.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: reflexivity).	1.57364296913	789
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.1.0.0.6.2	search with cache (only 1: intros x y H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	1.60480189323	833
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.10	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	5.04531884193	9670
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.10	search with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.551223039627	521
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	57.0	search with cache (only 1: intros; only 1: ring).	15.1433959007	36758
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	1.1.5.9	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	1.38014388084	1681
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.0.58.0.25	search with cache (only 1: unfold Rminus; only 1: intros a b; only 1: unfold Rdiv; only 1: intros; only 1: ring).	21.361768961	136323
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	11.54	search with cache (only 1: fix even_equiv 1; only 1: assumption).	7.88941407204	43836
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	6.21.49	search with cache (only 1: fix even_equiv 1; only 1: intros H'1; only 1: trivial).	1.81472992897	12391
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	2.0.53	search with cache (only 1: fix even_equiv 1; only 1: intros a b; only 1: auto).	7.84372901917	37236
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	185	search with cache (only 1: auto with real || apply StepFun_P6).	12.3235349655	126687
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	3.2.1.25.10.0	search with cache (only 1: intros; only 1: destruct (Rle_dec b a) as [Hle'| Hnle']; only 1: split; only 1: destruct (Rle_dec a b) as [Hleab| Hnleab]; only 1: split; only 1: split).	3.62971997261	12326
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40
Coq.Reals.Ranalysis2.quadruple_var	40
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	0.0	search with cache (only 1: intros P notall; only 1: intuition).	0.0202968120575	2
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	3.0.0	search with cache (only 1: intros P notex n abs; only 1: intro HAB; only 1: firstorder).	0.0327069759369	6
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	3.1	search with cache (only 1: intros; only 1: firstorder).	0.0450081825256	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	3.26	search with cache (only 1: intro n; only 1: tauto).	0.133738040924	457
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	21.0.23.6.2	search with cache (only 1: intros; only 1: elim H0; only 1: intros; only 1: unfold included in H1; only 1: firstorder).	16.7684080601	82757
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.2.0.1.2.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: apply Pn; only 1: auto with arith).	0.240067005157	135
Coq.Reals.Rseries.Un_growing_shift	40
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	0.0.4.2.1.5.80	search with cache (only 1: red; only 1: intros x (P, H3); only 1: simpl; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	2.1112511158	19655
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40	41.23	search with cache (only 1: destruct (exist_exp (-1)) as (?, e); only 1: assumption).	8.06796097755	10276
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.0.0.5.1.2	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.152884960175	195
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	2.0	search with cache (only 1: intros a b; only 1: tauto).	0.0235071182251	4
Coq.Reals.Ranalysis1.continuity_pt_div	40	3.0.1.0.1.2.7.0	search with cache (only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	1.53626394272	1956
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40	0.0.1.0.0.0.0.0.0.4.3.37.0	search with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	7.66736292839	24902
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.0.0.0.0.2.4	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: symmetry; only 1: assumption).	0.143174886703	152
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.1.4	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.033579826355	14
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	1.1.0.0	search with cache (only 1: intros a b; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0278699398041	11
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.74	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.67982006073	6003
Coq.Reals.Ranalysis1.derivable_Rsqr	40	1.2.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0387530326843	18
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.134.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	13.1712601185	187951
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	0.16.43	search with cache (only 1: intros h; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.577075004578	3415
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.16.43	search with cache (only 1: intros h; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.495708942413	2301
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	6.1.0.0.68	search with cache (only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	14.8701360226	97285
Coq.Reals.Ranalysis1.derive_pt_pow	40	6.21.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	0.904033899307	3084
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	1.0.2.0.0.0.1.5.1.0.0.1.8.0	search with cache (only 1: intros; only 1: unfold has_lb in H; only 1: unfold bound in H; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: elim H1; only 1: intros; only 1: apply H0; only 1: exists (k + x1)%nat; only 1: assumption).	12.3443000317	40587
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	8.0.0	search with cache (only 1: apply Rlt_mult_inv_pos; only 1: apply PI_RGT_0; only 1: prove_sup0).	0.0836818218231	89
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	8.4.1.0.8.2	search with cache (only 1: pose proof Alembert_exp as H0; only 1: red; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.885340929031	1999
Coq.Reals.Ranalysis4.derivable_cosh	40	3.2.0.1.3	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.257385015488	291
Coq.Reals.Ranalysis4.derivable_sinh	40	4.5.0.1.3	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.732721090317	1027
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	3.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.143867969513	36
Coq.Reals.Ranalysis4.derive_pt_sinh	40	4.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.149629831314	37
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	13.2	search with cache (only 1: intros g c0; only 1: intuition subst; easy).	0.201557159424	289
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.1.2.0.1.2.24.90	search with cache (only 1: intros; only 1: constructor; only 1: intros; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intros; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	32.3615100384	168660
Coq.Reals.ConstructiveReals.CReq_sym	40	1.28.1	search with cache (only 1: destruct 1; only 1: red; only 1: auto).	1.6714630127	5505
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	2.2.1.3.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.500089168549	440
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	2.2.2.1.2.2.1.1.0.1	search with cache (only 1: destruct 1; only 1: split; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs; only 1: intro abs; only 1: apply H0; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	15.4451060295	26688
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	4.2.4.3.4.0.10.5.5.2	search with cache (only 1: intros; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: apply Nat.mul_le_mono_nonneg; only 1: simpl; only 1: apply Nat.le_0_l; only 1: reflexivity; only 1: apply Nat.le_0_l; only 1: assumption; only 1: apply Nat.le_refl).	4.63952708244	14485
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	87	search with cache (only 1: auto).	3.54457187653	21223
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1	search with cache (only 1: apply CReal_isRingExt).	1.97828292847	34
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0.3.0.0.1.0.0.1.2.0	search with cache (only 1: intros x y H; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CRealEq_sym; only 1: apply CReal_plus_opp_r; only 1: apply CReal_plus_proper_r; only 1: apply CRealEq_sym; only 1: exact H).	1.36753487587	934
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.1.6.1	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	39.2570388317	473
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	30.0	search with cache (only 1: intro x; only 1: ring).	37.8355469704	6723
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	1.2.3	search with cache (only 1: intros; only 1: apply CRealEq_sym; only 1: ring).	0.533910989761	16
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.13.2	search with cache (only 1: intros; only 1: apply CReal_mult_proper_l; only 1: assumption).	1.51383090019	496
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	2.4.2	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.047180891037	36
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros p q; only 1: ring_Rsqr).	0.0402100086212	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40
Coq.Reals.R_sqr.Rsqr_1	40
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	23.0	search with cache (only 1: intros; only 1: auto with real).	6.01232790947	10535
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros p q; only 1: ring_Rsqr).	0.0323638916016	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.0.1.9.4	search with cache (only 1: intro x; only 1: unfold Rsqr; only 1: intro H; only 1: intros; only 1: auto with real).	0.990875959396	1400
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.7.1.25.30.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intros H1; only 1: ring_Rsqr; only 1: trivial).	18.5967371464	66555
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.32.12.0.0	search with cache (only 1: intro; only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: trivial; only 1: trivial).	7.8830640316	32168
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	8.0	search with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intuition).	0.23513507843	138
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	10.4.2.1	search with cache (only 1: intros; only 1: assert (x_encad2 : lb <= x <= ub) by intuition; only 1: intuition; only 1: lra).	2.59793114662	2668
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.1.1	search with cache (only 1: intros x y H; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0290760993958	15
Coq.Reals.Rminmax.Rmax_r	40	0.0.1.1	search with cache (only 1: intros x y H; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0287499427795	15
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.1	search with cache (only 1: intros x y H; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0420501232147	14
Coq.Reals.Rminmax.Rmin_r	40	1.1.0.1.16	search with cache (only 1: unfold Rmin; only 1: intros x y H; only 1: destruct Rle_dec as [H'| H']; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	8.22495794296	2712
Coq.Reals.Rminmax.plus_max_distr_l	40	4.4.5.0.1.1	search with cache (only 1: intros x y H; only 1: apply max_mono; only 1: eauto with *; only 1: intros H'1; only 1: pose proof (max_spec x y) as H1; only 1: intuition).	5.56118798256	1751
Coq.Reals.Rminmax.plus_max_distr_r	40
Coq.Reals.Rminmax.plus_min_distr_l	40	0.1.0.0.7	search with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.573104143143	262
Coq.Reals.Rminmax.plus_min_distr_r	40	0.1.0.0.0.7	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.421707868576	187
Coq.Reals.Rminmax.opp_max_distr	40	1.0.1.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0365550518036	14
Coq.Reals.Rminmax.opp_min_distr	40	3.2.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0344040393829	9
Coq.Reals.Rminmax.minus_max_distr_l	40
Coq.Reals.Rminmax.minus_max_distr_r	40
Coq.Reals.Rminmax.minus_min_distr_l	40
Coq.Reals.Rminmax.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	21.3	search with cache (only 1: intro; only 1: lra).	0.176726818085	587
Coq.Reals.Rlimit.eps4	40	0.11	search with cache (only 1: intro l; only 1: field).	0.0545420646667	46
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0229752063751	12
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0231370925903	12
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.1.0.2.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0293920040131	9
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.10.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0566749572754	134
Coq.Reals.R_sqrt.sqrt_pow2	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	2.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0205781459808	5
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.12.0.1	search with cache (only 1: intros; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.463709115982	787
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	6.1.0.0.0.0.5.1	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply (sqrt_positivity x H); only 1: apply sqrt_pos).	2.99668121338	4129
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.0.12.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: rewrite double_var; only 1: elim (Nat.nlt_0_r _ H); only 1: reflexivity).	1.44735908508	2476
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.1.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.061751127243	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.03276014328	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	2.1.0.23.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	1.0361468792	1653
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	2.25.5.0.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite cos_PI2; only 1: rewrite sin_PI2; only 1: ring).	22.1441888809	24439
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	4.3.2.7.34.0	search with cache (only 1: intro x; only 1: symmetry in  |- *; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	5.16737508774	12373
Coq.Reals.Rtrigo1.PI2_RGT_0	40	2.36	search with cache (only 1: pose proof PI_RGT_0 as H0; only 1: lra).	0.864763975143	2797
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.32	search with cache (only 1: pose proof PI_RGT_0 as H0; only 1: lra).	0.47244310379	875
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	22.31	search with cache (only 1: pose proof PI_RGT_0 as H0; only 1: lra).	0.689806938171	1826
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	4.3.2.0.3.0.1.0	search with cache (only 1: intros p q; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	10.5061459541	4728
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	33.52	search with cache (only 1: intros An l; only 1: split).	0.589543104172	5601
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	3.2	search with cache (only 1: intros; only 1: assumption).	0.0254778862	15
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	11.0.15.0.2.1.1	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite HrecN; only 1: ring).	13.3400650024	31666
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	1.0.0.0.1.0.1	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0441319942474	10
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	1.0.1.0.2.0.0.13.3.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.720157146454	2662
Coq.Reals.PartSum.Rabs_triang_gen	40	0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.196238040924	248
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.1.0.0.1.0.0.0.1.0.0.0.0.0.6.1	search with cache (only 1: intros x y H; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	7.15231704712	8881
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40	0.10.10.2.10	search with cache (only 1: intro n; only 1: apply CRealLe_not_lt; only 1: intros; only 1: ring_simplify; only 1: abstract (compute; discriminate)).	1.38946604729	2662
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.3.0.3.10.0	search with cache (only 1: intros; only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.656270027161	557
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.1.11.0	search with cache (only 1: intros x y H; only 1: split; only 1: apply H; only 1: apply H).	0.812410831451	1104
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	1.6.3.21.4	search with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: exact H0; only 1: destruct H, H0; only 1: assumption).	4.90752196312	14571
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	3.2.1.0.30	search with cache (only 1: intro n; only 1: intros x y H; only 1: intros H1 H2; only 1: rewrite <- H in H2; only 1: contradiction).	31.9472088814	23903
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	3.2.1.0.30	search with cache (only 1: intro n; only 1: intros x y H; only 1: intros H1 H2; only 1: rewrite <- H in H2; only 1: contradiction).	30.5023980141	22710
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	0.9.0.0.4.1.0.43.24	search with cache (only 1: intros x y H x0 y0 H0; only 1: apply Qabs_case; only 1: intro; only 1: unfold Qle in *; only 1: ring_simplify; only 1: reflexivity; only 1: intro; only 1: ring_simplify; only 1: reflexivity).	34.1091229916	83212
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	1.1.0.2.0.0.1.1.0.2.0.0.36.8	search with cache (only 1: intro q; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	28.7739379406	33438
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	59.74	search with cache (only 1: destruct x as [xn xcau]; only 1: assumption).	0.59424996376	10906
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	29	search with cache (only 1: assumption).	0.0755379199982	420
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	2.1.0.0.0.3.1	search with cache (only 1: intros x y z H; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	2.2649641037	562
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	1.4.1.19	search with cache (only 1: intro q; only 1: intros x y z H; only 1: apply CReal_plus_lt_reg_l in H; only 1: contradiction).	1.18405604362	2726
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.2.0.7.1.0.27.0	search with cache (only 1: intros [xn limx]; only 1: apply CRealEq_diff; only 1: intros; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: rewrite Qplus_comm; only 1: setoid_replace (xn (2 * Pos.to_nat n)%nat + - xn (2 * Pos.to_nat n)%nat - 0)%Q with 0; only 1: unfold Qle; only 1: simpl; only 1: unfold Z.le; only 1: intro absurd; only 1: inversion absurd; only 1: field).	22.9835338593	13565
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.1.0.0.1.0.1.3	search with cache (only 1: intros x y H [n q]; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction).	0.885772943497	547
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2	search with cache (only 1: reflexivity).	0.0143449306488	3
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	4.2.0.0.94	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.995879888535	6795
Coq.Reals.Rtrigo_reg.derivable_cos	40	1.1.0.0.1	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0391190052032	12
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.1.1.0.3.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	0.25216293335	308
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.height_non_negative	40
Coq.FSets.FMapFullAVL.avl_node	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0263090133667	2
Coq.FSets.FMapFullAVL.height_0	40
Coq.FSets.FMapFullAVL.empty_avl	40	22	search with cache (only 1: auto with *).	0.0697281360626	231
Coq.FSets.FMapFullAVL.create_avl	40	0.0.0.0.38.2	search with cache (only 1: intros m; only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	33.813713789	26926
Coq.FSets.FMapFullAVL.create_height	40	0.1.0	search with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.0231220722198	4
Coq.FSets.FMapFullAVL.bal_avl	40
Coq.FSets.FMapFullAVL.bal_height_1	40
Coq.FSets.FMapFullAVL.bal_height_2	40
Coq.FSets.FMapFullAVL.add_avl_1	40
Coq.FSets.FMapFullAVL.add_avl	40
Coq.FSets.FMapFullAVL.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.remove_min_avl	40
Coq.FSets.FMapFullAVL.merge_avl_1	40
Coq.FSets.FMapFullAVL.merge_avl	40
Coq.FSets.FMapFullAVL.remove_avl_1	40
Coq.FSets.FMapFullAVL.remove_avl	40
Coq.FSets.FMapFullAVL.join_avl_1	40
Coq.FSets.FMapFullAVL.join_avl	40
Coq.FSets.FMapFullAVL.concat_avl	40
Coq.FSets.FMapFullAVL.split_avl	40
Coq.FSets.FMapFullAVL.map_height	40
Coq.FSets.FMapFullAVL.map_avl	40
Coq.FSets.FMapFullAVL.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0271940231323	5
Coq.FSets.FMapFullAVL.mapi_avl	40
Coq.FSets.FMapFullAVL.map_option_avl	40
Coq.FSets.FMapFullAVL.map2_opt_avl	40
Coq.FSets.FMapFullAVL.map2_avl	40
Coq.FSets.FMapFullAVL.MapsTo_1	40
Coq.FSets.FMapFullAVL.mem_1	40
Coq.FSets.FMapFullAVL.mem_2	40
Coq.FSets.FMapFullAVL.empty_1	40
Coq.FSets.FMapFullAVL.is_empty_1	40
Coq.FSets.FMapFullAVL.is_empty_2	40
Coq.FSets.FMapFullAVL.add_1	40
Coq.FSets.FMapFullAVL.add_2	40
Coq.FSets.FMapFullAVL.add_3	40
Coq.FSets.FMapFullAVL.remove_1	40
Coq.FSets.FMapFullAVL.remove_2	40
Coq.FSets.FMapFullAVL.remove_3	40
Coq.FSets.FMapFullAVL.find_1	40
Coq.FSets.FMapFullAVL.find_2	40
Coq.FSets.FMapFullAVL.fold_1	40
Coq.FSets.FMapFullAVL.elements_1	40
Coq.FSets.FMapFullAVL.elements_2	40	0.1.9.0.3	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: intros; only 1: auto).	0.687566041946	1453
Coq.FSets.FMapFullAVL.elements_3	40
Coq.FSets.FMapFullAVL.elements_3w	40
Coq.FSets.FMapFullAVL.cardinal_1	40
Coq.FSets.FMapFullAVL.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.equal_1	40
Coq.FSets.FMapFullAVL.equal_2	40	0.0.0.0.4.2.1.2.6	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	5.92917990685	8677
Coq.FSets.FMapFullAVL.map_1	40
Coq.FSets.FMapFullAVL.map_2	40
Coq.FSets.FMapFullAVL.mapi_1	40
Coq.FSets.FMapFullAVL.mapi_2	40
Coq.FSets.FMapFullAVL.map2_1	40
Coq.FSets.FMapFullAVL.map2_2	40
Coq.FSets.FMapFullAVL.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.cons_Cmp	40
Coq.FSets.FMapFullAVL.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.compare_Cmp	40
Coq.FSets.FMapFullAVL.compare	40
Coq.FSets.FMapFullAVL.eq_seq	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0228259563446	3
Coq.FSets.FMapFullAVL.lt_slt	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0228669643402	3
Coq.FSets.FMapFullAVL.eq_1	40
Coq.FSets.FMapFullAVL.eq_2	40
Coq.FSets.FMapFullAVL.eq_refl	40
Coq.FSets.FMapFullAVL.eq_sym	40
Coq.FSets.FMapFullAVL.eq_trans	40
Coq.FSets.FMapFullAVL.lt_trans	40
Coq.FSets.FMapFullAVL.lt_not_eq	40
Coq.FSets.FMapAVL.MapsTo_In	40	2.2.4.14.47.3.0	search with cache (only 1: intros; only 1: induction m; only 1: inversion_clear H; only 1: inversion_clear H; only 1: intuition; only 1: auto; only 1: auto).	11.5836949348	53049
Coq.FSets.FMapAVL.In_MapsTo	40
Coq.FSets.FMapAVL.In_alt	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.In_1	40	1.1.0.0.1.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.64368891716	9
Coq.FSets.FMapAVL.In_node_iff	40	6.4	search with cache (only 1: intros m x e f; only 1: intuition_in).	0.612659215927	146
Coq.FSets.FMapAVL.lt_leaf	40	4.47	search with cache (only 1: intros m x y; only 1: intuition_in).	1.03414702415	2369
Coq.FSets.FMapAVL.gt_leaf	40	0.47	search with cache (only 1: intros m x y; only 1: intuition_in).	0.701148986816	1841
Coq.FSets.FMapAVL.lt_tree_node	40	0.0.1.42	search with cache (only 1: unfold lt_tree; only 1: intros; only 1: intuition_in; only 1: L.MX.order).	5.31941699982	4102
Coq.FSets.FMapAVL.gt_tree_node	40	0.1.1.38	search with cache (only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).	25.6037139893	3261
Coq.FSets.FMapAVL.lt_left	40	2.1.2	search with cache (only 1: unfold lt_tree in *; only 1: intros; only 1: auto).	0.0206880569458	16
Coq.FSets.FMapAVL.lt_right	40	2.1.2	search with cache (only 1: unfold lt_tree in *; only 1: intros; only 1: auto).	0.0202240943909	16
Coq.FSets.FMapAVL.gt_left	40	3	search with cache (only 1: intuition_in).	0.0209488868713	12
Coq.FSets.FMapAVL.gt_right	40	3	search with cache (only 1: intuition_in).	0.0207839012146	12
Coq.FSets.FMapAVL.lt_tree_not_in	40	6.10.0.6.27	search with cache (only 1: intros; only 1: induction m; only 1: intuition_in; only 1: intuition; only 1: order).	3.40539503098	4028
Coq.FSets.FMapAVL.lt_tree_trans	40	0.0.12.1	search with cache (only 1: intros; only 1: intro; only 1: intro; only 1: order).	1.96090388298	417
Coq.FSets.FMapAVL.gt_tree_not_in	40	0.0.0.1	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0388741493225	5
Coq.FSets.FMapAVL.gt_tree_trans	40	6	search with cache (only 1: eauto with ordered_type).	0.453384160995	30
Coq.FSets.FMapAVL.empty_bst	40	11	search with cache (only 1: trivial).	0.0193221569061	33
Coq.FSets.FMapAVL.empty_1	40	81	search with cache (only 1: inversion_clear 1).	2.80791687965	6246
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40	2.2.2.13	search with cache (only 1: intros m Hm m' Hm' cmp; only 1: induction m; only 1: intuition_in; only 1: intuition_in).	0.388355970383	386
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40	0.0.0.7.5.1	search with cache (only 1: intuition_in; only 1: functional induction (mem x m); only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.859472990036	1257
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.find_iff	40
Coq.FSets.FMapAVL.find_in	40	0.0.0.6.4.1	search with cache (only 1: intuition_in; only 1: functional induction (find x m); only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	0.951709985733	943
Coq.FSets.FMapAVL.in_find	40
Coq.FSets.FMapAVL.find_in_iff	40
Coq.FSets.FMapAVL.not_find_iff	40
Coq.FSets.FMapAVL.find_find	40
Coq.FSets.FMapAVL.find_mapsto_equiv	40
Coq.FSets.FMapAVL.find_in_equiv	40
Coq.FSets.FMapAVL.create_bst	40
Coq.FSets.FMapAVL.create_in	40	2.7	search with cache (only 1: unfold create; only 1: intuition_in).	0.481140851974	139
Coq.FSets.FMapAVL.bal_bst	40
Coq.FSets.FMapAVL.bal_in	40
Coq.FSets.FMapAVL.bal_mapsto	40
Coq.FSets.FMapAVL.bal_find	40
Coq.FSets.FMapAVL.add_in	40
Coq.FSets.FMapAVL.add_bst	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.add_find	40
Coq.FSets.FMapAVL.remove_min_in	40
Coq.FSets.FMapAVL.remove_min_mapsto	40
Coq.FSets.FMapAVL.remove_min_bst	40
Coq.FSets.FMapAVL.remove_min_gt_tree	40
Coq.FSets.FMapAVL.remove_min_find	40
Coq.FSets.FMapAVL.merge_in	40
Coq.FSets.FMapAVL.merge_mapsto	40
Coq.FSets.FMapAVL.merge_bst	40
Coq.FSets.FMapAVL.remove_in	40
Coq.FSets.FMapAVL.remove_bst	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.join_in	40
Coq.FSets.FMapAVL.join_bst	40
Coq.FSets.FMapAVL.join_find	40
Coq.FSets.FMapAVL.split_in_1	40
Coq.FSets.FMapAVL.split_in_2	40
Coq.FSets.FMapAVL.split_in_3	40
Coq.FSets.FMapAVL.split_bst	40
Coq.FSets.FMapAVL.split_lt_tree	40
Coq.FSets.FMapAVL.split_gt_tree	40
Coq.FSets.FMapAVL.split_find	40
Coq.FSets.FMapAVL.concat_in	40
Coq.FSets.FMapAVL.concat_bst	40
Coq.FSets.FMapAVL.concat_find	40
Coq.FSets.FMapAVL.elements_aux_mapsto	40
Coq.FSets.FMapAVL.elements_mapsto	40
Coq.FSets.FMapAVL.elements_in	40
Coq.FSets.FMapAVL.elements_aux_sort	40
Coq.FSets.FMapAVL.elements_sort	40
Coq.FSets.FMapAVL.elements_nodup	40
Coq.FSets.FMapAVL.elements_aux_cardinal	40
Coq.FSets.FMapAVL.elements_cardinal	40
Coq.FSets.FMapAVL.elements_app	40
Coq.FSets.FMapAVL.elements_node	40
Coq.FSets.FMapAVL.fold_equiv_aux	40
Coq.FSets.FMapAVL.fold_equiv	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.flatten_e_elements	40
Coq.FSets.FMapAVL.cons_1	40
Coq.FSets.FMapAVL.cons_IfEq	40
Coq.FSets.FMapAVL.equal_end_IfEq	40
Coq.FSets.FMapAVL.equal_more_IfEq	40	2.4.0.3.1	search with cache (only 1: unfold IfEq; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	5.84224200249	569
Coq.FSets.FMapAVL.equal_cont_IfEq	40
Coq.FSets.FMapAVL.equal_IfEq	40
Coq.FSets.FMapAVL.Equivb_elements	40
Coq.FSets.FMapAVL.equal_Equivb	40
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40	1.1.0.0.1.0	search with cache (only 1: induction m; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0757250785828	9
Coq.FSets.FMapAVL.map_bst	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40	0.0.0.0.0.0	search with cache (only 1: induction m; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0920779705048	6
Coq.FSets.FMapAVL.mapi_bst	40
Coq.FSets.FMapAVL.map_option_2	40
Coq.FSets.FMapAVL.map_option_bst	40
Coq.FSets.FMapAVL.map_option_find	40
Coq.FSets.FMapAVL.map2_opt_2	40
Coq.FSets.FMapAVL.map2_opt_bst	40
Coq.FSets.FMapAVL.map2_opt_1	40
Coq.FSets.FMapAVL.map2_bst	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40
Coq.FSets.FMapAVL.empty_1	40
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.elements_1	40
Coq.FSets.FMapAVL.elements_2	40	0.0.3.4.3	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: intros; only 1: auto).	0.451997995377	644
Coq.FSets.FMapAVL.elements_3	40	9.0.1.40.22	search with cache (only 1: intros; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion_clear 1).	1.38982105255	7625
Coq.FSets.FMapAVL.elements_3w	40	15.40.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.989969968796	5285
Coq.FSets.FMapAVL.cardinal_1	40	177	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	28.162350893	108139
Coq.FSets.FMapAVL.Equivb_Equivb	40
Coq.FSets.FMapAVL.equal_1	40
Coq.FSets.FMapAVL.equal_2	40	0.0.1.1.3.0.2.4.2	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: rewrite Equivb_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	3.0116250515	3547
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.cons_Cmp	40
Coq.FSets.FMapAVL.compare_end_Cmp	40	2.0.0.0.0.84.64	search with cache (only 1: destruct e2; only 1: reflexivity; only 1: red; only 1: red; only 1: red; only 1: red; only 1: auto).	3.88170003891	67470
Coq.FSets.FMapAVL.compare_more_Cmp	40
Coq.FSets.FMapAVL.compare_cont_Cmp	40
Coq.FSets.FMapAVL.compare_Cmp	40
Coq.FSets.FMapAVL.compare	40
Coq.FSets.FMapAVL.eq_seq	40	38	search with cache (only 1: auto with *).	0.144616127014	971
Coq.FSets.FMapAVL.lt_slt	40	0	search with cache (only 1: intuition).	0.0171720981598	1
Coq.FSets.FMapAVL.eq_1	40
Coq.FSets.FMapAVL.eq_2	40
Coq.FSets.FMapAVL.eq_refl	40
Coq.FSets.FMapAVL.eq_sym	40
Coq.FSets.FMapAVL.eq_trans	40
Coq.FSets.FMapAVL.lt_trans	40
Coq.FSets.FMapAVL.lt_not_eq	40
Coq.FSets.FSetFacts.In_eq_iff	40
Coq.FSets.FSetFacts.mem_iff	40	89	search with cache (only 1: intuition).	3.28917503357	28763
Coq.FSets.FSetFacts.not_mem_iff	40
Coq.FSets.FSetFacts.equal_iff	40	3.4.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0167460441589	10
Coq.FSets.FSetFacts.subset_iff	40	5	search with cache (only 1: intuition).	0.0267400741577	18
Coq.FSets.FSetFacts.empty_iff	40
Coq.FSets.FSetFacts.is_empty_iff	40	4	search with cache (only 1: intuition).	0.014298915863	5
Coq.FSets.FSetFacts.singleton_iff	40	4	search with cache (only 1: intuition).	0.00714993476868	5
Coq.FSets.FSetFacts.add_iff	40
Coq.FSets.FSetFacts.add_neq_iff	40	0.6.33.10.17	search with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: intros EQ; only 1: intuition; only 1: exact (add_3 E H)).	18.3043689728	74041
Coq.FSets.FSetFacts.remove_iff	40
Coq.FSets.FSetFacts.remove_neq_iff	40	1.1.9	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0903658866882	162
Coq.FSets.FSetFacts.union_iff	40	9	search with cache (only 1: intuition).	0.0390958786011	57
Coq.FSets.FSetFacts.inter_iff	40
Coq.FSets.FSetFacts.diff_iff	40
Coq.FSets.FSetFacts.filter_iff	40
Coq.FSets.FSetFacts.for_all_iff	40	15	search with cache (only 1: intuition).	0.0777280330658	161
Coq.FSets.FSetFacts.exists_iff	40	17	search with cache (only 1: intuition).	0.124024152756	336
Coq.FSets.FSetFacts.elements_iff	40	19	search with cache (only 1: intuition).	0.0451650619507	220
Coq.FSets.FSetFacts.mem_b	40
Coq.FSets.FSetFacts.empty_b	40
Coq.FSets.FSetFacts.add_b	40
Coq.FSets.FSetFacts.add_neq_b	40
Coq.FSets.FSetFacts.remove_b	40
Coq.FSets.FSetFacts.remove_neq_b	40
Coq.FSets.FSetFacts.singleton_b	40
Coq.FSets.FSetFacts.union_b	40
Coq.FSets.FSetFacts.inter_b	40
Coq.FSets.FSetFacts.diff_b	40
Coq.FSets.FSetFacts.elements_b	40
Coq.FSets.FSetFacts.filter_b	40
Coq.FSets.FSetFacts.for_all_b	40
Coq.FSets.FSetFacts.exists_b	40
Coq.FSets.FSetFacts.E_ST	40	2.0.5.3.0.5.11.18	search with cache (only 1: constructor; only 1: intuition; only 1: red; only 1: intros x y H; only 1: auto; only 1: red; only 1: intros x y H; only 1: eauto).	0.387882947922	3463
Coq.FSets.FSetFacts.Equal_ST	40
Coq.FSets.FSetFacts.In_m	40
Coq.FSets.FSetFacts.is_empty_m	40
Coq.FSets.FSetFacts.Empty_m	40
Coq.FSets.FSetFacts.mem_m	40
Coq.FSets.FSetFacts.singleton_m	40
Coq.FSets.FSetFacts.add_m	40
Coq.FSets.FSetFacts.remove_m	40
Coq.FSets.FSetFacts.union_m	40
Coq.FSets.FSetFacts.inter_m	40
Coq.FSets.FSetFacts.diff_m	40
Coq.FSets.FSetFacts.Subset_m	40
Coq.FSets.FSetFacts.subset_m	40
Coq.FSets.FSetFacts.equal_m	40
Coq.FSets.FSetFacts.Subset_refl	40	3.12	search with cache (only 1: intros x y H; only 1: auto).	0.0295858383179	202
Coq.FSets.FSetFacts.Subset_trans	40	2.30.0.2	search with cache (only 1: intros y z H1 H2; only 1: intros; only 1: red; only 1: auto).	1.61001300812	5640
Coq.FSets.FSetFacts.In_s_m	40	3.0.13.4.3	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: rewrite (In_eq_iff s' H); only 1: intuition).	0.819550037384	3489
Coq.FSets.FSetFacts.Empty_s_m_Proper	40	2.5.10.3.1.0	search with cache (only 1: intros x y H; only 1: red; only 1: intuition; only 1: intro; only 1: rewrite H; only 1: auto).	2.80195689201	7779
Coq.FSets.FSetFacts.add_s_m_Proper	40	0.0.0.3.30.7	search with cache (only 1: intros; only 1: intros EQ; only 1: do 2 rewrite add_iff; only 1: intuition; only 1: constructor; only 1: eauto with set).	9.99796295166	27719
Coq.FSets.FSetFacts.remove_s_m_Proper	40	0.6.2.7.3	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: rewrite H; only 1: do 2 rewrite remove_iff; only 1: intuition).	2.33299994469	2589
Coq.FSets.FSetFacts.union_s_m_Proper	40	0.3.7	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.376086950302	334
Coq.FSets.FSetFacts.inter_s_m_Proper	40	0.10.7	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	1.57664895058	1823
Coq.FSets.FSetFacts.diff_s_m_Proper	40	0.7.7	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.84557890892	977
Coq.FSets.FSetFacts.filter_equal	40
Coq.FSets.FSetFacts.filter_ext	40
Coq.FSets.FSetFacts.filter_subset	40
Coq.FSets.FSetPositive.In_1	40	1.3.4.0	search with cache (only 1: intros x y H; only 1: intros EQ; only 1: inversion EQ; only 1: now subst).	0.10440993309	130
Coq.FSets.FSetPositive.eq_refl	40	8	search with cache (only 1: now subst).	0.0190680027008	20
Coq.FSets.FSetPositive.eq_sym	40	23	search with cache (only 1: now subst).	0.849026918411	3071
Coq.FSets.FSetPositive.eq_trans	40
Coq.FSets.FSetPositive.mem_1	40	5.0	search with cache (only 1: intros x y H; only 1: auto with arith).	0.00622916221619	7
Coq.FSets.FSetPositive.mem_2	40	3	search with cache (only 1: trivial).	0.00500416755676	13
Coq.FSets.FSetPositive.mem_Leaf	40	8.0	search with cache (only 1: intros EQ; only 1: auto with arith).	0.00568795204163	10
Coq.FSets.FSetPositive.empty_1	40	9	search with cache (only 1: now subst).	0.00986981391907	21
Coq.FSets.FSetPositive.mem_node	40
Coq.FSets.FSetPositive.is_empty_spec	40
Coq.FSets.FSetPositive.is_empty_1	40
Coq.FSets.FSetPositive.is_empty_2	40	0.42.0	search with cache (only 1: intros EQ; only 1: rewrite is_empty_spec; only 1: trivial).	1.72353506088	8877
Coq.FSets.FSetPositive.subset_Leaf_s	40	9	search with cache (only 1: now subst).	0.0169911384583	19
Coq.FSets.FSetPositive.subset_spec	40
Coq.FSets.FSetPositive.subset_1	40
Coq.FSets.FSetPositive.subset_2	40
Coq.FSets.FSetPositive.equal_subset	40
Coq.FSets.FSetPositive.equal_spec	40
Coq.FSets.FSetPositive.equal_1	40
Coq.FSets.FSetPositive.equal_2	40
Coq.FSets.FSetPositive.eq_dec	40
Coq.FSets.FSetPositive.lex_Opp	40
Coq.FSets.FSetPositive.compare_bool_inv	40
Coq.FSets.FSetPositive.compare_inv	40
Coq.FSets.FSetPositive.lex_Eq	40
Coq.FSets.FSetPositive.compare_bool_Eq	40	14.14.14.14.21	search with cache (only 1: intros [| ] [| ]; only 1: now subst; only 1: now subst; only 1: now subst; only 1: now subst).	8.15003490448	32095
Coq.FSets.FSetPositive.compare_equal	40
Coq.FSets.FSetPositive.compare_gt	40
Coq.FSets.FSetPositive.compare_eq	40
Coq.FSets.FSetPositive.compare	40
Coq.FSets.FSetPositive.ct_cxe	40
Coq.FSets.FSetPositive.ct_xce	40
Coq.FSets.FSetPositive.ct_lxl	40
Coq.FSets.FSetPositive.ct_gxg	40	10.10.10.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.290279865265	1802
Coq.FSets.FSetPositive.ct_xll	40	10.10.10.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.289269924164	1802
Coq.FSets.FSetPositive.ct_xgg	40	10.10.10.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.290203094482	1802
Coq.FSets.FSetPositive.ct_lex	40
Coq.FSets.FSetPositive.ct_compare_bool	40
Coq.FSets.FSetPositive.compare_x_Leaf	40
Coq.FSets.FSetPositive.compare_empty_x	40
Coq.FSets.FSetPositive.compare_x_empty	40
Coq.FSets.FSetPositive.ct_compare_fun	40
Coq.FSets.FSetPositive.lt_trans	40
Coq.FSets.FSetPositive.lt_not_eq	40
Coq.FSets.FSetPositive.add_spec	40
Coq.FSets.FSetPositive.add_1	40
Coq.FSets.FSetPositive.add_2	40	16.1.0	search with cache (only 1: intros y z H1 H2; only 1: apply <- add_spec; only 1: auto).	0.465425014496	1828
Coq.FSets.FSetPositive.add_3	40
Coq.FSets.FSetPositive.remove_spec	40
Coq.FSets.FSetPositive.remove_1	40
Coq.FSets.FSetPositive.remove_2	40	5.25.0	search with cache (only 1: intros y z H1 H2; only 1: rewrite remove_spec; only 1: tauto).	7.49626302719	21142
Coq.FSets.FSetPositive.remove_3	40
Coq.FSets.FSetPositive.singleton_1	40
Coq.FSets.FSetPositive.singleton_2	40	0.0.12.2	search with cache (only 1: intros s x y; only 1: apply <- add_spec; only 1: left; only 1: auto).	0.150439023972	602
Coq.FSets.FSetPositive.union_spec	40
Coq.FSets.FSetPositive.union_1	40
Coq.FSets.FSetPositive.union_2	40
Coq.FSets.FSetPositive.union_3	40	0.10.2.2	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: trivial).	0.311106920242	872
Coq.FSets.FSetPositive.inter_spec	40
Coq.FSets.FSetPositive.inter_1	40
Coq.FSets.FSetPositive.inter_2	40	0.1.1	search with cache (only 1: intros s x y; only 1: rewrite inter_spec; only 1: tauto).	0.0103509426117	5
Coq.FSets.FSetPositive.inter_3	40	0.26.1	search with cache (only 1: intros s x y; only 1: rewrite inter_spec; only 1: eauto).	1.08393502235	4372
Coq.FSets.FSetPositive.diff_spec	40
Coq.FSets.FSetPositive.diff_1	40
Coq.FSets.FSetPositive.diff_2	40	0.34.1	search with cache (only 1: intros s x y; only 1: rewrite diff_spec; only 1: tauto).	5.16214179993	23664
Coq.FSets.FSetPositive.diff_3	40	0.34.1	search with cache (only 1: intros s x y; only 1: rewrite diff_spec; only 1: tauto).	4.95836281776	21054
Coq.FSets.FSetPositive.fold_1	40
Coq.FSets.FSetPositive.cardinal_1	40
Coq.FSets.FSetPositive.xfilter_spec	40
Coq.FSets.FSetPositive.filter_1	40
Coq.FSets.FSetPositive.filter_2	40	0.3.0.4	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.105402946472	111
Coq.FSets.FSetPositive.filter_3	40	0.3.0.4	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.119855880737	112
Coq.FSets.FSetPositive.xforall_spec	40
Coq.FSets.FSetPositive.for_all_1	40
Coq.FSets.FSetPositive.for_all_2	40	0.1.2.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0116679668427	7
Coq.FSets.FSetPositive.xexists_spec	40
Coq.FSets.FSetPositive.exists_1	40
Coq.FSets.FSetPositive.exists_2	40	0.6.4.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0806410312653	124
Coq.FSets.FSetPositive.partition_filter	40
Coq.FSets.FSetPositive.partition_1	40
Coq.FSets.FSetPositive.partition_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.00706911087036	4
Coq.FSets.FSetPositive.xelements_spec	40
Coq.FSets.FSetPositive.elements_1	40
Coq.FSets.FSetPositive.elements_2	40
Coq.FSets.FSetPositive.lt_rev_append	40
Coq.FSets.FSetPositive.elements_3	40
Coq.FSets.FSetPositive.elements_3w	40
Coq.FSets.FSetPositive.choose_1	40
Coq.FSets.FSetPositive.choose_2	40
Coq.FSets.FSetPositive.choose_empty	40
Coq.FSets.FSetPositive.choose_3'	40
Coq.FSets.FSetPositive.choose_3	40
Coq.FSets.FSetPositive.min_elt_1	40
Coq.FSets.FSetPositive.min_elt_3	40
Coq.FSets.FSetPositive.min_elt_2	40
Coq.FSets.FSetPositive.max_elt_1	40
Coq.FSets.FSetPositive.max_elt_3	40
Coq.FSets.FSetPositive.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40	0.1.0.1.0.0.2.1.0.2.0.0.0.0.1.0.0.2.1.0.2.0.0.0.0.2	search with cache (only 1: induction i; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: intros; only 1: destruct j; only 1: simpl; only 1: rewrite (IHi j~1); only 1: auto; only 1: simpl; only 1: rewrite (IHi j~0); only 1: auto; only 1: simpl; only 1: rewrite <- (IHi 1); only 1: auto; only 1: intros; only 1: simpl; only 1: now simpl).	32.3622429371	97216
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	10	search with cache (only 1: now subst).	0.0736639499664	67
Coq.FSets.FMapPositive.gempty	40
Coq.FSets.FMapPositive.gss	40
Coq.FSets.FMapPositive.gleaf	40	0.0.0.0.10	search with cache (only 1: compute; only 1: destruct i; only 1: auto; only 1: auto; only 1: auto).	0.478395938873	416
Coq.FSets.FMapPositive.gso	40
Coq.FSets.FMapPositive.rleaf	40	0.0.0.1.11	search with cache (only 1: compute; only 1: destruct i; only 1: auto; only 1: auto; only 1: auto).	0.243886947632	431
Coq.FSets.FMapPositive.grs	40
Coq.FSets.FMapPositive.gro	40
Coq.FSets.FMapPositive.xelements_correct	40
Coq.FSets.FMapPositive.elements_correct	40
Coq.FSets.FMapPositive.xfind_left	40
Coq.FSets.FMapPositive.xelements_ii	40
Coq.FSets.FMapPositive.xelements_io	40
Coq.FSets.FMapPositive.xelements_oo	40
Coq.FSets.FMapPositive.xelements_oi	40	0.1.0.0.0.0.0.1.1.2.0.0.0.0.2.0	search with cache (only 1: induction m; only 1: inversion 1; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	18.4658880234	28966
Coq.FSets.FMapPositive.xelements_ih	40
Coq.FSets.FMapPositive.xelements_oh	40
Coq.FSets.FMapPositive.xelements_hi	40
Coq.FSets.FMapPositive.xelements_ho	40	0.0.1.0.0.0.0.0.0.0.1.1.0.2.0.0.0.0.3.0.0	search with cache (only 1: induction m; only 1: intros; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: destruct (in_inv H0); only 1: congruence; only 1: generalize H1; only 1: apply IHm2; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: generalize H0; only 1: apply IHm1; only 1: generalize H0; only 1: apply IHm2).	17.9391789436	29403
Coq.FSets.FMapPositive.find_xfind_h	40	4.5.5.103	search with cache (only 1: destruct i; only 1: auto; only 1: auto; only 1: auto).	22.7962529659	133780
Coq.FSets.FMapPositive.xelements_complete	40
Coq.FSets.FMapPositive.elements_complete	40
Coq.FSets.FMapPositive.cardinal_1	40
Coq.FSets.FMapPositive.mem_find	40
Coq.FSets.FMapPositive.Empty_alt	40
Coq.FSets.FMapPositive.Empty_Node	40
Coq.FSets.FMapPositive.mem_1	40
Coq.FSets.FMapPositive.mem_2	40
Coq.FSets.FMapPositive.MapsTo_1	40	4	search with cache (only 1: congruence).	0.0188729763031	5
Coq.FSets.FMapPositive.find_1	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0230450630188	4
Coq.FSets.FMapPositive.find_2	40	1.0	search with cache (only 1: intros; only 1: auto).	0.018238067627	3
Coq.FSets.FMapPositive.empty_1	40	5.0	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.023255109787	15
Coq.FSets.FMapPositive.is_empty_1	40
Coq.FSets.FMapPositive.is_empty_2	40
Coq.FSets.FMapPositive.add_1	40
Coq.FSets.FMapPositive.add_2	40
Coq.FSets.FMapPositive.add_3	40	0.1.0.2.1	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0607659816742	34
Coq.FSets.FMapPositive.remove_1	40
Coq.FSets.FMapPositive.remove_2	40
Coq.FSets.FMapPositive.remove_3	40
Coq.FSets.FMapPositive.elements_1	40
Coq.FSets.FMapPositive.elements_2	40
Coq.FSets.FMapPositive.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.xelements_sort	40
Coq.FSets.FMapPositive.elements_3	40
Coq.FSets.FMapPositive.elements_3w	40
Coq.FSets.FMapPositive.xgmapi	40
Coq.FSets.FMapPositive.gmapi	40
Coq.FSets.FMapPositive.mapi_1	40
Coq.FSets.FMapPositive.mapi_2	40
Coq.FSets.FMapPositive.map_1	40
Coq.FSets.FMapPositive.map_2	40	2.0.2.0.0.2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: unfold map; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: intuition; only 1: discriminate).	10.8691449165	8693
Coq.FSets.FMapPositive.xgmap2_l	40
Coq.FSets.FMapPositive.xgmap2_r	40	0.1.0.0.0.1.1.0.0.0.1.1.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: auto).	11.9390659332	18191
Coq.FSets.FMapPositive.gmap2	40
Coq.FSets.FMapPositive.map2_1	40
Coq.FSets.FMapPositive.map2_2	40
Coq.FSets.FMapPositive.xfoldi_1	40
Coq.FSets.FMapPositive.fold_1	40
Coq.FSets.FMapPositive.equal_1	40
Coq.FSets.FMapPositive.equal_2	40
Coq.FSets.FMapPositive.gsspec	40
Coq.FSets.FMapPositive.gsident	40
Coq.FSets.FMapPositive.xmap2_lr	40
Coq.FSets.FMapPositive.map2_commut	40
Coq.FSets.FMapFacts.eq_bool_alt	40
Coq.FSets.FMapFacts.eq_option_alt	40
Coq.FSets.FMapFacts.MapsTo_fun	40
Coq.FSets.FMapFacts.In_iff	40
Coq.FSets.FMapFacts.MapsTo_iff	40	1.4.0.4.1	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.0697410106659	197
Coq.FSets.FMapFacts.mem_in_iff	40	42.6.8	search with cache (only 1: intros EQ; only 1: intros; only 1: intuition).	4.80097198486	28252
Coq.FSets.FMapFacts.not_mem_in_iff	40
Coq.FSets.FMapFacts.In_dec	40
Coq.FSets.FMapFacts.find_mapsto_iff	40	6	search with cache (only 1: intuition).	0.0329940319061	22
Coq.FSets.FMapFacts.not_find_in_iff	40
Coq.FSets.FMapFacts.in_find_iff	40
Coq.FSets.FMapFacts.equal_iff	40
Coq.FSets.FMapFacts.empty_mapsto_iff	40
Coq.FSets.FMapFacts.empty_in_iff	40
Coq.FSets.FMapFacts.is_empty_iff	40	8.2	search with cache (only 1: intro H'; only 1: intuition).	0.0348029136658	60
Coq.FSets.FMapFacts.add_mapsto_iff	40
Coq.FSets.FMapFacts.add_in_iff	40
Coq.FSets.FMapFacts.add_neq_mapsto_iff	40	0.0.0.12.1	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto with map).	0.597606897354	420
Coq.FSets.FMapFacts.add_neq_in_iff	40	0.0.0.3.0.0.0.0.15.0.2.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	2.35954904556	7518
Coq.FSets.FMapFacts.remove_mapsto_iff	40
Coq.FSets.FMapFacts.remove_in_iff	40
Coq.FSets.FMapFacts.remove_neq_mapsto_iff	40	0.0.23	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.914659023285	1495
Coq.FSets.FMapFacts.remove_neq_in_iff	40	0.0.0.2.0.0.0.3.0.2.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_2; only 1: auto; only 1: auto).	0.675395011902	871
Coq.FSets.FMapFacts.elements_mapsto_iff	40
Coq.FSets.FMapFacts.elements_in_iff	40
Coq.FSets.FMapFacts.map_mapsto_iff	40
Coq.FSets.FMapFacts.map_in_iff	40
Coq.FSets.FMapFacts.mapi_in_iff	40
Coq.FSets.FMapFacts.mapi_inv	40
Coq.FSets.FMapFacts.mapi_1bis	40
Coq.FSets.FMapFacts.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.mem_find_b	40
Coq.FSets.FMapFacts.mem_b	40
Coq.FSets.FMapFacts.find_o	40
Coq.FSets.FMapFacts.empty_o	40	0.0.0.10.0.0.14.8	search with cache (only 1: intro H'; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: intuition; only 1: rewrite empty_mapsto_iff in H; only 1: elim H; only 1: discriminate).	3.39221000671	6222
Coq.FSets.FMapFacts.empty_a	40
Coq.FSets.FMapFacts.add_eq_o	40	0.1	search with cache (only 1: intros; only 1: auto with map).	0.0163412094116	3
Coq.FSets.FMapFacts.add_neq_o	40
Coq.FSets.FMapFacts.add_o	40	0.0.0.0.0.0.21.2	search with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	0.617573022842	1772
Coq.FSets.FMapFacts.add_eq_b	40
Coq.FSets.FMapFacts.add_neq_b	40
Coq.FSets.FMapFacts.add_b	40
Coq.FSets.FMapFacts.remove_eq_o	40
Coq.FSets.FMapFacts.remove_neq_o	40	0.0.0.22.0.0.22.2	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	4.24347805977	12921
Coq.FSets.FMapFacts.remove_o	40
Coq.FSets.FMapFacts.remove_eq_b	40
Coq.FSets.FMapFacts.remove_neq_b	40
Coq.FSets.FMapFacts.remove_b	40
Coq.FSets.FMapFacts.map_o	40
Coq.FSets.FMapFacts.map_b	40
Coq.FSets.FMapFacts.mapi_b	40
Coq.FSets.FMapFacts.mapi_o	40
Coq.FSets.FMapFacts.map2_1bis	40
Coq.FSets.FMapFacts.elements_o	40
Coq.FSets.FMapFacts.elements_b	40
Coq.FSets.FMapFacts.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.Equal_Equiv	40
Coq.FSets.FMapFacts.Equiv_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.Equal_refl	40	2.9	search with cache (only 1: intros x y H; only 1: intuition).	0.138375997543	127
Coq.FSets.FMapFacts.Equal_sym	40	7.0	search with cache (only 1: intros; only 1: now intuition).	0.0415010452271	9
Coq.FSets.FMapFacts.Equal_trans	40	4.14.1.0	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite H; only 1: intuition).	7.98196601868	5800
Coq.FSets.FMapFacts.Equal_ST	40	3.0	search with cache (only 1: intros EQ; only 1: auto).	0.0165219306946	5
Coq.FSets.FMapFacts.In_m_Proper	40
Coq.FSets.FMapFacts.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.Empty_m_Proper	40
Coq.FSets.FMapFacts.is_empty_m_Proper	40
Coq.FSets.FMapFacts.mem_m_Proper	40
Coq.FSets.FMapFacts.find_m_Proper	40	0.0.2.2.2.2	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	1.3891749382	762
Coq.FSets.FMapFacts.add_m_Proper	40
Coq.FSets.FMapFacts.remove_m_Proper	40
Coq.FSets.FMapFacts.map_m_Proper	40
Coq.FSets.FMapFacts.eqk_equiv	40
Coq.FSets.FMapFacts.eqke_equiv	40
Coq.FSets.FMapFacts.InA_eqke_eqk	40
Coq.FSets.FMapFacts.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.findA_rev	40
Coq.FSets.FMapFacts.elements_Empty	40
Coq.FSets.FMapFacts.elements_empty	40
Coq.FSets.FMapFacts.of_list_1	40
Coq.FSets.FMapFacts.of_list_1b	40
Coq.FSets.FMapFacts.of_list_2	40
Coq.FSets.FMapFacts.of_list_3	40
Coq.FSets.FMapFacts.fold_spec_right	40
Coq.FSets.FMapFacts.fold_rec	40
Coq.FSets.FMapFacts.fold_rec_bis	40
Coq.FSets.FMapFacts.fold_rec_nodep	40	0.0.0.1.11.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intro k; only 1: auto with *; only 1: intros; only 1: auto).	0.439855098724	655
Coq.FSets.FMapFacts.fold_rec_weak	40
Coq.FSets.FMapFacts.fold_rel	40
Coq.FSets.FMapFacts.map_induction	40
Coq.FSets.FMapFacts.map_induction_bis	40
Coq.FSets.FMapFacts.fold_identity	40
Coq.FSets.FMapFacts.fold_init	40
Coq.FSets.FMapFacts.fold_Empty	40
Coq.FSets.FMapFacts.fold_commutes	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Equal2	40
Coq.FSets.FMapFacts.fold_Add	40
Coq.FSets.FMapFacts.fold_add	40
Coq.FSets.FMapFacts.cardinal_fold	40
Coq.FSets.FMapFacts.cardinal_Empty	40
Coq.FSets.FMapFacts.Equal_cardinal	40
Coq.FSets.FMapFacts.cardinal_1	40
Coq.FSets.FMapFacts.cardinal_2	40
Coq.FSets.FMapFacts.cardinal_inv_1	40
Coq.FSets.FMapFacts.cardinal_inv_2	40
Coq.FSets.FMapFacts.cardinal_inv_2b	40	0.0.0.0.0.0.0.14.1.0.1.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	6.71705198288	10551
Coq.FSets.FMapFacts.filter_iff	40
Coq.FSets.FMapFacts.for_all_iff	40
Coq.FSets.FMapFacts.exists_iff	40
Coq.FSets.FMapFacts.Disjoint_alt	40
Coq.FSets.FMapFacts.partition_iff_1	40
Coq.FSets.FMapFacts.partition_iff_2	40
Coq.FSets.FMapFacts.partition_Partition	40
Coq.FSets.FMapFacts.Partition_In	40
Coq.FSets.FMapFacts.Disjoint_sym	40	2.2.0.0.17.8.0	search with cache (only 1: intros; only 1: red in H; only 1: intros k e; only 1: apply H with k; only 1: split; only 1: intuition; only 1: intuition).	35.9247829914	8929
Coq.FSets.FMapFacts.Partition_sym	40
Coq.FSets.FMapFacts.Partition_Empty	40
Coq.FSets.FMapFacts.Partition_Add	40
Coq.FSets.FMapFacts.Partition_fold	40
Coq.FSets.FMapFacts.Partition_cardinal	40
Coq.FSets.FMapFacts.Partition_partition	40
Coq.FSets.FMapFacts.update_mapsto_iff	40
Coq.FSets.FMapFacts.update_dec	40
Coq.FSets.FMapFacts.update_in_iff	40
Coq.FSets.FMapFacts.diff_mapsto_iff	40
Coq.FSets.FMapFacts.diff_in_iff	40
Coq.FSets.FMapFacts.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.restrict_in_iff	40
Coq.FSets.FMapFacts.cardinal_m_Proper	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.342732906342	236
Coq.FSets.FMapFacts.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.Partition_m_Proper	40
Coq.FSets.FMapFacts.update_m_Proper	40
Coq.FSets.FMapFacts.restrict_m_Proper	40
Coq.FSets.FMapFacts.diff_m_Proper	40
Coq.FSets.FMapFacts.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.gtb_1	40
Coq.FSets.FMapFacts.leb_1	40
Coq.FSets.FMapFacts.gtb_compat	40
Coq.FSets.FMapFacts.leb_compat	40
Coq.FSets.FMapFacts.elements_split	40
Coq.FSets.FMapFacts.elements_Add	40
Coq.FSets.FMapFacts.elements_Add_Above	40
Coq.FSets.FMapFacts.elements_Add_Below	40
Coq.FSets.FMapFacts.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.max_elt_Above	40
Coq.FSets.FMapFacts.max_elt_MapsTo	40
Coq.FSets.FMapFacts.max_elt_Empty	40
Coq.FSets.FMapFacts.min_elt_Below	40
Coq.FSets.FMapFacts.min_elt_MapsTo	40	0.0.1.1.1.0.0.6.1.2	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: induction (elements m); only 1: discriminate; only 1: destruct a; only 1: injection H as [=-> ->]; only 1: econstructor; only 1: red; only 1: auto with ordered_type).	5.93025994301	6198
Coq.FSets.FMapFacts.min_elt_Empty	40
Coq.FSets.FMapFacts.map_induction_max	40
Coq.FSets.FMapFacts.map_induction_min	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Add_Above	40
Coq.FSets.FMapFacts.fold_Add_Below	40
Coq.FSets.FMapWeakList.empty_1	40	1.2	search with cache (only 1: repeat red; only 1: inversion 1).	0.0204350948334	11
Coq.FSets.FMapWeakList.empty_NoDup	40	63	search with cache (only 1: left).	0.304031848907	2035
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_eq	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.add_3'	40
Coq.FSets.FMapWeakList.add_NoDup	40
Coq.FSets.FMapWeakList.add_eq	40
Coq.FSets.FMapWeakList.add_not_eq	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.remove_3'	40	0.0.0.0.0.1.5.5	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	13.423448801	19162
Coq.FSets.FMapWeakList.remove_NoDup	40
Coq.FSets.FMapWeakList.elements_1	40	7.0	search with cache (only 1: intros; only 1: auto).	0.0227999687195	17
Coq.FSets.FMapWeakList.elements_2	40	0.1	search with cache (only 1: intros m x y e; only 1: eauto).	0.0120961666107	3
Coq.FSets.FMapWeakList.elements_3w	40	14	search with cache (only 1: trivial).	0.0215790271759	75
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.submap_1	40
Coq.FSets.FMapWeakList.submap_2	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.map_NoDup	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.mapi_NoDup	40	0.0.0.0.0.0.1.0.0.0.0.0.0.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	5.55875587463	6684
Coq.FSets.FMapWeakList.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.combine_NoDup	40
Coq.FSets.FMapWeakList.combine_l_1	40
Coq.FSets.FMapWeakList.combine_r_1	40
Coq.FSets.FMapWeakList.combine_1	40
Coq.FSets.FMapWeakList.map2_NoDup	40
Coq.FSets.FMapWeakList.map2_0	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FMapWeakList.MapsTo_1	40
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.empty_1	40	80	search with cache (only 1: inversion_clear 1).	0.489351034164	3282
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.elements_1	40	6	search with cache (only 1: auto).	0.0323891639709	49
Coq.FSets.FMapWeakList.elements_2	40	2.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0127849578857	4
Coq.FSets.FMapWeakList.elements_3w	40	23.30.23	search with cache (only 1: intros; only 1: induction m; only 1: auto).	0.844993829727	6287
Coq.FSets.FMapWeakList.cardinal_1	40	32	search with cache (only 1: intuition).	0.0773990154266	561
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FSetToFiniteSet.In_In	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0212168693542	2
Coq.FSets.FSetToFiniteSet.Subset_Included	40	3.1	search with cache (only 1: compute; only 1: auto with extcore).	0.0299489498138	15
Coq.FSets.FSetToFiniteSet.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.empty_Empty_Set	40	45.54	search with cache (only 1: compute; only 1: intuition Dec.fsetdec).	2.61137890816	9480
Coq.FSets.FSetToFiniteSet.Empty_Empty_set	40	12.0.0.0.0.15.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).	2.23706412315	2817
Coq.FSets.FSetToFiniteSet.singleton_Singleton	40	0.0.13.14.13.16.23	search with cache (only 1: simpl_relation; only 1: intuition; only 1: red; only 1: red; only 1: red; only 1: intros s Hsame; only 1: auto with *).	6.93360805511	12885
Coq.FSets.FSetToFiniteSet.union_Union	40
Coq.FSets.FSetToFiniteSet.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.2.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	1.94598793983	1555
Coq.FSets.FSetToFiniteSet.add_Add	40
Coq.FSets.FSetToFiniteSet.Add_Add	40
Coq.FSets.FSetToFiniteSet.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.mem_eq	40
Coq.FSets.FSetEqProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.subset_mem_2	40	3.0.5	search with cache (only 1: intro H; only 1: intros; only 1: eauto with set).	0.102442979813	29
Coq.FSets.FSetEqProperties.empty_mem	40
Coq.FSets.FSetEqProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.choose_mem_1	40	3.5	search with cache (only 1: intro H; only 1: auto with set).	0.021341085434	10
Coq.FSets.FSetEqProperties.choose_mem_2	40	0.0.5	search with cache (only 1: intro H; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.0259718894958	8
Coq.FSets.FSetEqProperties.add_mem_1	40	9	search with cache (only 1: auto with *).	0.0408067703247	10
Coq.FSets.FSetEqProperties.add_mem_2	40
Coq.FSets.FSetEqProperties.remove_mem_1	40	0.30	search with cache (only 1: rewrite <- not_mem_iff; only 1: eauto with set).	0.458173036575	504
Coq.FSets.FSetEqProperties.remove_mem_2	40
Coq.FSets.FSetEqProperties.singleton_equal_add	40	10	search with cache (only 1: auto with *).	0.039137840271	21
Coq.FSets.FSetEqProperties.union_mem	40
Coq.FSets.FSetEqProperties.inter_mem	40
Coq.FSets.FSetEqProperties.diff_mem	40
Coq.FSets.FSetEqProperties.mem_3	40	0.2.6	search with cache (only 1: intro H; only 1: rewrite <- not_mem_iff; only 1: eauto).	0.0315198898315	24
Coq.FSets.FSetEqProperties.mem_4	40	0.31	search with cache (only 1: rewrite <- not_mem_iff; only 1: tauto).	3.08819794655	2563
Coq.FSets.FSetEqProperties.equal_refl	40	1.1	search with cache (only 1: apply equal_1; only 1: auto with *).	0.0196378231049	4
Coq.FSets.FSetEqProperties.equal_sym	40
Coq.FSets.FSetEqProperties.equal_trans	40	5.6.6	search with cache (only 1: intro H; only 1: intuition; only 1: eauto with set).	1.06533789635	279
Coq.FSets.FSetEqProperties.equal_equal	40	0.1.6	search with cache (only 1: intro H; only 1: rewrite (equal_2 H); only 1: auto).	0.0269370079041	10
Coq.FSets.FSetEqProperties.equal_cardinal	40	11	search with cache (only 1: auto with *).	0.0487561225891	45
Coq.FSets.FSetEqProperties.subset_refl	40	3.1.0.0.0	search with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: apply subset_2; only 1: eauto with set).	0.0369100570679	12
Coq.FSets.FSetEqProperties.subset_antisym	40	3.3.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with *).	0.0444929599762	9
Coq.FSets.FSetEqProperties.subset_trans	40	6.0	search with cache (only 1: intros; only 1: eauto with set).	0.343453168869	18
Coq.FSets.FSetEqProperties.subset_equal	40	3.9	search with cache (only 1: intro H; only 1: auto with set).	0.0960800647736	66
Coq.FSets.FSetEqProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0197970867157	1
Coq.FSets.FSetEqProperties.add_equal	40	0	search with cache (only 1: auto with set).	0.0197989940643	1
Coq.FSets.FSetEqProperties.remove_mem_3	40	6.10	search with cache (only 1: intro H; only 1: eauto with set).	0.806546926498	310
Coq.FSets.FSetEqProperties.remove_equal	40	0.0.39	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with *).	4.41509103775	4395
Coq.FSets.FSetEqProperties.add_remove	40
Coq.FSets.FSetEqProperties.remove_add	40	1.0.39	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with *).	9.52272891998	10993
Coq.FSets.FSetEqProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.singleton_mem_1	40	13	search with cache (only 1: auto with *).	0.0585148334503	75
Coq.FSets.FSetEqProperties.singleton_mem_2	40	3.3.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.0305421352386	9
Coq.FSets.FSetEqProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.union_sym	40	0	search with cache (only 1: auto with set).	0.019210100174	1
Coq.FSets.FSetEqProperties.union_subset_equal	40	1.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0385382175446	4
Coq.FSets.FSetEqProperties.union_equal_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0221071243286	2
Coq.FSets.FSetEqProperties.union_equal_2	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0223689079285	2
Coq.FSets.FSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.0185699462891	1
Coq.FSets.FSetEqProperties.add_union_singleton	40	0	search with cache (only 1: auto with set).	0.0184490680695	1
Coq.FSets.FSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0181620121002	1
Coq.FSets.FSetEqProperties.union_subset_1	40	1	search with cache (only 1: auto with set).	0.0190119743347	2
Coq.FSets.FSetEqProperties.union_subset_2	40	1	search with cache (only 1: auto with set).	0.0186080932617	2
Coq.FSets.FSetEqProperties.union_subset_3	40	1.0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: intros; only 1: auto with set).	0.0640239715576	4
Coq.FSets.FSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0187060832977	1
Coq.FSets.FSetEqProperties.inter_subset_equal	40	2.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0281319618225	5
Coq.FSets.FSetEqProperties.inter_equal_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0215740203857	2
Coq.FSets.FSetEqProperties.inter_equal_2	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0211999416351	2
Coq.FSets.FSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0179240703583	1
Coq.FSets.FSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0180089473724	1
Coq.FSets.FSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.018415927887	1
Coq.FSets.FSetEqProperties.inter_add_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0206940174103	2
Coq.FSets.FSetEqProperties.inter_add_2	40	0.0.36	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	15.6772270203	10024
Coq.FSets.FSetEqProperties.inter_subset_1	40	2.0	search with cache (only 1: apply subset_1; only 1: auto with set).	0.0193190574646	4
Coq.FSets.FSetEqProperties.inter_subset_2	40	2.0	search with cache (only 1: apply subset_1; only 1: auto with set).	0.0197989940643	4
Coq.FSets.FSetEqProperties.inter_subset_3	40	0.0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: intros; only 1: auto with *).	0.115669965744	3
Coq.FSets.FSetEqProperties.diff_subset	40	2.0	search with cache (only 1: apply subset_1; only 1: auto with set).	0.0192592144012	4
Coq.FSets.FSetEqProperties.diff_subset_equal	40	2.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0288481712341	5
Coq.FSets.FSetEqProperties.remove_inter_singleton	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.113695144653	2
Coq.FSets.FSetEqProperties.diff_inter_empty	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.619147062302	3
Coq.FSets.FSetEqProperties.diff_inter_all	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.147287130356	3
Coq.FSets.FSetEqProperties.set_rec	40
Coq.FSets.FSetEqProperties.exclusive_set	40
Coq.FSets.FSetEqProperties.fold_empty	40	1.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0204980373383	3
Coq.FSets.FSetEqProperties.fold_equal	40
Coq.FSets.FSetEqProperties.fold_add	40
Coq.FSets.FSetEqProperties.add_fold	40
Coq.FSets.FSetEqProperties.remove_fold_1	40	5.6.0.0.0.9.6.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto with set; only 1: auto with set).	13.2986409664	21274
Coq.FSets.FSetEqProperties.remove_fold_2	40
Coq.FSets.FSetEqProperties.fold_union	40
Coq.FSets.FSetEqProperties.add_cardinal_1	40	9	search with cache (only 1: auto with set fset).	0.039736032486	26
Coq.FSets.FSetEqProperties.add_cardinal_2	40	1.0.0.1.4	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.0823998451233	58
Coq.FSets.FSetEqProperties.remove_cardinal_1	40	0.0.0.0.0.0.0.4	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.092325925827	72
Coq.FSets.FSetEqProperties.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.union_cardinal	40	0.0.0.0.0.0.0.0.4	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: intros; only 1: auto).	0.127609968185	117
Coq.FSets.FSetEqProperties.subset_cardinal	40	9	search with cache (only 1: auto with set fset).	0.0401821136475	19
Coq.FSets.FSetEqProperties.Comp'	40	0.15.1.12	search with cache (only 1: intros s Hsame; only 1: intuition; only 1: rewrite <- H; only 1: tauto).	1.20047903061	799
Coq.FSets.FSetEqProperties.filter_mem	40
Coq.FSets.FSetEqProperties.for_all_filter	40
Coq.FSets.FSetEqProperties.exists_filter	40
Coq.FSets.FSetEqProperties.partition_filter_1	40	28	search with cache (only 1: auto with set).	0.962501049042	2337
Coq.FSets.FSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0254969596863	1
Coq.FSets.FSetEqProperties.filter_add_1	40
Coq.FSets.FSetEqProperties.filter_add_2	40
Coq.FSets.FSetEqProperties.add_filter_1	40
Coq.FSets.FSetEqProperties.add_filter_2	40	0.0.0.3.0.1.0.4.1.2.0	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).	26.348181963	9709
Coq.FSets.FSetEqProperties.union_filter	40
Coq.FSets.FSetEqProperties.filter_union	40	0.0.0.0.1.1.1.1.10	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	6.05181097984	1363
Coq.FSets.FSetEqProperties.for_all_mem_1	40	16.0.0.0.0.4.5	search with cache (only 1: intro H; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: auto with set).	9.36934399605	17939
Coq.FSets.FSetEqProperties.for_all_mem_2	40	0.8.4.3.11	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: auto with set; only 1: auto).	3.48420405388	7256
Coq.FSets.FSetEqProperties.for_all_mem_3	40
Coq.FSets.FSetEqProperties.for_all_mem_4	40
Coq.FSets.FSetEqProperties.for_all_exists	40
Coq.FSets.FSetEqProperties.Comp'	40	0.0.0.18	search with cache (only 1: intro a; only 1: intros; only 1: f_equal; only 1: auto).	0.108237028122	212
Coq.FSets.FSetEqProperties.exists_mem_1	40
Coq.FSets.FSetEqProperties.exists_mem_2	40
Coq.FSets.FSetEqProperties.exists_mem_3	40
Coq.FSets.FSetEqProperties.exists_mem_4	40
Coq.FSets.FSetEqProperties.sum_plus	40
Coq.FSets.FSetEqProperties.sum_filter	40
Coq.FSets.FSetEqProperties.fold_compat	40
Coq.FSets.FSetEqProperties.sum_compat	40
Coq.FSets.FSetBridge.empty	40
Coq.FSets.FSetBridge.is_empty	40
Coq.FSets.FSetBridge.mem	40
Coq.FSets.FSetBridge.add	40
Coq.FSets.FSetBridge.singleton	40
Coq.FSets.FSetBridge.remove	40
Coq.FSets.FSetBridge.union	40
Coq.FSets.FSetBridge.inter	40
Coq.FSets.FSetBridge.diff	40
Coq.FSets.FSetBridge.equal	40
Coq.FSets.FSetBridge.subset	40
Coq.FSets.FSetBridge.elements	40
Coq.FSets.FSetBridge.fold	40	75.15.41	search with cache (only 1: intros x l' H H0; only 1: simpl in *; only 1: eauto).	6.12641310692	43106
Coq.FSets.FSetBridge.cardinal	40
Coq.FSets.FSetBridge.compat_P_aux	40
Coq.FSets.FSetBridge.filter	40
Coq.FSets.FSetBridge.for_all	40
Coq.FSets.FSetBridge.exists_	40
Coq.FSets.FSetBridge.partition	40
Coq.FSets.FSetBridge.choose_aux	40
Coq.FSets.FSetBridge.choose	40
Coq.FSets.FSetBridge.choose_ok1	40
Coq.FSets.FSetBridge.choose_ok2	40
Coq.FSets.FSetBridge.choose_equal	40
Coq.FSets.FSetBridge.min_elt	40
Coq.FSets.FSetBridge.max_elt	40
Coq.FSets.FSetBridge.empty_1	40
Coq.FSets.FSetBridge.is_empty_1	40
Coq.FSets.FSetBridge.is_empty_2	40
Coq.FSets.FSetBridge.mem_1	40
Coq.FSets.FSetBridge.mem_2	40
Coq.FSets.FSetBridge.equal_1	40
Coq.FSets.FSetBridge.equal_2	40
Coq.FSets.FSetBridge.subset_1	40
Coq.FSets.FSetBridge.subset_2	40
Coq.FSets.FSetBridge.choose_1	40
Coq.FSets.FSetBridge.choose_2	40
Coq.FSets.FSetBridge.choose_3	40
Coq.FSets.FSetBridge.elements_1	40
Coq.FSets.FSetBridge.elements_2	40
Coq.FSets.FSetBridge.elements_3	40
Coq.FSets.FSetBridge.elements_3w	40	17.0	search with cache (only 1: intros; only 1: intuition).	0.402349948883	838
Coq.FSets.FSetBridge.min_elt_1	40
Coq.FSets.FSetBridge.min_elt_2	40
Coq.FSets.FSetBridge.min_elt_3	40
Coq.FSets.FSetBridge.max_elt_1	40
Coq.FSets.FSetBridge.max_elt_2	40
Coq.FSets.FSetBridge.max_elt_3	40
Coq.FSets.FSetBridge.add_1	40
Coq.FSets.FSetBridge.add_2	40	0.0.0.0.5	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0367679595947	30
Coq.FSets.FSetBridge.add_3	40
Coq.FSets.FSetBridge.remove_1	40
Coq.FSets.FSetBridge.remove_2	40
Coq.FSets.FSetBridge.remove_3	40
Coq.FSets.FSetBridge.singleton_1	40
Coq.FSets.FSetBridge.singleton_2	40
Coq.FSets.FSetBridge.union_1	40
Coq.FSets.FSetBridge.union_2	40
Coq.FSets.FSetBridge.union_3	40	0.0.0.8	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.180670976639	189
Coq.FSets.FSetBridge.inter_1	40
Coq.FSets.FSetBridge.inter_2	40	0.1.0.8	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.35814499855	260
Coq.FSets.FSetBridge.inter_3	40
Coq.FSets.FSetBridge.diff_1	40
Coq.FSets.FSetBridge.diff_2	40
Coq.FSets.FSetBridge.diff_3	40
Coq.FSets.FSetBridge.cardinal_1	40
Coq.FSets.FSetBridge.fold_1	40
Coq.FSets.FSetBridge.f_dec	40	1.5.1.5.19.6.20	search with cache (only 1: intro H; only 1: intros; only 1: destruct H; only 1: clear; only 1: intuition auto; ME.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: clear; only 1: intuition auto; ME.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	5.52582502365	6502
Coq.FSets.FSetBridge.compat_P_aux	40	1.44.0.13	search with cache (only 1: intros x y H; only 1: intros; only 1: destruct 1; only 1: intuition).	8.45278406143	13287
Coq.FSets.FSetBridge.filter_1	40
Coq.FSets.FSetBridge.filter_2	40
Coq.FSets.FSetBridge.filter_3	40	0.0.1.17.9.3	search with cache (only 1: intros s x y; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	14.2552399635	34848
Coq.FSets.FSetBridge.for_all_1	40
Coq.FSets.FSetBridge.for_all_2	40	5.0.15.17.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: discriminate).	2.05555009842	7490
Coq.FSets.FSetBridge.exists_1	40
Coq.FSets.FSetBridge.exists_2	40	0.0.0.6.14.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	2.99366688728	5320
Coq.FSets.FSetBridge.partition_1	40
Coq.FSets.FSetBridge.partition_2	40
Coq.FSets.FSetCompat.lt_not_eq	40
Coq.FSets.FSetCompat.compare	40
Coq.FSets.FSetCompat.In_compat	40
Coq.FSets.FSetCompat.mem_spec	40	10.14	search with cache (only 1: compute in *; only 1: intuition).	0.47426199913	491
Coq.FSets.FSetCompat.equal_spec	40
Coq.FSets.FSetCompat.subset_spec	40
Coq.FSets.FSetCompat.is_empty_spec	40
Coq.FSets.FSetCompat.add_spec	40
Coq.FSets.FSetCompat.remove_spec	40
Coq.FSets.FSetCompat.singleton_spec	40
Coq.FSets.FSetCompat.elements_spec1	40	3.11.11	search with cache (only 1: intuition; only 1: red; only 1: eauto with set).	0.338575839996	549
Coq.FSets.FSetCompat.for_all_spec	40
Coq.FSets.FSetCompat.exists_spec	40
Coq.FSets.FSetCompat.lt_strorder	40
Coq.FSets.FSetCompat.lt_compat	40
Coq.FSets.FSetCompat.compare_spec	40
Coq.FSets.FSetProperties.In_dec	40	0.0.1.1.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.816693067551	28
Coq.FSets.FSetProperties.Add_Equal	40
Coq.FSets.FSetProperties.equal_refl	40	12	search with cache (only 1: intuition).	0.0388898849487	62
Coq.FSets.FSetProperties.equal_sym	40	0.0	search with cache (only 1: intros; only 1: fsetdec).	0.0488269329071	2
Coq.FSets.FSetProperties.equal_trans	40	3	search with cache (only 1: fsetdec).	0.063628911972	4
Coq.FSets.FSetProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.029333114624	1
Coq.FSets.FSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0500168800354	1
Coq.FSets.FSetProperties.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0517680644989	1
Coq.FSets.FSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0433139801025	1
Coq.FSets.FSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0324060916901	1
Coq.FSets.FSetProperties.subset_remove_3	40	3	search with cache (only 1: fsetdec).	0.057028055191	4
Coq.FSets.FSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0569798946381	1
Coq.FSets.FSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.086373090744	1
Coq.FSets.FSetProperties.subset_add_2	40	5	search with cache (only 1: fsetdec).	0.049281835556	6
Coq.FSets.FSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0457370281219	1
Coq.FSets.FSetProperties.double_inclusion	40	0.0.0.11.17	search with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.8064930439	992
Coq.FSets.FSetProperties.empty_is_empty_1	40	3	search with cache (only 1: fsetdec).	0.0597820281982	4
Coq.FSets.FSetProperties.empty_is_empty_2	40	3	search with cache (only 1: fsetdec).	0.0500559806824	4
Coq.FSets.FSetProperties.add_equal	40	0	search with cache (only 1: fsetdec).	0.0779178142548	1
Coq.FSets.FSetProperties.add_add	40	17	search with cache (only 1: fsetdec).	0.259457826614	126
Coq.FSets.FSetProperties.remove_equal	40	3	search with cache (only 1: fsetdec).	0.136313915253	4
Coq.FSets.FSetProperties.Equal_remove	40	4	search with cache (only 1: fsetdec).	0.413011074066	62
Coq.FSets.FSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.137659072876	1
Coq.FSets.FSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.157365083694	1
Coq.FSets.FSetProperties.singleton_equal_add	40	3	search with cache (only 1: fsetdec).	0.0914180278778	4
Coq.FSets.FSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.289088964462	1
Coq.FSets.FSetProperties.union_sym	40	8	search with cache (only 1: fsetdec).	0.165017843246	19
Coq.FSets.FSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0800580978394	1
Coq.FSets.FSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.109887123108	1
Coq.FSets.FSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.113842964172	1
Coq.FSets.FSetProperties.union_assoc	40	3	search with cache (only 1: fsetdec).	0.166079044342	4
Coq.FSets.FSetProperties.add_union_singleton	40	3	search with cache (only 1: fsetdec).	0.0956559181213	4
Coq.FSets.FSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.188303947449	1
Coq.FSets.FSetProperties.union_remove_add_1	40	6	search with cache (only 1: fsetdec).	0.325796127319	7
Coq.FSets.FSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.270973920822	1
Coq.FSets.FSetProperties.union_subset_1	40	3.4	search with cache (only 1: red; only 1: fsetdec).	0.0463209152222	9
Coq.FSets.FSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0432500839233	1
Coq.FSets.FSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0599009990692	1
Coq.FSets.FSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0621519088745	1
Coq.FSets.FSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0621318817139	1
Coq.FSets.FSetProperties.empty_union_1	40	3	search with cache (only 1: fsetdec).	0.0808808803558	4
Coq.FSets.FSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0735530853271	1
Coq.FSets.FSetProperties.not_in_union	40	3	search with cache (only 1: fsetdec).	0.058079957962	4
Coq.FSets.FSetProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0911378860474	1
Coq.FSets.FSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0730609893799	1
Coq.FSets.FSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0985767841339	1
Coq.FSets.FSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.103356122971	1
Coq.FSets.FSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.150520086288	1
Coq.FSets.FSetProperties.union_inter_1	40	3	search with cache (only 1: fsetdec).	0.192043066025	4
Coq.FSets.FSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.207314968109	1
Coq.FSets.FSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.176040172577	1
Coq.FSets.FSetProperties.inter_add_2	40	4	search with cache (only 1: fsetdec).	0.206723928452	36
Coq.FSets.FSetProperties.empty_inter_1	40	3	search with cache (only 1: fsetdec).	0.0537600517273	4
Coq.FSets.FSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0531508922577	1
Coq.FSets.FSetProperties.inter_subset_1	40	5	search with cache (only 1: fsetdec).	0.0440039634705	6
Coq.FSets.FSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.040510892868	1
Coq.FSets.FSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.055675983429	1
Coq.FSets.FSetProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.069641828537	1
Coq.FSets.FSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0775570869446	1
Coq.FSets.FSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0447969436646	1
Coq.FSets.FSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.117172956467	1
Coq.FSets.FSetProperties.remove_diff_singleton	40	3	search with cache (only 1: fsetdec).	0.106770038605	4
Coq.FSets.FSetProperties.diff_inter_empty	40	3	search with cache (only 1: fsetdec).	0.172986984253	4
Coq.FSets.FSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.147528886795	1
Coq.FSets.FSetProperties.Add_add	40	0.5.0.3.0.1.0.0.25	search with cache (only 1: simpl_relation; only 1: split; only 1: intro H; only 1: fsetdec; only 1: destruct 1; only 1: apply add_1; only 1: auto; only 1: apply add_2; only 1: auto).	5.90413188934	3900
Coq.FSets.FSetProperties.Add_remove	40	0.6	search with cache (only 1: expAdd; only 1: fsetdec).	0.151263952255	8
Coq.FSets.FSetProperties.union_Add	40	0.0.0.4	search with cache (only 1: expAdd; only 1: intro H; only 1: rewrite H; only 1: fsetdec).	0.279999017715	17
Coq.FSets.FSetProperties.inter_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.380276918411	5
Coq.FSets.FSetProperties.union_Equal	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.327105045319	5
Coq.FSets.FSetProperties.inter_Add_2	40	4.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.274798870087	9
Coq.FSets.FSetProperties.elements_Empty	40
Coq.FSets.FSetProperties.elements_empty	40
Coq.FSets.FSetProperties.of_list_1	40
Coq.FSets.FSetProperties.of_list_2	40
Coq.FSets.FSetProperties.of_list_3	40
Coq.FSets.FSetProperties.fold_spec_right	40
Coq.FSets.FSetProperties.fold_rec	40
Coq.FSets.FSetProperties.fold_rec_bis	40
Coq.FSets.FSetProperties.fold_rec_nodep	40	0.0.0.1.34.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intros; only 1: eauto).	1.39016795158	5580
Coq.FSets.FSetProperties.fold_rec_weak	40
Coq.FSets.FSetProperties.fold_rel	40
Coq.FSets.FSetProperties.set_induction	40
Coq.FSets.FSetProperties.set_induction_bis	40
Coq.FSets.FSetProperties.fold_identity	40	0.0.0.1.0.0.1.0.12.4	search with cache (only 1: intros s Hsame; only 1: apply fold_rec_bis; only 1: intros; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec; only 1: intros; only 1: do 2 rewrite add_iff; only 1: intuition).	3.94312810898	3100
Coq.FSets.FSetProperties.fold_0	40
Coq.FSets.FSetProperties.fold_1	40
Coq.FSets.FSetProperties.fold_2	40
Coq.FSets.FSetProperties.fold_1b	40	1.5.0.2.7.0.1	search with cache (only 1: unfold Empty; only 1: intros; only 1: intuition; only 1: rewrite M.fold_1; only 1: auto with *; only 1: auto with *; only 1: auto).	1.2496278286	3119
Coq.FSets.FSetProperties.fold_commutes	40
Coq.FSets.FSetProperties.fold_init	40	1.0.4.0.35.1.19.19.0	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: auto with *; only 1: apply Comp; only 1: auto with *; only 1: auto with *).	22.404640913	76804
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.fold_empty	40
Coq.FSets.FSetProperties.fold_add	40
Coq.FSets.FSetProperties.add_fold	40
Coq.FSets.FSetProperties.remove_fold_1	40	8.8.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto with set; only 1: auto with set).	13.3888120651	27425
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0234911441803	3
Coq.FSets.FSetProperties.fold_union_inter	40
Coq.FSets.FSetProperties.fold_diff_inter	40
Coq.FSets.FSetProperties.fold_union	40
Coq.FSets.FSetProperties.fold_plus	40
Coq.FSets.FSetProperties.cardinal_fold	40
Coq.FSets.FSetProperties.cardinal_0	40
Coq.FSets.FSetProperties.cardinal_1	40
Coq.FSets.FSetProperties.cardinal_2	40
Coq.FSets.FSetProperties.cardinal_Empty	40
Coq.FSets.FSetProperties.cardinal_inv_1	40
Coq.FSets.FSetProperties.cardinal_inv_2	40
Coq.FSets.FSetProperties.cardinal_inv_2b	40	0.0.10.1.1.14.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	4.62172603607	14584
Coq.FSets.FSetProperties.Equal_cardinal	40
Coq.FSets.FSetProperties.cardinal_m_Proper	40
Coq.FSets.FSetProperties.empty_cardinal	40	2.7	search with cache (only 1: apply cardinal_1; only 1: intuition).	0.0459289550781	27
Coq.FSets.FSetProperties.singleton_cardinal	40
Coq.FSets.FSetProperties.diff_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal_lt	40
Coq.FSets.FSetProperties.union_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal_inter	40
Coq.FSets.FSetProperties.union_cardinal_le	40	8.28.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with *).	21.8768639565	58624
Coq.FSets.FSetProperties.add_cardinal_1	40	5.4	search with cache (only 1: intros; only 1: intuition).	0.0810499191284	51
Coq.FSets.FSetProperties.add_cardinal_2	40	0.0.0.4	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: auto with set).	0.0222651958466	8
Coq.FSets.FSetProperties.remove_cardinal_1	40	0.1.0.0.0.0.0.0.12	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: eauto with set).	0.45995092392	500
Coq.FSets.FSetProperties.remove_cardinal_2	40	14	search with cache (only 1: auto with set fset).	0.372012853622	358
Coq.FSets.FSetProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.gtb_1	40
Coq.FSets.FSetProperties.leb_1	40
Coq.FSets.FSetProperties.gtb_compat	40
Coq.FSets.FSetProperties.leb_compat	40
Coq.FSets.FSetProperties.elements_split	40
Coq.FSets.FSetProperties.elements_Add	40
Coq.FSets.FSetProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.set_induction_max	40
Coq.FSets.FSetProperties.set_induction_min	40
Coq.FSets.FSetProperties.fold_3	40
Coq.FSets.FSetProperties.fold_4	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0249650478363	3
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0254139900208	3
Coq.FSets.FSetProperties.choose_equal	40
Coq.FSets.FSetDecide.test_push	40	1.0	search with cache (only 1: intros EQ; only 1: tauto).	0.518517971039	3
Coq.FSets.FSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.164124965668	3
Coq.FSets.FSetDecide.eq_refl_iff	40	3	search with cache (only 1: intuition).	0.0155251026154	4
Coq.FSets.FSetDecide.dec_In	40
Coq.FSets.FSetDecide.dec_eq	40
Coq.FSets.FSetDecide.test_eq_trans_1	40
Coq.FSets.FSetDecide.test_eq_trans_2	40	9	search with cache (only 1: fsetdec).	0.335227012634	42
Coq.FSets.FSetDecide.test_eq_neq_trans_1	40	0.0.1.1.0.0	search with cache (only 1: intros x y H; only 1: intros; only 1: apply remove_2; only 1: intuition; only 1: eauto with set; only 1: intuition).	0.112589120865	8
Coq.FSets.FSetDecide.test_eq_neq_trans_2	40	9	search with cache (only 1: fsetdec).	0.258228063583	41
Coq.FSets.FSetDecide.test_In_singleton	40	25	search with cache (only 1: simpl_relation).	0.489114046097	595
Coq.FSets.FSetDecide.test_add_In	40	9	search with cache (only 1: fsetdec).	0.475910902023	45
Coq.FSets.FSetDecide.test_Subset_add_remove	40	10.16.13.2	search with cache (only 1: intros x y; only 1: red; only 1: generalize dependent y; only 1: fsetdec).	4.32211399078	14307
Coq.FSets.FSetDecide.test_eq_disjunction	40	9	search with cache (only 1: fsetdec).	0.103193044662	39
Coq.FSets.FSetDecide.test_not_In_disj	40	9	search with cache (only 1: fsetdec).	0.145122051239	46
Coq.FSets.FSetDecide.test_not_In_conj	40	9	search with cache (only 1: fsetdec).	0.152858972549	43
Coq.FSets.FSetDecide.test_iff_conj	40	9	search with cache (only 1: fsetdec).	0.173002004623	50
Coq.FSets.FSetDecide.test_set_ops_1	40	9	search with cache (only 1: fsetdec).	0.247415065765	44
Coq.FSets.FSetDecide.eq_chain_test	40	9	search with cache (only 1: fsetdec).	0.282454013824	36
Coq.FSets.FSetDecide.test_too_complex	40	0.0.11.0	search with cache (only 1: intros x y H; only 1: unfold Subset, Empty, impl; only 1: intros; only 1: intuition).	0.49413895607	341
Coq.FSets.FSetDecide.function_test_1	40	15.21	search with cache (only 1: intros y z H1 H2; only 1: fsetdec).	2.82142186165	5896
Coq.FSets.FSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0818510055542	1
Coq.FSets.FSetDecide.test_baydemir	40	0.3.0.0	search with cache (only 1: intros EQ; only 1: intros x y H; only 1: intuition; only 1: fsetdec).	0.0805730819702	7
Coq.FSets.FMapList.empty_1	40	1.27	search with cache (only 1: compute; only 1: inversion 1).	0.105072021484	422
Coq.FSets.FMapList.empty_sorted	40	58	search with cache (only 1: left).	0.380072116852	2358
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.add_Inf	40
Coq.FSets.FMapList.add_sorted	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.remove_Inf	40
Coq.FSets.FMapList.remove_sorted	40
Coq.FSets.FMapList.elements_1	40	4.0	search with cache (only 1: intros; only 1: auto).	0.0125658512115	6
Coq.FSets.FMapList.elements_2	40	4.0	search with cache (only 1: intros m x y e; only 1: intuition).	0.0131139755249	6
Coq.FSets.FMapList.elements_3	40	9	search with cache (only 1: trivial).	0.0112130641937	10
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.fold_1	40	0.8.14.8.74	search with cache (only 1: induction m; only 1: trivial; only 1: intuition; only 1: simpl in *; only 1: intuition).	16.8915801048	95269
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.equal_cons	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.map_lelistA	40	4.3.1.1.0.3.1.0.0	search with cache (only 1: intros m x f; only 1: induction m; only 1: inversion 1; only 1: constructor 1; only 1: destruct a as (x', e'); only 1: intuition; only 1: constructor 2; only 1: inversion_clear H; only 1: auto).	5.16332602501	6664
Coq.FSets.FMapList.map_sorted	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.mapi_lelistA	40	2.0.0.0.2.1.2.2	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	2.16954398155	2605
Coq.FSets.FMapList.mapi_sorted	40	2.2.0.0.0.0.0.1.1	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.663576841354	547
Coq.FSets.FMapList.map2_alt_equiv	40
Coq.FSets.FMapList.combine_lelistA	40
Coq.FSets.FMapList.combine_sorted	40
Coq.FSets.FMapList.map2_sorted	40
Coq.FSets.FMapList.combine_1	40
Coq.FSets.FMapList.map2_0	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.MapsTo_1	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.empty_1	40	44.0.3.19.19.19	search with cache (only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: intros; only 1: inversion_clear H).	1.83373498917	20479
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.elements_1	40	4	search with cache (only 1: auto).	0.0374929904938	47
Coq.FSets.FMapList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.013699054718	2
Coq.FSets.FMapList.elements_3	40	19.24.25	search with cache (only 1: intros; only 1: induction m; only 1: auto).	0.540089130402	4142
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.cardinal_1	40	43	search with cache (only 1: intuition).	0.140518188477	1081
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.eq_equal	40
Coq.FSets.FMapList.eq_1	40
Coq.FSets.FMapList.eq_2	40
Coq.FSets.FMapList.eq_refl	40
Coq.FSets.FMapList.eq_sym	40
Coq.FSets.FMapList.eq_trans	40
Coq.FSets.FMapList.lt_trans	40
Coq.FSets.FMapList.lt_not_eq	40
Coq.FSets.FMapList.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40	3.56.19.35.2	search with cache (only 1: intro H; only 1: apply Acc_rect; only 1: intro z; only 1: split; only 1: auto).	18.2009868622	230304
Coq.Wellfounded.Inclusion.wf_incl	40	0.5.22.5	search with cache (only 1: intro H; only 1: intro z; only 1: red; only 1: auto with sets).	0.31244802475	1498
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	2.17.1	search with cache (only 1: intros; only 1: apply H; only 1: auto with sets).	13.3761529922	1428
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.1.4.4.2	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.134025096893	442
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	3.4.19.3.6	search with cache (only 1: red; only 1: intros n m; only 1: intro; only 1: constructor; only 1: auto).	0.33601307869	2124
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.5.2	search with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0197730064392	34
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	5.4	search with cache (only 1: red; only 1: auto with sets).	0.00967884063721	26
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	4	search with cache (only 1: now induction d).	0.0688199996948	36
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.of_lu_eqn	40
Coq.Numbers.DecimalPos.of_lu_revapp	40
Coq.Numbers.DecimalPos.Nadd_simpl	40	1.0.2.64	search with cache (only 1: case n; only 1: now f_equal; only 1: intro d'; only 1: trivial).	1.33381795883	5716
Coq.Numbers.DecimalPos.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.of_uint_alt	40
Coq.Numbers.DecimalPos.of_lu_rev	40
Coq.Numbers.DecimalPos.of_lu_double_gen	40
Coq.Numbers.DecimalPos.of_lu_double	40
Coq.Numbers.DecimalPos.of_lu_succ_double	40	0	search with cache (only 1: apply of_lu_double_gen).	0.00597190856934	1
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.succ_double_alt	40	1.1.1.1.1.1.1.1.1.1.0.1	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	9.99207305908	28485
Coq.Numbers.DecimalPos.double_succ	40
Coq.Numbers.DecimalPos.to_lu_succ	40
Coq.Numbers.DecimalPos.nat_iter_S	40	3	search with cache (only 1: trivial).	0.00707387924194	4
Coq.Numbers.DecimalPos.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0054337978363	1
Coq.Numbers.DecimalPos.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.of_lu_0	40
Coq.Numbers.DecimalPos.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Nadd_alt	40
Coq.Numbers.DecimalPos.to_of_lu	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_uint_nonzero	40
Coq.Numbers.DecimalPos.to_uint_nonnil	40	2.0.50	search with cache (only 1: intros H; only 1: generalize (of_to p); only 1: now rewrite H).	31.8822290897	108365
Coq.Numbers.DecimalPos.to_uint_inj	40
Coq.Numbers.DecimalPos.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.of_uint_norm	40	2.2.2.2.2.2.2.2.2.2.2.5	search with cache (only 1: induction d; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	18.9438650608	65848
Coq.Numbers.DecimalPos.of_inj	40
Coq.Numbers.DecimalPos.of_iff	40
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_int_inj	40
Coq.Numbers.DecimalPos.to_int_pos_surj	40
Coq.Numbers.DecimalPos.of_int_norm	40
Coq.Numbers.DecimalPos.of_inj_pos	40
Coq.Numbers.DecimalNat.to_lu_succ	40	2	search with cache (only 1: easy).	0.0105381011963	3
Coq.Numbers.DecimalNat.to_little_uint_succ	40
Coq.Numbers.DecimalNat.to_lu_equiv	40
Coq.Numbers.DecimalNat.to_uint_alt	40
Coq.Numbers.DecimalNat.of_lu_eqn	40
Coq.Numbers.DecimalNat.of_lu_succ	40
Coq.Numbers.DecimalNat.of_to_lu	40
Coq.Numbers.DecimalNat.of_lu_revapp	40
Coq.Numbers.DecimalNat.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.of_uint_alt	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_lu_tenfold	40
Coq.Numbers.DecimalNat.of_lu_0	40
Coq.Numbers.DecimalNat.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.to_of_lu	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_uint_inj	40
Coq.Numbers.DecimalNat.to_uint_surj	40
Coq.Numbers.DecimalNat.of_uint_norm	40
Coq.Numbers.DecimalNat.of_inj	40
Coq.Numbers.DecimalNat.of_iff	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_int_inj	40
Coq.Numbers.DecimalNat.to_int_pos_surj	40
Coq.Numbers.DecimalNat.of_int_norm	40
Coq.Numbers.DecimalNat.of_inj_pos	40
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_uint_inj	40
Coq.Numbers.DecimalN.to_uint_surj	40
Coq.Numbers.DecimalN.of_uint_norm	40	7	search with cache (only 1: now induction d).	0.0253019332886	8
Coq.Numbers.DecimalN.of_inj	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0882070064545	42
Coq.Numbers.DecimalN.of_iff	40	0.3.3.1.0	search with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.654494047165	599
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_int_inj	40
Coq.Numbers.DecimalN.to_int_pos_surj	40
Coq.Numbers.DecimalN.of_int_norm	40
Coq.Numbers.DecimalN.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_add_opp	40	4	search with cache (only 1: tauto).	0.0162870883942	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_wd	40	0.44.0.2.13.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros m IH; only 1: intros; only 1: simpl; only 1: nzsimpl'; only 1: now rewrite H).	27.1793529987	70751
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_pred	40	0.0.0.1	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.255131006241	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.one_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.two_succ	40	0.1.1	search with cache (only 1: unfold Z.eq; only 1: simpl in *; only 1: now nzsimpl').	0.104916095734	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_0	40	41	search with cache (only 1: solve_proper).	0.90919303894	1541
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_succ	40	26	search with cache (only 1: solve_proper).	0.870707035065	1060
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_0_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_0_r	40	0.0.4.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.398396968842	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_0_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_irrefl	40	3.2.0	search with cache (only 1: intro n; only 1: apply le_ngt; only 1: now apply eq_le_incl).	0.0336270332336	19
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_neg	40	1.8.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.166924953461	132
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_nonpos	40	6.0.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0147619247437	9
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_neg	40	7.0.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0173079967499	10
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_nonpos	40	3.0.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0108740329742	6
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_l	40	0.2.21	search with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	3.13405585289	3570
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_l	40	3.2.21	search with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	4.95985603333	6127
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_r	40	10.5.11	search with cache (only 1: intro LS'; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	4.41910409927	5785
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.even_pred	40
Coq.Numbers.Integer.Abstract.ZParity.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonneg_nonpos	40	0.1.0.0.0.0.1	search with cache (only 1: intros n m p Hp; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.244049072266	76
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_false	40	1.0.0.0.0.0.0.0.1	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.219791889191	73
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_mod	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0.1.0.3.1	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: left; only 1: destruct b; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: order'; only 1: trivial).	2.64123392105	2781
Coq.Numbers.Integer.Abstract.ZBits.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0915639400482	22
Coq.Numbers.Integer.Abstract.ZBits.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0909609794617	22
Coq.Numbers.Integer.Abstract.ZBits.ldiff_wd	40	1.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.105646133423	23
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_0_l	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.025946855545	4
Coq.Numbers.Integer.Abstract.ZBits.lor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0236699581146	3
Coq.Numbers.Integer.Abstract.ZBits.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.land_0_l	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now try order').	0.0267689228058	4
Coq.Numbers.Integer.Abstract.ZBits.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_l	40	5.1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: pose proof (log2_nonneg a) as Ha'; only 1: trivial).	0.096363067627	13
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_r	40	39.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	2.81868195534	5980
Coq.Numbers.Integer.Abstract.ZBits.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_r	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now try order'; only 1: trivial; only 1: trivial).	0.0301561355591	7
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_l	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now try order'; only 1: trivial; only 1: trivial).	0.0302500724792	7
Coq.Numbers.Integer.Abstract.ZBits.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_neg	40
Coq.Numbers.Integer.Abstract.ZBits.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.div2_neg	40	3.69.0	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	30.5537960529	39047
Coq.Numbers.Integer.Abstract.ZBits.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_r	40	3.1.1.0.1.1	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.573025941849	402
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_diag	40	0.0.4.3.23.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: reflexivity; only 1: trivial).	9.71201300621	24366
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r_nonneg	40	0.0.6.0	search with cache (only 1: intros n m p Hp; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0566470623016	21
Coq.Numbers.Integer.Abstract.ZGcd.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_r	40	1.0.1.0.2.5.3.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.936993122101	1054
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l_nonneg	40	1.2.0.4.0.3.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.74410700798	810
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r_nonneg	40	1.3.2.0.2.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	0.512119054794	422
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag_nonneg	40	1.2.2.0.2.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.249449014664	278
Coq.Numbers.Integer.Abstract.ZLcm.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_l	40	1.0.5.9.5.2.0.0.5.1	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	37.784719944	60833
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_r	40	8.1.0.0.1.1	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	1.01965689659	1203
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r_nonneg	40	0.2.0.0	search with cache (only 1: intros n m p Hp; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0422167778015	6
Coq.Numbers.Integer.Abstract.ZLcm.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_min_distr	40	0.2.0.2.0.2.0.3.2.3	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now f_equiv; only 1: now rewrite <- ?pred_le_mono; only 1: order'; only 1: rewrite 2!min_r; only 1: now f_equiv; only 1: now rewrite <- ?pred_le_mono; only 1: order').	11.7065839767	5975
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.neg_pos_cases	40	0.0.0.82.22	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	6.61089110374	16977
Coq.Numbers.Integer.Abstract.ZLt.nonpos_pos_cases	40	16.16.16.55.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	12.7494020462	33607
Coq.Numbers.Integer.Abstract.ZLt.neg_nonneg_cases	40	17.17.16.56.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: now left; only 1: intuition order; only 1: intuition order).	22.225908041	51101
Coq.Numbers.Integer.Abstract.ZLt.nonpos_nonneg_cases	40	18.18.18.57.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	23.2205870152	55748
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.le_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.le_le_pred	40	0.0.4.2	search with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0467531681061	16
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.lt_succ_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.le_succ_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt_succ	40
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt_succ	40
Coq.Numbers.Integer.Abstract.ZLt.neq_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos	40	0.0.0.0.0.4	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0303518772125	44
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg	40	0.6.6.10.0.4	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: now f_equiv).	5.06948113441	7646
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_nonneg	40	0.1.0.17.17	search with cache (only 1: intro n; only 1: destruct_max n; only 1: order; only 1: rewrite opp_nonneg_nonpos; only 1: order).	5.87629890442	9706
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0	40	12.12.56	search with cache (only 1: rewrite abs_eq; only 1: order; only 1: order).	0.782804012299	3847
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_or_opp	40	0.4.2.15.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).	2.16002607346	3021
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_involutive	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: order).	0.0880641937256	13
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case	40	0.7.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0757639408112	64
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_square	40	2.13.10.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: order; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.98651313782	4918
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_sgn	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_pos	40	0.0.5.0	search with cache (only 1: intros a b Ha Hb; only 1: apply NZQuot.div_pos; only 1: trivial; only 1: trivial).	0.043121099472	31
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt_upper_bound	40	0.0.0.3.1.2.0.0	search with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: now try split; only 1: now try split; only 1: now try split).	0.423466205597	429
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_lower_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_l	40	1.2.0.0.5.4	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.30864095688	904
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_pos	40	0.2.0.1.0.1.0.1.0.8.3	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: trivial).	10.2966558933	12301
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_neg	40	0.1.1.0.3	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: right; only 1: intuition order; only 1: auto).	0.0545220375061	38
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique	40	0.1.0.0.1.0.1.0.1.0.1.1.9	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	22.4534230232	27303
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_pos	40	0.2.0.1.0.1.0.1.0.9.3	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: trivial).	13.1092779636	15980
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_neg	40	0.1.1.0.3	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: right; only 1: intuition order; only 1: auto).	0.0552999973297	38
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small	40	1.0.0.0.0.0.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.185070037842	98
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small	40	1.0.0.0.1.0.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.226055860519	138
Coq.Numbers.Integer.Abstract.ZDivFloor.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_r	40	1.0.0.0.3.7.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	0.801295995712	833
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_l	40	9.0.3.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: apply le_0_1).	0.535851955414	529
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_l	40	9.0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: intuition; only 1: apply le_0_1).	0.511015892029	432
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mul	40	2.0.0.0.1.0.0.0.7.0.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	6.27908301353	7223
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_exact	40	0.1.0.3.1.0.0.0.4.15	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	1.72600007057	1557
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_le	40	0.0.8.0	search with cache (only 1: intros a b Ha Hb; only 1: apply mod_le; only 1: trivial; only 1: trivial).	0.27570104599	166
Coq.Numbers.Integer.Abstract.ZDivFloor.div_pos	40	1.4.0	search with cache (only 1: intros a b Ha Hb; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: order).	0.275753974915	34
Coq.Numbers.Integer.Abstract.ZDivFloor.div_str_pos	40	0.15.6	search with cache (only 1: intros; only 1: apply div_str_pos; only 1: intuition).	0.589468002319	900
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_le	40	0.0.1.1.0.1.6	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: order).	0.512840986252	260
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_gt	40	0.0.0.0.19.0.6	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: trivial).	5.97987294197	6846
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_exact	40	3.4.5.6	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.575466871262	601
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt_upper_bound	40	0.0.0.0.4.6	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: order).	0.171962976456	313
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_upper_bound	40	0.1.1.3.6	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: trivial).	0.253799915314	320
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_lower_bound	40	0.8.0.8.0.1.5.6	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: now rewrite mul_comm; only 1: order).	10.4357328415	11909
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_add	40	1.5.3.2.3.6	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	4.3848400116	3151
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_l	40	0.0.3.2.6	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.12042713165	483
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_r	40	1.1.6	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.161273956299	59
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod	40	0.0.0.16.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	2.77205085754	1409
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_le	40	0.0.0.1.0.0.1.6	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: trivial; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: trivial; only 1: apply Private_NZDiv.mul_div_le; only 1: trivial).	1.44816279411	702
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_r	40	0.145.0	search with cache (only 1: intro n; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag).	38.1493489742	106731
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj_wd	40	0.0.1.1.20.0.0	search with cache (only 1: intros n1 n2; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	1.44859218597	3368
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_r	40	0.48.0	search with cache (only 1: intros n1 n2; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	13.2488360405	15256
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_l	40	33.14.0	search with cache (only 1: intros n1 n2; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_l, sub_0_l).	8.68222999573	14914
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_r	40	0.50.0	search with cache (only 1: intros n1 n2; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	11.9784379005	22267
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add	40	2.0	search with cache (only 1: intros n1 n2; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0161421298981	4
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_l	40	6.1.32	search with cache (only 1: intros p n m; only 1: rewrite (add_comm p n); only 1: apply add_add_simpl_l_l).	15.2255940437	18082
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_r	40	0.1.12.17	search with cache (only 1: intro z; only 1: intro m; only 1: intro n; only 1: now rewrite (add_comm n m), <- add_sub_assoc, sub_add_distr, sub_diag, sub_0_l, add_opp_r).	4.03209900856	5808
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_r	40	5.3.15	search with cache (only 1: intros; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.09383392334	1444
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_same	40	0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0328748226166	10
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small	40	0.4.3	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition).	0.0411009788513	25
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small	40	0.15.3	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition).	2.95611310005	4443
Coq.Numbers.Integer.Abstract.ZDivEucl.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0306000709534	7
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_r	40	1.0.4.13.2.0.3.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: intuition; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	16.4960038662	45172
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_r	40	1.0.0.0.0.4.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.83570599556	945
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: intuition; only 1: apply le_0_1).	0.0140597820282	4
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_l	40	0.0.3.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: intuition; only 1: apply le_0_1).	0.0594418048859	19
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul	40	0.0.1.0.1.4.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.582636833191	559
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique_exact	40	0.1.1.2.2.4.18	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: auto using div_pos).	0.831436157227	977
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_pos	40	0.2.0	search with cache (only 1: intros a b Ha Hb; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: order).	0.0165350437164	5
Coq.Numbers.Integer.Abstract.ZDivEucl.div_str_pos	40	0.15.3	search with cache (only 1: intros; only 1: apply div_str_pos; only 1: intuition).	0.899550199509	1209
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_exact	40	3.4.1.3	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.410473108292	260
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt_upper_bound	40	0.0.1.1.3.3	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto using Private_NZDiv.div_pos).	0.257151842117	221
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_upper_bound	40	0.0.1.1.5.3	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: trivial).	0.247439861298	321
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_lower_bound	40	0.0.0.0.19.3.3	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: rewrite mul_comm; only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: order; only 1: order).	23.6678738594	25253
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_add	40	0.4.1.2.4.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite (mul_comm c)).	1.11426401138	848
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add	40	0.1.3.2.0.14.3	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	7.57812619209	7845
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_l	40	0.0.1.3.3	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	0.463896989822	163
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_l	40	0.0.0.4.6.3.0.3	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: order).	4.96487689018	2834
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_r	40	1.5.3	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.171547889709	88
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_r	40	0.11.15.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	19.065664053	11405
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod	40	0.0.1.21.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	6.78324198723	5745
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_le	40	0.1.0.2.0.0.0.3	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: trivial; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: trivial; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	1.32285404205	856
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	2.4.0.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: intros LT; only 1: Z.order).	0.0238010883331	10
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	2.0.26.41	search with cache (only 1: intro H; only 1: elim H; only 1: intros; only 1: tauto).	3.73751711845	13895
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0250699520111	4
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	6	search with cache (only 1: tauto).	0.0311341285706	27
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	3.0.14.18	search with cache (only 1: zify; only 1: destruct x; only 1: simpl; only 1: auto).	0.584491968155	941
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	1.1	search with cache (only 1: intros n; only 1: tauto).	0.0262939929962	13
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.0.3.0.1.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.56373000145	435
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.0.0.2.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0320730209351	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	3.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0303471088409	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	6.14.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.47807598114	456
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.040843963623	13
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.3.5.0.0	search with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: intros; only 1: auto).	6.16220498085	220
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	0.10	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.0695259571075	33
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.11	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.043713092804	46
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40	1.0.1.0.0.0.0.1.0.4.0.0.0	search with cache (only 1: intros; only 1: case_eq (iszero x); only 1: intros; only 1: rewrite (iszero_eq0 _ H0) in H; only 1: simpl in H; only 1: discriminate; only 1: intros; only 1: unfold phi; only 1: rewrite recr_eqn; only 1: fold phi; only 1: rewrite H; only 1: auto; only 1: auto).	36.0294690132	45552
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	2.1	search with cache (only 1: intros; only 1: now f_equal).	0.0222218036652	5
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	4	search with cache (only 1: now f_equal).	0.0201170444489	5
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	5.1.32.29	search with cache (only 1: intro H; only 1: elim H; only 1: intros; only 1: now f_equal).	7.41575789452	3500
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	4.0.4.2	search with cache (only 1: intros n; only 1: induction n; only 1: intro H; only 1: now f_equal).	4.12493109703	178
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.2	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0482878684998	13
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.019189119339	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	1	search with cache (only 1: now f_equal).	0.0194549560547	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: now f_equal).	0.0199739933014	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0184209346771	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: now f_equal).	0.0189061164856	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	5	search with cache (only 1: auto).	0.0603518486023	6
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	0.2.0.0.2	search with cache (only 1: intros n; only 1: elim n; only 1: induction n; only 1: intros; only 1: now f_equal).	0.90043091774	22
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	0.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0208330154419	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0196599960327	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.1.5	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	1.22747302055	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	2.1.2	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.273730993271	30
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.3	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0203301906586	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	1.0.0.0.1.1.1	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.365780115128	321
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	68	search with cache (only 1: lia).	0.699728012085	3647
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.1.0	search with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.00817608833313	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0	search with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0072238445282	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	3.2.2	search with cache (only 1: unfold to_Z, zdigits; only 1: unfold wB, base; only 1: auto with zarith).	0.0083749294281	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.3.13.0.0.0.4	search with cache (only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: auto with zarith; only 1: auto with zarith).	15.2415659428	31409
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.8.5	search with cache (only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.854362010956	1458
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.6.0	search with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0114200115204	12
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	3.2	search with cache (only 1: intros n w1; only 1: auto).	0.0112490653992	25
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	27.1	search with cache (only 1: intros n; only 1: auto with zarith).	0.989228010178	5922
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	7	search with cache (only 1: now f_equal).	0.0385670661926	8
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.2	search with cache (only 1: compute; only 1: now subst).	0.0203189849854	4
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	search with cache (only 1: tauto).	0.0181319713593	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: trivial).	0.0178990364075	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	162	search with cache (only 1: congruence).	6.97308397293	19876
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.89.0	search with cache (only 1: intros x y H; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: auto with zarith).	19.0639190674	33397
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.49.8	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	12.465719223	28223
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	0.1.0.0.52.0.68	search with cache (only 1: compute; only 1: intros; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).	19.1750211716	19521
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.1.3.7.3	search with cache (only 1: intros; only 1: compute; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.805624961853	869
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	22	search with cache (only 1: apply subc_spec).	0.772776842117	252
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	84	search with cache (only 1: apply sub_spec).	13.1664259434	12170
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0209181308746	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	1.23	search with cache (only 1: intros h; only 1: now subst).	0.793002128601	343
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0378339290619	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	3.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.110300779343	6
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: auto).	0.0160970687866	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	4.6.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lxor_spec, xorb_comm; only 1: ring).	0.138257026672	151
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40
Coq.Numbers.Cyclic.Int63.Ring63.test	40	11.52.2.0	search with cache (only 1: intros x y; only 1: destruct (mulc x y); only 1: ring_simplify; only 1: trivial).	17.076007843	80767
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_1	40	3.17.0.31	search with cache (only 1: apply Z.pow_gt_1; only 1: easy; only 1: PreOmega.zify; only 1: tauto).	0.696276903152	2262
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_0	40	0.2	search with cache (only 1: unfold base; only 1: auto with zarith).	0.0100939273834	12
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.two_succ	40	5.6	search with cache (only 1: zify; only 1: tauto).	0.818625926971	92
Coq.Numbers.Cyclic.Abstract.NZCyclic.B0	40	0	search with cache (only 1: assumption).	0.00621700286865	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_0_l	40	1.0.0	search with cache (only 1: intro n; only 1: zify; only 1: tauto).	0.0185370445251	4
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.DecimalString.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.usu_nil	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.0154321193695	3
Coq.Numbers.DecimalString.usu_gen	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.isi_posnil	40	2	search with cache (only 1: reflexivity).	0.0159909725189	11
Coq.Numbers.DecimalString.isi_negnil	40	2	search with cache (only 1: reflexivity).	0.0166370868683	11
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_0_succ	40
Coq.Numbers.Natural.Abstract.NOrder.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.eq_0_gt_0_cases	40	9.9.1.4.30.22.6.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: right; only 1: destruct (lt_ge_cases n 0); only 1: false_hyp H nlt_0_r; only 1: order; only 1: intuition order; only 1: intuition order).	32.1800038815	61481
Coq.Numbers.Natural.Abstract.NOrder.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.succ_pred_pos	40	0.0.4.0.0.7	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: intros; only 1: now rewrite pred_succ).	0.591228961945	931
Coq.Numbers.Natural.Abstract.NOrder.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_l	40	8.1.0.5.0.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: now elim H; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	1.63955283165	1902
Coq.Numbers.Natural.Abstract.NOrder.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le	40	0.2.4.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite H; only 1: apply le_pred_l).	0.0693089962006	30
Coq.Numbers.Natural.Abstract.NOrder.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.le_succ_le_pred	40	0.1.2.0.2.3.2.1.0.17.4.1	search with cache (only 1: intro n; only 1: intros; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply eq_le_incl; only 1: clear m H; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_trans with (P m); only 1: assumption; only 1: apply le_pred_l).	37.4245669842	54220
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.mod_unique	40	0.0.0.15.1.7	search with cache (only 1: intros n m; only 1: intros a b Ha Hb; only 1: apply mod_unique with a; only 1: auto'; only 1: auto'; only 1: auto').	7.84919810295	14261
Coq.Numbers.Natural.Abstract.NDiv.div_unique_exact	40	0.0.0.4.6	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.352780103683	389
Coq.Numbers.Natural.Abstract.NDiv.div_same	40	7.5.4.1.10.13	search with cache (only 1: intros m IH; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: nzsimpl; only 1: intuition).	1.31541895866	3431
Coq.Numbers.Natural.Abstract.NDiv.mod_same	40	6.0.8.12.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.5122590065	1277
Coq.Numbers.Natural.Abstract.NDiv.div_small	40	10.9.4	search with cache (only 1: intros n m H; only 1: apply div_small; only 1: auto').	0.991885900497	2529
Coq.Numbers.Natural.Abstract.NDiv.mod_small	40	2.7.4	search with cache (only 1: intros n m H; only 1: apply mod_small; only 1: auto').	0.172791004181	275
Coq.Numbers.Natural.Abstract.NDiv.div_0_l	40	0.15.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.125566959381	236
Coq.Numbers.Natural.Abstract.NDiv.mod_0_l	40	0.12.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0704860687256	130
Coq.Numbers.Natural.Abstract.NDiv.div_1_r	40	4.0.15.6.2.5.19	search with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: order'; only 1: nzsimpl; only 1: intuition).	1.20570206642	4029
Coq.Numbers.Natural.Abstract.NDiv.mod_1_r	40	1.5.3.6.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.399600982666	522
Coq.Numbers.Natural.Abstract.NDiv.div_1_l	40	2.2.0	search with cache (only 1: intros m IH; only 1: apply Private_NZDiv.div_small; only 1: intuition).	0.0391399860382	18
Coq.Numbers.Natural.Abstract.NDiv.mod_1_l	40	2.0.0	search with cache (only 1: intros m IH; only 1: apply Private_NZDiv.mod_small; only 1: intuition).	0.0153269767761	5
Coq.Numbers.Natural.Abstract.NDiv.div_mul	40	0.1.4.0.3.4	search with cache (only 1: intros n m H; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	0.404775857925	471
Coq.Numbers.Natural.Abstract.NDiv.mod_mul	40	0.0.15.4	search with cache (only 1: intros n m H; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.795091152191	1244
Coq.Numbers.Natural.Abstract.NDiv.mod_le	40	0.0.26.4	search with cache (only 1: intros n m H; only 1: apply mod_le; only 1: auto'; only 1: auto').	1.10007882118	3147
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos	40	0.18.4	search with cache (only 1: intros n m H; only 1: apply div_str_pos; only 1: intuition).	0.90557718277	1858
Coq.Numbers.Natural.Abstract.NDiv.div_small_iff	40	2.11.0.1.1.11.6.0.3.4	search with cache (only 1: intros n m H; only 1: split; only 1: intros Hab; only 1: rewrite <- div_small_iff; only 1: order; only 1: auto'; only 1: auto'; only 1: intros Hab; only 1: apply Private_NZDiv.div_small; only 1: auto').	23.1247470379	62578
Coq.Numbers.Natural.Abstract.NDiv.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.mul_div_le	40	0.0.4.4	search with cache (only 1: intros n m H; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0926649570465	57
Coq.Numbers.Natural.Abstract.NDiv.mul_succ_div_gt	40	0.0.4.1.0.0.6	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.654664993286	505
Coq.Numbers.Natural.Abstract.NDiv.div_exact	40	0.2.3.6	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.270461797714	198
Coq.Numbers.Natural.Abstract.NDiv.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.mod_add	40	0.7.0.0.10.1.4.6	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite (mul_comm c)).	17.7223169804	20348
Coq.Numbers.Natural.Abstract.NDiv.div_add	40	0.0.0.15.0	search with cache (only 1: intros a b Ha Hb; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.709625005722	980
Coq.Numbers.Natural.Abstract.NDiv.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_r	40	6.6.1.2.6	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: apply le_0_l; only 1: auto'; only 1: auto').	3.03374910355	3800
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_l	40	0.0.0.4.6	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.361062049866	370
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_l	40	0.0.0.7.5.1.0.1.6	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order).	5.11277413368	5841
Coq.Numbers.Natural.Abstract.NDiv.mod_mod	40	0.0.4.1.0.4	search with cache (only 1: intros n m H; only 1: apply Private_NZDiv.mod_small_iff; only 1: order; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.268414974213	253
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_l	40	0.0.0.4.0	search with cache (only 1: intros a b Ha Hb; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0271179676056	16
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_r	40	0.0.2.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.0239181518555	6
Coq.Numbers.Natural.Abstract.NDiv.mul_mod	40	0.0.10.14.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	3.81344103813	5434
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_l	40	0.0.0.7.0	search with cache (only 1: intros a b Ha Hb; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.187484025955	107
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_r	40	0.1.19.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	1.06448984146	1926
Coq.Numbers.Natural.Abstract.NDiv.add_mod	40	0.0.12.7.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.25458097458	2197
Coq.Numbers.Natural.Abstract.NDiv.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.mod_mul_r	40
Coq.Numbers.Natural.Abstract.NDiv.div_mul_le	40	0.0.0.4.2.0.2.6	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	3.68772292137	5212
Coq.Numbers.Natural.Abstract.NDiv.mod_divides	40	1.0.6.0.1.0.0.0.0.19	search with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto'; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: order).	3.45132994652	6841
Coq.Numbers.Natural.Abstract.NBase.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.induction	40
Coq.Numbers.Natural.Abstract.NBase.case_analysis	40	0.0.0.1.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0472130775452	37
Coq.Numbers.Natural.Abstract.NBase.neq_0	40	5.11	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.0481820106506	141
Coq.Numbers.Natural.Abstract.NBase.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_0	40	0.2.40.6	search with cache (only 1: intros n m H1; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	1.77920484543	6338
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_succ	40	0.0.0.8.0.1	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.466789960861	493
Coq.Numbers.Natural.Abstract.NDefOps.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_0_r	40	0.3.41	search with cache (only 1: unfold def_mul; only 1: intro y; only 1: now rewrite recursion_0).	0.614771127701	2748
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_l	40	0.4.19.0.0	search with cache (only 1: intros n m H1; only 1: intro H; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	7.81939506531	6411
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_r	40	0.4.3.10.3	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	3.98367404938	3604
Coq.Numbers.Natural.Abstract.NMulOrder.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.b2n_proper	40	1.2.0.1.1.1.0.1.1.1.0.0.0.3	search with cache (only 1: assert (Proper (eq ==> eq ==> Logic.eq) compare); only 1: intros x x' Exx' y y' Eyy'; only 1: do 2 case compare_spec; only 1: trivial; only 1: order; only 1: order; only 1: order; only 1: trivial; only 1: order; only 1: order; only 1: order; only 1: trivial; only 1: intros a a' Ha; only 1: now rewrite ?Ha).	2.59614706039	5017
Coq.Numbers.Natural.Abstract.NBits.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	0.324392795563	367
Coq.Numbers.Natural.Abstract.NBits.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.bits_0	40	0.0.6.0.3.1.0	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now nzsimpl'; only 1: order'; only 1: order_nz).	1.06091618538	1040
Coq.Numbers.Natural.Abstract.NBits.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.bit0_mod	40	0.0.0.2.0.1.0.0.1	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.537204027176	320
Coq.Numbers.Natural.Abstract.NBits.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.double_bits_succ	40	1.1	search with cache (only 1: intros a n; only 1: apply testbit_even_succ, le_0_l).	0.0128870010376	4
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_l	40	0.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0334780216217	3
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_l	40	0.3.6.1.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order_nz).	0.602962017059	412
Coq.Numbers.Natural.Abstract.NBits.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0	40	1.0.0.0.0.10.2	search with cache (only 1: intros a n; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial; only 1: trivial using le_0_l).	1.30501794815	1126
Coq.Numbers.Natural.Abstract.NBits.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.land_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0768051147461	21
Coq.Numbers.Natural.Abstract.NBits.lor_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.127483129501	21
Coq.Numbers.Natural.Abstract.NBits.ldiff_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0902628898621	21
Coq.Numbers.Natural.Abstract.NBits.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_r	40
Coq.Numbers.Natural.Abstract.NBits.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_0_l	40	0.0.10.7.0	search with cache (only 1: intros; only 1: rewrite <- (add_0_r a)  at 2; only 1: bitwise; only 1: symmetry; only 1: now nzsimpl).	1.46005296707	2017
Coq.Numbers.Natural.Abstract.NBits.lor_0_r	40	1.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0239441394806	6
Coq.Numbers.Natural.Abstract.NBits.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.land_0_l	40	20.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	2.14797306061	3091
Coq.Numbers.Natural.Abstract.NBits.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_l	40	23.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	3.2533788681	4946
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_r	40	1.4.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: apply xorb_false_r).	0.126098155975	60
Coq.Numbers.Natural.Abstract.NBits.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ones	40
Coq.Numbers.Natural.Abstract.NBits.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.hom_nat_iso	40	0.0.1.1.0.0.0.0.0.1.75	search with cache (only 1: constructor 1; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	5.19356203079	25986
Coq.Numbers.Natural.Abstract.NIso.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_square	40	11.2.4	search with cache (only 1: intros EQ; only 1: apply sqrt_square; only 1: apply le_0_l).	0.273969888687	506
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_l	40	8.1.2.0.2.3	search with cache (only 1: intros n m p Hp; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: trivial; only 1: apply le_0_l).	6.94479799271	4598
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_l	40	0.3.0.0.1.3.1	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: apply lt_lt_add_r; only 1: intros m IH; only 1: rewrite add_succ_r; only 1: apply neq_0_lt_0; only 1: apply neq_succ_0).	3.52951002121	2309
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_r	40	3.0.0.1.0	search with cache (only 1: intros n m H1; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: order; only 1: apply le_0_l).	0.0475800037384	40
Coq.Numbers.Natural.Abstract.NPow.pow_succ_r'	40	18.13.3.0	search with cache (only 1: intros a b; only 1: nzsimpl'; only 1: solve_proper; only 1: apply le_0_l).	25.3027060032	15862
Coq.Numbers.Natural.Abstract.NPow.pow_0_l	40	1.0.2.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.01527094841	8
Coq.Numbers.Natural.Abstract.NPow.pow_1_l	40	0.0.10.0	search with cache (only 1: intros; only 1: nzsimpl'; only 1: now f_equiv; only 1: apply le_0_l).	0.281428098679	154
Coq.Numbers.Natural.Abstract.NPow.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_mul_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0	40	4.15.5.1	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	1.39361596107	4128
Coq.Numbers.Natural.Abstract.NPow.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l	40	0.1.10.6.1	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	1.33246088028	3446
Coq.Numbers.Natural.Abstract.NPow.pow_gt_1	40	0.0.2.4.0.0.2.4.5.3	search with cache (only 1: intros a b c Hc; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	6.20611596107	7122
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r	40	0.1.18.0.1	search with cache (only 1: intros a b Ha Hb; only 1: intros; only 1: apply pow_le_mono_r; only 1: auto'; only 1: trivial).	2.59672093391	4607
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono	40	0.10.0.5.9.3.7	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	20.1349060535	30722
Coq.Numbers.Natural.Abstract.NPow.pow_inj_l	40	0.7.0.0.5.10.2	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: intuition order; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	6.62110996246	14477
Coq.Numbers.Natural.Abstract.NPow.pow_inj_r	40	0.6.0.1.0.5.1.2.2	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	3.79744315147	6634
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_r	40	0.0.2.1.0.0.2.0.3.0	search with cache (only 1: intros n m H1; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	7.13286709785	2575
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_alt	40	3.2	search with cache (only 1: intros n IH H; only 1: auto).	0.00979089736938	18
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_l	40	0.0	search with cache (only 1: intros a b; only 1: apply divide_mul_l, divide_refl).	0.00515913963318	2
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_l	40	1.0.1.0.1.5.35.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	10.8129398823	26721
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_r	40	1.0.1.0.1.4.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial).	0.245416879654	444
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_l	40	1.5.0.2.6.2.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	0.627090930939	1297
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_r	40	1.0.2.4.4.2.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.51305103302	926
Coq.Numbers.Natural.Abstract.NLcm.lcm_diag	40	1.4.4.4.2.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial).	0.58610701561	1132
Coq.Numbers.Natural.Abstract.NLcm.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_eq_r	40	1.3.3.8.0.19.6.3	search with cache (only 1: intros n m Hn; only 1: apply lcm_unique; only 1: auto'; only 1: trivial; only 1: destruct (eq_0_gt_0_cases m) as [EQ| LT]; only 1: solve_proper; only 1: solve_proper; only 1: trivial).	6.79673814774	18862
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_iff	40	2.0.0.0.0.0.0.0.1.4.0.2.0.1	search with cache (only 1: intros; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: now transitivity m; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: apply divide_factor_l).	12.8751959801	13089
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_0	40	13.5.4.6.39	search with cache (only 1: apply sqrt_unique' with 0; only 1: nzsimpl; only 1: intuition order; only 1: nzsimpl; only 1: order).	5.497838974	7823
Coq.Numbers.NatInt.NZSqrt.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_0	40	0.0.0.0.18	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.378689050674	573
Coq.Numbers.NatInt.NZSqrt.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.div_unique	40
Coq.Numbers.NatInt.NZDiv.mod_unique	40	0.0.0.1.0.0.1.0.1.20	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	7.61476206779	19860
Coq.Numbers.NatInt.NZDiv.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.div_same	40
Coq.Numbers.NatInt.NZDiv.mod_same	40
Coq.Numbers.NatInt.NZDiv.div_small	40
Coq.Numbers.NatInt.NZDiv.mod_small	40
Coq.Numbers.NatInt.NZDiv.div_0_l	40	0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0256249904633	9
Coq.Numbers.NatInt.NZDiv.mod_0_l	40	1.1.0.24.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	33.1138420105	38655
Coq.Numbers.NatInt.NZDiv.div_1_r	40
Coq.Numbers.NatInt.NZDiv.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.div_1_l	40	3.1.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.0169289112091	8
Coq.Numbers.NatInt.NZDiv.mod_1_l	40	3.1.2.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: apply le_0_1).	0.0562980175018	27
Coq.Numbers.NatInt.NZDiv.div_mul	40
Coq.Numbers.NatInt.NZDiv.mod_mul	40
Coq.Numbers.NatInt.NZDiv.mod_le	40
Coq.Numbers.NatInt.NZDiv.div_pos	40
Coq.Numbers.NatInt.NZDiv.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.div_lt	40
Coq.Numbers.NatInt.NZDiv.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.div_exact	40
Coq.Numbers.NatInt.NZDiv.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.mod_add	40
Coq.Numbers.NatInt.NZDiv.div_add	40
Coq.Numbers.NatInt.NZDiv.div_add_l	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.mod_mod	40	19.0.0.15.0	search with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: trivial; only 1: trivial; only 1: auto using mod_small).	28.2308421135	51938
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.mul_mod	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.add_mod	40
Coq.Numbers.NatInt.NZDiv.div_div	40
Coq.Numbers.NatInt.NZDiv.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.mod_divides	40
Coq.Numbers.NatInt.NZAdd.add_0_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_comm	40
Coq.Numbers.NatInt.NZAdd.add_comm	40
Coq.Numbers.NatInt.NZAdd.add_1_l	40
Coq.Numbers.NatInt.NZAdd.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0274260044098	2
Coq.Numbers.NatInt.NZAdd.add_assoc	40
Coq.Numbers.NatInt.NZAdd.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.add_cancel_r	40	0.1.0.0.0.3	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0980160236359	19
Coq.Numbers.NatInt.NZAdd.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.add_shuffle3	40
Coq.Numbers.NatInt.NZAdd.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0265290737152	2
Coq.Numbers.NatInt.NZOrder.le_wd	40
Coq.Numbers.NatInt.NZOrder.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.le_refl	40
Coq.Numbers.NatInt.NZOrder.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.le_succ_diag_r	40	0.6.1.11.32.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor 1; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	5.82708501816	12940
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.nle_succ_diag_l	40	6.0.0.1	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: firstorder).	0.403751134872	74
Coq.Numbers.NatInt.NZOrder.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.lt_trans	40
Coq.Numbers.NatInt.NZOrder.le_trans	40
Coq.Numbers.NatInt.NZOrder.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.le_preorder	40
Coq.Numbers.NatInt.NZOrder.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.lt_neq	40	3.0.1.7	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.58186507225	471
Coq.Numbers.NatInt.NZOrder.le_neq	40
Coq.Numbers.NatInt.NZOrder.eq_le_incl	40	1.8.0	search with cache (only 1: intros x y H; only 1: apply lt_eq_cases; only 1: auto).	0.0676209926605	69
Coq.Numbers.NatInt.NZOrder.lt_stepl	40	1.12	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.337620019913	356
Coq.Numbers.NatInt.NZOrder.lt_stepr	40	1.12	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.371955871582	356
Coq.Numbers.NatInt.NZOrder.le_stepl	40	1.12	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.44490480423	400
Coq.Numbers.NatInt.NZOrder.le_stepr	40	1.12	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.467135906219	400
Coq.Numbers.NatInt.NZOrder.le_lt_trans	40	19	search with cache (only 1: order).	0.769082069397	1104
Coq.Numbers.NatInt.NZOrder.lt_le_trans	40	19	search with cache (only 1: order).	0.99828004837	1002
Coq.Numbers.NatInt.NZOrder.le_antisymm	40	19	search with cache (only 1: order).	9.19846200943	12132
Coq.Numbers.NatInt.NZOrder.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.lt_succ_l	40	0.2.0	search with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0141630172729	5
Coq.Numbers.NatInt.NZOrder.le_le_succ_r	40	3.1.4.0	search with cache (only 1: intros x y H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto with sets).	0.103184938431	97
Coq.Numbers.NatInt.NZOrder.lt_lt_succ_r	40	4.2.0	search with cache (only 1: intros x y H; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	0.0168390274048	9
Coq.Numbers.NatInt.NZOrder.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.le_0_1	40	5.4.29	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.344924926758	887
Coq.Numbers.NatInt.NZOrder.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.lt_0_2	40	36.7.50	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	1.20919299126	6859
Coq.Numbers.NatInt.NZOrder.le_0_2	40	36.7.4.51	search with cache (only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	5.22392678261	26375
Coq.Numbers.NatInt.NZOrder.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.lt_ge_cases	40	1.4.1.2.2.0	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.25243902206	1311
Coq.Numbers.NatInt.NZOrder.le_ge_cases	40	0.0.4.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0462470054626	16
Coq.Numbers.NatInt.NZOrder.lt_gt_cases	40
Coq.Numbers.NatInt.NZOrder.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.eq_dne	40
Coq.Numbers.NatInt.NZOrder.le_ngt	40	3	search with cache (only 1: intuition order).	0.0423610210419	32
Coq.Numbers.NatInt.NZOrder.nlt_ge	40	3	search with cache (only 1: intuition order).	0.0410060882568	32
Coq.Numbers.NatInt.NZOrder.lt_decidable	40	1.1.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.103893995285	70
Coq.Numbers.NatInt.NZOrder.lt_dne	40
Coq.Numbers.NatInt.NZOrder.nle_gt	40	3	search with cache (only 1: intuition order).	0.0424270629883	32
Coq.Numbers.NatInt.NZOrder.lt_nge	40	3	search with cache (only 1: intuition order).	0.0412220954895	32
Coq.Numbers.NatInt.NZOrder.le_decidable	40	3.3.3.8.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.995926141739	1768
Coq.Numbers.NatInt.NZOrder.le_dne	40	4.11.6.1	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intro H; only 1: intuition order).	5.54411697388	12905
Coq.Numbers.NatInt.NZOrder.nlt_succ_r	40
Coq.Numbers.NatInt.NZOrder.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.rbase	40
Coq.Numbers.NatInt.NZOrder.A'A_right	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.lbase	40
Coq.Numbers.NatInt.NZOrder.A'A_left	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.order_induction	40
Coq.Numbers.NatInt.NZOrder.order_induction'	40
Coq.Numbers.NatInt.NZOrder.lt_ind	40
Coq.Numbers.NatInt.NZOrder.le_ind	40
Coq.Numbers.NatInt.NZOrder.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.Rgt_wd	40	2.1.40.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: compute; only 1: rewrite H1; only 1: now rewrite H2).	8.25984501839	7877
Coq.Numbers.NatInt.NZOrder.lt_wf	40
Coq.Numbers.NatInt.NZOrder.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.initial_alt	40
Coq.Numbers.NatInt.NZDomain.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.initial_unique	40
Coq.Numbers.NatInt.NZDomain.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_zero	40	24	search with cache (only 1: solve_proper).	0.0626430511475	280
Coq.Numbers.NatInt.NZDomain.ofnat_succ	40	14	search with cache (only 1: solve_proper).	0.0462229251862	138
Coq.Numbers.NatInt.NZDomain.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.pow_0_l	40
Coq.Numbers.NatInt.NZPow.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.pow_1_r	40	0.0.62.17	search with cache (only 1: intro n; only 1: nzsimpl'; only 1: reflexivity; only 1: reflexivity).	1.42918992043	7073
Coq.Numbers.NatInt.NZPow.pow_1_l	40	0.1.4.0.14	search with cache (only 1: apply right_induction; only 1: solve_proper; only 1: now nzsimpl'; only 1: intros n H1 H2; only 1: now nzsimpl).	1.06025314331	848
Coq.Numbers.NatInt.NZPow.pow_2_r	40	3.0.7.126.0	search with cache (only 1: intro n; only 1: nzsimpl'; only 1: solve_proper; only 1: reflexivity; only 1: now apply le_le_succ_r).	31.7170782089	49522
Coq.Numbers.NatInt.NZPow.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.pow_add_r	40
Coq.Numbers.NatInt.NZPow.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.divide_wd	40
Coq.Numbers.NatInt.NZGcd.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.divide_0_r	40	1.8.15.74	search with cache (only 1: compute; only 1: intro n; only 1: exists 0; only 1: now nzsimpl).	11.1259829998	48463
Coq.Numbers.NatInt.NZGcd.divide_0_l	40	7.10.14.10.15	search with cache (only 1: intro n; only 1: intros; only 1: destruct H; only 1: rewrite mul_0_r in H; only 1: auto).	1.44331908226	5505
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.divide_refl	40
Coq.Numbers.NatInt.NZGcd.divide_trans	40
Coq.Numbers.NatInt.NZGcd.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.divide_factor_r	40	5.3.49.2.36	search with cache (only 1: intro H; only 1: intro n; only 1: compute; only 1: exists n; only 1: intuition order).	38.2286128998	89443
Coq.Numbers.NatInt.NZGcd.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.gcd_0_l_nonneg	40	4.1.3.1.4.0.2.9.18	search with cache (only 1: intro n; only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.8945338726	3625
Coq.Numbers.NatInt.NZGcd.gcd_0_r_nonneg	40	0.2.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0125200748444	9
Coq.Numbers.NatInt.NZGcd.gcd_1_l	40	0.1.1.2.57.1.17	search with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	7.12045812607	22584
Coq.Numbers.NatInt.NZGcd.gcd_1_r	40	0.2.1.1.8.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.426590919495	682
Coq.Numbers.NatInt.NZGcd.gcd_diag_nonneg	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0120470523834	9
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.gcd_mul_diag_l	40
Coq.Numbers.NatInt.NZGcd.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.Even_wd	40
Coq.Numbers.NatInt.NZParity.Odd_wd	40
Coq.Numbers.NatInt.NZParity.even_wd	40
Coq.Numbers.NatInt.NZParity.odd_wd	40
Coq.Numbers.NatInt.NZParity.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.double_below	40
Coq.Numbers.NatInt.NZParity.double_above	40
Coq.Numbers.NatInt.NZParity.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.negb_odd	40
Coq.Numbers.NatInt.NZParity.negb_even	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.155385971069	25
Coq.Numbers.NatInt.NZParity.even_0	40
Coq.Numbers.NatInt.NZParity.odd_0	40
Coq.Numbers.NatInt.NZParity.odd_1	40
Coq.Numbers.NatInt.NZParity.even_1	40
Coq.Numbers.NatInt.NZParity.even_2	40
Coq.Numbers.NatInt.NZParity.odd_2	40
Coq.Numbers.NatInt.NZParity.Odd_succ	40
Coq.Numbers.NatInt.NZParity.odd_succ	40
Coq.Numbers.NatInt.NZParity.even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ	40	26.15.16	search with cache (only 1: intro n; only 1: rewrite <- even_spec, <- odd_spec; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	21.9097919464	42118
Coq.Numbers.NatInt.NZParity.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_add	40
Coq.Numbers.NatInt.NZParity.odd_add	40
Coq.Numbers.NatInt.NZParity.even_mul	40
Coq.Numbers.NatInt.NZParity.odd_mul	40
Coq.Numbers.NatInt.NZParity.even_add_even	40
Coq.Numbers.NatInt.NZParity.odd_add_even	40
Coq.Numbers.NatInt.NZParity.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_r	40	2.1.1.1.0.11	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	2.46472597122	1661
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_r	40	4.1.1.1.2.12	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	6.66823506355	3813
Coq.Numbers.NatInt.NZAddOrder.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_cases	40	6.2.0	search with cache (only 1: intros x y H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.104732036591	47
Coq.Numbers.NatInt.NZAddOrder.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_cases	40	1.7.0	search with cache (only 1: intros x y H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0822851657867	39
Coq.Numbers.NatInt.NZAddOrder.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.mul_0_r	40	20.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').	0.565254211426	1468
Coq.Numbers.NatInt.NZMul.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.mul_comm	40	0.1.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0443601608276	7
Coq.Numbers.NatInt.NZMul.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.mul_assoc	40
Coq.Numbers.NatInt.NZMul.mul_1_l	40	0.0.0.1.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0598521232605	6
Coq.Numbers.NatInt.NZMul.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0221080780029	2
Coq.Numbers.NatInt.NZMul.mul_shuffle0	40	1.2.3.1.0.27.3	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	2.97407197952	5977
Coq.Numbers.NatInt.NZMul.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_unique	40
Coq.Numbers.NatInt.NZLog.log2_wd	40
Coq.Numbers.NatInt.NZLog.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.log2_unique'	40
Coq.Numbers.NatInt.NZLog.log2_pow2	40
Coq.Numbers.NatInt.NZLog.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.log2_1	40
Coq.Numbers.NatInt.NZLog.log2_2	40
Coq.Numbers.NatInt.NZLog.log2_pos	40
Coq.Numbers.NatInt.NZLog.log2_null	40
Coq.Numbers.NatInt.NZLog.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_double	40
Coq.Numbers.NatInt.NZLog.log2_same	40
Coq.Numbers.NatInt.NZLog.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_up_nonpos	40	0.1.12.1.0.0.4.2	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: assert (Ha' : 0 < a) by order'; only 1: order; only 1: order).	11.04124403	5482
Coq.Numbers.NatInt.NZLog.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_1	40	0.1	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0108318328857	3
Coq.Numbers.NatInt.NZLog.log2_up_2	40
Coq.Numbers.NatInt.NZLog.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.log2_up_null	40
Coq.Numbers.NatInt.NZLog.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_double	40
Coq.Numbers.NatInt.NZLog.log2_up_same	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.eq_sym_iff	40	1.0.0.1.0.0.1	search with cache (only 1: split; only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto with sets; only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto with sets).	0.0399849414825	48
Coq.Numbers.NatInt.NZBase.neq_sym	40	20	search with cache (only 1: firstorder).	0.475029945374	2028
Coq.Numbers.NatInt.NZBase.eq_stepl	40	0.16.11	search with cache (only 1: intros x y Hxy Hyz Hy; only 1: rewrite <- Hyz; only 1: auto with *).	8.27284312248	22130
Coq.Numbers.NatInt.NZBase.succ_inj	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_neg	40	4.4.1	search with cache (only 1: intros n m p Hp; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	2.9325530529	118
Coq.Numbers.NatInt.NZMulOrder.mul_neg_pos	40	3.0.1	search with cache (only 1: intros n m p Hp; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0492589473724	16
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_r	40	1.0.1.0.10	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: auto).	0.783819913864	878
Coq.Numbers.NatInt.NZMulOrder.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.square_le_mono_nonneg	40	3.3.3.3.3.1	search with cache (only 1: intros n m p Hp; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	2.87437200546	4775
Coq.Numbers.NatInt.NZMulOrder.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.eq_refl	40	3.0	search with cache (only 1: intros; only 1: reflexivity).	0.0107579231262	5
Coq.Structures.OrdersTac.le_refl	40
Coq.Structures.OrdersTac.lt_irrefl	40
Coq.Structures.OrdersTac.eq_sym	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: auto with sets).	0.0261089801788	11
Coq.Structures.OrdersTac.le_antisym	40
Coq.Structures.OrdersTac.neq_sym	40	2	search with cache (only 1: auto with *).	0.0318050384521	41
Coq.Structures.OrdersTac.trans	40
Coq.Structures.OrdersTac.eq_neq	40	0.31.5.9	search with cache (only 1: intros x y z; only 1: intro H; only 1: rewrite <- H; only 1: simpl_relation).	38.635171175	27143
Coq.Structures.OrdersTac.neq_eq	40	13	search with cache (only 1: eauto using eq_trans, eq_sym).	2.28418397903	2668
Coq.Structures.OrdersTac.not_neq_eq	40
Coq.Structures.OrdersTac.not_ge_lt	40
Coq.Structures.OrdersTac.not_gt_le	40	2.0.2.7.0	search with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: auto; only 1: intuition).	0.670207023621	1208
Coq.Structures.OrdersTac.le_neq_lt	40
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.lt_compat	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrdersEx.bits_lt_antirefl	40
Coq.Structures.OrdersEx.bits_lt_trans	40
Coq.Structures.OrdersEx.lt_compat	40	21	search with cache (only 1: solve_proper).	0.871367931366	1199
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrderedTypeEx.lt_trans	40	0.6.1	search with cache (only 1: intros; only 1: rewrite H; only 1: trivial).	0.021999835968	10
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_trans	40	2.4	search with cache (only 1: intros ? ? LT ->; only 1: now f_equal).	0.020299911499	14
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_refl	40	8	search with cache (only 1: now subst).	0.0235900878906	18
Coq.Structures.OrderedTypeEx.eq_sym	40	6.1.12.22.14	search with cache (only 1: intros x y; only 1: red; only 1: intro H; only 1: destruct H; only 1: now subst).	21.9275341034	44868
Coq.Structures.OrderedTypeEx.eq_trans	40	5.9.1.0.1.9.9	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq; only 1: simpl; only 1: intros; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	5.12986898422	7958
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.le_lteq	40	12	search with cache (only 1: solve_proper).	0.0354201793671	135
Coq.Structures.Orders.lt_total	40
Coq.Structures.Orders.leb_le	40
Coq.Structures.Orders.leb_total	40
Coq.Structures.Orders.leb_trans	40
Coq.Structures.Orders.compare_spec	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.eq_equiv	40
Coq.Structures.Orders.lt_strorder	40
Coq.Structures.Orders.lt_compat	40
Coq.Structures.Orders.le_lteq	40
Coq.Structures.DecidableTypeEx.eq_refl	40	8	search with cache (only 1: now subst).	0.0161421298981	20
Coq.Structures.DecidableTypeEx.eq_sym	40	12.16.18.0	search with cache (only 1: intros x y H; only 1: inversion H; only 1: red; only 1: auto with arith).	5.55026912689	15458
Coq.Structures.DecidableTypeEx.eq_trans	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.Equalities.eq_equiv	40	5.73.9.9.27	search with cache (only 1: constructor; only 1: auto with *; only 1: auto with *; only 1: intros x y EQ WF; only 1: eauto).	8.31440091133	53703
Coq.Structures.Equalities.eqb_eq	40
Coq.Structures.Equalities.eq_dec	40
Coq.Structures.Equalities.eqb_compat	40
Coq.Structures.Equalities.eqb_spec	40
Coq.Structures.Equalities.eqb_neq	40
Coq.Structures.Equalities.eqb_refl	40	4.103	search with cache (only 1: apply eqb_eq; only 1: reflexivity).	3.38501787186	12359
Coq.Structures.Equalities.eqb_sym	40
Coq.Structures.OrderedType.eq_dec	40
Coq.Structures.OrderedType.eq_equiv	40
Coq.Structures.OrderedType.lt_antirefl	40
Coq.Structures.OrderedType.lt_strorder	40
Coq.Structures.OrderedType.lt_eq	40
Coq.Structures.OrderedType.eq_lt	40
Coq.Structures.OrderedType.lt_compat	40
Coq.Structures.OrderedType.lt_total	40
Coq.Structures.OrderedType.le_lteq	40	0.10.0.10.0	search with cache (only 1: intuition; only 1: repeat red; only 1: tauto; only 1: repeat red; only 1: tauto).	0.984360933304	2478
Coq.Structures.OrderedType.le_eq	40
Coq.Structures.OrderedType.eq_le	40
Coq.Structures.OrderedType.neq_eq	40	0	search with cache (only 1: order).	0.0124850273132	1
Coq.Structures.OrderedType.eq_neq	40	0	search with cache (only 1: order).	0.0121200084686	1
Coq.Structures.OrderedType.le_lt_trans	40	76	search with cache (only 1: order).	1.48378205299	7832
Coq.Structures.OrderedType.lt_le_trans	40	75	search with cache (only 1: order).	2.23612213135	10824
Coq.Structures.OrderedType.le_neq	40
Coq.Structures.OrderedType.le_trans	40
Coq.Structures.OrderedType.le_antisym	40	0	search with cache (only 1: order).	0.0112519264221	1
Coq.Structures.OrderedType.neq_sym	40	5.7	search with cache (only 1: intro H; only 1: auto with ordered_type).	0.0644569396973	89
Coq.Structures.OrderedType.lt_le	40	3.3.2.6.6.7	search with cache (only 1: intro H; only 1: intro; only 1: apply (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	0.817441940308	2488
Coq.Structures.OrderedType.gt_not_eq	40	0	search with cache (only 1: order).	0.0104570388794	1
Coq.Structures.OrderedType.eq_not_lt	40	0	search with cache (only 1: order).	0.0105011463165	1
Coq.Structures.OrderedType.eq_not_gt	40	0	search with cache (only 1: order).	0.0104289054871	1
Coq.Structures.OrderedType.lt_not_gt	40	0	search with cache (only 1: order).	0.00977301597595	1
Coq.Structures.OrderedType.elim_compare_eq	40
Coq.Structures.OrderedType.elim_compare_lt	40	2.0.0.2.0.0.0.1.0.0.0	search with cache (only 1: intros x y H; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.866111040115	1371
Coq.Structures.OrderedType.elim_compare_gt	40	0.1.0.2.0.0.2.0.0.0.0	search with cache (only 1: intros x y H; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.740041017532	1236
Coq.Structures.OrderedType.lt_dec	40
Coq.Structures.OrderedType.eqb_alt	40
Coq.Structures.OrderedType.In_eq	40	3.1.23.0.1.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: rewrite <- H0; only 1: auto; only 1: eauto).	26.1116969585	70121
Coq.Structures.OrderedType.ListIn_In	40	3.3.0.18.5.5.21.9	search with cache (only 1: induction l; only 1: intro H; only 1: induction 1; only 1: intros; only 1: destruct H; only 1: constructor; only 1: now rewrite H; only 1: auto).	14.8071408272	80011
Coq.Structures.OrderedType.Inf_lt	40
Coq.Structures.OrderedType.Inf_eq	40
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.ListIn_Inf	40	1.0.0.0.0.3	search with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: intros; only 1: apply In_InfA; only 1: auto).	0.0765509605408	121
Coq.Structures.OrderedType.In_Inf	40	12.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros x l' H H0; only 1: intuition).	1.01236414909	1474
Coq.Structures.OrderedType.Inf_alt	40
Coq.Structures.OrderedType.Sort_NoDup	40
Coq.Structures.OrderedType.eqke_eqk	40	14.23	search with cache (only 1: induction 1; only 1: auto).	0.250475883484	899
Coq.Structures.OrderedType.ltk_right_r	40	1	search with cache (only 1: tauto).	0.0128920078278	2
Coq.Structures.OrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00801801681519	1
Coq.Structures.OrderedType.eqk_refl	40	4.0	search with cache (only 1: intros; only 1: auto with ordered_type).	0.00995683670044	6
Coq.Structures.OrderedType.eqke_refl	40	4.0	search with cache (only 1: intros; only 1: auto with ordered_type).	0.010311126709	6
Coq.Structures.OrderedType.eqk_sym	40	0	search with cache (only 1: intuition).	0.0131380558014	1
Coq.Structures.OrderedType.eqke_sym	40	0.2	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0419139862061	13
Coq.Structures.OrderedType.eqk_trans	40	1.32.3.1.3	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: simpl in *; only 1: rewrite <- H0; only 1: auto).	2.90901112556	7832
Coq.Structures.OrderedType.eqke_trans	40
Coq.Structures.OrderedType.ltk_trans	40	5.1	search with cache (only 1: intuition; only 1: eauto with ordered_type).	0.0263030529022	12
Coq.Structures.OrderedType.ltk_not_eqk	40	3	search with cache (only 1: eauto with ordered_type).	0.037036895752	12
Coq.Structures.OrderedType.ltk_not_eqke	40	6.2.1.0	search with cache (only 1: unfold eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).	0.529592037201	285
Coq.Structures.OrderedType.eqk_equiv	40	0.2.32.2.32.43.66	search with cache (only 1: constructor; only 1: intuition; only 1: repeat red; only 1: intuition; only 1: repeat red; only 1: intuition; only 1: eauto with ordered_type).	6.96697902679	104618
Coq.Structures.OrderedType.eqke_equiv	40	1.1.1.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0552799701691	30
Coq.Structures.OrderedType.ltk_strorder	40	2.8.38.33.35.0	search with cache (only 1: constructor; only 1: repeat red; only 1: intros; only 1: compute in H; only 1: order; only 1: eauto with ordered_type).	6.15168690681	57326
Coq.Structures.OrderedType.ltk_compat	40
Coq.Structures.OrderedType.ltk_compat'	40
Coq.Structures.OrderedType.eqk_not_ltk	40	3.1	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0670340061188	15
Coq.Structures.OrderedType.ltk_eqk	40	0.2.1	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0189120769501	6
Coq.Structures.OrderedType.eqk_ltk	40	0.2.1	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0582749843597	6
Coq.Structures.OrderedType.InA_eqke_eqk	40	5.1.9.7.27	search with cache (only 1: induction 1; only 1: left; only 1: destruct H; only 1: auto; only 1: auto).	0.758256912231	3703
Coq.Structures.OrderedType.In_alt	40
Coq.Structures.OrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.Inf_eq	40	1.11.1.11.2.0	search with cache (only 1: simple induction l; only 1: intuition; only 1: intuition; only 1: right; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	11.3850579262	15164
Coq.Structures.OrderedType.Inf_lt	40	1.11.1.11.2.1	search with cache (only 1: simple induction l; only 1: intuition; only 1: intuition; only 1: right; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	37.1215350628	12022
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.In_inv	40
Coq.Structures.OrderedType.In_inv_2	40	0.6.2.3	search with cache (only 1: intros x y H; only 1: inversion_clear 1; only 1: intuition; only 1: eauto with ordered_type).	0.532547950745	660
Coq.Structures.OrderedType.In_inv_3	40	1.1.0.0.2.1	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: invlist InA; only 1: destruct H1; only 1: congruence; only 1: eauto with *).	0.239048957825	170
Coq.Structures.OrdersFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.compare_eq	40
Coq.Structures.OrdersFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.compare_gt_iff	40	0.0.0.0.0.1.0.1.0.0.0.0.2.1.2.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	9.76406812668	7788
Coq.Structures.OrdersFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.compare_compat	40
Coq.Structures.OrdersFacts.compare_refl	40
Coq.Structures.OrdersFacts.compare_antisym	40
Coq.Structures.OrdersFacts.le_compat	40
Coq.Structures.OrdersFacts.le_preorder	40
Coq.Structures.OrdersFacts.le_order	40
Coq.Structures.OrdersFacts.le_antisym	40
Coq.Structures.OrdersFacts.le_not_gt_iff	40	2	search with cache (only 1: iorder).	0.0208570957184	22
Coq.Structures.OrdersFacts.lt_not_ge_iff	40	2	search with cache (only 1: iorder).	0.0423059463501	22
Coq.Structures.OrdersFacts.le_or_gt	40
Coq.Structures.OrdersFacts.lt_or_ge	40	0.0.1.1.7.1.0.3.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	1.42912507057	2044
Coq.Structures.OrdersFacts.eq_is_le_ge	40	1.1.1.0.0	search with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0429739952087	8
Coq.Structures.OrdersFacts.compare_le_iff	40
Coq.Structures.OrdersFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0188190937042	3
Coq.Structures.OrdersFacts.lt_dec	40
Coq.Structures.OrdersFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.eqb_alt	40	1.1.0.0.3.3.4.0.0.16.19	search with cache (only 1: simpl_relation; only 1: compute; only 1: destruct eq_dec; only 1: elim_compare x y; only 1: auto; only 1: order; only 1: order; only 1: elim_compare x y; only 1: order; only 1: auto; only 1: auto).	4.20702004433	10054
Coq.Structures.OrdersFacts.eqb_compat	40
Coq.Structures.OrdersFacts.lt_not_eq	40	1.5	search with cache (only 1: intro H; only 1: order).	0.0128970146179	8
Coq.Structures.OrdersFacts.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0208699703217	1
Coq.Structures.OrdersFacts.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0193939208984	1
Coq.Structures.OrdersFacts.le_eq	40	0.5	search with cache (only 1: intro H; only 1: order).	0.0793199539185	19
Coq.Structures.OrdersFacts.eq_le	40	6.0.4	search with cache (only 1: simpl_relation; only 1: eapply OrderTac.lt_irrefl; only 1: order).	0.224828004837	120
Coq.Structures.OrdersFacts.neq_eq	40	0	search with cache (only 1: order).	0.011775970459	1
Coq.Structures.OrdersFacts.eq_neq	40	0	search with cache (only 1: order).	0.0116760730743	1
Coq.Structures.OrdersFacts.le_lt_trans	40	4.4	search with cache (only 1: simpl_relation; only 1: order).	0.0206191539764	13
Coq.Structures.OrdersFacts.lt_le_trans	40	4.4	search with cache (only 1: simpl_relation; only 1: order).	0.01868891716	10
Coq.Structures.OrdersFacts.le_trans	40	0.0.0.1.5	search with cache (only 1: intro H; only 1: elim_compare x y; only 1: order; only 1: order; only 1: order).	0.15895485878	68
Coq.Structures.OrdersFacts.le_antisym	40	7.5	search with cache (only 1: intro H; only 1: order).	0.173138856888	176
Coq.Structures.OrdersFacts.le_neq	40	0	search with cache (only 1: order).	0.0111989974976	1
Coq.Structures.OrdersFacts.neq_sym	40	1.5	search with cache (only 1: intro H; only 1: intuition).	0.017655134201	11
Coq.Structures.OrdersFacts.lt_le	40	0	search with cache (only 1: order).	0.00966882705688	1
Coq.Structures.OrdersFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0104579925537	1
Coq.Structures.OrdersFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0103180408478	1
Coq.Structures.OrdersFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0103929042816	1
Coq.Structures.OrdersFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00982284545898	1
Coq.Structures.OrdersFacts.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.lt_strorder	40
Coq.Structures.OrdersFacts.lt_compat	40
Coq.Structures.OrdersFacts.le_lteq	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_eq	40	0.18	search with cache (only 1: intros; only 1: now apply compare_eq_iff).	0.060173034668	175
Coq.Structures.OrdersFacts.compare_refl	40	3.111	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	31.5023839474	104773
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.leb_spec0	40
Coq.Structures.OrdersFacts.leb_spec	40
Coq.Structures.OrdersFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.ltb_spec	40
Coq.Structures.OrdersFacts.leb_nle	40
Coq.Structures.OrdersFacts.leb_gt	40
Coq.Structures.OrdersFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.ltb_ge	40
Coq.Structures.OrdersFacts.leb_refl	40
Coq.Structures.OrdersFacts.leb_antisym	40
Coq.Structures.OrdersFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.eqb_compare	40
Coq.Structures.OrdersFacts.ltb_compare	40
Coq.Structures.OrdersFacts.leb_compare	40
Coq.Structures.OrdersLists.In_eq	40	1.4.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0886218547821	96
Coq.Structures.OrdersLists.ListIn_In	40	1.3.3.0.16.10.0.0.39.0	search with cache (only 1: simple induction l; only 1: simpl in *; only 1: tauto; only 1: intros x l' H H0; only 1: intros; only 1: destruct H1; only 1: constructor; only 1: destruct H1; only 1: reflexivity; only 1: auto).	17.2690041065	95828
Coq.Structures.OrdersLists.Inf_lt	40	1.0.1.0.5.0.0.0.0.1	search with cache (only 1: destruct l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: constructor; only 1: transitivity y; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: auto; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: auto).	6.39814186096	8981
Coq.Structures.OrdersLists.Inf_eq	40
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.ListIn_Inf	40	1.0.0.0.0.2	search with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: intros; only 1: apply In_InfA; only 1: auto).	0.056193113327	121
Coq.Structures.OrdersLists.In_Inf	40	12.0.0.2	search with cache (only 1: destruct l; only 1: intros; only 1: constructor; only 1: intuition).	1.37138915062	2191
Coq.Structures.OrdersLists.Inf_alt	40
Coq.Structures.OrdersLists.Sort_NoDup	40
Coq.Structures.OrdersLists.ltk_compat	40	68	search with cache (only 1: eauto with *).	27.5393979549	97620
Coq.Structures.OrdersLists.ltk_compat'	40
Coq.Structures.OrdersLists.pair_compat	40	0.0	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: now compute).	0.0104179382324	2
Coq.Structures.OrdersLists.ltk_not_eqk	40
Coq.Structures.OrdersLists.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0146338939667	4
Coq.Structures.OrdersLists.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.0138189792633	1
Coq.Structures.OrdersLists.Inf_lt	40
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.Sort_NoDupA	40
Coq.Structures.OrdersLists.Sort_In_cons_1	40	0.0.0.8.24.2	search with cache (only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: firstorder; only 1: firstorder).	3.29180717468	5246
Coq.Structures.OrdersLists.Sort_In_cons_2	40
Coq.Structures.OrdersLists.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.eqke_eqk	40	1.29	search with cache (only 1: induction 1; only 1: auto).	0.122577905655	484
Coq.Structures.EqualitiesFacts.eqke_def	40	2	search with cache (only 1: constructor).	0.0126509666443	3
Coq.Structures.EqualitiesFacts.eqke_def'	40	10	search with cache (only 1: intuition).	0.0259649753571	21
Coq.Structures.EqualitiesFacts.eqke_1	40	1.22.5	search with cache (only 1: intro; only 1: destruct H; only 1: auto).	0.47439789772	947
Coq.Structures.EqualitiesFacts.eqke_2	40	7	search with cache (only 1: now destruct 1).	0.0205039978027	12
Coq.Structures.EqualitiesFacts.eqk_def	40	1	search with cache (only 1: reflexivity).	0.0115699768066	2
Coq.Structures.EqualitiesFacts.eqk_def'	40	10	search with cache (only 1: intuition).	0.0225620269775	21
Coq.Structures.EqualitiesFacts.eqk_1	40	5	search with cache (only 1: auto).	0.0143659114838	6
Coq.Structures.EqualitiesFacts.InA_eqke_eqk	40
Coq.Structures.EqualitiesFacts.InA_eqk_eqke	40	19.5.5	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	1.84148097038	3710
Coq.Structures.EqualitiesFacts.InA_eqk	40
Coq.Structures.EqualitiesFacts.In_alt	40
Coq.Structures.EqualitiesFacts.In_alt'	40
Coq.Structures.EqualitiesFacts.In_alt2	40
Coq.Structures.EqualitiesFacts.In_nil	40	0.4.14.37.24	search with cache (only 1: repeat constructor; only 1: unfold In, MapsTo; only 1: intros (e, H); only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: tauto).	9.10435509682	36918
Coq.Structures.EqualitiesFacts.In_cons	40
Coq.Structures.EqualitiesFacts.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.In_compat	40
Coq.Structures.EqualitiesFacts.MapsTo_eq	40	0.3	search with cache (only 1: intros H; only 1: now rewrite H).	0.0499560832977	38
Coq.Structures.EqualitiesFacts.In_eq	40	39	search with cache (only 1: now intros <-).	1.11890888214	2857
Coq.Structures.EqualitiesFacts.In_inv	40	14.84	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: now compute).	26.0257110596	68465
Coq.Structures.EqualitiesFacts.In_inv_2	40	2.5.14.10	search with cache (only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: auto).	2.44011282921	2993
Coq.Structures.EqualitiesFacts.In_inv_3	40	0.0.9.9.2	search with cache (only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: rewrite InA_alt; only 1: firstorder; only 1: firstorder).	0.76039814949	1004
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.DecidableType.eqke_eqk	40	14.32	search with cache (only 1: induction 1; only 1: auto).	0.495324850082	1260
Coq.Structures.DecidableType.eqk_refl	40	32.0	search with cache (only 1: intros; only 1: auto).	0.215852975845	1042
Coq.Structures.DecidableType.eqke_refl	40	1	search with cache (only 1: auto).	0.0145289897919	11
Coq.Structures.DecidableType.eqk_sym	40	0	search with cache (only 1: intuition).	0.0151128768921	1
Coq.Structures.DecidableType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0431599617004	13
Coq.Structures.DecidableType.eqk_trans	40	7.0.30	search with cache (only 1: intros x l' H H0; only 1: intros; only 1: eauto).	2.08265995979	6196
Coq.Structures.DecidableType.eqke_trans	40	0.3.5.25.3.5.1.0	search with cache (only 1: unfold eqke; only 1: intuition; only 1: destruct H2; only 1: simpl in *; only 1: eauto; only 1: destruct H2; only 1: simpl in *; only 1: auto).	18.4420161247	41312
Coq.Structures.DecidableType.eqk_equiv	40	7.0.26.1.40.1.40.86	search with cache (only 1: repeat constructor; only 1: red; only 1: auto; only 1: red; only 1: intuition; only 1: intros x l' H H0; only 1: intros; only 1: eauto).	16.3173398972	135829
Coq.Structures.DecidableType.eqke_equiv	40	0.0.0.1	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0391039848328	5
Coq.Structures.DecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.InA_eqk	40	1.1.56.1.2	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: elim H0; only 1: eauto; only 1: eauto).	33.8531689644	39101
Coq.Structures.DecidableType.In_alt	40
Coq.Structures.DecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.In_eq	40
Coq.Structures.DecidableType.In_inv	40
Coq.Structures.DecidableType.In_inv_2	40	1.1.6.0.1	search with cache (only 1: inversion 1; only 1: invlist InA; only 1: intuition; only 1: auto; only 1: auto).	0.522330999374	269
Coq.Structures.DecidableType.In_inv_3	40	0.0.6.1.0	search with cache (only 1: unfold eqke; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: intuition).	0.470090866089	222
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.lt_not_eq	40
Coq.Structures.OrdersAlt.lt_trans	40	3.3.43.0.16	search with cache (only 1: repeat red; only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.836436986923	8511
Coq.Structures.OrdersAlt.compare	40
Coq.Structures.OrdersAlt.eq_equiv	40
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_eq	40
Coq.Structures.OrdersAlt.eq_lt	40	0.1.1.3.2.0.4.0.0.0.9.3	search with cache (only 1: unfold lt, eq; only 1: intros x y z Hxy Hyz; only 1: destruct (x ?= z) eqn:Hxz; only 1: rewrite compare_sym, CompOpp_iff in Hxy; only 1: simpl in Hxy; only 1: rewrite (compare_trans Hxy Hxz) in Hyz; only 1: discriminate; only 1: auto; only 1: rewrite compare_sym, CompOpp_iff in Hyz; only 1: simpl in Hyz; only 1: rewrite (compare_trans Hxz Hyz) in Hxy; only 1: discriminate).	18.1444849968	33153
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.eq_dec	40
Coq.Structures.OrdersAlt.compare_sym	40
Coq.Structures.OrdersAlt.compare_Eq	40
Coq.Structures.OrdersAlt.compare_Lt	40
Coq.Structures.OrdersAlt.compare_Gt	40	0.2.2.1.0.0.2.5.3.0.0.0.0.4	search with cache (only 1: unfold compare; only 1: intros; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H0 in H; only 1: elim (StrictOrder_Irreflexive x); only 1: auto; only 1: intuition).	14.1825017929	25479
Coq.Structures.OrdersAlt.compare_trans	40
Coq.Structures.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.min_r	40	1.3.3.1.0.1.0.0.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	9.82752394676	13938
Coq.Structures.GenericMinMax.max_spec	40
Coq.Structures.GenericMinMax.max_spec_le	40	0.0.0.0.0.0.7.0.0.7.0.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	5.84119701385	8369
Coq.Structures.GenericMinMax.Proper_instance_0	40
Coq.Structures.GenericMinMax.max_compat	40
Coq.Structures.GenericMinMax.max_unicity	40
Coq.Structures.GenericMinMax.max_unicity_ext	40
Coq.Structures.GenericMinMax.max_mono	40
Coq.Structures.GenericMinMax.max_id	40	40.0	search with cache (only 1: apply max_r; only 1: intuition order).	0.554109096527	1642
Coq.Structures.GenericMinMax.max_assoc	40
Coq.Structures.GenericMinMax.max_comm	40
Coq.Structures.GenericMinMax.le_max_l	40	0.0.0.0.80	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.907371044159	4289
Coq.Structures.GenericMinMax.le_max_r	40	0	search with cache (only 1: solve_max).	0.017884016037	1
Coq.Structures.GenericMinMax.max_l_iff	40
Coq.Structures.GenericMinMax.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0481169223785	1
Coq.Structures.GenericMinMax.max_le	40
Coq.Structures.GenericMinMax.max_le_iff	40	0.0.0.0.0.2.0.0.0.0.0.1.2.37	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: order).	25.2965948582	24813
Coq.Structures.GenericMinMax.max_lt_iff	40	2.0.0.0.0.0.1.3.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.649083137512	528
Coq.Structures.GenericMinMax.max_lub_l	40	33	search with cache (only 1: solve_max).	1.80435705185	2273
Coq.Structures.GenericMinMax.max_lub_r	40	0	search with cache (only 1: solve_max).	0.019376039505	1
Coq.Structures.GenericMinMax.max_lub	40	34	search with cache (only 1: solve_max).	1.00028610229	1455
Coq.Structures.GenericMinMax.max_lub_iff	40	33	search with cache (only 1: solve_max).	1.00237894058	1084
Coq.Structures.GenericMinMax.max_lub_lt	40	2	search with cache (only 1: solve_max).	0.0207779407501	3
Coq.Structures.GenericMinMax.max_lub_lt_iff	40	0	search with cache (only 1: solve_max).	0.0361800193787	1
Coq.Structures.GenericMinMax.max_le_compat_l	40
Coq.Structures.GenericMinMax.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0296351909637	4
Coq.Structures.GenericMinMax.max_le_compat	40	0.12.6	search with cache (only 1: simpl_relation; only 1: apply max_lub_iff; only 1: solve_max).	0.442998170853	325
Coq.Structures.GenericMinMax.min_spec	40
Coq.Structures.GenericMinMax.min_spec_le	40	3.0.1.0.2.0.0.0.4	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	5.61854195595	6721
Coq.Structures.GenericMinMax.min_compat	40
Coq.Structures.GenericMinMax.min_unicity	40
Coq.Structures.GenericMinMax.min_unicity_ext	40
Coq.Structures.GenericMinMax.min_mono	40
Coq.Structures.GenericMinMax.min_id	40	4.3	search with cache (only 1: apply min_l; only 1: order).	0.0132141113281	9
Coq.Structures.GenericMinMax.min_assoc	40
Coq.Structures.GenericMinMax.min_comm	40
Coq.Structures.GenericMinMax.le_min_r	40	9.0.9.0.59	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.896878004074	4491
Coq.Structures.GenericMinMax.le_min_l	40	0	search with cache (only 1: solve_min).	0.0179159641266	1
Coq.Structures.GenericMinMax.min_l_iff	40	11	search with cache (only 1: solve_min).	0.0623610019684	42
Coq.Structures.GenericMinMax.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0239617824554	1
Coq.Structures.GenericMinMax.min_le	40	1.1.0.16	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.910217046738	683
Coq.Structures.GenericMinMax.min_le_iff	40	6.6.2.6.6.2.1.17	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	35.1006729603	30508
Coq.Structures.GenericMinMax.min_lt_iff	40	0.0.0.1.0.0.0.3.1	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	0.631665945053	351
Coq.Structures.GenericMinMax.min_glb_l	40	6	search with cache (only 1: solve_min).	0.0335259437561	11
Coq.Structures.GenericMinMax.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0194449424744	1
Coq.Structures.GenericMinMax.min_glb	40	11	search with cache (only 1: solve_min).	0.0803377628326	52
Coq.Structures.GenericMinMax.min_glb_iff	40	9	search with cache (only 1: solve_min).	0.162022829056	61
Coq.Structures.GenericMinMax.min_glb_lt	40	0	search with cache (only 1: solve_min).	0.0196180343628	1
Coq.Structures.GenericMinMax.min_glb_lt_iff	40	0	search with cache (only 1: solve_min).	0.0365009307861	1
Coq.Structures.GenericMinMax.min_le_compat_l	40
Coq.Structures.GenericMinMax.min_le_compat_r	40	0.2.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0326969623566	5
Coq.Structures.GenericMinMax.min_le_compat	40	0.20.0	search with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).	0.630731105804	947
Coq.Structures.GenericMinMax.min_max_absorption	40	0.14	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0810680389404	126
Coq.Structures.GenericMinMax.max_min_absorption	40	0.0.0.0.4.0.1.0.0.0.5.0.9	search with cache (only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply min_unicity; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: right; only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	11.8008980751	17508
Coq.Structures.GenericMinMax.max_min_distr	40
Coq.Structures.GenericMinMax.min_max_distr	40
Coq.Structures.GenericMinMax.max_min_modular	40
Coq.Structures.GenericMinMax.min_max_modular	40
Coq.Structures.GenericMinMax.max_min_disassoc	40
Coq.Structures.GenericMinMax.max_min_antimono	40
Coq.Structures.GenericMinMax.min_max_antimono	40
Coq.Structures.GenericMinMax.max_case_strong	40
Coq.Structures.GenericMinMax.max_case	40	0.0.0.0.0.0.1.0.1.1.0.1.0.1.1.1.4	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	3.53223013878	9213
Coq.Structures.GenericMinMax.max_dec	40
Coq.Structures.GenericMinMax.min_case_strong	40
Coq.Structures.GenericMinMax.min_case	40	0.1.0.1.0.0.3.0.0.1.0.3.0.0.1.2.3	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	4.93184614182	13894
Coq.Structures.GenericMinMax.min_dec	40
Coq.Structures.GenericMinMax.max_monotone	40	2.2.39	search with cache (only 1: apply max_mono; only 1: intros x x' Hxx'; only 1: CRelationClasses.simpl_crelation).	2.80125904083	5808
Coq.Structures.GenericMinMax.min_monotone	40	0.36	search with cache (only 1: apply min_mono; only 1: congruence).	2.27493309975	4235
Coq.Structures.GenericMinMax.min_max_antimonotone	40
Coq.Structures.GenericMinMax.max_min_antimonotone	40
Coq.Structures.GenericMinMax.max_case_strong	40	2.0.6.7.0	search with cache (only 1: intros x y H; only 1: apply max_case_strong; only 1: firstorder; only 1: subst; only 1: auto).	0.607003211975	1199
Coq.Structures.GenericMinMax.max_case	40	0.0.0.5.0	search with cache (only 1: intros x y H; only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0174717903137	10
Coq.Structures.GenericMinMax.max_dec	40	2.2.2.1	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto; only 1: auto).	0.0332908630371	37
Coq.Structures.GenericMinMax.min_case_strong	40	0.10.0	search with cache (only 1: intros x y H; only 1: apply min_case_strong; only 1: congruence).	0.099536895752	133
Coq.Structures.GenericMinMax.min_case	40	0.0.1.3	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0235190391541	21
Coq.Structures.GenericMinMax.min_dec	40	2.2.0.1	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto; only 1: auto).	0.0179500579834	9
Coq.Structures.GenericMinMax.compare_spec	40
Coq.Structures.OrderedTypeAlt.eq_refl	40
Coq.Structures.OrderedTypeAlt.eq_sym	40
Coq.Structures.OrderedTypeAlt.lt_not_eq	40	36.4.0	search with cache (only 1: intros; only 1: intro; only 1: congruence).	8.30627989769	27713
Coq.Structures.OrderedTypeAlt.compare	40
Coq.Structures.OrderedTypeAlt.eq_dec	40
Coq.Structures.OrderedTypeAlt.compare_sym	40
Coq.Structures.OrderedTypeAlt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.10	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0231459140778	47
Coq.ZArith.Znat.N_nat_Z	40	0.2.0.1.3.2.3.7.0.11	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	1.75829911232	5437
Coq.ZArith.Znat.positive_nat_Z	40	1.1.3.2.4	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.169000864029	234
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.00637221336365	1
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.00561785697937	1
Coq.ZArith.Znat.positive_nat_N	40	1.1.3.2.4	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.165683984756	234
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0115308761597	7
Coq.ZArith.Znat.Z_nat_N	40	0.5.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: Nat2N.nat2N; only 1: trivial).	0.0417311191559	66
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0103158950806	8
Coq.ZArith.Znat.Zabs_nat_N	40	5.5.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: Nat2N.nat2N; only 1: Nat2N.nat2N).	0.328396081924	345
Coq.ZArith.Znat.id	40	0.1.0	search with cache (only 1: induction n; only 1: now apply Z2Pos.id; only 1: trivial).	0.00963592529297	4
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	0.0.3.0	search with cache (only 1: split; only 1: now apply Z2Pos.inj; only 1: intros; only 1: now f_equal).	0.0200560092926	13
Coq.ZArith.Znat.is_nonneg	40	5.1.7	search with cache (only 1: induction n; only 1: easy; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	0.337394952774	143
Coq.ZArith.Znat.inj_0	40	8	search with cache (only 1: now f_equal).	0.010241985321	9
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00934386253357	1
Coq.ZArith.Znat.inj_compare	40	0.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0177419185638	9
Coq.ZArith.Znat.inj_le	40	1.2.5.5.45	search with cache (only 1: destruct n, m; only 1: now f_equal; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: now f_equal).	2.96100282669	2632
Coq.ZArith.Znat.inj_lt	40	1.2.5.6.46	search with cache (only 1: destruct n, m; only 1: now f_equal; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: now f_equal).	2.58052396774	2510
Coq.ZArith.Znat.inj_ge	40	0.40	search with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite inj_compare).	1.41087794304	858
Coq.ZArith.Znat.inj_gt	40	1.2.5.8.48	search with cache (only 1: destruct n, m; only 1: now f_equal; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: now f_equal).	2.77396702766	2785
Coq.ZArith.Znat.inj_abs_N	40
Coq.ZArith.Znat.inj_add	40	2.0.1.0.1.2.59	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.807505130768	2769
Coq.ZArith.Znat.inj_mul	40	11	search with cache (only 1: now destruct n, m).	0.0212209224701	33
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_succ	40	1.7.0.14	search with cache (only 1: induction n; only 1: now f_equal; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.277162075043	465
Coq.ZArith.Znat.inj_pred_max	40	5.2.2.19.5.3	search with cache (only 1: induction n; only 1: now f_equal; only 1: destruct p; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: now f_equal).	1.59312081337	3268
Coq.ZArith.Znat.inj_pred	40	0.0.0.20.0.6	search with cache (only 1: induction n; only 1: easy; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	1.87860894203	2297
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	7.0.0.21.1.0.5	search with cache (only 1: destruct n; only 1: now f_equal; only 1: unfold N.div2, N.to_nat; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: now f_equal).	4.94489693642	13821
Coq.ZArith.Znat.inj_quot2	40	3.0.6	search with cache (only 1: destruct n; only 1: now f_equal; only 1: now destruct p).	0.0845968723297	95
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.id	40	0.0.0.6	search with cache (only 1: induction n; only 1: trivial; only 1: easy; only 1: easy).	0.0192110538483	10
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now apply Z2Pos.inj; only 1: intros; only 1: now f_equal).	0.0174219608307	4
Coq.ZArith.Znat.inj_0	40	1	search with cache (only 1: reflexivity).	0.0099139213562	2
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00987195968628	1
Coq.ZArith.Znat.inj_neg	40	2.0.1.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.0202028751373	10
Coq.ZArith.Znat.inj_add	40	14.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.307914018631	198
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	0.670847892761	444
Coq.ZArith.Znat.inj_succ	40	0.17.2.0.7	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	5.26273012161	6059
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.3.0.6	search with cache (only 1: destruct n; only 1: now f_equal; only 1: now destruct p; only 1: trivial).	0.175195932388	74
Coq.ZArith.Znat.inj_compare	40	3.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.159840106964	22
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.3.0.6	search with cache (only 1: destruct n; only 1: now f_equal; only 1: now destruct p; only 1: trivial).	0.178061962128	151
Coq.ZArith.Znat.inj_quot2	40	3.3.0.6	search with cache (only 1: destruct n; only 1: now f_equal; only 1: now destruct p; only 1: now destruct p).	0.463010072708	436
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40	0.3.3.1.1.3.154	search with cache (only 1: destruct a as [| a]; only 1: induction n; only 1: intros EQ; only 1: now Z.nzsimpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: apply Z.testbit_Zpos).	37.5010430813	112278
Coq.ZArith.Znat.abs_N_spec	40	0.0.6.4	search with cache (only 1: induction n; only 1: now f_equal; only 1: trivial; only 1: trivial).	0.0702331066132	87
Coq.ZArith.Znat.abs_N_nonneg	40	0.0.0.8	search with cache (only 1: induction n; only 1: easy; only 1: easy; only 1: easy).	0.144279956818	88
Coq.ZArith.Znat.id_abs	40	0.0.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0163519382477	8
Coq.ZArith.Znat.id	40	0.1.0	search with cache (only 1: induction n; only 1: now apply Z2Pos.id; only 1: trivial).	0.0148577690125	4
Coq.ZArith.Znat.inj_0	40	1	search with cache (only 1: reflexivity).	0.00951194763184	2
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00930094718933	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: trivial).	0.00961494445801	1
Coq.ZArith.Znat.inj_opp	40	0.0.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0159149169922	8
Coq.ZArith.Znat.inj_succ	40	7.3.0.1.7.0	search with cache (only 1: intros; only 1: destruct n; only 1: now f_equal; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: now destruct p).	5.65675210953	5855
Coq.ZArith.Znat.inj_add	40	0.1.0.1.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	1.4983150959	1036
Coq.ZArith.Znat.inj_mul	40	16	search with cache (only 1: now destruct n, m).	0.149112939835	229
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	8.4.0.4.9.0	search with cache (only 1: intros; only 1: destruct n; only 1: now f_equal; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: now destruct p).	21.0308449268	22385
Coq.ZArith.Znat.inj_compare	40	4.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0393769741058	15
Coq.ZArith.Znat.inj_le	40	0.1.0	search with cache (only 1: intros; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.014955997467	4
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0149550437927	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_succ_abs	40	4.4.0.8	search with cache (only 1: destruct n; only 1: now f_equal; only 1: now destruct p; only 1: now destruct p).	0.420453071594	424
Coq.ZArith.Znat.inj_add_abs	40	1.1.0.1.1.0.0.0.1.8	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.453573942184	621
Coq.ZArith.Znat.inj_mul_abs	40	1.1.0.1.1.0.0.0.1.8	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.435093164444	615
Coq.ZArith.Znat.inj_0	40	1	search with cache (only 1: reflexivity).	0.0108690261841	2
Coq.ZArith.Znat.inj_succ	40	1.14.0.8	search with cache (only 1: destruct n; only 1: now f_equal; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.580384016037	1309
Coq.ZArith.Znat.is_nonneg	40	5	search with cache (only 1: now destruct n).	0.0386228561401	13
Coq.ZArith.Znat.id	40	1.1.0	search with cache (only 1: induction n; only 1: now apply Z2Pos.id; only 1: apply SuccNat2Pos.id_succ).	0.0150380134583	5
Coq.ZArith.Znat.inj	40	0.1.2	search with cache (only 1: intro H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0154509544373	6
Coq.ZArith.Znat.inj_iff	40	0.0.1.2.0	search with cache (only 1: split; only 1: intro H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now f_equal).	0.0190229415894	8
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_ge	40
Coq.ZArith.Znat.inj_gt	40
Coq.ZArith.Znat.inj_abs_nat	40
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred_max	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.id	40	1.1.1.3.2.6.0.17.3.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: easy).	12.8107647896	26016
Coq.ZArith.Znat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0175650119781	3
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2Pos.inj; only 1: intros; only 1: now f_equal).	0.019259929657	5
Coq.ZArith.Znat.inj_0	40	1	search with cache (only 1: reflexivity).	0.0102760791779	2
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00979399681091	1
Coq.ZArith.Znat.inj_neg	40	4.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: reflexivity).	0.0193061828613	9
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.0.3.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	4.83814001083	3912
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.abs_nat_spec	40	2	search with cache (only 1: now destruct n).	0.0129389762878	3
Coq.ZArith.Znat.abs_nat_nonneg	40	1.0.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: easy).	0.0295388698578	23
Coq.ZArith.Znat.id_abs	40
Coq.ZArith.Znat.id	40	1.3.1	search with cache (only 1: induction n; only 1: now apply Z2Pos.id; only 1: apply SuccNat2Pos.id_succ).	0.0174119472504	8
Coq.ZArith.Znat.inj_0	40	1	search with cache (only 1: reflexivity).	0.010036945343	2
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00985097885132	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: trivial).	0.0100238323212	1
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40	0.0.0.0.0.0.0.0.1.10	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: apply Pos2Nat.inj_mul).	0.217227935791	315
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40	0.1.0	search with cache (only 1: intros; only 1: unfold Z.le, N.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0189189910889	4
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt, N.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.110582113266	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_succ_abs	40	0.0.0.10	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.0773148536682	64
Coq.ZArith.Znat.inj_add_abs	40
Coq.ZArith.Znat.inj_mul_abs	40	0.0.0.0.0.0.0.0.1.12	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: apply Pos2Nat.inj_mul).	0.274134874344	360
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0184128284454	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40	0.0.0.0.0.5.2.1.0.1.0.0.1.0.0.0	search with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	8.92136311531	20518
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.2.0.0.4.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	0.630294084549	632
Coq.ZArith.Wf_Z.Z_lt_rec	40	1.3.1.0.0.1.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	1.18905091286	1146
Coq.ZArith.Wf_Z.Z_lt_induction	40	1.0.4.0	search with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: auto; only 1: auto).	0.034677028656	12
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	2.61124277115	3285
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	0.33.0.1.8.7	search with cache (only 1: generalize 1%positive; only 1: generalize 1%positive; only 1: intros g c0; only 1: intros; only 1: apply Z.lt_le_incl; only 1: now apply Z.pow_gt_lin_r).	20.210463047	54890
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	2.0.0.0.2.0.0.1.0.2.2.2.0.49	search with cache (only 1: destruct n, m; only 1: reflexivity; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: Morphisms.solve_proper; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	7.65618515015	14551
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	1.2.5.0.0.1.2	search with cache (only 1: intros a n Ha; only 1: case Z.compare_spec; only 1: trivial; only 1: now Z.swap_greater; only 1: intros LT; only 1: apply (Z.lt_irrefl 0); only 1: Z.order).	3.08433485031	1032
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.12.0.2	search with cache (only 1: intros a n Ha; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	1.32978391647	832
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.1.1	search with cache (only 1: intros x y H; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.030070066452	7
Coq.ZArith.Zcompare.Zgt_compare	40	0.1	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0255808830261	3
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	0	search with cache (only 1: now destruct a).	0.0153579711914	1
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0154149532318	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0151631832123	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0328199863434	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0295631885529	3
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.6.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.254993915558	65
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.020574092865	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.1.1	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.0207619667053	5
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	9.11	search with cache (only 1: zify; only 1: constructor).	0.280812978745	339
Coq.ZArith.Zdigits.two_compl_value	40	37.12	search with cache (only 1: zify; only 1: exact 0%Z).	0.723862171173	4781
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	0	search with cache (only 1: tauto).	0.0194249153137	1
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	2	search with cache (only 1: tauto).	0.0198950767517	3
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1	search with cache (only 1: reflexivity).	0.0198249816895	11
Coq.ZArith.Zdigits.Z_div2_value	40	0.3.1.4.1.0.0.21.1.0	search with cache (only 1: destruct z; only 1: tauto; only 1: destruct p; only 1: tauto; only 1: tauto; only 1: tauto; only 1: generalize 1%positive; only 1: intros; only 1: elim H; only 1: trivial).	22.3175737858	72014
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	1	search with cache (only 1: reflexivity).	0.0198011398315	11
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.1.2.0.1.0.2.8.1.6	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	2.49761104584	6319
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.eq_dec	40
Coq.ZArith.BinInt.pos_sub_spec	40
Coq.ZArith.BinInt.pos_sub_discr	40
Coq.ZArith.BinInt.pos_sub_diag	40
Coq.ZArith.BinInt.pos_sub_lt	40
Coq.ZArith.BinInt.pos_sub_gt	40
Coq.ZArith.BinInt.pos_sub_opp	40
Coq.ZArith.BinInt.add_0_r	40
Coq.ZArith.BinInt.mul_0_r	40	2	search with cache (only 1: now destruct n).	0.00603985786438	3
Coq.ZArith.BinInt.mul_1_l	40	27.8	search with cache (only 1: simpl in *; only 1: now destruct n).	0.265034914017	1207
Coq.ZArith.BinInt.add_comm	40
Coq.ZArith.BinInt.opp_add_distr	40
Coq.ZArith.BinInt.opp_inj	40
Coq.ZArith.BinInt.pos_sub_add	40
Coq.ZArith.BinInt.add_assoc_pos	40
Coq.ZArith.BinInt.add_assoc	40
Coq.ZArith.BinInt.add_opp_diag_r	40	0.26.0.26.0.255	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	20.4392449856	129700
Coq.ZArith.BinInt.mul_opp_r	40	2.2.2.2.2.2.2.2.5.44	search with cache (only 1: destruct n, m; only 1: now f_equal; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now f_equal; only 1: now f_equal; only 1: trivial; only 1: now f_equal; only 1: now f_equal).	2.94282817841	7144
Coq.ZArith.BinInt.mul_add_distr_pos	40
Coq.ZArith.BinInt.mul_add_distr_r	40
Coq.ZArith.BinInt.one_succ	40	0	search with cache (only 1: now f_equal).	0.00536394119263	1
Coq.ZArith.BinInt.two_succ	40	0	search with cache (only 1: trivial).	0.00504016876221	1
Coq.ZArith.BinInt.add_0_l	40	0	search with cache (only 1: trivial).	0.00523591041565	1
Coq.ZArith.BinInt.add_succ_l	40
Coq.ZArith.BinInt.opp_0	40	0.4	search with cache (only 1: simpl; only 1: now f_equal).	0.00596499443054	6
Coq.ZArith.BinInt.opp_succ	40	0.0.0.1.0.0.20	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.199974060059	432
Coq.ZArith.BinInt.succ_pred	40
Coq.ZArith.BinInt.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.00707912445068	2
Coq.ZArith.BinInt.sub_0_r	40	3	search with cache (only 1: now destruct n).	0.00636100769043	4
Coq.ZArith.BinInt.sub_succ_r	40
Coq.ZArith.BinInt.mul_0_l	40	0	search with cache (only 1: trivial).	0.00528383255005	1
Coq.ZArith.BinInt.mul_succ_l	40
Coq.ZArith.BinInt.eqb_eq	40
Coq.ZArith.BinInt.ltb_lt	40
Coq.ZArith.BinInt.leb_le	40
Coq.ZArith.BinInt.compare_eq_iff	40
Coq.ZArith.BinInt.compare_sub	40
Coq.ZArith.BinInt.compare_antisym	40
Coq.ZArith.BinInt.compare_lt_iff	40	0.0	search with cache (only 1: unfold ltb, lt; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.0105979442596	2
Coq.ZArith.BinInt.compare_le_iff	40	2	search with cache (only 1: now f_equal).	0.00563597679138	3
Coq.ZArith.BinInt.lt_succ_r	40
Coq.ZArith.BinInt.max_l	40
Coq.ZArith.BinInt.max_r	40
Coq.ZArith.BinInt.min_l	40
Coq.ZArith.BinInt.min_r	40	0.0.0.2.0.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.02809882164	19
Coq.ZArith.BinInt.peano_ind	40
Coq.ZArith.BinInt.bi_induction	40
Coq.ZArith.BinInt.abs_eq	40
Coq.ZArith.BinInt.abs_neq	40	2.25.2.14	search with cache (only 1: destruct n; only 1: tauto; only 1: now destruct 1; only 1: trivial).	3.5869820118	3244
Coq.ZArith.BinInt.sgn_null	40	9.0.9.15	search with cache (only 1: destruct (lt_trichotomy n 0) as [H3| [H3| H3]]; only 1: Private_Tac.order; only 1: now rewrite H3; only 1: Private_Tac.order).	1.91489195824	1535
Coq.ZArith.BinInt.sgn_pos	40	3.0.11.0	search with cache (only 1: destruct n; only 1: now rewrite <- ?succ_le_mono; only 1: trivial; only 1: now subst).	0.369715929031	306
Coq.ZArith.BinInt.sgn_neg	40	1	search with cache (only 1: now destruct n).	0.0127189159393	11
Coq.ZArith.BinInt.pow_0_r	40	1	search with cache (only 1: now subst).	0.00610017776489	2
Coq.ZArith.BinInt.pow_succ_r	40
Coq.ZArith.BinInt.pow_neg_r	40
Coq.ZArith.BinInt.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.00554203987122	1
Coq.ZArith.BinInt.square_spec	40
Coq.ZArith.BinInt.sqrtrem_spec	40
Coq.ZArith.BinInt.sqrt_spec	40
Coq.ZArith.BinInt.sqrt_neg	40	1.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now subst; only 1: now subst).	0.0116631984711	6
Coq.ZArith.BinInt.sqrtrem_sqrt	40
Coq.ZArith.BinInt.log2_spec	40
Coq.ZArith.BinInt.log2_nonpos	40	1.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now subst; only 1: now subst).	0.0107421875	6
Coq.ZArith.BinInt.even_spec	40
Coq.ZArith.BinInt.odd_spec	40
Coq.ZArith.BinInt.double_spec	40	0	search with cache (only 1: now subst).	0.00549101829529	1
Coq.ZArith.BinInt.succ_double_spec	40	0.0.0.0.0.13.1.0	search with cache (only 1: simpl; only 1: nzsimpl; only 1: destruct n as [| [p| p| ]| ]; only 1: now rewrite <- ?succ_le_mono; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.71093821526	814
Coq.ZArith.BinInt.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.00628304481506	1
Coq.ZArith.BinInt.pos_div_eucl_eq	40
Coq.ZArith.BinInt.div_eucl_eq	40
Coq.ZArith.BinInt.div_mod	40
Coq.ZArith.BinInt.pos_div_eucl_bound	40
Coq.ZArith.BinInt.mod_pos_bound	40
Coq.ZArith.BinInt.mod_neg_bound	40
Coq.ZArith.BinInt.quotrem_eq	40
Coq.ZArith.BinInt.quot_rem'	40
Coq.ZArith.BinInt.quot_rem	40	3.4.3.2.0	search with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	2.84032797813	1353
Coq.ZArith.BinInt.rem_bound_pos	40
Coq.ZArith.BinInt.rem_opp_l'	40
Coq.ZArith.BinInt.rem_opp_r'	40
Coq.ZArith.BinInt.rem_opp_l	40
Coq.ZArith.BinInt.rem_opp_r	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.5	search with cache (only 1: intros Hb; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	12.9488441944	28136
Coq.ZArith.BinInt.divide_Zpos	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.ggcd_gcd	40
Coq.ZArith.BinInt.ggcd_correct_divisors	40
Coq.ZArith.BinInt.gcd_divide_l	40
Coq.ZArith.BinInt.gcd_divide_r	40
Coq.ZArith.BinInt.gcd_greatest	40
Coq.ZArith.BinInt.gcd_nonneg	40	0.0.2.0.0.2.0.0.4.5	search with cache (only 1: destruct a as [| p| p], b as [| q| q]; only 1: now f_equal; only 1: now subst; only 1: now subst; only 1: now subst; only 1: easy; only 1: easy; only 1: now subst; only 1: easy; only 1: easy).	1.71161103249	2555
Coq.ZArith.BinInt.ggcd_opp	40
Coq.ZArith.BinInt.testbit_of_N	40
Coq.ZArith.BinInt.testbit_of_N'	40
Coq.ZArith.BinInt.testbit_Zpos	40	1.0.0.0.0.19.1	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	2.58708095551	5131
Coq.ZArith.BinInt.testbit_Zneg	40
Coq.ZArith.BinInt.div2_spec	40	0	search with cache (only 1: now subst).	0.00658702850342	1
Coq.ZArith.BinInt.testbit_0_l	40	0.3.0.0.3.27	search with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: intuition; only 1: now subst; only 1: now subst; only 1: now f_equal; only 1: now subst).	0.604775190353	1125
Coq.ZArith.BinInt.testbit_neg_r	40	10.6	search with cache (only 1: intros Hb; only 1: now destruct n).	0.382269144058	527
Coq.ZArith.BinInt.testbit_odd_0	40
Coq.ZArith.BinInt.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.00684499740601	1
Coq.ZArith.BinInt.testbit_odd_succ	40
Coq.ZArith.BinInt.testbit_even_succ	40
Coq.ZArith.BinInt.shiftr_spec_aux	40
Coq.ZArith.BinInt.shiftl_spec_low	40
Coq.ZArith.BinInt.shiftl_spec_high	40
Coq.ZArith.BinInt.shiftr_spec	40
Coq.ZArith.BinInt.lor_spec	40
Coq.ZArith.BinInt.land_spec	40
Coq.ZArith.BinInt.ldiff_spec	40
Coq.ZArith.BinInt.lxor_spec	40
Coq.ZArith.BinInt.gt_lt_iff	40
Coq.ZArith.BinInt.gt_lt	40	42.0.12.0	search with cache (only 1: intros Hb; only 1: apply lt_nge; only 1: intros Ha'; only 1: now nzsimpl').	13.8608980179	33151
Coq.ZArith.BinInt.lt_gt	40	2	search with cache (only 1: apply gt_lt_iff).	0.00981116294861	20
Coq.ZArith.BinInt.ge_le_iff	40	1.4.0.8.4.0.4	search with cache (only 1: split; only 1: intros Hb; only 1: apply le_ngt; only 1: trivial; only 1: intros Hb; only 1: apply le_ngt; only 1: trivial).	1.62572407722	3060
Coq.ZArith.BinInt.ge_le	40	8.4.0	search with cache (only 1: intros Hb; only 1: apply le_ngt; only 1: trivial).	0.258081912994	367
Coq.ZArith.BinInt.le_ge	40	1.4.0	search with cache (only 1: intros Hb; only 1: apply le_ngt; only 1: trivial).	0.00944495201111	8
Coq.ZArith.BinInt.gtb_ltb	40
Coq.ZArith.BinInt.geb_leb	40
Coq.ZArith.BinInt.gtb_lt	40
Coq.ZArith.BinInt.geb_le	40
Coq.ZArith.BinInt.gtb_spec	40
Coq.ZArith.BinInt.geb_spec	40
Coq.ZArith.BinInt.add_reg_l	40
Coq.ZArith.BinInt.mul_reg_l	40
Coq.ZArith.BinInt.mul_reg_r	40
Coq.ZArith.BinInt.opp_eq_mul_m1	40
Coq.ZArith.BinInt.add_diag	40
Coq.ZArith.BinInt.compare_opp	40
Coq.ZArith.BinInt.add_compare_mono_l	40
Coq.ZArith.BinInt.testbit_mod_pow2	40
Coq.ZArith.BinInt.testbit_ones	40
Coq.ZArith.BinInt.testbit_ones_nonneg	40
Coq.ZArith.BinInt.id	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.00731992721558	3
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40	6.14.33.0.146	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: rewrite H; only 1: trivial).	10.1357600689	34882
Coq.ZArith.BinInt.is_pos	40	11	search with cache (only 1: solve_proper).	0.03755402565	33
Coq.ZArith.BinInt.is_nonneg	40	2.39	search with cache (only 1: intros EQ; only 1: discriminate).	0.486220836639	904
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: now f_equal).	0.00543212890625	1
Coq.ZArith.BinInt.inj_xO	40	4	search with cache (only 1: solve_proper).	0.00563716888428	5
Coq.ZArith.BinInt.inj_xI	40	4	search with cache (only 1: solve_proper).	0.00570893287659	5
Coq.ZArith.BinInt.inj_succ	40
Coq.ZArith.BinInt.inj_add	40	4	search with cache (only 1: now f_equal).	0.00602698326111	5
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_sub_max	40
Coq.ZArith.BinInt.inj_pred	40
Coq.ZArith.BinInt.inj_mul	40	2	search with cache (only 1: reflexivity).	0.00612115859985	3
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_pow	40	1.6	search with cache (only 1: simpl; only 1: now apply Pos.iter_swap_gen).	0.01198387146	9
Coq.ZArith.BinInt.inj_square	40	5.0	search with cache (only 1: simpl; only 1: solve_proper).	0.00662994384766	7
Coq.ZArith.BinInt.inj_compare	40	1	search with cache (only 1: now f_equal).	0.00588583946228	2
Coq.ZArith.BinInt.inj_leb	40	0	search with cache (only 1: reflexivity).	0.00569105148315	1
Coq.ZArith.BinInt.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.00550985336304	1
Coq.ZArith.BinInt.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.00544500350952	1
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.00629305839539	1
Coq.ZArith.BinInt.inj_gcd	40	3	search with cache (only 1: reflexivity).	0.00673198699951	4
Coq.ZArith.BinInt.inj_divide	40
Coq.ZArith.BinInt.inj_testbit	40
Coq.ZArith.BinInt.inj_neg	40	0	search with cache (only 1: now injection 1).	0.00576281547546	1
Coq.ZArith.BinInt.inj_neg_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.009840965271	4
Coq.ZArith.BinInt.inj_pos	40	0	search with cache (only 1: now injection 1).	0.00567293167114	1
Coq.ZArith.BinInt.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.00960397720337	4
Coq.ZArith.BinInt.neg_is_neg	40	11	search with cache (only 1: solve_proper).	0.0202648639679	33
Coq.ZArith.BinInt.neg_is_nonpos	40	13	search with cache (only 1: easy).	0.038409948349	60
Coq.ZArith.BinInt.pos_is_pos	40	0	search with cache (only 1: easy).	0.00581693649292	1
Coq.ZArith.BinInt.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.00884985923767	1
Coq.ZArith.BinInt.neg_le_pos	40	3	search with cache (only 1: discriminate).	0.0112149715424	4
Coq.ZArith.BinInt.neg_lt_pos	40	1	search with cache (only 1: easy).	0.00700712203979	2
Coq.ZArith.BinInt.neg_le_neg	40
Coq.ZArith.BinInt.neg_lt_neg	40	9.51.2.82	search with cache (only 1: unfold Z.lt, Z.gt; only 1: intros Hb; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	28.1824538708	72985
Coq.ZArith.BinInt.pos_le_pos	40	5.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.0078239440918	9
Coq.ZArith.BinInt.pos_lt_pos	40	0	search with cache (only 1: easy).	0.00484323501587	1
Coq.ZArith.BinInt.neg_xO	40	0	search with cache (only 1: reflexivity).	0.00418901443481	1
Coq.ZArith.BinInt.neg_xI	40	0	search with cache (only 1: reflexivity).	0.00485396385193	1
Coq.ZArith.BinInt.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00492811203003	1
Coq.ZArith.BinInt.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00483512878418	1
Coq.ZArith.BinInt.opp_neg	40	4	search with cache (only 1: solve_proper).	0.00529599189758	5
Coq.ZArith.BinInt.opp_pos	40	0	search with cache (only 1: reflexivity).	0.00477600097656	1
Coq.ZArith.BinInt.add_neg_neg	40	1	search with cache (only 1: now f_equal).	0.00516700744629	2
Coq.ZArith.BinInt.add_pos_neg	40	2.1	search with cache (only 1: simpl; only 1: solve [ trivial | destruct (proj1 (Z.le_ngt _ _) Hi _) ]).	0.00558495521545	5
Coq.ZArith.BinInt.add_neg_pos	40	1	search with cache (only 1: reflexivity).	0.00501894950867	2
Coq.ZArith.BinInt.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00481605529785	1
Coq.ZArith.BinInt.divide_pos_neg_r	40
Coq.ZArith.BinInt.divide_pos_neg_l	40
Coq.ZArith.BinInt.testbit_neg	40
Coq.ZArith.BinInt.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.00537395477295	1
Coq.ZArith.BinInt.id	40
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40	0.0.1.1.2.0.8.4	search with cache (only 1: intros Hb; only 1: intros LT; only 1: split; only 1: apply Pos2Z.inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: now f_equal).	0.373698949814	565
Coq.ZArith.BinInt.to_pos_nonpos	40	0	search with cache (only 1: now destruct x).	0.00755405426025	1
Coq.ZArith.BinInt.inj_1	40	1	search with cache (only 1: reflexivity).	0.00502300262451	2
Coq.ZArith.BinInt.inj_double	40	24	search with cache (only 1: now destruct x).	0.811006069183	773
Coq.ZArith.BinInt.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0107429027557	1
Coq.ZArith.BinInt.inj_succ	40	5.0.2.3.3.12.1.1.3.9	search with cache (only 1: destruct x; only 1: intros EQ; only 1: simpl; only 1: now Z.nzsimpl; only 1: destruct p; only 1: solve_proper; only 1: solve_proper; only 1: intros EQ; only 1: reflexivity; only 1: easy).	4.10372686386	8249
Coq.ZArith.BinInt.inj_add	40
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_pred	40	3.0.2.3.3.12.0.2.8	search with cache (only 1: destruct x; only 1: intros EQ; only 1: reflexivity; only 1: destruct p; only 1: solve_proper; only 1: solve_proper; only 1: intros EQ; only 1: reflexivity; only 1: solve_proper).	2.60774898529	6372
Coq.ZArith.BinInt.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0301349163055	4
Coq.ZArith.BinInt.inj_pow	40
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_compare	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0398590564728	14
Coq.ZArith.BinInt.inj_leb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.040894985199	14
Coq.ZArith.BinInt.inj_ltb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0519380569458	14
Coq.ZArith.BinInt.inj_eqb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0586998462677	14
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	13	search with cache (only 1: now destruct x as [| [x| x| ]| ]).	0.0405628681183	61
Coq.ZArith.BinInt.inj_gcd	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0532360076904	31
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: now f_equal).	0.00902199745178	3
Coq.ZArith.BinInt.ZL0	40	1	search with cache (only 1: reflexivity).	0.00559210777283	2
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	45.9	search with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).	1.43763995171	2701
Coq.ZArith.BinInt.Z_eq_mult	40	4.2.0	search with cache (only 1: intros EQ; only 1: rewrite EQ in *; only 1: now f_equal).	0.00938701629639	9
Coq.ZArith.Zcomplements.floor_gt0	40	3	search with cache (only 1: now f_equal).	0.00697684288025	4
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	1.8.1.8.6.7	search with cache (only 1: induction n; only 1: now f_equal; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy).	0.895740032196	1606
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: trivial).	0.00482177734375	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.1.0.1.0.1.0.0.1.0.1.0.1.0.0.3.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	33.1017930508	36383
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	4.4.0.2.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	0.431923151016	366
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40	0.1.16.0.0.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: destruct Z.odd; only 1: Morphisms.f_equiv; only 1: now f_equal).	30.3349709511	2561
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	12	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.52040100098	338
Coq.ZArith.Zeven.Zodd_quot2	40	13	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0739250183105	60
Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.0.0.1.0.2.0.0.0.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: destruct n; only 1: f_equal; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy; only 1: now destruct Hn || easy).	2.37000012398	900
Coq.ZArith.Zeven.Zquot2_opp	40	17	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.112296104431	126
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40
Coq.ZArith.Zeven.Zodd_ex	40	26.2.0	search with cache (only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.90905499458	3121
Coq.ZArith.Zeven.Zeven_2p	40
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.1.1.1.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.049341917038	27
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.1.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0334551334381	14
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.1.1	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.138969898224	39
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.0.0.4.17.4.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.mod_divide; only 1: intros (c, Hc); only 1: exists c; only 1: subst; only 1: auto with zarith; only 1: trivial).	6.7206299305	7786
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.1.0.7.0	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: subst; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	0.432727813721	421
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	7.14.0.25	search with cache (only 1: generalize 1; only 1: intros; only 1: intro eq; only 1: Z.order).	1.5722489357	6041
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.1.1.5.10	search with cache (only 1: intros Hb; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intuition).	0.182709932327	276
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.4.37.34.10	search with cache (only 1: intros Hb; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	4.93192386627	21796
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.1.1.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0180761814117	7
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.2	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0573649406433	24
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.1.2	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.104820013046	25
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.13	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	6.02593302727	2563
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.0.18.3	search with cache (only 1: induction 1; only 1: red; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	2.66736388206	2894
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	0.1.0.34.8	search with cache (only 1: intros Hb; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	1.39662003517	3203
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	6.3	search with cache (only 1: induction 1; only 1: intuition).	0.413805961609	93
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	59.16	search with cache (only 1: intros (c, Hc); only 1: discriminate).	1.48877906799	6432
Coq.ZArith.Znumtheory.not_prime_1	40	23.16	search with cache (only 1: intros (c, Hc); only 1: discriminate).	0.382802963257	1128
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	0.0.21	search with cache (only 1: simple induction 1; only 1: intros; only 1: now apply (Zlt_le_succ 1)).	0.374151945114	375
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.1.0.0.0.0.0.0.1.0.3.0	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	3.07657790184	2815
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.8.1.0	search with cache (only 1: intros Hb; only 1: rewrite Z.mul_comm; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	0.285024166107	170
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	9	search with cache (only 1: tauto).	0.0126979351044	10
Coq.ZArith.Zdiv.Zmod_0_r	40	4.4.0.3	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.114483118057	215
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.0.3	search with cache (only 1: destruct a; only 1: reflexivity; only 1: auto; only 1: auto).	0.017410993576	7
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.3	search with cache (only 1: destruct a; only 1: reflexivity; only 1: auto; only 1: auto).	0.016951084137	7
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	1.1.1.0.3	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.0569140911102	58
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.4.0	search with cache (only 1: intros x y H; only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0209748744965	9
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.8.1	search with cache (only 1: intros x y H; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.368852138519	358
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.9.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.538213968277	407
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.5.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: trivial).	0.0326261520386	13
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.1.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0197420120239	5
Coq.ZArith.Zdiv.eqm_refl	40	6	search with cache (only 1: easy).	0.0142579078674	7
Coq.ZArith.Zdiv.eqm_sym	40	14.9.1	search with cache (only 1: intros x y H; only 1: red; only 1: intuition auto using Z.lt_le_incl).	0.727849960327	1653
Coq.ZArith.Zdiv.eqm_trans	40	0.33.5.1	search with cache (only 1: unfold eqm; only 1: intros; only 1: rewrite H0 in H; only 1: trivial).	6.54701685905	15471
Coq.ZArith.Zdiv.eqm_setoid	40	0.2.1.2.2.0.0.0.2.40	search with cache (only 1: split; only 1: red; only 1: unfold eqm; only 1: intros; only 1: trivial; only 1: red; only 1: unfold eqm; only 1: auto; only 1: red; only 1: now unfold eqm; intros a b c ->).	2.05331897736	2719
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	0.54.0.26.0.11	search with cache (only 1: red; only 1: intros; only 1: generalize 1; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: trivial).	21.8574590683	142122
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	35.16.8	search with cache (only 1: intros Hb; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	1.28406715393	3952
Coq.ZArith.Zdiv.Zeven_mod	40	37.17.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	2.59323191643	8055
Coq.ZArith.Zdiv.Z_mod_same	40	0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.0210599899292	4
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.0211460590363	5
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.2.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0277440547943	8
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.0.0.3	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: now destruct b).	0.0491909980774	23
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.3	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0368061065674	23
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.mod_wd	40	1.2.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: now subst).	0.0463781356812	6
Coq.ZArith.Zeuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0123989582062	1
Coq.ZArith.Zeuclid.div_mod	40
Coq.ZArith.Zeuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	0.0.1.8.0	search with cache (only 1: intros; only 1: induction n; only 1: now subst; only 1: trivial; only 1: trivial).	0.127307891846	112
Coq.ZArith.Zabs.Zabs_dec	40	2.15.2.15.0.71.80.32	search with cache (only 1: intro H1; only 1: case H1; only 1: simpl; only 1: auto; only 1: intros; only 1: now left || now right; only 1: intros; only 1: now left || now right).	25.6350238323	140615
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.eqb_eq	40
Coq.ZArith.Int.eqb_neq	40
Coq.ZArith.Int.ltb_lt	40
Coq.ZArith.Int.ltb_nlt	40
Coq.ZArith.Int.leb_le	40
Coq.ZArith.Int.leb_nle	40
Coq.ZArith.Int.norm_ei_correct	40
Coq.ZArith.Int.norm_ez_correct	40
Coq.ZArith.Int.norm_ep_correct	40
Coq.ZArith.Int.norm_ep_correct2	40
Coq.ZArith.Int.gt_le_dec	40
Coq.ZArith.Int.ge_lt_dec	40
Coq.ZArith.Int.i2z_eq	40	9	search with cache (only 1: now f_equal).	0.011470079422	10
Coq.ZArith.Int.i2z_0	40	21	search with cache (only 1: now f_equal).	0.032233953476	208
Coq.ZArith.Int.i2z_1	40	0	search with cache (only 1: now f_equal).	0.0102639198303	1
Coq.ZArith.Int.i2z_2	40	10	search with cache (only 1: now f_equal).	0.0132191181183	21
Coq.ZArith.Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00985193252563	1
Coq.ZArith.Int.i2z_add	40	4	search with cache (only 1: reflexivity).	0.0113489627838	5
Coq.ZArith.Int.i2z_opp	40	0	search with cache (only 1: reflexivity).	0.0100810527802	1
Coq.ZArith.Int.i2z_sub	40	4	search with cache (only 1: reflexivity).	0.0111608505249	5
Coq.ZArith.Int.i2z_mul	40	4	search with cache (only 1: reflexivity).	0.0111379623413	5
Coq.ZArith.Int.i2z_max	40	4.1	search with cache (only 1: unfold Z.max, Pos.max; only 1: now f_equal).	0.0128321647644	7
Coq.ZArith.Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.0100040435791	1
Coq.ZArith.Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0101480484009	1
Coq.ZArith.Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.010143995285	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	4	search with cache (only 1: trivial).	0.0112521648407	5
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	5	search with cache (only 1: trivial).	0.00961208343506	6
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.2.0.11.14.14.4.4	search with cache (only 1: induction n; only 1: trivial; only 1: generalize 1; only 1: generalize 1; only 1: simpl; only 1: intros x y H; only 1: apply Pos2Nat.inj_iter; only 1: now f_equal).	9.21203899384	30235
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: trivial).	0.0097918510437	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0.0.0.0	search with cache (only 1: induction n; only 1: now f_equal; only 1: now f_equal; only 1: trivial).	0.226405143738	4
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	37.12.92	search with cache (only 1: generalize 1; only 1: intros; only 1: now apply Pos.iter_swap_gen).	4.09175205231	21780
Coq.ZArith.Zpower.two_p_equiv	40	6.25.5.14	search with cache (only 1: destruct x; only 1: now f_equal; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	0.742951869965	3016
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: trivial).	0.0093309879303	1
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	66	search with cache (only 1: apply Pos2Nat.inj_iter).	5.11947798729	16637
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	0.3.3.0	search with cache (only 1: destruct x; only 1: apply two_power_pos_equiv; only 1: apply two_power_pos_equiv; only 1: trivial).	0.0173680782318	10
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	7.7.5.14	search with cache (only 1: destruct x; only 1: now f_equal; only 1: easy; only 1: easy).	0.975455999374	1903
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	30	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	1.33317804337	2623
Coq.ZArith.auxiliary.Zle_left	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00414896011353	1
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00436091423035	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.0052809715271	2
Coq.ZArith.auxiliary.Zlt_left_lt	40
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.5.0.22.26	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: Z.swap_greater; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	9.96739506721	11241
Coq.ZArith.auxiliary.Zgt_left	40	0.2.1.1.2	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: change (-1) with (- Z.succ 0); only 1: rewrite Z.add_shuffle0; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.222584962845	101
Coq.ZArith.auxiliary.Zgt_left_gt	40	4.3.4.20.25	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: Z.swap_greater; only 1: apply Z.lt_0_sub; only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	5.49848079681	3802
Coq.ZArith.auxiliary.Zgt_left_rev	40	1.2.1.19.24	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: Z.swap_greater; only 1: apply Z.lt_0_sub; only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	2.57322311401	2118
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	1.1.1.164	search with cache (only 1: destruct p; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now f_equal).	9.94745707512	41936
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	1.1.1.166	search with cache (only 1: destruct p; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now f_equal).	12.1066820621	49299
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.4.8.5.5	search with cache (only 1: generalize 1%positive; only 1: generalize 1%positive; only 1: generalize 1%positive; only 1: destruct a; only 1: tauto; only 1: tauto; only 1: tauto).	0.493687868118	1376
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	1.21.18	search with cache (only 1: intros P_or_Q; only 1: red; only 1: Z.order).	2.77226686478	2298
Coq.ZArith.Zorder.Zlt_not_le	40	1.21.19	search with cache (only 1: intros P_or_Q; only 1: red; only 1: Z.order).	2.81346511841	2341
Coq.ZArith.Zorder.Zle_not_gt	40	5	search with cache (only 1: now f_equal).	0.0163140296936	6
Coq.ZArith.Zorder.Zgt_not_le	40	6	search with cache (only 1: now f_equal).	0.0267729759216	7
Coq.ZArith.Zorder.Znot_ge_lt	40
Coq.ZArith.Zorder.Znot_lt_ge	40	5	search with cache (only 1: now f_equal).	0.0485320091248	13
Coq.ZArith.Zorder.Znot_gt_le	40	1	search with cache (only 1: trivial).	0.0114679336548	2
Coq.ZArith.Zorder.Znot_le_gt	40	2.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0248620510101	7
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	1.21.21.3	search with cache (only 1: Z.swap_greater; only 1: intros P_or_Q; only 1: red; only 1: Z.order).	7.09489989281	7779
Coq.ZArith.Zorder.Zgt_irrefl	40	14	search with cache (only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	0.129288911819	86
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.108965873718	13
Coq.ZArith.Zorder.Zle_gt_trans	40	40.12.1	search with cache (only 1: Z.swap_greater; only 1: intros def_n0; only 1: Z.order).	7.09272217751	15355
Coq.ZArith.Zorder.Zgt_le_trans	40	1.2	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0489749908447	20
Coq.ZArith.Zorder.Zge_trans	40	0.0.2	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0454850196838	14
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_reg	40
Coq.ZArith.Zorder.Zsucc_le_reg	40
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.011167049408	1
Coq.ZArith.Zorder.Zgt_succ	40	1.0.19	search with cache (only 1: red; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.636844873428	576
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0115160942078	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0113580226898	1
Coq.ZArith.Zorder.Zgt_succ_le	40
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0121028423309	1
Coq.ZArith.Zorder.Zle_succ_gt	40	41.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	4.16123485565	2900
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0113639831543	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	2.1.2.2.27.2.2	search with cache (only 1: induction n; only 1: now f_equal; only 1: destruct p; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now f_equal; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	14.9959640503	15352
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	3.2.3.3.28.3.3	search with cache (only 1: induction n; only 1: now f_equal; only 1: destruct p; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now f_equal; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	18.3051040173	23781
Coq.ZArith.Zorder.Zle_neg_pos	40	2	search with cache (only 1: now f_equal).	0.0223069190979	3
Coq.ZArith.Zorder.Zgt_pos_0	40	1	search with cache (only 1: now f_equal).	0.0116729736328	2
Coq.ZArith.Zorder.Zle_0_pos	40	1	search with cache (only 1: now f_equal).	0.0189430713654	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0114221572876	1
Coq.ZArith.Zorder.Zle_0_nat	40	18.2.15	search with cache (only 1: induction n; only 1: easy; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max).	1.34630489349	2298
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0117959976196	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	2	search with cache (only 1: apply Z.add_lt_mono_r).	0.0153348445892	3
Coq.ZArith.Zorder.Zplus_le_reg_l	40	40	search with cache (only 1: apply Z.add_le_mono_l).	1.59069490433	1985
Coq.ZArith.Zorder.Zplus_le_reg_r	40	25	search with cache (only 1: apply Z.add_le_mono_r).	0.573079109192	462
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	9	search with cache (only 1: apply Z.add_lt_mono_l).	0.0297179222107	10
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	32	search with cache (only 1: apply Z.add_lt_mono_r).	0.91846704483	889
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.59	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	3.13494420052	7240
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	2.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0386769771576	10
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	3.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.148724079132	25
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	3.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.041426897049	25
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0328199863434	15
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.021733045578	14
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0572710037231	23
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	3.0.4	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0573198795319	22
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	1.0.4	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.054328918457	20
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	0.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0131130218506	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	5.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.111405849457	57
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	5	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0374410152435	15
Coq.ZArith.Zorder.Zmult_le_reg_r	40	3.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0528790950775	23
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	3	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0334939956665	13
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	3.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0623250007629	23
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	5.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.139410018921	57
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	7.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.151551961899	38
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	4.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0719120502472	54
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	5.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.402716159821	124
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	11	search with cache (only 1: apply Z.le_0_sub).	0.339274168015	33
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	66	search with cache (only 1: apply Z.leb_le).	7.88166594505	14026
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.0.5	search with cache (only 1: rewrite !Z.leb_le; only 1: intros; only 1: now transitivity m).	0.0470581054688	11
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	4	search with cache (only 1: now Z.swap_greater).	0.0126869678497	5
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	1.0.45	search with cache (only 1: repeat split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	2.67071413994	3254
Coq.ZArith.Zbool.Zge_is_le_bool	40
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.022204875946	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0251181125641	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.1.17.1.1.4	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: intro; only 1: left; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	15.8538720608	5254
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.1.6	search with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: left; only 1: trivial).	0.103276968002	74
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	4.24.4.24.0.86	search with cache (only 1: destruct x; only 1: now left || now right; only 1: right; only 1: easy; only 1: right; only 1: easy).	30.7714219093	139903
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	1	search with cache (only 1: now Z.nzsimpl).	0.0358419418335	2
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	1.1.1.55	search with cache (only 1: destruct b as [| b| b]; only 1: now Z.nzsimpl; only 1: now f_equal; only 1: now f_equal).	5.63394379616	8741
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	9.11	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.485299110413	890
Coq.Program.Wf.Fix_F_inv	40	4.8.8.2.2	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	1.43358397484	3533
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.7.3	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.201182126999	243
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	6.3	search with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0327939987183	32
Coq.Program.Wf.Fix_F_sub_rect	40	2.6.5.4	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.482908964157	902
Coq.Program.Wf.eq_Fix_F_sub	40	1.6	search with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0220189094543	18
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	7.9.36.2	search with cache (only 1: intros A B H; only 1: intros f [x]; only 1: subst; only 1: reflexivity).	1.41281890869	17954
Coq.Program.Equality.JMeq_eq_refl	40	14	search with cache (only 1: apply UIP).	0.0127141475677	75
Coq.Program.Equality.UIP_refl_refl	40	14	search with cache (only 1: apply UIP).	0.0133850574493	75
Coq.Program.Equality.inj_pairT2_refl	40	0.21.39	search with cache (only 1: symmetry; only 1: apply Streicher_K; only 1: trivial).	0.364870071411	2554
Coq.Program.Equality.solution_left	40	0.7.6	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0563628673553	207
Coq.Program.Equality.solution_right	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00684213638306	4
Coq.Program.Equality.deletion	40	8	search with cache (only 1: auto).	0.00462198257446	9
Coq.Program.Equality.simplification_heq	40	1.9.10.29	search with cache (only 1: intros H H'; only 1: apply H; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.693346977234	5413
Coq.Program.Equality.simplification_existT2	40	0.0.0.35.12.19	search with cache (only 1: intro H; only 1: intro; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	1.50254011154	13326
Coq.Program.Equality.simplification_existT1	40	0.2.5.11.15.8.120	search with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity; only 1: assumption).	27.4176328182	291442
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0086190700531	3
Coq.Program.Combinators.compose_id_left	40	1.1	search with cache (only 1: intros; only 1: trivial).	0.00666403770447	4
Coq.Program.Combinators.compose_id_right	40	1.1	search with cache (only 1: intros; only 1: trivial).	0.00648784637451	4
Coq.Program.Combinators.compose_assoc	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00653910636902	3
Coq.Program.Combinators.flip_flip	40	3.1	search with cache (only 1: intros; only 1: repeat split).	0.00653004646301	6
Coq.Program.Combinators.prod_uncurry_curry	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00663208961487	3
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.1.0	search with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.031867980957	7
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40	0.1.0.3.0.5	search with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: intros H; only 1: rewrite H; only 1: auto).	0.667318820953	412
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sorted_merge	40
Coq.Sorting.Mergesort.Permuted_merge	40
Coq.Sorting.Mergesort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sorted_merge_stack	40	0.5.4.1.2.0.0.53.0	search with cache (only 1: induction stack as [| []]; only 1: do 2 constructor; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: intros; only 1: auto).	5.17248511314	31156
Coq.Sorting.Mergesort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sorted_sort	40
Coq.Sorting.Mergesort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Permuted_sort	40
Coq.Sorting.Mergesort.StronglySorted_sort	40
Coq.Sorting.Mergesort.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	0.0.4.0.0	search with cache (only 1: intros l l' Hperm; only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: trivial; only 1: trivial).	0.0122640132904	9
Coq.Sorting.Permutation.Permutation_cons	40	7.1.5.6	search with cache (only 1: intro H; only 1: red; only 1: intros n [=<-] le_mn1 le_mn2; only 1: discriminate || auto).	0.900660037994	1477
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.2.0.2.7.8	search with cache (only 1: intro H; only 1: intros; only 1: red; only 1: intros l l' Hperm; only 1: subst; only 1: constructor; only 1: induction Hperm; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto; only 1: induction Hperm; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	17.2955391407	44054
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.1.0	search with cache (only 1: intros l l' Hperm; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.142336130142	4
Coq.Sorting.Permutation.Permutation_rev	40	0.3.3.2.57.11.0	search with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: destruct l; only 1: trivial; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	9.13624978065	52074
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.0.0.1.2	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.0771481990814	86
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.13	search with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	6.4668109417	258
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	7	search with cache (only 1: constructor).	0.0354399681091	29
Coq.Sorting.PermutSetoid.permut_sym	40	1.2	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0170569419861	5
Coq.Sorting.PermutSetoid.permut_trans	40	21.0	search with cache (only 1: intros; only 1: congruence).	4.27928495407	7074
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	2.0.3.1	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0558819770813	36
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	4.4.6.1.3	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	3.4044470787	2519
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	0.0.34.39	search with cache (only 1: intuition; only 1: destruct (eqA_dec a a'); only 1: auto; only 1: congruence).	13.8346400261	61585
Coq.Sorting.PermutSetoid.permut_app_inv2	40	1.2.0.0.0.1.2	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: apply plus_reg_l).	1.34402704239	549
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40	1.2.22.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a a'); only 1: congruence; only 1: auto).	1.44735693932	2917
Coq.Sorting.PermutSetoid.if_eqA_refl	40	3.1.0.1.3	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	0.151278972626	137
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.5.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: trivial).	0.059005022049	14
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.1.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: trivial; only 1: trivial; only 1: trivial).	0.0264949798584	7
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.1.0.1	search with cache (only 1: inversion 1; only 1: subst; only 1: clear H; only 1: auto).	0.0648231506348	42
Coq.Sorting.Sorted.Sorted_inv	40	0.12.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.391227006912	324
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.3.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0246300697327	6
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0187501907349	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	0.0.2.0.0.20	search with cache (only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	24.0085248947	35262
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	2.21	search with cache (only 1: simpl; only 1: trivial).	0.163386106491	419
Coq.Sorting.Heap.leA_Tree_Node	40	0	search with cache (only 1: auto with datatypes).	0.0138618946075	1
Coq.Sorting.Heap.invert_heap	40	0.47	search with cache (only 1: inversion 1; only 1: auto with datatypes).	0.887139081955	2882
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	1.2.0.0.0.2.2.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	1.31792593002	1497
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	2.7.1.1.0.0	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	0.619160175323	640
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	1.6	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0267131328583	26
Coq.Sorting.Heap.list_to_heap	40	0.7	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0286469459534	16
Coq.Sorting.Heap.heap_to_list	40	2.8	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.157870054245	97
Coq.Sorting.Heap.treesort	40	2.9	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0874140262604	124
Coq.Init.Wf.Acc_inv	40	2.13.21.7	search with cache (only 1: intro H1; only 1: intro; only 1: destruct H; only 1: trivial).	0.371720075607	3664
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00999212265015	12
Coq.Init.Wf.well_founded_ind	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0101997852325	12
Coq.Init.Wf.Fix_F_eq	40	1.2.43.43	search with cache (only 1: intro; only 1: intro H; only 1: destruct H; only 1: auto).	1.29165101051	18415
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	13.15.16.2.4.7.12	search with cache (only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: trivial; only 1: intro; only 1: apply False_rec; only 1: auto).	1.47948789597	22303
Coq.Init.Tactics.decide_right	40	1.0.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00627493858337	5
Coq.Init.Peano.pred_Sn	40	8	search with cache (only 1: trivial).	0.00566005706787	11
Coq.Init.Peano.not_eq_S	40	31.11	search with cache (only 1: intro H; only 1: auto).	0.226683139801	3393
Coq.Init.Peano.O_S	40	22	search with cache (only 1: discriminate).	0.0332291126251	473
Coq.Init.Peano.n_Sn	40	31.2.9.11	search with cache (only 1: intro H1; only 1: elim H1; only 1: trivial; only 1: auto).	0.644263982773	12996
Coq.Init.Peano.plus_n_O	40	31.18.9.5	search with cache (only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: auto).	0.932108163834	20217
Coq.Init.Peano.plus_O_n	40	9	search with cache (only 1: trivial).	0.0057430267334	15
Coq.Init.Peano.plus_n_Sm	40	31.18.9.5	search with cache (only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: auto).	2.42388391495	43811
Coq.Init.Peano.plus_Sn_m	40	2.2.1.0	search with cache (only 1: intros n m; only 1: induction n; only 1: trivial; only 1: trivial).	0.00716495513916	11
Coq.Init.Peano.mult_n_O	40	0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: auto).	0.0038959980011	5
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	3.0.7	search with cache (only 1: induction n; only 1: left; only 1: auto).	0.0121381282806	62
Coq.Init.Peano.le_n_S	40	1.2.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.00740694999695	8
Coq.Init.Peano.nat_case	40	2.11.7	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0466730594635	450
Coq.Init.Peano.nat_double_ind	40	3.10.0.4.34.4.7	search with cache (only 1: induction n; only 1: exact H; only 1: intro; only 1: elim m; only 1: auto; only 1: intros; only 1: auto).	2.78314995766	36975
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.1.0.0.0.0.0.1.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.63000202179	3684
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.3.0.1.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.337085962296	2403
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.1.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.462299108505	3011
Coq.Init.Peano.nat_rect_succ_r	40	7.20.17.5.69	search with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: reflexivity).	3.82475495338	69487
Coq.Init.Peano.nat_rect_plus	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	6.6.16.31.7	search with cache (only 1: intro H; only 1: intro; only 1: destruct H, 1; only 1: trivial; only 1: trivial).	1.14697098732	20336
Coq.Init.Datatypes.eq_true_ind_r	40	0.9.15.56.8	search with cache (only 1: intro H1; only 1: intros h1 h2; only 1: intro; only 1: destruct H; only 1: trivial).	1.07475996017	25811
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: trivial).	0.00478005409241	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: trivial).	0.00494503974915	3
Coq.Init.Datatypes.surjective_pairing	40	0.5	search with cache (only 1: intros A B [H1 H2]; only 1: trivial).	0.00712299346924	15
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00736594200134	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.9.10	search with cache (only 1: intro H1; only 1: elim H1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0810990333557	925
Coq.Init.Datatypes.CompOpp_inj	40
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00324201583862	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	0.0.3.1.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00644612312317	10
Coq.Init.Logic.iff_sym	40	0.0.0.2	search with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.0045018196106	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.0.5.1.0.0.5.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0832209587097	1154
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.0.2.2.0.0.0.0.2	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.22682595253	3750
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	2.1.2.1.0.1.2.1.2.0.0.1.0.2	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.518579006195	11262
Coq.Init.Logic.imp_iff_compat_l	40	8.8.4.2	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0626950263977	925
Coq.Init.Logic.imp_iff_compat_r	40	3.0.1.0.3.2.1.0.0.2	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0895030498505	1410
Coq.Init.Logic.not_iff_compat	40	0.0.1.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00574898719788	5
Coq.Init.Logic.neg_false	40	0.6.11.0.3.3.12	search with cache (only 1: split; only 1: intros; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.318808078766	6261
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.1.0.0.0.1.0.0.2.2	search with cache (only 1: intro H; only 1: intro H1; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0791490077972	803
Coq.Init.Logic.and_assoc	40	3.3.3.2.11.1.2.4.2.9.3.11.0	search with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: assumption; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	9.67208194733	136614
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.0.3.1.0.2.0.3.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.503015995026	6001
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	search with cache (only 1: intros; only 1: assumption).	0.00555896759033	3
Coq.Init.Logic.iff_to_and	40	0.0.6.0	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.00526881217957	10
Coq.Init.Logic.inst	40	6.1	search with cache (only 1: intro H; only 1: auto).	0.00665521621704	13
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00504207611084	3
Coq.Init.Logic.absurd	40	2.7.15.9	search with cache (only 1: intro H; only 1: intros; only 1: elim H1; only 1: assumption).	0.23611998558	4102
Coq.Init.Logic.eq_sym	40	4.3.2	search with cache (only 1: intro H1; only 1: elim H1; only 1: split).	0.0102069377899	56
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00568008422852	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00508403778076	2
Coq.Init.Logic.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00525403022766	2
Coq.Init.Logic.not_eq_sym	40	0.5.0.7	search with cache (only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.0317349433899	309
Coq.Init.Logic.eq_sind_r	40	2.45	search with cache (only 1: destruct 2; only 1: auto).	0.420310974121	8708
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00554203987122	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00599503517151	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00610399246216	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	3.4.12.4	search with cache (only 1: intros h1 h2; only 1: destruct H; only 1: destruct 1; only 1: repeat split).	0.254762887955	1386
Coq.Init.Logic.rew_opp_r	40	0.3	search with cache (only 1: destruct H; only 1: reflexivity).	0.00645613670349	5
Coq.Init.Logic.rew_opp_l	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00620079040527	4
Coq.Init.Logic.f_equal2	40	2.6.32.0	search with cache (only 1: intros; only 1: destruct H; only 1: elim eq_sym with (1 := H0); only 1: repeat split).	0.63080406189	8255
Coq.Init.Logic.f_equal3	40	0.1.1.4	search with cache (only 1: destruct 1; only 1: destruct 2; only 1: destruct H; only 1: reflexivity).	0.00864601135254	25
Coq.Init.Logic.f_equal4	40	1.0.0.1.4	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0158140659332	68
Coq.Init.Logic.f_equal5	40	1.0.0.0.0.4	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0200660228729	75
Coq.Init.Logic.f_equal_compose	40	5.7.8.5.14	search with cache (only 1: intro H; only 1: intros ? ? ? Fl Fr; only 1: intros h1 h2; only 1: destruct h2; only 1: split).	0.62761592865	7918
Coq.Init.Logic.eq_trans_refl_l	40	1.0.4.5.26	search with cache (only 1: intros h1 h2; only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.256664037704	3845
Coq.Init.Logic.eq_trans_refl_r	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00559616088867	3
Coq.Init.Logic.eq_sym_involutive	40	1.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00557112693787	4
Coq.Init.Logic.eq_trans_sym_inv_l	40	1.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00557899475098	4
Coq.Init.Logic.eq_trans_sym_inv_r	40	1.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00556683540344	4
Coq.Init.Logic.eq_trans_assoc	40	3.0.6.1	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.0294880867004	215
Coq.Init.Logic.rew_map	40	1.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00670218467712	5
Coq.Init.Logic.eq_trans_map	40	5.1.9.0.9.3.9.15.41	search with cache (only 1: intros A x P H y H0; only 1: intro H1; only 1: intros h1 h2; only 1: destruct h2; only 1: intro H; only 1: destruct H; only 1: intro H; only 1: destruct H; only 1: auto).	15.5215470791	186417
Coq.Init.Logic.map_subst	40	1.1.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00689387321472	6
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00615310668945	2
Coq.Init.Logic.rew_swap	40	7.0	search with cache (only 1: destruct H; only 1: auto).	0.00630807876587	9
Coq.Init.Logic.rew_compose	40	4.0.2	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00653696060181	9
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.1	search with cache (only 1: intros; only 1: reflexivity).	0.0056471824646	4
Coq.Init.Logic.eq_trans_map_distr	40	0.2.3.28.8	search with cache (only 1: intros ? ? ? Fl Fr; only 1: intro H; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.816588878632	10850
Coq.Init.Logic.eq_sym_map_distr	40	1.8	search with cache (only 1: destruct e; only 1: reflexivity).	0.00976490974426	39
Coq.Init.Logic.eq_trans_sym_distr	40	1.0.7.2	search with cache (only 1: destruct e; only 1: intro H; only 1: destruct H; only 1: trivial).	0.0222511291504	168
Coq.Init.Logic.eq_trans_rew_distr	40	0.20	search with cache (only 1: destruct e, e'; only 1: reflexivity).	0.153135061264	590
Coq.Init.Logic.rew_const	40	3.8	search with cache (only 1: destruct e; only 1: reflexivity).	0.014142036438	93
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	9.3.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.141121864319	280
Coq.Init.Logic.inhabited_covariant	40	3.4.9	search with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: auto).	0.138719081879	275
Coq.Init.Logic.eq_stepl	40	4.4.2.2	search with cache (only 1: intros A x P H y H0; only 1: transitivity x; only 1: auto; only 1: auto).	0.0518178939819	361
Coq.Init.Logic.iff_stepl	40	0.0.0.6	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.00666809082031	27
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	3.6.1.0.11	search with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.107060909271	604
Coq.Init.Logic.rew_ex2	40	0.7	search with cache (only 1: destruct H, u; only 1: trivial).	0.00984287261963	18
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00662398338318	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00728702545166	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00652408599854	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0083920955658	5
Coq.Init.Logic_Type.identity_ind_r	40	0.19.2	search with cache (only 1: intros A x P H y H0; only 1: destruct H0 in H; only 1: trivial).	0.0830099582672	692
Coq.Init.Logic_Type.identity_rec_r	40	0.2.2	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00884485244751	7
Coq.Init.Logic_Type.identity_rect_r	40	0.2.2	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00785493850708	7
Coq.Init.Specif.sigT_eta	40	0.10	search with cache (only 1: destruct p; only 1: trivial).	0.00884819030762	33
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00507688522339	2
Coq.Init.Specif.sigT2_eta	40	0.30	search with cache (only 1: destruct p; only 1: reflexivity).	0.0902118682861	851
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00592803955078	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.8.2.28	search with cache (only 1: intro H; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.1349401474	1322
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.21.36.31	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: trivial).	0.648236989975	12357
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0082471370697	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00883889198303	3
Coq.Init.Specif.eq_existT_curried_map	40	0.1	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0114669799805	3
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.12.17.9	search with cache (only 1: destruct r, q, p; only 1: intro; only 1: destruct H; only 1: trivial).	2.19106197357	8713
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0111739635468	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0120990276337	3
Coq.Init.Specif.eq_sig_uncurried	40	0.2.3.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: trivial).	0.0189790725708	10
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	8.4.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	0.550945997238	1139
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0124118328094	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.11.58.8	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	4.40168499947	22945
Coq.Init.Specif.eq_sigT2_uncurried_iff	40
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0166320800781	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0166778564453	4
Coq.Init.Specif.eq_sig2_uncurried	40	1.2.2.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.029513835907	10
Coq.Init.Specif.eq_sig2_uncurried_iff	40	2.2.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	0.232028961182	161
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0166501998901	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	3.15	search with cache (only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0843598842621	534
Coq.QArith.QOrderedType.lt_strorder	40	2.2.0.1.5.4.5.60.4.16	search with cache (only 1: split; only 1: red; only 1: intro EQ; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	31.8917560577	41767
Coq.QArith.QOrderedType.lt_compat	40	0.4.2	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.252038955688	62
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	1.0.34.6	search with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	36.4546189308	41006
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	1.0.35.6	search with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H, H0; only 1: auto with qarith).	39.1897289753	44622
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	104.1	search with cache (only 1: intros a b; only 1: now rewrite !Qred_correct).	4.44699287415	19889
Coq.QArith.Qreduction.Qred_le	40	3.0.15.51	search with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: now rewrite !Qred_correct).	3.39300203323	4580
Coq.QArith.Qreduction.Qred_lt	40	3.0.15.52	search with cache (only 1: intuition; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto; only 1: now rewrite !Qred_correct).	2.50016593933	4443
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	5.0	search with cache (only 1: red; only 1: apply Qle_Qabs).	0.0137810707092	7
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	5.5.4.0.6.2.37	search with cache (only 1: intros (H, H'); only 1: simpl; only 1: elim H; only 1: ring_simplify; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	13.8438169956	12917
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40
Coq.QArith.Qfield.ex1	40	2.1	search with cache (only 1: unfold Qplus, Qle, Qlt; only 1: exact Qmult_plus_distr_l).	0.0136320590973	5
Coq.QArith.Qfield.ex2	40	1.0.2.1.1	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0521459579468	11
Coq.QArith.Qfield.ex3	40	0.0.9	search with cache (only 1: destruct x; only 1: intros; only 1: ring).	0.0620188713074	49
Coq.QArith.Qfield.ex4	40	0.7	search with cache (only 1: red; only 1: trivial).	0.0176689624786	9
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0207431316376	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0208649635315	1
Coq.QArith.Qfield.ex7	40	0.3.1.1	search with cache (only 1: red; only 1: intros; only 1: simpl; only 1: ring).	0.0451338291168	9
Coq.QArith.Qfield.ex8	40	0.1	search with cache (only 1: intro; only 1: ring).	0.022714138031	3
Coq.QArith.Qfield.ex9	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0225501060486	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40
Coq.QArith.Qfield.Qopp_opp	40	2.3.0.0	search with cache (only 1: red; only 1: intros; only 1: simpl; only 1: ring).	0.0662491321564	9
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.1.11	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.381072044373	481
Coq.QArith.Qcanon.Qred_involutive	40	0.50.0	search with cache (only 1: intros (x, y); only 1: apply Qred_complete; only 1: apply Qred_correct).	0.816338062286	2742
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	8.15.0.15.5.4	search with cache (only 1: unfold Qccompare; only 1: split; only 1: intro H; only 1: auto; only 1: intro H; only 1: intuition).	6.60343694687	18956
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	0.0	search with cache (only 1: intros a b; only 1: intuition).	0.0174360275269	2
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	9.38	search with cache (only 1: intro H; only 1: discriminate).	0.387180089951	1225
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	21.19.0.21.130	search with cache (only 1: intros H1; only 1: case H1; only 1: intros (a, b) H; only 1: qc; only 1: ring).	27.1618359089	152110
Coq.QArith.Qcanon.Qcplus_0_r	40	22.13.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.940730810165	1918
Coq.QArith.Qcanon.Qcplus_comm	40	52.0.0.40	search with cache (only 1: intro H; only 1: intros (n, d); only 1: qc; only 1: ring).	13.102189064	41434
Coq.QArith.Qcanon.Qcopp_involutive	40	25.12.38	search with cache (only 1: intro H; only 1: qc; only 1: ring).	1.42859911919	4147
Coq.QArith.Qcanon.Qcplus_opp_r	40	24.11.38	search with cache (only 1: intro H; only 1: qc; only 1: ring).	3.13479399681	7575
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	5.12.0	search with cache (only 1: intros; only 1: qc; only 1: constructor).	0.214021921158	315
Coq.QArith.Qcanon.Qcmult_0_r	40	26.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.990118980408	1136
Coq.QArith.Qcanon.Qcmult_1_l	40	27.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	1.65544295311	1538
Coq.QArith.Qcanon.Qcmult_1_r	40	0.8.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.131441116333	69
Coq.QArith.Qcanon.Qcmult_comm	40	52.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	4.62011098862	14096
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.12.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.42693901062	417
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	4.13.39	search with cache (only 1: intro H; only 1: red; only 1: auto with qarith).	1.53131818771	4849
Coq.QArith.Qcanon.Qcle_antisym	40	20.0	search with cache (only 1: intros a b Hg Hb; only 1: intuition).	1.38924384117	1458
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	0.8.1	search with cache (only 1: unfold Qcle; only 1: intros (q, hq) (q', hq') H; only 1: auto with qarith).	0.378062009811	166
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40
Coq.QArith.Qcanon.Qcnot_lt_le	40	0.9.1	search with cache (only 1: unfold Qcle; only 1: intros (q, hq) (q', hq') H; only 1: auto with qarith).	0.219856977463	274
Coq.QArith.Qcanon.Qcnot_le_lt	40	2.9.3.4	search with cache (only 1: intros; only 1: intuition; only 1: red; only 1: intuition).	1.20674991608	1802
Coq.QArith.Qcanon.Qclt_not_le	40	3.1.3.1	search with cache (only 1: unfold Qcle; only 1: intros p q H H0; only 1: destruct (Qlt_not_eq _ _ H); only 1: auto with qarith).	0.472671031952	161
Coq.QArith.Qcanon.Qcle_not_lt	40	3.3.3.3.1	search with cache (only 1: unfold Qcle; only 1: intros p q H H0; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto with zarith).	1.4385368824	1038
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.14.6.26	search with cache (only 1: induction n; only 1: tauto; only 1: intros; only 1: auto with qarith).	2.5593149662	8636
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.0.0.0.0.5.1.12	search with cache (only 1: unfold Qcdiv; only 1: intros x y H; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	2.30490994453	2694
Coq.QArith.Qreals.IZR_nz	40	2.16	search with cache (only 1: intro n; only 1: now apply not_0_IZR).	0.145399093628	377
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	5.0.1.12.0	search with cache (only 1: symmetry; only 1: generalize 1%Z; only 1: induction p; only 1: intros; only 1: now subst).	0.277942180634	570
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	21	search with cache (only 1: reflexivity).	0.107681035995	253
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	3	search with cache (only 1: reflexivity).	0.0124139785767	4
Coq.QArith.QArith_base.Qeq_sym	40	7.14	search with cache (only 1: intros; only 1: auto with qarith).	0.430136919022	698
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.23.6.6.156	search with cache (only 1: constructor; only 1: auto with qarith; only 1: auto with qarith; only 1: intros x y H; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	35.581387043	136620
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	56	search with cache (only 1: apply Zeq_is_eq_bool).	15.968006134	45794
Coq.QArith.QArith_base.Qeq_eq_bool	40	1	search with cache (only 1: apply Qeq_bool_iff).	0.0132789611816	2
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	45	search with cache (only 1: apply Zle_is_le_bool).	1.20915198326	3923
Coq.QArith.QArith_base.Qnot_eq_sym	40	25.16.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: destruct x; only 1: auto).	4.88061094284	7362
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.7	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0166041851044	9
Coq.QArith.QArith_base.Qeq_bool_sym	40	2.0.10.6.0.14	search with cache (only 1: generalize 1%Z; only 1: intros; only 1: rewrite <- H0; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.834858894348	2485
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	8.15.1.2.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	8.14452600479	11919
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	15	search with cache (only 1: now subst).	0.0763020515442	140
Coq.QArith.QArith_base.Qplus_assoc	40	11.1.1.20.0	search with cache (only 1: intros x y H; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	13.9856009483	9519
Coq.QArith.QArith_base.Qplus_0_l	40	0.20.5.1.5	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros; only 1: simpl; only 1: ring_simplify; only 1: trivial).	1.1822450161	2423
Coq.QArith.QArith_base.Qplus_0_r	40
Coq.QArith.QArith_base.Qplus_comm	40	11.1.1.0.3.10	search with cache (only 1: induction x; only 1: unfold Qeq, Qlt, Qcompare; only 1: intros; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	6.17176795006	5061
Coq.QArith.QArith_base.Qopp_involutive	40	0.24.1.3.5	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: intros; only 1: ring_simplify; only 1: trivial).	1.45611619949	3823
Coq.QArith.QArith_base.Qplus_opp_r	40	4.6.1.0	search with cache (only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: ring).	0.389982223511	267
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.11	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.392755031586	293
Coq.QArith.QArith_base.Qmult_0_l	40	1.1.0	search with cache (only 1: red; only 1: intros; only 1: trivial).	0.0502390861511	5
Coq.QArith.QArith_base.Qmult_0_r	40	0.1.3.0	search with cache (only 1: red; only 1: simpl; only 1: destruct x; only 1: ring).	0.0688538551331	17
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	1.2.0.2.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.310193061829	98
Coq.QArith.QArith_base.Qmult_comm	40	3.0.1.0.0.10	search with cache (only 1: induction x; only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl in *; only 1: rewrite Pos.mul_comm; only 1: ring).	0.849841117859	652
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.11	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.518697977066	417
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.11	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.803194046021	483
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	1.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: reflexivity).	0.0125961303711	3
Coq.QArith.QArith_base.inject_Z_opp	40	0	search with cache (only 1: trivial).	0.0108211040497	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.4.1.10.0	search with cache (only 1: intros x y H; only 1: red; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.664535999298	524
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.1.12.0	search with cache (only 1: intros x y H; only 1: red; only 1: simpl in *; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.283781051636	337
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	9.4	search with cache (only 1: red; only 1: now reflexivity).	0.137046098709	110
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40	0.3	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: now rewrite !Z.mul_1_r).	0.0181000232697	5
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	2.1.20.14.0.20	search with cache (only 1: red; only 1: intro E; only 1: destruct x; only 1: red; only 1: rewrite E; only 1: now subst).	20.185022831	42654
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	30	search with cache (only 1: apply Z.nle_gt).	0.624909162521	1162
Coq.QArith.QArith_base.Qle_not_lt	40	79	search with cache (only 1: apply Z.nlt_ge).	32.4058530331	78871
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.1.0.0.0.1.1.1.0.1.2	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	16.3750488758	4509
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.3.0.0.0.3.1.1.0.2.3	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	39.5052640438	12164
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.7	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	3.44487595558	845
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0174911022186	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.plus_max_distr_l	40
Coq.QArith.Qminmax.plus_max_distr_r	40
Coq.QArith.Qminmax.plus_min_distr_l	40	0.0.1.1.0.1.2.8	search with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: repeat red; only 1: intros x y H; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	4.98632097244	2561
Coq.QArith.Qminmax.plus_min_distr_r	40	0.0.1.1.0.1.0.1.8	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: repeat red; only 1: intros x y H; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	3.10033202171	1724
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.4.2.0.2	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.589497089386	442
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40
Coq.QArith.Qabs.Qabs_nonneg	40
Coq.QArith.Qabs.Zabs_Qabs	40	4	search with cache (only 1: split).	0.019345998764	38
Coq.QArith.Qabs.Qabs_opp	40	0.0.29.0.0.29.0.1.12.27	search with cache (only 1: destruct x as [[| xn| xn] xd]; only 1: red; only 1: simpl in *; only 1: reflexivity; only 1: red; only 1: simpl; only 1: congruence; only 1: red; only 1: simpl; only 1: congruence).	14.161949873	113126
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.5.0	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: constructor; only 1: constructor; only 1: constructor).	0.0174860954285	10
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.1	search with cache (only 1: red; only 1: auto).	0.00412702560425	3
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1.0	search with cache (only 1: red; only 1: reflexivity).	0.0045850276947	3
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00291585922241	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	0.1.6.0.0.6.13.21	search with cache (only 1: split; only 1: red; only 1: intros; only 1: destruct H; only 1: auto; only 1: intros; only 1: reduce_goal; only 1: auto).	1.55075407028	11719
Coq.Classes.CMorphisms.subrelation_id_proper	40	4	search with cache (only 1: trivial).	0.00630807876587	5
Coq.Classes.CMorphisms.subrelation_respectful	40	0.9.8.21	search with cache (only 1: intro H; only 1: red; only 1: intros h1 h2; only 1: auto).	0.287958860397	1440
Coq.Classes.CMorphisms.subrelation_refl	40	0.0.9	search with cache (only 1: red; only 1: intros x y H'; only 1: firstorder).	0.0153698921204	34
Coq.Classes.CMorphisms.subrelation_proper	40	12	search with cache (only 1: simpl_crelation).	0.0143949985504	46
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	14.12	search with cache (only 1: intro H; only 1: simpl_crelation).	0.487934112549	821
Coq.Classes.CMorphisms.pointwise_subrelation	40	3	search with cache (only 1: firstorder).	0.00953102111816	4
Coq.Classes.CMorphisms.forall_subrelation	40	7.17.15	search with cache (only 1: red; only 1: intros; only 1: firstorder).	0.319041013718	2009
Coq.Classes.CMorphisms.iff_impl_subrelation	40	2.17	search with cache (only 1: intro H; only 1: tauto).	0.0330369472504	202
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	2.17	search with cache (only 1: intro H; only 1: tauto).	0.0313308238983	202
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00439691543579	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00339889526367	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	17	search with cache (only 1: firstorder).	0.038596868515	126
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	0.128508090973	5
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.035628080368	16
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.130267858505	78
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.662254810333	558
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.818640947342	682
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	0.0560138225555	4
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	0.221266031265	272
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	1.46471381187	422
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00518488883972	1
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	11	search with cache (only 1: firstorder).	0.0320467948914	33
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	11	search with cache (only 1: simpl_crelation).	0.0502481460571	102
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	3.7	search with cache (only 1: apply H; only 1: auto).	0.0152840614319	38
Coq.Classes.CMorphisms.flip_respectful	40	23.5	search with cache (only 1: reduce; only 1: firstorder).	0.920655965805	2157
Coq.Classes.CMorphisms.flip1	40	3	search with cache (only 1: firstorder).	0.00762581825256	4
Coq.Classes.CMorphisms.flip2	40	3	search with cache (only 1: firstorder).	0.00618004798889	4
Coq.Classes.CMorphisms.eq_subrelation	40	2.0	search with cache (only 1: red; only 1: simpl_crelation).	0.00694513320923	4
Coq.Classes.CMorphisms.reflexive_proper	40	0.0	search with cache (only 1: red; only 1: firstorder).	0.00401711463928	2
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: reflexivity).	0.00484108924866	1
Coq.Classes.CMorphisms.proper_proper	40	3.0.3.0.4.0.18	search with cache (only 1: intro H; only 1: reduce; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.427695989609	1041
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00492596626282	1
Coq.Classes.CMorphisms.flip_atom	40	0.4	search with cache (only 1: red; only 1: firstorder).	0.00472092628479	6
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.5.18.19	search with cache (only 1: intro H; only 1: intro H1; only 1: intros; only 1: simpl_crelation).	0.323203086853	1617
Coq.Classes.CMorphisms.proper_sym_flip_2	40	5.0.44.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros; only 1: simpl_crelation).	26.9830679893	18254
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.00860691070557	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.2	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0204381942749	36
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: reflexivity).	0.0076630115509	4
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0057590007782	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00707602500916	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.28605389595	1
Coq.Classes.CRelationClasses.complement_inverse	40	3	search with cache (only 1: trivial).	0.00576400756836	4
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	16	search with cache (only 1: firstorder).	0.0220310688019	108
Coq.Classes.CRelationClasses.flip_Reflexive	40	17	search with cache (only 1: auto).	0.0524017810822	237
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	5.30	search with cache (only 1: hnf; only 1: auto).	0.113755941391	673
Coq.Classes.CRelationClasses.flip_PreOrder	40	21	search with cache (only 1: firstorder).	0.0530409812927	208
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0181510448456	2
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0266878604889	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0340158939362	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	21	search with cache (only 1: firstorder).	0.103214025497	387
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00819802284241	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	2.2.0.14	search with cache (only 1: hnf; only 1: split; only 1: auto; only 1: auto).	0.0876710414886	275
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00856280326843	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0095579624176	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	3.15.1.0.9.16.2	search with cache (only 1: constructor; only 1: intro H; only 1: red; only 1: intros x y H'; only 1: assumption; only 1: hnf; only 1: firstorder).	1.56276488304	7209
Coq.Classes.CRelationClasses.partial_order_antisym	40	23	search with cache (only 1: firstorder).	0.324322223663	694
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	2.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0437309741974	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.19.0.3	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: simpl_relation; only 1: rewrite <- H; only 1: firstorder).	3.41872596741	4025
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00735020637512	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00373911857605	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00711894035339	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.270229101181	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	3	search with cache (only 1: trivial).	0.00522303581238	4
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	16	search with cache (only 1: firstorder).	0.0196239948273	108
Coq.Classes.RelationClasses.flip_Reflexive	40	16	search with cache (only 1: auto).	0.0356738567352	213
Coq.Classes.RelationClasses.flip_Antisymmetric	40	5.29	search with cache (only 1: hnf; only 1: auto).	0.0843279361725	636
Coq.Classes.RelationClasses.flip_PreOrder	40	20	search with cache (only 1: firstorder).	0.0458600521088	186
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0181338787079	2
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0291719436646	2
Coq.Classes.RelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0266981124878	2
Coq.Classes.RelationClasses.complement_Irreflexive	40	20	search with cache (only 1: firstorder).	0.0673208236694	360
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00505399703979	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1.0	search with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: trivial; only 1: firstorder).	0.0143671035767	5
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.00950002670288	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0155267715454	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	17.4.14.1.0.9.14.2	search with cache (only 1: constructor; only 1: intro H; only 1: red; only 1: intros; only 1: assumption; only 1: intro H; only 1: red; only 1: auto).	5.58263206482	40302
Coq.Classes.RelationClasses.partial_order_antisym	40	22	search with cache (only 1: firstorder).	0.272437810898	1079
Coq.Classes.RelationClasses.PartialOrder_inverse	40	1.0.3.0	search with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.047128200531	8
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	24	search with cache (only 1: firstorder).	0.262887001038	873
Coq.Classes.Morphisms.eq_proper_proxy	40	5.3	search with cache (only 1: red; only 1: auto).	0.00867390632629	13
Coq.Classes.Morphisms.reflexive_proper_proxy	40	2.4	search with cache (only 1: red; only 1: trivial).	0.00624513626099	8
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00447392463684	1
Coq.Classes.Morphisms.pointwise_pointwise	40	4.1.0.4.24.19.11	search with cache (only 1: intros h1 h2; only 1: split; only 1: red; only 1: firstorder; only 1: subst; only 1: apply H; only 1: firstorder).	5.35380601883	48062
Coq.Classes.Morphisms.subrelation_id_proper	40	1	search with cache (only 1: trivial).	0.00534892082214	2
Coq.Classes.Morphisms.subrelation_respectful	40	6	search with cache (only 1: firstorder).	0.0108292102814	7
Coq.Classes.Morphisms.subrelation_refl	40	5	search with cache (only 1: reflexivity).	0.00510692596436	6
Coq.Classes.Morphisms.subrelation_proper	40	1.7	search with cache (only 1: red; only 1: firstorder).	0.00979614257812	16
Coq.Classes.Morphisms.proper_subrelation_proper	40	8.20	search with cache (only 1: destruct 2; only 1: firstorder).	3.72980117798	2454
Coq.Classes.Morphisms.pointwise_subrelation	40	1	search with cache (only 1: firstorder).	0.0057680606842	2
Coq.Classes.Morphisms.forall_subrelation	40	9	search with cache (only 1: firstorder).	0.0267000198364	34
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.1.13	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0207090377808	112
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	1.1.13	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0270519256592	136
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	13	search with cache (only 1: firstorder).	0.0249009132385	60
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.0882771015167	8
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.446295022964	43
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.187413930893	174
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.58150601387	614
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	5.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.90237903595	503
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	0.688099861145	603
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.0800230503082	125
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00683283805847	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.00980591773987	8
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	7	search with cache (only 1: simpl_relation).	0.0171999931335	17
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	3.1.2	search with cache (only 1: reduce; only 1: apply H; only 1: firstorder).	0.00744199752808	9
Coq.Classes.Morphisms.flip_respectful	40	5	search with cache (only 1: firstorder).	0.0071861743927	6
Coq.Classes.Morphisms.flip1	40	1	search with cache (only 1: apply H).	0.00475406646729	2
Coq.Classes.Morphisms.flip2	40	1	search with cache (only 1: apply H).	0.004802942276	2
Coq.Classes.Morphisms.eq_subrelation	40	0	search with cache (only 1: simpl_relation).	0.00834393501282	1
Coq.Classes.Morphisms.reflexive_proper	40	4	search with cache (only 1: simpl_relation).	0.00811314582825	5
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: simpl_relation).	0.00656008720398	1
Coq.Classes.Morphisms.proper_proper	40	6.15	search with cache (only 1: simpl_relation; only 1: apply H).	0.155288934708	353
Coq.Classes.Morphisms.proper_normalizes_proper	40	2.1.0.1.0	search with cache (only 1: reduce in H; only 1: setoid_rewrite H; only 1: setoid_rewrite  <- H; only 1: setoid_rewrite H; only 1: apply H0).	0.0193011760712	13
Coq.Classes.Morphisms.flip_atom	40	0.4	search with cache (only 1: red; only 1: firstorder).	0.00689291954041	6
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	17	search with cache (only 1: simpl_relation).	0.0581459999084	154
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.0.0.11	search with cache (only 1: unfold flip, respectful; only 1: intros A R1 Sym B R2 f Hf; only 1: reduce_goal; only 1: auto).	0.579545021057	371
Coq.Classes.Morphisms.proper_sym_impl_iff	40	16.19	search with cache (only 1: simpl_relation; only 1: firstorder).	1.78728985786	3593
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0123598575592	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.044203042984	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0119199752808	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	3.3.13	search with cache (only 1: split; only 1: reflexivity; only 1: reflexivity).	0.514783143997	659
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0208170413971	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.438632011414	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	19	search with cache (only 1: firstorder).	0.062490940094	165
Coq.Classes.RelationPairs.SndRel_ProdRel	40	19	search with cache (only 1: firstorder).	0.0622909069061	165
Coq.Classes.RelationPairs.FstRel_sub	40	3.11	search with cache (only 1: intros ND Incl FOP; only 1: firstorder).	0.0520939826965	97
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0127780437469	1
Coq.Classes.RelationPairs.pair_compat	40	20	search with cache (only 1: firstorder).	0.214787006378	498
Coq.Classes.RelationPairs.fst_compat	40	19	search with cache (only 1: firstorder).	0.0776557922363	201
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.017441034317	3
Coq.Classes.RelationPairs.RelCompFun_compat	40
Coq.Classes.DecidableClass.Decidable_sound	40	2.7.12	search with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: trivial).	0.141534090042	559
Coq.Classes.DecidableClass.Decidable_complete	40	3.7.13	search with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: trivial).	0.226072072983	983
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	0.138	search with cache (only 1: destruct x, y; only 1: trivial).	25.7934939861	269791
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	2	search with cache (only 1: now f_equal).	0.00782203674316	3
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.00544691085815	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.00544905662537	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.389379024506	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	2	search with cache (only 1: now f_equal).	0.00737881660461	3
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.00416111946106	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.00347208976746	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.0	search with cache (only 1: intro; only 1: now f_equal).	0.0103549957275	5
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: now f_equal).	0.00680184364319	1
Coq.PArith.Pnat.inj_succ	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_1	40	0	search with cache (only 1: auto).	0.0106391906738	1
Coq.PArith.Pnat.inj_xO	40
Coq.PArith.Pnat.inj_xI	40
Coq.PArith.Pnat.is_succ	40
Coq.PArith.Pnat.is_pos	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	0.8.0.29	search with cache (only 1: intuition; only 1: now rewrite <- (id p), <- (id q), H; only 1: subst; only 1: reflexivity).	10.1169469357	13909
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_lt	40
Coq.PArith.Pnat.inj_le	40
Coq.PArith.Pnat.inj_gt	40
Coq.PArith.Pnat.inj_ge	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_sub_max	40
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_pred_max	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.inj_iter	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.id_max	40	5.5.3.0.0.1.0.6.59	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: now subst; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	16.693903923	75535
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	0.1.7.7.1.2.21	search with cache (only 1: intros; only 1: split; only 1: apply Pos2Nat.inj; only 1: now subst; only 1: now subst; only 1: intros; only 1: now subst).	1.9869260788	2543
Coq.PArith.Pnat.inj_succ	40	0.4.3	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0226988792419	20
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.id_succ	40
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.id_succ	40	4.9.6.10.0.16	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply H).	5.96271800995	30817
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	0.0.0.0.2.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intros; only 1: now subst).	0.0233459472656	10
Coq.PArith.Pnat.inv	40
Coq.PArith.Pnat.inj_succ	40	2	search with cache (only 1: trivial).	0.0111811161041	3
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.eq_dec	40
Coq.PArith.BinPos.xI_succ_xO	40	0	search with cache (only 1: solve_proper).	0.0106508731842	1
Coq.PArith.BinPos.succ_discr	40
Coq.PArith.BinPos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0111210346222	1
Coq.PArith.BinPos.succ_pred_double	40
Coq.PArith.BinPos.pred_double_succ	40	0.2.0.1.0.1.0	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0841979980469	54
Coq.PArith.BinPos.double_succ	40	0.1	search with cache (only 1: simpl; only 1: now f_equal).	0.0174839496613	3
Coq.PArith.BinPos.pred_double_xO_discr	40	15	search with cache (only 1: now destruct p).	0.178553104401	155
Coq.PArith.BinPos.succ_not_1	40	16	search with cache (only 1: now destruct p).	0.189497947693	177
Coq.PArith.BinPos.pred_succ	40	5.0.2.0.2.0.1.0.1.0.15	search with cache (only 1: induction p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	3.08438014984	4030
Coq.PArith.BinPos.succ_pred_or	40
Coq.PArith.BinPos.succ_pred	40	4.3.3.0.12	search with cache (only 1: destruct p; only 1: now f_equal; only 1: intro m; only 1: apply succ_pred_double; only 1: now f_equal).	11.2815620899	16368
Coq.PArith.BinPos.succ_inj	40
Coq.PArith.BinPos.pred_N_succ	40	0.0.1.5.33.1.2	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: trivial).	8.55647397041	9914
Coq.PArith.BinPos.add_1_r	40	16	search with cache (only 1: now destruct p).	0.0926380157471	133
Coq.PArith.BinPos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0127038955688	1
Coq.PArith.BinPos.add_carry_spec	40
Coq.PArith.BinPos.add_comm	40
Coq.PArith.BinPos.add_succ_r	40
Coq.PArith.BinPos.add_succ_l	40
Coq.PArith.BinPos.add_no_neutral	40
Coq.PArith.BinPos.add_carry_add	40
Coq.PArith.BinPos.add_reg_r	40
Coq.PArith.BinPos.add_reg_l	40
Coq.PArith.BinPos.add_cancel_r	40
Coq.PArith.BinPos.add_cancel_l	40
Coq.PArith.BinPos.add_carry_reg_r	40
Coq.PArith.BinPos.add_carry_reg_l	40
Coq.PArith.BinPos.add_assoc	40
Coq.PArith.BinPos.add_xO	40	3	search with cache (only 1: now f_equal).	0.0122108459473	4
Coq.PArith.BinPos.add_xI_pred_double	40
Coq.PArith.BinPos.add_xO_pred_double	40
Coq.PArith.BinPos.add_diag	40
Coq.PArith.BinPos.peano_rect_succ	40
Coq.PArith.BinPos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0128440856934	2
Coq.PArith.BinPos.peano_case	40
Coq.PArith.BinPos.eq_dep_eq_positive	40
Coq.PArith.BinPos.PeanoViewUnique	40
Coq.PArith.BinPos.peano_equiv	40
Coq.PArith.BinPos.mul_1_l	40	0	search with cache (only 1: trivial).	0.01092004776	1
Coq.PArith.BinPos.mul_1_r	40
Coq.PArith.BinPos.mul_xO_r	40	0.0.0.2.0.1.0.2.2.0	search with cache (only 1: revert q; only 1: induction p; only 1: intros; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: trivial).	2.40636897087	2376
Coq.PArith.BinPos.mul_xI_r	40
Coq.PArith.BinPos.mul_comm	40
Coq.PArith.BinPos.mul_add_distr_l	40
Coq.PArith.BinPos.mul_add_distr_r	40
Coq.PArith.BinPos.mul_assoc	40
Coq.PArith.BinPos.mul_succ_l	40
Coq.PArith.BinPos.mul_succ_r	40
Coq.PArith.BinPos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.mul_xO_discr	40
Coq.PArith.BinPos.mul_reg_r	40
Coq.PArith.BinPos.mul_reg_l	40
Coq.PArith.BinPos.mul_cancel_r	40	0.2.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.263167142868	159
Coq.PArith.BinPos.mul_cancel_l	40	0.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.155488014221	123
Coq.PArith.BinPos.mul_eq_1_l	40
Coq.PArith.BinPos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0363490581512	1
Coq.PArith.BinPos.square_xO	40	7.1.0	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0937581062317	65
Coq.PArith.BinPos.square_xI	40
Coq.PArith.BinPos.iter_swap_gen	40
Coq.PArith.BinPos.iter_swap	40
Coq.PArith.BinPos.iter_succ	40
Coq.PArith.BinPos.iter_add	40
Coq.PArith.BinPos.iter_invariant	40
Coq.PArith.BinPos.pow_1_r	40
Coq.PArith.BinPos.pow_succ_r	40
Coq.PArith.BinPos.square_spec	40
Coq.PArith.BinPos.sub_mask_succ_r	40
Coq.PArith.BinPos.sub_mask_carry_spec	40
Coq.PArith.BinPos.sub_mask_spec	40
Coq.PArith.BinPos.sub_mask_nul_iff	40
Coq.PArith.BinPos.sub_mask_diag	40	0.0.0.0.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: reflexivity).	0.046669960022	7
Coq.PArith.BinPos.sub_mask_add	40
Coq.PArith.BinPos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.sub_mask_pos_iff	40
Coq.PArith.BinPos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.sub_mask_neg_iff	40
Coq.PArith.BinPos.eqb_eq	40
Coq.PArith.BinPos.ltb_lt	40
Coq.PArith.BinPos.leb_le	40
Coq.PArith.BinPos.compare_cont_spec	40
Coq.PArith.BinPos.compare_cont_Eq	40
Coq.PArith.BinPos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.compare_cont_Gt_Lt	40	2.0.2.0.2.0.1.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: revert q; only 1: now f_equal; only 1: revert q; only 1: now f_equal; only 1: revert q; only 1: now f_equal).	2.09880805016	1588
Coq.PArith.BinPos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Lt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Gt	40
Coq.PArith.BinPos.compare_cont_Gt_not_Lt	40
Coq.PArith.BinPos.compare_cont_Gt_not_Gt	40
Coq.PArith.BinPos.compare_xO_xO	40	2.1	search with cache (only 1: revert q; only 1: now f_equal).	0.175143957138	78
Coq.PArith.BinPos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0110599994659	1
Coq.PArith.BinPos.compare_xI_xO	40
Coq.PArith.BinPos.compare_xO_xI	40
Coq.PArith.BinPos.compare_sub_mask	40
Coq.PArith.BinPos.lt_iff_add	40
Coq.PArith.BinPos.gt_iff_add	40
Coq.PArith.BinPos.compare_cont_refl	40	0.1.1.33	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	0.57714009285	1523
Coq.PArith.BinPos.compare_cont_antisym	40
Coq.PArith.BinPos.compare_eq_iff	40
Coq.PArith.BinPos.compare_antisym	40
Coq.PArith.BinPos.compare_lt_iff	40	0.0.0.1.0	search with cache (only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0237579345703	6
Coq.PArith.BinPos.compare_le_iff	40	0.5	search with cache (only 1: revert q; only 1: now f_equal).	0.0225100517273	7
Coq.PArith.BinPos.gt_lt_iff	40
Coq.PArith.BinPos.gt_lt	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.0687301158905	2
Coq.PArith.BinPos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0450160503387	1
Coq.PArith.BinPos.ge_le_iff	40	14	search with cache (only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	0.37074303627	137
Coq.PArith.BinPos.ge_le	40	14	search with cache (only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	0.408951044083	154
Coq.PArith.BinPos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0114090442657	1
Coq.PArith.BinPos.compare_succ_r	40
Coq.PArith.BinPos.compare_succ_l	40
Coq.PArith.BinPos.lt_succ_r	40
Coq.PArith.BinPos.lt_succ_diag_r	40
Coq.PArith.BinPos.compare_succ_succ	40
Coq.PArith.BinPos.le_1_l	40	2.0.0.4.7	search with cache (only 1: apply ltb_ge; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	0.888314962387	579
Coq.PArith.BinPos.nlt_1_r	40	0.0.0.18	search with cache (only 1: destruct p; only 1: now f_equal; only 1: now f_equal; only 1: now rewrite <- compare_lt_iff, compare_refl).	1.07139706612	599
Coq.PArith.BinPos.lt_1_succ	40	2.0.0.17	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: now f_equal; only 1: now f_equal; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	2.84565711021	3044
Coq.PArith.BinPos.le_nlt	40	13	search with cache (only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	0.40805888176	117
Coq.PArith.BinPos.lt_nle	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.0351998806	3
Coq.PArith.BinPos.lt_le_incl	40	7.4	search with cache (only 1: revert q; only 1: congruence).	0.245744943619	68
Coq.PArith.BinPos.lt_lt_succ	40
Coq.PArith.BinPos.succ_lt_mono	40
Coq.PArith.BinPos.succ_le_mono	40	52.24	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_succ_succ).	10.8948810101	13908
Coq.PArith.BinPos.lt_trans	40
Coq.PArith.BinPos.lt_ind	40
Coq.PArith.BinPos.lt_strorder	40
Coq.PArith.BinPos.lt_compat	40	0.2.25.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: subst; only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	2.7797498703	1640
Coq.PArith.BinPos.lt_total	40
Coq.PArith.BinPos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0224299430847	3
Coq.PArith.BinPos.le_lt_trans	40
Coq.PArith.BinPos.lt_le_trans	40
Coq.PArith.BinPos.le_trans	40
Coq.PArith.BinPos.le_succ_l	40
Coq.PArith.BinPos.le_antisym	40	0.13.0.14.0.2.7.3	search with cache (only 1: revert q; only 1: intros; only 1: apply le_lteq in H; only 1: destruct H; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now subst).	15.0357539654	20128
Coq.PArith.BinPos.le_preorder	40
Coq.PArith.BinPos.le_partorder	40
Coq.PArith.BinPos.add_compare_mono_l	40
Coq.PArith.BinPos.add_compare_mono_r	40
Coq.PArith.BinPos.lt_add_diag_r	40
Coq.PArith.BinPos.add_lt_mono_l	40
Coq.PArith.BinPos.add_lt_mono_r	40	1.0.0.21	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	2.74826383591	1367
Coq.PArith.BinPos.add_lt_mono	40
Coq.PArith.BinPos.add_le_mono_l	40
Coq.PArith.BinPos.add_le_mono_r	40	1.0.1.22	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	2.52361702919	1336
Coq.PArith.BinPos.add_le_mono	40
Coq.PArith.BinPos.mul_compare_mono_l	40
Coq.PArith.BinPos.mul_compare_mono_r	40
Coq.PArith.BinPos.mul_lt_mono_l	40
Coq.PArith.BinPos.mul_lt_mono_r	40	2.3.0.30	search with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	18.0546348095	13680
Coq.PArith.BinPos.mul_lt_mono	40
Coq.PArith.BinPos.mul_le_mono_l	40
Coq.PArith.BinPos.mul_le_mono_r	40	2.3.1.29	search with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	21.4556720257	13100
Coq.PArith.BinPos.mul_le_mono	40
Coq.PArith.BinPos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0145120620728	2
Coq.PArith.BinPos.lt_not_add_l	40
Coq.PArith.BinPos.pow_gt_1	40
Coq.PArith.BinPos.sub_1_r	40	18	search with cache (only 1: now destruct p).	0.146186113358	169
Coq.PArith.BinPos.pred_sub	40	0.1	search with cache (only 1: symmetry; only 1: now destruct p).	0.0316350460052	19
Coq.PArith.BinPos.sub_succ_r	40
Coq.PArith.BinPos.sub_mask_pos'	40
Coq.PArith.BinPos.sub_mask_pos	40	1.1.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0291299819946	6
Coq.PArith.BinPos.sub_add	40
Coq.PArith.BinPos.add_sub	40
Coq.PArith.BinPos.mul_sub_distr_l	40
Coq.PArith.BinPos.mul_sub_distr_r	40
Coq.PArith.BinPos.sub_lt_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_r	40
Coq.PArith.BinPos.sub_lt_mono_r	40
Coq.PArith.BinPos.sub_decr	40
Coq.PArith.BinPos.add_sub_assoc	40
Coq.PArith.BinPos.sub_add_distr	40
Coq.PArith.BinPos.sub_sub_distr	40
Coq.PArith.BinPos.sub_xO_xO	40
Coq.PArith.BinPos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0191061496735	4
Coq.PArith.BinPos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0188710689545	4
Coq.PArith.BinPos.sub_xO_xI	40	0.0.0.0.5.1.4.31.22.1.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: rewrite ?sub_mask_carry_spec; only 1: case sub_mask_spec; only 1: now subst; only 1: intros r H; only 1: destruct r; only 1: auto; only 1: auto; only 1: auto; only 1: trivial).	21.3416662216	43815
Coq.PArith.BinPos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.sub_mask_neg	40
Coq.PArith.BinPos.sub_le	40
Coq.PArith.BinPos.sub_lt	40
Coq.PArith.BinPos.sub_diag	40
Coq.PArith.BinPos.size_nat_monotone	40
Coq.PArith.BinPos.size_gt	40
Coq.PArith.BinPos.size_le	40
Coq.PArith.BinPos.max_l	40
Coq.PArith.BinPos.max_r	40	0.1.2.1.0.0.1.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.63307094574	310
Coq.PArith.BinPos.min_l	40
Coq.PArith.BinPos.min_r	40	1.4.0.0.0.5	search with cache (only 1: unfold le, min; only 1: intros x y H; only 1: case compare_spec; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: auto).	0.911460876465	905
Coq.PArith.BinPos.max_1_l	40	8.8.1.0.0.20	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros; only 1: elim (nlt_1_r _ H)).	5.67415690422	9914
Coq.PArith.BinPos.max_1_r	40	4.1	search with cache (only 1: apply max_l; only 1: apply le_1_l).	0.0247619152069	11
Coq.PArith.BinPos.min_1_l	40	4.4	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.016695022583	11
Coq.PArith.BinPos.min_1_r	40	1.0.0.0.0.0.0.4	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.290580034256	132
Coq.PArith.BinPos.succ_max_distr	40
Coq.PArith.BinPos.succ_min_distr	40	0.1.0.8.0	search with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	0.31299996376	204
Coq.PArith.BinPos.add_max_distr_l	40
Coq.PArith.BinPos.add_max_distr_r	40
Coq.PArith.BinPos.add_min_distr_l	40	0.1.0.3	search with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.049870967865	17
Coq.PArith.BinPos.add_min_distr_r	40	0.1.3.0	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0331130027771	17
Coq.PArith.BinPos.mul_max_distr_l	40
Coq.PArith.BinPos.mul_max_distr_r	40
Coq.PArith.BinPos.mul_min_distr_l	40	0.1.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0327610969543	20
Coq.PArith.BinPos.mul_min_distr_r	40	0.1.3.0	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0338969230652	17
Coq.PArith.BinPos.iter_op_succ	40
Coq.PArith.BinPos.of_nat_succ	40
Coq.PArith.BinPos.pred_of_succ_nat	40
Coq.PArith.BinPos.succ_of_nat	40
Coq.PArith.BinPos.sqrtrem_step_spec	40
Coq.PArith.BinPos.sqrtrem_spec	40
Coq.PArith.BinPos.sqrt_spec	40
Coq.PArith.BinPos.divide_add_cancel_l	40
Coq.PArith.BinPos.divide_xO_xI	40
Coq.PArith.BinPos.divide_xO_xO	40
Coq.PArith.BinPos.divide_mul_l	40
Coq.PArith.BinPos.divide_mul_r	40
Coq.PArith.BinPos.ggcdn_gcdn	40
Coq.PArith.BinPos.ggcd_gcd	40
Coq.PArith.BinPos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.ggcd_correct_divisors	40
Coq.PArith.BinPos.gcd_divide_l	40
Coq.PArith.BinPos.gcd_divide_r	40
Coq.PArith.BinPos.gcdn_greatest	40
Coq.PArith.BinPos.gcd_greatest	40
Coq.PArith.BinPos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	8.223	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	29.2356112003	213270
Coq.PArith.BinPos.Pcompare_eq_Gt	40	27	search with cache (only 1: intuition).	0.0814909934998	361
Coq.PArith.BinPos.Pminus_mask_Gt	40	8.224	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	20.9320378304	150590
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	45.45.45.69	search with cache (only 1: destruct r; only 1: auto with *; only 1: auto with *; only 1: auto with *).	20.3250279427	141563
Coq.Arith.Le.le_n_0_eq	40	11.0.1.17	search with cache (only 1: induction n as [| n IH]; only 1: intros EQ; only 1: trivial; only 1: now Nat.nzsimpl).	1.04837298393	1956
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	6.13.0	search with cache (only 1: fix even_equiv 1; only 1: intros EQ; only 1: trivial).	1.00149798393	2512
Coq.Arith.Even.even_or_odd	40	7.7.25.1.31.41	search with cache (only 1: Nat.induct n; only 1: now do 2 constructor; only 1: intros EQ; only 1: inversion_clear 1; only 1: now do 2 constructor; only 1: now do 2 constructor).	5.83387613297	23103
Coq.Arith.Even.even_odd_dec	40	0.0.0.4.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0212690830231	9
Coq.Arith.Even.not_even_and_odd	40	5.83	search with cache (only 1: fix even_equiv 1; only 1: trivial).	9.52592611313	104311
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.128592014313	1
Coq.Arith.Even.even_even_plus	40	17	search with cache (only 1: parity_binop).	0.147085905075	378
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0656998157501	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0660719871521	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0660741329193	1
Coq.Arith.Even.even_plus_aux	40	18	search with cache (only 1: parity_binop).	0.244410991669	145
Coq.Arith.Even.even_plus_even_inv_r	40	17	search with cache (only 1: parity_binop).	0.203332901001	474
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0647950172424	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0684552192688	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0657999515533	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0651450157166	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0792369842529	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0647311210632	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0651907920837	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.155033826828	1
Coq.Arith.Even.even_mult_l	40	17	search with cache (only 1: parity_binop).	0.0913231372833	306
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0434730052948	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0646848678589	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0641710758209	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.069727897644	1
Coq.Arith.Even.odd_mult_inv_l	40	17	search with cache (only 1: parity_binop).	0.0911209583282	306
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0436289310455	1
Coq.Arith.Minus.minus_n_O	40	0.11	search with cache (only 1: Nat.nzsimpl; only 1: trivial).	0.0343019962311	46
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	1.12	search with cache (only 1: Nat.nzsimpl; only 1: Morphisms.solve_proper).	0.111352920532	76
Coq.Arith.Minus.minus_diag_reverse	40	2.0.0.20	search with cache (only 1: induction n as [| n IH]; only 1: symmetry; only 1: trivial; only 1: trivial).	0.377466917038	918
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.4.0.29.0.1.115	search with cache (only 1: revert m; only 1: Nat.induct ltac:(n); only 1: intros; only 1: Nat.nzsimpl; only 1: trivial; only 1: intros EQ; only 1: trivial).	5.32772111893	37720
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	22.15.0.23	search with cache (only 1: intros a b; only 1: intros EQ; only 1: rewrite EQ; only 1: now left).	3.0694000721	20322
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: intros Ha Hb; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.024521112442	5
Coq.Arith.Between.exists_le_S	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0222899913788	4
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	7.2	search with cache (only 1: intros; only 1: now repeat split).	0.205384969711	165
Coq.Arith.Between.in_int_lt	40	4.1	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order').	0.0755429267883	12
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.1	search with cache (only 1: induction 1; only 1: auto with arith).	0.0140438079834	4
Coq.Arith.Between.in_int_Sp_q	40	0.1	search with cache (only 1: induction 1; only 1: auto with arith).	0.0140068531036	3
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	2.0.1.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0301299095154	9
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	8.4.51.9	search with cache (only 1: intros a n H H'; only 1: fix even_equiv 1; only 1: intros EQ; only 1: trivial).	4.57964301109	52599
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40	6.83	search with cache (only 1: fix even_equiv 1; only 1: trivial).	11.6134200096	66427
Coq.Arith.Div2.div2_even	40	4.86	search with cache (only 1: fix even_equiv 1; only 1: trivial).	35.6461489201	182867
Coq.Arith.Div2.div2_odd	40	0.0.6.3	search with cache (only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: fix ind_0_1_SS 1; only 1: trivial; only 1: trivial).	0.075446844101	147
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40	0.5.0.5.35.89	search with cache (only 1: revert m; only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: fix ind_0_1_SS 1; only 1: trivial; only 1: fix ind_0_1_SS 1; only 1: trivial).	19.0677978992	59915
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	3.0.47	search with cache (only 1: fix even_equiv 1; only 1: intros a b; only 1: auto).	1.52344202995	7293
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0158751010895	3
Coq.Arith.Div2.div2_double	40	0	search with cache (only 1: apply Nat.div2_double).	0.0107929706573	1
Coq.Arith.Div2.div2_double_plus_one	40	0.3	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: trivial).	0.0178151130676	14
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	124	search with cache (only 1: apply Nat.add_le_mono_l).	2.50603294373	17784
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	97	search with cache (only 1: apply Nat.add_lt_mono_l).	1.01272296906	9372
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.0100190639496	2
Coq.Arith.Plus.plus_lt_compat	40	0.0.26.3	search with cache (only 1: intros Ha Hb; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order'; only 1: Nat.order').	0.403315067291	908
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40	4.136.0	search with cache (only 1: intros EQ; only 1: rewrite EQ in *; only 1: apply Nat.le_add_r).	16.2278261185	205997
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	0.0	search with cache (only 1: intros EQ; only 1: trivial).	0.0123589038849	2
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	24	search with cache (only 1: apply Nat.lt_succ_r).	0.21670794487	699
Coq.Arith.Lt.le_not_lt	40	21.0.0	search with cache (only 1: intros EQ; only 1: intro H'; only 1: Nat.order).	1.16869401932	831
Coq.Arith.Lt.lt_not_le	40	21.0.1	search with cache (only 1: intros EQ; only 1: intro H'; only 1: Nat.order).	1.27579784393	872
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	0.4	search with cache (only 1: intros; only 1: Nat.order).	0.0170750617981	6
Coq.Arith.Lt.lt_n_S	40	24	search with cache (only 1: apply Nat.lt_succ_r).	0.358226060867	699
Coq.Arith.Lt.lt_S_n	40	24	search with cache (only 1: apply Nat.lt_succ_r).	0.22560095787	699
Coq.Arith.Lt.S_pred	40	2.12.1.20.102	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros m Hm; only 1: now Nat.nzsimpl; only 1: Morphisms.solve_proper).	8.47634005547	53164
Coq.Arith.Lt.S_pred_pos	40	0.63.0.19	search with cache (only 1: induction n as [| n IH]; only 1: intros; only 1: Nat.order'; only 1: Morphisms.solve_proper).	8.40525317192	46065
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	10.9588289261	21347
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	10.2346100807	18002
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.293855905533	193
Coq.Arith.Wf_nat.induction_gtof2	40	1	search with cache (only 1: exact (well_founded_induction well_founded_ltof)).	0.288728952408	190
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	2	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.010833978653	3
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0108890533447	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0105271339417	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.1	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0351119041443	20
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.2.0.3.0.1.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.44483208656	948
Coq.Arith.Compare_dec.le_lt_dec	40	0.0.2.0.3.13.58	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	1.06735396385	3916
Coq.Arith.Compare_dec.le_le_S_dec	40	3.0.0.0.0.6.0.13.61	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: auto with arith).	3.20917510986	6751
Coq.Arith.Compare_dec.le_ge_dec	40	0.1.0.0.0.0.8.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	1.0179131031	1259
Coq.Arith.Compare_dec.le_gt_dec	40	1.1.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: left; only 1: trivial; only 1: auto with arith).	0.0574109554291	41
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.0103559494019	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0106408596039	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0110070705414	2
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.010910987854	1
Coq.Arith.Compare_dec.dec_ge	40	2	search with cache (only 1: apply Nat.le_decidable).	0.0113780498505	3
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0122790336609	1
Coq.Arith.Compare_dec.not_le	40	10.0	search with cache (only 1: intros EQ; only 1: Nat.order).	0.0748980045319	53
Coq.Arith.Compare_dec.not_gt	40	10.1	search with cache (only 1: intros EQ; only 1: Nat.order).	0.0781440734863	74
Coq.Arith.Compare_dec.not_ge	40	1	search with cache (only 1: apply Nat.nle_gt).	0.0137281417847	2
Coq.Arith.Compare_dec.not_lt	40	0	search with cache (only 1: apply Nat.nlt_ge).	0.0120129585266	1
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	43	search with cache (only 1: apply Nat.compare_lt_iff).	1.01329517365	3728
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	118	search with cache (only 1: apply Nat.compare_gt_iff).	29.8822898865	126252
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	61	search with cache (only 1: apply Nat.leb_le).	1.55962491035	8757
Coq.Arith.Compare_dec.leb_correct_conv	40	1.113	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	36.5999388695	85521
Coq.Arith.Compare_dec.leb_complete_conv	40	102	search with cache (only 1: apply leb_iff_conv).	13.6253590584	54915
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	0.29.17	search with cache (only 1: induction n as [| n IH]; only 1: Morphisms.solve_proper; only 1: trivial).	0.856705188751	1700
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	3.0	search with cache (only 1: intros <-; only 1: apply eq_nat_refl).	0.0146420001984	13
Coq.Arith.EqNat.eq_nat_eq	40	0.0.0.0.0.0.0.0.1.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	0.388514041901	673
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	3.15.1	search with cache (only 1: induction n; only 1: Morphisms.solve_proper; only 1: trivial).	0.246086120605	382
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.bi_induction	40
Coq.Arith.PeanoNat.recursion_wd	40
Coq.Arith.PeanoNat.recursion_0	40	1	search with cache (only 1: destr_bool).	0.0064070224762	2
Coq.Arith.PeanoNat.recursion_succ	40	33.1.22	search with cache (only 1: induction n; only 1: firstorder; only 1: firstorder).	6.39077711105	19442
Coq.Arith.PeanoNat.pred_succ	40	2	search with cache (only 1: tauto).	0.00636291503906	3
Coq.Arith.PeanoNat.pred_0	40	0	search with cache (only 1: simpl_relation).	0.00617289543152	1
Coq.Arith.PeanoNat.one_succ	40	4	search with cache (only 1: firstorder).	0.00562000274658	5
Coq.Arith.PeanoNat.two_succ	40	3	search with cache (only 1: tauto).	0.00590109825134	4
Coq.Arith.PeanoNat.add_0_l	40	2	search with cache (only 1: tauto).	0.00598788261414	3
Coq.Arith.PeanoNat.add_succ_l	40	19	search with cache (only 1: auto with sets).	0.0850789546967	339
Coq.Arith.PeanoNat.sub_0_r	40	2.0.54	search with cache (only 1: induction n; only 1: reflexivity; only 1: tauto).	0.476680040359	1737
Coq.Arith.PeanoNat.sub_succ_r	40
Coq.Arith.PeanoNat.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00525283813477	1
Coq.Arith.PeanoNat.mul_succ_l	40
Coq.Arith.PeanoNat.lt_succ_r	40
Coq.Arith.PeanoNat.eqb_eq	40
Coq.Arith.PeanoNat.leb_le	40
Coq.Arith.PeanoNat.ltb_lt	40
Coq.Arith.PeanoNat.eq_dec	40
Coq.Arith.PeanoNat.compare_eq_iff	40	0.0.0.0.1.1.0.0.0.1.0.5.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: tauto; only 1: simpl; only 1: split; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	2.82498693466	4818
Coq.Arith.PeanoNat.compare_lt_iff	40
Coq.Arith.PeanoNat.compare_le_iff	40
Coq.Arith.PeanoNat.compare_antisym	40
Coq.Arith.PeanoNat.compare_succ	40	9	search with cache (only 1: trivial).	0.0119700431824	12
Coq.Arith.PeanoNat.max_l	40
Coq.Arith.PeanoNat.max_r	40
Coq.Arith.PeanoNat.min_l	40
Coq.Arith.PeanoNat.min_r	40
Coq.Arith.PeanoNat.pow_neg_r	40	56.0	search with cache (only 1: intro; only 1: now rewrite <- ?succ_le_mono).	1.72469592094	7733
Coq.Arith.PeanoNat.pow_0_r	40	14	search with cache (only 1: reflexivity).	0.0225450992584	75
Coq.Arith.PeanoNat.pow_succ_r	40	10.0	search with cache (only 1: intro; only 1: intuition).	0.0264818668365	76
Coq.Arith.PeanoNat.square_spec	40	14	search with cache (only 1: reflexivity).	0.0237901210785	75
Coq.Arith.PeanoNat.Even_1	40
Coq.Arith.PeanoNat.Even_2	40
Coq.Arith.PeanoNat.Odd_0	40	1.20.33	search with cache (only 1: intro H; only 1: destruct H; only 1: now rewrite <- plus_n_Sm in H).	1.29546308517	4080
Coq.Arith.PeanoNat.Odd_2	40
Coq.Arith.PeanoNat.even_spec	40
Coq.Arith.PeanoNat.odd_spec	40	3.1.2.0	search with cache (only 1: fix even_spec 1; only 1: intro H; only 1: rewrite even_spec; only 1: now rewrite <- ?succ_le_mono).	0.03457903862	29
Coq.Arith.PeanoNat.divmod_spec	40
Coq.Arith.PeanoNat.div_mod	40
Coq.Arith.PeanoNat.mod_bound_pos	40
Coq.Arith.PeanoNat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.sqrt_specif	40	1.42.7.112	search with cache (only 1: induct n; only 1: auto using Private_Tac.eq_sym; only 1: fix even_spec 1; only 1: auto using Private_Tac.eq_sym).	15.1856589317	52795
Coq.Arith.PeanoNat.sqrt_neg	40	35	search with cache (only 1: now f_equal).	0.363611936569	1080
Coq.Arith.PeanoNat.log2_iter_spec	40
Coq.Arith.PeanoNat.log2_spec	40
Coq.Arith.PeanoNat.log2_nonpos	40	5.0	search with cache (only 1: inversion 1; only 1: auto).	0.0142381191254	11
Coq.Arith.PeanoNat.gcd_divide	40	2.45	search with cache (only 1: fix even_spec 1; only 1: auto).	7.62917399406	12929
Coq.Arith.PeanoNat.gcd_divide_l	40	2.1.3.0.3	search with cache (only 1: fix gcd_divide 1; only 1: intros [| a] b; only 1: now exists 0; only 1: set (a' := S a) in *; only 1: auto).	0.180433988571	268
Coq.Arith.PeanoNat.gcd_divide_r	40	0.1	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00961709022522	3
Coq.Arith.PeanoNat.gcd_greatest	40
Coq.Arith.PeanoNat.gcd_nonneg	40	0	search with cache (only 1: apply le_0_l).	0.00895500183105	1
Coq.Arith.PeanoNat.div2_double	40
Coq.Arith.PeanoNat.div2_succ_double	40	0.1.2.2.6	search with cache (only 1: induction n; only 1: auto using Private_Tac.eq_sym; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.216835975647	143
Coq.Arith.PeanoNat.le_div2	40
Coq.Arith.PeanoNat.lt_div2	40
Coq.Arith.PeanoNat.div2_decr	40
Coq.Arith.PeanoNat.double_twice	40	1.28	search with cache (only 1: fix le_div2 1; only 1: auto using Private_Tac.eq_sym).	0.841820001602	970
Coq.Arith.PeanoNat.testbit_0_l	40	1.3.15	search with cache (only 1: induction n; only 1: intuition; only 1: now f_equal).	0.323302030563	429
Coq.Arith.PeanoNat.testbit_odd_0	40
Coq.Arith.PeanoNat.testbit_even_0	40
Coq.Arith.PeanoNat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.testbit_even_succ'	40
Coq.Arith.PeanoNat.shiftr_specif	40	4.16	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	20.1697590351	716
Coq.Arith.PeanoNat.shiftl_specif_high	40	4.17	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	14.6478052139	1025
Coq.Arith.PeanoNat.shiftl_spec_low	40	4.17	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	21.159209013	6463
Coq.Arith.PeanoNat.div2_bitwise	40	3.20.24	search with cache (only 1: intro H; only 1: fix gcd_greatest 1; only 1: auto).	30.3019740582	7169
Coq.Arith.PeanoNat.odd_bitwise	40
Coq.Arith.PeanoNat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.land_spec	40
Coq.Arith.PeanoNat.ldiff_spec	40
Coq.Arith.PeanoNat.lor_spec	40
Coq.Arith.PeanoNat.lxor_spec	40
Coq.Arith.PeanoNat.div2_spec	40	1	search with cache (only 1: now f_equal).	0.009113073349	2
Coq.Arith.PeanoNat.testbit_neg_r	40	30	search with cache (only 1: inversion H).	0.282436132431	574
Coq.Arith.PeanoNat.tail_add_spec	40
Coq.Arith.PeanoNat.tail_addmul_spec	40
Coq.Arith.PeanoNat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	19.0	search with cache (only 1: intros a n H H'; only 1: Nat.order).	2.39110803604	2642
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00545191764832	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00393414497375	1
Coq.Arith.Gt.gt_S	40	8.60.0	search with cache (only 1: intros EQ; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	3.4929587841	23233
Coq.Arith.Gt.gt_pred	40	64	search with cache (only 1: auto with arith).	1.3742749691	8295
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00455689430237	1
Coq.Arith.Gt.gt_not_le	40	1	search with cache (only 1: apply Nat.lt_nge).	0.00435090065002	2
Coq.Arith.Gt.le_S_gt	40	0.0	search with cache (only 1: intros EQ; only 1: trivial).	0.00398898124695	2
Coq.Arith.Gt.gt_S_le	40	8.1	search with cache (only 1: intros EQ; only 1: auto with arith).	0.00910711288452	30
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00383996963501	1
Coq.Arith.Gt.le_gt_S	40	24	search with cache (only 1: apply Nat.lt_succ_r).	0.330139875412	883
Coq.Arith.Gt.le_gt_trans	40	0.0.58.0	search with cache (only 1: intros Ha Hb; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: trivial).	0.896546125412	5615
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	37.0.53.29	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: auto with arith).	7.435131073	28537
Coq.Arith.Gt.gt_0_eq	40	26.3.17.108	search with cache (only 1: apply Nat.lt_eq_cases; only 1: induction n as [| n IH]; only 1: trivial; only 1: auto).	36.7946608067	173837
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0780620574951	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00482296943665	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.1.1	search with cache (only 1: intros; only 1: inversion_clear H; only 1: constructor).	0.00955510139465	5
Coq.Logic.JMeq.JMeq_trans	40	2.1.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0066990852356	7
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00734305381775	4
Coq.Logic.JMeq.JMeq_rect	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00749588012695	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.2.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00858902931213	5
Coq.Logic.JMeq.JMeq_rect_r	40	0.2.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00873994827271	5
Coq.Logic.JMeq.JMeq_congr	40	0.6.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00897598266602	9
Coq.Logic.JMeq.JMeq_eq_dep_id	40	2.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00861597061157	6
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0086510181427	4
Coq.Logic.JMeq.eq_dep_JMeq	40	0.6	search with cache (only 1: destruct 1; only 1: trivial).	0.0202531814575	23
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.5.9.6	search with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: trivial).	0.45316696167	1144
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	2.1.8.17	search with cache (only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: trivial).	0.178974866867	837
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00996804237366	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	4.2	search with cache (only 1: intros EQ; only 1: tauto).	0.0131118297577	25
Coq.Logic.Classical_Prop.not_imply_elim	40	0.0	search with cache (only 1: intros a b; only 1: tauto).	0.011488199234	2
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: red; only 1: intro; only 1: apply H; only 1: intro; only 1: trivial).	0.0140759944916	15
Coq.Logic.Classical_Prop.imply_to_or	40	0.2	search with cache (only 1: intros a b; only 1: tauto).	0.0171499252319	12
Coq.Logic.Classical_Prop.imply_to_and	40	0.2	search with cache (only 1: intros a b; only 1: tauto).	0.0261130332947	22
Coq.Logic.Classical_Prop.or_to_imply	40	0	search with cache (only 1: tauto).	0.00774693489075	1
Coq.Logic.Classical_Prop.not_and_or	40	0.2	search with cache (only 1: intros a b; only 1: tauto).	0.022736787796	12
Coq.Logic.Classical_Prop.or_not_and	40	0	search with cache (only 1: tauto).	0.0092670917511	1
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0088529586792	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0086190700531	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.00745701789856	1
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.00901007652283	1
Coq.Logic.Classical_Prop.eq_rect_eq	40
Coq.Logic.Hurkens.Omega	40
Coq.Logic.Hurkens.lemma1	40
Coq.Logic.Hurkens.lemma2	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.strength	40
Coq.Logic.Hurkens.modal	40	2.30.27	search with cache (only 1: intro H1; only 1: elim H1; only 1: eauto).	0.641221046448	4389
Coq.Logic.Hurkens.Forall	40	3.36	search with cache (only 1: red; only 1: eauto).	0.126247882843	822
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.mparadox	40	1.1.1.1.2.0.0.1.3.2.0	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: easy; only 1: exact bool; only 1: exact p2b; only 1: exact b2p; only 1: easy; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	1.09299993515	1983
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.up_down	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	1.1.63.4	search with cache (only 1: intros n m; only 1: intro H; only 1: destruct H; only 1: auto).	1.30316209793	12734
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.3.5	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.237078905106	392
Coq.Logic.Eqdep_dec.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: split; only 1: auto; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).	14.7060120106	28972
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	0.0.1.19.0	search with cache (only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: auto; only 1: exists f; only 1: auto).	0.970232009888	1474
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.4.10.0.0.10.10.10.2.0	search with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: firstorder).	3.65399694443	16260
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.0.1.0.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: exists x; only 1: auto).	0.0242929458618	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	20.4.20.40	search with cache (only 1: compute; only 1: intro H; only 1: intros GAC_rel A B R; only 1: auto).	6.96098899841	51511
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.1.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0212960243225	5
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.3.0.0.0.0.1.0.0.0.0.1.0.0.0.0.0.0.0.0.1.2.0.4.56	search with cache (only 1: repeat split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	7.90503001213	33719
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.0.0	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0719048976898	4
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	5.0.0.5	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	6.22635698318	200
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.2.2.0.0.2	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	0.543136835098	138
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	10.31.11.126	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	2.77567005157	35624
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	156	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	14.150042057	261458
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.3.0.34	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	9.61884617805	27985
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	3.0.0.8.6.7	search with cache (only 1: intro n; only 1: intro H; only 1: destruct H; only 1: intro all; only 1: apply H; only 1: trivial).	1.99726200104	4366
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.subsetT_eq_compat	40	0.1.2.2	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.00762796401978	9
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.extend_ok	40
Coq.Logic.FinFun.extend_f2n	40
Coq.Logic.FinFun.extend_n2f	40
Coq.Logic.FinFun.restrict_f2n	40
Coq.Logic.FinFun.restrict_n2f	40
Coq.Logic.FinFun.extend_surjective	40
Coq.Logic.FinFun.extend_injective	40
Coq.Logic.FinFun.restrict_surjective	40
Coq.Logic.FinFun.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40	0.1.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: Notations.split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: Notations.split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	7.70556306839	12797
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0149607658386	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.1.0.0.0.0.1.1.0.0.0.0.0.0.1.0	search with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	27.1333799362	31546
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.9	search with cache (only 1: destruct 1; only 1: trivial).	0.0157940387726	61
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	1.6	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00556898117065	16
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00827789306641	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00851893424988	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	8.9.3.6	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.220560073853	877
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	8	search with cache (only 1: reflexivity).	0.00654006004333	9
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: trivial).	0.00610303878784	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.12	search with cache (only 1: intros ? ? ? Fl Fr; only 1: eauto using @functional_extensionality_dep).	0.0380170345306	164
Coq.Logic.HLevels.false_hprop	40	7.7.33	search with cache (only 1: intro H; only 1: apply False_rec; only 1: apply H).	0.219248056412	1748
Coq.Logic.HLevels.true_hprop	40	1.16.2	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.0533909797668	404
Coq.Logic.HLevels.not_hprop	40	4.25.0.0.4.20	search with cache (only 1: intros p q; only 1: intro H1; only 1: apply functional_extensionality; only 1: intros; only 1: elim H1; only 1: assumption).	1.97642993927	16314
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	6.0.0.0.44.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	2.62816810608	13313
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.1	search with cache (only 1: induction 1; only 1: trivial).	0.00495409965515	3
Coq.Logic.EqdepFacts.eq_dep_trans	40	1.5.0	search with cache (only 1: destruct 1; only 1: intros; only 1: auto).	0.00445508956909	9
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	0.40.0	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: trivial).	0.444344043732	4191
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	2.90	search with cache (only 1: inversion 1; only 1: reflexivity).	7.5640938282	89855
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	3.6	search with cache (only 1: destruct 1; only 1: trivial).	0.0169579982758	43
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.21.5.0.1.5.42	search with cache (only 1: repeat split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: intros; only 1: destruct H; only 1: reflexivity).	8.67850899696	96202
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.2	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00687289237976	6
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.6	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00868916511536	15
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.22.6.0.1.6.9	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: intros; only 1: destruct H; only 1: reflexivity).	2.88018918037	21685
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	9.0.2.2	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.265222072601	639
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.5.0.2	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: reflexivity).	0.0576210021973	125
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	21.6.9.17.27.23	search with cache (only 1: intro x; only 1: intro; only 1: intro H; only 1: destruct H; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	4.60216093063	41245
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	0.10.8	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0569660663605	297
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	4.79.10.8	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	18.5822379589	227004
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	13.2	search with cache (only 1: red; only 1: auto).	0.17675614357	463
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	28.3.2	search with cache (only 1: red; only 1: intros; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	3.47615003586	14395
Coq.Logic.EqdepFacts.f_eq_dep	40	1.6	search with cache (only 1: destruct 1; only 1: auto).	0.0102961063385	16
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.2.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00715494155884	6
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.6	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0176610946655	23
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	2.1.0.0.13	search with cache (only 1: intro H; only 1: intros Ext A P Q Eq; only 1: apply Ext; only 1: intros x; only 1: auto).	0.080039024353	307
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	5.5.7.58.16.1.15	search with cache (only 1: intro H; only 1: intros x; only 1: intro H1; only 1: apply H; only 1: split; only 1: auto; only 1: auto).	7.88276314735	117624
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.2	search with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0134968757629	25
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	3.25	search with cache (only 1: intros [HypL HypR]; only 1: assumption).	2.79009795189	14113
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	15.2.0.8.17	search with cache (only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: trivial; only 1: contradiction).	0.427757978439	3780
Coq.Logic.Decidable.dec_True	40	1.0.53	search with cache (only 1: red; only 1: constructor; only 1: trivial).	0.132956027985	1822
Coq.Logic.Decidable.dec_False	40	1.4	search with cache (only 1: unfold decidable; only 1: auto).	0.00411796569824	11
Coq.Logic.Decidable.dec_or	40	0.0.33	search with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).	0.810886859894	6879
Coq.Logic.Decidable.dec_and	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0208249092102	12
Coq.Logic.Decidable.dec_not	40	2.13	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.0232760906219	112
Coq.Logic.Decidable.dec_imp	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0153300762177	12
Coq.Logic.Decidable.dec_iff	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0237138271332	12
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00631999969482	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00697302818298	1
Coq.Logic.Decidable.not_and	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0221951007843	16
Coq.Logic.Decidable.not_imp	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0300779342651	28
Coq.Logic.Decidable.imp_simp	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0175850391388	16
Coq.Logic.Decidable.not_iff	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.062803030014	12
Coq.Logic.Decidable.not_true_iff	40	2	search with cache (only 1: tauto).	0.0061628818512	3
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00490307807922	1
Coq.Logic.Decidable.not_not_iff	40	0.13	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.0338490009308	75
Coq.Logic.Decidable.contrapositive	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0248899459839	20
Coq.Logic.Decidable.or_not_l_iff_1	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0279731750488	20
Coq.Logic.Decidable.or_not_l_iff_2	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0273530483246	20
Coq.Logic.Decidable.or_not_r_iff_1	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0270879268646	20
Coq.Logic.Decidable.or_not_r_iff_2	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0278577804565	20
Coq.Logic.Decidable.imp_not_l	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0562798976898	20
Coq.Logic.Decidable.not_or_iff	40	3	search with cache (only 1: tauto).	0.0406420230865	13
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.011482000351	1
Coq.Logic.Decidable.not_imp_iff	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0296518802643	20
Coq.Logic.Decidable.not_imp_rev_iff	40	0.3	search with cache (only 1: unfold decidable; only 1: tauto).	0.0320098400116	20
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.singleton_spec	40
Coq.MSets.MSetRBT.singleton_ok	40	15	search with cache (only 1: intuition).	0.0299870967865	91
Coq.MSets.MSetRBT.makeBlack_spec	40
Coq.MSets.MSetRBT.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0637309551239	5
Coq.MSets.MSetRBT.makeBlack_ok	40	6.5.14.28	search with cache (only 1: induction s; only 1: intuition; only 1: simpl; only 1: intuition_in).	10.3705310822	3186
Coq.MSets.MSetRBT.makeRed_ok	40	0.0.0.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.026134967804	6
Coq.MSets.MSetRBT.rmatch	40
Coq.MSets.MSetRBT.rrmatch	40
Coq.MSets.MSetRBT.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.481935024261	771
Coq.MSets.MSetRBT.lbal_match	40
Coq.MSets.MSetRBT.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0109899044037	1
Coq.MSets.MSetRBT.rbal'_match	40
Coq.MSets.MSetRBT.lbalS_match	40
Coq.MSets.MSetRBT.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0109970569611	1
Coq.MSets.MSetRBT.lbal_spec	40
Coq.MSets.MSetRBT.lbal_ok	40
Coq.MSets.MSetRBT.rbal_spec	40
Coq.MSets.MSetRBT.rbal_ok	40
Coq.MSets.MSetRBT.rbal'_spec	40
Coq.MSets.MSetRBT.rbal'_ok	40
Coq.MSets.MSetRBT.ins_spec	40
Coq.MSets.MSetRBT.ins_ok	40
Coq.MSets.MSetRBT.add_spec'	40
Coq.MSets.MSetRBT.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0397038459778	2
Coq.MSets.MSetRBT.add_ok	40	16	search with cache (only 1: ok).	0.361700057983	217
Coq.MSets.MSetRBT.lbalS_spec	40
Coq.MSets.MSetRBT.lbalS_ok	40
Coq.MSets.MSetRBT.rbalS_spec	40
Coq.MSets.MSetRBT.rbalS_ok	40
Coq.MSets.MSetRBT.append_rr_match	40	56	search with cache (only 1: exact (rmatch _ _ _)).	3.47418498993	6857
Coq.MSets.MSetRBT.append_bb_match	40	2	search with cache (only 1: exact (rmatch _ _ _)).	0.0226180553436	12
Coq.MSets.MSetRBT.append_spec	40
Coq.MSets.MSetRBT.append_ok	40
Coq.MSets.MSetRBT.del_spec	40
Coq.MSets.MSetRBT.del_ok	40
Coq.MSets.MSetRBT.remove_spec	40
Coq.MSets.MSetRBT.remove_ok	40	20	search with cache (only 1: ok).	18.7722220421	8710
Coq.MSets.MSetRBT.delmin_spec	40
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetRBT.remove_min_ok	40
Coq.MSets.MSetRBT.treeify_zero_spec	40	37	search with cache (only 1: firstorder).	0.172136068344	699
Coq.MSets.MSetRBT.treeify_one_spec	40
Coq.MSets.MSetRBT.treeify_cont_spec	40
Coq.MSets.MSetRBT.treeify_aux_spec	40
Coq.MSets.MSetRBT.plength_aux_spec	40
Coq.MSets.MSetRBT.plength_spec	40
Coq.MSets.MSetRBT.treeify_elements	40
Coq.MSets.MSetRBT.treeify_spec	40
Coq.MSets.MSetRBT.treeify_ok	40
Coq.MSets.MSetRBT.filter_aux_elements	40
Coq.MSets.MSetRBT.filter_elements	40
Coq.MSets.MSetRBT.filter_spec	40
Coq.MSets.MSetRBT.filter_ok	40
Coq.MSets.MSetRBT.partition_aux_spec	40
Coq.MSets.MSetRBT.partition_spec	40
Coq.MSets.MSetRBT.partition_spec1	40	4.2	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.034117937088	25
Coq.MSets.MSetRBT.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0149590969086	1
Coq.MSets.MSetRBT.partition_ok1	40
Coq.MSets.MSetRBT.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0139870643616	2
Coq.MSets.MSetRBT.INV_init	40
Coq.MSets.MSetRBT.INV_sym	40	5.116	search with cache (only 1: inversion 1; only 1: now subst).	17.8045799732	23215
Coq.MSets.MSetRBT.INV_drop	40
Coq.MSets.MSetRBT.INV_eq	40
Coq.MSets.MSetRBT.INV_lt	40
Coq.MSets.MSetRBT.INV_rev	40
Coq.MSets.MSetRBT.union_list_ok	40
Coq.MSets.MSetRBT.linear_union_ok	40
Coq.MSets.MSetRBT.fold_add_ok	40
Coq.MSets.MSetRBT.union_ok	40
Coq.MSets.MSetRBT.union_list_spec	40
Coq.MSets.MSetRBT.linear_union_spec	40
Coq.MSets.MSetRBT.fold_add_spec	40
Coq.MSets.MSetRBT.union_spec'	40
Coq.MSets.MSetRBT.union_spec	40	0.0.0.0.0.0.2.2	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	0.316565036774	91
Coq.MSets.MSetRBT.inter_list_ok	40
Coq.MSets.MSetRBT.linear_inter_ok	40
Coq.MSets.MSetRBT.inter_ok	40
Coq.MSets.MSetRBT.inter_list_spec	40
Coq.MSets.MSetRBT.linear_inter_spec	40
Coq.MSets.MSetRBT.mem_proper	40
Coq.MSets.MSetRBT.inter_spec	40
Coq.MSets.MSetRBT.diff_list_ok	40
Coq.MSets.MSetRBT.diff_inter_ok	40
Coq.MSets.MSetRBT.fold_remove_ok	40	0.0.0.0.0.1.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0299069881439	10
Coq.MSets.MSetRBT.diff_ok	40
Coq.MSets.MSetRBT.diff_list_spec	40
Coq.MSets.MSetRBT.linear_diff_spec	40
Coq.MSets.MSetRBT.fold_remove_spec	40
Coq.MSets.MSetRBT.diff_spec	40
Coq.MSets.MSetRBT.rr_nrr_rb	40
Coq.MSets.MSetRBT.arb_nrr_rb	40
Coq.MSets.MSetRBT.arb_nr_rb	40
Coq.MSets.MSetRBT.rb_maxdepth	40
Coq.MSets.MSetRBT.rb_mindepth	40
Coq.MSets.MSetRBT.maxdepth_upperbound	40
Coq.MSets.MSetRBT.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.singleton_rb	40
Coq.MSets.MSetRBT.makeBlack_rb	40
Coq.MSets.MSetRBT.makeRed_rr	40
Coq.MSets.MSetRBT.lbal_rb	40
Coq.MSets.MSetRBT.rbal_rb	40
Coq.MSets.MSetRBT.rbal'_rb	40
Coq.MSets.MSetRBT.lbalS_rb	40
Coq.MSets.MSetRBT.lbalS_arb	40
Coq.MSets.MSetRBT.rbalS_rb	40
Coq.MSets.MSetRBT.rbalS_arb	40
Coq.MSets.MSetRBT.ifred_notred	40
Coq.MSets.MSetRBT.ifred_or	40	0.0.0.1.0	search with cache (only 1: destruct s; only 1: intuition; only 1: descolor; only 1: intuition; only 1: intuition).	0.026428937912	6
Coq.MSets.MSetRBT.ins_rr_rb	40
Coq.MSets.MSetRBT.ins_arb	40
Coq.MSets.MSetRBT.add_rb	40
Coq.MSets.MSetRBT.append_arb_rb	40
Coq.MSets.MSetRBT.del_arb	40	1.1	search with cache (only 1: invrb; only 1: intuition).	0.019199848175	4
Coq.MSets.MSetRBT.remove_rb	40
Coq.MSets.MSetRBT.treeify_zero_rb	40	7	search with cache (only 1: now split).	0.0204601287842	11
Coq.MSets.MSetRBT.treeify_one_rb	40	13.0.3.16.24.68	search with cache (only 1: intros n; only 1: destruct n as [| n]; only 1: now auto_tc; only 1: intros; only 1: simpl; only 1: auto_tc).	17.5080111027	54355
Coq.MSets.MSetRBT.treeify_cont_rb	40
Coq.MSets.MSetRBT.treeify_aux_rb	40
Coq.MSets.MSetRBT.treeify_rb	40
Coq.MSets.MSetRBT.filter_rb	40	33.4	search with cache (only 1: unfold partition, filter; only 1: inA).	0.716676950455	3286
Coq.MSets.MSetRBT.partition_rb1	40	0.0.12.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.404402971268	695
Coq.MSets.MSetRBT.partition_rb2	40	0.3.1.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0272860527039	13
Coq.MSets.MSetRBT.fold_add_rb	40	0.0.0.1.0.0.1.0.15	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.19961595535	2135
Coq.MSets.MSetRBT.fold_remove_rb	40	0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.383312940598	268
Coq.MSets.MSetRBT.union_rb	40	1.1.2.1.0.3.15	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.670209169388	1422
Coq.MSets.MSetRBT.inter_rb	40	0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.046569108963	42
Coq.MSets.MSetRBT.diff_rb	40	1.0.0.29.0.2.0	search with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	5.89647102356	17719
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetPositive.In_compat	40	1.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0401020050049	4
Coq.MSets.MSetPositive.eq_equiv	40
Coq.MSets.MSetPositive.mem_spec	40	3	search with cache (only 1: intuition).	0.0244500637054	28
Coq.MSets.MSetPositive.mem_Leaf	40	0.1	search with cache (only 1: intros EQ; only 1: trivial).	0.0144748687744	3
Coq.MSets.MSetPositive.empty_spec	40	10.1	search with cache (only 1: intros a b; only 1: discriminate).	0.0508110523224	127
Coq.MSets.MSetPositive.mem_node	40
Coq.MSets.MSetPositive.is_empty_spec	40
Coq.MSets.MSetPositive.subset_Leaf_s	40	27.0	search with cache (only 1: intros a b; only 1: discriminate).	0.565886974335	2207
Coq.MSets.MSetPositive.subset_spec	40
Coq.MSets.MSetPositive.equal_subset	40
Coq.MSets.MSetPositive.equal_spec	40
Coq.MSets.MSetPositive.eq_dec	40
Coq.MSets.MSetPositive.lex_Opp	40
Coq.MSets.MSetPositive.compare_bool_inv	40
Coq.MSets.MSetPositive.compare_inv	40
Coq.MSets.MSetPositive.lex_Eq	40
Coq.MSets.MSetPositive.compare_bool_Eq	40
Coq.MSets.MSetPositive.compare_equal	40
Coq.MSets.MSetPositive.compare_gt	40
Coq.MSets.MSetPositive.compare_eq	40
Coq.MSets.MSetPositive.compare_spec	40
Coq.MSets.MSetPositive.ct_cxe	40
Coq.MSets.MSetPositive.ct_xce	40
Coq.MSets.MSetPositive.ct_lxl	40
Coq.MSets.MSetPositive.ct_gxg	40	9.9.9.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.450346946716	1445
Coq.MSets.MSetPositive.ct_xll	40	9.9.9.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.441407203674	1445
Coq.MSets.MSetPositive.ct_xgg	40	9.9.9.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.43686413765	1445
Coq.MSets.MSetPositive.ct_lex	40
Coq.MSets.MSetPositive.ct_compare_bool	40
Coq.MSets.MSetPositive.compare_x_Leaf	40
Coq.MSets.MSetPositive.compare_empty_x	40
Coq.MSets.MSetPositive.compare_x_empty	40
Coq.MSets.MSetPositive.ct_compare	40
Coq.MSets.MSetPositive.lt_strorder	40
Coq.MSets.MSetPositive.compare_compat_1	40
Coq.MSets.MSetPositive.compare_compat	40
Coq.MSets.MSetPositive.lt_compat	40
Coq.MSets.MSetPositive.add_spec	40
Coq.MSets.MSetPositive.remove_spec	40
Coq.MSets.MSetPositive.singleton_spec	40
Coq.MSets.MSetPositive.union_spec	40
Coq.MSets.MSetPositive.inter_spec	40
Coq.MSets.MSetPositive.diff_spec	40
Coq.MSets.MSetPositive.fold_spec	40
Coq.MSets.MSetPositive.cardinal_spec	40
Coq.MSets.MSetPositive.xfilter_spec	40
Coq.MSets.MSetPositive.filter_spec	40
Coq.MSets.MSetPositive.xforall_spec	40
Coq.MSets.MSetPositive.for_all_spec	40
Coq.MSets.MSetPositive.xexists_spec	40
Coq.MSets.MSetPositive.exists_spec	40
Coq.MSets.MSetPositive.partition_filter	40
Coq.MSets.MSetPositive.partition_spec1	40
Coq.MSets.MSetPositive.partition_spec2	40	3.2.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0272960662842	8
Coq.MSets.MSetPositive.xelements_spec	40
Coq.MSets.MSetPositive.elements_spec1	40
Coq.MSets.MSetPositive.lt_rev_append	40
Coq.MSets.MSetPositive.elements_spec2	40
Coq.MSets.MSetPositive.elements_spec2w	40
Coq.MSets.MSetPositive.choose_spec1	40
Coq.MSets.MSetPositive.choose_spec2	40
Coq.MSets.MSetPositive.choose_empty	40
Coq.MSets.MSetPositive.choose_spec3'	40
Coq.MSets.MSetPositive.choose_spec3	40
Coq.MSets.MSetPositive.min_elt_spec1	40
Coq.MSets.MSetPositive.min_elt_spec3	40
Coq.MSets.MSetPositive.min_elt_spec2	40
Coq.MSets.MSetPositive.max_elt_spec1	40
Coq.MSets.MSetPositive.max_elt_spec3	40
Coq.MSets.MSetPositive.max_elt_spec2	40
Coq.MSets.MSetFacts.In_1	40	0.4.37.44	search with cache (only 1: intro H; only 1: rewrite <- H; only 1: intros EQ; only 1: auto).	2.04236507416	28966
Coq.MSets.MSetFacts.mem_1	40
Coq.MSets.MSetFacts.mem_2	40
Coq.MSets.MSetFacts.equal_1	40
Coq.MSets.MSetFacts.equal_2	40
Coq.MSets.MSetFacts.subset_1	40
Coq.MSets.MSetFacts.subset_2	40
Coq.MSets.MSetFacts.is_empty_1	40
Coq.MSets.MSetFacts.is_empty_2	40
Coq.MSets.MSetFacts.add_1	40
Coq.MSets.MSetFacts.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0199110507965	3
Coq.MSets.MSetFacts.add_3	40
Coq.MSets.MSetFacts.remove_1	40
Coq.MSets.MSetFacts.remove_2	40	2.13.0.2	search with cache (only 1: intros EQ; only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).	0.405417919159	510
Coq.MSets.MSetFacts.remove_3	40	12.15	search with cache (only 1: rewrite remove_spec; only 1: intuition).	2.20787096024	3484
Coq.MSets.MSetFacts.singleton_1	40
Coq.MSets.MSetFacts.singleton_2	40	2.5	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0311958789825	18
Coq.MSets.MSetFacts.union_1	40
Coq.MSets.MSetFacts.union_2	40	0.0.33	search with cache (only 1: rewrite union_spec; only 1: intros EQ; only 1: auto).	2.01695394516	2972
Coq.MSets.MSetFacts.union_3	40	0.1	search with cache (only 1: rewrite union_spec; only 1: auto).	0.033093214035	12
Coq.MSets.MSetFacts.inter_1	40
Coq.MSets.MSetFacts.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.022390127182	2
Coq.MSets.MSetFacts.inter_3	40	0.0.8	search with cache (only 1: rewrite inter_spec; only 1: intros E; only 1: auto).	0.11209487915	83
Coq.MSets.MSetFacts.diff_1	40
Coq.MSets.MSetFacts.diff_2	40	3.1.3.0.33	search with cache (only 1: rewrite diff_spec; only 1: intros EQ; only 1: intro; only 1: inversion EQ; only 1: auto).	2.7757627964	5842
Coq.MSets.MSetFacts.diff_3	40	2.0.33	search with cache (only 1: rewrite diff_spec; only 1: intros EQ; only 1: intuition).	3.57155394554	5086
Coq.MSets.MSetFacts.filter_1	40
Coq.MSets.MSetFacts.filter_2	40	0.1.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0288689136505	5
Coq.MSets.MSetFacts.filter_3	40	0.1.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0350761413574	5
Coq.MSets.MSetFacts.for_all_1	40
Coq.MSets.MSetFacts.for_all_2	40
Coq.MSets.MSetFacts.exists_1	40
Coq.MSets.MSetFacts.exists_2	40
Coq.MSets.MSetFacts.elements_1	40
Coq.MSets.MSetFacts.elements_2	40
Coq.MSets.MSetFacts.In_eq_iff	40	1.28.1.28.2	search with cache (only 1: constructor; only 1: rewrite <- H; only 1: auto; only 1: rewrite <- H; only 1: auto).	8.87740015984	29963
Coq.MSets.MSetFacts.mem_iff	40	2	search with cache (only 1: intuition).	0.0308179855347	3
Coq.MSets.MSetFacts.not_mem_iff	40
Coq.MSets.MSetFacts.equal_iff	40	3	search with cache (only 1: intuition).	0.0318710803986	4
Coq.MSets.MSetFacts.subset_iff	40	4	search with cache (only 1: intuition).	0.0339241027832	5
Coq.MSets.MSetFacts.empty_iff	40
Coq.MSets.MSetFacts.is_empty_iff	40	4	search with cache (only 1: intuition).	0.0328211784363	5
Coq.MSets.MSetFacts.singleton_iff	40	4	search with cache (only 1: intuition).	0.0217859745026	5
Coq.MSets.MSetFacts.add_iff	40
Coq.MSets.MSetFacts.add_neq_iff	40	2.5.5.6	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	1.15966200829	807
Coq.MSets.MSetFacts.remove_iff	40
Coq.MSets.MSetFacts.remove_neq_iff	40	0.7	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.442584991455	26
Coq.MSets.MSetFacts.for_all_iff	40	5	search with cache (only 1: intuition).	0.427301883698	6
Coq.MSets.MSetFacts.exists_iff	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.43091917038	6
Coq.MSets.MSetFacts.elements_iff	40	9	search with cache (only 1: intuition).	0.0270760059357	10
Coq.MSets.MSetFacts.mem_b	40
Coq.MSets.MSetFacts.empty_b	40
Coq.MSets.MSetFacts.add_b	40
Coq.MSets.MSetFacts.add_neq_b	40	0.0.2.0.1.0.1.5	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (eq_dec x y); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	3.54876303673	1403
Coq.MSets.MSetFacts.remove_b	40
Coq.MSets.MSetFacts.remove_neq_b	40
Coq.MSets.MSetFacts.singleton_b	40
Coq.MSets.MSetFacts.union_b	40
Coq.MSets.MSetFacts.inter_b	40
Coq.MSets.MSetFacts.diff_b	40
Coq.MSets.MSetFacts.elements_b	40
Coq.MSets.MSetFacts.filter_b	40
Coq.MSets.MSetFacts.for_all_b	40
Coq.MSets.MSetFacts.exists_b	40
Coq.MSets.MSetFacts.In_m	40
Coq.MSets.MSetFacts.Empty_m	40	1.1.30.1.7.0	search with cache (only 1: intros EQ; only 1: intros; only 1: red; only 1: intuition; only 1: firstorder; only 1: firstorder).	1.62985396385	8320
Coq.MSets.MSetFacts.is_empty_m	40
Coq.MSets.MSetFacts.mem_m	40
Coq.MSets.MSetFacts.singleton_m	40
Coq.MSets.MSetFacts.add_m	40
Coq.MSets.MSetFacts.remove_m	40
Coq.MSets.MSetFacts.union_m	40
Coq.MSets.MSetFacts.inter_m	40
Coq.MSets.MSetFacts.diff_m	40
Coq.MSets.MSetFacts.Subset_m	40	26.1	search with cache (only 1: intros x x' Hx s s' Hs; only 1: firstorder).	4.81302499771	4775
Coq.MSets.MSetFacts.subset_m	40
Coq.MSets.MSetFacts.equal_m	40
Coq.MSets.MSetFacts.SubsetSetoid	40	32.4.0.6.4.8.6.18	search with cache (only 1: constructor; only 1: red; only 1: intros x y H; only 1: auto; only 1: red; only 1: intros x y H; only 1: intuition; only 1: firstorder).	23.8874130249	67062
Coq.MSets.MSetFacts.In_s_m	40	0.20.0.5.2	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: intros EQ; only 1: auto).	38.4925429821	20056
Coq.MSets.MSetFacts.Empty_s_m	40	3.15	search with cache (only 1: intros y z H1 H2; only 1: firstorder).	0.155488014221	453
Coq.MSets.MSetFacts.add_s_m	40	1.2.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.185335874557	22
Coq.MSets.MSetFacts.remove_s_m	40	1.4.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.164031982422	23
Coq.MSets.MSetFacts.union_s_m	40	0.6.5	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.730707883835	423
Coq.MSets.MSetFacts.inter_s_m	40	0.3.5	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.333614110947	122
Coq.MSets.MSetFacts.diff_s_m	40	0.12.5	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	1.01444292068	1283
Coq.MSets.MSetFacts.filter_equal	40
Coq.MSets.MSetFacts.filter_subset	40	1.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.048378944397	4
Coq.MSets.MSetFacts.filter_ext	40
Coq.MSets.MSetProperties.In_dec	40	1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: case (mem x s); only 1: intuition; only 1: intuition; only 1: intuition).	0.609350919724	48
Coq.MSets.MSetProperties.Add_Equal	40
Coq.MSets.MSetProperties.equal_refl	40	8	search with cache (only 1: intuition).	0.0270791053772	9
Coq.MSets.MSetProperties.equal_sym	40	2	search with cache (only 1: fsetdec).	0.05064702034	3
Coq.MSets.MSetProperties.equal_trans	40	0.0	search with cache (only 1: intuition; only 1: fsetdec).	0.074658870697	2
Coq.MSets.MSetProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0306820869446	1
Coq.MSets.MSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0508589744568	1
Coq.MSets.MSetProperties.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0515208244324	1
Coq.MSets.MSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0447468757629	1
Coq.MSets.MSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0333240032196	1
Coq.MSets.MSetProperties.subset_remove_3	40	4	search with cache (only 1: fsetdec).	0.058501958847	5
Coq.MSets.MSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0660741329193	1
Coq.MSets.MSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0795800685883	1
Coq.MSets.MSetProperties.subset_add_2	40	5.2.0	search with cache (only 1: intros; only 1: red; only 1: fsetdec).	0.065388917923	10
Coq.MSets.MSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0460588932037	1
Coq.MSets.MSetProperties.double_inclusion	40
Coq.MSets.MSetProperties.empty_is_empty_1	40	0	search with cache (only 1: intuition fsetdec).	0.0646781921387	1
Coq.MSets.MSetProperties.empty_is_empty_2	40	0	search with cache (only 1: intuition fsetdec).	0.0532960891724	1
Coq.MSets.MSetProperties.add_equal	40	0	search with cache (only 1: fsetdec).	0.0889251232147	1
Coq.MSets.MSetProperties.add_add	40	9	search with cache (only 1: intuition fsetdec).	0.1733751297	10
Coq.MSets.MSetProperties.remove_equal	40	0	search with cache (only 1: intuition fsetdec).	0.138757944107	1
Coq.MSets.MSetProperties.Equal_remove	40	2.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0501801967621	6
Coq.MSets.MSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.139328956604	1
Coq.MSets.MSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.163674116135	1
Coq.MSets.MSetProperties.singleton_equal_add	40	0	search with cache (only 1: intuition fsetdec).	0.0988230705261	1
Coq.MSets.MSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.296922922134	1
Coq.MSets.MSetProperties.union_sym	40	6	search with cache (only 1: intuition fsetdec).	0.102381944656	7
Coq.MSets.MSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.077584028244	1
Coq.MSets.MSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.113279104233	1
Coq.MSets.MSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.115718126297	1
Coq.MSets.MSetProperties.union_assoc	40	0	search with cache (only 1: intuition fsetdec).	0.17124581337	1
Coq.MSets.MSetProperties.add_union_singleton	40	0	search with cache (only 1: intuition fsetdec).	0.100781917572	1
Coq.MSets.MSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.196306943893	1
Coq.MSets.MSetProperties.union_remove_add_1	40	1	search with cache (only 1: intuition fsetdec).	0.334197998047	2
Coq.MSets.MSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.29577589035	1
Coq.MSets.MSetProperties.union_subset_1	40	0.0	search with cache (only 1: red; only 1: intuition fsetdec).	0.0490078926086	2
Coq.MSets.MSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0416851043701	1
Coq.MSets.MSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.061506986618	1
Coq.MSets.MSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0639269351959	1
Coq.MSets.MSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0672590732574	1
Coq.MSets.MSetProperties.empty_union_1	40	0	search with cache (only 1: intuition fsetdec).	0.0790519714355	1
Coq.MSets.MSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0758051872253	1
Coq.MSets.MSetProperties.not_in_union	40	0	search with cache (only 1: intuition fsetdec).	0.0758547782898	1
Coq.MSets.MSetProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0873210430145	1
Coq.MSets.MSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0750238895416	1
Coq.MSets.MSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.108962059021	1
Coq.MSets.MSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.10146021843	1
Coq.MSets.MSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.154406070709	1
Coq.MSets.MSetProperties.union_inter_1	40	0	search with cache (only 1: intuition fsetdec).	0.200803041458	1
Coq.MSets.MSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.217668056488	1
Coq.MSets.MSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.182533025742	1
Coq.MSets.MSetProperties.inter_add_2	40	2.1	search with cache (only 1: intuition; only 1: intuition fsetdec).	0.21576499939	20
Coq.MSets.MSetProperties.empty_inter_1	40	0	search with cache (only 1: intuition fsetdec).	0.0573909282684	1
Coq.MSets.MSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.054927110672	1
Coq.MSets.MSetProperties.inter_subset_1	40	2	search with cache (only 1: intuition fsetdec).	0.0539441108704	3
Coq.MSets.MSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0422048568726	1
Coq.MSets.MSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0589289665222	1
Coq.MSets.MSetProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0667419433594	1
Coq.MSets.MSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.078647851944	1
Coq.MSets.MSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0512108802795	1
Coq.MSets.MSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.115253925323	1
Coq.MSets.MSetProperties.remove_diff_singleton	40	0	search with cache (only 1: intuition fsetdec).	0.116261959076	1
Coq.MSets.MSetProperties.diff_inter_empty	40	0	search with cache (only 1: intuition fsetdec).	0.182276010513	1
Coq.MSets.MSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.144947052002	1
Coq.MSets.MSetProperties.Add_add	40	0.0.17	search with cache (only 1: intros P; only 1: rewrite add_spec; only 1: intuition).	0.628216981888	227
Coq.MSets.MSetProperties.Add_remove	40	0.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.214731931686	16
Coq.MSets.MSetProperties.union_Add	40	1.4	search with cache (only 1: expAdd; only 1: intuition fsetdec).	0.256767988205	7
Coq.MSets.MSetProperties.inter_Add	40	0.4	search with cache (only 1: expAdd; only 1: fsetdec).	0.414594173431	6
Coq.MSets.MSetProperties.union_Equal	40	0.6	search with cache (only 1: expAdd; only 1: fsetdec).	0.485493898392	17
Coq.MSets.MSetProperties.inter_Add_2	40	0.1.4	search with cache (only 1: expAdd; only 1: intros; only 1: fsetdec).	0.406660079956	8
Coq.MSets.MSetProperties.elements_Empty	40
Coq.MSets.MSetProperties.elements_empty	40
Coq.MSets.MSetProperties.of_list_1	40
Coq.MSets.MSetProperties.of_list_2	40
Coq.MSets.MSetProperties.of_list_3	40
Coq.MSets.MSetProperties.fold_spec_right	40
Coq.MSets.MSetProperties.fold_rec	40
Coq.MSets.MSetProperties.fold_rec_bis	40
Coq.MSets.MSetProperties.fold_rec_nodep	40	0.0.0.1.35.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intros; only 1: eauto).	4.60186195374	6196
Coq.MSets.MSetProperties.fold_rec_weak	40
Coq.MSets.MSetProperties.fold_rel	40
Coq.MSets.MSetProperties.set_induction	40
Coq.MSets.MSetProperties.set_induction_bis	40
Coq.MSets.MSetProperties.fold_identity	40	4.2.4.13.5	search with cache (only 1: intros s Hsame; only 1: apply fold_rec_bis; only 1: fsetdec; only 1: intuition; only 1: fsetdec).	17.417320013	15234
Coq.MSets.MSetProperties.fold_0	40
Coq.MSets.MSetProperties.fold_1	40
Coq.MSets.MSetProperties.fold_2	40
Coq.MSets.MSetProperties.fold_1b	40
Coq.MSets.MSetProperties.fold_commutes	40
Coq.MSets.MSetProperties.fold_init	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.fold_empty	40
Coq.MSets.MSetProperties.fold_add	40
Coq.MSets.MSetProperties.add_fold	40
Coq.MSets.MSetProperties.remove_fold_1	40
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0243611335754	3
Coq.MSets.MSetProperties.fold_union_inter	40
Coq.MSets.MSetProperties.fold_diff_inter	40
Coq.MSets.MSetProperties.fold_union	40
Coq.MSets.MSetProperties.fold_plus	40
Coq.MSets.MSetProperties.cardinal_fold	40
Coq.MSets.MSetProperties.cardinal_0	40
Coq.MSets.MSetProperties.cardinal_1	40
Coq.MSets.MSetProperties.cardinal_2	40
Coq.MSets.MSetProperties.cardinal_Empty	40
Coq.MSets.MSetProperties.cardinal_inv_1	40	0.0.1.0.0.0.5.3.11.2.16	search with cache (only 1: intros P; only 1: rewrite elements_Empty, cardinal_spec; only 1: intros; only 1: rewrite <- elements_Empty; only 1: intro x; only 1: red; only 1: intros; only 1: rewrite elements_iff in H0; only 1: destruct H0; only 1: discriminate; only 1: discriminate).	36.2039480209	26272
Coq.MSets.MSetProperties.cardinal_inv_2	40
Coq.MSets.MSetProperties.cardinal_inv_2b	40
Coq.MSets.MSetProperties.Equal_cardinal	40
Coq.MSets.MSetProperties.cardinal_m	40
Coq.MSets.MSetProperties.empty_cardinal	40	1.0	search with cache (only 1: apply cardinal_1; only 1: auto with *).	0.0316498279572	3
Coq.MSets.MSetProperties.singleton_cardinal	40
Coq.MSets.MSetProperties.diff_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal_lt	40
Coq.MSets.MSetProperties.union_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal_inter	40
Coq.MSets.MSetProperties.union_cardinal_le	40	13.2.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with *).	0.676275014877	1155
Coq.MSets.MSetProperties.add_cardinal_1	40	8	search with cache (only 1: auto with set).	0.0748438835144	64
Coq.MSets.MSetProperties.add_cardinal_2	40	1.1.0.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto with set).	0.0477910041809	31
Coq.MSets.MSetProperties.remove_cardinal_1	40	1.3.0.0.0.0.0.2.0.0.0.4	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: eauto with set relations; only 1: eauto with set relations).	1.57716798782	2762
Coq.MSets.MSetProperties.remove_cardinal_2	40	2.1	search with cache (only 1: intros; only 1: auto with *).	0.102030992508	55
Coq.MSets.MSetProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.gtb_1	40
Coq.MSets.MSetProperties.leb_1	40
Coq.MSets.MSetProperties.gtb_compat	40
Coq.MSets.MSetProperties.leb_compat	40
Coq.MSets.MSetProperties.elements_split	40
Coq.MSets.MSetProperties.elements_Add	40
Coq.MSets.MSetProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.set_induction_max	40
Coq.MSets.MSetProperties.set_induction_min	40
Coq.MSets.MSetProperties.fold_3	40
Coq.MSets.MSetProperties.fold_4	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0238039493561	3
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0242211818695	3
Coq.MSets.MSetProperties.choose_equal	40
Coq.MSets.MSetAVL.singleton_spec	40
Coq.MSets.MSetAVL.singleton_ok	40	14	search with cache (only 1: intuition).	0.0270240306854	75
Coq.MSets.MSetAVL.create_spec	40
Coq.MSets.MSetAVL.create_ok	40	0.0.0.0.22	search with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto with *; only 1: auto with *).	0.678598880768	464
Coq.MSets.MSetAVL.bal_spec	40
Coq.MSets.MSetAVL.bal_ok	40
Coq.MSets.MSetAVL.add_spec'	40
Coq.MSets.MSetAVL.add_spec	40	0.0.2.0.0.2.1.0.0.16	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).	3.80481004715	4786
Coq.MSets.MSetAVL.add_ok	40
Coq.MSets.MSetAVL.join_spec	40
Coq.MSets.MSetAVL.join_ok	40
Coq.MSets.MSetAVL.remove_min_spec	40
Coq.MSets.MSetAVL.remove_min_ok	40
Coq.MSets.MSetAVL.remove_min_gt_tree	40
Coq.MSets.MSetAVL.merge_spec	40
Coq.MSets.MSetAVL.merge_ok	40
Coq.MSets.MSetAVL.remove_spec	40
Coq.MSets.MSetAVL.remove_ok	40
Coq.MSets.MSetAVL.concat_spec	40
Coq.MSets.MSetAVL.concat_ok	40
Coq.MSets.MSetAVL.split_spec1	40
Coq.MSets.MSetAVL.split_spec2	40
Coq.MSets.MSetAVL.split_spec3	40
Coq.MSets.MSetAVL.split_ok	40
Coq.MSets.MSetAVL.split_ok1	40
Coq.MSets.MSetAVL.split_ok2	40	0.0.2	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0176210403442	5
Coq.MSets.MSetAVL.inter_spec_ok	40
Coq.MSets.MSetAVL.inter_spec	40
Coq.MSets.MSetAVL.inter_ok	40
Coq.MSets.MSetAVL.diff_spec_ok	40
Coq.MSets.MSetAVL.diff_spec	40
Coq.MSets.MSetAVL.diff_ok	40
Coq.MSets.MSetAVL.union_spec	40
Coq.MSets.MSetAVL.union_ok	40
Coq.MSets.MSetAVL.filter_spec	40
Coq.MSets.MSetAVL.filter_weak_spec	40
Coq.MSets.MSetAVL.filter_ok	40
Coq.MSets.MSetAVL.partition_spec1'	40
Coq.MSets.MSetAVL.partition_spec2'	40	0.1.9.0.2	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.660421133041	400
Coq.MSets.MSetAVL.partition_spec1	40
Coq.MSets.MSetAVL.partition_spec2	40
Coq.MSets.MSetAVL.partition_ok1	40
Coq.MSets.MSetAVL.partition_ok2	40
Coq.MSets.MSetEqProperties.mem_eq	40
Coq.MSets.MSetEqProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.subset_mem_2	40	3.0.6	search with cache (only 1: intro H; only 1: intros; only 1: eauto with set relations).	0.0632438659668	60
Coq.MSets.MSetEqProperties.empty_mem	40
Coq.MSets.MSetEqProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.choose_mem_1	40	2.5	search with cache (only 1: intro H; only 1: auto with set).	0.0255448818207	14
Coq.MSets.MSetEqProperties.choose_mem_2	40	0.0.5	search with cache (only 1: intro H; only 1: rewrite <- is_empty_iff; only 1: auto with set).	0.0366718769073	13
Coq.MSets.MSetEqProperties.add_mem_1	40	12	search with cache (only 1: auto with *).	0.0690519809723	78
Coq.MSets.MSetEqProperties.add_mem_2	40
Coq.MSets.MSetEqProperties.remove_mem_1	40
Coq.MSets.MSetEqProperties.remove_mem_2	40
Coq.MSets.MSetEqProperties.singleton_equal_add	40	13	search with cache (only 1: auto with *).	0.0605130195618	93
Coq.MSets.MSetEqProperties.union_mem	40
Coq.MSets.MSetEqProperties.inter_mem	40
Coq.MSets.MSetEqProperties.diff_mem	40
Coq.MSets.MSetEqProperties.mem_3	40	0.3.6	search with cache (only 1: intro H; only 1: rewrite <- not_mem_iff; only 1: eauto).	0.0758979320526	58
Coq.MSets.MSetEqProperties.mem_4	40
Coq.MSets.MSetEqProperties.equal_refl	40	3.0.1.1	search with cache (only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: intuition).	0.032299041748	9
Coq.MSets.MSetEqProperties.equal_sym	40
Coq.MSets.MSetEqProperties.equal_trans	40	2.5.6	search with cache (only 1: intro H; only 1: rewrite (equal_2 H); only 1: auto).	0.714474916458	207
Coq.MSets.MSetEqProperties.equal_equal	40	1.0.6	search with cache (only 1: intro H; only 1: rewrite (equal_2 H); only 1: auto).	0.0276608467102	14
Coq.MSets.MSetEqProperties.equal_cardinal	40	2.0.6	search with cache (only 1: intro H; only 1: rewrite (equal_2 H); only 1: auto).	0.0386319160461	35
Coq.MSets.MSetEqProperties.subset_refl	40	2.1	search with cache (only 1: apply subset_1; only 1: intuition).	0.0205800533295	5
Coq.MSets.MSetEqProperties.subset_antisym	40	4.3.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: intuition).	0.0519080162048	11
Coq.MSets.MSetEqProperties.subset_trans	40	7.0	search with cache (only 1: intros; only 1: eauto with set relations).	0.629467010498	15
Coq.MSets.MSetEqProperties.subset_equal	40	4.8	search with cache (only 1: intro H; only 1: auto with set).	0.0832531452179	96
Coq.MSets.MSetEqProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0175759792328	1
Coq.MSets.MSetEqProperties.add_equal	40	0	search with cache (only 1: auto with set).	0.0175271034241	1
Coq.MSets.MSetEqProperties.remove_mem_3	40	7.9	search with cache (only 1: intro H; only 1: eauto with set relations).	0.953037023544	473
Coq.MSets.MSetEqProperties.remove_equal	40
Coq.MSets.MSetEqProperties.add_remove	40
Coq.MSets.MSetEqProperties.remove_add	40
Coq.MSets.MSetEqProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.singleton_mem_1	40	15	search with cache (only 1: auto with *).	0.053475856781	91
Coq.MSets.MSetEqProperties.singleton_mem_2	40	4.9.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).	2.14174795151	198
Coq.MSets.MSetEqProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.union_sym	40	0	search with cache (only 1: auto with set).	0.0167000293732	1
Coq.MSets.MSetEqProperties.union_subset_equal	40	1.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0433430671692	4
Coq.MSets.MSetEqProperties.union_equal_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0191330909729	2
Coq.MSets.MSetEqProperties.union_equal_2	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0191488265991	2
Coq.MSets.MSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.0164070129395	1
Coq.MSets.MSetEqProperties.add_union_singleton	40	0	search with cache (only 1: auto with set).	0.0163550376892	1
Coq.MSets.MSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0163488388062	1
Coq.MSets.MSetEqProperties.union_subset_1	40	1	search with cache (only 1: auto with set relations).	0.0166571140289	2
Coq.MSets.MSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0157940387726	1
Coq.MSets.MSetEqProperties.union_subset_3	40	1.0.1	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: intros; only 1: auto with set).	0.0637500286102	14
Coq.MSets.MSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0167670249939	1
Coq.MSets.MSetEqProperties.inter_subset_equal	40	2.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0259909629822	5
Coq.MSets.MSetEqProperties.inter_equal_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0190920829773	2
Coq.MSets.MSetEqProperties.inter_equal_2	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0190680027008	2
Coq.MSets.MSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.016175031662	1
Coq.MSets.MSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0163741111755	1
Coq.MSets.MSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0161600112915	1
Coq.MSets.MSetEqProperties.inter_add_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.453197002411	2
Coq.MSets.MSetEqProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.inter_subset_1	40	2.0	search with cache (only 1: apply subset_1; only 1: auto with set).	0.0163021087646	4
Coq.MSets.MSetEqProperties.inter_subset_2	40	2.0	search with cache (only 1: apply subset_1; only 1: auto with set).	0.0162220001221	4
Coq.MSets.MSetEqProperties.inter_subset_3	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0353260040283	2
Coq.MSets.MSetEqProperties.diff_subset	40	2.0	search with cache (only 1: apply subset_1; only 1: auto with set).	0.0161619186401	4
Coq.MSets.MSetEqProperties.diff_subset_equal	40	2.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0259530544281	5
Coq.MSets.MSetEqProperties.remove_inter_singleton	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0989611148834	2
Coq.MSets.MSetEqProperties.diff_inter_empty	40	0.1	search with cache (only 1: apply equal_1; only 1: auto with set).	0.0163068771362	3
Coq.MSets.MSetEqProperties.diff_inter_all	40	0.1	search with cache (only 1: apply equal_1; only 1: auto with set).	0.0163040161133	3
Coq.MSets.MSetEqProperties.set_rec	40
Coq.MSets.MSetEqProperties.exclusive_set	40
Coq.MSets.MSetEqProperties.fold_empty	40	1.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0233111381531	3
Coq.MSets.MSetEqProperties.fold_equal	40	0.2.0.1.0.0.0.5.0.16	search with cache (only 1: apply set_induction; only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set; only 1: intros; only 1: eauto; only 1: tauto).	31.0089540482	36993
Coq.MSets.MSetEqProperties.fold_add	40	1.10.0.0.0.2.4	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: eauto with *; only 1: auto with set).	2.57017397881	3988
Coq.MSets.MSetEqProperties.add_fold	40
Coq.MSets.MSetEqProperties.remove_fold_1	40	5.8.0.0.0.9.6.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto with set relations; only 1: auto with set).	19.5965030193	32310
Coq.MSets.MSetEqProperties.remove_fold_2	40
Coq.MSets.MSetEqProperties.fold_union	40
Coq.MSets.MSetEqProperties.add_cardinal_1	40	0.5	search with cache (only 1: intros i s; only 1: auto with set).	0.0583519935608	40
Coq.MSets.MSetEqProperties.add_cardinal_2	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0524458885193	10
Coq.MSets.MSetEqProperties.remove_cardinal_1	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.030385017395	10
Coq.MSets.MSetEqProperties.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.union_cardinal	40	0.0.0.0.0.0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: intros; only 1: auto).	0.414757013321	476
Coq.MSets.MSetEqProperties.subset_cardinal	40	8	search with cache (only 1: auto with set).	0.0406410694122	27
Coq.MSets.MSetEqProperties.Comp'	40	0.19.0.3.3	search with cache (only 1: red; only 1: red; only 1: intuition; only 1: rewrite <- H; only 1: intuition).	3.86028409004	1957
Coq.MSets.MSetEqProperties.filter_mem	40
Coq.MSets.MSetEqProperties.for_all_filter	40
Coq.MSets.MSetEqProperties.exists_filter	40
Coq.MSets.MSetEqProperties.partition_filter_1	40	28	search with cache (only 1: auto with set).	1.56036996841	4025
Coq.MSets.MSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0223751068115	1
Coq.MSets.MSetEqProperties.filter_add_1	40
Coq.MSets.MSetEqProperties.filter_add_2	40
Coq.MSets.MSetEqProperties.add_filter_1	40
Coq.MSets.MSetEqProperties.add_filter_2	40
Coq.MSets.MSetEqProperties.union_filter	40
Coq.MSets.MSetEqProperties.filter_union	40	0.0.0.0.1.1.1.2.1.2	search with cache (only 1: intro H; only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	8.81029200554	881
Coq.MSets.MSetEqProperties.for_all_mem_1	40	18.0.0.0.0.2.3	search with cache (only 1: intro H; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: auto with set).	3.50035619736	8385
Coq.MSets.MSetEqProperties.for_all_mem_2	40	0.8.4.18.12	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: auto with set; only 1: auto).	14.2543859482	52210
Coq.MSets.MSetEqProperties.for_all_mem_3	40
Coq.MSets.MSetEqProperties.for_all_mem_4	40
Coq.MSets.MSetEqProperties.for_all_exists	40
Coq.MSets.MSetEqProperties.Comp'	40	0.0.1.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0213339328766	5
Coq.MSets.MSetEqProperties.exists_mem_1	40
Coq.MSets.MSetEqProperties.exists_mem_2	40
Coq.MSets.MSetEqProperties.exists_mem_3	40	12.16.4.0.16.1	search with cache (only 1: intros; only 1: apply exists_1; only 1: auto; only 1: red; only 1: exists x; only 1: auto with set).	6.46740698814	21494
Coq.MSets.MSetEqProperties.exists_mem_4	40
Coq.MSets.MSetEqProperties.sum_plus	40
Coq.MSets.MSetEqProperties.sum_filter	40
Coq.MSets.MSetEqProperties.fold_compat	40
Coq.MSets.MSetEqProperties.sum_compat	40
Coq.MSets.MSetDecide.test_push	40	0.12.0	search with cache (only 1: intros EQ; only 1: intros x y H; only 1: auto).	0.342518806458	131
Coq.MSets.MSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.164599180222	3
Coq.MSets.MSetDecide.eq_refl_iff	40	3	search with cache (only 1: intuition).	0.0147271156311	4
Coq.MSets.MSetDecide.dec_In	40
Coq.MSets.MSetDecide.dec_eq	40
Coq.MSets.MSetDecide.test_eq_trans_1	40
Coq.MSets.MSetDecide.test_eq_trans_2	40	7.0	search with cache (only 1: intros x y H; only 1: fsetdec).	0.0758941173553	17
Coq.MSets.MSetDecide.test_eq_neq_trans_1	40	7.0	search with cache (only 1: intros x y H; only 1: fsetdec).	0.392331838608	32
Coq.MSets.MSetDecide.test_eq_neq_trans_2	40	7.0	search with cache (only 1: intros x y H; only 1: fsetdec).	0.341169834137	23
Coq.MSets.MSetDecide.test_In_singleton	40	26	search with cache (only 1: simpl_relation).	0.19340801239	659
Coq.MSets.MSetDecide.test_add_In	40	7	search with cache (only 1: fsetdec).	0.0524640083313	37
Coq.MSets.MSetDecide.test_Subset_add_remove	40	7.16.13.2	search with cache (only 1: intros x y; only 1: red; only 1: generalize dependent y; only 1: fsetdec).	6.59566092491	13786
Coq.MSets.MSetDecide.test_eq_disjunction	40	7	search with cache (only 1: fsetdec).	0.108906030655	41
Coq.MSets.MSetDecide.test_not_In_disj	40	7.0	search with cache (only 1: intros x y H; only 1: fsetdec).	0.103313207626	24
Coq.MSets.MSetDecide.test_not_In_conj	40	7.0	search with cache (only 1: intros x y H; only 1: fsetdec).	0.497694969177	17
Coq.MSets.MSetDecide.test_iff_conj	40	7	search with cache (only 1: fsetdec).	0.142600059509	55
Coq.MSets.MSetDecide.test_set_ops_1	40	7	search with cache (only 1: fsetdec).	0.200120925903	46
Coq.MSets.MSetDecide.eq_chain_test	40	7.0	search with cache (only 1: intros x y H; only 1: fsetdec).	0.226501941681	17
Coq.MSets.MSetDecide.test_too_complex	40	3.1.8.0	search with cache (only 1: intros x y H; only 1: intros ? ? LT ->; only 1: auto; only 1: intuition).	0.468962907791	436
Coq.MSets.MSetDecide.function_test_1	40	13.3.1	search with cache (only 1: intros EQ; only 1: intros P; only 1: fsetdec).	0.824005126953	982
Coq.MSets.MSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0722749233246	1
Coq.MSets.MSetDecide.test_baydemir	40	2.0.0.0	search with cache (only 1: intros EQ; only 1: intros x y H; only 1: intuition; only 1: fsetdec).	0.0569169521332	6
Coq.MSets.MSetGenTree.ltb_tree_iff	40
Coq.MSets.MSetGenTree.gtb_tree_iff	40
Coq.MSets.MSetGenTree.isok_iff	40
Coq.MSets.MSetGenTree.isok_Ok	40
Coq.MSets.MSetGenTree.In_1	40
Coq.MSets.MSetGenTree.In_compat	40
Coq.MSets.MSetGenTree.In_node_iff	40	5.0.0	search with cache (only 1: intros x y H; only 1: intros; only 1: intuition_in).	0.0854909420013	8
Coq.MSets.MSetGenTree.In_leaf_iff	40	4.20	search with cache (only 1: intro H; only 1: intuition_in).	0.14469909668	316
Coq.MSets.MSetGenTree.lt_leaf	40	5.0.0	search with cache (only 1: intros; only 1: repeat red; only 1: intuition_in).	0.0316460132599	20
Coq.MSets.MSetGenTree.gt_leaf	40	3.0	search with cache (only 1: red; only 1: intuition_in).	0.0303959846497	19
Coq.MSets.MSetGenTree.lt_tree_node	40	0.9.1.3	search with cache (only 1: intuition_in; only 1: compute; only 1: intuition_in; only 1: order).	1.45772790909	878
Coq.MSets.MSetGenTree.gt_tree_node	40	0.9.1.3	search with cache (only 1: intuition_in; only 1: compute; only 1: intuition_in; only 1: order).	1.68781805038	808
Coq.MSets.MSetGenTree.lt_tree_not_in	40	3.0.3	search with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.0663251876831	23
Coq.MSets.MSetGenTree.lt_tree_trans	40	8	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0786209106445	38
Coq.MSets.MSetGenTree.gt_tree_not_in	40	0.4.0	search with cache (only 1: intros x y H; only 1: intro; only 1: order).	0.0179319381714	7
Coq.MSets.MSetGenTree.gt_tree_trans	40	8	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0789768695831	38
Coq.MSets.MSetGenTree.lt_tree_compat	40
Coq.MSets.MSetGenTree.gt_tree_compat	40	1.0.0.4.0.17.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	4.84852290154	8620
Coq.MSets.MSetGenTree.empty_spec	40	0.25	search with cache (only 1: intro H; only 1: auto).	0.236509084702	658
Coq.MSets.MSetGenTree.empty_ok	40	2.3.0	search with cache (only 1: repeat red; only 1: apply <- isok_iff; only 1: intuition).	0.0170178413391	8
Coq.MSets.MSetGenTree.is_empty_spec	40
Coq.MSets.MSetGenTree.mem_spec	40
Coq.MSets.MSetGenTree.min_elt_spec1	40
Coq.MSets.MSetGenTree.min_elt_spec2	40
Coq.MSets.MSetGenTree.min_elt_spec3	40
Coq.MSets.MSetGenTree.max_elt_spec1	40
Coq.MSets.MSetGenTree.max_elt_spec2	40
Coq.MSets.MSetGenTree.max_elt_spec3	40
Coq.MSets.MSetGenTree.choose_spec1	40
Coq.MSets.MSetGenTree.choose_spec2	40
Coq.MSets.MSetGenTree.choose_spec3	40
Coq.MSets.MSetGenTree.elements_spec1'	40
Coq.MSets.MSetGenTree.elements_spec1	40
Coq.MSets.MSetGenTree.elements_spec2'	40
Coq.MSets.MSetGenTree.elements_spec2	40
Coq.MSets.MSetGenTree.elements_spec2w	40
Coq.MSets.MSetGenTree.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.elements_cardinal	40
Coq.MSets.MSetGenTree.elements_app	40
Coq.MSets.MSetGenTree.elements_node	40
Coq.MSets.MSetGenTree.rev_elements_app	40
Coq.MSets.MSetGenTree.rev_elements_node	40
Coq.MSets.MSetGenTree.rev_elements_rev	40
Coq.MSets.MSetGenTree.sorted_app_inv	40
Coq.MSets.MSetGenTree.elements_sort_ok	40
Coq.MSets.MSetGenTree.for_all_spec	40
Coq.MSets.MSetGenTree.exists_spec	40
Coq.MSets.MSetGenTree.fold_spec'	40
Coq.MSets.MSetGenTree.fold_spec	40
Coq.MSets.MSetGenTree.subsetl_spec	40
Coq.MSets.MSetGenTree.subsetr_spec	40
Coq.MSets.MSetGenTree.subset_spec	40
Coq.MSets.MSetGenTree.eq_equiv	40
Coq.MSets.MSetGenTree.eq_Leq	40
Coq.MSets.MSetGenTree.lt_strorder	40
Coq.MSets.MSetGenTree.lt_compat	40
Coq.MSets.MSetGenTree.flatten_e_elements	40
Coq.MSets.MSetGenTree.cons_1	40	0.2.34.2.20.18	search with cache (only 1: induction s as [| c l Hl x r Hr]; only 1: do 4 (split; trivial); only 1: intro H; only 1: simpl; only 1: rewrite Hl; only 1: now rewrite elements_node, app_assoc_reverse).	34.2102000713	84860
Coq.MSets.MSetGenTree.compare_end_Cmp	40
Coq.MSets.MSetGenTree.compare_more_Cmp	40
Coq.MSets.MSetGenTree.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.compare_Cmp	40
Coq.MSets.MSetGenTree.compare_spec	40
Coq.MSets.MSetGenTree.equal_spec	40
Coq.MSets.MSetGenTree.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.mindepth_cardinal	40
Coq.MSets.MSetGenTree.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.In_compat	40
Coq.MSets.MSetInterface.eq_equiv	40
Coq.MSets.MSetInterface.eq_dec	40
Coq.MSets.MSetInterface.mem_spec	40
Coq.MSets.MSetInterface.equal_spec	40
Coq.MSets.MSetInterface.subset_spec	40
Coq.MSets.MSetInterface.empty_spec	40
Coq.MSets.MSetInterface.is_empty_spec	40
Coq.MSets.MSetInterface.add_spec	40
Coq.MSets.MSetInterface.remove_spec	40
Coq.MSets.MSetInterface.singleton_spec	40
Coq.MSets.MSetInterface.union_spec	40
Coq.MSets.MSetInterface.inter_spec	40
Coq.MSets.MSetInterface.diff_spec	40
Coq.MSets.MSetInterface.fold_spec	40
Coq.MSets.MSetInterface.cardinal_spec	40
Coq.MSets.MSetInterface.filter_spec	40
Coq.MSets.MSetInterface.for_all_spec	40
Coq.MSets.MSetInterface.exists_spec	40
Coq.MSets.MSetInterface.partition_spec1	40
Coq.MSets.MSetInterface.partition_spec2	40
Coq.MSets.MSetInterface.elements_spec1	40
Coq.MSets.MSetInterface.elements_spec2w	40
Coq.MSets.MSetInterface.choose_spec1	40
Coq.MSets.MSetInterface.choose_spec2	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.compare_spec	40
Coq.MSets.MSetInterface.elements_spec2	40
Coq.MSets.MSetInterface.min_elt_spec1	40
Coq.MSets.MSetInterface.min_elt_spec2	40
Coq.MSets.MSetInterface.min_elt_spec3	40
Coq.MSets.MSetInterface.max_elt_spec1	40
Coq.MSets.MSetInterface.max_elt_spec2	40
Coq.MSets.MSetInterface.max_elt_spec3	40
Coq.MSets.MSetInterface.choose_spec3	40
Coq.MSets.MSetInterface.eq_equiv	40
Coq.MSets.MSetInterface.Proper_instance_0	40
Coq.MSets.MSetInterface.Proper_instance_1	40
Coq.MSets.MSetInterface.Proper_instance_2	40
Coq.MSets.MSetInterface.Proper_instance_3	40
Coq.MSets.MSetInterface.Proper_instance_4	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_empty_r	40	25.2.6	search with cache (only 1: intros x y z; only 1: intro H; only 1: firstorder).	3.85497903824	9272
Coq.MSets.MSetInterface.lt_empty_l	40
Coq.MSets.MSetInterface.lt_add_lt	40
Coq.MSets.MSetInterface.lt_add_eq	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat'	40
Coq.MSets.MSetInterface.eq_cons	40
Coq.MSets.MSetInterface.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.In_In	40	2	search with cache (only 1: tauto).	0.0256049633026	20
Coq.MSets.MSetToFiniteSet.Subset_Included	40	1.2.1	search with cache (only 1: compute; only 1: intros; only 1: auto).	0.0215439796448	7
Coq.MSets.MSetToFiniteSet.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.empty_Empty_Set	40	12.88.40	search with cache (only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	5.98492693901	38349
Coq.MSets.MSetToFiniteSet.Empty_Empty_set	40	11.0.0.0.0.13.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).	3.54468798637	4478
Coq.MSets.MSetToFiniteSet.singleton_Singleton	40	2.15.0.13.13	search with cache (only 1: simpl_relation; only 1: intuition; only 1: intros s Hsame; only 1: apply elements_iff; only 1: intuition).	1.57065701485	2371
Coq.MSets.MSetToFiniteSet.union_Union	40
Coq.MSets.MSetToFiniteSet.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.2.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	1.6265668869	999
Coq.MSets.MSetToFiniteSet.add_Add	40
Coq.MSets.MSetToFiniteSet.Add_Add	40
Coq.MSets.MSetToFiniteSet.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.Ens_to_MSet	40
Coq.MSets.MSetWeakList.In_compat	40	0.7.0.7.11	search with cache (only 1: constructor; only 1: subst; only 1: now rewrite H; only 1: subst; only 1: now rewrite H).	5.04554510117	10023
Coq.MSets.MSetWeakList.mem_spec	40
Coq.MSets.MSetWeakList.isok_iff	40
Coq.MSets.MSetWeakList.isok_Ok	40
Coq.MSets.MSetWeakList.add_spec	40
Coq.MSets.MSetWeakList.add_ok	40
Coq.MSets.MSetWeakList.remove_spec	40
Coq.MSets.MSetWeakList.remove_ok	40
Coq.MSets.MSetWeakList.singleton_ok	40	11	search with cache (only 1: intuition).	0.0272200107574	42
Coq.MSets.MSetWeakList.singleton_spec	40
Coq.MSets.MSetWeakList.empty_ok	40	0	search with cache (only 1: intuition).	0.0149071216583	1
Coq.MSets.MSetWeakList.empty_spec	40	0.9.11.3	search with cache (only 1: unfold empty; only 1: repeat red; only 1: intros; only 1: inv).	0.452016115189	951
Coq.MSets.MSetWeakList.is_empty_spec	40
Coq.MSets.MSetWeakList.elements_spec1	40	6.3	search with cache (only 1: intros; only 1: intuition).	0.0340399742126	53
Coq.MSets.MSetWeakList.elements_spec2w	40	15	search with cache (only 1: intuition).	0.0440220832825	118
Coq.MSets.MSetWeakList.fold_spec	40	14	search with cache (only 1: intuition).	0.0473389625549	102
Coq.MSets.MSetWeakList.union_ok	40
Coq.MSets.MSetWeakList.union_spec	40
Coq.MSets.MSetWeakList.inter_ok	40
Coq.MSets.MSetWeakList.inter_spec	40
Coq.MSets.MSetWeakList.diff_ok	40
Coq.MSets.MSetWeakList.diff_spec	40
Coq.MSets.MSetWeakList.subset_spec	40
Coq.MSets.MSetWeakList.equal_spec	40
Coq.MSets.MSetWeakList.choose_spec1	40
Coq.MSets.MSetWeakList.choose_spec2	40	0.2.0.0.0.10.3.20	search with cache (only 1: intros; only 1: unfold Empty, empty; only 1: induction s; only 1: red; only 1: intros; only 1: inv; only 1: intros; only 1: discriminate).	5.47264790535	9153
Coq.MSets.MSetWeakList.cardinal_spec	40	1.0	search with cache (only 1: unfold elements; only 1: auto).	0.0139110088348	3
Coq.MSets.MSetWeakList.filter_spec'	40
Coq.MSets.MSetWeakList.filter_spec	40
Coq.MSets.MSetWeakList.filter_ok	40
Coq.MSets.MSetWeakList.for_all_spec	40
Coq.MSets.MSetWeakList.exists_spec	40
Coq.MSets.MSetWeakList.partition_spec1	40
Coq.MSets.MSetWeakList.partition_spec2	40
Coq.MSets.MSetWeakList.partition_ok1'	40
Coq.MSets.MSetWeakList.partition_ok2'	40	0.0.0.0.0.0.1.0.0.0.1.0.0.0.4	search with cache (only 1: induction s; only 1: auto; only 1: intros; only 1: inv; only 1: destruct (partition f s); only 1: generalize (IHs H1 f x); only 1: simpl in *; only 1: destruct (partition f s); only 1: destruct (f a); only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	34.6643228531	9980
Coq.MSets.MSetWeakList.partition_ok1	40
Coq.MSets.MSetWeakList.partition_ok2	40
Coq.MSets.MSetList.inf_iff	40
Coq.MSets.MSetList.isok_iff	40
Coq.MSets.MSetList.isok_Ok	40	1	search with cache (only 1: tauto).	0.0116169452667	2
Coq.MSets.MSetList.mem_spec	40
Coq.MSets.MSetList.add_inf	40
Coq.MSets.MSetList.add_ok	40
Coq.MSets.MSetList.add_spec	40
Coq.MSets.MSetList.remove_inf	40
Coq.MSets.MSetList.remove_ok	40	0.0.0.0.0.0.0.0.2.1.6.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	3.56768798828	3395
Coq.MSets.MSetList.remove_spec	40
Coq.MSets.MSetList.singleton_ok	40	0	search with cache (only 1: auto).	0.0160219669342	1
Coq.MSets.MSetList.singleton_spec	40
Coq.MSets.MSetList.union_inf	40
Coq.MSets.MSetList.union_ok	40
Coq.MSets.MSetList.union_spec	40
Coq.MSets.MSetList.inter_inf	40
Coq.MSets.MSetList.inter_ok	40
Coq.MSets.MSetList.inter_spec	40
Coq.MSets.MSetList.diff_inf	40
Coq.MSets.MSetList.diff_ok	40	14.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.902924060822	722
Coq.MSets.MSetList.diff_spec	40
Coq.MSets.MSetList.equal_spec	40
Coq.MSets.MSetList.subset_spec	40
Coq.MSets.MSetList.empty_ok	40	1	search with cache (only 1: intuition).	0.0155038833618	2
Coq.MSets.MSetList.empty_spec	40	34	search with cache (only 1: easy).	0.693863153458	1493
Coq.MSets.MSetList.is_empty_spec	40
Coq.MSets.MSetList.elements_spec1	40	8	search with cache (only 1: tauto).	0.0248439311981	33
Coq.MSets.MSetList.elements_spec2	40	6.35.4.6	search with cache (only 1: intro l; only 1: intro H; only 1: inv; only 1: auto).	2.31637597084	12442
Coq.MSets.MSetList.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0216150283813	3
Coq.MSets.MSetList.min_elt_spec1	40
Coq.MSets.MSetList.min_elt_spec2	40
Coq.MSets.MSetList.min_elt_spec3	40	8.0.4.15	search with cache (only 1: intros [| x' s'] Hs Hs'; only 1: intro H; only 1: inv; only 1: discriminate).	1.88256406784	2854
Coq.MSets.MSetList.max_elt_spec1	40
Coq.MSets.MSetList.max_elt_spec2	40
Coq.MSets.MSetList.max_elt_spec3	40
Coq.MSets.MSetList.choose_spec3	40
Coq.MSets.MSetList.fold_spec	40	2	search with cache (only 1: tauto).	0.0135908126831	3
Coq.MSets.MSetList.cardinal_spec	40	0.0	search with cache (only 1: intro s; only 1: tauto).	0.0127470493317	2
Coq.MSets.MSetList.filter_inf	40
Coq.MSets.MSetList.filter_ok	40
Coq.MSets.MSetList.filter_spec	40
Coq.MSets.MSetList.for_all_spec	40
Coq.MSets.MSetList.exists_spec	40
Coq.MSets.MSetList.partition_inf1	40
Coq.MSets.MSetList.partition_inf2	40
Coq.MSets.MSetList.partition_ok1	40
Coq.MSets.MSetList.partition_ok2	40
Coq.MSets.MSetList.partition_spec1	40
Coq.MSets.MSetList.partition_spec2	40
Coq.MSets.MSetList.In_compat	40	2.2.10.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: split; only 1: now rewrite Hxx', Hyy'; only 1: now rewrite Hxx', Hyy').	0.642084121704	907
Coq.MSets.MSetList.lt_strorder	40
Coq.MSets.MSetList.lt_compat	40
Coq.MSets.MSetList.compare_spec_aux	40
Coq.MSets.MSetList.compare_spec	40
Coq.MSets.MSetList.eq_leibniz_list	40
Coq.MSets.MSetList.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	3	search with cache (only 1: tauto).	0.0144381523132	4
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00866413116455	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	1.1.3.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.229115009308	419
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.0.2.1.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.0213730335236	32
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.0.6.1	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0249729156494	63
Coq.Relations.Operators_Properties.clos_rtn1_step	40	1.0.25.25	search with cache (only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	2.44534707069	14707
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	2.4.6.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.305542945862	950
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.0.3.4.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	0.172597885132	485
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.0.2.0.0.0.0.2.0	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	3.64198613167	9313
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	3.4.0.7.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.475110054016	1395
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.0.1.0.0.1.3.0.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	2.90885615349	5705
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.7.0.18.1.1.1	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 2; only 1: trivial; only 1: red; only 1: auto).	0.812112092972	5175
Coq.Sets.Uniset.leb_refl	40	181	search with cache (only 1: destr_bool).	9.63719201088	154000
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.1	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0125110149384	14
Coq.Sets.Uniset.seq_refl	40	1	search with cache (only 1: auto).	0.0064058303833	2
Coq.Sets.Uniset.seq_trans	40	0.51.0.18	search with cache (only 1: unfold seq; only 1: intros; only 1: rewrite H; only 1: trivial).	14.1627929211	106957
Coq.Sets.Uniset.seq_sym	40	1.0	search with cache (only 1: intros; only 1: auto).	0.00797295570374	3
Coq.Sets.Uniset.union_empty_left	40	0.5	search with cache (only 1: intros; only 1: auto).	0.00814390182495	7
Coq.Sets.Uniset.union_empty_right	40	0.0.28.8.6.8.0	search with cache (only 1: unfold seq; only 1: intros; only 1: destruct x; only 1: simpl; only 1: destruct b; only 1: auto; only 1: auto).	6.32397985458	47135
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	1.4.0.0.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).	0.39829492569	469
Coq.Sets.Uniset.seq_left	40	0.1.2.1.0.0.2.5	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	2.55855584145	4586
Coq.Sets.Uniset.seq_right	40	1.0.0.2.0.0.2.5	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: elim H; only 1: auto).	1.99023985863	3466
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40	1.0.3.1.0.0.2.0.17	search with cache (only 1: apply perm_left; only 1: auto; only 1: destruct x; only 1: auto; only 1: intros; only 1: auto; only 1: exact seq_trans; only 1: intros; only 1: auto).	35.4910669327	89271
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0.4	search with cache (only 1: intros m Le; only 1: auto with arith).	0.0149149894714	6
Coq.Sets.Multiset.meq_trans	40	3.9.3.7.9.2	search with cache (only 1: unfold meq; only 1: intros a n Ha; only 1: intros m Le; only 1: intros; only 1: elim Le; only 1: trivial).	17.5645039082	57040
Coq.Sets.Multiset.meq_sym	40	0.1.3.1.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: auto).	0.0233631134033	10
Coq.Sets.Multiset.munion_empty_left	40	0.1.4.1	search with cache (only 1: intros; only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0199110507965	10
Coq.Sets.Multiset.munion_empty_right	40	1.2.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0191910266876	7
Coq.Sets.Multiset.munion_comm	40	12.5.1.2	search with cache (only 1: destruct x; only 1: unfold meq; only 1: simpl; only 1: auto with arith).	4.07463908195	9693
Coq.Sets.Multiset.munion_ass	40	1.4.0.1.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: auto with arith).	0.369019031525	252
Coq.Sets.Multiset.meq_left	40	0.0.0.0.3.2.1	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto).	1.17938995361	1269
Coq.Sets.Multiset.meq_right	40	1.0.0.3.2.1	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	1.42465996742	1292
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	1.0.2.7.5.4	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	7.88694691658	12955
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	2	search with cache (only 1: auto with sets arith).	0.0113620758057	3
Coq.Sets.Integers.le_antisym	40	2	search with cache (only 1: auto with sets arith).	0.0169858932495	3
Coq.Sets.Integers.le_trans	40	0.3.3.13.3	search with cache (only 1: red; only 1: intros x H'4; only 1: intros InAz E; only 1: rewrite E; only 1: trivial).	0.678403139114	1643
Coq.Sets.Integers.le_Order	40
Coq.Sets.Integers.triv_nat	40	132.11	search with cache (only 1: intro H'3; only 1: split).	11.5309801102	112442
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	3.1.12.13.12	search with cache (only 1: intro H; only 1: intro H1; only 1: intros x' x'' Hx' Hx''; only 1: red; only 1: auto).	0.511590003967	2997
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.0.2	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto with sets).	0.0146069526672	13
Coq.Sets.Relations_1_facts.contains_is_preorder	40	8.9.13.9.2.15	search with cache (only 1: intro H; only 1: constructor; only 1: intro h; only 1: auto with sets; only 1: intro h; only 1: auto with sets).	2.46781897545	18724
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.27.5.2	search with cache (only 1: intros U R H'; only 1: intros; only 1: destruct H; only 1: auto with sets).	0.610957860947	3873
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.3.1	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation; only 1: intuition).	0.0281641483307	29
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.4	search with cache (only 1: unfold same_relation; only 1: intuition).	0.059779882431	72
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.11.7	search with cache (only 1: intro h; only 1: intro H; only 1: left).	0.045361995697	314
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	8.11.7	search with cache (only 1: intro h; only 1: intro H; only 1: auto with sets).	0.127496957779	776
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.1.0.0.1.6.8.1	search with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.48876786232	1654
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.2.2.1.0.36	search with cache (only 1: induction 1; only 1: intros H; only 1: auto with sets; only 1: intro T; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	15.0183720589	74603
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.1.1.0.0.2.0.0.5.0.0.5.0.2	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: generalize Rstar_contains_R; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	9.96003198624	32258
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.2.0.0.0.2.0.1.7.0.2	search with cache (only 1: intuition; only 1: red; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	1.89630508423	6752
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.3.0.0.4	search with cache (only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.768520116806	1466
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.1.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0250380039215	24
Coq.Sets.Permut.comm_left	40	0.5.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0110809803009	12
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	2.0.1.1.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: trivial).	0.0549762248993	45
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.14.0.5	search with cache (only 1: intuition; only 1: unfold In in *; only 1: exists x; only 1: intuition; only 1: auto with sets arith).	1.30283498764	1568
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	5.12.15.0.3.11.0.8	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	21.0971708298	82147
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	1.35.14.0	search with cache (only 1: intros X f H'; only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	6.04842400551	37289
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	10.4.15	search with cache (only 1: intro H; only 1: intro h; only 1: contradiction).	0.283695936203	1180
Coq.Sets.Powerset.Power_set_Inhabited	40	9.39.35	search with cache (only 1: intro x; only 1: exists x; only 1: auto with sets).	1.50031518936	16336
Coq.Sets.Powerset.Inclusion_is_an_order	40	9.12.11.12.27.12.3	search with cache (only 1: constructor; only 1: intro h; only 1: auto with sets; only 1: intro h; only 1: auto with sets; only 1: intro h; only 1: auto with sets).	23.6724951267	183662
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00559997558594	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	39	search with cache (only 1: auto with sets).	0.126074790955	785
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40	5.9.9.0.25.42.7	search with cache (only 1: intro h; only 1: split; only 1: simpl in *; only 1: auto with sets; only 1: red; only 1: red; only 1: trivial).	5.02278804779	41455
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	1.2.1	search with cache (only 1: intros x y z H' H'0; only 1: intros H'1 H'2; only 1: auto with sets).	0.0144829750061	11
Coq.Sets.Powerset.Union_increases_l	40	1.5.0	search with cache (only 1: intros; only 1: red; only 1: auto with sets).	0.012442111969	12
Coq.Sets.Powerset.Union_increases_r	40	1.5.0	search with cache (only 1: intros; only 1: red; only 1: auto with sets).	0.0124499797821	12
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.010705947876	5
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0109860897064	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	1.1.4.6	search with cache (only 1: intros P exnot allP; only 1: split; only 1: assumption; only 1: auto with sets).	0.124946832657	168
Coq.Sets.Classical_sets.Subtract_inv	40	0.0.19.2.10	search with cache (only 1: intro n; only 1: destruct 1; only 1: split; only 1: assumption; only 1: auto with sets).	5.93539810181	15262
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.1.2.6.2.3.2.5.0.1	search with cache (only 1: intros U R; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: red; only 1: intros z1 H'5; only 1: elim H'5; only 1: intros x0 H'0; only 1: exists z1; only 1: auto with sets).	3.29961800575	11694
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.7.1	search with cache (only 1: intros A x y H'; only 1: simple destruct 1; only 1: auto with sets).	0.0428311824799	68
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	1.0.0.5.1.5.3	search with cache (only 1: intros A B x H' H'0; only 1: red in H'; only 1: intro H; only 1: destruct H; only 1: apply Setminus_intro; only 1: auto with sets; only 1: trivial).	3.19443202019	1699
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	1.3.0.0.2.0.12.2	search with cache (only 1: intros A x y H'; only 1: simple destruct 1; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	5.39559197426	14770
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	66.7	search with cache (only 1: intro h; only 1: auto  10 with sets).	13.382972002	62624
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0102288722992	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0104219913483	1
Coq.Sets.Powerset_facts.Union_commutative	40	8.0	search with cache (only 1: intros a b; only 1: auto with sets).	0.0119898319244	10
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0105528831482	1
Coq.Sets.Powerset_facts.Union_absorbs	40	6	search with cache (only 1: auto  9 with sets).	0.0177309513092	11
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	1.0.0.1.1.0.0.0.1.0.0.0.0.2.0.0.17.0.2.4	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: red; only 1: intuition; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	27.5659570694	50577
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40
Coq.Sets.Powerset_facts.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.0.4.0.5.2	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros t H'1; only 1: auto with sets).	0.230496168137	362
Coq.Sets.Powerset_facts.incl_add	40	0.1	search with cache (only 1: unfold Add; only 1: auto  7 with sets).	0.0886180400848	3
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	23.2.1.5	search with cache (only 1: intros a b; only 1: unfold Add; only 1: intro H; only 1: auto  10 with sets).	9.25704503059	18831
Coq.Sets.Powerset_facts.Add_commutative'	40	14.2.0.4	search with cache (only 1: intros A x y H'; only 1: unfold Add; only 1: rewrite (Union_associative A (Singleton U x) (Singleton U y)); only 1: auto  10 with sets).	5.71387505531	6552
Coq.Sets.Powerset_facts.Add_distributes	40	11.19.1	search with cache (only 1: unfold Add; only 1: intros a b; only 1: auto  10 with sets).	11.9120221138	19386
Coq.Sets.Powerset_facts.setcover_intro	40	2	search with cache (only 1: intuition).	0.0229609012604	36
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	7	search with cache (only 1: auto  7 with sets).	0.0165641307831	31
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	1.0	search with cache (only 1: intros; only 1: auto with sets).	0.0110349655151	11
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	3.0.3.6.8.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: auto with sets; only 1: auto with sets).	1.58477807045	3525
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.2.1.2.1.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intuition).	0.396476984024	507
Coq.Sets.Constructive_sets.Extension	40	0.9.0.9.0.9.26.27	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: red; only 1: split; only 1: red; only 1: auto; only 1: red; only 1: auto).	6.55995702744	87807
Coq.Sets.Constructive_sets.Noone_in_empty	40	22.9.9	search with cache (only 1: intro H; only 1: red; only 1: contradiction).	0.415852069855	3063
Coq.Sets.Constructive_sets.Included_Empty	40	18.7.8	search with cache (only 1: intro H; only 1: red; only 1: contradiction).	0.292255878448	1619
Coq.Sets.Constructive_sets.Add_intro1	40	1.13.22.3.2.8	search with cache (only 1: intro H; only 1: red; only 1: intros n m; only 1: intro; only 1: constructor; only 1: trivial).	1.79493308067	16710
Coq.Sets.Constructive_sets.Add_intro2	40	4.60.28	search with cache (only 1: intros; only 1: right; only 1: auto with sets).	25.0632109642	338819
Coq.Sets.Constructive_sets.Inhabited_add	40	4.60.13.28	search with cache (only 1: intros; only 1: exists x; only 1: right; only 1: auto with sets).	22.5854029655	296109
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.27.14.17.0.14	search with cache (only 1: intro H1; only 1: red; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	11.4457731247	111852
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.23.14.6.0	search with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	2.43370699883	17695
Coq.Sets.Constructive_sets.Singleton_inv	40	0.1	search with cache (only 1: induction 1; only 1: auto with sets).	0.00782704353333	3
Coq.Sets.Constructive_sets.Singleton_intro	40	12.2	search with cache (only 1: induction 1; only 1: auto with sets).	0.202761173248	533
Coq.Sets.Constructive_sets.Union_inv	40	8.8.74	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	8.92849779129	90855
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.1	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.00987792015076	4
Coq.Sets.Constructive_sets.Couple_inv	40	0.2.0.1.2	search with cache (only 1: induction 1; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.0149009227753	21
Coq.Sets.Constructive_sets.Setminus_intro	40	3.1	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00917887687683	6
Coq.Sets.Constructive_sets.Strict_Included_intro	40	0	search with cache (only 1: trivial).	0.00619888305664	1
Coq.Sets.Constructive_sets.Strict_Included_strict	40	4.1.4.14	search with cache (only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: auto with sets).	0.204973936081	648
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	4.1.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: exists x; only 1: auto using Add_intro2 with sets).	0.0119519233704	9