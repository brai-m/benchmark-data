
Coq.micromega.OrderedRing.rplus_morph_Proper	40	30.11.38	search with cache (only 1: intros n m H1; only 1: intros; only 1: firstorder).	19.1477589607	51307
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	20.15.38	search with cache (only 1: intros n m H1; only 1: intros; only 1: firstorder).	28.665776968	68077
Coq.micromega.OrderedRing.ropp_morph_Proper	40	50.11	search with cache (only 1: intros; only 1: firstorder).	2.91777396202	7858
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	36.15	search with cache (only 1: intros; only 1: intuition).	2.5653488636	3581
Coq.micromega.OrderedRing.Rplus_0_l	40	98.28	search with cache (only 1: intros x; only 1: firstorder).	4.54732203484	29811
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0154168605804	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	3.6	search with cache (only 1: intro; only 1: ring).	0.0239450931549	24
Coq.micromega.OrderedRing.Rplus_comm	40	0.1.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0194170475006	4
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0152111053467	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.1.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0179641246796	4
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	5.7.2.1	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.707154035568	628
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.0.4.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.894200086594	330
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.ZifyInt63.to_Z_bounded	40	3.9.70	search with cache (only 1: intros i; only 1: case (to_Z_bounded i); only 1: auto with zarith).	12.9596819878	15070
Coq.micromega.ZifyInt63.ltb_lt	40
Coq.micromega.ZifyInt63.leb_le	40
Coq.micromega.ZifyInt63.eqb_eq	40
Coq.micromega.ZifyInt63.eq_int_inj	40	0.3.1.3.4	search with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	15.0967299938	471
Coq.micromega.ZifyInt63.is_evenE	40
Coq.micromega.Ztac.eq_incl	40	8	search with cache (only 1: intuition Z.order).	0.0716528892517	43
Coq.micromega.Ztac.elim_concl_eq	40	4.1.0	search with cache (only 1: intros n m; only 1: intros; only 1: intuition Z.order).	0.0357151031494	8
Coq.micromega.Ztac.elim_concl_le	40	0.0	search with cache (only 1: intros a b; only 1: Z.order).	0.0207650661469	2
Coq.micromega.Ztac.elim_concl_lt	40	6.0	search with cache (only 1: intros x y H; only 1: now apply Z.nle_gt).	0.100400924683	56
Coq.micromega.Ztac.Zlt_le_add_1	40	1.1.3.1.10	search with cache (only 1: etransitivity; only 1: Z.nzsimpl; only 1: reflexivity; only 1: apply Z.le_succ_l; only 1: Z.Private_Tac.order).	2.10260105133	938
Coq.micromega.Ztac.add_le	40	8.3	search with cache (only 1: intros n m H; only 1: now apply Z.add_nonneg_nonneg).	0.351331949234	203
Coq.micromega.Ztac.mul_le	40	1.1.37.0	search with cache (only 1: intros n m Hn Hm; only 1: apply Z.mul_nonneg_nonneg; only 1: auto; only 1: auto).	16.5681369305	17231
Coq.micromega.ZifyInst.eq_pos_inj	40	5.5.1.11	search with cache (only 1: intro n; only 1: split; only 1: congruence; only 1: congruence).	1.9816198349	2196
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.2.1.2.34.10	search with cache (only 1: intros H; only 1: destruct H; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: unfold Z.max, Pos.max; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	1.8940050602	4902
Coq.micromega.ZifyInst.pow_pos_strict	40	21.7.21	search with cache (only 1: intros b Hb IH; only 1: intros H; only 1: Z.order_pos).	4.84883093834	8933
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	1	search with cache (only 1: exact (SORplus_wd sor)).	0.114337205887	51
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0159840583801	2
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0126378536224	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	1	search with cache (only 1: exact (SORle_wd sor)).	0.0746829509735	33
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0123679637909	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1	search with cache (only 1: exact (OrderedRing.rminus_morph sor)).	0.198695898056	17
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	8.10.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H))).	1.52875113487	1189
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.7.2.0.11.3	search with cache (only 1: pattern 1 at 1; only 1: unfold Rle; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: auto with real).	24.3841979504	20812
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.12.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	1.26801800728	639
Coq.micromega.ZifyClasses.mkapp2	40	3.10	search with cache (only 1: subst; only 1: auto).	0.0548269748688	81
Coq.micromega.ZifyClasses.mkapp	40	4.0	search with cache (only 1: subst; only 1: auto).	0.0109629631042	6
Coq.micromega.ZifyClasses.mkrel	40	18.0	search with cache (only 1: subst; only 1: auto).	0.241013050079	410
Coq.micromega.ZifyClasses.and_morph	40
Coq.micromega.ZifyClasses.or_morph	40	0.0	search with cache (only 1: intros ? ? ? Fl Fr; only 1: tauto).	0.0215330123901	2
Coq.micromega.ZifyClasses.impl_morph	40	0.1	search with cache (only 1: intros; only 1: tauto).	0.0164241790771	3
Coq.micromega.ZifyClasses.iff_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0270130634308	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0792059898376	2
Coq.micromega.ZifyClasses.eq_iff	40	1.0.1.0.3.6	search with cache (only 1: intro A; only 1: split; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto).	0.280352115631	758
Coq.micromega.ZifyClasses.rew_iff	40	43	search with cache (only 1: tauto).	0.332612037659	1982
Coq.micromega.ZMicromega.eq_le_iff	40	7	search with cache (only 1: intuition Z.order).	0.0182039737701	8
Coq.micromega.ZMicromega.lt_le_iff	40	0	search with cache (only 1: apply Z.lt_le_pred).	0.00890588760376	1
Coq.micromega.ZMicromega.le_0_iff	40	1.1.19.0	search with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	5.71856808662	4139
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.pop2_bop2	40
Coq.micromega.ZMicromega.Zeval_op2_hold	40
Coq.micromega.ZMicromega.Zeval_formula_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.6.0	search with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0209801197052	9
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.2.7	search with cache (only 1: intro q; only 1: destruct q; only 1: now split; only 1: now split; only 1: now split).	1.06781888008	489
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.110286951065	8
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	1.0.32	search with cache (only 1: intros P n v; only 1: rewrite xnnormalise_correct; only 1: now destruct Hn || easy).	20.2395870686	10348
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.048828125	6
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0122690200806	1
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.b2n_b2z	40	9.45	search with cache (only 1: intro n; only 1: now destruct n).	1.83307886124	4907
Coq.micromega.ZifyBool.b2z_spec	40	2.7.0.3.1.8.14	search with cache (only 1: intro; only 1: destruct b; only 1: simpl; only 1: left; only 1: easy; only 1: right; only 1: now repeat split).	20.1486868858	22369
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	6.0.14.0.0	search with cache (only 1: unfold tail; only 1: unfold jump; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.48846197128	4764
Coq.micromega.Env.jump_succ	40	7.0	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0428049564362	34
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0250248908997	5
Coq.micromega.Env.nth_pred_double	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0234079360962	5
Coq.micromega.Tauto.eval_f_rew	40
Coq.micromega.Tauto.eiff_refl	40	0.0.5.125	search with cache (only 1: revert x; only 1: induction k as [| k IHk]; only 1: reflexivity; only 1: reflexivity).	2.84902381897	10142
Coq.micromega.Tauto.eiff_sym	40	0.5.0.0.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: simpl; only 1: symmetry; only 1: tauto).	0.0989000797272	55
Coq.micromega.Tauto.eiff_trans	40	1.6.0.0.1.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: subst; only 1: intuition).	1.71018815041	1454
Coq.micromega.Tauto.hold_eiff	40
Coq.micromega.Tauto.eiff_eq	40	1.0.1.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.026752948761	7
Coq.micromega.Tauto.eAnd_morph_Proper	40	2.0.0.1.0.3	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: intuition congruence).	0.796885967255	179
Coq.micromega.Tauto.eOR_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0696170330048	6
Coq.micromega.Tauto.eIMPL_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0567979812622	6
Coq.micromega.Tauto.eIFF_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.111505031586	6
Coq.micromega.Tauto.eNOT_morph_Proper	40	2.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition; only 1: simpl in *; only 1: intuition congruence).	0.0497670173645	9
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	1.0.9	search with cache (only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: auto).	0.114315986633	99
Coq.micromega.Tauto.is_bool_inv	40
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	17	search with cache (only 1: destr_bool).	0.391760110855	169
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	2	search with cache (only 1: reflexivity).	0.0139849185944	3
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0129270553589	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	1.3.0.45.16	search with cache (only 1: intro l; only 1: destruct l as [| a l']; only 1: reflexivity; only 1: simpl; only 1: congruence).	25.8266589642	59945
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.0.0.0.0.0	search with cache (only 1: unfold cnf_tt; only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0402050018311	7
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	4.4.0.2.1.2.0.0.0	search with cache (only 1: unfold cnf_ff; only 1: intros f1; only 1: destruct f1 as [| c f1]; only 1: reflexivity; only 1: destruct c; only 1: destruct f1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.30370688438	3979
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.0.0.0.0.0.1.0.0.5	search with cache (only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: unfold cnf_tt; only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence).	1.51484417915	999
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.and_cnf_opt_cnf_ff_r	40	0.1.3.1	search with cache (only 1: unfold and_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: reflexivity).	0.0414090156555	15
Coq.micromega.Tauto.and_cnf_opt_cnf_ff	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite is_cnf_ff_cnf_ff; only 1: reflexivity).	0.028596162796	4
Coq.micromega.Tauto.and_cnf_opt_cnf_tt	40	0.1.0.1.0.2.1.0.1.0.0.0.7.1	search with cache (only 1: unfold and_cnf_opt; only 1: unfold cnf_ff; only 1: intros f1; only 1: destruct f1 as [| c f1]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: destruct c; only 1: destruct f1; only 1: reflexivity; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	15.6248118877	16796
Coq.micromega.Tauto.is_bool_abst_simpl	40
Coq.micromega.Tauto.abst_simpl_correct	40
Coq.micromega.Tauto.or_is_X_inv	40
Coq.micromega.Tauto.mk_iff_is_bool	40
Coq.micromega.Tauto.abst_iff_correct	40
Coq.micromega.Tauto.abst_eq_correct	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40	0.0.1.0.4.3.0.4.0.14.0	search with cache (only 1: intros f1; only 1: assert (ACC : fst (nil, nil) = nil); only 1: reflexivity; only 1: induction f1 as [| a f1 IHf1]; only 1: reflexivity; only 1: destruct a; only 1: destruct f1; only 1: reflexivity; only 1: simpl; only 1: congruence; only 1: auto).	22.3454079628	37722
Coq.micromega.Tauto.rxcnf_and_xcnf	40
Coq.micromega.Tauto.rxcnf_or_xcnf	40
Coq.micromega.Tauto.rxcnf_impl_xcnf	40
Coq.micromega.Tauto.rxcnf_iff_xcnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	1.2.2.1.5.2.2.1.40	search with cache (only 1: clear; only 1: split; only 1: unfold cnf_ff; only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: tauto; only 1: unfold cnf_ff; only 1: congruence).	14.5656070709	31250
Coq.micromega.Tauto.eval_cnf_tt	40	3.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0301809310913	6
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.4.2.4.6	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	1.79477119446	676
Coq.micromega.Tauto.eval_cnf_cons_iff	40	2.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: unfold eval_clause at 2; only 1: tauto).	0.0903739929199	8
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.hold_eTT	40	16.6.4.27.6.10.43	search with cache (only 1: generalize nil as acc; only 1: intros env f; only 1: induction f as [| a f IHf]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto).	32.9178738594	84936
Coq.micromega.Tauto.hold_eFF	40	0.0.0.0.0.1	search with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0677790641785	7
Coq.micromega.Tauto.hold_eAND	40
Coq.micromega.Tauto.hold_eOR	40
Coq.micromega.Tauto.hold_eNOT	40
Coq.micromega.Tauto.hold_eIMPL	40	0.1.1.0.0.0.4.0.0.0.0	search with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: intros; only 1: apply iff_refl; only 1: simpl; only 1: intros e; only 1: unfold is_true; only 1: destruct e; only 1: intuition congruence; only 1: intuition congruence).	8.01817393303	3494
Coq.micromega.Tauto.hold_eIFF	40	0.0.0.1.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: destruct k; only 1: simpl; only 1: apply iff_refl; only 1: simpl; only 1: unfold is_true; only 1: destruct e1, e2; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	14.3268520832	4659
Coq.micromega.Tauto.xcnf_impl	40
Coq.micromega.Tauto.hold_eIFF_IMPL	40
Coq.micromega.Tauto.hold_eEQ	40	5.0.0.0.0	search with cache (only 1: simpl; only 1: intros e1 e2; only 1: unfold is_true; only 1: rewrite eqb_true_iff; only 1: tauto).	0.145833015442	17
Coq.micromega.Tauto.xcnf_iff	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40
Coq.micromega.EnvRing.rmul_ext_Proper	40
Coq.micromega.EnvRing.ropp_ext_Proper	40
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	97	search with cache (only 1: firstorder).	5.34832310677	9979
Coq.micromega.EnvRing.Pphi1	40	79	search with cache (only 1: firstorder).	3.92233514786	7080
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.109637975693	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.1.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0963690280914	9
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.6.0.4.0.10	search with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: add_permut; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	2.44010996819	1067
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	1	search with cache (only 1: exact (SORplus_wd sor)).	0.290467023849	94
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	2	search with cache (only 1: exact (SORtimes_wd sor)).	0.0114951133728	3
Coq.micromega.RingMicromega.ropp_morph_Proper	40	2	search with cache (only 1: exact (SORopp_wd sor)).	0.0107390880585	3
Coq.micromega.RingMicromega.rle_morph_Proper	40	4	search with cache (only 1: exact (SORle_wd sor)).	0.055135011673	24
Coq.micromega.RingMicromega.rlt_morph_Proper	40	4	search with cache (only 1: exact (SORlt_wd sor)).	0.0138330459595	5
Coq.micromega.RingMicromega.rminus_morph_Proper	40	0.0.0.0.6	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.567355155945	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	24.0.8.6	search with cache (only 1: unfold eval_pol; only 1: intros f' H H0; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	4.63856196404	5332
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.2.0.1.0.7	search with cache (only 1: intro n; only 1: induction l; only 1: simpl; only 1: auto; only 1: intros Heq; only 1: auto).	0.295006990433	223
Coq.micromega.Refl.make_impl_map	40	14.0.1.6.7	search with cache (only 1: intros H x1 y H0; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intuition; only 1: firstorder).	14.4880440235	23485
Coq.micromega.Refl.make_conj_cons	40	5.5.0.2.5.3	search with cache (only 1: intros; only 1: simpl in *; only 1: destruct l as [| x xs]; only 1: intuition; only 1: reflexivity; only 1: now simpl).	3.84710407257	5072
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	3.0.3.2.0.1	search with cache (only 1: intros A eval l; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: tauto).	3.02322912216	977
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	38.4.15.0.6	search with cache (only 1: intros H; only 1: unfold Qopp; only 1: intro n; only 1: unfold Qminus; only 1: now destruct n).	27.7617990971	59146
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0331110954285	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qlt_bool_iff	40	1.9.4	search with cache (only 1: intros Heq; only 1: fix odd_spec 1; only 1: intuition subst; auto with qarith).	2.13393616676	1155
Coq.micromega.QMicromega.pop2_bop2	40
Coq.micromega.QMicromega.Qeval_op2_hold	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	1.0.0.0.0.0.0.0.0.1.0.0.6.3.35	search with cache (only 1: split; only 1: intros; only 1: apply Rplus_0_l; only 1: intros a b; only 1: auto with real; only 1: symmetry; only 1: apply Rplus_assoc; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: auto with real; only 1: intros; only 1: ring; only 1: reflexivity; only 1: exact Rplus_opp_r).	7.59073996544	8195
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.4	search with cache (only 1: rewrite Rinv_1; only 1: auto with real).	0.0758228302002	19
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	7.0.13	search with cache (only 1: unfold Qmult, Qeq, Q2R; only 1: unfold Qnum, Qden; only 1: auto with real).	0.730664014816	736
Coq.micromega.RMicromega.Q2R_1	40	69	search with cache (only 1: apply RIneq.Rinv_1).	1.83157610893	4758
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40	2.0.6.3	search with cache (only 1: intros; only 1: apply Qeq_true; only 1: apply Qeq_bool_iff; only 1: auto).	34.7949149609	10529
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0486330986023	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.pop2_bop2	40	0.0.16	search with cache (only 1: fix odd_equiv 1; only 1: unfold is_true; only 1: auto).	4.50458192825	2010
Coq.micromega.RMicromega.Reval_op2_hold	40	1.0.1.2.8.24	search with cache (only 1: intros f; only 1: intros pol; only 1: destruct f; only 1: simpl; only 1: tauto; only 1: apply ZMicromega.pop2_bop2).	2.92065095901	3796
Coq.micromega.RMicromega.Reval_pop2_eval_op2	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.QReval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.Vectors.VectorEq.eqb_nat_eq	40	0.22.1	search with cache (only 1: intro m; only 1: fix even_spec 1; only 1: auto).	5.47129416466	6735
Coq.Vectors.VectorEq.eqb_eq	40	4.28.0.1	search with cache (only 1: intros m n v1; only 1: revert n; only 1: fix even_spec 1; only 1: eauto).	26.1026601791	31146
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.0.3	search with cache (only 1: intros; only 1: subst; only 1: auto).	0.0291421413422	34
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.2	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0312519073486	5
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40	1.3.0.0.1.0.0.0.0.2	search with cache (only 1: induction p as [| ? p IHp]; only 1: intros v; only 1: rewrite 2!(eta v); only 1: simpl; only 1: auto; only 1: intros v; only 1: rewrite 2!(eta v); only 1: simpl; only 1: intros; only 1: now rewrite IHp).	6.80223584175	3833
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	1.3.6	search with cache (only 1: induction p as [| ? p IHp]; only 1: reflexivity; only 1: now f_equal).	0.113094806671	74
Coq.Vectors.VectorSpec.map_id	40	0.0.30.0.1.11	search with cache (only 1: intros n p; only 1: induction p as [| ? p IHp]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	4.11879992485	10376
Coq.Vectors.VectorSpec.map_map	40	1.0.0.0.0.0.1.8	search with cache (only 1: intros p1 p2 H1; only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHv; only 1: auto).	0.837082147598	611
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.3.2.0.0.0.9	search with cache (only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: auto).	2.58081197739	2144
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0	search with cache (only 1: auto).	0.0144121646881	1
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.0.0.1.0.0.4	search with cache (only 1: induction p as [| p IHp]; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	5.91815781593	3202
Coq.Vectors.VectorSpec.uncons_cons	40	1.0	search with cache (only 1: do 3 intro; only 1: now constructor).	0.0178639888763	3
Coq.Vectors.VectorSpec.append_comm_cons	40	4.0.0	search with cache (only 1: intros m w le; only 1: simpl; only 1: auto).	0.0243380069733	7
Coq.Vectors.VectorSpec.splitat_append	40	2.0.7.3.0.0.4	search with cache (only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHv; only 1: apply f_equal; only 1: reflexivity).	2.86101198196	2903
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	5.5.5.5.4	search with cache (only 1: induction n; only 1: now PeanoNat.Nat.nzsimpl; only 1: induction p as [| ? p]; only 1: left; only 1: left).	3.62976408005	3588
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	3.21.2	search with cache (only 1: intros a Ha; only 1: fix even_spec 1; only 1: apply PeanoNat.Nat.even_spec).	32.1373569965	32284
Coq.Vectors.Fin.eqb_eq	40	3.18	search with cache (only 1: fix odd_spec 1; only 1: easy).	6.87250304222	5989
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	9	search with cache (only 1: congruence).	0.0374159812927	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40	0.1.0.1.1.1.0	search with cache (only 1: induction l as [| a l IHl]; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.64873290062	203
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0529069900513	22
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	0.8.0.1	search with cache (only 1: induction p as [p ?| p ?| ]; only 1: auto; only 1: reflexivity; only 1: auto).	0.19414305687	109
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.4.3.2	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.300901889801	175
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40	10.29.2	search with cache (only 1: intro q; only 1: fix odd_spec 1; only 1: auto).	38.8005459309	57942
Coq.rtauto.Rtauto.form_eq_refl	40	7.23.39.5	search with cache (only 1: intros n; only 1: intros a0; only 1: fix odd_spec 1; only 1: auto).	21.9867157936	65890
Coq.rtauto.Rtauto.compose0	40	12.4.1.5.4.15	search with cache (only 1: intro H; only 1: induction F; only 1: unfold push, empty; only 1: auto; only 1: intros r s; only 1: firstorder  discriminate).	32.3362820148	68177
Coq.rtauto.Rtauto.compose1	40	17.7.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros r s; only 1: firstorder  discriminate).	33.3934779167	65102
Coq.rtauto.Rtauto.compose2	40	0.1.0.1.9.1.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros r s; only 1: intros A H; only 1: simpl; only 1: apply IHF; only 1: auto).	4.59838700294	6871
Coq.rtauto.Rtauto.compose3	40	0.1.0.0.10.0.0.1.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: auto; only 1: intros r s; only 1: intros A B H; only 1: simpl; only 1: apply IHF; only 1: auto).	6.48931193352	9294
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40	0.33	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.5211660862	3951
Coq.Setoids.Setoid.Seq_refl	40	23.21	search with cache (only 1: intros; only 1: firstorder).	0.270146131516	1483
Coq.Setoids.Setoid.Seq_sym	40	15.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.320863008499	619
Coq.Setoids.Setoid.Seq_trans	40	0.0.6.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.070121049881	100
Coq.Setoids.Setoid.gen_st	40	8.4.1.0.14.1	search with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto; only 1: inversion 1; only 1: trivial).	1.05538702011	3509
Coq.Bool.IfProp.Iftrue_inv	40	4.0.5	search with cache (only 1: destruct 1; only 1: auto; only 1: destr_bool).	0.0783150196075	113
Coq.Bool.IfProp.Iffalse_inv	40	0.0.2.1.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.0153260231018	8
Coq.Bool.IfProp.IfProp_true	40	10.15.3.9	search with cache (only 1: intro H; only 1: intro n; only 1: inversion 1; only 1: auto).	2.52310299873	15859
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0273540019989	20
Coq.Bool.IfProp.IfProp_or	40	0.3.1.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.0149238109589	14
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.BoolOrder.le_refl	40	0	search with cache (only 1: destr_bool).	0.0101640224457	1
Coq.Bool.BoolOrder.le_trans	40	0	search with cache (only 1: destr_bool).	0.0148620605469	1
Coq.Bool.BoolOrder.le_true	40	0	search with cache (only 1: destr_bool).	0.0131778717041	1
Coq.Bool.BoolOrder.false_le	40	0	search with cache (only 1: destr_bool).	0.0103130340576	1
Coq.Bool.BoolOrder.le_compat	40	0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: reduce; only 1: subst; only 1: intuition).	0.0372638702393	18
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0165269374847	2
Coq.Bool.BoolOrder.lt_trans	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0176570415497	2
Coq.Bool.BoolOrder.lt_compat	40	0	search with cache (only 1: intuition).	0.0132360458374	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0279791355133	5
Coq.Bool.BoolOrder.lt_total	40	0.0.0.2.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.139644861221	7
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.115736961365	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.12127995491	4
Coq.Bool.BoolOrder.le_lteq	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0533270835876	6
Coq.Bool.BoolOrder.le_preorder	40	1.7.2.7.1	search with cache (only 1: constructor; only 1: intro l; only 1: destr_bool; only 1: intro l; only 1: destr_bool).	0.492006778717	890
Coq.Bool.BoolOrder.lt_strorder	40	0.5.0.0.5.14	search with cache (only 1: split; only 1: intros b b'; only 1: destr_bool; only 1: intros b1 b2 b3; only 1: destr_bool; only 1: auto).	0.512542009354	973
Coq.Bool.Zerob.zerob_true_intro	40	0.1.8	search with cache (only 1: induction n as [| n IHn]; only 1: easy; only 1: easy).	0.124464988708	45
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0355260372162	3
Coq.Bool.Zerob.zerob_false_intro	40	1.9.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: easy).	0.340725898743	129
Coq.Bool.Zerob.zerob_false_elim	40	4.3.5	search with cache (only 1: intros a b Hb; only 1: subst; only 1: easy).	0.943284988403	604
Coq.Bool.DecBool.ifdec_left	40	11.0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: contradiction).	0.582286119461	1116
Coq.Bool.DecBool.ifdec_right	40	0.4.0.0	search with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.0946359634399	44
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.14.1	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0676288604736	335
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.0.2	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0211849212646	24
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0118849277496	4
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	1.1.2.1.0	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.387421131134	324
Coq.Bool.Sumbool.sumbool_not	40	1.1.1.0.0	search with cache (only 1: case H1; only 1: case H1; only 1: auto; only 1: auto; only 1: auto).	0.20808506012	156
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	20	search with cache (only 1: discriminate).	0.381608009338	435
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.0181980133057	1
Coq.Bool.Bool.eq_true_false_abs	40	10.10.27.1	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	5.0430021286	16649
Coq.Bool.Bool.not_true_is_false	40	0.17.2	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: auto).	0.793510913849	850
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0297992229462	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0375170707703	5
Coq.Bool.Bool.not_false_iff_true	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0373132228851	5
Coq.Bool.Bool.le_implb	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0452959537506	9
Coq.Bool.Bool.compare_spec	40	0.1.1.0.0.1	search with cache (only 1: destr_bool; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0481479167938	9
Coq.Bool.Bool.eqb_subst	40	4.0.1	search with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.0383219718933	8
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.0177829265594	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0251910686493	1
Coq.Bool.Bool.eqb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0529119968414	9
Coq.Bool.Bool.eqb_false_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0539968013763	9
Coq.Bool.Bool.negb_orb	40	8	search with cache (only 1: destr_bool).	0.0524151325226	24
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.022716999054	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.0231909751892	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.0202240943909	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0246469974518	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.0209941864014	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.0208911895752	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.0199208259583	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.021301984787	1
Coq.Bool.Bool.negb_true_iff	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0367729663849	5
Coq.Bool.Bool.negb_false_iff	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0392320156097	5
Coq.Bool.Bool.orb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.208020925522	9
Coq.Bool.Bool.orb_false_iff	40	0.0.0.1.0.10.2	search with cache (only 1: intro H; only 1: intuition; only 1: destr_bool; only 1: destr_bool; only 1: destruct b2; only 1: destr_bool; only 1: destr_bool).	19.3303308487	12984
Coq.Bool.Bool.orb_true_elim	40	0.0.1.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0419619083405	5
Coq.Bool.Bool.orb_prop	40	0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0485479831696	5
Coq.Bool.Bool.orb_true_intro	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: destruct b2; only 1: intuition; only 1: intuition).	0.0593421459198	8
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0308170318604	1
Coq.Bool.Bool.orb_false_elim	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0370650291443	2
Coq.Bool.Bool.orb_diag	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0347528457642	9
Coq.Bool.Bool.orb_true_r	40	4.0.1.1	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: destr_bool).	0.0593459606171	15
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.024453163147	1
Coq.Bool.Bool.orb_false_r	40	2	search with cache (only 1: destr_bool).	0.0368511676788	11
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0209770202637	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0226571559906	1
Coq.Bool.Bool.orb_negb_l	40	0	search with cache (only 1: destr_bool).	0.0258347988129	1
Coq.Bool.Bool.orb_comm	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0498559474945	13
Coq.Bool.Bool.orb_assoc	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.10009098053	19
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.318589925766	99
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0661149024963	5
Coq.Bool.Bool.andb_true_eq	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0394849777222	2
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.0303618907928	1
Coq.Bool.Bool.andb_false_intro2	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct b1; only 1: destruct b2; only 1: assumption; only 1: assumption; only 1: destruct b2; only 1: repeat split; only 1: assumption).	0.0595669746399	9
Coq.Bool.Bool.andb_false_r	40	1.5.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0366468429565	9
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.0252289772034	1
Coq.Bool.Bool.andb_diag	40	5.0	search with cache (only 1: intros; only 1: destr_bool).	0.0368940830231	7
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.0237331390381	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.0271899700165	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.110407114029	43
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0252249240875	1
Coq.Bool.Bool.andb_negb_l	40	0	search with cache (only 1: destr_bool).	0.0231800079346	1
Coq.Bool.Bool.andb_comm	40	0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: destruct b2; only 1: destruct b1; only 1: reflexivity; only 1: repeat split; only 1: apply andb_false_iff; only 1: auto).	0.167464017868	48
Coq.Bool.Bool.andb_assoc	40	2.1.0.0.1.0	search with cache (only 1: intros; only 1: destruct b1; only 1: destruct b2; only 1: reflexivity; only 1: repeat split; only 1: reflexivity).	0.0715439319611	13
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0329480171204	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0319800376892	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0337028503418	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0329351425171	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0359888076782	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0244438648224	1
Coq.Bool.Bool.implb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0615599155426	9
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0623679161072	5
Coq.Bool.Bool.implb_orb	40	0	search with cache (only 1: destr_bool).	0.0266819000244	1
Coq.Bool.Bool.implb_negb_orb	40	0	search with cache (only 1: destr_bool).	0.0265369415283	1
Coq.Bool.Bool.implb_true_r	40	0	search with cache (only 1: destr_bool).	0.0237231254578	1
Coq.Bool.Bool.implb_false_r	40	0	search with cache (only 1: destr_bool).	0.0247330665588	1
Coq.Bool.Bool.implb_true_l	40	0	search with cache (only 1: destr_bool).	0.0212869644165	1
Coq.Bool.Bool.implb_false_l	40	0	search with cache (only 1: destr_bool).	0.0223891735077	1
Coq.Bool.Bool.implb_same	40	0	search with cache (only 1: destr_bool).	0.0236818790436	1
Coq.Bool.Bool.implb_contrapositive	40	0	search with cache (only 1: destr_bool).	0.0248091220856	1
Coq.Bool.Bool.implb_negb	40	0	search with cache (only 1: destr_bool).	0.0259339809418	1
Coq.Bool.Bool.implb_curry	40	0	search with cache (only 1: destr_bool).	0.0352458953857	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0323770046234	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0358939170837	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0309889316559	1
Coq.Bool.Bool.xorb_false_r	40	0.0.2.2	search with cache (only 1: intros; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: auto; only 1: auto).	0.0376880168915	8
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.0222420692444	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0229349136353	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.0216000080109	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0208988189697	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.0255529880524	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.033980846405	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0263340473175	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0327019691467	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0377712249756	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0363659858704	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.035413980484	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.0258071422577	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.133688211441	6
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0.0	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0496320724487	6
Coq.Bool.Bool.eq_iff_eq_true	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.081255197525	9
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0497901439667	5
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0330319404602	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0337970256805	3
Coq.Bool.Bool.absurd_eq_bool	40	5.5.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.383139133453	215
Coq.Bool.Bool.absurd_eq_true	40	5.0	search with cache (only 1: destr_bool; only 1: intuition).	0.031327009201	7
Coq.Bool.Bool.trans_eq_bool	40	4	search with cache (only 1: destr_bool).	0.0406899452209	13
Coq.Bool.Bool.Is_true_eq_true	40	0.5.2	search with cache (only 1: intros; only 1: destr_bool; only 1: auto).	0.0359740257263	10
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0235059261322	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0306978225708	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0219750404358	1
Coq.Bool.Bool.eqb_eq	40	2.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.040027141571	5
Coq.Bool.Bool.orb_prop_elim	40	0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct a, b; only 1: auto with bool; only 1: auto with bool; only 1: auto with bool; only 1: destr_bool; only 1: auto).	0.05846118927	10
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0315380096436	2
Coq.Bool.Bool.andb_prop_intro	40	8.0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: apply H).	1.24830007553	713
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0584089756012	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.120342969894	23
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto).	0.0514209270477	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0395491123199	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0332880020142	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0327229499817	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0405449867249	3
Coq.Bool.Bool.andb_if	40	2	search with cache (only 1: destr_bool).	0.0593957901001	23
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.0260899066925	1
Coq.Bool.Bool.andb_lazy_alt	40	0.1.1.2.0.0	search with cache (only 1: intros; only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: repeat split; only 1: reflexivity).	0.0485100746155	10
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.0253779888153	2
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	0.1.3.0	search with cache (only 1: destruct 1; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition).	0.0499951839447	8
Coq.Bool.Bool.reflect_dec	40	2.2.2	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.128463029861	24
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0605881214142	6
Coq.Bool.BoolEq.beq_eq_true	40	0.1.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0130100250244	6
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40	12.50.0	search with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	21.170126915	93840
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40	0.0.7.8.5.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: intuition; only 1: case (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	16.8174071312	21475
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	2.2.0.0.4.8.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: Bool.destr_bool; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto).	12.6140911579	7245
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	9	search with cache (only 1: intuition).	0.187833786011	117
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	3.0.2.0.0.0.0.1.1.0.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: tauto).	6.97805905342	4785
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	2.0.1.0.2.1.20	search with cache (only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto with datatypes; only 1: simpl; only 1: tauto).	2.42545604706	1843
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40	0.3.10.0.0.7.0.2	search with cache (only 1: unfold set_In; only 1: intros a0 x0 Ha0; only 1: elim Ha0; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: rewrite set_add_iff; only 1: auto with datatypes).	10.2548367977	11549
Coq.Lists.ListSet.set_union_intro2	40
Coq.Lists.ListSet.set_union_intro	40	0.0.1.1.0.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.143097877502	26
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	1.1.4.0.0.0.0.0.12	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	6.31333684921	3259
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.104956865311	39
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	8.5	search with cache (only 1: intros; only 1: eauto with datatypes).	1.61933302879	801
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	1.2.0.11.1.0.4	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: constructor; only 1: simpl; only 1: apply set_mem_ind2; only 1: auto; only 1: intuition; only 1: now apply set_add_nodup).	11.3839430809	9974
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	10.0.0.0.1.5	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	1.40374207497	1812
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	1.0.47	search with cache (only 1: intro m; only 1: destruct m; only 1: auto).	5.68093585968	25172
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	4.17.0.2	search with cache (only 1: intros; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto).	2.84145712852	5435
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	3.0.23	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.302295923233	931
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.2	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0226671695709	15
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.5	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.18478679657	136
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	5.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0259420871735	20
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.2.0.2.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.242089986801	167
Coq.Lists.List.nil_cons	40	8.2.7	search with cache (only 1: intro H; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: CRelationClasses.simpl_crelation).	0.207387924194	375
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	4.0.0.0.0	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: firstorder  discriminate; only 1: intros; only 1: inversion 1).	0.0186328887939	9
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	4.0	search with cache (only 1: unfold hd_error, tl; only 1: auto).	0.0108058452606	6
Coq.Lists.List.hd_error_cons	40	4.1	search with cache (only 1: simpl; only 1: CRelationClasses.simpl_crelation).	0.0123898983002	7
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	3.3.0.0	search with cache (only 1: simpl; only 1: destruct l; only 1: reflexivity; only 1: auto).	0.0199530124664	11
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40	0.0.0.1.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0215799808502	10
Coq.Lists.List.app_assoc	40	0.0.0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.0217888355255	8
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.0376758575439	26
Coq.Lists.List.app_comm_cons	40	2.4	search with cache (only 1: simpl; only 1: f_equal).	0.0257611274719	20
Coq.Lists.List.app_eq_nil	40	2.3.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: intros H; only 1: discriminate H).	0.462234973907	398
Coq.Lists.List.app_eq_unit	40	0.1.2.13.7.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: destruct x; only 1: inversion 1; only 1: auto; only 1: intros H; only 1: discriminate H).	21.5726180077	36382
Coq.Lists.List.elt_eq_unit	40
Coq.Lists.List.app_inj_tail_iff	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	3.12.0.2.0.8	search with cache (only 1: intro x; only 1: induction x as [| x l IHl]; only 1: intro x; only 1: split; only 1: simpl; only 1: auto).	6.14507317543	8056
Coq.Lists.List.last_length	40	1.0.2.2.2	search with cache (only 1: intro l; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.20209312439	118
Coq.Lists.List.app_inv_head_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.app_inv_tail_iff	40
Coq.Lists.List.in_eq	40	0.15.0	search with cache (only 1: intros a b; only 1: left; only 1: auto).	0.198762893677	325
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00968313217163	2
Coq.Lists.List.not_in_cons	40	5.3.0.1.8	search with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intros (Hb, Ha); only 1: intuition).	0.481599092484	576
Coq.Lists.List.in_nil	40	0.0	search with cache (only 1: intros a b; only 1: auto).	0.00903010368347	2
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	15.2.2.0.0.1	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: intros a0 y H H0; only 1: firstorder  discriminate).	7.2760219574	9324
Coq.Lists.List.in_app_iff	40	20.0.7.0.0.2	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto).	18.8484730721	27081
Coq.Lists.List.in_split	40
Coq.Lists.List.in_elt	40	1.5.0.1.1.1	search with cache (only 1: intros x l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.215723991394	270
Coq.Lists.List.in_elt_inv	40	2.0.0.0.1.4.6.0.4	search with cache (only 1: intro H; only 1: intros y H0 H1; only 1: elim H0; only 1: intro H2; only 1: elim H2; only 1: auto; only 1: auto; only 1: simpl; only 1: intuition).	3.69822502136	4931
Coq.Lists.List.in_inv	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.0101180076599	3
Coq.Lists.List.in_dec	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0118820667267	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.0.0.0.7.0.2	search with cache (only 1: induction l as [| ? ? IHl]; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	4.32109093666	3111
Coq.Lists.List.app_nth1	40	0.0.0.0.3.0.2	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.54437708855	722
Coq.Lists.List.app_nth2	40
Coq.Lists.List.app_nth2_plus	40	0.0.0.1.1.0	search with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: intros l' d [| n]; only 1: auto; only 1: auto; only 1: auto).	0.0274178981781	8
Coq.Lists.List.nth_middle	40	0.2.3	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0379540920258	29
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_ext	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.0.0.5.1.0	search with cache (only 1: revert n; only 1: induction l as [| ? ? IHl]; only 1: now auto with arith; only 1: intro n; only 1: destruct n; only 1: simpl; only 1: split; only 1: simpl; only 1: auto with arith).	7.69356584549	4529
Coq.Lists.List.nth_error_app2	40	0.0.1.0.3.1.1.0.0.4.0	search with cache (only 1: revert l; only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	4.11908793449	2989
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	1.0.0.0.0.0.0.1.6	search with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl in *; only 1: easy; only 1: intro n; only 1: destruct n; only 1: simpl; only 1: split; only 1: simpl; only 1: now auto with arith).	5.04979991913	2743
Coq.Lists.List.last_last	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.removelast_last	40
Coq.Lists.List.remove_cons	40
Coq.Lists.List.remove_app	40
Coq.Lists.List.remove_In	40
Coq.Lists.List.notin_remove	40
Coq.Lists.List.in_remove	40
Coq.Lists.List.in_in_remove	40
Coq.Lists.List.remove_remove_comm	40
Coq.Lists.List.remove_remove_eq	40	0.1.3.0.2.0.0.10.0.1.0.11	search with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: symmetry; only 1: destruct (eq_dec x z); only 1: auto; only 1: simpl; only 1: destruct (eq_dec x z); only 1: tauto; only 1: rewrite IHl; only 1: auto).	34.9590711594	38642
Coq.Lists.List.remove_length_le	40
Coq.Lists.List.remove_length_lt	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4.0	search with cache (only 1: simpl; only 1: intuition).	0.0106599330902	6
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	2.0.0.5	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	0.140682935715	48
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0191881656647	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	1.0.3.3.1.0.3.23	search with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	33.7746801376	61679
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.rev_eq_app	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40	0.3.0.0.0.11.2.2	search with cache (only 1: induction l as [| a l IHl]; only 1: easy; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).	4.48442292213	6983
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	5.5.10	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: auto).	2.1826570034	3914
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	2	search with cache (only 1: auto).	0.00788593292236	3
Coq.Lists.List.concat_cons	40	1.0	search with cache (only 1: intros a b; only 1: auto).	0.0120470523834	3
Coq.Lists.List.concat_app	40
Coq.Lists.List.in_concat	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	2	search with cache (only 1: auto).	0.00916981697083	3
Coq.Lists.List.in_map	40	0.0.2.2.0.0.6	search with cache (only 1: induction l as [| a l IHl]; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: firstorder; only 1: destruct H; only 1: auto).	0.582567930222	546
Coq.Lists.List.in_map_iff	40	0.0.1.0.0.1.0.0	search with cache (only 1: intro l; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0380918979645	10
Coq.Lists.List.map_length	40	4.0.1.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	0.0445218086243	21
Coq.Lists.List.map_nth	40	1.0.0.0.1.20.0.0.5.5	search with cache (only 1: induction l as [| ? ? IHl]; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros l2; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto)).	36.4586789608	56577
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.1.0.0.0.2.8	search with cache (only 1: intros l1; only 1: induction l1 as [| a l1 IHl1]; only 1: auto; only 1: intros l2; only 1: simpl; only 1: f_equal; only 1: auto).	2.49128389359	2088
Coq.Lists.List.map_last	40	0.1.2.0.0.3	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.25764799118	145
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	7.0	search with cache (only 1: intro l; only 1: now destruct l).	0.110586881638	101
Coq.Lists.List.map_eq_cons	40
Coq.Lists.List.map_eq_app	40
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.flat_map_app	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.5.2.2.9	search with cache (only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.837592124939	1058
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	2.9.1.1.0	search with cache (only 1: induction l as [| a l IHl]; only 1: repeat split; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.923540115356	1404
Coq.Lists.List.map_map	40	1.0.0.0.0.9	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.748250961304	804
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	1.2.0.1.0.1.4	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.732033014297	806
Coq.Lists.List.flat_map_ext	40	1.4.0.0.0.0.1.9	search with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IH; only 1: rewrite H by intuition; only 1: reflexivity).	0.842283010483	1256
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.fold_left_app	40	11.2.0.2.0	search with cache (only 1: induction l as [| a l IHl]; only 1: repeat split; only 1: intros; only 1: simpl; only 1: auto).	2.39470601082	3105
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.7.0.3.0.0.6.1	search with cache (only 1: intros; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: destruct l as [| x l]; only 1: reflexivity; only 1: rewrite IHl; only 1: auto).	6.17993283272	8025
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.2.1.0.5.9.8	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: split; only 1: simpl; only 1: case (f a); only 1: auto; only 1: simpl; only 1: congruence).	1.34749317169	2510
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	1.2.0.2.0.6	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	0.704978942871	347
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0131981372833	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	9.0.2	search with cache (only 1: intros f g l; only 1: rewrite filter_map; only 1: apply ext_in_map).	0.555578947067	431
Coq.Lists.List.filter_ext_in_iff	40	0.1.1.1.7.1	search with cache (only 1: intros f g l; only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.418884992599	411
Coq.Lists.List.filter_ext	40	1.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0136260986328	6
Coq.Lists.List.remove_alt	40	3.4.3.0.0.3.1.19	search with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct (eq_dec x z); only 1: auto; only 1: rewrite IHl; only 1: auto).	26.1411099434	24537
Coq.Lists.List.count_occ_alt	40
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.0.2.0.6.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.719392061234	594
Coq.Lists.List.split_length_r	40	0.0.0.2.0.6.1	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	1.27557611465	1009
Coq.Lists.List.split_combine	40	1.0.2.5.0.0.2.0.6.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (split l); only 1: subst; only 1: destruct a; only 1: simpl in *; only 1: auto).	11.0210790634	9473
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.2.0.0.0.0.0.1.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: trivial; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.50412082672	812
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	1.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0186381340027	4
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0125880241394	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0130951404572	3
Coq.Lists.List.lel_nil	40	7.0.0.0.1.2.2.0.4	search with cache (only 1: intro l2; only 1: intros Heq; only 1: destruct l2 as [| x2 l2]; only 1: auto; only 1: absurd (length (x2 :: l2 ++ l) <= length l); only 1: simpl; only 1: rewrite app_length; only 1: auto with arith; only 1: now simpl).	2.69903802872	2581
Coq.Lists.List.incl_nil_l	40	2.0.0.2.0	search with cache (only 1: induction l as [| x l]; only 1: auto; only 1: intros a b; only 1: simpl; only 1: auto).	0.0203721523285	9
Coq.Lists.List.incl_l_nil	40	9.9.3.4.17	search with cache (only 1: intros l H; only 1: destruct l as [| x l]; only 1: auto; only 1: specialize (H x); only 1: firstorder).	27.5323491096	50632
Coq.Lists.List.incl_refl	40	1.0	search with cache (only 1: intros l a Hin; only 1: auto).	0.00901198387146	3
Coq.Lists.List.incl_tl	40	1.17	search with cache (only 1: right; only 1: auto).	0.653208971024	730
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.00830602645874	1
Coq.Lists.List.incl_appl	40	2	search with cache (only 1: auto with datatypes).	0.103970050812	14
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0111770629883	1
Coq.Lists.List.incl_cons	40	4.3.2	search with cache (only 1: intros; only 1: intros Hincl; only 1: firstorder  (subst; auto)).	0.199330091476	87
Coq.Lists.List.incl_cons_inv	40	0.1.0.0	search with cache (only 1: unfold incl; only 1: intros x y Hin; only 1: simpl; only 1: auto).	0.0198290348053	5
Coq.Lists.List.incl_app	40	1.4.1.0.4.4	search with cache (only 1: unfold incl; only 1: intros l m a; only 1: elim l; only 1: auto; only 1: intros; only 1: firstorder).	3.4175760746	3117
Coq.Lists.List.incl_app_app	40	0	search with cache (only 1: auto with datatypes).	0.0107638835907	1
Coq.Lists.List.incl_app_inv	40	4.2.2	search with cache (only 1: unfold incl; only 1: intros; only 1: intuition).	0.0997531414032	89
Coq.Lists.List.incl_filter	40
Coq.Lists.List.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.firstn_nil	40	0.0.49	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.390457868576	1334
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.00817489624023	1
Coq.Lists.List.firstn_all	40	0.2.6.0.0.1.11	search with cache (only 1: induction l as [| a l' Hrec]; only 1: now simpl; only 1: destruct l' as [| b l']; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).	1.03651499748	1083
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.00790405273438	2
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40	3.0.1.3.7.0.1.0	search with cache (only 1: induction n as [| k iHk]; only 1: now reflexivity; only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: now reflexivity; only 1: simpl in *; only 1: intro H; only 1: now f_equal).	37.3889498711	27026
Coq.Lists.List.firstn_app_2	40	1.0.0.2.4.0.8.1	search with cache (only 1: intros l1 l2; only 1: induction l1 as [| ? ? IHl1]; only 1: unfold firstn at 2, length; only 1: now simpl; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: f_equal; only 1: now simpl).	38.0373649597	30429
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40	2.0.0.2.4.0.8	search with cache (only 1: induction n as [| k iHk]; only 1: now reflexivity; only 1: destruct l as [| x xs]; only 1: apply firstn_all2; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	13.8492519855	11497
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	8	search with cache (only 1: trivial).	0.0160429477692	20
Coq.Lists.List.skipn_nil	40	2.0.4.24	search with cache (only 1: intro l'; only 1: destruct l' as [| b l']; only 1: reflexivity; only 1: reflexivity).	0.496644020081	1057
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00982093811035	1
Coq.Lists.List.skipn_all	40	2.1.36	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: now simpl).	1.92651391029	3296
Coq.Lists.List.skipn_all2	40
Coq.Lists.List.firstn_skipn	40	3.0.3.3.2.1.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: simpl; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: f_equal; only 1: auto with arith).	3.38656783104	3045
Coq.Lists.List.firstn_length	40	0.0.0.0.5.0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.60412311554	2496
Coq.Lists.List.skipn_length	40	4.0.2.9.4.3	search with cache (only 1: induction n as [| k iHk]; only 1: now intro l; induction l; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto with arith).	5.93939781189	4419
Coq.Lists.List.skipn_app	40	0.0.2.0.1.1.0.1	search with cache (only 1: induction n; only 1: intros l; only 1: auto; only 1: intro l; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	0.909508943558	447
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.removelast_firstn_len	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2.0.0.0.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.019376039505	8
Coq.Lists.List.combine_firstn_l	40	3.0.0.3.0.1.0.1.1.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: intros l; only 1: apply length_zero_iff_nil; only 1: auto; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: apply length_zero_iff_nil; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	34.3848719597	27109
Coq.Lists.List.combine_firstn_r	40	0.2.0.0.0.0.1.0.1.4.2.4.0	search with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: intro l; only 1: induction l as [| x l IHl]; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with l'; only 1: rewrite <- IHl; only 1: reflexivity).	36.941642046	35160
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	4.1.1.6	search with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder).	0.962306976318	658
Coq.Lists.List.Add_length	40	0.1.2.5	search with cache (only 1: induction 1 as [| ? ? ? ? IHAdd]; only 1: trivial; only 1: simpl in *; only 1: auto).	0.158626079559	79
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0123770236969	2
Coq.Lists.List.NoDup_cons_iff	40	1.5.2.1	search with cache (only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: now constructor).	0.214863061905	185
Coq.Lists.List.NoDup_rev	40
Coq.Lists.List.NoDup_filter	40
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.nodup_incl	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.cons_seq	40	2	search with cache (only 1: auto).	0.00775408744812	3
Coq.Lists.List.seq_length	40	3.6.2.3.11	search with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	1.4519879818	2412
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.seq_S	40	0.1.0.1.0.1.0.2	search with cache (only 1: intro len1; only 1: induction len1 as [| len1' IHlen]; only 1: intros; only 1: simpl in *; only 1: now rewrite Nat.add_0_r; only 1: intros; only 1: simpl in *; only 1: now rewrite Nat.add_succ_r, IHlen).	0.334919214249	276
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nth	40
Coq.Lists.List.Exists_nil	40	14.0	search with cache (only 1: intuition; only 1: easy).	0.150947093964	160
Coq.Lists.List.Exists_cons	40	0.0.0.0.84.29	search with cache (only 1: intuition; only 1: inversion H; only 1: subst; only 1: auto; only 1: subst; only 1: auto).	9.96504092216	37890
Coq.Lists.List.Exists_app	40
Coq.Lists.List.Exists_rev	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Exists_fold_right	40	0.0.0.0.4.0.3.4.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: simpl; only 1: auto; only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intuition).	12.2538950443	13114
Coq.Lists.List.incl_Exists	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_nth	40
Coq.Lists.List.Forall_inv	40	3.1.11	search with cache (only 1: intros a b; only 1: intros HE; only 1: now inversion HE; intuition).	0.54624080658	856
Coq.Lists.List.Forall_inv_tail	40	0.2.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0151760578156	5
Coq.Lists.List.Forall_app	40
Coq.Lists.List.Forall_elt	40	0.5.1.1.0.1.0.1.11	search with cache (only 1: induction l1; only 1: simpl; only 1: intuition; only 1: inversion H; only 1: intuition; only 1: simpl; only 1: intros HF; only 1: inversion_clear HF; only 1: intuition).	2.02193307877	3197
Coq.Lists.List.Forall_rev	40
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	1.2.1.2.7.5.2.0.1	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: intuition; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	15.2376089096	13158
Coq.Lists.List.Forall_fold_right	40	2.0.2.0.1.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	4.80063796043	3054
Coq.Lists.List.incl_Forall	40
Coq.Lists.List.map_ext_Forall	40
Coq.Lists.List.Exists_impl	40	0.0.4.9.7.3	search with cache (only 1: intros HE; only 1: intros P H H0 l; only 1: apply Exists_exists; only 1: induction l; only 1: firstorder; only 1: firstorder).	5.7532479763	8764
Coq.Lists.List.Exists_or	40
Coq.Lists.List.Exists_or_inv	40
Coq.Lists.List.Forall_impl	40	0.0.11.0.2.5.5	search with cache (only 1: intro; only 1: intros a l H; only 1: induction 1; only 1: left; only 1: right; only 1: auto; only 1: auto).	21.9856250286	29998
Coq.Lists.List.Forall_and	40	0.0.0.0.6.0.2	search with cache (only 1: intros P Q H l; only 1: rewrite !Forall_forall; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder).	2.86392307281	2114
Coq.Lists.List.Forall_and_inv	40	4.4.0	search with cache (only 1: intros P Q l; only 1: rewrite !Forall_forall; only 1: firstorder).	0.420643091202	241
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.incl_Forall_in_iff	40	3.0.2.16.5	search with cache (only 1: split; only 1: apply Forall_forall; only 1: induction 1; only 1: easy; only 1: intuition).	8.44499492645	9379
Coq.Lists.List.exists_Forall	40
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.00726509094238	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	1.1.0.31	search with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: auto; only 1: simpl; only 1: auto).	14.6901619434	22060
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.1.0.29	search with cache (only 1: induction n; only 1: auto; only 1: simpl in *; only 1: now f_equal).	2.99846792221	3988
Coq.Lists.List.repeat_spec	40	6.0.16.0.16.62	search with cache (only 1: revert n; only 1: induction n as [| k Hrec]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	8.00958108902	40919
Coq.Lists.List.repeat_cons	40	0.31.12.0.82	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto with arith).	5.1731710434	16636
Coq.Lists.List.repeat_app	40	0.0.0.0.2.1	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: apply IHn).	0.0247521400452	9
Coq.Lists.List.repeat_eq_app	40
Coq.Lists.List.repeat_eq_cons	40	0.1.11.9.8	search with cache (only 1: induction n as [| k Hrec]; only 1: intros [=<- H0]; only 1: intros [=<- H0]; only 1: subst; only 1: auto).	4.98199892044	9389
Coq.Lists.List.repeat_eq_elt	40
Coq.Lists.List.Forall_eq_repeat	40
Coq.Lists.List.repeat_to_concat	40	1.0.0.2.2	search with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: apply IHn).	0.0464990139008	25
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.0137479305267	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	1.1.1.0.0.10	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: do 2 (etransitivity; try eassumption)).	2.65977907181	1217
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0160000324249	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	11.1.7.3.6	search with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip; only 1: eauto; only 1: now transitivity l').	3.59268093109	4230
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.3.1	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0188088417053	7
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	2.0.2.0.1.0.0.0.2	search with cache (only 1: induction l; only 1: split; only 1: now intuition; only 1: now intuition; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	2.9299800396	2106
Coq.Lists.SetoidList.InA_cons	40	1.1.1.15.0.2	search with cache (only 1: intros HE; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	2.59090709686	2937
Coq.Lists.SetoidList.InA_nil	40	11.8.2	search with cache (only 1: intro y; only 1: firstorder; only 1: now intuition).	0.868063926697	1472
Coq.Lists.SetoidList.InA_alt	40	0.0.1.0.6.2.0.5.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	10.3294930458	7882
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	0.0.2.0.1	search with cache (only 1: induction l as [| x l]; only 1: intro n; only 1: auto with arith; only 1: intros a b; only 1: auto).	0.0290019512177	8
Coq.Lists.SetoidList.eqlistA_altdef	40	0.2.2.5.0.2.11.8	search with cache (only 1: intro y; only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	22.4779140949	32247
Coq.Lists.SetoidList.equivlist_equiv	40	8	search with cache (only 1: firstorder).	0.0245530605316	9
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.4.5	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.438152074814	123
Coq.Lists.SetoidList.In_InA	40	0.4.0	search with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.0246489048004	7
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40	14.0.4.0.16.3	search with cache (only 1: intros; only 1: induction l1; only 1: auto; only 1: inversion H; only 1: auto; only 1: intuition).	22.7485480309	10944
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.7.17	search with cache (only 1: intuition; only 1: inv; only 1: auto).	0.998682022095	628
Coq.Lists.SetoidList.InA_double_head	40	0.8	search with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	0.189960956573	14
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0709500312805	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.2.0.5	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.122178077698	31
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: intuition).	0.0610251426697	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	1.1.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: intuition).	0.0837268829346	5
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.0.9	search with cache (only 1: constructor; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.628611087799	334
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	3.0.0.2.0.3.0.2.5.0.8	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	3.75593495369	3927
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	0.5.0.6.7.0.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: destruct IHl; only 1: auto).	3.16122508049	3222
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	13.1.1	search with cache (only 1: destruct l; only 1: constructor; only 1: intuition).	14.6472160816	3735
Coq.Lists.SetoidList.InA_InfA	40	3.0.0.0.3	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: eauto).	0.539544820786	73
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.4.1.46	search with cache (only 1: induction 1; only 1: auto; only 1: constructor; only 1: auto).	5.50981092453	12252
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	2.21.0.26.3	search with cache (only 1: intro; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	23.5020561218	29948
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.3.1.0.0.1.1.3	search with cache (only 1: induction 1; only 1: simpl in *; only 1: induction 1; only 1: auto; only 1: auto; only 1: simpl; only 1: intro; only 1: auto).	4.36924099922	986
Coq.Lists.SetoidList.eqlistA_app	40	0.0.1.0.1	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0457208156586	7
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.0.4.1.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.574085950851	331
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.7.0	search with cache (only 1: intros x0 y; only 1: decide equality; only 1: decide equality).	0.116645097733	71
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: auto).	0.0147061347961	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0152950286865	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.1.0.1.7	search with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.286683082581	93
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0155298709869	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0135769844055	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.0133771896362	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.0118670463562	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.0411789417267	7
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.2	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: reflexivity).	0.0209419727325	5
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.1.0.1.0.1.0.0.0.1.1	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	6.99693799019	4492
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.1.0.2.1.0.0.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto; only 1: reflexivity).	10.0171809196	5003
Coq.NArith.BinNat.N.pred_succ	40	5.0.11	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	1.18017506599	845
Coq.NArith.BinNat.N.pred_sub	40	0.1.0.5.0.7	search with cache (only 1: induction n using peano_ind; only 1: reflexivity; only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.496011972427	309
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.127905130386	1
Coq.NArith.BinNat.N.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0124628543854	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.1.0	search with cache (only 1: destruct n; only 1: auto; only 1: auto).	0.0239770412445	4
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0161099433899	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	0.18.4	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	9.03840613365	7556
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.2.2.0.2	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	1.7087829113	634
Coq.NArith.BinNat.N.compare_le_iff	40	1.0.0.0.2	search with cache (only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.239651918411	54
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: auto; only 1: now destruct 2; only 1: trivial).	0.0398390293121	8
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	4	search with cache (only 1: reflexivity).	0.454555988312	22
Coq.NArith.BinNat.N.succ_double_spec	40	11.6.4	search with cache (only 1: simpl; only 1: nzsimpl'; only 1: now destruct n).	17.8388898373	3083
Coq.NArith.BinNat.N.double_add	40	0.1.1.0.1.0.0.0.0.0.0.1.8	search with cache (only 1: induct n; only 1: nzsimpl; only 1: reflexivity; only 1: intro n; only 1: destruct n, m; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	37.1072468758	7595
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0186910629272	1
Coq.NArith.BinNat.N.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.0204980373383	2
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.1.0.54	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: auto).	0.891191959381	1951
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0152699947357	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40	0.3.3.0.3.0.1.3.20	search with cache (only 1: destruct n, m; only 1: intro n; only 1: now destruct n; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	4.53880119324	4545
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	3.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0564451217651	11
Coq.NArith.BinNat.N.double_le_mono	40	2.1	search with cache (only 1: intro H; only 1: now destruct n, m).	0.0332300662994	5
Coq.NArith.BinNat.N.succ_double_lt_mono	40	2.1.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: easy).	0.0797090530396	24
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0370440483093	5
Coq.NArith.BinNat.N.compare_0_r	40
Coq.NArith.BinNat.N.pow_0_r	40	1.0	search with cache (only 1: rewrite one_succ; only 1: now rewrite <- one_succ).	0.0203108787537	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	10.16	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.273625135422	467
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.2.2.11.0.0.2.2.5	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: apply succ_inj_wd; only 1: now rewrite <- one_succ; only 1: easy'; only 1: trivial).	17.8504679203	23725
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0296831130981	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	16.2	search with cache (only 1: intros LT; only 1: now elim (nlt_0_r n)).	0.738355875015	332
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2	search with cache (only 1: apply le_0_l).	0.516123056412	147
Coq.NArith.BinNat.N.testbit_even_0	40	3.0.9.0.17.14.1.2	search with cache (only 1: rewrite two_succ; only 1: simpl; only 1: destruct (PeanoNat.Nat.eq_decidable a 0) as [EQ| NEQ]; only 1: subst; only 1: easy'; only 1: destruct a as [| a]; only 1: easy'; only 1: easy').	12.769618988	17027
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.0266230106354	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.1.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0314311981201	5
Coq.NArith.BinNat.N.testbit_neg_r	40	8.0	search with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	0.0358109474182	10
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0167171955109	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40	17.5	search with cache (only 1: unfold ltb, lt; only 1: now rewrite Pos.compare_antisym, CompOpp_iff).	26.0918970108	10640
Coq.NArith.BinNat.N.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	1.37107086182	170
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.015830039978	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.900900840759	86
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0140318870544	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	2.2.4.2.1.2.24	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: now nzsimpl).	14.6364448071	8109
Coq.NArith.BinNat.N.iter_swap_gen	40	0.0.0.0.0.0.0.0.0.2.0.0.0.33	search with cache (only 1: induction n; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp).	23.5000419617	21951
Coq.NArith.BinNat.N.iter_swap	40	0.1.1.3.3.28	search with cache (only 1: intro H; only 1: intuition; only 1: destruct H; only 1: auto; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	4.6378800869	7847
Coq.NArith.BinNat.N.iter_succ	40
Coq.NArith.BinNat.N.iter_succ_r	40	7.0.2.0.0.0.0	search with cache (only 1: intro n; only 1: destruct n; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	6.68697285652	3743
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.0.0.11.0.0.0.1	search with cache (only 1: intro n; only 1: destruct n; only 1: intros; only 1: trivial; only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	5.07501411438	4436
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40	0.3	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0287919044495	5
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0167119503021	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0287749767303	1
Coq.NArith.Ndec.Neqb_complete	40
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	10.0.1	search with cache (only 1: intros H; only 1: eqb2eq; only 1: now subst).	0.91416311264	658
Coq.NArith.Ndec.Ndiv2_neq	40	1.3.0.1	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.133404970169	22
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.0	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.122699022293	8
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0142998695374	1
Coq.NArith.Ndec.Nleb_antisym	40	1.1.1	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order).	0.123643159866	6
Coq.NArith.Ndec.Nleb_trans	40	0.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.order).	0.0420339107513	3
Coq.NArith.Ndec.Nleb_ltb_trans	40	2.0.11	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	1.10118794441	590
Coq.NArith.Ndec.Nltb_leb_trans	40	2.0.16	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	4.89828705788	3818
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	2.1.0.2.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.370520114899	208
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.018709897995	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0355980396271	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	7.0.2.21.0	search with cache (only 1: intro n; only 1: N.cases ltac:(n); only 1: auto; only 1: intro n; only 1: now destruct n).	2.3953769207	3962
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	4.28.0.2.39	search with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: fix odd_spec 1; only 1: auto).	29.830753088	8640
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.11	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.187577009201	185
Coq.NArith.Ndist.ni_min_O_r	40	1.0.2.3.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.203940153122	132
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.00725889205933	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.012964963913	5
Coq.NArith.Ndist.ni_le_refl	40	0.0.0.1.0.0.0.1.0.0.0.45	search with cache (only 1: red; only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: intros; only 1: simpl; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	2.359416008	8417
Coq.NArith.Ndist.ni_le_antisym	40	5.1.5.5	search with cache (only 1: intros; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: trivial).	1.15154886246	1595
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	2.1.3.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.223080873489	153
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.0.0.2.0.0	search with cache (only 1: intro a; only 1: destruct a; only 1: intros; only 1: trivial; only 1: intro a; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.0423619747162	10
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	search with cache (only 1: now destruct a).	0.01118683815	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1	search with cache (only 1: reflexivity).	0.00960183143616	2
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	search with cache (only 1: auto).	0.00982308387756	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.00959181785583	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.1.7.1.7.3.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: auto; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	8.63013911247	9461
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.2.0.2.1.0.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.873106002808	633
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.3.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	0.763343095779	434
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	6.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite N.ldiff_spec).	0.0526869297028	32
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.0.0.0.0.1.5.5.1.3.2	search with cache (only 1: intros a; only 1: destruct a; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: destruct p as [p| p| ]; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: easy).	16.6644530296	23631
Coq.NArith.Ndigits.Ndouble_bit0	40	20.3	search with cache (only 1: intros; only 1: now destruct n).	0.234931945801	475
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	1.0.0.0.0.3	search with cache (only 1: destruct n as [| p]; only 1: split; only 1: destruct p as [p| p| ]; only 1: easy; only 1: easy; only 1: easy).	0.0299928188324	10
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40	1.1.1.3.1.12.13	search with cache (only 1: intros a n; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	23.2978448868	19590
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.7	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.144374847412	58
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.2.0.0.0.0.0.1.0.0.0.0.0.0.4.0	search with cache (only 1: intros a a' H H0; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	10.1135501862	7523
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.0.2.0.0.0.0.10.0	search with cache (only 1: intros a a'; only 1: destruct a; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	11.2740659714	7650
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.0.2.1.0.1.7.2.0	search with cache (only 1: intros; only 1: destruct a' as [| p0]; only 1: simpl; only 1: destruct a as [| p]; only 1: reflexivity; only 1: trivial; only 1: destruct a as [| p]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	6.62110900879	7431
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	1.1.9.1.9	search with cache (only 1: intros; only 1: destruct a as [| p]; only 1: easy'; only 1: exists p; only 1: trivial).	0.614645957947	992
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.0.3.0.6.0.0	search with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	1.80535292625	1482
Coq.NArith.NArith.test	40	0	search with cache (only 1: intuition N.Private_Tac.order).	0.0114719867706	1
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.2.0.1.2.4.0	search with cache (only 1: rewrite <- (id a), <- (id a'); only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	3.77390813828	922
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.0.0.0.0	search with cache (only 1: destruct a as [| p]; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0366780757904	8
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.4.14	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.775424957275	885
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.1.0.10	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	2.14145493507	894
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0384750366211	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.031327009201	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	4	search with cache (only 1: nat2N).	0.0334911346436	5
Coq.NArith.Nnat.Nat2N.inj_add	40	5	search with cache (only 1: nat2N).	0.0472688674927	11
Coq.NArith.Nnat.Nat2N.inj_sub	40	6	search with cache (only 1: nat2N).	0.0427289009094	11
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0321660041809	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	4	search with cache (only 1: nat2N).	0.0318388938904	5
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	4	search with cache (only 1: nat2N).	0.0331439971924	5
Coq.NArith.Nnat.Nat2N.inj_max	40	4	search with cache (only 1: nat2N).	0.0464129447937	5
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	1.31.46.1.22	search with cache (only 1: symmetry; only 1: apply Pos.eqb_eq; only 1: destr_bool; only 1: destruct x; only 1: destr_bool).	10.6852259636	45133
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0553970336914	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.010950088501	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0104320049286	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.00792503356934	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	9.4.6	search with cache (only 1: apply Pos.eqb_eq; only 1: destruct x; only 1: destr_bool).	3.86991095543	729
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40	0.3.5	search with cache (only 1: destruct x; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	1.06937003136	289
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.2.5.13.0	search with cache (only 1: intro n; only 1: intros x; only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: decide equality).	20.7012560368	11968
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0120887756348	1
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0115671157837	1
Coq.Strings.String.eqb_compat	40	0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: t_eqb).	0.0101320743561	2
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.1.6.3.1.0.1	search with cache (only 1: elim s; only 1: auto; only 1: intros b s2'; only 1: simpl; only 1: intros e; only 1: rewrite e; only 1: auto).	0.83000087738	1222
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.2.0.30	search with cache (only 1: destruct x; only 1: reflexivity; only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.740208864212	665
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	10	search with cache (only 1: trivial).	0.0228409767151	26
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	14	search with cache (only 1: trivial).	3.33525705338	2152
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0	search with cache (only 1: auto).	0.018012046814	1
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.nsatz.NsatzTactic.psos_r1b	40
Coq.nsatz.NsatzTactic.psos_r1	40	2.0.2.0.0.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: setoid_rewrite H; only 1: cring).	0.238090991974	10
Coq.nsatz.NsatzTactic.nsatzR_diff	40
Coq.nsatz.NsatzTactic.P0Z_correct	40	0	search with cache (only 1: auto).	0.0219690799713	1
Coq.nsatz.NsatzTactic.Rext	40
Coq.nsatz.NsatzTactic.Rset	40	5	search with cache (only 1: apply ring_setoid).	0.0190689563751	6
Coq.nsatz.NsatzTactic.Rtheory	40
Coq.nsatz.NsatzTactic.PolZadd_correct	40
Coq.nsatz.NsatzTactic.PolZmul_correct	40
Coq.nsatz.NsatzTactic.R_power_theory	40
Coq.nsatz.NsatzTactic.norm_correct	40
Coq.nsatz.NsatzTactic.PolZeq_correct	40
Coq.nsatz.NsatzTactic.mult_l_correct	40
Coq.nsatz.NsatzTactic.compute_list_correct	40
Coq.nsatz.NsatzTactic.check_correct	40
Coq.nsatz.NsatzTactic.Qri	40
Coq.nsatz.NsatzTactic.Q_one_zero	40	1.1	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0176448822021	4
Coq.nsatz.NsatzTactic.Qcri	40
Coq.nsatz.NsatzTactic.Qdi	40
Coq.nsatz.NsatzTactic.Z_one_zero	40	0	search with cache (only 1: lia).	0.0496890544891	1
Coq.nsatz.NsatzTactic.Zcri	40	5.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0609698295593	14
Coq.nsatz.NsatzTactic.Zdi	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	167	search with cache (only 1: constructor).	2.62264084816	14151
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40	3.0.0.3.5	search with cache (only 1: unfold IZR, IPR; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	1.61136603355	1263
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	1.1.1.1.1.0	search with cache (only 1: simpl in *; only 1: unfold lt; only 1: destruct l as [| x xs]; only 1: easy; only 1: simpl in *; only 1: trivial).	0.692085981369	250
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	6.5.0.0.2	search with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: auto).	2.11133313179	1615
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.1.2.1.0	search with cache (only 1: simple induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: auto).	0.0488409996033	15
Coq.Reals.RList.RList_P19	40	1.2.19.0.9	search with cache (only 1: intro; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: exists a,tail; only 1: reflexivity).	2.27390289307	3819
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	4.19.3	search with cache (only 1: intros; only 1: f_equal; only 1: auto with arith).	1.54902100563	1986
Coq.Reals.RList.RList_P22	40	3.2.8.0.0.0.5	search with cache (only 1: intro; only 1: induction l1 as [| r l1 Hrecl1]; only 1: simpl; only 1: intros; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	3.62894105911	3356
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.2.1.1.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.149262905121	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.4.0.3.1.0.1	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: firstorder; only 1: ring).	0.822797060013	682
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.0601859092712	14
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.2.5.0.0.5	search with cache (only 1: unfold Rgt; only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition eauto  4 with real; only 1: intuition eauto  4 with real).	21.5390980244	11799
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40	0.1.0.0.1	search with cache (only 1: unfold Rmin; only 1: intros r1 r2; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: auto with real).	0.0429670810699	7
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.0606908798218	5
Coq.Reals.Rbasic_fun.Rmin_left	40	1.1.0.0.3	search with cache (only 1: intros x y H; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: auto with real).	0.717462062836	58
Coq.Reals.Rbasic_fun.Rmin_right	40	1.1.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0481071472168	6
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.1.1.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: auto; only 1: auto).	0.0520169734955	8
Coq.Reals.Rbasic_fun.Rmin_comm	40	1.1.0.2.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	1.5442199707	387
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	4.0.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto).	0.0441348552704	12
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.1.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: eauto using Rle_trans, Rle_refl).	1.45615315437	54
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro; only 1: assumption).	0.0485060214996	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.076318025589	5
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.1.0.2.4	search with cache (only 1: intros r1 r2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto with real; only 1: auto with real).	1.48464798927	415
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.781459093094	77
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.0.5	search with cache (only 1: intros r1 r2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto with real; only 1: intuition eauto  4 with real).	0.799396038055	176
Coq.Reals.Rbasic_fun.Rmax_right	40	2.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: auto using Rle_antisym; only 1: intros; only 1: reflexivity).	0.0725319385529	10
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: auto; only 1: eauto using Rle_trans, Rle_refl; only 1: auto).	0.05180311203	8
Coq.Reals.Rbasic_fun.RmaxRmult	40	0.0.3.0.0.3.0.1	search with cache (only 1: intros x y H H0; only 1: apply Rmax_case_strong; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: auto with real; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: auto with real).	23.9514329433	4196
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	1.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto; only 1: intro; only 1: assumption).	0.0698480606079	8
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.2.4	search with cache (only 1: intros x y H' H'0; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: auto with real).	0.494300842285	118
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: auto with real; only 1: auto with real).	0.0320491790771	4
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	1.0.1.1	search with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	0.159697055817	43
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	0.1.0.4.1.6	search with cache (only 1: unfold Rmax; only 1: intros r1 r2; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto with real; only 1: auto with real).	3.11126995087	1869
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.1.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: auto with real; only 1: left; only 1: auto with real; only 1: right; only 1: auto with real).	4.43950605392	468
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	1.3.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).	0.0328550338745	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	3.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0354628562927	17
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	0.0.20.8.1	search with cache (only 1: intro; only 1: red; only 1: apply Rinv_neq_0_compat; only 1: red; only 1: apply (not_0_INR (fact n) (fact_neq_0 n))).	11.9013459682	5562
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	12.1.8.0	search with cache (only 1: intros; only 1: rewrite pow_ne_zero; only 1: auto; only 1: now elim H).	1.3555290699	1063
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.1.0.4.0	search with cache (only 1: intros; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.08666300774	174
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.1.0.6.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	3.83220911026	584
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.2.3	search with cache (only 1: intros; only 1: injection H; only 1: auto).	0.12369799614	16
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1.6	search with cache (only 1: simpl; only 1: auto).	0.359163999557	72
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0	search with cache (only 1: auto with real).	0.0146780014038	1
Coq.Reals.Rfunctions.pow_1	40	1.0.1	search with cache (only 1: intro n; only 1: simpl; only 1: auto with real).	0.0248889923096	5
Coq.Reals.Rfunctions.pow_add	40	0.0.2.0.0.0.0.2	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.623034954071	156
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0	search with cache (only 1: simpl; only 1: auto with real).	0.0151581764221	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.8	search with cache (only 1: intros x y n; only 1: repeat rewrite S_INR; only 1: ring).	0.273686885834	112
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	10.0.0.9.0.1.1	search with cache (only 1: intro; only 1: case n; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intros; only 1: auto with real).	18.2642080784	8131
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	1.0.6.1.0.0.0.0.5.5	search with cache (only 1: destruct 1; only 1: apply Rge_le; only 1: auto with real rorders; only 1: elim n; only 1: auto with real; only 1: intros; only 1: simpl; only 1: case H; only 1: rewrite Rmult_0_l; only 1: auto with real).	31.9315040112	22743
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	2.3.0.0.0.0.7	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto with real; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: ring).	2.83027887344	1072
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.4.0.4	search with cache (only 1: simpl; only 1: intros; only 1: rewrite <- Rmult_assoc; only 1: auto with real).	0.330272912979	176
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	1.1	search with cache (only 1: intros; only 1: auto with real).	0.0193700790405	4
Coq.Reals.Rfunctions.powerRZ_1	40	0.10.2	search with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.708411931992	366
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0519640445709	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	1.1.0.1.48	search with cache (only 1: induction n as [| n Hrecn]; only 1: auto; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto with real).	5.76201915741	5693
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	10.12.0.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	6.66985702515	5687
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	5.2.1	search with cache (only 1: intros; only 1: Nat.nzsimpl; only 1: apply Nat.le_add_r).	0.253308057785	82
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	2	search with cache (only 1: apply Nat.div2_double).	0.0324790477753	3
Coq.Reals.Exp_prop.div2_S_double	40	3	search with cache (only 1: apply Nat.div2_succ_double).	0.0329568386078	4
Coq.Reals.Exp_prop.div2_not_R0	40	2.0.1.1.6.0.0.32	search with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: induction n; only 1: inversion 1; only 1: Nat.order; only 1: intros _; only 1: apply Nat.lt_0_succ).	5.21108698845	5212
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40
Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveReals.Rring	40
Coq.Reals.ClassicalConstructiveReals.RringExt	40
Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40
Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40
Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveReals.plus_IQR	40
Coq.Reals.ClassicalConstructiveReals.mult_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_lt	40
Coq.Reals.ClassicalConstructiveReals.lt_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40
Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40
Coq.Reals.ClassicalConstructiveReals.RabsLUB	40
Coq.Reals.ClassicalConstructiveReals.Rcomplete	40
Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40
Coq.Reals.Rpower.P_Rmin	40	0.0.0.0.3	search with cache (only 1: intros a b c; only 1: unfold Rmin; only 1: destruct (Rle_dec b c); only 1: auto with real; only 1: auto with real).	0.256027936935	70
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_neq_0	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_neq_0	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_pow	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40	0.1.0.0.0.5.15.0.2	search with cache (only 1: intros; only 1: unfold Rpower; only 1: unfold ln; only 1: rewrite Rmult_1_l; only 1: decide (Rlt_dec 0 x) with H; only 1: unfold Rln; only 1: destruct (ln_exists {| pos := x; cond_pos := H |} (cond_pos {| pos := x; cond_pos := H |})) as (?, Hex); only 1: symmetry; only 1: apply Hex).	17.9090750217	5490
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_nonzero	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_Rlog	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_Rpower	40	0.0.0.5	search with cache (only 1: intros; only 1: unfold Rpower; only 1: rewrite ln_exp; only 1: ring).	0.0514311790466	16
Coq.Reals.Rpower.Rlog_pow	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	5.2.2	search with cache (only 1: symmetry; only 1: field; only 1: now split).	0.62014913559	133
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.RIneq.Rle_refl	40	7.1.2.0	search with cache (only 1: intro; only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.797543048859	491
Coq.Reals.RIneq.Rge_refl	40	2.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.23348402977	14
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	1.0.0.50.0	search with cache (only 1: intros; only 1: intro n; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.922024011612	4668
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.0.1.0.7.14.0	search with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_not_eq; only 1: auto with real; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: auto with real).	9.36977910995	11980
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.5.1	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0679569244385	19
Coq.Reals.RIneq.Rdichotomy	40	0.1.0.0	search with cache (only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0352990627289	5
Coq.Reals.RIneq.Rlt_le	40	0.0.0	search with cache (only 1: intro; only 1: left; only 1: auto with real).	0.0129318237305	3
Coq.Reals.RIneq.Rgt_ge	40	0.13	search with cache (only 1: left; only 1: auto with real).	0.648435115814	313
Coq.Reals.RIneq.Rle_ge	40	2.1.0.0.0.10.0	search with cache (only 1: intros; only 1: destruct H; only 1: red; only 1: tauto; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	5.49871492386	3210
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: intuition eauto  3).	0.027440071106	5
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.012647151947	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.00974893569946	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	4.0.2	search with cache (only 1: intro; only 1: red; only 1: apply Rnot_le_lt).	0.0252058506012	12
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0158669948578	3
Coq.Reals.RIneq.Rnot_lt_le	40	2.2.0.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.117358207703	11
Coq.Reals.RIneq.Rnot_gt_le	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0310277938843	8
Coq.Reals.RIneq.Rnot_gt_ge	40	2.3.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.034040927887	9
Coq.Reals.RIneq.Rnot_lt_ge	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0298030376434	8
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0359818935394	17
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.2.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto using Rnot_lt_le with rorders; only 1: auto with real).	0.0334339141846	25
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.2	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.158230781555	50
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0247871875763	6
Coq.Reals.RIneq.Rle_not_gt	40	0.0.8.4	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	2.33203792572	785
Coq.Reals.RIneq.Rge_not_gt	40	0.5.1.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.0207679271698	10
Coq.Reals.RIneq.Req_le	40	0.2.0.0	search with cache (only 1: intros; only 1: subst; only 1: red; only 1: auto with real).	0.0291838645935	6
Coq.Reals.RIneq.Req_ge	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0187339782715	3
Coq.Reals.RIneq.Req_le_sym	40	0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0849969387054	3
Coq.Reals.RIneq.Req_ge_sym	40	0.0.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0857009887695	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0849750041962	5
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	0.1.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0211470127106	4
Coq.Reals.RIneq.Rle_le_eq	40	1.2.1.0	search with cache (only 1: intros r1 r2; only 1: red; only 1: unfold Rle; only 1: intuition).	0.0500450134277	8
Coq.Reals.RIneq.Rge_ge_eq	40	0.2.1	search with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: auto with real).	0.0316951274872	6
Coq.Reals.RIneq.Rlt_eq_compat	40	2.2.2	search with cache (only 1: intros; only 1: subst; only 1: eauto with real).	0.0244169235229	11
Coq.Reals.RIneq.Rgt_eq_compat	40	0.12.1	search with cache (only 1: intros; only 1: subst; only 1: auto with real).	0.745145082474	515
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	1.4.6.15	search with cache (only 1: intros Hb; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: red; only 1: intuition eauto  3).	18.5719380379	10953
Coq.Reals.RIneq.Rle_lt_trans	40	0.1.0.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros; only 1: intuition eauto  3).	0.393906831741	121
Coq.Reals.RIneq.Rlt_le_trans	40	3.0.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  3).	0.277925014496	88
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.3.9.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	3.94703292847	1597
Coq.Reals.RIneq.Rle_dec	40	0.11.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	11.9018452168	660
Coq.Reals.RIneq.Rgt_dec	40	1.0.5.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: intuition).	0.0974740982056	10
Coq.Reals.RIneq.Rge_dec	40
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.0293619632721	4
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0.1.0.1.5.2	search with cache (only 1: intros; only 1: edestruct Rle_dec; only 1: right; only 1: eauto with real; only 1: left; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	1.0252559185	656
Coq.Reals.RIneq.Rle_lt_dec	40	0.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.0563921928406	4
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.1.1.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with real).	0.332983970642	148
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: intuition eauto  4 with real; only 1: unfold Rle; only 1: tauto).	0.0289659500122	7
Coq.Reals.RIneq.Rgt_or_ge	40	2.2.4.2	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: eauto using Rnot_lt_le with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.584538936615	380
Coq.Reals.RIneq.Rle_or_lt	40	0.0.0.0.1.1	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: intuition eauto  4 with real; only 1: unfold Rle; only 1: tauto).	0.139106988907	53
Coq.Reals.RIneq.Rge_or_gt	40	1.1.3.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: eauto using Rnot_lt_le with rorders; only 1: left; only 1: eauto with real).	0.157324075699	72
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.11.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	4.50043702126	796
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.9.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	2.16533493996	297
Coq.Reals.RIneq.Rplus_ne	40	22.0	search with cache (only 1: intros; only 1: intuition).	0.358908891678	696
Coq.Reals.RIneq.Rplus_opp_l	40	4.0	search with cache (only 1: intros; only 1: ring).	6.50984692574	36
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.4.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	0.0752060413361	39
Coq.Reals.RIneq.Rplus_eq_compat_r	40	1.5.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	0.0688631534576	33
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.039085149765	6
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	0.1.0.0.0.0.0.0.1.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	0.671366930008	189
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	3.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0532050132751	6
Coq.Reals.RIneq.Rinv_r_sym	40	3.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0302081108093	6
Coq.Reals.RIneq.Rmult_0_r	40	0.2.2.1	search with cache (only 1: intros; only 1: replace r with (r + 0); only 1: ring; only 1: eauto with real).	0.0832540988922	19
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0205819606781	2
Coq.Reals.RIneq.Rmult_ne	40	0.6.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: unfold IZR, IPR; only 1: auto with real).	0.0723640918732	38
Coq.Reals.RIneq.Rmult_1_r	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.0909330844879	14
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.5.0	search with cache (only 1: intros; only 1: apply f_equal; only 1: auto).	0.90008020401	77
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.12.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	19.1707630157	3908
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0861990451813	2
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.080482006073	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	16.0	search with cache (only 1: intros; only 1: intuition eauto  4 with real).	0.370307922363	323
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.1.2.0	search with cache (only 1: red; only 1: intros; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.0499489307404	9
Coq.Reals.RIneq.Rmult_plus_distr_r	40	7.0	search with cache (only 1: intros; only 1: ring).	3.60421800613	29
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.2.1.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite H; only 1: replace y with (- x + x + y) by ring; only 1: ring).	0.244506120682	43
Coq.Reals.RIneq.Ropp_0	40	2	search with cache (only 1: ring).	0.0164639949799	3
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.5.1	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.0718479156494	24
Coq.Reals.RIneq.Ropp_involutive	40	3.2	search with cache (only 1: intros; only 1: ring).	0.207786083221	14
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	15.1	search with cache (only 1: intros; only 1: ring).	19.7362999916	629
Coq.Reals.RIneq.Ropp_mult_distr_l	40
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0205328464508	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0229041576385	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0229148864746	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0226159095764	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0.0	search with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	0.572592020035	21
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0222988128662	2
Coq.Reals.RIneq.Ropp_minus_distr	40	1.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0212349891663	4
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0191440582275	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.2.1.9	search with cache (only 1: intros x y H; only 1: unfold Rminus; only 1: rewrite H; only 1: ring).	0.795975923538	426
Coq.Reals.RIneq.Rminus_eq_0	40	0.1	search with cache (only 1: unfold Rminus; only 1: ring).	0.0206849575043	3
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	3.2	search with cache (only 1: intros; only 1: ring).	0.020613193512	7
Coq.Reals.RIneq.Rminus_eq_contra	40	5.0	search with cache (only 1: intros; only 1: auto with real).	0.112118959427	47
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0298330783844	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: auto with real).	0.0309209823608	4
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	search with cache (only 1: intros; only 1: ring).	0.0461690425873	23
Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0246298313141	2
Coq.Reals.RIneq.Rinv_1	40	0	search with cache (only 1: field).	0.0216629505157	1
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.5.2.8	search with cache (only 1: intro abs; only 1: intros; only 1: field; only 1: auto with real).	4.28789591789	1009
Coq.Reals.RIneq.Rinv_mult_distr	40	1.16.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	4.01343297958	1577
Coq.Reals.RIneq.Ropp_inv_permute	40	0.1.1	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0846431255341	5
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0831251144409	3
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.0889699459076	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.220607042313	39
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	2.0.11	search with cache (only 1: red; only 1: intros; only 1: auto with real).	0.971163034439	699
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.3.2.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.105846166611	47
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.0.11.3	search with cache (only 1: intros r r1 r2; only 1: red; only 1: unfold Rle; only 1: intuition).	7.06302785873	1305
Coq.Reals.RIneq.Rplus_ge_compat_l	40	1.2.15.11	search with cache (only 1: intros r1 r2; only 1: unfold Rge; only 1: intro; only 1: intuition).	10.1039741039	2388
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.3.2.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.186760902405	93
Coq.Reals.RIneq.Rplus_ge_compat_r	40	1.2.16.12	search with cache (only 1: intros r1 r2; only 1: unfold Rge; only 1: intro; only 1: intuition).	9.36423110962	2491
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.1.0.0.3	search with cache (only 1: intros; only 1: red; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0294790267944	18
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40	3.5.0.1.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	16.7021310329	4750
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.2.3	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0912148952484	36
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.0.4.6.3.4	search with cache (only 1: intros; only 1: red; only 1: edestruct Rlt_or_le; only 1: eauto with rorders; only 1: apply Rlt_le_trans with (r2 + r3); only 1: eauto with real; only 1: auto with real).	2.41041207314	2361
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	3.2.0	search with cache (only 1: intros; only 1: pattern x at 1; only 1: intuition).	0.019670009613	8
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40	0.0.0.0.0.0.4.0.15	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	5.38858389854	3670
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3.4.0	search with cache (only 1: intros; only 1: red; only 1: eauto with real).	0.0441000461578	21
Coq.Reals.RIneq.Ropp_lt_contravar	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0365481376648	10
Coq.Reals.RIneq.Ropp_gt_contravar	40	3.2.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: eauto with rorders).	0.247115135193	29
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	2.0.3.3	search with cache (only 1: intro; only 1: red; only 1: unfold Rle; only 1: intuition).	1.61705994606	341
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.2.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0209188461304	6
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0289440155029	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.034500837326	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0183839797974	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0193409919739	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0187258720398	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0217730998993	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.3.1	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.015585899353	8
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	2.5.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0415101051331	26
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.6.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.124793052673	90
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40	6.5.3.4	search with cache (only 1: intros; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: eauto using Rmult_le_compat_l with rorders).	11.8691570759	9483
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.0.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.030454158783	7
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: auto with real; only 1: auto with real).	0.0187878608704	6
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	1.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0286290645599	5
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	1.1.5.0.9	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: auto with real; only 1: auto with real).	5.68088912964	3812
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.1.6.2.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	3.34554791451	1703
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.0.2.8.1	search with cache (only 1: unfold Rle; only 1: intuition eauto  3; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring; only 1: auto with real).	12.0336828232	6241
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.2.3	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0234580039978	14
Coq.Reals.RIneq.Rle_0_1	40	0.0	search with cache (only 1: left; only 1: auto with real).	0.0126829147339	2
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	4.58460593224	1717
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.1.8	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.537815093994	316
Coq.Reals.RIneq.Rlt_plus_1	40	6	search with cache (only 1: apply Rlt_n_Sn).	0.0234949588776	27
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	2.0.0.3	search with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: auto with real).	0.0536608695984	15
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	1.1.3.1.0.0.3	search with cache (only 1: apply le_elim_rel; only 1: simpl; only 1: intro n; only 1: apply pos_INR; only 1: intros n m; only 1: repeat rewrite S_INR; only 1: auto with real).	3.96215200424	1944
Coq.Reals.RIneq.INR_not_0	40	1.0.0.1	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: auto with arith).	0.326041936874	65
Coq.Reals.RIneq.not_0_INR	40	4.7.5.5.5	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).	25.0651550293	16496
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	1.0.0.87	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	27.4001171589	53833
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.IZR_NEG	40	0	search with cache (only 1: auto with real).	0.0109050273895	1
Coq.Reals.RIneq.IZR_POS_xO	40	2.11.11.11	search with cache (only 1: induction p as [p| p| ]; only 1: auto with real; only 1: auto with real; only 1: ring).	2.50359892845	2348
Coq.Reals.RIneq.IZR_POS_xI	40	0.1.0.1.0.1.0.0.0.0	search with cache (only 1: intro; only 1: unfold IZR, IPR; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: trivial).	1.31594514847	646
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	3.4.0.0.0.8.0.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	20.0236439705	12056
Coq.Reals.RIneq.opp_IZR	40	3.3.0.0.3.8	search with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: reflexivity; only 1: unfold IZR; only 1: auto with real).	1.78637099266	911
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.3.0.2.10.2.2	search with cache (only 1: intros r r1 r2 H; only 1: destruct H; only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: destruct H; only 1: auto with real).	25.2551062107	10711
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.Ropp_div_den	40	0.2.1.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: field; only 1: auto with real).	0.0778560638428	8
Coq.Reals.RIneq.double	40	3.3	search with cache (only 1: intro; only 1: ring).	0.0541150569916	12
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.193777084351	50
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	0.7.8	search with cache (only 1: intros r r1 r2; only 1: unfold Rdiv; only 1: ring).	31.2226040363	2919
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.0.5	search with cache (only 1: unfold Rdiv; only 1: intros; only 1: ring).	0.170976161957	57
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.RIneq.pos_half_prf	40	0	search with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.00885987281799	1
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_eq_natpow_inv	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_invneg_le_pow	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_le_one	40	2.0.2.0.1.5.0.0	search with cache (only 1: intros n; only 1: induction n; only 1: intros n; only 1: simpl in *; only 1: now subst; only 1: rewrite Nat2Z.inj_succ, Z.opp_succ, <- Z.sub_1_r; only 1: rewrite Qpower_minus_pos; only 1: lra).	6.38963079453	3615
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealQlimExp2	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_cauchy	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_max_prec_1	40	0.3.0.1.1.1.14	search with cache (only 1: intros E; only 1: intros; only 1: destruct n; only 1: auto using Z.ge_le; only 1: auto with *; only 1: f_equal; only 1: now destruct Hn || easy).	5.6602191925	4022
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_bound	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_bound	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse'	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse''	40	0.0.0.3.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros x q n H; only 1: unfold DRealAbstr, proj1_sig in H; only 1: match type of H with | context [ if ?a then _ else _ ] => destruct a as [H'| H'] end; only 1: discriminate; only 1: destruct (Z_le_gt_dec n 0) as [Hdec| Hdec]; only 1: specialize (H' (Z.to_nat (- n))); only 1: rewrite (Z2Nat.id (- n) _), Z.opp_involutive in H'; only 1: pose proof (Qpower_pos_lt 2 n); only 1: lra; only 1: specialize (H' (Z.to_nat 0)); only 1: cbn in H'; only 1: pose proof (cauchy x n 0%Z n _ _) as Hxbnd; only 1: apply Qabs_Qlt_condition in Hxbnd; only 1: pose proof (Qpower_le_1_increasing' 2 n _ _); only 1: lra).	7.33120703697	2571
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40	2.7.2	search with cache (only 1: intros n m p; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.13356590271	100
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	4.27	search with cache (only 1: simpl; only 1: intuition).	2.64948987961	1730
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	6.4.0	search with cache (only 1: intros m IH; only 1: simpl; only 1: intuition auto with arith).	0.334086894989	134
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.12.16	search with cache (only 1: intros; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	16.3584091663	4798
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	3.0	search with cache (only 1: intros; only 1: reflexivity).	0.0490069389343	5
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0743639469147	2
Coq.Reals.Ranalysis2.quadruple_var	40	1.0	search with cache (only 1: intros; only 1: field).	0.088189125061	3
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.0.0.0	search with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: auto).	0.0247430801392	14
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.0.0	search with cache (only 1: intros; only 1: intros a b; only 1: auto with real).	0.0171887874603	4
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	1.17	search with cache (only 1: intro n; only 1: firstorder).	0.178225040436	392
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	21	search with cache (only 1: easy).	0.222649097443	558
Coq.Reals.Rtopology.open_set_P5	40	3.3.1.10.13.0.3.2.0	search with cache (only 1: unfold open_set; only 1: unfold included, neighbourhood; only 1: unfold included; only 1: unfold disc; only 1: unfold Rminus; only 1: intros a b; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: assumption).	10.5907309055	30586
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	3.11.1.1.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite <- CReal_plus_assoc; only 1: reflexivity).	19.6843628883	2825
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40	10.0.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_mult; only 1: do 2 rewrite Rrepr_mult; only 1: ring).	2.63394093513	499
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.1.2.0.0.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	0.249290943146	69
Coq.Reals.Rseries.Un_growing_shift	40	9.4.6	search with cache (only 1: intros * Hgrowing Hle; only 1: simpl; only 1: auto).	0.885805845261	683
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy.ConstructiveExtra.Pos_pred_double_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_id	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.constructive_indefinite_ground_description_Z	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qlt_trans_swap_hyp	40	3.2.0	search with cache (only 1: intros q r Hlt; only 1: destruct (QarchimedeanExp2_Z (/ (r - q))) as [n Hn]; only 1: lra).	0.0812089443207	15
Coq.Reals.Cauchy.ConstructiveRcomplete.Qle_trans_swap_hyp	40	7.5	search with cache (only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: lra).	2.34487605095	922
Coq.Reals.Cauchy.ConstructiveRcomplete.Qpower_2powneg_le_inv	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pospow_lin_le_2pow	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self'	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cm_mono	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cauchy	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_upper_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_seq	40	8.0	search with cache (only 1: intros y' z'; only 1: reflexivity).	0.0149538516998	10
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_diff	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_RQ_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos2Z_pos_is_pos	40	4	search with cache (only 1: lia).	0.0190949440002	13
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos_log2floor_plus1_spec_Qpower	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Qgt_condition	40	17.0.2.1	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: lia).	20.3069000244	11763
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_seq_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.sumbool_or_not_or	40	3	search with cache (only 1: intuition).	0.0245869159698	4
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_le_iff_lt	40	8.0	search with cache (only 1: intros p q; only 1: lra).	0.117759943008	46
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_lt_iff_le	40	2.1	search with cache (only 1: intros x y; only 1: apply Z.nlt_ge).	0.0159468650818	5
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerAddExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerRemSubExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerFac	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_red_scale	40	0	search with cache (only 1: reflexivity).	0.0130288600922	1
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0.0.1.2.0.0.0.0.2	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_mult, CReal_mult_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: simplify_Qabs; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	1.74597191811	696
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_scale_sep0_limit	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0.6	search with cache (only 1: intros n; only 1: apply (Ropp_ext CReal_isRingExt)).	3.48556113243	50
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	4.2.1	search with cache (only 1: intros r; only 1: rewrite CReal_mult_comm; only 1: apply CReal_mult_1_l).	0.572736978531	72
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	10.6	search with cache (only 1: intros a b; only 1: ring).	13.0718069077	1391
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBoundSpec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBound_lt_scale	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40	0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: unfold CReal_inv; only 1: destruct rnz; only 1: rewrite <- CReal_opp_mult_distr_l, CReal_opp_mult_distr_r; only 1: apply CReal_inv_l_pos; only 1: apply CReal_inv_l_pos).	13.5920228958	129
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	5.5	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	17.3940229416	444
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.0.2.1	search with cache (only 1: intros; only 1: rewrite H; only 1: destruct H; only 1: reflexivity).	0.258116006851	36
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_1_r	40
Coq.Reals.Cauchy.PosExtra.Pos_le_multiple	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_le_mono_r	40
Coq.Reals.Cauchy.QExtra.Q_factorDenom	40	6.0.0.0.4.9	search with cache (only 1: intros; only 1: rewrite Qmult_comm; only 1: unfold Qred, Qeq in *; only 1: simpl in *; only 1: rewrite Pos2Z.inj_mul; only 1: auto with zarith).	2.09164190292	1170
Coq.Reals.Cauchy.QExtra.Q_factorNum_l	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: ring).	0.0427930355072	4
Coq.Reals.Cauchy.QExtra.Q_factorNum	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.043977022171	4
Coq.Reals.Cauchy.QExtra.Q_reduce_fl	40	1.0	search with cache (only 1: intros n p; only 1: reflexivity).	0.017560005188	3
Coq.Reals.Cauchy.QExtra.Qle_neq	40	7.0.3	search with cache (only 1: unfold Qle, Qlt, Qeq; only 1: intros; only 1: intuition).	0.586865901947	257
Coq.Reals.Cauchy.QExtra.Qplus_lt_compat	40	0.0.2.2	search with cache (only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto; only 1: auto with *).	0.6501557827	163
Coq.Reals.Cauchy.QExtra.Qgt_lt	40	5.0.1	search with cache (only 1: unfold Qlt, Qle, Qeq; only 1: intros; only 1: auto).	0.0446848869324	33
Coq.Reals.Cauchy.QExtra.Qlt_gt	40	0.0	search with cache (only 1: intros p q H; only 1: assumption).	0.0118279457092	2
Coq.Reals.Cauchy.QExtra.Qmult_lt_0_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_le_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_le_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_le_compat_nonneg	40	0.0.0.0.7.3.2.0.0	search with cache (only 1: intros [xn xd] [yn yd] [zn zd] [tn td] [H0lex Hxlty] [H0lez Hzltt]; only 1: unfold Qmult, Qlt, Qle, Qnum, Qden in *; only 1: setoid_replace (xn * zn * (Z.pos yd * Z.pos td))%Z with (xn * Z.pos yd * (zn * Z.pos td))%Z by ring; only 1: setoid_replace (yn * tn * (Z.pos xd * Z.pos zd))%Z with (yn * Z.pos xd * (tn * Z.pos zd))%Z by ring; only 1: apply Z.mul_le_mono_nonneg; only 1: lia; only 1: lia; only 1: lia; only 1: lia).	20.330450058	9537
Coq.Reals.Cauchy.QExtra.Qinv_swap_pos	40	0.0	search with cache (only 1: intros n p; only 1: reflexivity).	0.0276470184326	2
Coq.Reals.Cauchy.QExtra.Qinv_swap_neg	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: lia).	0.0369668006897	4
Coq.Reals.Cauchy.QExtra.Qabs_Qlt_condition	40	1.1.2.1	search with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qmult, Qlt, Qle, Qnum, Qden in *; only 1: simpl; only 1: auto with *).	0.155548095703	48
Coq.Reals.Cauchy.QExtra.Qabs_gt	40
Coq.Reals.Cauchy.QExtra.Qpower_0_r	40	3.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0154361724854	5
Coq.Reals.Cauchy.QExtra.Qpower_1_r	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0151278972626	2
Coq.Reals.Cauchy.QExtra.Qpower_not_0	40
Coq.Reals.Cauchy.QExtra.Qpower_pos_lt	40
Coq.Reals.Cauchy.QExtra.Qpower_minus	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_pos	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_neg	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qzero_eq	40	0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.0867638587952	4
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_decomp'	40
Coq.Reals.Cauchy.QExtra.QarchimedeanExp2_Pos	40
Coq.Reals.Cauchy.QExtra.Pos_log2floor_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Pos_log2ceil_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_le_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_leabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_1	40	2	search with cache (only 1: now Z.nzsimpl').	0.0833640098572	3
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_2	40	0	search with cache (only 1: reflexivity).	0.0104930400848	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_3	40	0	search with cache (only 1: reflexivity).	0.0108828544617	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_4	40	0	search with cache (only 1: reflexivity).	0.0120220184326	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_inv	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_opp	40	1.2.3.0.3.4.5	search with cache (only 1: unfold Qopp; only 1: intros (n, d); only 1: cbn; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.56328082085	2108
Coq.Reals.Cauchy.QExtra.Qlowbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qopp_mult_mone	40	2.4	search with cache (only 1: intros; only 1: lra).	0.0185840129852	8
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qabs_involutive	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLt_RQ_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLe_0R_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig'	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40	0.1.0.12.7.1	search with cache (only 1: intros x y n Hapart; only 1: intros p Hp; only 1: pose proof (cauchy x n n p _ _) as HCSx; only 1: pose proof (cauchy y n p n _ _) as HCSy; only 1: rewrite Qabs_Qlt_condition in HCSx, HCSy; only 1: lra).	19.7856431007	9001
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	5.5.0.0.3	search with cache (only 1: intro n; only 1: intros; only 1: split; only 1: apply H; only 1: apply H).	1.35899496078	1756
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	5.1.4.12.7	search with cache (only 1: intros x y z [n inf]; only 1: intro contra; only 1: destruct (CRealLt_dec _ _ y contra); only 1: contradiction; only 1: assumption).	3.1315741539	6761
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	4.1.3.11.0	search with cache (only 1: intros x y z Hxeqy Hxltz; only 1: destruct Hxeqy as [Hylex Hxley]; only 1: apply (CReal_lt_le_trans _ x); only 1: exact Hxltz; only 1: assumption).	1.59865093231	1904
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	4.4.3.4.2	search with cache (only 1: intros x y z Hxley Hylez contra; only 1: apply Hylez; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	2.47854185104	3123
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	7.0.2.3.10.0	search with cache (only 1: intros x y z Hxeqy Hxlez; only 1: intro contra; only 1: apply Hxlez; only 1: apply (CRealLt_morph x y Hxeqy z z); only 1: apply CRealEq_refl; only 1: assumption).	4.11888504028	5954
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	0.2.0.0.0.2.0.0.9	search with cache (only 1: split; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	1.99256300926	701
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_red_seq	40	0.0.0	search with cache (only 1: cbn; only 1: intros a n m H; only 1: congruence).	0.019553899765	3
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.066220998764	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z Hlt; only 1: apply CRealLt_above in Hlt; only 1: destruct Hlt as [n Hapart]; only 1: exists n; only 1: unfold CReal_plus, CReal_plus_seq in Hapart |- *; only 1: do 2 rewrite CReal_red_seq; only 1: do 2 rewrite Qred_correct; only 1: specialize (Hapart (n - 1)%Z _); only 1: lra).	0.0730929374695	9
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	2.0.4.0.0	search with cache (only 1: intros x y z Hlt contra; only 1: apply Hlt; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact contra).	0.518490076065	82
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	0.0.2.21	search with cache (only 1: intro n; only 1: intros x y z Hlt; only 1: apply CReal_plus_lt_reg_l in Hlt; only 1: contradiction).	36.2416410446	8992
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 3 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.0682821273804	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	3.16999316216	1151
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40	3	search with cache (only 1: apply CReal_plus_0_l).	0.00956511497498	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	0.0.0.1.1.0.0.0.0	search with cache (only 1: intros; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	4.8552210331	239
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	0	search with cache (only 1: reflexivity).	0.0092568397522	1
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	0.2.0.0.8	search with cache (only 1: intros x y Hxy; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	0.921027183533	861
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40	10.19	search with cache (only 1: intuition try easy; only 1: now f_equiv).	0.415824174881	521
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40	3.4.46	search with cache (only 1: assert (int78 : -2 <= 7 / 8 <= 2) by (split; Lra.lra); only 1: case PI_2_aux; only 1: tauto).	1.64212799072	1708
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	0.4.2	search with cache (only 1: unfold opp_fct; only 1: intros x y H; only 1: auto with real).	0.0358490943909	28
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.2.0.0.5.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: unfold limit1_in in H0; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	4.57159018517	1765
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.3	search with cache (only 1: intros; only 1: auto).	0.0455520153046	6
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	0.0.1.0.7.13	search with cache (only 1: intros z H; only 1: red; only 1: intros; only 1: apply continuity_pt_inv; only 1: auto; only 1: auto).	24.336222887	9654
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.3.0.0.1.0.4.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	5.19061303139	754
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.6.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.410612821579	109
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	3.2.1.1.3.14	search with cache (only 1: intro H7; only 1: intros alpha H1; only 1: elim H1; only 1: simpl; only 1: intros; only 1: now exists x).	5.46942591667	5697
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_xeq	40	12.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.995628118515	437
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40	1.1.0.1.0.0.2.7.0.1.0	search with cache (only 1: intros f x H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: unfold derivable_pt_abs; only 1: apply derivable_pt_lim_ext with (f := fun x => - - f x); only 1: intros; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_opp_fwd; only 1: rewrite Ropp_involutive; only 1: assumption).	6.19838500023	2925
Coq.Reals.Ranalysis1.derivable_pt_mirr	40	0.0.3.0.0.1	search with cache (only 1: intros f x H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: assumption).	0.126035928726	24
Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	2.0.1.0.3.0.0.0.5.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: change (mirr_fct f) with (f o (- id))%F; only 1: assumption).	11.3150122166	6585
Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).	0.0575408935547	9
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_id	40	0.1.0.4	search with cache (only 1: intros EQ; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0590198040009	9
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_mirr	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0481910705566	5
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1.derive_pt_mirr	40	1.1.0.1.6.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: unfold mirr_fct; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: apply (derive_pt_eq_1 _ _ _ pr1); only 1: reflexivity).	1.16864013672	443
Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	3.2.20	search with cache (only 1: intros l1 H; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	3.0971019268	1331
Coq.Reals.Ranalysis1.derive_pt_scal	40	2.9.0.8.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: apply derivable_pt_lim_scal; only 1: assumption).	12.2568669319	7090
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.5	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0588870048523	18
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.0.1.16.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply derive_pt_eq_0; only 1: apply (derive_pt_eq_1 _ _ _ pr1); only 1: reflexivity).	3.99280190468	2582
Coq.Reals.Ranalysis1.pr_nu_xeq	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	8.0.1.1.2.0.26.0	search with cache (only 1: intros; only 1: inversion H as [H1]; only 1: unfold has_lb in H; only 1: elim H; only 1: elim H; only 1: elim H; only 1: intros; only 1: firstorder).	16.017141819	15734
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.1.1.1.0.0.0.0.1.0.1.1.1.0.1.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with (Un n - Un m); only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	21.9651968479	9702
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	1	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.241512060165	22
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	1.5.0.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: ring).	0.0656881332397	10
Coq.Reals.Rtrigo_calc.sin_3PI2	40	0.0.0.1.2.0.1.0.20.50	search with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	10.7638158798	9083
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	3.1.0.2.0	search with cache (only 1: replace (PI / 6) with (PI / 2 - PI / 3) by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.347123861313	58
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	5.18	search with cache (only 1: generalize PI4_RLT_PI2; only 1: Lra.lra).	0.848481893539	682
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.1.1.5.0.0.2.1	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	3.37253904343	836
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.1.0.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	0.293197154999	45
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40	0.16.2.0.1	search with cache (only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: destruct H2; only 1: apply derive_pt_eq_0; only 1: assumption).	5.13655209541	3183
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.1.0.0.0.1.1.10.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	4.59082603455	2190
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.2	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.105611085892	6
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.6	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.159864187241	44
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.101868152618	4
Coq.Reals.Ranalysis4.derive_pt_exp	40	2.6.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.460943937302	186
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.4.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.179091930389	16
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	8	search with cache (only 1: auto with real).	0.140236139297	76
Coq.Reals.DiscrR.IZR_eq	40	0.3.6.3	search with cache (only 1: intro z; only 1: intros; only 1: elim H; only 1: auto).	2.55842995644	1389
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	2.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	0.0470499992371	5
Coq.Reals.R_sqr.Rsqr_mult	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0771338939667	2
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0499749183655	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0448970794678	2
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0434491634369	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	8.0	search with cache (only 1: intros; only 1: auto with real).	0.0478310585022	14
Coq.Reals.R_sqr.Rsqr_div	40	0.2.5.1	search with cache (only 1: unfold Rsqr; only 1: intros a b c; only 1: field; only 1: auto with real).	1.12254405022	340
Coq.Reals.R_sqr.Rsqr_eq_0	40	1.1.2	search with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).	0.124388933182	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.12	search with cache (only 1: intros z t; only 1: ring_Rsqr).	0.610050201416	221
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0430200099945	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.6.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: auto with real).	0.138391017914	21
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqr.Rsqr_bounds_le	40
Coq.Reals.R_sqr.Rsqr_bounds_lt	40
Coq.Reals.R_sqr.Rsqr_abs	40	2.9.0.4.1	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: ring_Rsqr; only 1: auto).	13.1849691868	7260
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: apply Rmult_eq_compat_l; only 1: auto; only 1: auto with real; only 1: auto with real).	0.0818340778351	8
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	1.0.0.50	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	8.95364904404	14802
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.8.0.0.6	search with cache (only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: clear H; only 1: apply derivable_pt_lim_id).	0.839433908463	634
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	9.0	search with cache (only 1: intros; only 1: intuition).	0.194665193558	45
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.0.1.0.2	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).	0.18722987175	17
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	3.4.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: auto using Rle_antisym).	0.693553924561	177
Coq.Reals.Rminmax.Rmax_r	40	3.3.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity).	0.122800827026	29
Coq.Reals.Rminmax.Rmin_l	40	0.0.2.2.1	search with cache (only 1: intros a b c; only 1: unfold Rmin; only 1: destruct (Rle_dec a b); only 1: auto with real; only 1: auto with real).	0.537714958191	103
Coq.Reals.Rminmax.Rmin_r	40	3.3.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity).	0.148216962814	26
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	0.1.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0498130321503	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.06232213974	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.10.0.6	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: trivial; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.299701929092	475
Coq.Reals.Rlimit.eps2	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0188770294189	3
Coq.Reals.Rlimit.eps4	40	2.3	search with cache (only 1: intros; only 1: lra).	0.047856092453	19
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0180859565735	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0167150497437	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	13.17	search with cache (only 1: intros; only 1: firstorder).	4.12890577316	5643
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.2.0.2	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).	0.253262996674	94
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	1.0	search with cache (only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0276200771332	3
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0485229492188	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.16.0.3	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	16.1584899426	6275
Coq.Reals.R_sqrt.pow2_sqrt	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	1.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0350339412689	4
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.22.0	search with cache (only 1: intros; only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	25.7014889717	11781
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.12.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	1.53998994827	706
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.5	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	3.13115811348	1002
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_neg_0	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.0.1.0.6.13	search with cache (only 1: intros x y Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: auto with real; only 1: apply sqrt_pos; only 1: auto with real).	18.2981798649	6689
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.inv_sqrt	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.424697160721	217
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0688261985779	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.125874042511	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40	0.4.1.0.0	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	0.693243026733	23
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	0.0.5.0.0.0.2	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite Ropp_minus_distr; only 1: rewrite sin_PI2; only 1: unfold Rminus; only 1: rewrite cos_PI2; only 1: ring).	9.04224514961	888
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.0.10.3.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	3.45408797264	801
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	2.0.1.0.1.1.2.6.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	20.2294549942	2854
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	1.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.207170963287	8
Coq.Reals.Rtrigo1.cos_neg	40	1.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.15812921524	6
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40	1.0.7.1	search with cache (only 1: rewrite double; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: ring).	1.41697788239	191
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.0.0	search with cache (only 1: intro; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.178993940353	5
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.0.2.0.6.0	search with cache (only 1: intro; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_antisym; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	4.16999101639	585
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intro x; only 1: rewrite (sin_cos (PI / 2 + x)); only 1: replace (PI / 2 + (PI / 2 + x)) with (x + PI); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	4.52503299713	284
Coq.Reals.Rtrigo1.PI2_RGT_0	40
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.8.9	search with cache (only 1: apply Rplus_lt_reg_l with (- (4)); only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.673002958298	220
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.2	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.105779886246	16
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.1.0.0.2.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	1.38855695724	90
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.sin_inj	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.cos_inj	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0173060894012	3
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	4.0	search with cache (only 1: intros; only 1: assumption).	0.0172290802002	6
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.3.5.0.3	search with cache (only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.955683946609	799
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.217705011368	71
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	5.2.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: assumption).	9.11954402924	4855
Coq.Reals.PartSum.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.17453193665	5376
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	6.7.0.1.3.12.1.0.14.1.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: reflexivity; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	35.9314548969	45305
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rtrigo_facts.sin2_bound	40
Coq.Reals.Rtrigo_facts.cos2_bound	40
Coq.Reals.Rtrigo_facts.cos_sin	40
Coq.Reals.Rtrigo_facts.cos_sin_opp	40
Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40
Coq.Reals.Rtrigo_facts.sin_cos	40
Coq.Reals.Rtrigo_facts.sin_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40
Coq.Reals.Rtrigo_facts.tan_sin	40
Coq.Reals.Rtrigo_facts.tan_sin_opp	40
Coq.Reals.Rtrigo_facts.tan_cos	40
Coq.Reals.Rtrigo_facts.tan_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_tan	40
Coq.Reals.Rtrigo_facts.cos_tan	40
Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0979859828949	5
Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.101904153824	5
Coq.Reals.Rtrigo_facts.cos_pi_minus	40	0.2.0.0.0.9.1	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: ring).	8.61750507355	2467
Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.103066921234	5
Coq.Reals.Rtrigo_facts.tan_pi_minus	40
Coq.Reals.Rtrigo_facts.tan_pi_plus	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.1.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0262110233307	6
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.1.12	search with cache (only 1: intros x; only 1: unfold derivable_pt; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.174491882324	115
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	3.6.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.516408920288	100
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSum.sum_const	40
Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40
Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSum.sum_opp	40
Coq.Reals.Abstract.ConstructiveSum.sum_scale	40
Coq.Reals.Abstract.ConstructiveSum.sum_plus	40
Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40
Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSum.splitSum	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	1.0.0	search with cache (only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: exact s).	0.0265650749207	4
Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.0.0.0.0.0.1	search with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	0.102372169495	26
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	0.0.0.0.5.23.5	search with cache (only 1: intros; only 1: destruct (CRltLinear R); only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	6.21757888794	4741
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.5.0	search with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).	0.0796639919281	19
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40	0.2.0.0.0.1.7	search with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite CRplus_0_l; only 1: rewrite CRopp_0, CRplus_0_r; only 1: reflexivity; only 1: reflexivity).	0.64697599411	208
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	0.3.1.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0204880237579	18
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.9	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.0396230220795	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.0	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.0100119113922	2
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePower.CRpow_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePower.CR_double	40
Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40	43.2.1.0	search with cache (only 1: intros; only 1: intro H0; only 1: destruct (CRltLinear R), p; only 1: eauto with bool).	25.9788341522	49156
Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.3.4.0.3.4.12.10.1	search with cache (only 1: intros; only 1: red; only 1: intuition; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	3.77228498459	7987
Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	2.0.2.5.0.2.0	search with cache (only 1: split; only 1: intro abs; only 1: destruct H, H0; only 1: assumption; only 1: intro abs; only 1: destruct H, H0; only 1: contradiction).	1.20796704292	1429
Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40
Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40	9.5	search with cache (only 1: intros H1 H2; only 1: apply H1).	0.107609033585	146
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.1.1	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).	0.0166938304901	5
Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40	16.3.0.7.0.1	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	10.4198930264	9143
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	1.1.0.3.1.2	search with cache (only 1: intros; only 1: destruct (CRisRingExt R); only 1: apply CReq_sym; only 1: clear Rmul_ext Ropp_ext; only 1: destruct (CRisRing R); only 1: apply Radd_assoc).	2.48804116249	1102
Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	6.2	search with cache (only 1: intros; only 1: apply (Radd_comm (CRisRing R))).	0.0383319854736	20
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40	8.0.1	search with cache (only 1: destruct (CRisRingExt R); only 1: clear Rmul_ext Ropp_ext; only 1: now rewrite ?Ha).	0.116416931152	120
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40	22	search with cache (only 1: apply (CRisRingExt R)).	14.7646949291	7558
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	6	search with cache (only 1: apply (CRisRingExt R)).	0.03169298172	25
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	7.1	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.0325469970703	28
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	8.2	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.46653008461	241
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	9.3	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.096216917038	105
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	0.0.0.0	search with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity).	0.030944108963	4
Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	9	search with cache (only 1: apply CRisRing).	0.0174288749695	13
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	12	search with cache (only 1: apply CRisRing).	0.440454959869	188
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	2.1.1	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rdistr_l).	0.288753032684	50
Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.0.0.0.0.0.42	search with cache (only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	2.67850899696	3381
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40
Coq.Reals.Abstract.ConstructiveReals.CRfloor	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.1.3.4	search with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1; only 1: apply CRle_refl).	0.104450941086	70
Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40	9.1.4.8	search with cache (only 1: intros [n d]; only 1: intros (x1, x2) (y1, y2); only 1: simpl; only 1: eauto with qarith).	5.93329501152	6030
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	128	search with cache (only 1: eauto with arith).	37.8113079071	94434
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.2.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros a b; only 1: intros x0 y0; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	14.427478075	8665
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.0.10.0	search with cache (only 1: intros a b; only 1: split; only 1: auto with real; only 1: auto with real).	0.729767799377	209
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Array.PArray.default_copy	40
Coq.Array.PArray.default_make	40
Coq.Array.PArray.get_set_same_default	40
Coq.Array.PArray.get_not_default_lt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition).	0.051164150238	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	2.0	search with cache (only 1: unfold empty, Empty; only 1: auto).	0.0177609920502	4
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.7.0	search with cache (only 1: intuition; only 1: unfold assert_false, create; only 1: auto).	0.0446419715881	16
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: intuition).	0.0190558433533	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	1.0.0.2.0.0.1.1.0.0.1.0.0.0	search with cache (only 1: intros m1 m2; only 1: functional induction merge m1 m2; only 1: auto; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	28.3138430119	9190
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: omega_max; only 1: simpl; only 1: auto).	0.0454959869385	5
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.034029006958	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	4.2.2	search with cache (only 1: intro n; only 1: simpl; only 1: inversion_clear 1).	0.329442977905	63
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	11.1.15.3.5	search with cache (only 1: intros m x; only 1: intros e' eqfind; only 1: apply find_1; only 1: apply (is_bst m); only 1: auto).	7.67296600342	7876
Coq.FSets.FMapFullAVL.IntMake.find_2	40	10.0	search with cache (only 1: intros m x e; only 1: apply find_2).	0.174197912216	73
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.0.0.44	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	37.3294069767	65133
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	26.0.0.36	search with cache (only 1: intro y1; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: apply L.elements_3).	6.50578093529	18993
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.395814180374	19
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	6.5	search with cache (only 1: intros Heq; only 1: intuition Nat.order).	0.066104888916	75
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	4	search with cache (only 1: intuition Nat.order).	0.0336930751801	18
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.2.3.1	search with cache (only 1: induction 1; only 1: auto; only 1: eauto with ordered_type; only 1: auto).	0.0177450180054	10
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40	0.1.1.0.1.1.0.1.0.8.0.35	search with cache (only 1: constructor; only 1: induction 1; only 1: eauto with ordered_type; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	3.8281481266	10393
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40	0.0.14.2.7	search with cache (only 1: intros m x y e e'; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	1.14645385742	1644
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.1.0.3.4	search with cache (only 1: induction m; only 1: intros; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	1.79503512383	241
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	0.0.0.1.11	search with cache (only 1: intuition try easy; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	1.80589103699	297
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.5.0	search with cache (only 1: intuition_in; only 1: compute; only 1: intuition_in).	0.0448451042175	8
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.12	search with cache (only 1: intros m x y; only 1: intuition_in).	0.154401779175	160
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	0.0.0.4.2.1	search with cache (only 1: intros m x y; only 1: intros; only 1: inversion_clear 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	0.389359951019	95
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.1	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.13117814064	15
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0210859775543	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0149819850922	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0195291042328	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.015557050705	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.0.6	search with cache (only 1: induction m; only 1: intuition_in; only 1: eauto with ordered_type).	0.154165029526	54
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.026762008667	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0.1.1.1	search with cache (only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0907959938049	31
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	0	search with cache (only 1: auto).	0.0144641399384	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	0.1.14	search with cache (only 1: intros a b; only 1: unfold empty; only 1: intuition_in).	0.480082988739	265
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	13.0.0.7.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: intros sorted belong1; only 1: intuition_in; only 1: simpl; only 1: easy).	16.0151588917	7403
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.0.6.0.1	search with cache (only 1: intuition_in; only 1: functional induction mem x m; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	0.382675886154	156
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.0.0.3.1.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	0.0750939846039	16
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.3.2.0.0.2.5.3	search with cache (only 1: split; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	9.76259088516	3499
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	0.0.0.0.11	search with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.761689901352	404
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	1.3.20.1.2	search with cache (only 1: intros; only 1: generalize y, e; only 1: intros a0 **; only 1: unfold create; only 1: intuition_in).	35.4671499729	9365
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.0.26.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros H; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	35.4868528843	25948
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	1.14.0.2.0	search with cache (only 1: unfold IfEq; only 1: simpl; only 1: intros; only 1: destruct H; only 1: auto).	2.39266395569	1668
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	1.1.0.10	search with cache (only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.792261123657	216
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.2.1.2.1	search with cache (only 1: intros m x; only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: intuition_in).	0.675153970718	150
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0777130126953	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	0.0.3.1	search with cache (only 1: intros a b; only 1: simpl; only 1: unfold Raw.empty, Raw.Proofs.Empty; only 1: intuition_in).	0.0564138889313	8
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40	0.3.12.11.0	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intros; only 1: apply find_2; only 1: auto).	2.11443114281	2114
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	8.1.12.8.2.1	search with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros (y', e') H6; only 1: simpl; only 1: intro; only 1: rewrite elements_mapsto; only 1: auto).	21.514318943	23217
Coq.FSets.FMapAVL.IntMake.elements_3	40
Coq.FSets.FMapAVL.IntMake.elements_3w	40
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	5	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0503749847412	15
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	1.1.1.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	3.07803583145	475
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	5.0.5.29.89	search with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: auto; only 1: LO.cmp_solve).	13.9361028671	64604
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	6.1	search with cache (only 1: intros a b; only 1: solve_proper).	0.0250480175018	9
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	8.0	search with cache (only 1: intro n; only 1: solve_proper).	0.0229527950287	10
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	59	search with cache (only 1: intuition).	9.22527980804	19610
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	11	search with cache (only 1: intuition).	0.0537109375	69
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	12	search with cache (only 1: intuition).	0.0514030456543	89
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.22968006134	80
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	2.2	search with cache (only 1: compute; only 1: intuition).	0.0127930641174	6
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.0.0.6.4.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	0.26255106926	376
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	15	search with cache (only 1: intuition).	0.348477125168	410
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	20	search with cache (only 1: intuition).	6.95500302315	7835
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	18.18.1	search with cache (only 1: split; only 1: intuition; only 1: intuition).	11.4725160599	8351
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	39	search with cache (only 1: intuition).	1.98067593575	5326
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.0.4.1.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	26.9289169312	7416
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	25.7.0.28	search with cache (only 1: constructor; only 1: auto; only 1: firstorder; only 1: eauto).	1.68714094162	6128
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	49.0	search with cache (only 1: unfold Equal; only 1: firstorder).	34.428139925	52852
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	5.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	0.185704946518	8
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	1.10	search with cache (only 1: intros x y H; only 1: auto).	0.0708768367767	103
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.00986790657043	3
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.15.2.1	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: auto).	20.0929429531	8799
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.2.0	search with cache (only 1: unfold Subset; only 1: unfold Empty; only 1: firstorder).	0.0119118690491	8
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	1.2.0.9.6.14	search with cache (only 1: intros Hb; only 1: intros; only 1: intro; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	7.80293393135	9391
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0685129165649	13
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	1.0.0.3	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: rewrite H0; only 1: intuition).	0.0481381416321	8
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.8.0	search with cache (only 1: unfold Subset; only 1: firstorder; only 1: eauto with set).	0.11684679985	53
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	1.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.029483795166	5
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.0.1.0.37.0	search with cache (only 1: intros; only 1: intros l; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: auto; only 1: auto; only 1: auto).	4.07962989807	5496
Coq.FSets.FSetPositive.PositiveSet.In_1	40	4.9	search with cache (only 1: intros p q H; only 1: congruence).	0.375787973404	268
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	1.0	search with cache (only 1: intros a b; only 1: solve_proper).	0.0214781761169	3
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	2.3.0	search with cache (only 1: unfold eq, Equal; only 1: intros n m Hn Hm; only 1: now BinInt.Z.nzsimpl).	0.0710170269012	17
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	15.0.3.0	search with cache (only 1: unfold eq, Equal; only 1: intro n; only 1: intros; only 1: now rewrite H).	7.00133180618	6527
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.3.1.0	search with cache (only 1: intro n; only 1: intros Heq; only 1: revert n; only 1: auto).	0.0515248775482	14
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0376920700073	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0196719169617	1
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	4.0.2	search with cache (only 1: intro n; only 1: unfold In; only 1: destr_bool).	0.0367450714111	17
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.154186964035	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	17	search with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?Ring_polynom.Pmul_ok).	1.5023829937	1315
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	1.23.2	search with cache (only 1: intros Heq; only 1: fix even_spec 1; only 1: auto).	3.26621603966	2494
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0657758712769	6
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.147855997086	16
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.11.5.3.0.0.6.1.6.1	search with cache (only 1: intro m; only 1: destruct m; only 1: intro m; only 1: destruct m; only 1: auto; only 1: auto; only 1: cbn in *; only 1: intro m; only 1: destruct m; only 1: auto; only 1: auto).	26.6267268658	25040
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.0.3.0.1	search with cache (only 1: intro m; only 1: destruct m; only 1: now split; only 1: now split; only 1: now split).	0.223209857941	29
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	1.0.0.1.1	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.100064992905	18
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0313379764557	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0325088500977	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0344200134277	5
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	1.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0335698127747	5
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.20	search with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	3.12206196785	3160
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	2.4.5.1	search with cache (only 1: unfold compare_fun, equal; only 1: induction s as [| l IHl o r IHr]; only 1: auto; only 1: trivial).	0.707248926163	393
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	6.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.0549468994141	17
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.0667259693146	16
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.27	search with cache (only 1: intros x y H; only 1: rewrite remove_spec; only 1: tauto).	1.24985790253	1709
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0685429573059	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	3.2.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: firstorder).	0.0822820663452	18
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0338690280914	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0431091785431	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.199573993683	47
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0394818782806	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.066967010498	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0839929580688	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	2.21.6.12	search with cache (only 1: destruct s; only 1: intuition discriminate; only 1: fix even_spec 1; only 1: intuition congruence).	33.8242001534	21812
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0635380744934	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0710580348969	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0558321475983	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	4.2.7.0.2.7.0.6	search with cache (only 1: induction i; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto; only 1: auto).	10.7273299694	11529
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.0304760932922	8
Coq.FSets.FMapPositive.PositiveMap.gempty	40	1.2.1.12.0	search with cache (only 1: intro n; only 1: case n; only 1: auto; only 1: easy; only 1: auto).	0.387757062912	400
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0357139110565	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.2.8.2	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto; only 1: auto).	0.160966873169	189
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.0.0.0.0.1.4	search with cache (only 1: intros; only 1: destruct i; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto).	0.306725978851	124
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	40	search with cache (only 1: congruence).	1.17963600159	4230
Coq.FSets.FMapPositive.PositiveMap.find_1	40	2	search with cache (only 1: auto).	0.01682305336	3
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0201690196991	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.2.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.199449062347	58
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0918560028076	6
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	1.7.0.7.0	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	1.31290316582	600
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	22	search with cache (only 1: intuition).	1.30745792389	807
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	2	search with cache (only 1: intuition).	0.0705399513245	16
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.4.0.0	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	0.250926017761	8
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	2	search with cache (only 1: intuition).	0.0874848365784	12
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.5.0.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.10560798645	17
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	0.1.8.8.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	5.0976061821	4060
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	1.2	search with cache (only 1: intros; only 1: auto with map).	0.0841999053955	16
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	3.0.5.0.4.4.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: repeat split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: auto with map).	1.70691990852	780
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.106698989868	7
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.2.0.3.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: destruct (eq_dec x y); only 1: now intuition; only 1: now intuition).	1.36168909073	178
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	7.0	search with cache (only 1: intros; only 1: split).	0.0331251621246	9
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.0658831596375	6
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	5.2.2.0	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite <- H0; only 1: auto with map).	0.830680131912	313
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	search with cache (only 1: unfold Equal; only 1: auto).	0.0417408943176	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.0.0.24.1.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: rewrite <- H0; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply MapsTo_iff; only 1: auto).	38.0291662216	15423
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	0.0.1.0	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	0.370324850082	67
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	17.1.6	search with cache (only 1: intros k; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	3.67618203163	1720
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	0.1.6	search with cache (only 1: intros k; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.107491016388	23
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	10.12	search with cache (only 1: intros m1 m2; only 1: firstorder).	3.52412080765	3075
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	6.5.3.7.11	search with cache (only 1: red; only 1: unfold In; only 1: unfold Disjoint; only 1: intros; only 1: firstorder).	10.2090539932	9896
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: set (f := fun (_ : key) (_ : elt) => S); only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	1.34889698029	437
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40	0.1.0.1.0.0.5.0.0	search with cache (only 1: intros (x, e) (y, e'); only 1: unfold gtb, O.ltk; only 1: compute; only 1: destruct (E.compare x y); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	5.59281992912	869
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	2.4	search with cache (only 1: intro n; only 1: inversion 1).	0.0272970199585	22
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	9	search with cache (only 1: left).	0.00918889045715	10
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	1.38	search with cache (only 1: fix odd_spec 1; only 1: eauto).	33.1444199085	2421
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	6.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion 1).	0.363474845886	247
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	1.0.0.1.0.0.0.2.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).	15.4025580883	6288
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.00810313224792	1
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00727200508118	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0.0.1.0.1.0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: inversion_clear Hm; only 1: destruct a as (x', e'); only 1: constructor; only 1: auto; only 1: auto).	0.0350108146667	10
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	1.0.2.0	search with cache (only 1: intros a b; only 1: generalize b; only 1: intro abs; only 1: inversion 1).	0.0196380615234	7
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40	2.43.0	search with cache (only 1: intros m; only 1: fix odd_spec 1; only 1: auto).	13.3984868526	27294
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.00874900817871	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0124168395996	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	7.17	search with cache (only 1: induction m; only 1: auto).	0.267270088196	701
Coq.FSets.FMapWeakList.Make.cardinal_1	40	4	search with cache (only 1: auto).	0.0182609558105	14
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0	search with cache (only 1: Dec.fsetdec).	0.0181839466095	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: auto with extcore).	0.00976705551147	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	12	search with cache (only 1: firstorder).	0.905903100967	373
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	7.0.1.2	search with cache (only 1: red; only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	0.199386835098	161
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	9.0.3	search with cache (only 1: unfold Empty; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder).	0.69306397438	605
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.6.0.3.6	search with cache (only 1: red; only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: Dec.fsetdec).	0.647237062454	419
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	10.1431269646	1268
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	1.1.3	search with cache (only 1: intros; only 1: apply is_empty_1; only 1: auto with set).	0.0529270172119	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	10	search with cache (only 1: intuition).	1.62426400185	451
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	1.1.0.1.1.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	28.2260029316	3479
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.75186491013	166
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.5.1.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	8.19260287285	1328
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0258071422577	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.131504058838	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.145362138748	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	3	search with cache (only 1: auto with set).	0.0267570018768	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	2.8.4	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.673554182053	242
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.2.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0425469875336	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.6.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0848109722137	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1.2	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0387990474701	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	9	search with cache (only 1: auto with set fset).	0.054151058197	24
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0240120887756	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	11	search with cache (only 1: auto with set).	2.11448097229	352
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0.1.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0391628742218	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	5.5	search with cache (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_iff s x y); only 1: intuition).	3.34409999847	745
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.480379104614	65
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	3.16	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: intuition).	10.6126720905	1420
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	3.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.25231814384	321
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	4.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	0.137408018112	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	0.0.0.6	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	3.74610304832	484
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	4.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	2.44547200203	395
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: intuition).	0.0424439907074	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0331399440765	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0285029411316	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.027107000351	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0237150192261	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0410389900208	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.027291059494	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0249180793762	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.023414850235	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0385220050812	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	3	search with cache (only 1: auto with set).	0.0270161628723	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.136445045471	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0264618396759	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0251960754395	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0241091251373	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0443511009216	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.022243976593	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0269148349762	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0229170322418	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0218992233276	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0382339954376	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0720500946045	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0299391746521	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.129250049591	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0432357788086	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.021703004837	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0296959877014	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.2.1.1.1.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.090528965	355
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.0955369472504	31
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	2.2	search with cache (only 1: intros H a; only 1: auto with set fset).	0.0514080524445	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	10	search with cache (only 1: solve_proper).	0.0527329444885	21
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	4.11	search with cache (only 1: intros m; only 1: auto with set).	0.241316795349	218
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0292978286743	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.1.4.0.1.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	6.35924601555	1056
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	13.1.0.1.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	6.68935990334	2169
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	2.1.1.13	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.492172956467	415
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40	7.4.24	search with cache (only 1: compute; only 1: intros; only 1: eauto with set).	2.57671809196	2917
Coq.FSets.FSetBridge.DepOfNodep.fold	40	7.22.11	search with cache (only 1: simpl; only 1: intro x; only 1: eauto with set).	2.08534193039	7295
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	12.11.13	search with cache (only 1: simpl in *; only 1: intro n; only 1: eauto with set).	1.34815216064	4557
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	5.0.1.0.7.0.3	search with cache (only 1: intro s; only 1: unfold equal; only 1: intro b1; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: discriminate H).	4.51885008812	5500
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	2.0.0.0.0.2	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.110950946808	29
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.0.0.3	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: firstorder).	0.729608058929	143
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.00960993766785	5
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0139560699463	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.2	search with cache (only 1: intros s x; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0967829227448	57
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.039430141449	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0593600273132	33
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0320160388947	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0358159542084	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0354359149933	11
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0380659103394	11
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0389130115509	11
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.046972990036	11
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0466690063477	11
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.0110790729523	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	15.7.0.14.0	search with cache (only 1: intros; only 1: intro n; only 1: intro l; only 1: intuition; only 1: now rewrite H).	12.3871500492	30871
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.223020076752	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.159881830215	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	11.0.0.0.2	search with cache (only 1: intros s x f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition congruence).	6.92127609253	5790
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	2.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.056981086731	9
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	8	search with cache (only 1: solve_proper).	0.0559260845184	25
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	6.7.4	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.234659910202	296
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.1.0.6.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	1.19625687599	106
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.0.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.142835855484	3
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	6	search with cache (only 1: intuition).	0.109855175018	13
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	5.2	search with cache (only 1: apply subset_2; only 1: intuition).	0.0741510391235	23
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0510809421539	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0.0.1	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0318460464478	4
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0447978973389	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0675940513611	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0611939430237	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0632879734039	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0839989185333	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0524868965149	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0561289787292	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.3.8	search with cache (only 1: red; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.769566059113	127
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0608580112457	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0499820709229	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	1.1.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.156690120697	11
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.180750131607	1
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.110082864761	2
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.141742944717	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.137154102325	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.150146007538	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	1	search with cache (only 1: fsetdec).	0.0874199867249	2
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.287765026093	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	5	search with cache (only 1: fsetdec).	0.0996840000153	6
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0825068950653	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.125960111618	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.119147062302	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.178825855255	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0978589057922	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.189502000809	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.317921876907	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.280405044556	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0424189567566	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0424709320068	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.0666630268097	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0692911148071	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.068470954895	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.090500831604	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0797419548035	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	8	search with cache (only 1: fsetdec).	1.18249201775	155
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	3	search with cache (only 1: fsetdec).	0.353755950928	36
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	2	search with cache (only 1: fsetdec).	0.0794401168823	3
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.10671710968	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.109586954117	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.143515825272	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.195261955261	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.226516008377	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	6.2	search with cache (only 1: intuition; only 1: fsetdec).	0.255692005157	13
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.149093866348	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	2	search with cache (only 1: fsetdec).	0.0568051338196	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.056352853775	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0391459465027	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0407290458679	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0584559440613	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	4	search with cache (only 1: fsetdec).	0.0656821727753	5
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0887470245361	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	2	search with cache (only 1: fsetdec).	0.0461142063141	3
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.111513853073	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.109432935715	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.174515008926	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.154153108597	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	3.10.8	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	1.79999399185	759
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	6.2.22	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	2.56850814819	916
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.415157079697	4
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.348211050034	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.290301084518	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.155637979507	45
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40	0.3.2.2.0.6.13	search with cache (only 1: intros a b; only 1: red; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: intuition; only 1: fsetdec).	31.406981945	6039
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	10.1.0.4.0.3	search with cache (only 1: intro x; only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: reflexivity; only 1: fsetdec).	13.1498379707	6699
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	6.1.5.2	search with cache (only 1: intros; only 1: apply fold_rec; only 1: eauto; only 1: fsetdec).	4.60315299034	2413
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	8.0.0.0.0.0.2.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	3.10230898857	2034
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	2.5.0.0.0.0.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto with set; only 1: auto with set).	2.69164800644	1538
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.8.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.416749954224	98
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.393728017807	46
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0569109916687	6
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	2.1.10.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	2.49785113335	794
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	3.4.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.503319978714	44
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto; only 1: expAdd; only 1: auto with set).	0.512857913971	100
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: auto with set; only 1: auto with set).	0.497447013855	106
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	4	search with cache (only 1: auto with set fset).	0.230345010757	46
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	1.1.0.1.0.0.1.0.20.11	search with cache (only 1: intros m Hm; only 1: intros; only 1: unfold gtb; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: auto; only 1: ME.elim_comp; only 1: auto; only 1: ME.elim_comp; only 1: intuition).	17.6970779896	3046
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.1.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0347239971161	4
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0359411239624	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.938696861267	2
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.174177885056	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0223300457001	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.149652004242	16
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.221451044083	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0241611003876	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	2	search with cache (only 1: fsetdec).	0.0535049438477	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.06147813797	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	1	search with cache (only 1: fsetdec).	0.0885310173035	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.118344068527	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.130850076675	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0689940452576	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.22020316124	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.256485939026	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	4.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.103945970535	14
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	2	search with cache (only 1: fsetdec).	0.101186990738	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.083163022995	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0580790042877	1
Coq.FSets.FMapList.Raw.empty_1	40	3.8	search with cache (only 1: intro n; only 1: inversion_clear 1).	0.82738494873	196
Coq.FSets.FMapList.Raw.empty_sorted	40	13	search with cache (only 1: constructor).	0.0241720676422	70
Coq.FSets.FMapList.Raw.is_empty_1	40	4.43	search with cache (only 1: fix odd_spec 1; only 1: eauto with ordered_type).	28.8284199238	4156
Coq.FSets.FMapList.Raw.is_empty_2	40	1.0.12	search with cache (only 1: fix odd_spec 1; only 1: unfold Empty, PX.MapsTo; only 1: auto).	8.31844997406	1115
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.1.4.0.0.0.0.2	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear Hm; only 1: compute in H0; only 1: simpl; only 1: case (X.compare x x''); only 1: intuition; only 1: auto; only 1: intuition).	12.65117383	7090
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.00796699523926	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00719714164734	1
Coq.FSets.FMapList.Raw.elements_3	40	1.0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: auto).	0.0782661437988	5
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	1.0.0.0.1	search with cache (only 1: induction m; only 1: intuition; only 1: intuition; only 1: simpl in *; only 1: auto).	0.0335941314697	7
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.3.1.5.0.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: simpl; only 1: intuition).	2.58329200745	2244
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.1.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion H; only 1: subst; only 1: auto).	0.769593000412	362
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.4.2.0.0.0.5	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	1.29153108597	977
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.1.17.8.2	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: eauto with *; only 1: auto).	0.98964715004	1701
Coq.FSets.FMapList.Make.mem_1	40	0.0.24	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: eauto with bool).	10.0035419464	1656
Coq.FSets.FMapList.Make.mem_2	40	4.26	search with cache (only 1: fix even_spec 1; only 1: auto).	1.90331888199	5236
Coq.FSets.FMapList.Make.empty_1	40	4.0	search with cache (only 1: intros a b; only 1: inversion_clear 1).	0.0125279426575	6
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	5.2	search with cache (only 1: intros m; only 1: auto).	0.00950694084167	9
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00910520553589	2
Coq.FSets.FMapList.Make.elements_3	40	0.18	search with cache (only 1: induction m; only 1: auto).	0.178514003754	322
Coq.FSets.FMapList.Make.elements_3w	40	7.158	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	17.5632200241	167006
Coq.FSets.FMapList.Make.cardinal_1	40	6.1	search with cache (only 1: intros m; only 1: auto).	0.0130071640015	9
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40	5.17	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.573577880859	931
Coq.FSets.FMapList.Make.equal_2	40	4.1.19	search with cache (only 1: fix odd_spec 1; only 1: intros m m'; only 1: auto).	1.51331400871	1816
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	5.1.11	search with cache (only 1: fix odd_spec 1; only 1: intros m m'; only 1: destr_bool).	1.02226400375	1170
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40	0.22.3.19.4	search with cache (only 1: intro z; only 1: apply Acc_rect; only 1: intro H; only 1: split; only 1: auto).	6.90184998512	43338
Coq.Wellfounded.Inclusion.wf_incl	40	0.0.7.6	search with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).	0.121402978897	266
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	10.2.1.0	search with cache (only 1: intro; only 1: intros a b x; only 1: case x; only 1: auto with sets).	8.81769490242	5541
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	1.1.5.3.5.1	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.564876794815	1615
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.24.1.25.10	search with cache (only 1: red; only 1: intro H; only 1: intro n; only 1: constructor; only 1: auto).	3.25542116165	23896
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.1.2.9.5.12	search with cache (only 1: intro x; only 1: intros y H2; only 1: intros; only 1: induction H2; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	6.54823684692	16855
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.0114231109619	2
Coq.Numbers.DecimalR.of_IQmake_to_decimal	40
Coq.Numbers.DecimalR.of_to	40
Coq.Numbers.DecimalR.to_of	40
Coq.Numbers.DecimalR.to_decimal_inj	40	2.4.3.1.0.1.0	search with cache (only 1: intros Hnone EQ; only 1: generalize (DecimalQ.of_to q), (DecimalQ.of_to q'); only 1: revert Hnone; only 1: rewrite <- EQ; only 1: case QArith_base.to_decimal; only 1: now intros d _ H1 H2; rewrite <- (H1 d eq_refl), <- (H2 d eq_refl); only 1: now simpl).	7.31847596169	2143
Coq.Numbers.DecimalR.to_decimal_surj	40	3.1	search with cache (only 1: exists (QArith_base.of_decimal d); only 1: apply DecimalQ.to_of).	0.356351852417	67
Coq.Numbers.DecimalR.of_decimal_dnorm	40
Coq.Numbers.DecimalR.of_inj	40
Coq.Numbers.DecimalR.of_iff	40
Coq.Numbers.DecimalFacts.of_list_to_list	40
Coq.Numbers.DecimalFacts.to_list_of_list	40
Coq.Numbers.DecimalFacts.to_list_inj	40
Coq.Numbers.DecimalFacts.of_list_inj	40
Coq.Numbers.DecimalFacts.nb_digits_spec	40
Coq.Numbers.DecimalFacts.nzhead_spec	40
Coq.Numbers.DecimalFacts.unorm_spec	40
Coq.Numbers.DecimalFacts.revapp_spec	40
Coq.Numbers.DecimalFacts.rev_spec	40
Coq.Numbers.DecimalFacts.app_spec	40
Coq.Numbers.DecimalFacts.nztail_spec	40
Coq.Numbers.DecimalFacts.del_head_spec_0	40	0	search with cache (only 1: auto).	0.00948905944824	1
Coq.Numbers.DecimalFacts.del_head_spec_small	40
Coq.Numbers.DecimalFacts.del_head_spec_large	40
Coq.Numbers.DecimalFacts.nb_digits_0	40
Coq.Numbers.DecimalFacts.nb_digits_n0	40	1.0	search with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d); only 1: now case d).	0.118557929993	3
Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	1.5.1.1.3.2	search with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: Nat.nzsimpl; only 1: simpl; only 1: auto).	7.43587684631	2173
Coq.Numbers.DecimalFacts.length_lnzhead	40
Coq.Numbers.DecimalFacts.nb_digits_nzhead	40
Coq.Numbers.DecimalFacts.unorm_nzhead	40	1.105.12.9	search with cache (only 1: intros Hb; only 1: f_equal; only 1: symmetry; only 1: now induction u; [ idtac | simpl; rewrite IHu | .. ]).	30.5250840187	61208
Coq.Numbers.DecimalFacts.nb_digits_unorm	40
Coq.Numbers.DecimalFacts.nb_digits_rev	40
Coq.Numbers.DecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.DecimalFacts.unorm_D0	40	15	search with cache (only 1: auto).	0.0893580913544	91
Coq.Numbers.DecimalFacts.app_nil_l	40	0	search with cache (only 1: now unfold unorm; case nzhead).	0.0107879638672	1
Coq.Numbers.DecimalFacts.app_nil_r	40
Coq.Numbers.DecimalFacts.abs_app_int	40
Coq.Numbers.DecimalFacts.abs_norm	40
Coq.Numbers.DecimalFacts.iter_D0_nzhead	40
Coq.Numbers.DecimalFacts.iter_D0_unorm	40
Coq.Numbers.DecimalFacts.nzhead_app_l	40
Coq.Numbers.DecimalFacts.nzhead_app_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil	40	2.1.0.0.1.0.1	search with cache (only 1: intro Hl; only 1: apply to_list_inj; only 1: revert Hl; only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply le_not_lt, le_plus_r.. ]).	0.207974910736	100
Coq.Numbers.DecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.DecimalFacts.unorm_app_zero	40
Coq.Numbers.DecimalFacts.app_int_nil_r	40
Coq.Numbers.DecimalFacts.unorm_app_l	40
Coq.Numbers.DecimalFacts.unorm_app_r	40
Coq.Numbers.DecimalFacts.norm_app_int	40
Coq.Numbers.DecimalFacts.del_head_nb_digits	40
Coq.Numbers.DecimalFacts.del_tail_nb_digits	40
Coq.Numbers.DecimalFacts.del_head_app	40
Coq.Numbers.DecimalFacts.del_tail_app	40
Coq.Numbers.DecimalFacts.del_tail_app_int	40
Coq.Numbers.DecimalFacts.app_del_tail_head	40
Coq.Numbers.DecimalFacts.app_int_del_tail_head	40
Coq.Numbers.DecimalFacts.del_head_app_int_exact	40
Coq.Numbers.DecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.nzhead_D0	40	0.2	search with cache (only 1: simpl nzhead; only 1: now unfold unorm; case nzhead).	0.0513880252838	4
Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	1.2.70	search with cache (only 1: Nat.induct ltac:(n); only 1: reflexivity; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	2.61994791031	6116
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	8	search with cache (only 1: now unfold unorm; case nzhead).	0.304692029953	44
Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.0100300312042	1
Coq.Numbers.DecimalFacts.del_head_nonnil	40
Coq.Numbers.DecimalFacts.del_tail_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_involutive	40	1.0.0.0.0.0.0.0.0.0.2.1.6	search with cache (only 1: induction d; only 1: apply to_list_inj; only 1: now simpl; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.57358813286	4329
Coq.Numbers.DecimalFacts.nztail_involutive	40
Coq.Numbers.DecimalFacts.unorm_involutive	40
Coq.Numbers.DecimalFacts.norm_involutive	40
Coq.Numbers.DecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.DecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40	2.1.0.7.4.0	search with cache (only 1: apply to_list_inj; only 1: rewrite !nzhead_spec, app_spec; only 1: rewrite !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now rewrite <- List.app_comm_cons; case h).	3.2160589695	1908
Coq.Numbers.DecimalFacts.unorm_app_unorm	40
Coq.Numbers.DecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalFacts.unorm_app_l_nil	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	6	search with cache (only 1: apply of_lu_double_gen).	1.01885676384	7
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2	search with cache (only 1: firstorder).	0.0125238895416	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	9	search with cache (only 1: auto).	0.0130889415741	11
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0202000141144	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	1	search with cache (only 1: now induction n).	0.0129339694977	2
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	13.10.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	23.0239169598	15716
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0195081233978	2
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.1.1.0.8	search with cache (only 1: destruct (Pos.of_uint d) eqn:Hd, (Pos.of_uint d') eqn:Hd'; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj).	0.952511072159	428
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.2.3.4.0	search with cache (only 1: simpl norm; only 1: unfold N.to_int; only 1: exists (N.of_uint d); only 1: f_equal; only 1: exact (DecimalPos.Unsigned.to_of d)).	6.63621091843	2369
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	1	search with cache (only 1: auto).	0.0204339027405	2
Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNat.Signed.of_to	40
Coq.Numbers.HexadecimalNat.Signed.to_of	40
Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	3.1	search with cache (only 1: intros a b; only 1: auto).	0.0112428665161	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	1.0.0.18.6.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold Symmetric, Z.eq; only 1: simpl; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	8.19873309135	2445
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.7.2.0.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	0.56933093071	284
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	0.20.3.30.0.0	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intros n m H; only 1: rewrite add_comm; only 1: simpl; only 1: rewrite add_comm in H; only 1: now rewrite H).	26.4822220802	25260
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.1.10.0.2.6	search with cache (only 1: intro n; only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: simpl; only 1: destruct n as [n m]; only 1: simpl; only 1: now rewrite add_succ_r, add_succ_l).	0.941127061844	1394
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.1	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.111878156662	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	5.2.2	search with cache (only 1: unfold Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.104490995407	104
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.057471036911	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	22	search with cache (only 1: now rewrite <- ?BinPos.Pos.compare_antisym).	0.0668570995331	231
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	1.0.1.0	search with cache (only 1: intro n; only 1: unfold Transitive, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.128052949905	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.0.11.1	search with cache (only 1: unfold Z.opp, Z.eq; only 1: destruct n as [n m]; only 1: simpl; only 1: now nzsimpl).	0.484601020813	268
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	1.0.5.2.4	search with cache (only 1: intro n; only 1: unfold Z.eq; only 1: intro H1; only 1: simpl; only 1: now nzsimpl).	1.28016901016	470
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.3.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.123224973679	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.12.1.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: intro H1; only 1: now nzsimpl).	2.17548704147	1087
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.2.3	search with cache (only 1: intro n; only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.151808023453	28
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	18.0.7.2	search with cache (only 1: intro n; only 1: intro Dec; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	17.4211959839	7347
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.11.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.950965166092	792
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0183889865875	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.1.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0191440582275	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.1.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.153972148895	36
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.30.9	search with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	12.8314230442	9957
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	12.10.0.3	search with cache (only 1: intro m; only 1: intros; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_lt_mono_r).	6.18411898613	5366
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	9.32.0	search with cache (only 1: intros; only 1: do 2 rewrite <- add_opp_r; only 1: now apply add_le_mono_r).	12.9164538383	10021
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.18.3.5	search with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	9.42841005325	5384
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.18.3.5	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	8.89744615555	5090
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.12.0.2.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	2.67438602448	2428
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.3.1.1.0	search with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.266654968262	140
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	1.9.0.0.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	1.08584117889	563
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	3.11.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	10.6264240742	3998
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	3.14.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.458261013031	612
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	14.7.0.0	search with cache (only 1: intros n m p; only 1: do 2 rewrite <- add_opp_r; only 1: rewrite mul_add_distr_r; only 1: now rewrite mul_opp_l, <- mul_opp_r).	10.1865360737	4645
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	7.16.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_r n)  at 1; only 1: now apply mul_le_mono_nonpos_l).	11.2227430344	9351
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.5.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0489790439606	25
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	8.17.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_r n)  at 1; only 1: now apply mul_le_mono_nonpos_l).	14.6096789837	11759
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.6.5.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	11.6174869537	7966
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	3.97653508186	1166
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.12	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.156735897064	76
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.14	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.439775943756	155
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	1.2.1.60	search with cache (only 1: split; only 1: simpl_relation; only 1: firstorder; only 1: congruence).	2.04369688034	2339
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.0.0.1.7.4.12	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: order).	4.99616885185	1976
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.102628946304	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.149587869644	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.106687068939	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0509359836578	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	12.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: now nzsimpl).	2.20216107368	395
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.0.62	search with cache (only 1: intros H; only 1: bitwise; only 1: reflexivity).	8.37288808823	11304
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.0.8	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.191796064377	70
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0559930801392	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.4.0.2.0.4.0.2.5.3	search with cache (only 1: intros a a' Ha n n' Hn; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: rewrite Hn in H'; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: rewrite Hn in H'; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	20.2890150547	6626
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.45991897583	30
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	4.10.0	search with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: now nzsimpl').	0.58091211319	202
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	11.1.27	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	5.4244158268	6951
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	20.1.2	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	6.0232360363	4716
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	2.0.4.15	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	12.6720640659	6978
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	2.2.0.17	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros a; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	13.9198169708	6287
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	3.10.3.10.7.2	search with cache (only 1: intros; only 1: split; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	23.9988930225	10575
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0566580295563	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	0.1.11	search with cache (only 1: intros; only 1: unfold lnot; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	0.245463132858	83
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.6.5.1.1.5.2.5.1	search with cache (only 1: intro n; only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: apply pred_wd in H; only 1: now nzsimpl').	9.17961597443	12381
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	0.0.0.2.1.0.0.0.5.27.3	search with cache (only 1: intros; only 1: destruct_max n; only 1: now split; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_opp).	34.3177249432	40109
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0560569763184	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	4.0.0.0.0.15	search with cache (only 1: intros P n **; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	3.87235283852	3990
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	6.1.0.1.16.2.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: easy).	28.5854868889	22523
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	3.3.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: order).	0.0608468055725	18
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.4.0	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_l; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_l).	5.87314414978	2383
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.1.19.1.0	search with cache (only 1: intros a b Hb; only 1: rewrite (gcd_comm _ b); only 1: rewrite !rem_eq by trivial; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: apply gcd_add_mult_diag_r).	8.90362286568	6896
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.0.15.6.5	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r).	2.77765011787	3070
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.14.3.4	search with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: now nzsimpl).	1.16186499596	1453
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.15.22.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply opp_nonneg_nonpos; only 1: now rewrite opp_nonneg_nonpos; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: trivial).	14.4162259102	22702
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	1.3.3.3.1.5	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1).	0.824523925781	912
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0203011035919	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.3.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0221378803253	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.0.8.1.0.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: apply H; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.610268115997	659
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0211048126221	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	4.0.0.0.0.19.5	search with cache (only 1: intros EQ; only 1: intros n; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	30.6096479893	28327
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.13.0.8.0.4.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros; only 1: now apply divide_abs_l).	11.7457880974	10508
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.9.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: auto).	0.378179073334	193
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	1.1.1.44.11	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	4.54514908791	11778
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	1.1.1.29.1.0	search with cache (only 1: intro n; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition; only 1: intuition; only 1: intuition).	4.74988698959	5434
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	1.1.1.29.3.0	search with cache (only 1: intro; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition; only 1: intuition; only 1: intuition).	3.71704101562	6229
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.1.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0295870304108	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	23.7.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.914521932602	1547
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.24.0.3	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.484992980957	1111
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	3.5.22	search with cache (only 1: intro H1; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	1.2358341217	3649
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	21.10.2	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: now apply lt_lt_succ_r).	7.05157709122	14342
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	3.0.1.0.3.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: rewrite <- (succ_pred m); only 1: now rewrite pred_succ).	3.1800839901	1171
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.1.0.9.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	5.58533906937	3162
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	6.0.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.134249210358	19
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.036584854126	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.2.0.1.4.4	search with cache (only 1: intro m; only 1: symmetry; only 1: rewrite lt_le_pred; only 1: rewrite pred_succ; only 1: symmetry; only 1: apply lt_pred_le).	1.94449019432	1412
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	5.2.2.1.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_pred_le; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	2.37951803207	1282
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	16.2.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.997304916382	1228
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	5.4.0.1.0	search with cache (only 1: unfold sgn; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').	0.884924888611	596
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	5.5.0.1.0	search with cache (only 1: unfold sgn; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').	2.2919678688	729
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	2.1.1.3	search with cache (only 1: intros n m; only 1: rewrite abs_neq; only 1: auto with relations; only 1: now rewrite (opp_le_mono n 0), opp_0).	0.419838905334	184
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	1.4.1.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.258214950562	120
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.9.7	search with cache (only 1: apply abs_eq; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0864651203156	199
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	6.5.14.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: reflexivity).	9.81730103493	10710
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.7.5.0	search with cache (only 1: intros; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: apply abs_eq; only 1: apply abs_nonneg).	1.06435513496	987
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0350270271301	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	9.1.0.9	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	2.84860801697	1304
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.0	search with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0194809436798	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	1.0.1.0.1.0.1.0.1.32	search with cache (only 1: pose proof lt_m1_0 as F; only 1: split; only 1: destruct_sgn n; only 1: order'; only 1: order'; only 1: order'; only 1: destruct_sgn n; only 1: order'; only 1: order'; only 1: order').	39.1703989506	75019
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.14.1.0.0.0.3.1	search with cache (only 1: intros n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: order'; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: order').	26.4973928928	13565
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	19	search with cache (only 1: apply NZQuot.div_pos).	2.49383211136	1577
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.0.0.4.0.5.0.1.0.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	8.63975906372	5758
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.3.1	search with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.109841108322	28
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.0.4.0.5.0.1.0.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	11.8769240379	7356
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.1.1	search with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0217850208282	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	2.3.1.2.4.0.3.10.7.4	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (le_gt_cases 0 n); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: now nzsimpl).	15.6189951897	25910
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.0.0.0.0.1.0	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0405669212341	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: auto; only 1: now nzsimpl).	0.100618124008	29
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.6.10.0.0.2	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	2.15311598778	4143
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0178279876709	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0169858932495	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	1.0.0.1.0.3.0.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	5.5018529892	3582
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	5.1.0.1.0.0.13.1.5.5	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: nzsimpl; only 1: now try split).	23.7195839882	13268
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	1.1.14.0	search with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: auto; only 1: auto).	3.74709010124	2426
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.7.5	search with cache (only 1: intros a b ? ?; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using div_pos).	0.96114397049	378
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.11.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.627656936646	252
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.1.10.0.0.2.4	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	15.3685460091	6043
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.2.10.0.0.0.7	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	5.29499220848	3083
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0226418972015	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.2.0.2	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.402808904648	118
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.4.2.3	search with cache (only 1: intros a b **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	4.08313202858	1591
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.5.0.0.5.1	search with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: auto; only 1: rewrite mul_comm; only 1: auto).	11.0754699707	5376
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	5.1.5.0.1.1	search with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	4.90848302841	3823
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	2.1.0.2.1.2.5	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.16571497917	1029
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.1.2.0	search with cache (only 1: intros a b c **; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto using div_opp_l_nz).	0.0198860168457	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	6.7.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	14.5848128796	3543
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.3.2.4	search with cache (only 1: intros a b Hb H; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto using div_opp_l_nz).	2.08422684669	1113
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.2.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.03346395493	373
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	5.0.6.4	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.20865702629	1435
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.2	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0247020721436	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.8.2.0.19	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	2.07208013535	1133
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.1.10	search with cache (only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	2.82017016411	990
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.1.0.2.1.3	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.588619947433	135
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.5.4.1.2.0.1.2.19	search with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H).	6.10811805725	4959
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	10.6.1.7.6.1.0	search with cache (only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	21.1733109951	18443
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0	search with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0096538066864	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0210011005402	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.11.2	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	1.82301902771	669
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	10.0.0	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.741400957108	260
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0	search with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0139319896698	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	16.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	1.22688388824	545
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	0.0.8.0.22.11	search with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	39.0007829666	18453
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	10.11	search with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	0.85329914093	419
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.17	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.633071184158	236
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	4.0	search with cache (only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0151751041412	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0	search with cache (only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0135190486908	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.3	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0304639339447	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.0.1.14	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.74326300621	394
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4	search with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0184209346771	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.22	search with cache (only 1: rewrite (add_comm p); only 1: now rewrite (add_comm n m), <- add_sub_assoc, sub_add_distr, sub_diag, sub_0_l, add_opp_r).	4.73572802544	2268
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	5.14	search with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	3.53211903572	1625
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.12	search with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.181442022324	75
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	1.8.2.3.21.8.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	4.41460704803	11179
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.2.0.44.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	4.32896304131	14955
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.0	search with cache (only 1: intros a b ?; only 1: apply div_small; only 1: auto).	0.0559840202332	33
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	7.0	search with cache (only 1: intros; only 1: auto using mod_small).	0.106018066406	46
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.1.2.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.127008199692	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.228991985321	99
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0172610282898	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0155348777771	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.0.3.3.2.9.10.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	3.79110980034	4425
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	4.5.5.8.2.7.7	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	24.3282880783	21982
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	4.5	search with cache (only 1: intros a b ? ?; only 1: auto using div_pos).	0.0473790168762	37
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	1.0.7.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using Private_NZDiv.div_pos).	1.4154291153	690
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	3.4.7.26.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	20.5555870533	14698
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0250201225281	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.11.1.2.0.1	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	14.6875669956	6281
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.3.1.4.8	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	4.43592500687	2319
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	4.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.360023975372	138
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	3.0.1.0.1.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.536844015121	330
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	1.0.0.2.1.2.2	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.520722150803	316
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	3.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: intros EQ; only 1: now destruct (mod_always_pos a b)).	0.0239560604095	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	4.5.1	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	4.51205897331	1156
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	4.46082210541	988
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.2.2.3.2.2.3.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	31.0991640091	9054
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.3.0.2.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	2.1658449173	1058
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	4.3	search with cache (only 1: intros a n Hn; only 1: Z.order).	0.0195868015289	9
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	9.9	search with cache (only 1: intros; only 1: firstorder).	0.991222143173	1354
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.134703874588	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	3.15.12	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.877771854401	1085
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: auto).	0.0206809043884	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	1.0	search with cache (only 1: intro n; only 1: auto).	0.0204889774323	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.1.4.4	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: auto).	14.1159849167	83
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	1.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0295300483704	5
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	2.0.2.0.2.1.0.5.4.2	search with cache (only 1: simpl; only 1: intro n; only 1: Nat.induct n; only 1: destruct x; only 1: auto; only 1: destruct x; only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: split).	24.3713541031	9722
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.8	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	4.06605195999	37
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	3.5	search with cache (only 1: destruct x; only 1: auto).	2.03437805176	22
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0239410400391	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	3.7.5.0	search with cache (only 1: destruct x; only 1: intros; only 1: injection H; only 1: auto).	34.3552541733	1217
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	3.4.0.2.14	search with cache (only 1: intros n m ?; only 1: destruct m; only 1: simpl in *; only 1: rewrite H; only 1: auto).	3.02348899841	1739
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	3.6.3.0.0.6	search with cache (only 1: destruct x; only 1: simpl in *; only 1: intros; only 1: compute; only 1: rewrite H; only 1: auto).	5.1188929081	1668
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.0	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.0234291553497	2
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	2.3.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.044960975647	8
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	2.6	search with cache (only 1: destruct x; only 1: auto).	0.043270111084	13
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.4.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0350158214569	7
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0333940982819	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0115609169006	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0129480361938	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0.0	search with cache (only 1: red; only 1: auto).	0.0186100006104	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: reflexivity).	0.0157268047333	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0138161182404	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.16	search with cache (only 1: simpl; only 1: reflexivity).	0.727452993393	129
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	2.0	search with cache (only 1: intros; only 1: auto with arith).	0.0169100761414	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	3.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0843918323517	43
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	1.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.297462940216	71
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.7	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.356215000153	74
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.371371030807	42
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0181930065155	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	2.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.444854021072	74
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.2	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0241851806641	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	0.4.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	0.0496170520782	10
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.1.2.0.0.2.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.433438062668	126
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	39	search with cache (only 1: auto with zarith).	0.524585008621	894
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0225279331207	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0237350463867	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	1.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0299620628357	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.6.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0486328601837	19
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0	search with cache (only 1: auto).	0.0106019973755	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.8.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.603610992432	223
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	2.4.4.0.0	search with cache (only 1: intros; only 1: unfold pred, to_Z, Z.pred; only 1: rewrite <- Zminus_mod_idemp_r; only 1: rewrite <- Zminus_mod_idemp_l; only 1: auto).	3.36082220078	1538
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	2.3	search with cache (only 1: generalize wB_pos; only 1: auto with zarith).	0.0235321521759	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	1	search with cache (only 1: auto).	0.0153000354767	2
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	11.6388370991	1993
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	3.1.13	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.387942075729	186
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0290069580078	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	25.7	search with cache (only 1: intros Hb; only 1: now elim (Z.lt_irrefl 0)).	0.729846000671	874
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	25	search with cache (only 1: reflexivity).	0.0812649726868	306
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	search with cache (only 1: auto).	0.0250689983368	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	1	search with cache (only 1: auto).	0.0180330276489	2
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	0	search with cache (only 1: congruence).	0.0181767940521	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0331962108612	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.138911962509	14
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	11.1.36	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: now intros ->).	4.22079610825	5480
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.0149328708649	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0167689323425	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	3.17.2	search with cache (only 1: unfold eqm; only 1: repeat rewrite Zmod_mod; only 1: trivial).	3.2680709362	2714
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0594680309296	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.0802690982819	5
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: auto).	0.0165550708771	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	8	search with cache (only 1: destr_bool).	0.0612988471985	21
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	1.12	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.54434800148	107
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.1	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0512938499451	3
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.0.6.3.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	1.12285900116	534
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.1.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: rewrite andb_false_r; only 1: auto).	0.0310750007629	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	10.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).	1.15091109276	493
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	9.6	search with cache (only 1: intros; only 1: firstorder).	0.323065042496	389
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0166239738464	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	8.20.0.1	search with cache (only 1: intros a b; only 1: zify; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	29.0418770313	11524
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	2.0.1.0	search with cache (only 1: intros; only 1: apply Pos.eqb_eq; only 1: unfold eqb, eq; only 1: easy || lia).	0.0941081047058	27
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	9.8.4.9.4.3.28.9	search with cache (only 1: constructor; only 1: now repeat constructor; only 1: intro n; only 1: intros; only 1: now subst; only 1: intros EQ; only 1: intros f x l; only 1: intuition congruence).	9.11296510696	21382
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.2.0.0.66	search with cache (only 1: rewrite N.one_succ; only 1: zify; only 1: simpl Z.add; only 1: rewrite <- one_mod_wB  at 2; only 1: now rewrite <- Zplus_mod).	1.05897092819	2688
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	20	search with cache (only 1: firstorder  auto with crelations).	0.189657926559	186
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.2.1.0	search with cache (only 1: firstorder  auto with crelations; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.120496988297	29
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.2.31.1.28	search with cache (only 1: intros l; only 1: zify; only 1: Z.nzsimpl'; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	9.96189284325	15082
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.2	search with cache (only 1: simpl; only 1: auto).	0.0118300914764	4
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	3.0	search with cache (only 1: simpl; only 1: auto).	0.0108599662781	5
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.012629032135	2
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal'	40
Coq.Numbers.HexadecimalQ.of_to	40
Coq.Numbers.HexadecimalQ.dnorm_spec_i	40
Coq.Numbers.HexadecimalQ.dnorm_spec_f	40
Coq.Numbers.HexadecimalQ.dnorm_spec_e	40	6.0.1.0.0.1.4.1.0.11	search with cache (only 1: destruct d; only 1: now simpl; only 1: simpl; only 1: set (m := match Decimal.norm e with | Decimal.Pos _ | _ => _ end); only 1: unfold m; only 1: case (Decimal.norm e); only 1: clear m e; only 1: intro e; only 1: now case e; clear e; [ idtac | intro e; case e | .. ]; only 1: now simpl).	32.8632109165	7144
Coq.Numbers.HexadecimalQ.dnorm_involutive	40
Coq.Numbers.HexadecimalQ.IZ_to_Z_IZ_of_Z	40	0.0.0.0.0.0.1.1.2.4	search with cache (only 1: case (Z.eq_dec z 2); only 1: case z; only 1: now simpl; only 1: intros ? H; only 1: now simpl; only 1: now simpl; only 1: case z; only 1: now simpl; only 1: now simpl; only 1: now simpl).	1.44904994965	753
Coq.Numbers.HexadecimalQ.dnorm_i_exact	40
Coq.Numbers.HexadecimalQ.dnorm_i_exact'	40
Coq.Numbers.HexadecimalQ.to_of	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQ.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalQ.of_inj	40
Coq.Numbers.HexadecimalQ.of_iff	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	12	search with cache (only 1: parity_binop).	0.818583965302	393
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	3	search with cache (only 1: parity_binop).	0.221123933792	49
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	13.0.25	search with cache (only 1: intros H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	2.25565385818	6082
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	13.17.10.5	search with cache (only 1: intro H; only 1: rewrite nle_gt; only 1: apply lt_succ_r; only 1: apply le_0_l).	4.9399330616	15977
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	6.16.11	search with cache (only 1: intro n; only 1: apply lt_succ_r; only 1: apply le_0_l).	0.931343078613	1535
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	2.4.0.8.22.2	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	2.87098193169	5824
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.6	search with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0323920249939	10
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	3.4.11.1.17.0.0.5	search with cache (only 1: intro n; only 1: cases n; only 1: rewrite pred_0; only 1: apply le_0_l; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite pred_succ; only 1: now apply lt_succ_diag_r).	8.10066318512	19677
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	3.4.1.1.0.0.3	search with cache (only 1: intro n; only 1: cases n; only 1: intros H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: now apply lt_succ_diag_r).	2.45984506607	2552
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	2.0.4.2.9.0.0.0.0.1.0.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro n; only 1: rewrite pred_0; only 1: auto; only 1: intros; only 1: rewrite pred_succ; only 1: elim H using le_ind; only 1: solve_proper; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).	30.2910740376	41545
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	1.1.0.6.4.7.1.0.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: auto; only 1: intros m H1 H2; only 1: rewrite pred_succ; only 1: rewrite <- le_succ_l; only 1: order).	15.3254449368	28636
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	7.0.6.0.4.1.0.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro n; only 1: rewrite pred_0; only 1: apply lt_le_incl; only 1: intros n m; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	8.69469690323	10793
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	5.3.2.2.2.4.3.0.2	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: auto; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: auto).	20.1387839317	42734
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	11.3.0.0.2.1.2	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: auto; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	9.07120394707	13884
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	1.0.2.2.0.1.2.0.9.0	search with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_lt_mono by apply neq_succ_0; only 1: rewrite pred_succ; only 1: rewrite pred_succ in IH; only 1: now rewrite pred_succ).	22.388669014	22426
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.1.17.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: order).	5.6314330101	5122
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	1.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl).	0.0340490341187	11
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.26.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	2.6416759491	5742
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.1.4.8.1	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.863504886627	1123
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	5.2.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.0430769920349	42
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0139842033386	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0139000415802	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.0.0.7.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: rewrite one_succ; only 1: intro n; only 1: now apply (neq_succ_diag_l 0); only 1: now nzsimpl).	0.496590852737	703
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.7.0.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.162663936615	208
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.011353969574	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0110030174255	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	13.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	2.23002696037	2947
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	2.2.3.1	search with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.343844890594	253
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	2.2.10.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.706030845642	632
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.7.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.0552170276642	24
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	2.2.8.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.683615207672	370
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	2.2.2.2.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.809646129608	486
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0285608768463	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.7.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: rewrite mul_comm; only 1: order; only 1: order).	2.13971400261	1321
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	1.1.8.1.1.3.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	6.39200901985	5048
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	2.1.2.7.5	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	5.35171890259	3696
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	2.1.2	search with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	0.207650184631	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.2.2.3.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.799529075623	573
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: intuition; only 1: intuition).	0.0629260540009	20
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	1.1.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: intuition; only 1: intuition).	1.37666010857	450
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.2.0.0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: intuition; only 1: intuition).	1.81054592133	731
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.11.5.4.2.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: apply neq_0_lt_0; only 1: assumption; only 1: now rewrite Private_NZDiv.mod_small_iff).	2.05558300018	2959
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	3.1.0.7.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.15150809288	495
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	12.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: assumption).	1.19975399971	717
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	12.12.5.4.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: assumption; only 1: assumption).	27.6069009304	20476
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	3.0.0.4.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.507579088211	179
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.0.2.11	search with cache (only 1: intros a b Ha Hb; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro n; only 1: tauto).	3.75099110603	1775
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.0.1.0.4.2.12	search with cache (only 1: intros a b Ha Hb; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro n; only 1: tauto; only 1: intro n; only 1: tauto).	21.9626278877	11394
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.545968055725	91
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	12.0.0.2.1.12.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	16.0374140739	11039
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: auto; only 1: auto; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0329608917236	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	7.5	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.0424308776855	82
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	2.0.8.11.4.2	search with cache (only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: now rewrite pred_succ).	1.01377701759	2477
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	2.0.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: unfold ltb; only 1: now rewrite recursion_0).	1.01514196396	6
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	1.5.4.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.42901802063	392
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.4	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0105791091919	7
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	1.13.0	search with cache (only 1: unfold even; only 1: intro H; only 1: now rewrite recursion_succ).	0.322515964508	563
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	2.13	search with cache (only 1: compute; only 1: now rewrite recursion_0).	0.046394109726	111
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	4.0.0.0.1.0.3	search with cache (only 1: setoid_rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: now nzsimpl).	4.43366384506	457
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	1.6.3	search with cache (only 1: unfold pow; only 1: intro n; only 1: now rewrite recursion_0).	0.550209999084	76
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	0.5.1.1.0.0	search with cache (only 1: intros; only 1: unfold pow; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: order; only 1: f_equiv').	6.96996903419	502
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	5.5.2.5.5	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	13.9891178608	12941
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	5	search with cache (only 1: solve_proper).	0.134017944336	43
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: destr_bool; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	2.98028492928	1195
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.14	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.148072004318	130
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.23	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	3.77279686928	1645
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.1.1.0.0.3.5	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: generalize (lt_succ_diag_r 0); only 1: order; only 1: order'; only 1: order_nz).	0.862703084946	349
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	2.0.0.1.1.0.0.1.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	1.11675906181	434
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.2	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0218069553375	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	1.6.2.3.10	search with cache (only 1: repeat red; only 1: intros; only 1: apply b2n_inj; only 1: do 2 f_equiv; only 1: auto).	5.47006607056	3459
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	3.0.0.0.2.6.9	search with cache (only 1: repeat red; only 1: intros z n H; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	22.7429640293	6315
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.2.17.19	search with cache (only 1: generalize (lt_succ_diag_r 0); only 1: intros n H; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	15.0018801689	13230
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0.1.6.0.2.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: bitwise as m; only 1: apply testbit_false; only 1: nzsimpl; only 1: generalize (lt_succ_diag_r 0); only 1: order; only 1: order'; only 1: order_nz).	3.04748511314	1091
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: generalize (lt_succ_diag_r 0); only 1: order; only 1: order_nz).	0.0714519023895	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.3.0.1	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: now order; only 1: trivial using le_0_l).	0.437160015106	135
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	1.8.2.1.0.7	search with cache (only 1: repeat red; only 1: intros; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: auto).	6.3223669529	1565
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.3.6	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.733299016953	155
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.113662004471	15
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.7	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.46479511261	130
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0375580787659	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.0.2	search with cache (only 1: intro n; only 1: bitwise; only 1: destr_bool).	0.092334985733	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0575380325317	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.0.26	search with cache (only 1: intro H; only 1: bitwise; only 1: reflexivity).	1.93738508224	2130
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.8	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.09880900383	65
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0349450111389	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.4.6	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	4.64791083336	479
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.3.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.217555999756	22
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.2.9.2	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	3.54217100143	1462
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	5.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0559959411621	17
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.0.0.1.1.1.0.0.1.0.0	search with cache (only 1: intros a n H; only 1: bitwise as m; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	5.72255206108	2945
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.1.6	search with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	1.24646496773	388
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.1.0.0.0.19.1.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.570242881775	1295
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	14.4.7	search with cache (only 1: intros EQ; only 1: apply sqrt_square; only 1: now apply le_0_l).	1.25945281982	1297
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	4.11.0.0.1.0.0.8	search with cache (only 1: intros n IH; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: now nzsimpl').	25.459498167	32137
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.4.4.1.0.1	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	2.20309686661	1499
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	9.1.4.4.6.0	search with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: auto; only 1: now apply le_0_l).	8.72863602638	6362
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	14.4.0.22	search with cache (only 1: intros n IH; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	9.73933887482	6300
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.1.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: now apply pow_0_l; only 1: now apply pow_0_l).	0.0343360900879	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	3.7.8.29	search with cache (only 1: intro n; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	8.93717813492	9497
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	3.3.3.1.0.0.0.0.0.0.0.0.0.5.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	15.4074041843	6653
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	10.3.8.17.6.0.0	search with cache (only 1: intros a b Ha Hb; only 1: contradict Ha; only 1: apply Private_NZPow.pow_eq_0 with b; only 1: intros H; only 1: rewrite H, pow_0_r in Hb; only 1: order'; only 1: trivial).	22.7970359325	44405
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.1.2.26.3	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: trivial; only 1: trivial).	27.2504229546	13561
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	14.3.7.6	search with cache (only 1: intros a b ? ?; only 1: apply pow_le_mono_r; only 1: generalize (le_0_l b); only 1: auto').	4.38400006294	6847
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.0.0.0.7	search with cache (only 1: intros a b ? ?; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.60631608963	359
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.4.7.0.5.12.5	search with cache (only 1: intros a b ? ?; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	4.73586702347	8281
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.2.0.1.4.3	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.722450017929	650
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	7.0.2.2.0.8	search with cache (only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	13.248980999	11521
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	2.0.0.1.2.0.1.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l).	5.40984106064	2524
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	1.35586214066	434
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	2.0.0.8.2.0.0.7.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	12.8869080544	7639
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0176191329956	3
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: auto; only 1: auto; only 1: f_equiv').	7.26197385788	69
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40	1.0.1.2.0.0.0.0.2.8.0.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).	25.6517210007	14931
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.1.3.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0415558815002	9
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	6.0.5	search with cache (only 1: intros n; only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.256940126419	176
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.3.2	search with cache (only 1: intros; only 1: unfold lcm; only 1: now nzsimpl).	0.0454471111298	14
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.3.1.2.14.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	1.84985804558	2745
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	4.0.23.2.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: intros; only 1: now split).	13.9954180717	12184
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	6.0.1.2	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.232185840607	252
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	3.0.0.0.5.0.4.14	search with cache (only 1: intros z n; only 1: induct ltac:(n); only 1: rewrite sub_succ_r; only 1: now nzsimpl'; only 1: intros n IH; only 1: rewrite sub_succ_r; only 1: rewrite IH; only 1: now nzsimpl').	13.0813539028	11892
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.1.0.0.4.0	search with cache (only 1: intros n m p LE; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	4.11506080627	2045
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.HexadecimalZ.of_to	40
Coq.Numbers.HexadecimalZ.to_of	40
Coq.Numbers.HexadecimalZ.to_int_inj	40	7.9	search with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	0.468530893326	353
Coq.Numbers.HexadecimalZ.to_int_surj	40
Coq.Numbers.HexadecimalZ.of_int_norm	40
Coq.Numbers.HexadecimalZ.of_inj	40
Coq.Numbers.HexadecimalZ.of_iff	40
Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZ.double_norm	40
Coq.Numbers.HexadecimalZ.of_hex_int_double	40
Coq.Numbers.HexadecimalZ.double_to_hex_int	40
Coq.Numbers.HexadecimalZ.nztail_to_hex_uint_pow16	40
Coq.Numbers.HexadecimalN.Unsigned.of_to	40
Coq.Numbers.HexadecimalN.Unsigned.to_of	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	7	search with cache (only 1: apply Unsigned.of_inj).	0.0463590621948	20
Coq.Numbers.HexadecimalN.Unsigned.of_iff	40
Coq.Numbers.HexadecimalN.Signed.of_to	40
Coq.Numbers.HexadecimalN.Signed.to_of	40
Coq.Numbers.HexadecimalN.Signed.to_int_inj	40
Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40	0.0.2.1.0.0	search with cache (only 1: simpl; only 1: rewrite <- HexadecimalPos.Unsigned.to_of; only 1: unfold N.to_hex_int; only 1: exists (N.of_hex_uint d); only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.0847330093384	38
Coq.Numbers.HexadecimalN.Signed.of_int_norm	40
Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalFacts.of_list_to_list	40
Coq.Numbers.HexadecimalFacts.to_list_of_list	40
Coq.Numbers.HexadecimalFacts.to_list_inj	40
Coq.Numbers.HexadecimalFacts.of_list_inj	40
Coq.Numbers.HexadecimalFacts.nb_digits_spec	40
Coq.Numbers.HexadecimalFacts.nzhead_spec	40
Coq.Numbers.HexadecimalFacts.unorm_spec	40
Coq.Numbers.HexadecimalFacts.revapp_spec	40
Coq.Numbers.HexadecimalFacts.rev_spec	40
Coq.Numbers.HexadecimalFacts.app_spec	40
Coq.Numbers.HexadecimalFacts.nztail_spec	40
Coq.Numbers.HexadecimalFacts.del_head_spec_0	40	2	search with cache (only 1: trivial).	0.0182659626007	3
Coq.Numbers.HexadecimalFacts.del_head_spec_small	40
Coq.Numbers.HexadecimalFacts.del_head_spec_large	40	0.0.0.0.1.1	search with cache (only 1: revert d; only 1: induction n as [| n IHn]; only 1: intro d; only 1: now simpl; only 1: intro d; only 1: now case d; [ idtac | intros d' H; apply IHn, le_S_n.. ]).	0.0515868663788	8
Coq.Numbers.HexadecimalFacts.nb_digits_0	40
Coq.Numbers.HexadecimalFacts.nb_digits_n0	40	1.0	search with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d); only 1: now case d).	0.235948085785	3
Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40	2.17.1.1	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	2.25480890274	1646
Coq.Numbers.HexadecimalFacts.length_lnzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_nzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40
Coq.Numbers.HexadecimalFacts.nb_digits_rev	40
Coq.Numbers.HexadecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.HexadecimalFacts.unorm_D0	40	0	search with cache (only 1: now simpl).	0.0103139877319	1
Coq.Numbers.HexadecimalFacts.app_nil_l	40	13	search with cache (only 1: trivial).	0.0264489650726	60
Coq.Numbers.HexadecimalFacts.app_nil_r	40
Coq.Numbers.HexadecimalFacts.abs_app_int	40
Coq.Numbers.HexadecimalFacts.abs_norm	40
Coq.Numbers.HexadecimalFacts.iter_D0_nzhead	40
Coq.Numbers.HexadecimalFacts.iter_D0_unorm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_l	40
Coq.Numbers.HexadecimalFacts.nzhead_app_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil	40	2.1.0.1.0.0.1	search with cache (only 1: intro Hl; only 1: apply to_list_inj; only 1: revert Hl; only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply le_not_lt, le_plus_r.. ]).	0.285120010376	120
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_zero	40
Coq.Numbers.HexadecimalFacts.app_int_nil_r	40
Coq.Numbers.HexadecimalFacts.unorm_app_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_r	40
Coq.Numbers.HexadecimalFacts.norm_app_int	40
Coq.Numbers.HexadecimalFacts.del_head_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_tail_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_head_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int	40
Coq.Numbers.HexadecimalFacts.app_del_tail_head	40
Coq.Numbers.HexadecimalFacts.app_int_del_tail_head	40
Coq.Numbers.HexadecimalFacts.del_head_app_int_exact	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp	40
Coq.Numbers.HexadecimalFacts.nzhead_rev	40
Coq.Numbers.HexadecimalFacts.rev_rev	40
Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_D0	40	1	search with cache (only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.0140709877014	2
Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	5.1.50	search with cache (only 1: Nat.induct n; only 1: now simpl; only 1: now simpl).	2.93237280846	4188
Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40
Coq.Numbers.HexadecimalFacts.unorm_0	40
Coq.Numbers.HexadecimalFacts.unorm_nonnil	40
Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40
Coq.Numbers.HexadecimalFacts.del_head_nonnil	40
Coq.Numbers.HexadecimalFacts.del_tail_nonnil	40
Coq.Numbers.HexadecimalFacts.nzhead_involutive	40
Coq.Numbers.HexadecimalFacts.nztail_involutive	40
Coq.Numbers.HexadecimalFacts.unorm_involutive	40
Coq.Numbers.HexadecimalFacts.norm_involutive	40
Coq.Numbers.HexadecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.HexadecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.HexadecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40	2.1.0.7.5.0	search with cache (only 1: apply to_list_inj; only 1: rewrite !nzhead_spec, app_spec; only 1: rewrite !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now rewrite <- List.app_comm_cons; case h).	3.19201803207	1622
Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40
Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	4.3.14	search with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: intros [=<-]; only 1: trivial).	16.3285210133	15011
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalZ.of_uint_iter_D0	40
Coq.Numbers.DecimalZ.of_int_iter_D0	40
Coq.Numbers.DecimalZ.nztail_to_uint_pow10	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.16.7	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.708560943604	773
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	4.0.0.9.6.0.1.1.2	search with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order'; only 1: apply lt_succ_r; only 1: nzsimpl'; only 1: rewrite <- succ_le_mono; only 1: rewrite <- succ_le_mono; only 1: now apply lt_le_incl, lt_succ_r).	33.3232188225	17328
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.1.10	search with cache (only 1: unfold sqrt_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.227715015411	228
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.0.7.0.2	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: now nzsimpl; only 1: order; only 1: order).	0.245036840439	385
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.1.8.24	search with cache (only 1: rewrite one_succ; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn by now apply lt_succ_r, mul_nonneg_nonneg; only 1: now rewrite pred_succ, sqrt_square).	7.08484816551	9432
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.1.1.0.0.1.0.4.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: auto; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	1.48387098312	1058
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	2.2.1.8.1.63.25	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	31.8058750629	59718
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	3.3.0.0.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: now nzsimpl).	0.59943985939	536
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.1.1.3.0.2.4.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: auto; only 1: intuition; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.942178010941	1102
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.9.0.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: order'; only 1: order).	0.652095794678	1020
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.4.0	search with cache (only 1: intros a ?; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0698871612549	53
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.0.1.12.0	search with cache (only 1: intros a b Ha Hb; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: auto; only 1: auto).	0.79217505455	670
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.1.0.0.2.3.0.0	search with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.920887947083	579
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0650401115417	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.230497121811	61
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.026172876358	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.0.1.4.1	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.17458605766	1435
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.339780092239	36
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.1	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.0162858963	255
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.2	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.40399479866	81
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	1.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0326061248779	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	19.4.3.2.0	search with cache (only 1: intro; only 1: intro; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	11.2280797958	6620
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.2.0.1	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0198311805725	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0	search with cache (only 1: intuition order).	0.0118100643158	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0	search with cache (only 1: intuition order).	0.0136499404907	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	search with cache (only 1: intuition order).	0.0123190879822	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0	search with cache (only 1: intuition order).	0.0132501125336	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	search with cache (only 1: intuition order).	0.0121178627014	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	search with cache (only 1: intuition order).	0.032075881958	41
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	3.0	search with cache (only 1: intro n; only 1: intuition order).	0.029746055603	30
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0	search with cache (only 1: intuition order).	0.0101580619812	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.13.7.3	search with cache (only 1: intros n H; only 1: intro m; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	1.16060018539	4382
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.5.7.4	search with cache (only 1: intros n H; only 1: intro m; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	22.9673030376	8774
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	1.16.4	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	2.03837609291	3422
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	12.3.0.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	28.6830599308	15521
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.14.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.236484050751	192
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.14.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.217144012451	276
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.1.0.0.2.12.2.2	search with cache (only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	2.31990981102	4045
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	1.0.0.2.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.0988550186157	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.5.1	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0925850868225	36
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.3.3	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	1.42780208588	418
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.0.1.0.25	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	4.01825094223	5081
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.0.2.15	search with cache (only 1: split; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.522953033447	851
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	3	search with cache (only 1: intuition order).	0.0571081638336	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0123119354248	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.3.3.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	12.4159398079	539
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.1.1	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0467789173126	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0121049880981	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0131719112396	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.6.1.17	search with cache (only 1: compute; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	9.79165887833	5064
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.2.3	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.243040084839	88
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.0.1.14.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_succ_r; only 1: split; only 1: order; only 1: order).	4.76493906975	5052
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	36.11	search with cache (only 1: intros RS' n; only 1: intuition order).	1.06909990311	3296
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	5.0	search with cache (only 1: intro n; only 1: apply right_induction).	0.0166578292847	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	1.0.1.18.1	search with cache (only 1: simpl_relation; only 1: induction n as [| n IHn]; only 1: apply H; only 1: apply H0; only 1: Tactics.program_simpl).	6.88033914566	1486
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	35	search with cache (only 1: now repeat split).	0.318310976028	621
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	7.1	search with cache (only 1: intro n; only 1: easy).	0.0168159008026	10
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	12.3.11.3	search with cache (only 1: intro n; only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_diag_r; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	13.0763351917	17006
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.1.0.5.6.3	search with cache (only 1: intro n; only 1: symmetry; only 1: induction n; only 1: apply add_0_l; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	5.69202589989	3911
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	10.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0796091556549	73
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.12.1.3.11	search with cache (only 1: intro n; only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply lt_le_incl, lt_0_1).	2.84935498238	1924
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.20.4.0	search with cache (only 1: intro n; only 1: rewrite <- (add_0_l 0); only 1: exists 0; only 1: now nzsimpl).	8.08066701889	5567
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.5.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.743282794952	581
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.1.6.23	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl').	0.649657011032	1220
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	4.8.1	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.115628957748	185
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	1.11.5.5.0.0.31	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	36.4698841572	51038
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0309221744537	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	4.0.0.2.0.26.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).	25.9870619774	29791
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0347981452942	12
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0313899517059	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	5.4.0.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	8.23294091225	5075
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.128736019135	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.06656122208	779
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.10.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.522703886032	260
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.1.0.2	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.172605991364	47
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	0.1.1.0.2.2	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: now destruct (even n), (even m)).	0.460761070251	256
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	2.4.2.1.1	search with cache (only 1: intros n m; only 1: apply even_add_even; only 1: rewrite two_succ; only 1: exists m; only 1: now nzsimpl').	0.672024011612	343
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	2.4.2.1.1	search with cache (only 1: intros n m; only 1: apply odd_add_even; only 1: rewrite two_succ; only 1: exists m; only 1: now nzsimpl').	0.820924043655	454
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.121778011322	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0756669044495	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.0.0.0.3.12.5.8	search with cache (only 1: intro n; only 1: intro p; only 1: nzinduct p; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	4.31026697159	3815
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0201969146729	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0209448337555	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	8.1.0.0.1.1	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now apply bi_induction).	2.08311009407	1177
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.262960910797	78
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	3.0.0.3.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.620453119278	196
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0203938484192	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.4.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0551090240479	35
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.7.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.407945156097	213
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0.0.1	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0140149593353	6
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.1.8	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0330758094788	48
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	11	search with cache (only 1: intuition).	0.0659098625183	118
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	6.2.5.3.12.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	2.66251301765	5710
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	0.0.1.0.0.8.0.0.0.1.0	search with cache (only 1: intros n m p H1 H2; only 1: le_elim H2; only 1: le_elim H1; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now nzsimpl; only 1: apply eq_le_incl; only 1: now rewrite H2).	14.7542040348	8324
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.042542219162	24
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	11.2.1.0.2.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: order).	4.72468590736	3288
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.3.4	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0381391048431	24
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	2.3.4	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.150496006012	107
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	8.13.1.2.14.4.4	search with cache (only 1: intros; only 1: split; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto; only 1: intro H; only 1: now rewrite H, mul_0_l).	33.2526190281	41981
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.1.9.2	search with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.588970899582	591
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	1.1.2	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.0961918830872	37
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	1.4	search with cache (only 1: intros n m p H; only 1: now apply mul_lt_mono_nonneg).	0.0172259807587	14
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	2.2.1.0.1.6	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonneg; only 1: rewrite H2; only 1: now apply eq_le_incl).	0.823312044144	986
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.HexadecimalR.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalR.of_to	40
Coq.Numbers.HexadecimalR.to_of	40
Coq.Numbers.HexadecimalR.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalR.to_hexadecimal_surj	40	4.1	search with cache (only 1: exists (QArith_base.of_hexadecimal d); only 1: apply HexadecimalQ.to_of).	0.519333839417	75
Coq.Numbers.HexadecimalR.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalR.of_inj	40	0.3.5	search with cache (only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !HexadecimalQ.to_of, H).	0.12438583374	32
Coq.Numbers.HexadecimalR.of_iff	40
Coq.Numbers.HexadecimalString.uint_of_char_spec	40
Coq.Numbers.HexadecimalString.NilEmpty.usu	40
Coq.Numbers.HexadecimalString.NilEmpty.sus	40
Coq.Numbers.HexadecimalString.NilEmpty.isi	40
Coq.Numbers.HexadecimalString.NilEmpty.sis	40
Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalString.NilZero.sus	40
Coq.Numbers.HexadecimalString.NilZero.usu	40
Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	0.5	search with cache (only 1: simpl; only 1: auto).	0.0176610946655	7
Coq.Numbers.HexadecimalString.NilZero.usu_gen	40
Coq.Numbers.HexadecimalString.NilZero.isi	40
Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	6.2	search with cache (only 1: unfold int_of_string; only 1: auto).	0.0252120494843	19
Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0154809951782	2
Coq.Numbers.HexadecimalString.NilZero.sis	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal	40
Coq.Numbers.DecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal'	40
Coq.Numbers.DecimalQ.of_to	40
Coq.Numbers.DecimalQ.dnorm_spec_i	40
Coq.Numbers.DecimalQ.dnorm_spec_f	40
Coq.Numbers.DecimalQ.dnorm_spec_e	40
Coq.Numbers.DecimalQ.dnorm_involutive	40
Coq.Numbers.DecimalQ.IZ_to_Z_IZ_of_Z	40
Coq.Numbers.DecimalQ.dnorm_i_exact	40
Coq.Numbers.DecimalQ.dnorm_i_exact'	40
Coq.Numbers.DecimalQ.to_of	40
Coq.Numbers.DecimalQ.to_decimal_inj	40
Coq.Numbers.DecimalQ.to_decimal_surj	40
Coq.Numbers.DecimalQ.of_decimal_dnorm	40
Coq.Numbers.DecimalQ.of_inj	40
Coq.Numbers.DecimalQ.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40	15.1.30	search with cache (only 1: revert d; only 1: intro d'; only 1: apply of_lu_double_gen).	10.527367115	1673
Coq.Numbers.HexadecimalPos.Unsigned.of_to	40
Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	1	search with cache (only 1: firstorder).	0.0127170085907	2
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: auto).	0.0101881027222	1
Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0997610092163	3
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPos.Signed.of_to	40
Coq.Numbers.HexadecimalPos.Signed.to_of	40
Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	20	search with cache (only 1: now symmetry).	0.0344779491425	186
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	6.37.8.0	search with cache (only 1: intros; only 1: intro n; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).	4.7792801857	32304
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	18	search with cache (only 1: apply (@CRelationClasses.symmetry _ _ _ _)).	0.165148973465	288
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	1	search with cache (only 1: auto with *).	0.0136210918427	2
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0114669799805	2
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	0.0.3.1.0.3.2.15.0	search with cache (only 1: intros; only 1: destruct (P.lt_total x y) as [H'| [H'| H']]; only 1: auto; only 1: destruct H; only 1: rewrite ?P.le_lteq; only 1: intuition; only 1: destruct H; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	16.2069489956	26915
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.2.0.3.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.65717101097	1423
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.2.1	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.0349440574646	26
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	search with cache (only 1: eauto with *).	0.163917064667	52
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	2.14	search with cache (only 1: intros x y H; only 1: Nat.Private_Tac.order).	0.285565137863	408
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	3.2	search with cache (only 1: intros n m H; only 1: intuition Nat.order).	0.119267940521	32
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0.5.4	search with cache (only 1: intros x y H; only 1: transitivity y; only 1: auto; only 1: auto).	0.282190084457	217
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	1.2	search with cache (only 1: intros n m; only 1: intuition Z.order).	0.102248907089	39
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	39.1	search with cache (only 1: intro n; only 1: now subst).	1.03796291351	3700
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.4.6.0.0	search with cache (only 1: intros (x1, x2); only 1: red; only 1: intros; only 1: destruct H; only 1: auto with ordered_type).	0.654856920242	871
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	1.4.0.12.1.1.1	search with cache (only 1: intros (x1, x2); only 1: unfold eq; only 1: intuition; only 1: MO1.order; only 1: simpl; only 1: simpl in *; only 1: MO2.order).	27.0944199562	33151
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.0.1.0.2.2	search with cache (only 1: induction x; only 1: simpl; only 1: eauto; only 1: intuition; only 1: simpl; only 1: intro; only 1: auto).	0.151239871979	71
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	20	search with cache (only 1: decide equality).	0.815603017807	951
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	31.0.144	search with cache (only 1: inversion_clear 1; only 1: auto; only 1: intuition Nat.order).	32.9075930119	91775
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.4.1.0	search with cache (only 1: intros; only 1: apply or_iff_compat_r; only 1: compute; only 1: intuition).	0.111062049866	9
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.0.0.2.0.2.0.2.9	search with cache (only 1: intros x y; only 1: split; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: intuition; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition; only 1: unfold eq, lt, le in *; only 1: intuition).	23.3477101326	13339
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.0.0.2.43	search with cache (only 1: intros h; only 1: constructor; only 1: destruct h; only 1: auto; only 1: auto).	0.715672969818	2693
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.8.0.0.0.4	search with cache (only 1: intro n; only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: intros (cc, pp); only 1: auto).	2.20609307289	2258
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	10.0.7.3	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: reflexivity).	7.69853687286	10663
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	54.27.11.49.0.43	search with cache (only 1: constructor; only 1: intro l; only 1: intuition; only 1: intro n; only 1: intuition; only 1: eauto with *).	30.6705272198	193674
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.12	search with cache (only 1: split; only 1: auto; only 1: auto).	0.065288066864	109
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.00930905342102	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.0122680664062	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00937700271606	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00824904441833	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00713801383972	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.00890707969666	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00780916213989	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00752401351929	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00795602798462	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00757908821106	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00850582122803	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00836801528931	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00794887542725	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00752377510071	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.1.0.1.19.5.2	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: eauto; only 1: exfalso; only 1: order; only 1: exfalso; only 1: order).	4.5135819912	11970
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	2.2.0.0.1.0.0.1.0.2.1	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	2.57068800926	3075
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	6.0.1.1.1.1.2	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	1.22680306435	1047
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	4.4.1.9.0	search with cache (only 1: intros; only 1: destruct H0; only 1: auto with ordered_type; only 1: right; only 1: order).	11.0196928978	7101
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	3.4.3.16.1	search with cache (only 1: intros; only 1: destruct H0; only 1: auto; only 1: right; only 1: order).	12.0854399204	15420
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.2.4.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.186096906662	149
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	12.5.7.15	search with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: intuition).	2.33369207382	4748
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	2.22.0	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.626477956772	1505
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.00917911529541	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00671601295471	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0130848884583	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0117881298065	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.00746512413025	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0187890529633	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	7.6.1	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: order).	0.529861927032	572
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	2	search with cache (only 1: eauto with ordered_type).	0.013160943985	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0146629810333	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	4.0.4.20.0	search with cache (only 1: unfold eqk, ltk; only 1: intros a Ha; only 1: unfold eqke; only 1: intuition; only 1: order).	11.2540569305	12956
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	2.0.0.5.2	search with cache (only 1: unfold eqk, eqke; only 1: split; only 1: intuition; only 1: intuition; only 1: eauto with ordered_type).	0.216578960419	118
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0245020389557	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.7.15.2.5	search with cache (only 1: split; only 1: unfold eqke, ltk; only 1: intros a b; only 1: order; only 1: eauto with ordered_type).	1.58698296547	3675
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	1.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0306780338287	18
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0162210464478	4
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0166339874268	4
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	0.4.6.0.0.14	search with cache (only 1: induction l; only 1: unfold eqk, ltk; only 1: intuition; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	4.81711888313	4869
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	1.4.2.0.1.23	search with cache (only 1: induction l; only 1: unfold eqk, ltk; only 1: intuition; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	8.41745400429	2985
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.0.2.7.6	search with cache (only 1: intros; only 1: inversion H; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	1.56381392479	959
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.3.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with ordered_type).	0.0221049785614	6
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.2.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.066575050354	35
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.1.1.0	search with cache (only 1: case compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.0255370140076	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.00936603546143	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	0.3.1.13.24	search with cache (only 1: split; only 1: intro l; only 1: iorder; only 1: repeat red; only 1: iorder).	0.385098934174	1283
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.1.3	search with cache (only 1: repeat red; only 1: compute; only 1: iorder).	0.0159261226654	7
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.2	search with cache (only 1: repeat red; only 1: iorder).	0.00961399078369	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	9	search with cache (only 1: iorder).	0.0295479297638	26
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.00947618484497	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	1.1.3.0.0.0	search with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.448139190674	207
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0101590156555	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	4.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0134618282318	6
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	1.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0154540538788	4
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.2	search with cache (only 1: intro H; only 1: order).	0.0113971233368	7
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0146360397339	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0134620666504	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0	search with cache (only 1: order).	0.00842690467834	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.00757193565369	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.69583106041	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.00820207595825	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.00680494308472	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.00680184364319	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.00705313682556	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	search with cache (only 1: order).	0.00749897956848	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2	search with cache (only 1: order).	0.00831294059753	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	3	search with cache (only 1: order).	0.00834989547729	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	1	search with cache (only 1: order).	0.00670695304871	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2	search with cache (only 1: order).	0.00821685791016	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.00654220581055	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.00663590431213	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	1	search with cache (only 1: order).	0.00605201721191	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	5.5.5.4	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	4.07558178902	4237
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.23	search with cache (only 1: unfold lt; only 1: auto with *).	12.9925830364	17347
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00880908966064	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	3.0.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: now apply compare_eq_iff).	0.0229659080505	16
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0102849006653	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	5	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0300271511078	18
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	1.1.2.1.3	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.54044604301	584
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	2.5.3	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.710514783859	287
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	2.3.3	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.16769695282	99
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.1.8	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.528208017349	170
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.2.0.1.1.8	search with cache (only 1: case leb_spec0; only 1: case ltb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: constructor; only 1: case ltb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.982916116714	703
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	1.30.7	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: constructor).	19.7440259457	28312
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.0.1.2.1.0.13.22	search with cache (only 1: case leb_spec0; only 1: case_eq (x ?= y); only 1: now destruct compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	31.8471720219	39728
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	1.0.2	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.30397605896	49
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	5.0.1.1.2.0.2	search with cache (only 1: simple induction l; only 1: intros; only 1: inversion H; only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	5.26497197151	2022
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.2.5.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.471982955933	208
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	11.4.7.7	search with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: intuition).	3.87337994576	2951
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	17.7	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	2.87050700188	935
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	14	search with cache (only 1: solve_proper).	3.43422198296	358
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1.4	search with cache (only 1: intros x x' Hx l l' Hl; only 1: intuition).	0.118648052216	18
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	18.10	search with cache (only 1: intuition; only 1: now rewrite H).	17.9894070625	7370
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	3.2.0	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0530529022217	8
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	7	search with cache (only 1: auto).	0.0285210609436	8
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	6	search with cache (only 1: intuition).	0.0296308994293	7
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1.1.4	search with cache (only 1: destruct 1; only 1: compute in *; only 1: auto).	0.0459060668945	9
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.0287508964539	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: reflexivity).	0.0260491371155	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0275850296021	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	11	search with cache (only 1: trivial).	0.0609500408173	34
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.19	search with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	1.90502214432	955
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.0.0	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: now compute).	0.044116973877	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	3	search with cache (only 1: now intros <-).	0.229806900024	37
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0878579616547	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.26	search with cache (only 1: rewrite InA_cons; only 1: intuition).	2.48232507706	1097
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.4.25.0	search with cache (only 1: firstorder  auto with crelations; only 1: invlist InA; only 1: firstorder; only 1: auto).	4.87212109566	2385
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	1.0.13.2.3	search with cache (only 1: intro n; only 1: destruct n; only 1: intros n d; only 1: destruct d; only 1: auto).	0.736680984497	1201
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	4.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0126240253448	6
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0104749202728	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.00678515434265	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.017993927002	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	3.9.16	search with cache (only 1: intro l'; only 1: intros x; only 1: eauto with *).	3.86767792702	7215
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.2.8.2.0.7.1	search with cache (only 1: unfold eqke; only 1: compute; only 1: intuition; only 1: subst; only 1: eauto; only 1: subst; only 1: intuition).	10.6253299713	8130
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.0.0.8	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.0720279216766	95
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0233089923859	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.7.0.42	search with cache (only 1: intros x y l; only 1: intuition; only 1: rewrite <- H; only 1: intuition).	20.4770228863	9139
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.2.17.0	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: auto).	1.05859804153	1450
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.4.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto using eqke_equiv).	0.466036081314	31
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	1.0.0.6	search with cache (only 1: intro l; only 1: intros x y L E; only 1: rewrite E in L; only 1: auto).	0.0285730361938	28
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	2.0.0.1.0.2.0.0	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.713973999023	1074
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	4.6	search with cache (only 1: apply max_r; only 1: order).	0.0264220237732	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	9.7.2.16	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	8.14277386665	8030
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.00995302200317	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	19	search with cache (only 1: solve_max).	0.697633981705	662
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0169460773468	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	18.10	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition order).	34.0453820229	19275
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	2	search with cache (only 1: solve_max).	0.0121819972992	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	2	search with cache (only 1: solve_max).	0.0116708278656	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	2	search with cache (only 1: solve_max).	0.0117440223694	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	2.1.3.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.0357699394226	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.029018163681	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.106664180756	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0178968906403	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	1.2.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0844819545746	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	5.4	search with cache (only 1: apply min_l; only 1: order || (right; order) || (left; order)).	0.0168309211731	26
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	9.8.3.6	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	4.12583112717	3685
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0111219882965	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	22	search with cache (only 1: solve_min).	1.1305539608	906
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0614290237427	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	1	search with cache (only 1: solve_min).	0.0117580890656	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	search with cache (only 1: solve_min).	0.0118250846863	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.0121579170227	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	1.1.3.0	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.0347929000854	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0261240005493	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.102280139923	38
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0197160243988	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0517230033875	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	1.4	search with cache (only 1: apply max_l; only 1: solve_min).	0.0147681236267	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	10.50	search with cache (only 1: apply max_mono; only 1: eauto with *).	7.97978806496	17686
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	3.47	search with cache (only 1: apply min_mono; only 1: congruence).	3.23788380623	7238
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.0.3.11.11.13	search with cache (only 1: intros n P IH0 IHS; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto; only 1: auto).	6.62268304825	12381
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	1.1.4.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0153110027313	10
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	1.3.0.0.0.8	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.403861999512	582
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.1.3.11.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	1.37305092812	1705
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	1.1.5.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0439028739929	43
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	1.3.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.0446169376373	61
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	2.2.0.0.6	search with cache (only 1: intros Heq; only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.50710606575	344
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	4.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0377879142761	19
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0367200374603	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0119931697845	1
Coq.ZArith.Znat.positive_N_nat	40	3.0	search with cache (only 1: simpl; only 1: f_equal).	0.0152192115784	5
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0315978527069	5
Coq.ZArith.Znat.Z_N_nat	40	1.1.6.9.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: trivial).	0.385391950607	538
Coq.ZArith.Znat.Z_nat_N	40	2.8.1.0.38.34.18	search with cache (only 1: bitwise as m; only 1: destruct n as [| n| n]; only 1: trivial; only 1: f_equal; only 1: simpl Z.to_N; only 1: Nat2N.nat2N; only 1: f_equal).	4.09514713287	13260
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.015368938446	1
Coq.ZArith.Znat.Zabs_nat_N	40
Coq.ZArith.Znat.N2Z.id	40	0.1.4.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.02086186409	9
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	12.4381160736	6278
Coq.ZArith.Znat.N2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.024484872818	1
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0121219158173	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0119340419769	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.0.1.0.0.2.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	0.963575124741	408
Coq.ZArith.Znat.N2Z.inj_le	40	0.1	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0192821025848	3
Coq.ZArith.Znat.N2Z.inj_lt	40	0.5	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0208048820496	15
Coq.ZArith.Znat.N2Z.inj_ge	40
Coq.ZArith.Znat.N2Z.inj_gt	40
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	9	search with cache (only 1: now destruct n, m).	0.0524940490723	27
Coq.ZArith.Znat.N2Z.inj_mul	40	3.1.0	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: now destruct m).	0.0560619831085	17
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.4	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0271599292755	9
Coq.ZArith.Znat.N2Z.inj_pred_max	40	38.0.0.9	search with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: now destruct p).	10.4817559719	15428
Coq.ZArith.Znat.N2Z.inj_pred	40	0.1.7.0	search with cache (only 1: destruct n; only 1: N.order; only 1: simpl; only 1: now destruct p).	0.144196987152	110
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	27.16.3.0.20	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct p).	8.17179203033	15463
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0199131965637	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.1.0.4.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.361070871353	207
Coq.ZArith.Znat.Z2N.id	40	3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0268330574036	7
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.0.5	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	2.05353093147	531
Coq.ZArith.Znat.Z2N.inj_0	40	4.0	search with cache (only 1: simpl; only 1: auto).	0.0164370536804	6
Coq.ZArith.Znat.Z2N.inj_pos	40	0.1	search with cache (only 1: simpl Z.to_N; only 1: now subst).	0.0122051239014	3
Coq.ZArith.Znat.Z2N.inj_neg	40	2	search with cache (only 1: reflexivity).	0.0114378929138	3
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	6.3.2	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.644972085953	146
Coq.ZArith.Znat.Z2N.inj_succ	40	0.2.3.0.142	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl Z.to_N; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || now destruct 2).	24.0757870674	39867
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	1.4.0.86	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p; only 1: easy || now destruct Hm).	4.927724123	7550
Coq.ZArith.Znat.Z2N.inj_compare	40	1.12.9	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	3.59332895279	2276
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1.26.1.5	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: easy || now destruct Hm).	2.37772297859	2991
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0252830982208	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	0.0.1.0.0.0.0.0.0.5.8	search with cache (only 1: destruct a as [| a], n; only 1: trivial; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now destruct a; only 1: apply Z.testbit_Zpos; only 1: simpl; only 1: now destruct a).	3.3200969696	1735
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	7	search with cache (only 1: now destruct n).	0.016695022583	8
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	3.0	search with cache (only 1: intros; only 1: now destruct n).	0.0264179706573	5
Coq.ZArith.Znat.Zabs2N.id_abs	40	2.2.1.11	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: trivial; only 1: trivial).	0.941068887711	424
Coq.ZArith.Znat.Zabs2N.id	40	0.0.0.8	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: auto).	0.0637998580933	38
Coq.ZArith.Znat.Zabs2N.inj_0	40	2	search with cache (only 1: easy).	0.0132172107697	3
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0146970748901	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0137829780579	2
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0221889019012	4
Coq.ZArith.Znat.Zabs2N.inj_succ	40	2.0.0.0.2.1.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct 1 || intros _; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: now destruct 1 || intros _).	1.21541810036	375
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: easy || now destruct Hm; only 1: trivial; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	4.71454000473	1453
Coq.ZArith.Znat.Zabs2N.inj_mul	40	1.0.1.0.3.0.1.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: reflexivity; only 1: trivial; only 1: reflexivity; only 1: now case Pos.compare; only 1: reflexivity; only 1: trivial; only 1: reflexivity; only 1: trivial).	7.468501091	3426
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.4.4.1.2.0.0	search with cache (only 1: unfold Z.pred; only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: unfold Z.lt in *; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.60599303246	843
Coq.ZArith.Znat.Zabs2N.inj_compare	40	9	search with cache (only 1: now destruct n, m).	0.156369924545	48
Coq.ZArith.Znat.Zabs2N.inj_le	40
Coq.ZArith.Znat.Zabs2N.inj_lt	40	6.1	search with cache (only 1: intros; only 1: now destruct n, m).	0.0596640110016	23
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial; only 1: trivial; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	13.0877048969	4759
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0187478065491	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	5	search with cache (only 1: auto).	0.0117771625519	6
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	64	search with cache (only 1: now destruct n).	1.04912304878	2262
Coq.ZArith.Znat.Nat2Z.id	40	0.1.6.1.8	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.660034894943	308
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.16	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	3.12542891502	986
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.14.0.0.0.5.2.15	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: intros; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	20.6596541405	15672
Coq.ZArith.Znat.Z2Nat.inj	40	7.5.2	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.958921194077	206
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.1.0.2.1.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.88015007973	334
Coq.ZArith.Znat.Z2Nat.inj_0	40	6	search with cache (only 1: auto).	0.0138549804688	7
Coq.ZArith.Znat.Z2Nat.inj_pos	40	5	search with cache (only 1: trivial).	0.0219259262085	6
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0196809768677	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	1.0.6.2.1.4.1.1.4.0.2.5	search with cache (only 1: destruct n as [| n| n]; only 1: reflexivity; only 1: now destruct 1 || intros _; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ; only 1: reflexivity; only 1: reflexivity; only 1: now destruct 1).	26.4215209484	24714
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0116360187531	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0163640975952	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.3.23	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.03729319572	3217
Coq.ZArith.Znat.Zabs2Nat.id	40	0.1.0.26	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.558090925217	463
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0133249759674	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.0105998516083	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0116958618164	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	0.2.19.2.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: apply Pos2Nat.inj_succ; only 1: now destruct 1).	21.0526759624	15242
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.5.0	search with cache (only 1: intros; only 1: unfold Z.le, N.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0316407680511	8
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	3.1.0	search with cache (only 1: unfold Z.lt; only 1: intros; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.035315990448	7
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	1.1.1.4	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.271018028259	33
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).	14.1679809093	7453
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.109235048294	11
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	3.1.1.1.6.0.7	search with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	30.2804410458	8214
Coq.ZArith.Wf_Z.Z_lt_rec	40
Coq.ZArith.Wf_Z.Z_lt_induction	40	2.3.10.3	search with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: auto; only 1: now apply Zlt_0_rec).	3.54388308525	1430
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	0.0.0.1.238	search with cache (only 1: induction p as [| p IHp] using Pos.peano_ind; only 1: apply Pos2Nat.inj_iter; only 1: rewrite <- Pos.add_1_r; only 1: unfold Z.pow_pos; only 1: now rewrite Pos.add_comm, Pos.iter_add).	8.89055800438	36878
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40	8.7.0.9.6	search with cache (only 1: intros z n; only 1: intros m; only 1: intros; only 1: Z.swap_greater; only 1: now case Z.compare_spec).	4.15703701973	7960
Coq.ZArith.Zcompare.Zcompare_eq_case	40	4.4.3.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order).	2.01671409607	1515
Coq.ZArith.Zcompare.Zle_compare	40	2.2.2.10.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: auto; only 1: Z.Private_Tac.order).	1.19715189934	1165
Coq.ZArith.Zcompare.Zlt_compare	40	7.0.7.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: trivial; only 1: Z.Private_Tac.order).	1.94424700737	1218
Coq.ZArith.Zcompare.Zge_compare	40	6.8.2.0.1	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: auto; only 1: auto).	2.49235010147	3410
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0262768268585	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40
Coq.ZArith.Zquot.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.0230159759521	3
Coq.ZArith.Zquot.Zquot_0_l	40	2	search with cache (only 1: now destruct a).	0.119122028351	26
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	30.9037959576	11683
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.10	search with cache (only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	2.12942409515	545
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.3.1.1	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	1.52263212204	20
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.2.1	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0831789970398	8
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.4	search with cache (only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.539272069931	61
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.178181886673	30
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	3.8.4.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: now rewrite <- Z.mod_divide; only 1: auto).	5.74383091927	2181
Coq.ZArith.Zdigits.binary_value	40	0.35	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	3.24005389214	5994
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.8.1.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.352906942368	413
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40	4.38	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	38.2901310921	67105
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	2.1	search with cache (only 1: simpl; only 1: trivial).	0.017805814743	5
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	4.1	search with cache (only 1: intros; only 1: trivial).	0.30357503891	74
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1	search with cache (only 1: auto).	0.00948190689087	2
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0.0.0	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).	0.0233080387115	4
Coq.ZArith.Zdigits.Zeven_bit_value	40	0.0.0.2.4.2	search with cache (only 1: intros n; only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.990840911865	422
Coq.ZArith.Zdigits.Zodd_bit_value	40	4.0.3.0.0	search with cache (only 1: destruct z; only 1: easy; only 1: now destruct p; only 1: unfold bit_value; only 1: now try destruct p).	0.476537942886	148
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.10	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.23212480545	129
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	2.0.0.10	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.506018161774	114
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	3.6.0.24	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	1.54701399803	934
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0334539413452	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.256814956665	64
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp).	13.1211149693	7186
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2.8	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0755190849304	36
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0296950340271	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.02920794487	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0399429798126	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.2.0.0.0.0.3.1	search with cache (only 1: unfold succ; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: rewrite !opp_add_distr; only 1: simpl; only 1: trivial).	1.15191102028	303
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.04012799263	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0348839759827	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0356068611145	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.2.2.0.1	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.583117008209	115
Coq.ZArith.BinInt.Z.compare_le_iff	40
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	1.18457102776	166
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	3.5	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now destruct n).	0.539998054504	14
Coq.ZArith.BinInt.Z.abs_neq	40	1.14.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now nzsimpl; only 1: trivial).	3.93749094009	1496
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.9	search with cache (only 1: destruct n; only 1: trivial using pos_sub_opp; only 1: congruence; only 1: congruence).	0.919873952866	192
Coq.ZArith.BinInt.Z.sgn_pos	40	8.4.1	search with cache (only 1: zero_pos_neg ltac:(n); only 1: now f_equiv; only 1: now destruct n).	3.51764702797	796
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0428781509399	1
Coq.ZArith.BinInt.Z.pow_0_r	40	3	search with cache (only 1: reflexivity).	0.107055902481	26
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.3.5.0.10	search with cache (only 1: rewrite <- (mul_0_l m)  at 1; only 1: destruct m as [| m| m]; only 1: now nzsimpl; only 1: now nzsimpl; only 1: now destruct 1 || intros _).	3.83220100403	882
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: reflexivity).	0.0290770530701	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	22	search with cache (only 1: now destruct n).	3.23167586327	1603
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	1.0.2.3.10	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct 1; only 1: trivial).	1.10851788521	328
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	1.1	search with cache (only 1: simpl; only 1: easy).	0.455206155777	66
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.2.0.1.0.5.0	search with cache (only 1: simpl; only 1: destruct n as [| p| p]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).	3.10829901695	823
Coq.ZArith.BinInt.Z.pred_double_spec	40	5	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.375707864761	14
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.314496040344	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: now split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	5.21079301834	1481
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.0.0.0.2.0	search with cache (only 1: rewrite <- testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0753591060638	9
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	3	search with cache (only 1: reflexivity).	0.0263979434967	4
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.0.0.0.1.0.0.18	search with cache (only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: easy; only 1: simpl; only 1: congruence; only 1: unfold testbit; only 1: simpl; only 1: congruence).	1.31608486176	583
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0441660881042	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0325989723206	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0520219802856	3
Coq.ZArith.BinInt.Z.lt_gt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0539150238037	3
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0606110095978	3
Coq.ZArith.BinInt.Z.le_ge	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0583910942078	3
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.6.3.0	search with cache (only 1: unfold ltb, lt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	10.2422540188	1951
Coq.ZArith.BinInt.Z.geb_le	40	3.5.3.0	search with cache (only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: unfold leb, le; only 1: now destruct compare).	22.1900360584	3900
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	1	search with cache (only 1: apply add_cancel_l).	0.0484728813171	2
Coq.ZArith.BinInt.Z.mul_reg_l	40	6	search with cache (only 1: apply mul_cancel_l).	0.0855610370636	11
Coq.ZArith.BinInt.Z.mul_reg_r	40	1.4	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0717058181763	7
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	1.9	search with cache (only 1: nzsimpl'; only 1: now nzsimpl').	0.698955059052	34
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.7.0.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: auto; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	3.39906311035	1011
Coq.ZArith.BinInt.Pos2Z.id	40	1	search with cache (only 1: now subst).	0.0279669761658	2
Coq.ZArith.BinInt.Pos2Z.inj	40	12	search with cache (only 1: congruence).	0.246610879898	68
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	1.6.0.4	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.774994134903	154
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.033863067627	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.0	search with cache (only 1: red; only 1: easy').	0.0532450675964	2
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: auto).	0.0395178794861	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	4.0	search with cache (only 1: simpl; only 1: trivial).	0.0442562103271	6
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	2.0	search with cache (only 1: simpl; only 1: auto).	0.0402569770813	4
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	7.0	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0547049045563	9
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.051922082901	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.1.1.1.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy').	0.171035051346	20
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	2.0	search with cache (only 1: simpl; only 1: f_equal).	0.0434799194336	4
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0331139564514	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0342860221863	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: trivial).	0.0287981033325	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	5.2.0	search with cache (only 1: simpl; only 1: revert q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.137938976288	13
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	1.2.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: unfold Z.leb, Z.le; only 1: now split).	0.144625902176	18
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	9	search with cache (only 1: reflexivity).	0.0309948921204	10
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.0.2	search with cache (only 1: simpl; only 1: revert q; only 1: congruence).	1.02604103088	176
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	search with cache (only 1: auto).	0.0350840091705	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	4	search with cache (only 1: auto).	0.0341379642487	5
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	7.7.2.0.17.41.1	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl Z.to_N; only 1: trivial; only 1: now destruct Hn).	26.0446197987	27025
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	4	search with cache (only 1: congruence).	0.330600976944	48
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	5.0.2	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.123635053635	26
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.0336542129517	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	4.1.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.065505027771	9
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: easy).	0.0308630466461	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	search with cache (only 1: easy).	0.044459104538	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0319499969482	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.0	search with cache (only 1: red; only 1: easy').	0.053031206131	2
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.0464670658112	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0332188606262	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.2	search with cache (only 1: unfold Pos.gt, Pos.le, Pos.compare; only 1: trivial).	0.0432820320129	8
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	3.0	search with cache (only 1: intros; only 1: trivial).	0.0342559814453	5
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0429110527039	2
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0294899940491	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0365200042725	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0361480712891	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0503661632538	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0487060546875	2
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	2	search with cache (only 1: trivial).	0.039538860321	3
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	7.0	search with cache (only 1: simpl; only 1: trivial).	0.249027967453	41
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0355310440063	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0361618995667	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	search with cache (only 1: apply Z.testbit_Zpos).	0.036073923111	2
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	1	search with cache (only 1: trivial).	0.0308198928833	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.0.0.2.0	search with cache (only 1: destruct x; only 1: easy; only 1: now destruct 1; only 1: simpl; only 1: easy).	0.110376119614	17
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	2.0	search with cache (only 1: intros; only 1: now destruct x).	0.31938290596	33
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.0.4.0.2.1	search with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: easy).	1.19740915298	216
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.1.0.0.3.0.0.13.16	search with cache (only 1: intuition; only 1: destruct H; only 1: destruct x; only 1: trivial; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: trivial).	5.50032997131	2337
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.104578971863	7
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.6	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.197599172592	22
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	1.1.22.2	search with cache (only 1: destruct x; only 1: Z.order; only 1: easy || now destruct y; only 1: easy || now destruct y).	5.17182803154	3954
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.110209941864	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.0.1	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: easy).	0.0643260478973	6
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.0875639915466	6
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	5.0	search with cache (only 1: intros; only 1: now f_equal).	0.0439870357513	7
Coq.ZArith.BinInt.ZL0	40	8	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.158544063568	9
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	1.10	search with cache (only 1: Z.nzsimpl'; only 1: f_equal).	1.61533284187	153
Coq.ZArith.BinInt.Z_eq_mult	40	6.56.18	search with cache (only 1: intro H1; only 1: rewrite H1; only 1: reflexivity).	10.3888850212	12909
Coq.ZArith.Zcomplements.floor_gt0	40	1.0.5	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: reflexivity).	0.0181820392609	9
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	22	search with cache (only 1: now destruct n).	0.981258869171	814
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: auto with zarith).	0.00890183448792	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40	51.11.9.43	search with cache (only 1: destruct n as [| n| n]; only 1: easy; only 1: now destruct n; only 1: now destruct n).	9.33710193634	43910
Coq.ZArith.Zeven.Zeven_odd_bool	40	25	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.350783824921	654
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: tauto).	4.41972494125	3043
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	6.41785907745	5038
Coq.ZArith.Zeven.Zeven_not_Zodd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	3.76315712929	3175
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0898129940033	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0234351158142	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2	search with cache (only 1: boolify_even_odd; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: now try Z.order'; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	16.4964280128	7258
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.1.0.0.0.0.1.7.0.2	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	17.053786993	5429
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.023029088974	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0262010097504	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.0.1.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.358164072037	28
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	4.1	search with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.0892148017883	14
Coq.ZArith.Zeven.Zodd_ex	40
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.1.1.4.8.3	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	1.48670578003	668
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.66	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	2.48687005043	3136
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0607762336731	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0647389888763	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.00979804992676	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.00847792625427	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00801086425781	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	1.1.2.14.1.0	search with cache (only 1: intros a b Hb; only 1: exists (a / b); only 1: rewrite Z.mul_comm; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	6.10777902603	3206
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.14.2.0.31	search with cache (only 1: intros b; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto).	3.73675894737	6047
Coq.ZArith.Znumtheory.Zis_gcd_1	40
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	15.3	search with cache (only 1: intro n; only 1: now Z.nzsimpl').	1.66574597359	805
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	1.1.1.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0376191139221	8
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0639328956604	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0229001045227	4
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	7.9	search with cache (only 1: intros a n Hn; only 1: now apply Zis_gcd_sym).	0.394851207733	760
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	6.0.2.3.13	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: auto with zarith).	4.80595588684	2135
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	10	search with cache (only 1: now destruct 1 || intros _).	0.0643799304962	40
Coq.ZArith.Znumtheory.not_prime_1	40	44.4	search with cache (only 1: destruct 1 as [H H0]; only 1: discriminate).	1.70369791985	4139
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	2.2.1.22.3	search with cache (only 1: intros a b; only 1: intros; only 1: apply Z.gcd_greatest; only 1: auto; only 1: auto).	28.3637700081	18081
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	1.0.1.0.0.0.1.2.1.0.1.0	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	20.8234200478	3507
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.2.0.2.0.2.0	search with cache (only 1: intros Hb; only 1: unfold Z.div, Z.modulo; only 1: Z.swap_greater; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: destruct Z.div_eucl; only 1: auto).	2.57910108566	325
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	10	search with cache (only 1: trivial).	0.118002176285	40
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.129565000534	6
Coq.ZArith.Zdiv.Zdiv_0_l	40	5.0	search with cache (only 1: intros; only 1: auto).	0.104685783386	18
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.109194040298	6
Coq.ZArith.Zdiv.Zmod_1_r	40	33.0	search with cache (only 1: intros; only 1: now Z.nzsimpl).	10.7182538509	8926
Coq.ZArith.Zdiv.Zdiv_1_r	40	3.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.185703992844	13
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0812728404999	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.2.0	search with cache (only 1: intros a b **; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.114720106125	6
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	0.1.4.1.5.11.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.add_mod; only 1: auto).	13.0051600933	7819
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.5.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0926678180695	16
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.401621103287	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	0.0.4.0.1.15.1	search with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.mul_mod; only 1: auto).	23.1917829514	9267
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0589981079102	4
Coq.ZArith.Zdiv.eqm_refl	40	8.1	search with cache (only 1: intro n; only 1: now Z.nzsimpl').	0.0766959190369	29
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.0394010543823	2
Coq.ZArith.Zdiv.eqm_trans	40	2.12.0	search with cache (only 1: unfold eqm; only 1: intros a; only 1: Z.order).	2.82356286049	1302
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40	0.0.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0542261600494	3
Coq.ZArith.Zdiv.Z_mod_same	40	0.3.28.2	search with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: easy; only 1: now intros ->).	5.95467782021	3392
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0	search with cache (only 1: intros a b c **; only 1: apply Z.mod_add; only 1: now intros ->).	0.0654430389404	3
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.6.6.2.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: now intros ->; only 1: now intros ->).	5.10996294022	1589
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.6.10.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	5.57617497444	1598
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	2.1.5.3.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: now intros ->; only 1: now destruct b).	2.836810112	857
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0298261642456	13
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.00774812698364	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.0.0.4.0	search with cache (only 1: intros P n **; only 1: Z.swap_greater; only 1: Z.destruct_max n; only 1: auto; only 1: auto).	0.0809309482574	15
Coq.ZArith.Zabs.Zabs_intro	40	6.0	search with cache (only 1: intros; only 1: now destruct n).	0.0220720767975	8
Coq.ZArith.Zabs.Zabs_dec	40	11.16.2.7.9.0	search with cache (only 1: intros n; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto; only 1: auto).	6.35055994987	10474
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40	5.65.5.65.5	search with cache (only 1: split; only 1: fix odd_spec 1; only 1: easy; only 1: fix odd_spec 1; only 1: easy).	32.605148077	123849
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	search with cache (only 1: now Z.nzsimpl).	0.0436611175537	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	5	search with cache (only 1: auto).	0.00882196426392	6
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: auto).	0.00729513168335	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.00614213943481	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00633192062378	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.00828099250793	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0	search with cache (only 1: trivial).	0.00673508644104	1
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00686192512512	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00777983665466	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.00702404975891	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.00832486152649	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00709199905396	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00771498680115	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	1	search with cache (only 1: auto).	0.00813579559326	2
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	1.3.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0266969203949	10
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	1.4.6.2.1	search with cache (only 1: induction n; only 1: trivial; only 1: intros Hn; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1).	1.17888903618	603
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: now subst).	0.007887840271	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: trivial).	0.00800108909607	1
Coq.ZArith.Zpower.shift_equiv	40	1.5.0.4.1.6.0.9	search with cache (only 1: intros; only 1: Z.bitwise; only 1: destruct n as [| n| n]; only 1: easy; only 1: simpl Z.shiftl; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: trivial; only 1: easy).	4.72342085838	4228
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	9.5.5.1.88	search with cache (only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: intros; only 1: now apply Pos.iter_swap_gen).	8.04756879807	13027
Coq.ZArith.Zpower.two_p_equiv	40	3.9.0.5.1.0.0.4.12.36	search with cache (only 1: Morphisms.f_equiv; only 1: intros n Hn; only 1: intros H; only 1: induction n; only 1: destruct H; only 1: now Z.nzsimpl; only 1: destruct H; only 1: now apply Pos.iter_swap_gen; only 1: destruct H; only 1: split).	9.58498811722	7725
Coq.ZArith.Zpower.two_power_nat_S	40	5.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: reflexivity).	0.0890891551971	9
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40	2.1.0.10.20	search with cache (only 1: Z.nzsimpl'; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.34924316406	1031
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00897002220154	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.1.1.0.2.1	search with cache (only 1: destruct x; only 1: unfold Z.gt; only 1: trivial; only 1: red; only 1: trivial; only 1: easy).	0.243331193924	167
Coq.ZArith.Zpower.two_p_S	40	15.13.0	search with cache (only 1: rewrite !two_p_equiv; only 1: symmetry; only 1: now Z.nzsimpl).	2.87957191467	1316
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0147769451141	1
Coq.ZArith.auxiliary.Zle_left	40	74	search with cache (only 1: apply Z.le_0_sub).	3.7357070446	3575
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0101850032806	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.00981712341309	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.0.1.0.0.1.10	search with cache (only 1: unfold Z.le, Z.ge; only 1: rewrite Z.compare_sub; only 1: unfold Z.sub; only 1: destruct (n + - m) as [| p| p]; only 1: easy'; only 1: easy'; only 1: easy').	0.896783828735	334
Coq.ZArith.auxiliary.Zgt_left	40	0.2.1.0.6	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	1.64946508408	712
Coq.ZArith.auxiliary.Zgt_left_gt	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.021947145462	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0219540596008	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.10	search with cache (only 1: unfold Z.le, Z.max; only 1: now case Z.compare_spec).	0.198132991791	33
Coq.ZArith.Zmax.Zpos_max_1	40	4.3.3	search with cache (only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.227219104767	76
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	15	search with cache (only 1: Z.solve_min).	0.340890169144	175
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	4.3.0	search with cache (only 1: unfold Z.min, Pos.min; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0368659496307	10
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.0.3.131	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.20929002762	9896
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	2	search with cache (only 1: Z.order).	0.0193099975586	3
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: intuition Z.order).	0.0219230651855	1
Coq.ZArith.Zorder.Zle_not_gt	40	2.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0345151424408	4
Coq.ZArith.Zorder.Zgt_not_le	40	0.1	search with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0355670452118	3
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0362968444824	2
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0332279205322	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.016489982605	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0388481616974	2
Coq.ZArith.Zorder.not_Zne	40	6.0.4.15	search with cache (only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: auto; only 1: tauto).	1.46050405502	537
Coq.ZArith.Zorder.Zgt_asym	40	19.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	3.65250515938	1139
Coq.ZArith.Zorder.Zgt_irrefl	40	14.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.258144140244	184
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.113176107407	2
Coq.ZArith.Zorder.Zle_gt_trans	40	11.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.203769922256	90
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0406339168549	2
Coq.ZArith.Zorder.Zge_trans	40	0.1	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.053277015686	3
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.3212890625	39
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0390028953552	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	2	search with cache (only 1: apply Z.succ_le_mono).	0.0313150882721	3
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0172078609467	1
Coq.ZArith.Zorder.Zgt_succ	40	5.2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.034332036972	11
Coq.ZArith.Zorder.Znot_le_succ	40	3.28	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.882280826569	1102
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.0164108276367	2
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.278132915497	23
Coq.ZArith.Zorder.Zgt_succ_le	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0322299003601	3
Coq.ZArith.Zorder.Zlt_succ_le	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.0176658630371	2
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.284593105316	19
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.017560005188	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.14	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.181637048721	91
Coq.ZArith.Zorder.Zle_neg_pos	40	1.0.1	search with cache (only 1: red; only 1: simpl in *; only 1: now intuition).	0.0578269958496	14
Coq.ZArith.Zorder.Zgt_pos_0	40	1.12	search with cache (only 1: intros; only 1: easy).	0.0570340156555	76
Coq.ZArith.Zorder.Zle_0_pos	40	0	search with cache (only 1: easy).	0.0275437831879	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0167510509491	1
Coq.ZArith.Zorder.Zle_0_nat	40	57.6	search with cache (only 1: intros; only 1: now destruct n).	6.07862710953	11479
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	0.22.24.0.5	search with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: auto).	15.048511982	16904
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	2	search with cache (only 1: apply Z.add_lt_mono_l).	0.0211191177368	3
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	6	search with cache (only 1: apply Z.add_lt_mono_r).	0.0398020744324	7
Coq.ZArith.Zorder.Zplus_le_reg_l	40	7	search with cache (only 1: apply Z.add_le_mono_l).	0.0397849082947	8
Coq.ZArith.Zorder.Zplus_le_reg_r	40	5	search with cache (only 1: apply Z.add_le_mono_r).	0.0386049747467	6
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	search with cache (only 1: apply Z.add_lt_mono_l).	0.0369420051575	3
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	6	search with cache (only 1: apply Z.add_lt_mono_r).	0.0376489162445	7
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0418770313263	4
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	6.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0430929660797	8
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	16.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	15.0480821133	4690
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	16.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	4.82844614983	2307
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	3	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0211808681488	4
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	3	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0201301574707	4
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0555849075317	5
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	2.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0685610771179	5
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	5.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0706748962402	8
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	2.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0611901283264	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	3.0.3	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.109683990479	34
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	17	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.506224870682	200
Coq.ZArith.Zorder.Zmult_le_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0371561050415	5
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	3	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0210871696472	4
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0577139854431	5
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	3.0.3	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.146042108536	34
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.0.28.0	search with cache (only 1: Z.swap_greater; only 1: revert n m; only 1: intros a b Ha Hb; only 1: Z.order_pos).	2.40724802017	1802
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	18.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.959098100662	480
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	27.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	3.28888916969	2382
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	5.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.054477930069	7
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	1	search with cache (only 1: apply Z.le_0_sub).	0.0198721885681	2
Coq.ZArith.Zbool.Zle_cases	40	1.0.1.0.5	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order; only 1: now Z.swap_greater).	0.545584917068	112
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40	0.0.2.0.0.3.1.0.0.0.1.3	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order; only 1: now Z.swap_greater; only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	2.14652514458	1458
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.0.6.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.19838309288	66
Coq.ZArith.Zbool.Zle_imp_le_bool	40	2	search with cache (only 1: apply Z.leb_le).	0.0443940162659	15
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.3	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.Private_Tac.order).	0.0914249420166	20
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	0	search with cache (only 1: easy || now destruct y).	0.0143239498138	1
Coq.ZArith.Zbool.Zone_min_pos	40	5.13.0.3.4	search with cache (only 1: intros H; only 1: apply Z.leb_gt in H; only 1: unfold Z.leb, Z.le; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	3.83159899712	3140
Coq.ZArith.Zbool.Zle_is_le_bool	40	2.4	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0935790538788	30
Coq.ZArith.Zbool.Zge_is_le_bool	40	1.5	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.242216110229	65
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	22.0	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: now case Z.compare_spec).	11.4909260273	6162
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	1.3.5.2	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	3.07568407059	1056
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0319471359253	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.1.1.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: easy'; only 1: easy').	0.0635299682617	18
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.1.2.0.0.0.3	search with cache (only 1: destruct r; only 1: left; only 1: left; only 1: auto; only 1: now intuition; only 1: right; only 1: auto).	1.3899128437	609
Coq.ZArith.ZArith_dec.Zcompare_rect	40	1.1.1.0	search with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).	0.040463924408	7
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0398309230804	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.318525791168	90
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.828186988831	133
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.2.6.0.0.3	search with cache (only 1: elim Z_le_dec; only 1: right; only 1: auto; only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	23.4079620838	8531
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	4.0.1.5	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: auto; only 1: now left).	2.07087421417	832
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	2.0.1.7.0.10.0	search with cache (only 1: intros x y H; only 1: destruct x; only 1: right; only 1: now Z.nzsimpl; only 1: right; only 1: easy || now destruct y; only 1: now left).	11.1489038467	5347
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.8.0	search with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.340750932693	126
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	1	search with cache (only 1: auto).	0.0174038410187	2
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	2.4.0.6.0	search with cache (only 1: destruct b as [| b| b]; only 1: easy; only 1: intros Hb; only 1: now elim Hb; only 1: trivial).	2.15155410767	1084
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl').	0.0355780124664	1
Coq.omega.OmegaLemmas.Zred_factor1	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0379540920258	12
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	1	search with cache (only 1: now Z.nzsimpl).	0.039901971817	2
Coq.omega.OmegaLemmas.Zred_factor6	40	1	search with cache (only 1: now Z.nzsimpl).	0.667101144791	61
Coq.omega.OmegaLemmas.new_var	40	28	search with cache (only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).	0.0657229423523	393
Coq.omega.OmegaLemmas.OMEGA1	40	2	search with cache (only 1: Z.order).	0.0131099224091	3
Coq.omega.OmegaLemmas.OMEGA2	40	0.0.2.2.18	search with cache (only 1: destruct x; only 1: Z.nzsimpl; only 1: trivial; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	3.00888299942	372
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40
Coq.omega.OmegaLemmas.OMEGA6	40	18.0.7.20.19.15	search with cache (only 1: intros a b c; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: simpl in *; only 1: easy').	26.8506760597	15535
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0269908905029	19
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0808579921722	13
Coq.omega.OmegaLemmas.OMEGA15	40	3.1.2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0415508747101	24
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	0.1	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.084578037262	3
Coq.omega.OmegaLemmas.OMEGA18	40	13.4.4	search with cache (only 1: intro; only 1: intro; only 1: now intros ->).	1.82753300667	1686
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.1.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0501680374146	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.Program.Wf.Fix_F_eq	40	0.4.3	search with cache (only 1: intros; only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0178508758545	10
Coq.Program.Wf.Fix_F_inv	40	0.1.22.9.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intro p; only 1: destruct p; only 1: apply F_ext; only 1: auto).	11.5901288986	21827
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0218720436096	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.4	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0164840221405	6
Coq.Program.Wf.Fix_F_sub_rect	40	0.9.8.1	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.423268079758	689
Coq.Program.Wf.eq_Fix_F_sub	40	0.4.5	search with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.223731994629	96
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	2.1.4.6.7.30	search with cache (only 1: intros r s; only 1: intros H x0; only 1: intro n; only 1: induction n; only 1: subst; only 1: reflexivity).	5.342441082	27642
Coq.Program.Equality.JMeq_eq_refl	40	6	search with cache (only 1: apply UIP).	0.00836896896362	7
Coq.Program.Equality.UIP_refl_refl	40	7	search with cache (only 1: apply UIP).	0.0275390148163	27
Coq.Program.Equality.inj_pairT2_refl	40	31	search with cache (only 1: apply UIP_refl).	0.382395982742	1064
Coq.Program.Equality.solution_left	40	0.8.32	search with cache (only 1: intros Hfst Hsnd; only 1: destruct 1; only 1: auto).	0.31375002861	1647
Coq.Program.Equality.solution_right	40	2.5.0	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0144958496094	18
Coq.Program.Equality.deletion	40	2.1	search with cache (only 1: intros; only 1: assumption).	0.00810217857361	5
Coq.Program.Equality.simplification_heq	40	3.7.32.10	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: reflexivity).	0.694598913193	4041
Coq.Program.Equality.simplification_existT2	40	0.0.45.7.29	search with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: apply eq_dep_eq; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	5.61697077751	29840
Coq.Program.Equality.simplification_existT1	40	0.4.5.38.13.37	search with cache (only 1: intro Streicher_K; only 1: intros; only 1: apply Streicher_K; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT; only 1: assumption).	11.9383080006	67745
Coq.Program.Equality.simplification_K	40	16.5.9	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.568600177765	2156
Coq.Program.Combinators.compose_id_left	40	1.1.0	search with cache (only 1: intro n; only 1: intros; only 1: trivial).	0.013277053833	5
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0102989673615	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00955104827881	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00910878181458	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00975680351257	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0563027858734	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.3.1.4.3.0	search with cache (only 1: induction stack as [| [| ]]; only 1: constructor; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	1.47524023056	1364
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	1.2.6.3	search with cache (only 1: intro n; only 1: induction n; only 1: discriminate || auto; only 1: auto).	0.0863859653473	154
Coq.Sorting.Permutation.Permutation_refl'	40	2.0.1.1.4.0.4.12.6	search with cache (only 1: intros l HF; only 1: revert l; only 1: intros a b; only 1: remember [] as m in HF; only 1: subst; only 1: induction HF; only 1: discriminate || auto; only 1: constructor; only 1: firstorder).	30.1065359116	49867
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	3.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0107629299164	5
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	0.4.4	search with cache (only 1: intros x y H y0 y1 e; only 1: subst; only 1: auto).	0.0751731395721	78
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.4.0.2.13	search with cache (only 1: induction l; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).	9.33318185806	2439
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_cons_app	40	1.6.33.0	search with cache (only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	26.0158939362	29810
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	2.1	search with cache (only 1: intro l'; only 1: auto).	0.0142991542816	5
Coq.Sorting.Permutation.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_rev	40	0.2.6.0.8	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	1.30237102509	664
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	1.0.0.0.0.6.2.3	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.730461835861	800
Coq.Sorting.Permutation.Permutation_Forall	40	0.16.3.4.15	search with cache (only 1: intro Dec; only 1: intros; only 1: rewrite !Forall_forall; only 1: intros a Hin; only 1: eauto using Permutation_in).	13.0505850315	18821
Coq.Sorting.Permutation.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.2.0.6.5	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	13.2768280506	270
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	1.0.0.0.0.2.0.1	search with cache (only 1: repeat red; only 1: induction 1; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	20.277053833	188
Coq.Sorting.Permutation.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_image	40
Coq.Sorting.Permutation.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp_equiv	40	3.3.5.10.9.5.2.120	search with cache (only 1: constructor; only 1: now constructor; only 1: apply _; only 1: intro n; only 1: intros; only 1: constructor 3 with y; only 1: auto; only 1: auto).	17.1709370613	44380
Coq.Sorting.Permutation.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_ind_transp	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	2.7.0	search with cache (only 1: intros; only 1: red; only 1: auto with datatypes).	0.0551018714905	68
Coq.Sorting.PermutSetoid.permut_sym	40	2.0.0	search with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).	0.0174398422241	5
Coq.Sorting.PermutSetoid.permut_trans	40	0.10.0.0.2	search with cache (only 1: intros; only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).	3.11124181747	2535
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	2.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0253598690033	6
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	4.0.4.0.1	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.683864831924	303
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40	0.0.0.3.2.4.0	search with cache (only 1: intros; only 1: unfold permutation, meq; only 1: intro a; only 1: generalize (H a); only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	1.75809597969	1061
Coq.Sorting.PermutSetoid.if_eqA_then	40	28.0.31.5	search with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: auto; only 1: congruence).	32.2461590767	51831
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.0.1.0.1.1.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	0.880300045013	370
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.0.0.0.0.0.2.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: destruct (eqA_dec a _) as [Ha| Ha]; only 1: lia; only 1: lia).	0.998138904572	235
Coq.Sorting.PermutSetoid.if_eqA_else	40	1.37.18.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a _) as [Ha| Ha]; only 1: congruence; only 1: auto).	23.6874520779	34587
Coq.Sorting.PermutSetoid.if_eqA_refl	40	42.0.1.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: intuition).	17.9269058704	29123
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.1.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: intros a'; only 1: auto with arith; only 1: auto with arith).	0.0432121753693	7
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.2.0.1	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.0398650169373	9
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	58	search with cache (only 1: abstract now inversion 1).	21.1012079716	39223
Coq.Sorting.Sorted.Sorted_inv	40	0.0.5.16.12	search with cache (only 1: intros p H; only 1: intro; only 1: inversion H0; only 1: subst; only 1: auto).	1.66927099228	4915
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.23	search with cache (only 1: inversion 1; only 1: firstorder).	1.40746212006	3230
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0157840251923	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	2.12	search with cache (only 1: red; only 1: auto).	0.148811101913	94
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0941209793091	2
Coq.Sorting.Heap.invert_heap	40	0.40.2	search with cache (only 1: intros l1 l2 e; only 1: inversion 1; only 1: auto with datatypes).	2.33420419693	4203
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40
Coq.Sorting.Heap.low_trans	40	11.0.2.4	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: eauto with *).	7.00284194946	4384
Coq.Sorting.Heap.Equivalence_instance_0	40	0.2.1.3.3.8.1.0.4.31	search with cache (only 1: split; only 1: intros H3 H4; only 1: auto with datatypes; only 1: auto with datatypes; only 1: unfold meq; only 1: intro a; only 1: symmetry; only 1: specialize H0 with a0; only 1: specialize H with a0; only 1: Lia.lia).	13.2817099094	14352
Coq.Sorting.Heap.Proper_instance_0	40	0.0.1.9.13	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: red; only 1: intros; only 1: simpl; only 1: auto with datatypes).	1.04813194275	721
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	1.0.10	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.236159801483	164
Coq.Sorting.Heap.list_to_heap	40	10.1	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.207107067108	125
Coq.Sorting.Heap.heap_to_list	40	2.0.14	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.478212833405	498
Coq.Sorting.Heap.treesort	40	10.1	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.187288045883	125
Coq.Sorting.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation_nil_cons	40	1.1.0.30	search with cache (only 1: intros H; only 1: intros l HC; only 1: inversion HC as [l1 l2 Heq]; only 1: now apply app_eq_nil in Heq; destruct Heq; subst).	2.73656797409	5115
Coq.Sorting.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation_refl	40
Coq.Sorting.CPermutation.CPermutation_refl'	40	1.4.3.14.2	search with cache (only 1: repeat red; only 1: intros Hnin; only 1: intros l HC; only 1: subst; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	2.99427318573	5942
Coq.Sorting.CPermutation.CPermutation_sym	40	18.9	search with cache (only 1: intros ? ? [? ?]; only 1: now constructor).	10.6892220974	7711
Coq.Sorting.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_app	40	4.1	search with cache (only 1: intros l1 l2 a HC; only 1: eauto using Add_head, Add_app).	0.0333800315857	16
Coq.Sorting.CPermutation.CPermutation_app_comm	40	0.1	search with cache (only 1: intros; only 1: now transitivity (l1 ++ l2)).	0.0213379859924	3
Coq.Sorting.CPermutation.CPermutation_app_rot	40	12.2	search with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).	0.326459884644	209
Coq.Sorting.CPermutation.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40
Coq.btauto.Algebra.Decidable_sound	40	1.2.2.1	search with cache (only 1: intro n; only 1: intuition; only 1: apply -> Decidable_spec; only 1: intuition).	0.0301787853241	19
Coq.btauto.Algebra.Decidable_complete	40	0.2.3.2	search with cache (only 1: intro n; only 1: intuition; only 1: apply <- Decidable_spec; only 1: intuition).	0.195113897324	61
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.1	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: intuition; only 1: intuition).	0.0301239490509	6
Coq.btauto.Algebra.Decidable_complete_alt	40	0.2.0.2.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: destruct wit; only 1: simpl in *; only 1: intuition; only 1: simpl in *; only 1: intuition).	0.0516958236694	10
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	1.1.21	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.864351987839	852
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	7	search with cache (only 1: auto).	0.0109260082245	8
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	3.0.0.1.3.7.9.1	search with cache (only 1: intros A n def; only 1: intros; only 1: induction n using Pos.peano_rect; only 1: auto; only 1: rewrite list_nth_succ; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: apply IHn).	39.8418591022	24443
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.Init.Wf.Acc_inv	40	2.10	search with cache (only 1: destruct 1; only 1: auto).	0.0323579311371	83
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0148921012878	6
Coq.Init.Wf.well_founded_ind	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0148408412933	6
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.0.0.2.6.1.4	search with cache (only 1: intro A; only 1: intro H; only 1: intros; only 1: destruct H; only 1: auto; only 1: induction n; only 1: auto).	1.44601202011	2696
Coq.Init.Tactics.decide_right	40	1.0.1.0	search with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0223028659821	6
Coq.Init.Peano.pred_Sn	40	3	search with cache (only 1: split).	0.00614905357361	4
Coq.Init.Peano.not_eq_S	40	19	search with cache (only 1: auto).	0.380606889725	954
Coq.Init.Peano.O_S	40	18	search with cache (only 1: discriminate).	0.276641130447	791
Coq.Init.Peano.n_Sn	40	1.0.10	search with cache (only 1: induction n; only 1: discriminate; only 1: auto).	0.0849370956421	183
Coq.Init.Peano.plus_n_O	40	0.3.0.1.5	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0796971321106	122
Coq.Init.Peano.plus_O_n	40	0.0	search with cache (only 1: intro n; only 1: auto).	0.00746297836304	2
Coq.Init.Peano.plus_n_Sm	40	0.1.1.2.2	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0715708732605	61
Coq.Init.Peano.plus_Sn_m	40	0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: auto).	0.0107109546661	3
Coq.Init.Peano.mult_n_O	40	0.0.3.3	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0112810134888	10
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.0.4.4	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0256519317627	68
Coq.Init.Peano.le_n_S	40	1.1.5	search with cache (only 1: induction 1 as [| m _]; only 1: constructor; only 1: auto).	0.0438640117645	58
Coq.Init.Peano.nat_case	40	3.6.12	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.373292922974	1302
Coq.Init.Peano.nat_double_ind	40	10.7.21.7.5.3	search with cache (only 1: intros H x0; only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	19.2718110085	98399
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40
Coq.Init.Peano.nat_rect_succ_r	40	0.0.3.1.18	search with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: auto).	1.14717316628	3201
Coq.Init.Peano.nat_rect_plus	40	0.1.4.0.1.3.0	search with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.64730286598	2012
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	1.66.14	search with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	1.10847592354	16182
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00891804695129	4
Coq.Init.Datatypes.eq_true_rect_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00909900665283	4
Coq.Init.Datatypes.surjective_pairing	40	2.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.0090970993042	5
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: trivial).	0.0118880271912	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.3.3.3.0.3.3.3.0.1	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	4.45433497429	19816
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	0.7.0.0.7.0.0.5.0.0.12.4.29	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: red; only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).	33.9278390408	270111
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00227093696594	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.1.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0160369873047	71
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00450897216797	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0808310508728	610
Coq.Init.Logic.and_iff_compat_r	40	0.0.1.0.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.0549831390381	261
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.1.0.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.193070888519	1007
Coq.Init.Logic.imp_iff_compat_l	40	0.0.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00780701637268	14
Coq.Init.Logic.imp_iff_compat_r	40	0.0.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0084400177002	14
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00668001174927	4
Coq.Init.Logic.neg_false	40	2.12.9.2.3.3.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	1.78732395172	16373
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.8.3.0.0.8.3.3	search with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: auto; only 1: auto; only 1: intros [HypL HypR]; only 1: split; only 1: auto; only 1: auto).	1.71464586258	9089
Coq.Init.Logic.and_assoc	40	6.6.0.7.7.3.5.0.7.0.7.3.1.0	search with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: apply HypR).	22.0385131836	161603
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.3.11.0.0.0.3.11.3	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: intros [?| ?]; only 1: right; only 1: auto; only 1: left; only 1: auto).	2.72980999947	19031
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.2	search with cache (only 1: intros; only 1: assumption).	0.00697493553162	4
Coq.Init.Logic.iff_to_and	40	0.0.3.3.5	search with cache (only 1: intros; only 1: apply and_iff_compat_r; only 1: split; only 1: auto; only 1: auto).	0.373412132263	652
Coq.Init.Logic.inst	40	9	search with cache (only 1: auto).	0.00767803192139	19
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.0073299407959	2
Coq.Init.Logic.absurd	40	8.0.14.6.6.1	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H; only 1: intros; only 1: elim H1; only 1: auto).	0.741333007812	6614
Coq.Init.Logic.eq_sym	40	0.16	search with cache (only 1: destruct 1; only 1: auto).	0.0517101287842	198
Coq.Init.Logic.eq_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0107169151306	4
Coq.Init.Logic.eq_trans_r	40	2.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00931191444397	4
Coq.Init.Logic.f_equal	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00865793228149	3
Coq.Init.Logic.not_eq_sym	40	26.2	search with cache (only 1: destruct 2; only 1: auto).	0.440897941589	1899
Coq.Init.Logic.eq_sind_r	40	0.6	search with cache (only 1: destruct 2; only 1: auto).	0.012619972229	15
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0103759765625	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0107569694519	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0107691287994	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.2.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0132801532745	5
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00971603393555	2
Coq.Init.Logic.rew_opp_l	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00974798202515	2
Coq.Init.Logic.f_equal2	40	1.3.8	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.1381919384	280
Coq.Init.Logic.f_equal3	40	0.1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0147380828857	5
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0179679393768	6
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0213048458099	7
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.11	search with cache (only 1: destruct e; only 1: reflexivity).	0.0216519832611	46
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0115299224854	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00987410545349	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0109190940857	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.011146068573	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.2	search with cache (only 1: destruct H; only 1: reflexivity).	0.0123689174652	4
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0117619037628	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.012039899826	2
Coq.Init.Logic.rew_swap	40	0.0	search with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0129890441895	2
Coq.Init.Logic.rew_compose	40	3.0	search with cache (only 1: destruct H2; only 1: reflexivity).	0.0148119926453	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	search with cache (only 1: reflexivity).	0.0089750289917	1
Coq.Init.Logic.eq_trans_map_distr	40	0.0.2.2.9	search with cache (only 1: unfold f_equal; only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.326367855072	372
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e; only 1: reflexivity).	0.0136709213257	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.3.0	search with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.0161080360413	6
Coq.Init.Logic.eq_trans_rew_distr	40	0.1	search with cache (only 1: destruct e, e'; only 1: reflexivity).	0.0138499736786	3
Coq.Init.Logic.rew_const	40	0.7	search with cache (only 1: destruct e; only 1: reflexivity).	0.0138690471649	9
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.10	search with cache (only 1: destruct 1; only 1: auto).	0.0579288005829	99
Coq.Init.Logic.inhabited_covariant	40	0.3.9	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0358719825745	85
Coq.Init.Logic.eq_stepl	40	1.4.2.11	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: symmetry; only 1: destruct H; only 1: auto).	0.156551122665	395
Coq.Init.Logic.iff_stepl	40	0.0.2.2	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0279591083527	25
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.5.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0310060977936	17
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0191988945007	2
Coq.Init.Logic_Type.identity_sym	40	3.6	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0128819942474	24
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00983285903931	4
Coq.Init.Logic_Type.identity_congr	40	1.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00851106643677	3
Coq.Init.Logic_Type.not_identity_sym	40	1.15.2	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.278240919113	920
Coq.Init.Logic_Type.identity_ind_r	40	5.19	search with cache (only 1: destruct 2; only 1: assumption).	0.369936943054	944
Coq.Init.Logic_Type.identity_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.010479927063	4
Coq.Init.Logic_Type.identity_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0107798576355	4
Coq.Init.Specif.sigT_eta	40	0.0	search with cache (only 1: destruct p; only 1: auto).	0.0094678401947	2
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00956916809082	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0104429721832	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0111758708954	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.16.15.14	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: auto).	0.626758098602	4269
Coq.Init.Specif.inhabited_sig_to_exists	40	4.10.0.70.95	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: auto).	5.02992010117	87461
Coq.Init.Specif.eq_existT_uncurried	40	0.1.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0164661407471	6
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0149869918823	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0195069313049	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.38.6.8	search with cache (only 1: destruct r, q, p; only 1: simpl in *; only 1: destruct 1; only 1: reflexivity).	7.16353106499	21841
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0139157772064	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.1	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0163099765778	4
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.7	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.302481889725	192
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.4.10.5.1.4	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	1.87526512146	5579
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0148692131042	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	2.0.0.4.7.11	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.18195009232	1742
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.2.2.7.6.2.2	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	7.18390607834	13956
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0177330970764	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0228798389435	4
Coq.Init.Specif.eq_sig2_uncurried	40	2.0.0.4.0.13	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.20854187012	1235
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.2.2.8.6.2.2	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	9.34971117973	15940
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0160698890686	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.1.1	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0147800445557	21
Coq.funind.Recdef.le_lt_SS	40	22	search with cache (only 1: intuition).	0.184741973877	241
Coq.funind.Recdef.Splus_lt	40	41	search with cache (only 1: intuition).	1.53862500191	1864
Coq.funind.Recdef.SSplus_lt	40	1.0.25	search with cache (only 1: constructor; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).	24.1724290848	32037
Coq.funind.Recdef.max	40
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.2.0.0.0.5.7	search with cache (only 1: split; only 1: intro; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.541460037231	725
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0235719680786	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	5.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.108851909637	33
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct x as [[| a| a] d]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos.ggcd a d) as [x [y z]]; only 1: simpl; only 1: congruence).	0.166944026947	37
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	9.2.0.1.0.3	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: repeat rewrite Qred_correct; only 1: apply Qabs_case; only 1: trivial; only 1: apply (Qopp_le_compat x 0)).	7.93755793571	3446
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	0.0.0.0.1	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: case Qred_abs; only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	0.0635349750519	6
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	21.4.12.2	search with cache (only 1: Qc_unfolds; only 1: set (a := x)  at 1; only 1: fold (this x); only 1: auto using Qle_Qabs).	29.3647279739	16480
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	3.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.851269960403	401
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.0.0.0.1.0.7	search with cache (only 1: intros [[| n| n] d] Ha; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence).	1.16413402557	627
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	37.3.0	search with cache (only 1: constructor; only 1: unfold Qeq; only 1: now destruct n).	8.11352109909	6699
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.013857126236	1
Coq.QArith.Qfield.ex2	40	5	search with cache (only 1: exact Qplus_comm).	0.0484070777893	15
Coq.QArith.Qfield.ex3	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0340769290924	2
Coq.QArith.Qfield.ex4	40	3	search with cache (only 1: reflexivity).	0.0273499488831	14
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0508301258087	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0231108665466	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0267939567566	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0300199985504	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0262131690979	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	2.0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: intro; only 1: ring).	0.0602080821991	7
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0377020835876	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40	9.2.3	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	2.84285187721	1930
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: auto with *).	0.0187468528748	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.2.0.0	search with cache (only 1: intros; only 1: unfold Qccompare; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0189681053162	7
Coq.QArith.Qcanon.Qcle_alt	40	4	search with cache (only 1: auto with *).	0.00873303413391	5
Coq.QArith.Qcanon.Qcge_alt	40	2.1	search with cache (only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0125420093536	5
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	5	search with cache (only 1: discriminate).	0.0113551616669	6
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	13.2.1.0	search with cache (only 1: unfold Q2Qc; only 1: intros H; only 1: qc; only 1: ring).	0.687725067139	808
Coq.QArith.Qcanon.Qcplus_0_r	40	14.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.715138912201	563
Coq.QArith.Qcanon.Qcplus_comm	40	6.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.0539882183075	9
Coq.QArith.Qcanon.Qcopp_involutive	40	11.1.18	search with cache (only 1: intros Hnin; only 1: qc; only 1: ring).	0.772780895233	1622
Coq.QArith.Qcanon.Qcplus_opp_r	40	1.0.18.1.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	4.29673886299	1726
Coq.QArith.Qcanon.Qcmult_assoc	40	13.0.14	search with cache (only 1: intros x y H; only 1: qc; only 1: ring).	5.83872795105	5904
Coq.QArith.Qcanon.Qcmult_0_l	40	3.0	search with cache (only 1: intros; only 1: auto with qarith).	0.0380589962006	19
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	10.3.1.0.7.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	3.90647792816	3419
Coq.QArith.Qcanon.Qcmult_comm	40	9.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.276260852814	132
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	4.6.2	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: qc; only 1: ring).	1.66887688637	761
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	8.0.3.3	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: qc; only 1: ring).	4.62710094452	2352
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.3.3.2.9	search with cache (only 1: intros (x1, x2); only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	1.4733440876	1733
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.57	search with cache (only 1: red; only 1: intros; only 1: auto with qarith).	2.40974402428	11149
Coq.QArith.Qcanon.Qcle_antisym	40	1.0.0.12	search with cache (only 1: intro n; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.847259998322	463
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	4.10.5.0	search with cache (only 1: intros; only 1: contradict H; only 1: destruct H; only 1: apply Z.lt_irrefl).	1.13955497742	1064
Coq.QArith.Qcanon.Qclt_le_weak	40	5.0	search with cache (only 1: unfold Qcle; only 1: auto with *).	0.0668120384216	44
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.3.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.168540000916	120
Coq.QArith.Qcanon.Qcnot_lt_le	40	2.9.1	search with cache (only 1: unfold Qclt; only 1: intros b c Hc H; only 1: auto with qarith).	0.833248853683	1007
Coq.QArith.Qcanon.Qcnot_le_lt	40	3.0.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: auto with qarith).	0.0686910152435	57
Coq.QArith.Qcanon.Qclt_not_le	40	8.6.2	search with cache (only 1: unfold Qcle; only 1: intros (a1, a2) (b1, b2); only 1: auto with qarith).	1.94788694382	2580
Coq.QArith.Qcanon.Qcle_not_lt	40	0.1.18.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	4.22575306892	5126
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0316689014435	25
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	8.2.9.1.0	search with cache (only 1: unfold Qcle, Qcminus; only 1: simpl in *; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r).	10.5165410042	7686
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	1.1.12.0.1.0.0.0	search with cache (only 1: unfold Qcmult, Qcle, Qclt; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: rewrite !Qred_correct in * |-; only 1: apply Qmult_lt_r; only 1: eauto; only 1: eauto).	15.9176640511	10911
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.13.0	search with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	1.12837195396	1094
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40	0.1.24	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	5.30607581139	4883
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.892560958862	475
Coq.QArith.Qreals.IZR_nz	40	0	search with cache (only 1: auto with real).	0.0146720409393	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.0.2.0.2.0.0	search with cache (only 1: unfold Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	0.647557020187	227
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	1	search with cache (only 1: reflexivity).	0.0371489524841	2
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	2.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0932409763336	11
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	0.12	search with cache (only 1: compute; only 1: easy).	0.0977258682251	60
Coq.QArith.QArith_base.Qeq_sym	40	0	search with cache (only 1: auto with qarith).	0.0367741584778	1
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.5.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.10515999794	9
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	0	search with cache (only 1: apply Zeq_is_eq_bool).	0.0310320854187	1
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0313811302185	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0367429256439	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto with qarith).	0.0453979969025	4
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: now symmetry).	0.0400538444519	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	1.2	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.113084077835	5
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.1.2.0.2	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.318295001984	47
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.4	search with cache (only 1: intro n; only 1: now subst).	0.0488750934601	6
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.0.17	search with cache (only 1: intros (b, Hb); only 1: unfold Qeq; only 1: simpl in *; only 1: ring).	1.04602909088	743
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.106132984161	5
Coq.QArith.QArith_base.Qplus_comm	40	4.0.0.0.1.11	search with cache (only 1: intros p2; only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	7.96243596077	2536
Coq.QArith.QArith_base.Qopp_involutive	40	1.4.1.4	search with cache (only 1: unfold Qeq; only 1: intros; only 1: simpl in *; only 1: ring).	1.8543279171	127
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0940678119659	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.155549049377	5
Coq.QArith.QArith_base.Qmult_0_l	40	5.0.0	search with cache (only 1: red; only 1: simpl in *; only 1: auto).	0.0617561340332	8
Coq.QArith.QArith_base.Qmult_0_r	40	5.0.2.0	search with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	0.558670043945	123
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.4	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	2.1153960228	297
Coq.QArith.QArith_base.Qmult_comm	40	2.3.0.1.6	search with cache (only 1: intros a b; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	6.25414896011	1769
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.173363924026	5
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.19463300705	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	5	search with cache (only 1: now constructor).	0.0324959754944	6
Coq.QArith.QArith_base.inject_Z_opp	40	6	search with cache (only 1: now constructor).	0.0329978466034	7
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.118062973022	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	25.19	search with cache (only 1: red; only 1: f_equiv).	0.809015035629	1767
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	13.1	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	0.32772898674	241
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	16.9	search with cache (only 1: unfold Qle, Qlt; only 1: Z.order).	2.66494393349	1849
Coq.QArith.QArith_base.Qnot_le_lt	40	12.10	search with cache (only 1: unfold Qle, Qlt; only 1: now apply Z.nle_gt).	1.43097281456	564
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0286390781403	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0278329849243	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.2.3.1.0.1.0.6	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	8.99156689644	3274
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	1.1.0.2.3.0.5.0.5.6	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: red; only 1: case x1; only 1: auto; only 1: auto; only 1: simpl; only 1: unfold Qle, Qlt; only 1: auto).	17.9214010239	6653
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	6.0.0.0.2.0.2.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	14.5781950951	6208
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	4.0.23	search with cache (only 1: intros EQ; only 1: simpl; only 1: now Z.nzsimpl).	0.345867872238	739
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.4.2.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	1.05688500404	350
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.3.0.0.2.0.0.1.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	5.48850011826	3565
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	5.4.5.4	search with cache (only 1: intros [[| n| n] d] Ha; only 1: reflexivity; only 1: reflexivity; only 1: now subst).	0.985049009323	1026
Coq.QArith.Qabs.Qabs_neg	40	2.3.3.0.0.0.1.1.1	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	11.0722718239	8194
Coq.QArith.Qabs.Qabs_nonneg	40	1.0.5.1.2.2	search with cache (only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: intros H0; only 1: simpl in *; only 1: discriminate).	0.763679027557	569
Coq.QArith.Qabs.Zabs_Qabs	40	2.2.0.0.0	search with cache (only 1: simpl; only 1: unfold Qeq; only 1: simpl in *; only 1: intros; only 1: auto).	0.0575661659241	9
Coq.QArith.Qabs.Qabs_opp	40	1.0.0.3.6.3	search with cache (only 1: intros; only 1: simpl; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.17697405815	1426
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.6	search with cache (only 1: red; only 1: auto).	0.0081570148468	8
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00780892372131	2
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00582504272461	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	6.7.1.14.2	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: red; only 1: firstorder).	5.91153311729	18079
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.0079619884491	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00976610183716	1
Coq.Classes.CMorphisms.subrelation_refl	40	5.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0128331184387	8
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.0106649398804	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	3	search with cache (only 1: simpl_crelation).	0.0108330249786	4
Coq.Classes.CMorphisms.pointwise_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.012167930603	2
Coq.Classes.CMorphisms.forall_subrelation	40	6.1	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0218949317932	9
Coq.Classes.CMorphisms.iff_impl_subrelation	40	4	search with cache (only 1: simpl_crelation).	0.0109159946442	5
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00742411613464	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00982189178467	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00853300094604	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	2.7	search with cache (only 1: unfold flip; only 1: firstorder).	0.1635389328	80
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	4.2	search with cache (only 1: reduce; only 1: firstorder).	0.0288288593292	8
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.0166637897491	6
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.706565141678	311
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.176887989044	118
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.85129904747	462
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	0.0758979320526	25
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	9.2	search with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	2.62251591682	1535
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	10	search with cache (only 1: firstorder).	0.0482201576233	59
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	5.2.0	search with cache (only 1: intros A R H x y X x0 y0 X0; only 1: simpl_crelation; only 1: firstorder).	0.0753078460693	10
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	4	search with cache (only 1: simpl_crelation).	0.0574240684509	5
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0.4	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: firstorder).	0.0109498500824	6
Coq.Classes.CMorphisms.flip_respectful	40	9	search with cache (only 1: firstorder).	0.0336740016937	33
Coq.Classes.CMorphisms.flip1	40	3.0.3	search with cache (only 1: hnf; only 1: intros; only 1: auto).	0.0128560066223	9
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.005695104599	1
Coq.Classes.CMorphisms.eq_subrelation	40	2	search with cache (only 1: simpl_crelation).	0.00860500335693	3
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00682711601257	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00538015365601	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0135099887848	3
Coq.Classes.CMorphisms.proper_normalizes_proper	40	10	search with cache (only 1: firstorder).	0.0385420322418	40
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00624203681946	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	3.5	search with cache (only 1: intros x y H'; only 1: simpl_crelation).	0.0567510128021	31
Coq.Classes.CMorphisms.proper_sym_flip_2	40	3.0.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: simpl_crelation).	0.366010904312	125
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	18.3	search with cache (only 1: simpl_crelation; only 1: firstorder).	1.87413406372	1324
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	7.9	search with cache (only 1: simpl_crelation; only 1: eauto).	0.955310106277	810
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.1.0.0.1.11.4	search with cache (only 1: intros A B C RA RB RC f mor x y X x0 y0 X0; only 1: split; only 1: apply mor; only 1: auto; only 1: auto; only 1: apply mor; only 1: auto; only 1: auto).	10.1436281204	5482
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	1.1.0.0.3	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0420830249786	44
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.2.0	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.0147299766541	6
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.008455991745	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00374722480774	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00960302352905	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.197215080261	1
Coq.Classes.CRelationClasses.complement_inverse	40	2	search with cache (only 1: auto).	0.00791597366333	3
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00848507881165	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: assumption).	0.010801076889	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	7.0	search with cache (only 1: hnf; only 1: firstorder).	0.0199601650238	18
Coq.Classes.CRelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0239861011505	6
Coq.Classes.CRelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0183191299438	6
Coq.Classes.CRelationClasses.flip_PER	40	5	search with cache (only 1: firstorder).	0.0279221534729	6
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0336999893188	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	7	search with cache (only 1: firstorder).	0.0146610736847	14
Coq.Classes.CRelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00900411605835	2
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1	search with cache (only 1: firstorder).	0.00905299186707	2
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.122958898544	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00716710090637	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.00772500038147	2
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0148160457611	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0311901569366	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.2.0	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.0161888599396	6
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00987005233765	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00434398651123	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00707411766052	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.19427895546	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	45.38.0	search with cache (only 1: destruct x; only 1: destruct y; only 1: do 2 Morphisms.f_equiv).	5.14891505241	15610
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	2	search with cache (only 1: auto).	0.00947284698486	3
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00832581520081	2
Coq.Classes.RelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: assumption).	0.00925493240356	7
Coq.Classes.RelationClasses.flip_Antisymmetric	40	7.0	search with cache (only 1: hnf; only 1: firstorder).	0.0200281143188	16
Coq.Classes.RelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0243270397186	6
Coq.Classes.RelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0195260047913	6
Coq.Classes.RelationClasses.flip_PER	40	3	search with cache (only 1: firstorder).	0.0294990539551	4
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0282099246979	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	5	search with cache (only 1: firstorder).	0.00862407684326	6
Coq.Classes.RelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00935912132263	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	0.1.2.2	search with cache (only 1: intro n; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.0128169059753	9
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0170090198517	5
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0105428695679	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.1.0.1.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.564038991928	9
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0064799785614	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0140190124512	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	2	search with cache (only 1: firstorder).	0.0355379581451	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	5	search with cache (only 1: firstorder).	0.0136339664459	6
Coq.Classes.Morphisms.eq_proper_proxy	40	0.5	search with cache (only 1: red; only 1: auto).	0.00730299949646	7
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00484800338745	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00393199920654	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.1.12.8.5	search with cache (only 1: reduce_goal; only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.532791137695	1578
Coq.Classes.Morphisms.subrelation_id_proper	40	1.2	search with cache (only 1: reduce; only 1: firstorder).	0.00826096534729	5
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0109920501709	1
Coq.Classes.Morphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00746989250183	1
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00472903251648	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.4.3.2	search with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	0.202232122421	100
Coq.Classes.Morphisms.pointwise_subrelation	40	1.4	search with cache (only 1: reduce; only 1: firstorder).	0.00977492332458	7
Coq.Classes.Morphisms.forall_subrelation	40	0.4	search with cache (only 1: unfold subrelation; only 1: firstorder).	0.0163660049438	19
Coq.Classes.Morphisms.iff_impl_subrelation	40	1	search with cache (only 1: firstorder).	0.0102670192719	18
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00518012046814	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	0.0.26	search with cache (only 1: compute; only 1: intros H x y H0 a; only 1: intuition).	3.01077699661	4564
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	6.0.1	search with cache (only 1: reduce; only 1: red in H0; only 1: firstorder).	0.0435709953308	21
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.0243668556213	6
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	8.1	search with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	1.39433097839	716
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.104409217834	118
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.878072023392	487
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	0.060469865799	80
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	15.0	search with cache (only 1: intros R H x x0 y H0; only 1: firstorder).	9.61341381073	10774
Coq.Classes.Morphisms.symmetric_equiv_flip	40	11.0	search with cache (only 1: hnf; only 1: firstorder).	0.0302448272705	77
Coq.Classes.Morphisms.compose_proper_obligation_1	40	1.0	search with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).	0.0114688873291	3
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	3.5.6	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0813329219818	156
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	8	search with cache (only 1: firstorder).	0.00672292709351	9
Coq.Classes.Morphisms.flip_respectful	40	7.3	search with cache (only 1: simpl_relation; only 1: firstorder).	0.0980780124664	85
Coq.Classes.Morphisms.flip1	40	5.3	search with cache (only 1: hnf; only 1: apply H).	0.018326997757	23
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00504207611084	1
Coq.Classes.Morphisms.eq_subrelation	40	2.3	search with cache (only 1: unfold subrelation; only 1: simpl_relation).	0.0166161060333	12
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00582790374756	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00512909889221	2
Coq.Classes.Morphisms.proper_proper	40	1.0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.0155408382416	11
Coq.Classes.Morphisms.proper_normalizes_proper	40	6.0	search with cache (only 1: simpl_relation; only 1: firstorder).	0.0158479213715	8
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00595998764038	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	2.1	search with cache (only 1: unfold flip, respectful; only 1: firstorder).	0.0139889717102	16
Coq.Classes.Morphisms.proper_sym_flip_2	40	3.6	search with cache (only 1: unfold flip, respectful; only 1: firstorder).	0.391330003738	202
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.1.0.1.6.12	search with cache (only 1: intros R H x y H0 x0 y0 H1; only 1: split; only 1: apply H0; only 1: intuition; only 1: apply H0; only 1: intuition).	2.60160684586	3337
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	0	search with cache (only 1: firstorder).	0.00785398483276	1
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00778985023499	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0250811576843	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0073299407959	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.00713992118835	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.018040895462	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.198875188828	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0.0.5	search with cache (only 1: intros n d; only 1: simpl in *; only 1: firstorder).	0.0228459835052	14
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0104279518127	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00812196731567	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00739908218384	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.00969696044922	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00847315788269	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.00896501541138	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	3.14	search with cache (only 1: compute; only 1: firstorder).	0.401317119598	151
Coq.Classes.DecidableClass.Decidable_sound	40	1.6.1.34.18.3	search with cache (only 1: intro H; only 1: intro n; only 1: case n; only 1: intro z; only 1: intros [? ?]; only 1: auto).	12.6594231129	100040
Coq.Classes.DecidableClass.Decidable_complete	40	0.9.4.36.20.6	search with cache (only 1: intro H; only 1: intro n; only 1: case n; only 1: intro z; only 1: intros [? ?]; only 1: assumption).	21.991738081	153905
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_not_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	2.0.3.3.8.6	search with cache (only 1: destruct x, y; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: rewrite <- ?negb_true_iff, ?Nat.negb_even, ?Nat.odd_spec, ?Nat.even_spec; only 1: intuition).	1.77935099602	2314
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	9	search with cache (only 1: apply Nat.leb_le).	0.0843181610107	30
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	8	search with cache (only 1: apply Z.eqb_eq).	0.0821890830994	29
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	1.60.150	search with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	9.0993449688	29644
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	18	search with cache (only 1: now subst).	0.103726148605	406
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.00616312026978	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.00574207305908	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	0.6.1.10.14.1.1	search with cache (only 1: intros a b; only 1: unfold complement; only 1: intros h1 h2; only 1: intro; only 1: intro Hxz; only 1: rewrite Hxz; only 1: auto).	19.0619189739	28614
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.0.1	search with cache (only 1: intros R R' EQ a a' Ha WF; only 1: compute; only 1: firstorder).	0.0359630584717	5
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	5.1.1	search with cache (only 1: intros R R' EQ a a' Ha WF; only 1: compute; only 1: firstorder).	0.105771064758	31
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0157699584961	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.0	search with cache (only 1: do 2 red; only 1: auto).	0.0152359008789	2
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	5	search with cache (only 1: firstorder).	0.245466947556	6
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.1.1.1.0	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: intro; only 1: firstorder).	0.049106836319	9
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0128769874573	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	5	search with cache (only 1: auto).	0.0085461139679	6
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0.5	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.250720977783	191
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	7.0.0.0.1.0.3	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	0.638352870941	600
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0167419910431	3
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	7.1.0.0.0.1.17	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: auto; only 1: intro H; only 1: now subst).	2.15365004539	2305
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.0102031230927	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	6.10.9	search with cache (only 1: intros q; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	3.06308603287	4637
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	8.1	search with cache (only 1: intros x0 y; only 1: decide equality).	0.184915065765	120
Coq.PArith.BinPos.Pos.xI_succ_xO	40	4	search with cache (only 1: auto).	0.0173900127411	5
Coq.PArith.BinPos.Pos.succ_discr	40	48.29.28.2.18	search with cache (only 1: destruct p; only 1: intro n; only 1: easy; only 1: easy; only 1: now PeanoNat.Nat.nzsimpl).	39.9712920189	125242
Coq.PArith.BinPos.Pos.pred_double_spec	40	12	search with cache (only 1: easy).	0.069708108902	46
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.2.1.3	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.297929763794	66
Coq.PArith.BinPos.Pos.double_succ	40	0.1	search with cache (only 1: simpl; only 1: now f_equal).	0.0384888648987	3
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1.1.0.1.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.0907289981842	11
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0612490177155	1
Coq.PArith.BinPos.Pos.pred_succ	40	2.0.1.0.1.0.1.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	8.68679690361	2139
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.0.5.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	1.40891098976	360
Coq.PArith.BinPos.Pos.add_1_r	40	5	search with cache (only 1: now destruct p).	0.0633881092072	13
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0313220024109	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	search with cache (only 1: simpl; only 1: f_equal).	0.0425939559937	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0373480319977	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.2	search with cache (only 1: apply succ_inj; only 1: auto).	0.0327229499817	4
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.1.0.1.6.1.3	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal).	3.16598296165	795
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.113423109055	37
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0546841621399	1
Coq.PArith.BinPos.Pos.square_xO	40	4.0.2	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0539300441742	13
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.1.5.1.1.5.0.1.13.3	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intro q; only 1: intros; only 1: simpl; only 1: f_equal; only 1: now rewrite IHp; only 1: intros; only 1: simpl; only 1: now rewrite IHp; only 1: trivial).	16.1925039291	18494
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40
Coq.PArith.BinPos.Pos.iter_invariant	40	5.5.0.1.7.0	search with cache (only 1: intros; only 1: induction p as [| p IHp] using peano_ind; only 1: simpl; only 1: auto; only 1: rewrite iter_succ; only 1: auto).	29.0515520573	4684
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0582211017609	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	0.19.3	search with cache (only 1: revert p q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	7.89895701408	7170
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.1.4	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	1.42039108276	171
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.2.3	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.929782867432	165
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.43576002121	37
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.35591506958	37
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	1.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.332345962524	22
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	1.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.331821918488	22
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.0.1.0	search with cache (only 1: destruct compare; only 1: now split; only 1: trivial; only 1: easy').	0.0442700386047	6
Coq.PArith.BinPos.Pos.compare_xI_xI	40	1.0.1.0	search with cache (only 1: destruct compare; only 1: now split; only 1: trivial; only 1: easy').	0.0415380001068	6
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.2.7.6.4.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: auto).	2.51698684692	2815
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.1.0	search with cache (only 1: unfold lt; only 1: destruct compare; only 1: now split; only 1: now split; only 1: now split).	0.0565819740295	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	1.0.0.0.1	search with cache (only 1: unfold le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0602190494537	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40
Coq.PArith.BinPos.Pos.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.140985965729	17
Coq.PArith.BinPos.Pos.lt_gt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.131704807281	17
Coq.PArith.BinPos.Pos.ge_le_iff	40	3.0.1	search with cache (only 1: unfold le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.508175849915	42
Coq.PArith.BinPos.Pos.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.363714933395	39
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0235741138458	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.8.0	search with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.735199213028	147
Coq.PArith.BinPos.Pos.nlt_1_r	40	1.13.0	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	1.39021682739	606
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.109550952911	34
Coq.PArith.BinPos.Pos.le_nlt	40	3.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	1.70179104805	203
Coq.PArith.BinPos.Pos.lt_nle	40	2.5	search with cache (only 1: unfold lt, gt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.55275988579	197
Coq.PArith.BinPos.Pos.lt_le_incl	40	1.1.2	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).	0.638250112534	65
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.0.0.2.1	search with cache (only 1: unfold lt, le; only 1: rewrite compare_gt_iff; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite compare_succ_succ).	0.876893997192	54
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	9	search with cache (only 1: solve_proper).	0.344002008438	50
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.2	search with cache (only 1: apply le_lteq; only 1: intuition).	0.235343933105	35
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40	8.2.3.4	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: rewrite compare_sub_mask; only 1: now case sub_mask_spec).	12.8159458637	4404
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.0.2.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.107503890991	23
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	1.0.6	search with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: reflexivity).	0.109620809555	11
Coq.PArith.BinPos.Pos.add_le_mono_r	40	1.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0518081188202	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.5.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.437915086746	120
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0461268424988	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0475559234619	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.3	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0426800251007	5
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.2.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: auto).	0.141713142395	8
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0261762142181	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	5.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0823910236359	16
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.1.0.1	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.160465955734	29
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.3.0	search with cache (only 1: unfold sub; only 1: intros H; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0818929672241	16
Coq.PArith.BinPos.Pos.sub_xO_xI	40	1.1.0.0.0.2.4.0.22.4.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: rewrite sub_mask_carry_spec; only 1: case sub_mask_spec; only 1: auto; only 1: destruct r; only 1: auto; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	29.8806951046	27839
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0711560249329	11
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40	0.0.2.2.9.0.5.2	search with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: auto; only 1: intros r H; only 1: contradict H; only 1: rewrite add_comm; only 1: auto using add_no_neutral; only 1: auto).	5.34013104439	4050
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.1.2.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.896525144577	173
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	0.0.1.2.0.0.6.1	search with cache (only 1: intros x y H; only 1: unfold le, min; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	7.91121697426	3431
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.1.0.2.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.606632947922	162
Coq.PArith.BinPos.Pos.min_1_l	40	1.18	search with cache (only 1: apply min_r || apply min_l; only 1: apply le_1_l).	0.777570962906	426
Coq.PArith.BinPos.Pos.min_1_r	40	1.3	search with cache (only 1: apply min_r; only 1: apply le_1_l).	0.273373126984	65
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.14	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	1.25804901123	322
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	6.0.8	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	7.27669215202	1422
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.11	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.904477119446	156
Coq.PArith.BinPos.Pos.mul_min_distr_r	40
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	5.0	search with cache (only 1: unfold Pos.gt; only 1: reflexivity).	0.291935920715	30
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40	0.0.0.1.5.6	search with cache (only 1: intros; only 1: apply Pos.gt_lt in H; only 1: unfold Pos.sub; only 1: destruct (Pos.sub_mask_pos p q H) as (r, U); only 1: rewrite U; only 1: now apply Pos.sub_mask_pos_iff).	1.58127593994	998
Coq.PArith.BinPos.Dcompare	40	0.0.0.17.19	search with cache (only 1: intro m; only 1: destruct m; only 1: now intuition; only 1: now intuition; only 1: now intuition).	3.78250288963	1257
Coq.Arith.Le.le_n_0_eq	40	2.2.0.2	search with cache (only 1: inversion 1; only 1: Nat.le_elim H; only 1: Nat.auto'; only 1: auto).	0.0264270305634	10
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	4.7	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.440021038055	308
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40	4.1.0.94.2	search with cache (only 1: left; only 1: revert n; only 1: fix even_equiv 1; only 1: intros n; only 1: auto).	25.7459690571	103168
Coq.Arith.Even.even_odd_dec	40
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.164504051208	1
Coq.Arith.Even.even_even_plus	40	0.2.0.6	search with cache (only 1: Nat.cases n; only 1: parity_binop; only 1: intro p; only 1: parity_binop).	0.438290834427	57
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0658390522003	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0649120807648	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0639181137085	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.221123933792	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0647480487823	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0650539398193	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0682389736176	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0639469623566	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0641849040985	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.109140872955	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0638160705566	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.064248085022	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.156628847122	1
Coq.Arith.Even.even_mult_l	40	14.6.0	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: parity_binop).	2.0761039257	1486
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.064572095871	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0637309551239	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0649518966675	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0713150501251	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0441401004791	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0444099903107	1
Coq.Arith.Minus.minus_n_O	40	2	search with cache (only 1: now destruct n).	0.00968909263611	3
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.020938873291	1
Coq.Arith.Minus.minus_diag_reverse	40	3.5.10.3	search with cache (only 1: Nat.induct ltac:(n); only 1: split; only 1: intro m; only 1: auto).	0.414928913116	613
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	3.0.11.2	search with cache (only 1: Nat.induct p; only 1: reflexivity; only 1: intros p IH; only 1: now rewrite IH).	0.34251499176	312
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	28	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.203469991684	396
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.2.10.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: Nat.Private_Tac.order).	0.555938959122	687
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	12.2.29	search with cache (only 1: intros a b Hb; only 1: subst; only 1: left).	5.45272016525	16309
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40	0.0.10.4.18.0.0	search with cache (only 1: intro n; only 1: induction 1; only 1: auto with arith; only 1: intros; only 1: PeanoNat.Nat.le_elim H1; only 1: auto with arith; only 1: auto with arith).	9.42606711388	17829
Coq.Arith.Between.between_restr	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0176689624786	4
Coq.Arith.Between.exists_le_S	40
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	0.0.5.0	search with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto).	0.0427839756012	15
Coq.Arith.Between.in_int_lt	40	0.4.30	search with cache (only 1: intros n Hn; only 1: intros m [H3 H4]; only 1: PeanoNat.Nat.Private_Tac.order).	4.07104206085	6626
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0106348991394	2
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.00891494750977	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.2.0	search with cache (only 1: induction 1 as [| l]; only 1: auto with arith; only 1: auto with arith).	0.0172009468079	6
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	1.5.3.10.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: Nat.induct ltac:(n); only 1: trivial; only 1: fix le_div2 1; only 1: trivial).	2.78918409348	3830
Coq.Arith.Div2.even_div2	40	2.11.0.14.4	search with cache (only 1: simpl; only 1: Nat.induct n; only 1: trivial; only 1: fix even_equiv 1; only 1: trivial).	24.480301857	31247
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	5.28.0	search with cache (only 1: rewrite even_equiv; only 1: fix le_div2 1; only 1: trivial).	17.7018241882	18899
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	8.0.1	search with cache (only 1: fix even_odd_double 1; only 1: intros n; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	0.321985960007	278
Coq.Arith.Div2.odd_S2n	40	2.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0224161148071	5
Coq.Arith.Div2.div2_double	40	3.1	search with cache (only 1: simpl Nat.mul; only 1: apply Nat.div2_double).	0.162689208984	73
Coq.Arith.Div2.div2_double_plus_one	40	1.6	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.Private_Tac.order).	0.107506036758	60
Coq.Arith.Plus.plus_assoc_reverse	40	1.0.1.0.15.0.7	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: split; only 1: Nat.nzsimpl; only 1: auto; only 1: Nat.nzsimpl; only 1: auto).	25.9783968925	7904
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	16	search with cache (only 1: apply Nat.add_le_mono_l).	0.156593084335	108
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	8	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0136449337006	9
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	11.0.1.0.17	search with cache (only 1: Nat.induct m; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Nat.nzsimpl; only 1: now right).	2.34446001053	1432
Coq.Arith.Plus.le_plus_r	40	12.0.0.63	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: Nat.nzsimpl; only 1: now right).	9.65857410431	12846
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	25.0.0.5.0.2	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: now Morphisms.f_equiv).	13.4539158344	9717
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	9	search with cache (only 1: Nat.order).	0.032751083374	22
Coq.Arith.Lt.lt_n_Sm_le	40	1	search with cache (only 1: apply le_S_n).	0.00758504867554	2
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.2	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0136787891388	6
Coq.Arith.Lt.le_not_lt	40	2	search with cache (only 1: Nat.order).	0.0104069709778	3
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: intuition Nat.order).	0.0106790065765	1
Coq.Arith.Lt.neq_0_lt	40	1	search with cache (only 1: Nat.auto').	0.020094871521	2
Coq.Arith.Lt.lt_0_neq	40	7.0	search with cache (only 1: intros; only 1: Nat.order).	0.0207898616791	12
Coq.Arith.Lt.lt_n_S	40	4	search with cache (only 1: apply le_n_S).	0.00738096237183	5
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply le_S_n).	0.00730895996094	1
Coq.Arith.Lt.S_pred	40	10.1.28.4	search with cache (only 1: Nat.cases n; only 1: now Nat.nzsimpl; only 1: intros n _; only 1: reflexivity).	4.19207406044	11928
Coq.Arith.Lt.S_pred_pos	40	10.8.0.1.0.7	search with cache (only 1: Nat.cases n; only 1: intros H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n _; only 1: reflexivity).	3.06961488724	7249
Coq.Arith.Lt.lt_pred	40	2.8.2.16.15	search with cache (only 1: Nat.cases m; only 1: easy; only 1: intros m IH; only 1: apply Nat.succ_lt_mono; only 1: auto).	2.12736701965	5399
Coq.Arith.Lt.lt_pred_n_n	40	7.3.0.0.1.4	search with cache (only 1: Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros m IH; only 1: auto).	0.605453014374	1083
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00603795051575	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	search with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.00581002235413	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00580191612244	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00559282302856	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00613903999329	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.5	search with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.108644962311	44
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact lt_wf_rect).	0.00705480575562	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.1.1.0.1.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.332103967667	185
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.1.1.0.1.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.320554971695	185
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	2.1.2.0.1.0.2.0.0.0.2	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	4.96283006668	2426
Coq.Arith.Compare_dec.le_lt_dec	40	1.2.1.0.2.0.0.0.2	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	1.1333220005	813
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	3.1.2.0.0.0.2.3.0.0	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	3.99587583542	2456
Coq.Arith.Compare_dec.le_gt_dec	40	12	search with cache (only 1: exact (le_lt_dec n m)).	0.0270400047302	46
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	2.3.0.0.3.66	search with cache (only 1: intuition; only 1: elim (le_lt_dec n m); only 1: left; only 1: Nat.Private_Tac.order; only 1: right; only 1: Nat.Private_Tac.order).	3.17997813225	6890
Coq.Arith.Compare_dec.lt_dec	40	2.2.3.1.3.0.0.1.3	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	10.503608942	8654
Coq.Arith.Compare_dec.gt_dec	40	16	search with cache (only 1: apply le_dec).	0.545809030533	445
Coq.Arith.Compare_dec.ge_dec	40	5	search with cache (only 1: apply le_dec).	0.175086975098	74
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	15	search with cache (only 1: apply Nat.lt_decidable).	0.34873008728	311
Coq.Arith.Compare_dec.dec_ge	40	4	search with cache (only 1: apply Nat.le_decidable).	0.134546995163	50
Coq.Arith.Compare_dec.not_eq	40	2	search with cache (only 1: apply Nat.lt_gt_cases).	0.0171129703522	3
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.00799417495728	3
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00904321670532	1
Coq.Arith.Compare_dec.not_ge	40	6	search with cache (only 1: intuition Nat.order).	0.0967109203339	17
Coq.Arith.Compare_dec.not_lt	40	9	search with cache (only 1: apply Nat.le_ngt).	0.00975108146667	10
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.00820803642273	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.00794005393982	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00888299942017	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	0.0183620452881	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00773286819458	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	1.31.17	search with cache (only 1: Nat.induct n; only 1: do 2 Morphisms.f_equiv; only 1: auto).	2.71196699142	4231
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.2.0.1.1.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0305619239807	10
Coq.Arith.EqNat.eq_nat_eq	40	1	search with cache (only 1: apply eq_nat_is_eq).	0.196300029755	2
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.2.0.0.0.0.0.2.0.0.3	search with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: now left; only 1: simpl; only 1: tauto; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: contradiction || auto).	9.0561850071	7828
Coq.Arith.EqNat.beq_nat_refl	40	2.1.2.2.9	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.246464967728	282
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	3.1.1.0.0	search with cache (only 1: simpl; only 1: intro n; only 1: intro m; only 1: revert m; only 1: trivial).	0.0567209720612	12
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0236558914185	2
Coq.Arith.PeanoNat.Nat.pred_0	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0222470760345	3
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: auto).	0.0164880752563	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: auto).	0.0179150104523	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: auto).	0.017166852951	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0225300788879	2
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.1.9	search with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: auto).	0.0815041065216	49
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0179200172424	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	2.0.0.8.7.0.1	search with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: revert m; only 1: induction 1; only 1: auto; only 1: constructor; only 1: trivial).	14.3039159775	13642
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0293209552765	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.1.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0476710796356	11
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	31	search with cache (only 1: now nzsimpl).	1.01146793365	486
Coq.Arith.PeanoNat.Nat.pow_0_r	40	5	search with cache (only 1: auto).	0.0253410339355	6
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1	search with cache (only 1: reflexivity).	0.291610002518	24
Coq.Arith.PeanoNat.Nat.square_spec	40	2	search with cache (only 1: auto).	0.0249469280243	3
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	5.1.6.11.20	search with cache (only 1: intro H1; only 1: elim H1; only 1: simpl; only 1: intro; only 1: now nzsimpl).	2.55100703239	3669
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	10.15	search with cache (only 1: fix even_spec 1; only 1: trivial).	6.24048495293	6389
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	9	search with cache (only 1: inversion 1).	0.0522089004517	10
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	4.7	search with cache (only 1: inversion 1; only 1: trivial).	1.55213999748	544
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.0.1.0.0.1.3	search with cache (only 1: intros [| a] b; only 1: now exists 0; only 1: simpl; only 1: fold (b mod S a); only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.376782178879	103
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.3	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0324060916901	5
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	1.13	search with cache (only 1: fix gcd_divide 1; only 1: auto).	1.27098894119	466
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	25.28	search with cache (only 1: set (a' := S a) in *; only 1: apply le_0_l).	4.82845282555	4556
Coq.Arith.PeanoNat.Nat.div2_double	40	1.6.0.0.0.8.3	search with cache (only 1: simpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: simpl; only 1: now rewrite succ_inj_wd).	6.87345695496	2199
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.1.0.1.2.1	search with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now f_equal; only 1: rewrite add_succ_r; only 1: now f_equal).	0.564993143082	71
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	1.0.10.0.4.2.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: induct ltac:(n); only 1: trivial; only 1: fix le_div2 1; only 1: simpl; only 1: trivial).	12.9429340363	7297
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.5.4	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.31648516655	112
Coq.Arith.PeanoNat.Nat.double_twice	40	0.8.0	search with cache (only 1: intro n; only 1: simpl; only 1: now rewrite !add_0_r).	0.072597026825	30
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.1.23.8	search with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: easy; only 1: easy).	2.97285699844	2591
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	1.1.5.6.1.1.20.0.0.15.2	search with cache (only 1: nzsimpl'; only 1: simpl; only 1: unfold odd; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: fix odd_spec 1; only 1: rewrite odd_spec; only 1: split; only 1: split).	27.2375559807	30543
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	3.5.9.1.12.4.3.0	search with cache (only 1: unfold testbit; only 1: unfold odd; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: fix odd_spec 1; only 1: trivial; only 1: discriminate).	10.9335420132	11023
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	4.7.4	search with cache (only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	4.58196115494	2402
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	4.17.5	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	6.70578408241	4230
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	1.6.4.1	search with cache (only 1: unfold odd; only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	2.7168970108	1168
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	6.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0615079402924	19
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	8	search with cache (only 1: eauto).	0.0208520889282	9
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	12	search with cache (only 1: inversion H).	0.101579189301	63
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	2.4.0	search with cache (only 1: intro n; only 1: symmetry; only 1: intuition Nat.Private_Tac.order).	0.069051027298	9
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	10	search with cache (only 1: apply Nat.succ_lt_mono).	0.0186810493469	24
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00726699829102	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	6	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.162547826767	52
Coq.Arith.Gt.le_not_gt	40
Coq.Arith.Gt.gt_not_le	40	6	search with cache (only 1: apply Nat.lt_nge).	0.0119760036469	12
Coq.Arith.Gt.le_S_gt	40	6.1	search with cache (only 1: intro; only 1: auto).	0.0257008075714	22
Coq.Arith.Gt.gt_S_le	40	6	search with cache (only 1: apply Peano.le_S_n).	0.0282530784607	20
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00741910934448	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.00828409194946	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40	2.11.9.16.3.0	search with cache (only 1: intros; only 1: apply Nat.le_ngt; only 1: apply Nat.le_ngt; only 1: apply Nat.succ_le_mono; only 1: constructor; only 1: now apply Nat.le_lt_trans with m).	6.27920603752	8531
Coq.Arith.Gt.gt_trans_S	40	6.0.1.1	search with cache (only 1: intro; only 1: intro; only 1: apply Nat.succ_lt_mono; only 1: now apply Nat.le_lt_trans with m).	0.40735912323	194
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00831413269043	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	2.0.4.0	search with cache (only 1: intro n; only 1: intros; only 1: destruct H; only 1: trivial).	0.0127830505371	10
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0109510421753	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0117380619049	4
Coq.Logic.JMeq.JMeq_rect	40	1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.011950969696	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.021341085434	13
Coq.Logic.JMeq.JMeq_rect_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.02108502388	13
Coq.Logic.JMeq.JMeq_congr	40	2.1.0.1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0254440307617	12
Coq.Logic.JMeq.JMeq_eq_dep_id	40	1.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: apply eq_dep_intro).	0.0174508094788	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	4.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0114200115204	6
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.010174036026	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.21.2	search with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	1.06809306145	2232
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.0.3.0	search with cache (only 1: intro n; only 1: intro m; only 1: destruct m; only 1: auto).	0.0168709754944	14
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0146141052246	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	16.5.1.13	search with cache (only 1: unshelve refine (let F := exist (fun P => ~ ~ P -> P) False _ in _); only 1: tauto; only 1: intros h; only 1: tauto).	8.36550188065	11606
Coq.Logic.Classical_Prop.not_imply_elim	40	3.9.7	search with cache (only 1: intros A; only 1: intro n; only 1: tauto).	0.753611087799	1175
Coq.Logic.Classical_Prop.not_imply_elim2	40	1	search with cache (only 1: auto).	0.00671410560608	2
Coq.Logic.Classical_Prop.imply_to_or	40	8.2.1.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	1.07064199448	954
Coq.Logic.Classical_Prop.imply_to_and	40	3.2	search with cache (only 1: intros a b; only 1: tauto).	0.0200519561768	7
Coq.Logic.Classical_Prop.or_to_imply	40	2.1.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition).	0.0270400047302	17
Coq.Logic.Classical_Prop.not_and_or	40	0.20	search with cache (only 1: intros A P H; only 1: tauto).	0.416381120682	743
Coq.Logic.Classical_Prop.or_not_and	40	2	search with cache (only 1: tauto).	0.051059961319	48
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0097599029541	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.00957489013672	1
Coq.Logic.Classical_Prop.imply_and_or	40	2.1.1	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition).	0.0250599384308	15
Coq.Logic.Classical_Prop.imply_and_or2	40	2.1.1	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition).	0.129831075668	24
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	2.4.3	search with cache (only 1: intro n; only 1: case n; only 1: eauto).	0.0294761657715	50
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40	2.14	search with cache (only 1: red; only 1: eauto).	0.0258891582489	129
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40	0.0.0.1.0.0.0.2.0.1.4	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: auto; only 1: auto; only 1: auto; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	2.7271630764	3604
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40	13.1	search with cache (only 1: split; only 1: abstract now inversion 1).	0.638408899307	578
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	44.18.6	search with cache (only 1: intro x; only 1: intuition; only 1: eauto).	19.1884469986	57481
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.1.0.0.0.30.3.2	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder  (subst; auto); only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	21.8832631111	57830
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.2.0.3.0.5	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.152199983597	234
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.2.3.3.2	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intros; only 1: firstorder).	1.34295320511	1002
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	1.6.24.5	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: auto).	0.746843099594	3343
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	22.6.11	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: easy).	0.381973981857	3310
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	26	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.606132984161	965
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.2.3.4.6	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.82674407959	1397
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.2.3.3.7.11.7	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: apply abs).	16.1879508495	43856
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	11.1	search with cache (only 1: unfold not; only 1: firstorder).	0.420982837677	471
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	14.0	search with cache (only 1: unfold not; only 1: firstorder).	0.661905050278	910
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.1.8.0	search with cache (only 1: intros * H; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: apply eq_dep_eq; only 1: elim H using eq_indd; only 1: reflexivity).	0.681329965591	249
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0114600658417	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	2.5	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0145308971405	14
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.3	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0127320289612	6
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	1.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0120809078217	5
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	1.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0120389461517	5
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.5.0.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0621070861816	86
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	6	search with cache (only 1: reflexivity).	0.00809597969055	7
Coq.Logic.FunctionalExtensionality.eta_expansion	40	6	search with cache (only 1: reflexivity).	0.00786519050598	7
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.1.0	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0157799720764	8
Coq.Logic.HLevels.false_hprop	40	0.1	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0123860836029	3
Coq.Logic.HLevels.true_hprop	40	4.0.1	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).	0.0129911899567	8
Coq.Logic.HLevels.not_hprop	40	0.5.2.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.0672190189362	99
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0205879211426	7
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.20.8.16.9	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	7.18186712265	14799
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.4.16	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.114035844803	355
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00968194007874	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	3.32.5.34	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	4.09081196785	30699
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.25.14.16	search with cache (only 1: intro H; only 1: intro n; only 1: inversion 1; only 1: reflexivity).	3.67229604721	18281
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.3.0	search with cache (only 1: intros * H; only 1: rewrite H; only 1: reflexivity).	0.0144639015198	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.12.1.0.13.17	search with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.07940721512	4554
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.7	search with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.037770986557	24
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.5.0	search with cache (only 1: intros * H; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0213220119476	10
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.13.1.0.14.2	search with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.03790593147	2908
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	3.2.0.1	search with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: simpl; only 1: split).	0.0142118930817	10
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	2.15	search with cache (only 1: dependent rewrite H; only 1: split).	1.20097088814	2254
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	13.3.0.32	search with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.859320878983	2752
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40	3.40.0.10.0.0.6	search with cache (only 1: intros eq_rect_eq; only 1: intro; only 1: destruct p1; only 1: rewrite <- eq_rect_eq; only 1: reflexivity; only 1: destruct p2; only 1: apply eq_dep_intro).	25.2909221649	134347
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	11.2.1	search with cache (only 1: intro eq_dep_eq; only 1: intros p2; only 1: auto).	0.370121002197	1024
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	4.11.2.1.5	search with cache (only 1: intros; only 1: intro UIP; only 1: intros p2; only 1: rewrite H; only 1: apply UIP).	3.47475194931	17500
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	4.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0133538246155	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.107302904129	2
Coq.Logic.EqdepFacts.f_eq_dep	40	3.1	search with cache (only 1: destruct 1; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0201580524445	17
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.2	search with cache (only 1: destruct 1; only 1: auto).	0.0199489593506	23
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0136001110077	12
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	7.1	search with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.0201530456543	33
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	7	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.445280790329	11
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	10	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.472877979279	82
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	4.0.21.1	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: auto; only 1: contradiction).	1.22977304459	8453
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00695109367371	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00737690925598	2
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0158529281616	2
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0187661647797	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.01051902771	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0141460895538	2
Coq.Logic.Decidable.dec_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0188479423523	3
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00857090950012	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00877714157104	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0153460502625	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0146610736847	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0734632015228	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0868029594421	2
Coq.Logic.Decidable.not_true_iff	40	0.0.1	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00613498687744	4
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00452303886414	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00883102416992	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0110030174255	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0125949382782	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0127060413361	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0126419067383	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0128529071808	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0132670402527	2
Coq.Logic.Decidable.not_or_iff	40	1	search with cache (only 1: tauto).	0.0124940872192	2
Coq.Logic.Decidable.not_and_iff	40	5	search with cache (only 1: tauto).	0.0121431350708	23
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0161280632019	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0167729854584	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Rings_Z.Zcri	40	5.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0832500457764	14
Coq.setoid_ring.Rings_Z.Z_one_zero	40	15	search with cache (only 1: auto with zarith).	0.226259946823	91
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	16	search with cache (only 1: auto).	0.0880579948425	108
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.00689506530762	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40	11.3.20	search with cache (only 1: fix odd_spec 1; only 1: intros x y; only 1: auto).	3.92504286766	3935
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	34.11	search with cache (only 1: intros; only 1: Esimpl2).	16.7204418182	3775
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	15.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	13.190682888	651
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.3.0.2.0.1.0.3	search with cache (only 1: repeat split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	6.07757401466	3372
Coq.setoid_ring.Ring.bool_eq_ok	40	9	search with cache (only 1: destr_bool).	0.0540578365326	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	24.9.8	search with cache (only 1: intros p0; only 1: intros; only 1: firstorder).	5.49125599861	3089
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	25.7.6	search with cache (only 1: intros p0; only 1: intros; only 1: firstorder).	7.81065917015	3021
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	27.9.8.6	search with cache (only 1: intros p0; only 1: intros; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: firstorder).	34.4861929417	10810
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	14	search with cache (only 1: auto).	0.414605140686	90
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	9	search with cache (only 1: eauto).	0.356534004211	18
Coq.setoid_ring.Field_theory.rsub_0_r	40	18	search with cache (only 1: let rec rsimpl := gen_srewrite Rsth Reqe ARth in rsimpl).	29.2843711376	755
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	29	search with cache (only 1: eauto).	8.16823410988	982
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	4.0.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	4.12960505486	72
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	1.4579269886	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	1.35866093636	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	7.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	9.54502487183	63
Coq.setoid_ring.Field_theory.PEpow_0_r	40	9.0	search with cache (only 1: intros l; only 1: eauto).	9.81342101097	96
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	1.30502390862	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3.1.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1).	23.3064570427	29
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	5	search with cache (only 1: now destruct 1).	1.92637395859	6
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0360298156738	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0367720127106	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0413548946381	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0	search with cache (only 1: exact eq_equivalence).	0.00722408294678	1
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	2.4.1.0.3.18	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: let rec mrewrite := repeat (first [ rewrite ring_add_0_l | rewrite <- (ring_add_comm 0) | rewrite ring_mul_1_l | rewrite @ring_mul_0_l | rewrite ring_distr_l | reflexivity ]) in mrewrite; only 1: reflexivity; only 1: reflexivity).	11.7106800079	4921
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.0141201019287	4
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	45	search with cache (only 1: easy).	0.298993825912	1036
Coq.setoid_ring.Ring_theory.IDmorph	40	6	search with cache (only 1: easy).	0.0260529518127	7
Coq.setoid_ring.Ring_theory.Eqsth	40	14.1.0.1.0.41	search with cache (only 1: constructor; only 1: intro n; only 1: auto with relations; only 1: intro n; only 1: auto with relations; only 1: congruence).	4.75955796242	8012
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	0.1.5.1.1.2.0.0.23	search with cache (only 1: constructor; only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *; only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hx, <- Hy in *; only 1: rewrite Hx, Hy; only 1: easy).	2.81841492653	2636
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.13175201416	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	2	search with cache (only 1: firstorder).	0.0222041606903	3
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	3	search with cache (only 1: firstorder).	0.0232889652252	4
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2.4	search with cache (only 1: intros a b; only 1: Tactics.program_simpl).	0.0320019721985	8
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.8.9.4	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	1.91426301003	1122
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	7.12.8	search with cache (only 1: intro n; only 1: intro p; only 1: solve_proper).	0.592346906662	966
Coq.setoid_ring.Ring_theory.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.01509308815	2
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0127139091492	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	21	search with cache (only 1: easy).	0.298562049866	263
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	14.3	search with cache (only 1: intuition; only 1: firstorder).	0.894877910614	423
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	5.23	search with cache (only 1: intros m IH; only 1: firstorder).	1.57659888268	1353
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	5.5	search with cache (only 1: intros a b; only 1: firstorder).	0.0676078796387	48
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	25	search with cache (only 1: firstorder).	0.209558010101	306
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	21	search with cache (only 1: firstorder).	0.169229984283	208
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	26.30	search with cache (only 1: intros a n; only 1: firstorder).	1.79686307907	3666
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	30.3	search with cache (only 1: case Smorph; only 1: now try N.order').	1.05770397186	1529
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	43	search with cache (only 1: firstorder).	0.590115070343	2366
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	3	search with cache (only 1: mrewrite).	0.0238518714905	4
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.024894952774	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.014848947525	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0159010887146	2
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0168380737305	3
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	0.14	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.266727924347	178
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.12.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	2.79523682594	1015
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	13	search with cache (only 1: exact (Radd_ext Reqe)).	0.140980005264	60
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	11	search with cache (only 1: exact (Rmul_ext Reqe)).	0.1060090065	33
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0125410556793	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0150909423828	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0159220695496	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0150721073151	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.3.0.0	search with cache (only 1: intros w; only 1: intros n; only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct n; only 1: norm; only 1: norm).	9.33862996101	2444
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.2.9.3	search with cache (only 1: intros x; only 1: induction x as [| n x IHx]; only 1: norm; only 1: norm).	0.373093128204	215
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0379891395569	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0380411148071	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0412650108337	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0357089042664	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	146	search with cache (only 1: easy).	33.5509901047	11598
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	9	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0324289798737	10
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	59.26	search with cache (only 1: intuition; only 1: firstorder).	11.5205099583	14865
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	13.6	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	10.5005619526	1633
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	19.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	11.2392258644	1788
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40	0.44.62	search with cache (only 1: induction l as [| y l IHl]; only 1: firstorder; only 1: now symmetry).	24.0803780556	15490
Coq.setoid_ring.Ring_polynom.Pphi1	40	61	search with cache (only 1: firstorder).	6.10326600075	3199
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0124309062958	3
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	1.0.1.22	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.692614078522	397
Coq.setoid_ring.Ncring.ring_add_assoc1	40	11.5.8.15	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: mrewrite).	9.13528299332	2984
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.2.1.8.4	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.78666806221	290
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.7.3	search with cache (only 1: intros; only 1: apply Zeq_bool_eq; only 1: auto).	0.218524932861	78
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	1.1	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0255200862885	4
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	0.0.2.47	search with cache (only 1: compute; only 1: intuition; only 1: inv; only 1: MX.order).	3.09953403473	4246
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.020339012146	2
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	1.0.1.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0825109481812	7
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.2.0	search with cache (only 1: destruct s; only 1: intuition; only 1: simpl; only 1: intuition_in).	0.0814080238342	6
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.1.0.0.0	search with cache (only 1: destruct s; only 1: ok; only 1: ok; only 1: simpl; only 1: auto).	0.315534114838	6
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	1.77404594421	1284
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0195939540863	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.0.80.47	search with cache (only 1: induction l as [| y l]; only 1: compute; only 1: exact (rmatch _ _ _); only 1: exact (rmatch _ _ _)).	15.3792488575	33054
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0606279373169	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0	search with cache (only 1: eauto with *).	0.0232310295105	1
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2.11	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.621606826782	295
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.01926612854	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	12	search with cache (only 1: ok).	1.1374168396	303
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2.1.1	search with cache (only 1: intros a b; only 1: simpl; only 1: now simpl).	0.0412321090698	7
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	8.0.0.15.0.1	search with cache (only 1: intro n; only 1: intros; only 1: induction n as [| n IH]; only 1: simpl; only 1: easy; only 1: now f_equal).	1.97180294991	1658
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0419290065765	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0501849651337	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.6.6	search with cache (only 1: inversion_clear 1; only 1: repeat split; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	1.32583189011	625
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.0.0.0.1.0.0.10	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	1.56805491447	563
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0536088943481	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0655179023743	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	65.0.25	search with cache (only 1: red; only 1: unfold singleton; only 1: eauto).	8.03670907021	19623
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.1.3.0.0	search with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.615229845047	175
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	2.0.0.0.0.2.0	search with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: simpl; only 1: left; only 1: intuition; only 1: now constructor).	0.394078016281	183
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	14	search with cache (only 1: auto).	3.47608995438	1025
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0	search with cache (only 1: intro; only 1: simpl; only 1: auto).	0.0307791233063	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.4.0.3.0.89	search with cache (only 1: intros a Ha; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	39.3146269321	53465
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	6.0	search with cache (only 1: unfold filter; only 1: now auto_tc).	0.0240290164948	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.4.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0549349784851	17
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.4.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0372109413147	8
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.1.0.2.0.1.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.731271982193	214
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.0.0.2.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	2.08469200134	954
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.2.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.068186044693	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.073755979538	4
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.0.6.1.7.7.0.11.11.4.0.4	search with cache (only 1: constructor; only 1: intros a b; only 1: split; only 1: auto; only 1: auto; only 1: constructor; only 1: apply H; only 1: apply H; only 1: intro l; only 1: constructor; only 1: firstorder; only 1: firstorder).	12.3106460571	14884
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	23	search with cache (only 1: now split).	0.557752132416	650
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: intuition).	0.0121870040894	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	1.0.32	search with cache (only 1: intros GT; only 1: unfold In; only 1: intuition).	1.80878210068	2164
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.4.0	search with cache (only 1: intuition; only 1: intro n; only 1: now rewrite ?POrderedType.Positive_as_OT.square_xO).	0.0324320793152	14
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	2.12	search with cache (only 1: fix odd_spec 1; only 1: intuition).	1.19171190262	704
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.16.3	search with cache (only 1: intros; only 1: destruct b, b'; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	3.19420814514	2771
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	0.0.3.1.3	search with cache (only 1: intro m; only 1: destruct m; only 1: now split; only 1: now split; only 1: now split).	0.41935801506	138
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.13277220726	28
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.023227930069	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	1.0.0.1.13	search with cache (only 1: intros; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.146629810333	190
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0144851207733	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0156810283661	5
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0156311988831	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.16	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	1.53011608124	1523
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	0.0.0.0.0.3	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: unfold compare, equal; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.0606870651245	17
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	1.1.1.5.3.19	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold eq in *; only 1: unfold lt; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	23.50938797	12783
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.017245054245	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0119369029999	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0163719654083	4
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0295579433441	13
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	5.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.018452167511	12
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0153059959412	2
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0148050785065	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0134611129761	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0161080360413	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.128870010376	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.019819021225	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0236060619354	5
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.02845287323	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	5.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0171051025391	9
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	1.2.11.8	search with cache (only 1: red; only 1: split; only 1: apply <- mem_spec; only 1: apply -> mem_spec).	0.704952955246	589
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	5	search with cache (only 1: intuition).	0.0250451564789	6
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	23	search with cache (only 1: intuition).	0.393805980682	255
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	6	search with cache (only 1: intuition).	0.0489320755005	11
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0130891799927	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	4.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0454370975494	6
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	6.4.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	1.27816796303	674
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0214860439301	4
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0202529430389	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	58	search with cache (only 1: intuition).	4.3747689724	6600
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	7.0	search with cache (only 1: intros; only 1: intuition).	0.0370559692383	9
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	8	search with cache (only 1: intuition).	0.0144939422607	9
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	2.9.5	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).	4.99461102486	704
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	2.11.0.0.4.11.1	search with cache (only 1: unfold Equal; only 1: intro n; only 1: intros; only 1: rewrite singleton_spec; only 1: rewrite singleton_spec; only 1: rewrite <- H; only 1: intuition).	3.5039768219	3192
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	5.13.0	search with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	2.77305197716	820
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.9.0.276	search with cache (only 1: constructor; only 1: firstorder; only 1: intro n; only 1: firstorder).	15.4566650391	41981
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	10.0.0	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	0.447066068649	285
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	4.2.8	search with cache (only 1: repeat red; only 1: intuition; only 1: firstorder).	0.412441968918	270
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.100955963135	13
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0433640480042	3
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0537428855896	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0406520366669	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.115087032318	4
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0380029678345	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.1.0.3.1	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.417605876923	13
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	3	search with cache (only 1: fsetdec).	0.0356161594391	4
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	2	search with cache (only 1: intuition).	0.0224030017853	3
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	8	search with cache (only 1: intuition).	0.0872511863708	23
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	1	search with cache (only 1: fsetdec).	0.0545070171356	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	6.2	search with cache (only 1: intros; only 1: fsetdec).	0.140676021576	10
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.104580163956	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	2.3.1	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: fsetdec).	0.0666348934174	11
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.063766002655	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.0624599456787	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	3.2	search with cache (only 1: intuition; only 1: fsetdec).	0.11287689209	7
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0609750747681	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0482819080353	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.1	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.142513990402	5
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0617971420288	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0592451095581	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0.1.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0940968990326	4
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	2	search with cache (only 1: fsetdec).	0.178524017334	3
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	3.0	search with cache (only 1: intros; only 1: fsetdec).	0.11950302124	5
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.144465208054	3
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.157973051071	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.148694992065	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0918200016022	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.274255990982	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	4	search with cache (only 1: fsetdec).	0.100908994675	5
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0873379707336	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.125455141068	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.132990121841	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.1776471138	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.103348016739	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.198437929153	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.33144402504	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.288074016571	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0432460308075	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0450029373169	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0669679641724	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0690860748291	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0862209796906	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0891659259796	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0842671394348	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	5.0	search with cache (only 1: intuition; only 1: fsetdec).	3.39382910728	254
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	1	search with cache (only 1: fsetdec).	0.0974979400635	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0833032131195	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.116003036499	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.109504938126	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.146649837494	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.208104133606	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.225279092789	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	3.3.0	search with cache (only 1: destruct (mem x (inter s s')); only 1: fsetdec; only 1: fsetdec).	2.75463795662	191
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.155694007874	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0609679222107	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.057886838913	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0430901050568	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0449459552765	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0642879009247	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0771360397339	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0909149646759	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0500340461731	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.119894981384	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.111069917679	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.188428163528	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.164855003357	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	8.13.25	search with cache (only 1: generalize (F.is_empty_iff s); only 1: red; only 1: fsetdec).	5.3750500679	3039
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	5.16.0	search with cache (only 1: intros; only 1: intros E; only 1: fsetdec).	4.15041804314	1242
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.467694997787	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.365345954895	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.309635877609	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.0.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: auto).	0.187590837479	46
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40	0.1.9.0.0.4.20	search with cache (only 1: intros a b; only 1: red; only 1: apply fold_rec_bis; only 1: intros s s' E; only 1: fsetdec; only 1: auto; only 1: fsetdec).	9.14500689507	2697
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	6.1.0.3.1.3	search with cache (only 1: intro x; only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: reflexivity; only 1: fsetdec).	16.4507961273	3380
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	10.4.0.3.1	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: split; only 1: fsetdec).	21.7367489338	12289
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	4.1.14.2	search with cache (only 1: intros; only 1: apply fold_1; only 1: eauto with *; only 1: eauto with *).	17.5137438774	7938
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	1.1.0.0.0.1.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: eauto with *; only 1: eauto with *).	2.49902009964	417
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.12.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	2.01943397522	662
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	0.4.2.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: auto).	0.320874929428	60
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	0.40545797348	46
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.0501520633698	6
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	2.1.12.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	4.08873009682	1241
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	8.0	search with cache (only 1: intros; only 1: auto with set relations).	0.652390956879	65
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.1.0.0.0.2.1.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto; only 1: auto with set).	12.4936981201	2341
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.0.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set relations; only 1: auto with set relations; only 1: expAdd; only 1: fsetdec).	1.06262493134	170
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with set relations).	0.225620031357	28
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.0.0.0.8.0.5.0	search with cache (only 1: intros P; only 1: intros; only 1: unfold leb, gtb; only 1: rewrite H; only 1: destruct E.compare; only 1: intuition; only 1: intuition; only 1: intuition).	9.56241703033	2032
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0435409545898	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0469269752502	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	2	search with cache (only 1: intuition_in).	0.0137579441071	3
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.4.1.4.0.0.46	search with cache (only 1: right; only 1: intuition eauto; only 1: intuition eauto; only 1: intro; only 1: intuition_in; only 1: intro; only 1: intuition_in).	9.73335790634	3140
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.3.1.0.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	5.64123702049	982
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.2	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0124409198761	5
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	0.0.0.2	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.247273921967	62
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0325889587402	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	2.61361384392	246
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	3.4.3	search with cache (only 1: intros; only 1: apply <- is_empty_spec; only 1: auto with set).	0.268025875092	80
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	10	search with cache (only 1: intuition).	1.17158913612	291
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	1.1.0.1.2.0.1.0.1	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	27.0842530727	4085
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.787071943283	89
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.1.2.2.0.2	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	3.92376708984	702
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.0307579040527	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0788760185242	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0926880836487	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	3	search with cache (only 1: auto with set).	0.0304000377655	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.3.0.2	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.165477991104	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.1.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0500469207764	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	0.1.3	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0552608966827	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	3.5	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0638749599457	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	10	search with cache (only 1: auto with set).	0.140244007111	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.0293118953705	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	11	search with cache (only 1: auto with set relations).	3.38034415245	399
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set relations).	0.0508608818054	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	5.6	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	2.07842993736	334
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.2.0.2.1	search with cache (only 1: destruct (mem y s); only 1: rewrite <- not_mem_iff; only 1: auto with set relations; only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.410820960999	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40	3.16	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: intuition).	12.7837238312	1378
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	3.14	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	5.03061509132	1082
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	4.1	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.937032222748	135
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.0.0.6	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	4.26131296158	525
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	4.5	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	4.56145310402	713
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: intuition).	0.0505480766296	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0450830459595	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0353229045868	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0343081951141	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0287609100342	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0500319004059	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0331699848175	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0296959877014	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0306429862976	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0492029190063	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	4	search with cache (only 1: auto with set).	0.0347709655762	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.033390045166	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0321700572968	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.032350063324	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0307679176331	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0519759654999	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0299680233002	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.034698009491	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0304360389709	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0316979885101	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0540289878845	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	2	search with cache (only 1: auto with set).	0.0291609764099	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0354859828949	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.1451151371	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0511789321899	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0297780036926	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0421350002289	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.2.1.1.1.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	1.55585384369	339
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.165603876114	39
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.10.0.0.5.3.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: destruct (mem x s); only 1: auto with *; only 1: auto with *; only 1: congruence; only 1: auto; only 1: auto).	14.0636489391	6431
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	4.0	search with cache (only 1: intros; only 1: auto with set).	0.0544970035553	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	23	search with cache (only 1: solve_proper).	2.23494100571	921
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	6	search with cache (only 1: intuition).	0.192588090897	16
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.149683952332	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.1.3.0.0.0.1	search with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	6.91100692749	648
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	15.1.2.2.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	16.8165268898	3973
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.7	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.151783943176	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.731923818588	2
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.0953669548035	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.00903916358948	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0877249240875	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.127764940262	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0135960578918	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.0283989906311	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0430340766907	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0477321147919	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0675041675568	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0707528591156	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0492749214172	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.125879049301	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.156098127365	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	3.5.18.8	search with cache (only 1: intros; only 1: apply -> subset_spec; only 1: intuition; only 1: auto).	2.68130397797	2326
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	1	search with cache (only 1: fsetdec).	0.0416831970215	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0557119846344	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0338001251221	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	5.4.17	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: destr_bool).	2.8944299221	4282
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	10.9.4	search with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: destr_bool).	4.97891402245	6790
Coq.MSets.MSetGenTree.Props.isok_iff	40	1.18	search with cache (only 1: fix odd_spec 1; only 1: intuition_in).	1.82535099983	1633
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.1	search with cache (only 1: intros; only 1: intuition_in).	0.0618031024933	3
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0282719135284	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.1.1	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in).	0.0239460468292	5
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: unfold gt_tree; only 1: inversion 1).	0.0169758796692	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.6.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.108973026276	19
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.7.0	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.261443853378	65
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1	search with cache (only 1: intuition_in; only 1: order).	0.12607383728	25
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto).	0.0280759334564	5
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0223450660706	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	3.0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: eauto).	0.0282258987427	6
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.1.0.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0397999286652	8
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.1.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.462534189224	178
Coq.MSets.MSetGenTree.Props.empty_spec	40	2.4	search with cache (only 1: intro n; only 1: eauto).	0.0810649394989	19
Coq.MSets.MSetGenTree.Props.empty_ok	40	10	search with cache (only 1: auto).	0.0159349441528	21
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40	1.23	search with cache (only 1: fix odd_spec 1; only 1: intuition_in).	21.0033431053	11208
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	4.19	search with cache (only 1: fix odd_spec 1; only 1: intuition).	5.17265486717	3938
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	4.0.19.4.8.30	search with cache (only 1: intros H; only 1: destruct H; only 1: constructor 1; only 1: reflexivity; only 1: simpl; only 1: ok).	3.20894598961	11482
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	0.2.3.4.13.22	search with cache (only 1: intro LS'; only 1: compute; only 1: intros; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	3.14337801933	7194
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	22.10	search with cache (only 1: compute; only 1: firstorder).	0.23272395134	803
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40	4.94	search with cache (only 1: fix even_spec 1; only 1: auto).	15.2613508701	40042
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	41	search with cache (only 1: firstorder).	0.549787998199	1346
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	0.16.14	search with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hx; only 1: auto).	38.6847879887	18413
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	5.1	search with cache (only 1: intuition; only 1: firstorder).	0.0283658504486	8
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0	search with cache (only 1: Dec.fsetdec).	0.0353999137878	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	search with cache (only 1: Dec.fsetdec).	0.0375380516052	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	14	search with cache (only 1: firstorder).	1.45210504532	499
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	2.0.109	search with cache (only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	5.48772907257	6519
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	15.5.0.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	12.6632599831	10645
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.11.43.3	search with cache (only 1: intros; only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	5.5708501339	6999
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	3	search with cache (only 1: solve_proper).	0.0305271148682	4
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	3.18	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.58992195129	1486
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.1.1.0.1.0.0.0.0.15	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	4.20660495758	3350
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	13	search with cache (only 1: intuition).	0.0626640319824	85
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	2.1.0.0.19	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	11.1446900368	961
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	6	search with cache (only 1: constructors).	0.00923109054565	7
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.4.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intuition; only 1: inv).	0.0306589603424	9
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	0.0.0.1.0.1	search with cache (only 1: destruct s; only 1: intros; only 1: intuition; only 1: split; only 1: auto; only 1: auto).	0.222634077072	89
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	6.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: auto; only 1: auto).	0.0338480472565	16
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	5.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: auto; only 1: intuition).	0.031182050705	14
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	2.4.0.4.5	search with cache (only 1: unfold Empty; only 1: intuition; only 1: destruct s; only 1: inv; only 1: inversion H).	6.95217990875	4449
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0.0	search with cache (only 1: unfold elements; only 1: auto).	0.0183990001678	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: tauto).	0.0066819190979	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40	0.14.15.3	search with cache (only 1: intro m; only 1: intro H; only 1: fix odd_spec 1; only 1: tauto).	20.1374399662	18459
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.1.0.0.0.0.0.1.0.3.0.4	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: auto; only 1: inv; only 1: auto).	12.1524899006	4027
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition).	0.0155448913574	13
Coq.MSets.MSetList.MakeRaw.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	2.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.095529794693	5
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40	1.14.6.3	search with cache (only 1: intros H; only 1: intros x l; only 1: fix even_spec 1; only 1: intuition).	12.3788650036	10127
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.00881505012512	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	3.23.5	search with cache (only 1: intro n; only 1: rewrite InA_alt; only 1: firstorder).	1.29159903526	1932
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	4	search with cache (only 1: intuition).	0.0406539440155	29
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	8.7.6	search with cache (only 1: intuition; only 1: inv; only 1: intuition).	0.486512899399	686
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.01615691185	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	4.1.0.0	search with cache (only 1: inversion 1; only 1: induction s as [| x s IH]; only 1: inversion 1; only 1: discriminate).	0.0194811820984	9
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	1.0.1.0.5.0.3	search with cache (only 1: induction s; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: intuition).	5.59212303162	2531
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intro s; only 1: auto).	0.0111081600189	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.00824499130249	1
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	3.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0162208080292	5
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	1	search with cache (only 1: now Z.nzsimpl').	0.158874034882	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.7.18.0	search with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: auto with sets; only 1: auto with sets).	0.447683095932	1008
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	2.0.0.1.20.1.2.9	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	10.1559939384	16660
Coq.Relations.Operators_Properties.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.2.1.4.1.2.28	search with cache (only 1: induction 1 as [? ?| ]; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	1.93657302856	6304
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	5.0.1.0.1	search with cache (only 1: intro y0; only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0965859889984	152
Coq.Relations.Operators_Properties.clos_rtn1_step	40	5.0.2.2	search with cache (only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	0.212024927139	285
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	2.2.4.0.14	search with cache (only 1: induction 1 as [? ?| ]; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.626553058624	1700
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40	6.0.0.0.2.1.0.1.0.4.1.1.1.10.5	search with cache (only 1: constructor 1; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: apply clos_rt1n_step; only 1: auto; only 1: left; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_rt1n_rt).	18.792427063	35123
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	2.5.2.4.1.2.23	search with cache (only 1: induction 1 as [? ?| ]; only 1: apply clos_rt1n_rt; only 1: left; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	10.7857308388	43930
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.4.0.4.4.0.2.1.9	search with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: red; only 1: destruct 1; only 1: trivial; only 1: red; only 1: destruct 1; only 1: reflexivity).	1.75055098534	5920
Coq.ssr.ssreflect.master_key	40	54	search with cache (only 1: reflexivity || destruct H).	0.397526979446	2023
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: destr_bool).	0.0319969654083	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.0119750499725	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	3.6.0	search with cache (only 1: intro n; only 1: induction n; only 1: auto).	0.0389831066132	63
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.0105149745941	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.00954699516296	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0183310508728	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0108211040497	1
Coq.ssr.ssreflect.abstract_context	40	0.96.74	search with cache (only 1: intro H; only 1: apply H; only 1: auto).	5.77179193497	73318
Coq.ssr.ssrbool.prop_congr	40	6	search with cache (only 1: Bool.destr_bool).	0.0378439426422	32
Coq.ssr.ssrbool.is_true_true	40	3	search with cache (only 1: exact (erefl _)).	0.00694298744202	4
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: Bool.destr_bool).	0.00733518600464	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00978708267212	2
Coq.ssr.ssrbool.negbT	40	2	search with cache (only 1: Bool.destr_bool).	0.00938105583191	3
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.00998902320862	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.00873303413391	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.00868010520935	1
Coq.ssr.ssrbool.negbK	40	0.23	search with cache (only 1: intro n; only 1: Bool.destr_bool).	0.0556929111481	280
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00760293006897	1
Coq.ssr.ssrbool.negb_inj	40	0.1.1.0.0.6	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: Bool.destr_bool; only 1: Bool.destr_bool; only 1: trivial).	0.249977827072	115
Coq.ssr.ssrbool.negbLR	40	10	search with cache (only 1: Bool.destr_bool).	0.0365529060364	21
Coq.ssr.ssrbool.negbRL	40	11	search with cache (only 1: Bool.destr_bool).	0.0534069538116	33
Coq.ssr.ssrbool.contra	40	6.12	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.404019832611	186
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0158629417419	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0157771110535	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0161430835724	1
Coq.ssr.ssrbool.contraT	40	10.11	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.533622026443	307
Coq.ssr.ssrbool.wlog_neg	40	3	search with cache (only 1: by case : b  =>// ->).	0.0211579799652	4
Coq.ssr.ssrbool.contraFT	40	6.16	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.867452859879	301
Coq.ssr.ssrbool.contraFN	40	7.17	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.959914922714	370
Coq.ssr.ssrbool.contraTF	40	13.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.06735301018	566
Coq.ssr.ssrbool.contraNF	40	14.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.30230093002	655
Coq.ssr.ssrbool.contraFF	40	1.8.14	search with cache (only 1: destruct c; only 1: by case : b  =>// ->; only 1: by move /contra =>notb_notc /negbT).	0.865728855133	615
Coq.ssr.ssrbool.contra_not	40	2	search with cache (only 1: auto).	0.0126750469208	3
Coq.ssr.ssrbool.contraPnot	40	0	search with cache (only 1: by auto).	0.0128028392792	1
Coq.ssr.ssrbool.contraTnot	40	1.23	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.783023834229	352
Coq.ssr.ssrbool.contraNnot	40	0	search with cache (only 1: by case : b ; auto).	0.0143179893494	1
Coq.ssr.ssrbool.contraPT	40
Coq.ssr.ssrbool.contra_notT	40	0.52	search with cache (only 1: red; only 1: by case : b ; auto).	30.0936000347	22003
Coq.ssr.ssrbool.contra_notN	40	0	search with cache (only 1: by case : b  =>//= /(_ isT) HP /(_ HP)).	0.031366109848	1
Coq.ssr.ssrbool.contraPN	40	6.0	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case : b  =>//= /(_ isT) nP /nP).	0.302428007126	20
Coq.ssr.ssrbool.contraFnot	40	0.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.905421972275	173
Coq.ssr.ssrbool.contraPF	40	1.0.57.20	search with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intros b b'; only 1: by case : b  =>//; auto; only 1: intuition).	25.8047008514	36310
Coq.ssr.ssrbool.contra_notF	40	1	search with cache (only 1: by case : b  =>// /(_ isT)).	0.0445160865784	2
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.029091835022	1
Coq.ssr.ssrbool.ifT	40	4	search with cache (only 1: by case : b ).	0.038761138916	5
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move ->).	0.0293688774109	2
Coq.ssr.ssrbool.ifN	40	4	search with cache (only 1: by case : b ).	0.0382518768311	5
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.0268490314484	3
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0275437831879	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.0240659713745	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0240430831909	1
Coq.ssr.ssrbool.ifE	40	6	search with cache (only 1: reflexivity).	0.0365650653839	7
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0331258773804	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0324938297272	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0311708450317	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.26	search with cache (only 1: destruct 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	2.09908485413	991
Coq.ssr.ssrbool.introTFn	40	0.6	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	0.0568840503693	8
Coq.ssr.ssrbool.elimTFn	40	1.7	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	0.059278011322	10
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.20	search with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.490097999573	208
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40	5	search with cache (only 1: by case : Pb ; constructor; auto).	0.0312778949738	6
Coq.ssr.ssrbool.rwP	40	10	search with cache (only 1: by case : Pb ; constructor; auto).	0.0593919754028	21
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	2.16.8	search with cache (only 1: intro p; only 1: destruct p; only 1: auto).	0.573441028595	640
Coq.ssr.ssrbool.impliesPn	40	2.5.18	search with cache (only 1: intuition; only 1: destruct H; only 1: auto).	0.737294912338	400
Coq.ssr.ssrbool.unlessL	40	18.8.24	search with cache (only 1: split; only 1: intros; only 1: by move  =>fK injf' x; apply : injf' ).	0.941264867783	2279
Coq.ssr.ssrbool.unlessR	40	4.33.34	search with cache (only 1: split; only 1: intros H ?; only 1: auto).	1.624158144	5493
Coq.ssr.ssrbool.unless_sym	40	4.4.25.34.29	search with cache (only 1: split; only 1: intros H ?; only 1: apply H; only 1: auto; only 1: auto).	6.16861200333	24545
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.23	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.239364862442	290
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	0.9.27.0.9.27.24.27	search with cache (only 1: split; only 1: split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	30.0258162022	85082
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0265121459961	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0301258563995	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0316159725189	1
Coq.ssr.ssrbool.pair_andP	40	14	search with cache (only 1: intuition).	0.0722479820251	81
Coq.ssr.ssrbool.idP	40	11.0.9	search with cache (only 1: destruct b1; only 1: intuition; only 1: now constructor).	9.27854704857	376
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.0200679302216	1
Coq.ssr.ssrbool.idPn	40	3	search with cache (only 1: by case b1; constructor).	0.0225749015808	4
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0239901542664	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0206928253174	1
Coq.ssr.ssrbool.negPf	40	6.0.11	search with cache (only 1: destruct b1; only 1: now constructor; only 1: now constructor).	0.437199115753	214
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0529520511627	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0535328388214	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0390901565552	1
Coq.ssr.ssrbool.andTb	40	5	search with cache (only 1: repeat split).	0.0366518497467	6
Coq.ssr.ssrbool.andFb	40	4	search with cache (only 1: repeat split).	0.0350267887115	5
Coq.ssr.ssrbool.andbT	40	3.14	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.186564207077	157
Coq.ssr.ssrbool.andbF	40	3.6	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0763709545135	27
Coq.ssr.ssrbool.andbb	40	8	search with cache (only 1: by case).	0.0614230632782	13
Coq.ssr.ssrbool.andbC	40	1.1.0.8	search with cache (only 1: intro b1; only 1: destruct b1; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.167325019836	78
Coq.ssr.ssrbool.andbA	40	1.7	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0717878341675	11
Coq.ssr.ssrbool.andbCA	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0477058887482	4
Coq.ssr.ssrbool.andbAC	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0532288551331	4
Coq.ssr.ssrbool.andbACA	40	4	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0542809963226	5
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.0361230373383	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.0367321968079	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0409970283508	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0380828380585	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0356869697571	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0455219745636	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0507199764252	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0436899662018	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0515220165253	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0522048473358	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0384829044342	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.0303540229797	1
Coq.ssr.ssrbool.orbN	40	2	search with cache (only 1: Bool.destr_bool).	0.0420210361481	3
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0423338413239	1
Coq.ssr.ssrbool.andb_orl	40	7	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0606341362	8
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.054319858551	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.105453968048	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0545649528503	1
Coq.ssr.ssrbool.andb_idl	40	0.1.2.1.2.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: simpl; only 1: auto; only 1: reflexivity).	0.517826080322	173
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0535161495209	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0565690994263	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0662620067596	1
Coq.ssr.ssrbool.orb_idl	40	2	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0536160469055	3
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0253410339355	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0288560390472	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0367789268494	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0217950344086	1
Coq.ssr.ssrbool.negb_or	40	1	search with cache (only 1: by case : a ; case : b ).	0.0260648727417	2
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0226619243622	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0228960514069	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0198760032654	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0392651557922	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: Bool.destr_bool).	0.0167031288147	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: Bool.destr_bool).	0.016932964325	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0167310237885	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.0192301273346	1
Coq.ssr.ssrbool.implybb	40	0	search with cache (only 1: by case : b ).	0.0164959430695	1
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0221071243286	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.0204920768738	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0197470188141	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0209529399872	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0202600955963	1
Coq.ssr.ssrbool.implyb_idl	40	10	search with cache (only 1: by case : a ; case : b  =>// ->).	0.155801057816	21
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0250780582428	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0297331809998	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.0156409740448	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0153880119324	1
Coq.ssr.ssrbool.addbb	40	23	search with cache (only 1: by case).	0.186814069748	255
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0187649726868	1
Coq.ssr.ssrbool.addbA	40	0.0.0.8.0.9	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: Bool.destr_bool; only 1: by [  ]; only 1: by [  ]; only 1: by [  ]).	0.584843158722	400
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.023628950119	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0238499641418	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0368139743805	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0252878665924	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0250887870789	1
Coq.ssr.ssrbool.addKb	40	0.4.13.12	search with cache (only 1: intro H; only 1: destruct H; only 1: by case; only 1: by [  ]).	0.90528512001	1092
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0403439998627	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0590310096741	2
Coq.ssr.ssrbool.addbI	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0577828884125	2
Coq.ssr.ssrbool.addTb	40	2	search with cache (only 1: by case : b ).	0.0196139812469	3
Coq.ssr.ssrbool.addbT	40	3	search with cache (only 1: by case : b ).	0.0477659702301	4
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.0579791069031	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0474328994751	1
Coq.ssr.ssrbool.addbP	40	4.3.4.1.23	search with cache (only 1: destruct a, b; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	1.98979091644	1238
Coq.ssr.ssrbool.subrelUl	40	38.6.19.24.19	search with cache (only 1: intro n; only 1: intros; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	19.7221438885	36034
Coq.ssr.ssrbool.subrelUr	40	38.14.23.24.24	search with cache (only 1: intro n; only 1: intros; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	25.3453159332	58050
Coq.ssr.ssrbool.sub_refl	40	24	search with cache (only 1: by unlock).	0.36701798439	346
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.0185627937317	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  =>_ /= ->).	0.0193638801575	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0192379951477	5
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.0189199447632	3
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.0163898468018	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.0400309562683	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	5	search with cache (only 1: auto).	0.0219919681549	6
Coq.ssr.ssrbool.in1W	40	0.5	search with cache (only 1: intro n; only 1: by [  ]).	0.0302147865295	7
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0229098796844	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0233278274536	1
Coq.ssr.ssrbool.in1T	40	11	search with cache (only 1: auto).	0.0946419239044	36
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0273540019989	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0290207862854	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0268130302429	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0302920341492	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  =>? ?; auto).	0.032252073288	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.019504070282	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0211908817291	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0242240428925	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0259788036346	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0277650356293	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0330009460449	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0300130844116	2
Coq.ssr.ssrbool.subon1l	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0317389965057	2
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0345430374146	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0316491127014	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.026948928833	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0275480747223	3
Coq.ssr.ssrbool.inW_bij	40	5.5.42.100	search with cache (only 1: intros [x y]; only 1: exists x; only 1: by move  =>? ?; only 1: by move  =>? ?).	39.5678701401	89734
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0270001888275	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0343639850616	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0360190868378	1
Coq.ssr.ssrbool.sub_in_bij	40	0.17	search with cache (only 1: intro n; only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.330728054047	145
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  =>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0486948490143	6
Coq.ssr.ssrbool.sub_in2	40	16.26	search with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.54691886902	1538
Coq.ssr.ssrbool.sub_in3	40	21.26	search with cache (only 1: red; only 1: by move  =>? ?; auto).	2.06286597252	1867
Coq.ssr.ssrbool.sub_in12	40	1.24	search with cache (only 1: intro p; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.809304952621	334
Coq.ssr.ssrbool.sub_in21	40	1	search with cache (only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.0348148345947	2
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	99	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	2.75696802139	5008
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0231111049652	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0251610279083	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0270040035248	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.0482909679413	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrbool.homo_sym	40	4	search with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0273249149323	5
Coq.ssr.ssrbool.mono_sym	40	9	search with cache (only 1: by move  =>fR y x; apply : fR ).	0.0291121006012	10
Coq.ssr.ssrbool.homo_sym_in	40	0	search with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0261480808258	1
Coq.ssr.ssrbool.mono_sym_in	40	2	search with cache (only 1: by move  =>mf x y hx hy; rewrite -mf ?mem_g // !fgK ?mem_g).	0.031060218811	3
Coq.ssr.ssrbool.homo_sym_in11	40	1	search with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0312039852142	2
Coq.ssr.ssrbool.mono_sym_in11	40	1	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0286779403687	2
Coq.ssr.ssrbool.onW_can	40	7	search with cache (only 1: by move  =>? ?).	0.0265820026398	8
Coq.ssr.ssrbool.onW_can_in	40	11	search with cache (only 1: by move  =>hf x hx ax; rewrite hf).	0.0702409744263	33
Coq.ssr.ssrbool.in_onW_can	40	0	search with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.0224390029907	1
Coq.ssr.ssrbool.onS_can	40	44	search with cache (only 1: by move  =>fK injf' x; apply : injf' ).	1.05026006699	990
Coq.ssr.ssrbool.onS_can_in	40	25.54	search with cache (only 1: move  =>f0 fP; only 1: by move  =>? ?; auto).	5.17246699333	6369
Coq.ssr.ssrbool.in_onS_can	40	7	search with cache (only 1: by move  =>mem_g fgK x; apply : fgK ).	0.0322539806366	8
Coq.ssr.ssrbool.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: tauto).	0.00816297531128	1
Coq.ssr.ssrfun.unitE	40	5.13.2	search with cache (only 1: intro n; only 1: case n; only 1: auto).	0.148512125015	479
Coq.ssr.ssrfun.frefl	40	1.17	search with cache (only 1: intro n; only 1: trivial).	0.027116060257	166
Coq.ssr.ssrfun.fsym	40	0.10	search with cache (only 1: intros; only 1: by [  ]).	0.0202310085297	33
Coq.ssr.ssrfun.ftrans	40	3.34.26.40	search with cache (only 1: intros Hfst Hsnd; only 1: intro n; only 1: rewrite Hfst; only 1: by [  ]).	5.31253790855	40000
Coq.ssr.ssrfun.rrefl	40	21	search with cache (only 1: split).	0.0256149768829	208
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0128328800201	1
Coq.ssr.ssrfun.svalP	40	26	search with cache (only 1: apply proj2_sig).	0.171486139297	333
Coq.ssr.ssrfun.s2valP	40	11	search with cache (only 1: by case : u ).	0.0182619094849	33
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.00881409645081	1
Coq.ssr.ssrfun.all_sig	40	1	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0150928497314	2
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0199038982391	2
Coq.ssr.ssrfun.can_pcan	40	1.12.66.29	search with cache (only 1: intros; only 1: intro b1; only 1: rewrite H; only 1: reflexivity).	12.687240839	98102
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.0112488269806	2
Coq.ssr.ssrfun.canLR	40	19.42.14	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1).	1.52866911888	10151
Coq.ssr.ssrfun.canRL	40	17.22	search with cache (only 1: destruct 2; only 1: auto).	0.398563146591	1447
Coq.ssr.ssrfun.Some_inj	40	1.3.7	search with cache (only 1: intro n; only 1: inversion 1; only 1: reflexivity).	0.176851987839	85
Coq.ssr.ssrfun.of_voidK	40	12.9	search with cache (only 1: intro n; only 1: induction n).	0.206419944763	309
Coq.ssr.ssrfun.esymK	40	0.21.60.9	search with cache (only 1: red; only 1: intro m; only 1: destruct m; only 1: reflexivity).	2.06401705742	14034
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	2	search with cache (only 1: by move  =>x y []).	0.129992961884	3
Coq.ssr.ssrfun.inj_can_sym	40	28.63	search with cache (only 1: red; only 1: auto).	2.25682497025	11436
Coq.ssr.ssrfun.inj_comp	40	21.49	search with cache (only 1: red; only 1: auto).	2.1637969017	8111
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	search with cache (only 1: intro n; only 1: auto).	0.00876092910767	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.00746512413025	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00698709487915	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00790095329285	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00806713104248	1
Coq.Sets.Uniset.le_refl	40	0	search with cache (only 1: destr_bool).	0.0122628211975	1
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0137012004852	4
Coq.Sets.Uniset.seq_refl	40	2	search with cache (only 1: auto).	0.00849986076355	3
Coq.Sets.Uniset.seq_trans	40	0.1.2.13.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.990962982178	2213
Coq.Sets.Uniset.seq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: auto).	0.0165619850159	7
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0123600959778	3
Coq.Sets.Uniset.union_empty_right	40	0.0.0.11.1.0.0.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	3.8629090786	9397
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.038300037384	19
Coq.Sets.Uniset.seq_left	40	0.1.2.0.1.1.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	5.14614605904	4381
Coq.Sets.Uniset.seq_right	40	0.0.1.1.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: destruct y; only 1: intros; only 1: elim H; only 1: auto).	0.706228017807	424
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0.7	search with cache (only 1: compute; only 1: firstorder).	0.00992393493652	9
Coq.Sets.Multiset.meq_trans	40	6.6.0.9.0	search with cache (only 1: destruct x; only 1: intros; only 1: unfold meq; only 1: firstorder; only 1: congruence).	20.3185811043	6163
Coq.Sets.Multiset.meq_sym	40	0.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: auto).	0.0160441398621	5
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: auto).	0.0156669616699	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0164091587067	5
Coq.Sets.Multiset.munion_comm	40	6.0.4.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: intros; only 1: simpl; only 1: intuition).	2.48204517365	1690
Coq.Sets.Multiset.munion_ass	40	0.0.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0295720100403	7
Coq.Sets.Multiset.meq_left	40	1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0247769355774	8
Coq.Sets.Multiset.meq_right	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0329329967499	13
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto).	0.0346419811249	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: intuition).	0.00610399246216	1
Coq.Sets.Integers.le_antisym	40	2.9	search with cache (only 1: intros H H1 H2; only 1: PeanoNat.Nat.Private_Tac.order).	0.121505975723	53
Coq.Sets.Integers.le_trans	40	13.0	search with cache (only 1: intros a b; only 1: PeanoNat.Nat.order).	0.183859825134	186
Coq.Sets.Integers.le_Order	40	0.5.0.0.1.0.1.196	search with cache (only 1: split; only 1: intuition; only 1: red; only 1: intros n m Hn Hm; only 1: PeanoNat.Nat.Private_Tac.order; only 1: red; only 1: intros n m H; only 1: PeanoNat.Nat.Private_Tac.order).	7.84399819374	23850
Coq.Sets.Integers.triv_nat	40	28	search with cache (only 1: split).	0.717582941055	1813
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.9.3.0.16	search with cache (only 1: intros; only 1: intro n; only 1: intros; only 1: intro m; only 1: auto).	0.839618206024	3566
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	7.1.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	0.316982030869	164
Coq.Sets.Relations_1_facts.contains_is_preorder	40	2.5	search with cache (only 1: intro h; only 1: auto  10 with sets).	0.0124530792236	9
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.2.10	search with cache (only 1: intros x y z h; only 1: elim h; only 1: auto  10 with sets).	0.810273170471	1266
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	1.0.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.0177919864655	4
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.1	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.026664018631	15
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.00919485092163	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.0083429813385	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.6.1.0.5.2	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	17.3002481461	21690
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.2.1	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0343730449677	43
Coq.Sets.Permut.comm_left	40	3.2.1	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0301120281219	31
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.1.7.2.0.16.5	search with cache (only 1: intro H'3; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	3.65573406219	6118
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.12.4	search with cache (only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	0.259438037872	521
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	13.3.7	search with cache (only 1: intros H'3 H'4; only 1: intro h; only 1: elim h).	1.0360789299	3074
Coq.Sets.Powerset.Power_set_Inhabited	40	9.72.90	search with cache (only 1: intro x; only 1: exists x; only 1: auto  10 with sets).	13.8335108757	191736
Coq.Sets.Powerset.Inclusion_is_an_order	40	22	search with cache (only 1: auto  10 with sets).	0.563835859299	628
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00871610641479	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0	search with cache (only 1: auto  6 with sets).	0.00890588760376	1
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	0	search with cache (only 1: auto with sets).	0.0128757953644	1
Coq.Sets.Powerset.Union_increases_l	40	0.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0170578956604	4
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00944781303406	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.2.2.5.4	search with cache (only 1: intros H'1 H'2; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.84916496277	1039
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0231289863586	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	3.0.0.3.0	search with cache (only 1: red; only 1: intros x H; only 1: red; only 1: unfold Setminus at 1; only 1: auto with sets).	0.372357130051	133
Coq.Sets.Classical_sets.Subtract_inv	40	2.3.5.13	search with cache (only 1: intros a b; only 1: intros x H'; only 1: induction H'; only 1: auto with sets).	2.99411797523	5134
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40	0.35.7	search with cache (only 1: intros A NI; only 1: firstorder; only 1: auto  7 using Inhabited_Setminus with sets).	15.2168028355	26334
Coq.Sets.Classical_sets.not_SIncl_empty	40	2.1.2.0.0	search with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto with sets).	0.0245220661163	11
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.1.10.0.3.0.2.7	search with cache (only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros U R; only 1: red; only 1: red in T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	9.33653903008	18217
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.0.1.0.0.0	search with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0199348926544	7
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.0.0.0.7.1	search with cache (only 1: intros a b; only 1: generalize Inclusion_is_transitive; only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	3.18129611015	1848
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	39.11	search with cache (only 1: intro H; only 1: auto  6 with sets).	1.99302411079	4592
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0128619670868	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.8	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0383532047272	23
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0124418735504	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0150189399719	1
Coq.Sets.Powerset_facts.Union_associative	40	60.5	search with cache (only 1: intros y H'1; only 1: auto  10 with sets).	28.0281941891	34395
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0149500370026	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  6 with sets).	0.0138111114502	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.772541046143	864
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	23.1155178547	15788
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	8.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.965852022171	781
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.1.0.1.1.0.0.0.2.1	search with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	2.63888597488	2421
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.1.1.2.7.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.950954198837	1178
Coq.Sets.Powerset_facts.incl_add	40	0.0	search with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.0157971382141	2
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	8.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.16502404213	48
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	0.0.1.0.0.0.0.0.0.1.0.4.0.6	search with cache (only 1: intros; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: split; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	33.3048989773	23409
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.0096230506897	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	2.2.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0465149879456	27
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0208299160004	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.0.1.0.1.0.0.0.2	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: intros x0 H'0; only 1: elim H'0).	1.01907300949	994
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0347120761871	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: intuition; only 1: contradict H; only 1: intuition; only 1: intros x H1; only 1: inversion_clear H1).	0.312848806381	173
Coq.Sets.Constructive_sets.Extension	40	0.0.1.0.0.1.1.11.2.11	search with cache (only 1: red; only 1: intro; only 1: intros Hfst Hsnd; only 1: split; only 1: subst; only 1: intro n; only 1: auto; only 1: subst; only 1: intro n; only 1: auto).	4.06054806709	15697
Coq.Sets.Constructive_sets.Noone_in_empty	40	12.1	search with cache (only 1: intro n; only 1: inversion 1).	0.125224113464	269
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0125029087067	4
Coq.Sets.Constructive_sets.Add_intro1	40	0.7.5.3.3	search with cache (only 1: red; only 1: red; only 1: intros B C H'; only 1: left; only 1: auto with sets).	2.05038189888	4859
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0114119052887	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.22.3.2.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	1.87739109993	9080
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	0.17.1.12.8.2.2	search with cache (only 1: intro; only 1: red; only 1: destruct 1; only 1: intro n; only 1: elim (Noone_in_empty x); only 1: induction n; only 1: auto with sets).	17.0741949081	95152
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.17.8.10.9.0.2	search with cache (only 1: red; only 1: intro H'1; only 1: unfold Add at 1; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto with sets).	29.0764210224	170881
Coq.Sets.Constructive_sets.not_Empty_Add	40	1.7.14.5.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	4.40497517586	18256
Coq.Sets.Constructive_sets.Singleton_inv	40	0.3.2.1	search with cache (only 1: intros x H'0; only 1: intro H'1; only 1: rewrite H'1; only 1: auto with sets).	0.0178098678589	10
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.0133500099182	4
Coq.Sets.Constructive_sets.Union_inv	40	1.1.12	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.413772106171	585
Coq.Sets.Constructive_sets.Add_inv	40	0.16.0.1.1.0	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	26.8896129131	28749
Coq.Sets.Constructive_sets.Intersection_inv	40	0.1.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0137090682983	4
Coq.Sets.Constructive_sets.Couple_inv	40	2.2.4.0.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.479212999344	682
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros x H'0; only 1: auto with sets).	0.0123598575592	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	3.0.0.0	search with cache (only 1: intro; only 1: intros x H'0; only 1: red; only 1: auto with sets).	0.0159039497375	7
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.5.4	search with cache (only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.100970983505	193
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	1.4.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0210378170013	9
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	0.30.43	search with cache (only 1: intros; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.89103293419	9283
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40	1.0.3.25	search with cache (only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	2.9706761837	3576
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	5.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.0182378292084	13