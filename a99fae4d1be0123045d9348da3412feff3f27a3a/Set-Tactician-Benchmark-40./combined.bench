
Coq.micromega.OrderedRing.rplus_morph_Proper	40	11	search with cache (only 1: firstorder).	0.158119916916	51
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	8	search with cache (only 1: firstorder).	0.0686209201813	15
Coq.micromega.OrderedRing.ropp_morph_Proper	40	12.5	search with cache (only 1: intros a b H; only 1: firstorder).	0.447953939438	417
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	8.14.4	search with cache (only 1: intros n m H1 H2; only 1: elim H1; only 1: now rewrite H2).	2.30149197578	1681
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0665509700775	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.07301902771	2
Coq.micromega.OrderedRing.Rplus_comm	40	0.1.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0825119018555	6
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0424840450287	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0402019023895	2
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40	4.1.4.4.0.4.1.2.0	search with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: intuition; only 1: split; only 1: trivial; only 1: auto; only 1: rewrite Rlt_le_neq in H; only 1: intuition).	28.5371799469	22051
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).	0.1251039505	11
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	search with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.091089963913	3
Coq.micromega.Ztac.elim_concl_eq	40	6.2.0.1.0.0.9	search with cache (only 1: intros x y; only 1: case (Z.eq_dec x y); only 1: intro H; only 1: auto; only 1: intro H; only 1: intuition; only 1: Z.order).	24.6342010498	15030
Coq.micromega.Ztac.elim_concl_le	40	4.0	search with cache (only 1: intros; only 1: Z.order).	0.0620019435883	18
Coq.micromega.Ztac.elim_concl_lt	40	6.0	search with cache (only 1: intros; only 1: Z.order).	0.0641930103302	20
Coq.micromega.Ztac.Zlt_le_add_1	40	2.3	search with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.213747024536	38
Coq.micromega.Ztac.add_le	40	0.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0514121055603	2
Coq.micromega.Ztac.mul_le	40
Coq.micromega.ZifyInst.PropAnd	40	4.1	search with cache (only 1: constructor; only 1: tauto).	0.0821001529694	15
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0594298839569	2
Coq.micromega.ZifyInst.PropArrow	40	0.3	search with cache (only 1: constructor; only 1: tauto).	0.0491399765015	5
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.122402906418	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0854208469391	3
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.0.0.0.0.4.4.0.0.0.2	search with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: unfold Z.max, Pos.max; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	9.65001296997	8700
Coq.micromega.ZifyInst.z_max_spec	40	3.0.0.0.15.1	search with cache (only 1: intro n; only 1: intros EQ; only 1: intuition; only 1: Z.solve_max; only 1: Z.solve_max; only 1: Z.solve_max).	4.46582698822	3658
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40	25	search with cache (only 1: firstorder).	24.5831189156	1510
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0507979393005	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0488650798798	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0495381355286	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0497131347656	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0736029148102	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	0.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0839848518372	5
Coq.micromega.ZCoeff.ring_ops_wd	40	2.2.2.1	search with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	0.470875024796	77
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	0.0.0.1.0.0.5.0	search with cache (only 1: intros; only 1: ring_simplify; only 1: apply Rlt_le_trans with 1; only 1: auto with real; only 1: pattern 1 at 1; only 1: replace 1 with 0 + 1; only 1: auto with real; only 1: auto with real).	2.82070207596	1600
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	7.0.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.0575110912323	30
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	1.3.0.1.0.0.0	search with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: destruct x; only 1: reflexivity; only 1: easy; only 1: now destruct 1).	0.416105985641	260
Coq.micromega.ZMicromega.lt_le_iff	40	2.1.6.1	search with cache (only 1: intro n; only 1: split; only 1: apply Z.lt_le_pred; only 1: apply Z.lt_le_pred).	0.787688970566	501
Coq.micromega.ZMicromega.le_0_iff	40
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0	search with cache (only 1: reflexivity).	0.00935196876526	1
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	13.4	search with cache (only 1: fix even_spec 1; only 1: trivial).	8.17796301842	1809
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0.3	search with cache (only 1: destruct x; only 1: <Coq.Strings.String.t_eqb>; only 1: contradict H; only 1: discriminate; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy').	0.45648598671	377
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	0.0.11.0.0.2.0.13.0.38.0	search with cache (only 1: induction p; only 1: constructor; only 1: auto with zarith; only 1: constructor; only 1: auto; only 1: case_eq (Zgcd_pol p1); only 1: case_eq (Zgcd_pol p3); only 1: intros; only 1: constructor; only 1: easy; only 1: easy).	22.2933700085	37871
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	1.1.1.1.0.6.33.1	search with cache (only 1: intros; only 1: destruct p; only 1: destruct z; only 1: reflexivity; only 1: destr_eq H; only 1: destr_eq H; only 1: easy; only 1: discriminate).	16.701458931	19466
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.148298978806	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	0.1.3.0.0.0.0.2.6.5	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: split; only 1: Z.order'; only 1: auto with zarith; only 1: simpl; only 1: split; only 1: auto with zarith; only 1: Z.order').	5.6845240593	3779
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	16.0	search with cache (only 1: intro n; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	2.08337211609	743
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40	13.19.0	search with cache (only 1: rewrite <- !jump_add; only 1: rewrite Pos.add_comm; only 1: now rewrite Pos.add_1_r).	6.47441697121	12415
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	7.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0610861778259	22
Coq.micromega.Env.nth_pred_double	40	3.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0559079647064	13
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.5.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: auto; only 1: reflexivity).	0.0234980583191	9
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	1	search with cache (only 1: destr_bool).	0.0700390338898	2
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0162289142609	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0183489322662	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	5.2.19.9	search with cache (only 1: intros n IH; only 1: induction n; only 1: reflexivity; only 1: easy).	3.60490989685	5056
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.8.11.5	search with cache (only 1: unfold cnf_tt; only 1: intros l; only 1: destruct l; only 1: reflexivity; only 1: auto).	1.72021198273	2211
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	3.0.2.1.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).	1.48006391525	1113
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40	4.22	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.926730155945	769
Coq.micromega.Tauto.radd_term_term'	40	6.13	search with cache (only 1: fix gcd_divide 1; only 1: tauto).	19.4489018917	9241
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	1.8.7.4	search with cache (only 1: split; only 1: destruct 1; only 1: constructor; only 1: destruct 1).	3.60400295258	3615
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0609889030457	3
Coq.micromega.Tauto.eval_cnf_and_opt	40	0.10.20	search with cache (only 1: intros f Hf; only 1: fix even_spec 1; only 1: tauto).	25.6967310905	15505
Coq.micromega.Tauto.add_term_correct	40	1.14.22	search with cache (only 1: intros f Hf; only 1: fix even_spec 1; only 1: tauto).	7.28195118904	5132
Coq.micromega.Tauto.no_middle_eval_tt	40	12.8.6	search with cache (only 1: intros; only 1: intuition; only 1: eauto).	1.414894104	1037
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	2.6.1.8	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	7.88365507126	3801
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.114365100861	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40	0.0.1.24.2	search with cache (only 1: unfold cnf_tt, eval_cnf, eval_clause; only 1: fix gcd_divide 1; only 1: unfold eval_tt; only 1: intros; only 1: auto).	27.8229329586	13293
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.1.0.3.4.5.3	search with cache (only 1: intro n; only 1: destruct n; only 1: now try destruct p; only 1: now try destruct p; only 1: split; only 1: simpl; only 1: auto with zarith; only 1: auto with zarith).	1.89132499695	1655
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.0479071140289	2
Coq.micromega.EnvRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0520949363708	2
Coq.micromega.EnvRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0360560417175	1
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	45	search with cache (only 1: firstorder).	1.01791501045	1036
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	0.1.5.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.180781841278	53
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	21.1359860897	3472
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	1.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	5.01127481461	1206
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0637488365173	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.2	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0741319656372	7
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.0.11	search with cache (only 1: induction M; only 1: Esimpl; only 1: Esimpl; only 1: Esimpl).	0.785623073578	188
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0399649143219	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0415198802948	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0391709804535	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0802638530731	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	1	search with cache (only 1: exact (SORlt_wd sor)).	0.0417940616608	2
Coq.micromega.RingMicromega.rminus_morph_Proper	40	0.0.0.0.2	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0824730396271	7
Coq.micromega.RingMicromega.cleb_sound	40	16.5.13	search with cache (only 1: intro; only 1: intro; only 1: firstorder).	4.67543888092	3390
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40	8.2	search with cache (only 1: fix gcd_divide 1; only 1: auto with arith).	0.535325050354	302
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.3.2.0.5	search with cache (only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	0.224226951599	389
Coq.micromega.Refl.make_impl_map	40	5.4.0	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	0.483017921448	321
Coq.micromega.Refl.make_conj_cons	40	0.0.2.0.1.0.10	search with cache (only 1: destruct l as [| x xs]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: auto; only 1: auto).	1.86086320877	2448
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40	0.0.2.0.1.1.1.7.1.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto; only 1: firstorder; only 1: subst; only 1: auto).	31.6913640499	38702
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0858099460602	5
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	21	search with cache (only 1: exact RTheory).	5.16522407532	5667
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	5.6.1	search with cache (only 1: intro; only 1: rewrite Rmult_comm; only 1: field).	1.26284408569	534
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	7.1.4.1.36	search with cache (only 1: symmetry; only 1: unfold IZR; only 1: unfold Qinv, Q2R, Qeq; only 1: simpl; only 1: field).	2.51011109352	1788
Coq.micromega.RMicromega.Q2R_1	40	0.2.12.15	search with cache (only 1: unfold IZR, IPR; only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qden, Qnum; only 1: field).	33.0034229755	18096
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	0.2.0.0.1.0.7.2.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: now try N.order'; only 1: intros; only 1: easy; only 1: congruence; only 1: simpl; only 1: intros; only 1: now induction n).	8.55135297775	6182
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40	0.0.0.0.1.0.0.0.0.0.3.0.0.0.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: compute; only 1: intuition subst; try ring; auto with real; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHp; only 1: repeat rewrite Q2R_mult; only 1: reflexivity; only 1: simpl; only 1: auto).	7.57154011726	3883
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.198981046677	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40	0.6.3	search with cache (only 1: intro; only 1: fix odd_equiv 1; only 1: tauto).	0.778081178665	289
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	2.5	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.0560159683228	41
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0559449195862	36
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0202100276947	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	0.1.0.3.5.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: now intros []; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: auto).	1.19512891769	1385
Coq.rtauto.Bintree.Lget_app_Some	40	0.1.7.0.2.7.4	search with cache (only 1: induction l; only 1: inversion 1; only 1: intro; only 1: simpl; only 1: intros [| i]; only 1: auto; only 1: auto).	17.6386089325	19371
Coq.rtauto.Bintree.Tget_Tempty	40	0	search with cache (only 1: now intros []).	0.0136539936066	1
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	1	search with cache (only 1: now intros []).	0.0250990390778	2
Coq.rtauto.Bintree.get_Full_Gt	40	5.9.9	search with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: firstorder).	3.13884711266	4719
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.6.7.25	search with cache (only 1: inversion 1; only 1: contradict H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	9.47967290878	20704
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40	0.3.29	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.816986083984	1731
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.11	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.0829968452454	96
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	0.1.28	search with cache (only 1: intro Pdec; only 1: fix sqrtrem_spec 1; only 1: auto).	3.47408485413	5194
Coq.rtauto.Rtauto.compose1	40	2.0.0.9.0.0.9.0	search with cache (only 1: induction F; only 1: simpl; only 1: tauto; only 1: intros A H; only 1: induction F; only 1: simpl; only 1: auto; only 1: firstorder).	4.21202301979	5866
Coq.rtauto.Rtauto.compose2	40	5.2.4.0.1.1.0	search with cache (only 1: induction F; only 1: intros A H; only 1: auto; only 1: intros A H; only 1: intros; only 1: simpl; only 1: firstorder).	2.4210050106	3616
Coq.rtauto.Rtauto.compose3	40	7.0.0.3.0	search with cache (only 1: induction F; only 1: auto; only 1: intros A B C H; only 1: simpl; only 1: firstorder).	3.04782891273	1527
Coq.rtauto.Rtauto.weaken	40	2.12.4.3	search with cache (only 1: intros A H; only 1: simpl; only 1: fix sqrtrem_spec 1; only 1: auto).	30.6510848999	21108
Coq.rtauto.Rtauto.project_In	40	2.1.16	search with cache (only 1: intros S W; only 1: fix sqrtrem_spec 1; only 1: auto).	3.27801394463	3832
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40	0.6.17.10.4	search with cache (only 1: intros H; only 1: intros [index0 contents0] F; only 1: fix even_spec 1; only 1: intros; only 1: auto).	9.31776809692	20153
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	3.3.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	1.11784386635	22
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	3.2.0	search with cache (only 1: simpl; only 1: intros; only 1: constructor).	0.106344938278	8
Coq.nsatz.Nsatz.Rext	40	0.0.0.8	search with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.482183933258	37
Coq.nsatz.Nsatz.Rset	40	0.0	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.0706570148468	2
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	0.0.0.0.0.0.0.1	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.143753051758	9
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	search with cache (only 1: exact R1_neq_R0).	0.117122888565	1
Coq.nsatz.Nsatz.Rcri	40	0.17	search with cache (only 1: vm_compute; only 1: exact Rmult_comm).	0.207624197006	145
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.147578001022	2
Coq.nsatz.Nsatz.Qcri	40	0.0.0.21.0.3.1.7.4	search with cache (only 1: red; only 1: intro H2; only 1: intros; only 1: apply Qeq_sym; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	13.5587999821	10166
Coq.nsatz.Nsatz.Qdi	40	2.5.0.0.0.1.1.0	search with cache (only 1: constructor; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r; only 1: intros Hfalse; only 1: discriminate || simpl).	17.9021589756	2188
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.146162986755	1
Coq.nsatz.Nsatz.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.122776985168	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.145812034607	1
Coq.omega.OmegaLemmas.Zred_factor1	40	5.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl).	0.195242166519	8
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	search with cache (only 1: now Z.nzsimpl).	2.06961107254	102
Coq.omega.OmegaLemmas.Zred_factor4	40	13.9	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	3.59443116188	1092
Coq.omega.OmegaLemmas.Zred_factor5	40	2	search with cache (only 1: now Z.nzsimpl).	0.140516042709	3
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.0530679225922	1
Coq.omega.OmegaLemmas.new_var	40	0.11	search with cache (only 1: intro n; only 1: now exists n).	0.102654933929	68
Coq.omega.OmegaLemmas.OMEGA1	40	2.6	search with cache (only 1: intros; only 1: Z.order).	0.0478231906891	14
Coq.omega.OmegaLemmas.OMEGA2	40	2.7.1.0.5	search with cache (only 1: destruct x; only 1: auto; only 1: simpl; only 1: easy || now destruct y; only 1: easy).	8.1796579361	1032
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	7.0.25	search with cache (only 1: intros ->; only 1: intros EQ; only 1: now subst).	3.83049607277	1885
Coq.omega.OmegaLemmas.OMEGA6	40	10.3.6.0.5.16	search with cache (only 1: destruct x; only 1: intro EQ; only 1: now intros ->; only 1: intros LT -> EQ; only 1: discriminate; only 1: now Z.nzsimpl).	17.6704399586	4360
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	8.7.0	search with cache (only 1: symmetry; only 1: subst; only 1: now destruct y).	2.43870210648	1712
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.043154001236	3
Coq.omega.OmegaLemmas.OMEGA12	40	2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0471348762512	4
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.261809110641	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.1.1.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.156105041504	14
Coq.omega.OmegaLemmas.OMEGA16	40	0.8	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.130183935165	10
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0960609912872	2
Coq.omega.OmegaLemmas.OMEGA18	40	1.3.6.10.0	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: contradict H; only 1: subst; only 1: now Z.nzsimpl).	3.84171700478	1565
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.1380610466	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	0.0.1.10.8.0	search with cache (only 1: symmetry; only 1: rewrite H; only 1: destruct x; only 1: trivial; only 1: auto with relations; only 1: auto with relations).	4.29115200043	3633
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0168950557709	6
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.0.3.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0223071575165	15
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0157980918884	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0682451725006	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0665769577026	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0740809440613	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	search with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0884118080139	3
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	0.0.1.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert q; only 1: induction p; only 1: destruct q; only 1: simpl; only 1: rewrite ?IHp; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct q; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: rewrite ?IHp; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: destruct q; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	8.44754505157	6102
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	0.0.0.1.0.0.0.1	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.121834039688	23
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.0.23	search with cache (only 1: inversion 1; only 1: simpl; only 1: trivial).	5.36153483391	839
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	0	search with cache (only 1: reflexivity).	0.00997495651245	1
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	8.5	search with cache (only 1: constructor; only 1: auto with arith).	0.260514974594	288
Coq.funind.Recdef.Splus_lt	40	3.14	search with cache (only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.109352111816	151
Coq.funind.Recdef.SSplus_lt	40	9.1	search with cache (only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.138397932053	123
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0161080360413	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.0.2	search with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: discriminate).	0.0122671127319	5
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	3	search with cache (only 1: trivial).	0.0108740329742	4
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.00821685791016	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	1.1.2.0.0.0.0.0.0	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rewrite IHP1; only 1: Esimpl).	39.4446690083	651
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	6.0.0.2	search with cache (only 1: intro P2; only 1: intros; only 1: simpl; only 1: Esimpl).	1.48816680908	105
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.6251718998	54
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.31	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.84247016907	1068
Coq.setoid_ring.Ring.bool_eq_ok	40	0	search with cache (only 1: destr_bool).	0.0368008613586	1
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0322051048279	1
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0326988697052	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0317690372467	2
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	2	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0695829391479	3
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	2	search with cache (only 1: trivial).	0.0737841129303	3
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0399839878082	1
Coq.setoid_ring.Field_theory.rsub_0_l	40	1	search with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.0806648731232	2
Coq.setoid_ring.Field_theory.rsub_0_r	40	3.0	search with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	0.0865490436554	5
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40	0.1.3.0.7	search with cache (only 1: intros LT; only 1: rewrite rdiv_def, rmul_comm; only 1: intros; only 1: rewrite H; only 1: apply rmul_0_r).	4.5403008461	1028
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40	3.0.0.0.0.0.0	search with cache (only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: rewrite Pos.add_comm; only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.119043111801	16
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.091413974762	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0925431251526	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	4.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.121252059937	8
Coq.setoid_ring.Field_theory.PEpow_0_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.0984299182892	3
Coq.setoid_ring.Field_theory.PEpow_1_r	40	6.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.0880210399628	13
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	9.2.2.0	search with cache (only 1: destruct l1; only 1: trivial; only 1: simpl; only 1: tauto).	9.02322793007	2929
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	4.3.0.0.0	search with cache (only 1: destruct l1; only 1: reflexivity; only 1: simpl; only 1: destruct 1; only 1: trivial).	0.857300043106	150
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	7.2	search with cache (only 1: intros; only 1: now destruct 1).	0.355618000031	107
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40	3.16	search with cache (only 1: fix even_spec 1; only 1: trivial).	18.5022850037	3725
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.042515039444	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.041925907135	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0403459072113	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	1.0.0.1.1.2	search with cache (only 1: constructor; only 1: congruence; only 1: intros x y; only 1: symmetry; only 1: auto; only 1: congruence).	0.0929780006409	43
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	1.1.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0731060504913	5
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40	3	search with cache (only 1: firstorder).	0.0407800674438	4
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.0.0.0.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.185426950455	49
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	18.2.3.9	search with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intuition).	8.54099297523	4056
Coq.setoid_ring.Rings_R.R_one_zero	40	1	search with cache (only 1: exact R1_neq_R0).	0.1146941185	20
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	5	search with cache (only 1: reflexivity).	0.0129818916321	6
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	45	search with cache (only 1: now rewrite ?H, ?IHp).	0.603069067001	1276
Coq.setoid_ring.Ring_theory.IDmorph	40	3.2.2.3.3.5.5.39	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: auto).	1.16736006737	3708
Coq.setoid_ring.Ring_theory.Eqsth	40	7	search with cache (only 1: intuition).	0.0354580879211	8
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	19.5	search with cache (only 1: intuition; only 1: simpl_relation).	0.784621953964	924
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0792500972748	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	52.6	search with cache (only 1: intros LT; only 1: firstorder).	19.437664032	29735
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2	search with cache (only 1: auto).	0.0241367816925	3
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.1.0.4	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.0498039722443	13
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	4	search with cache (only 1: solve_proper).	0.0200259685516	5
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0192699432373	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0170259475708	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	2.4.1.1.1.1.2.2.8	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros; only 1: firstorder).	1.25942611694	1584
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	3	search with cache (only 1: firstorder).	0.0407350063324	11
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	15.0	search with cache (only 1: intros x y H; only 1: simpl_relation).	0.322747945786	233
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	8.28	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: firstorder).	4.44109106064	6901
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	9.12	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: firstorder).	0.610857963562	1096
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	14.2	search with cache (only 1: intros x y H; only 1: firstorder).	0.48558306694	427
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	0.3	search with cache (only 1: intros a b H; only 1: auto).	0.0287840366364	5
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	0.29.38	search with cache (only 1: cut (1%positive = 1%positive); only 1: CRelationClasses.simpl_crelation; only 1: trivial).	5.90345788002	9212
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0179789066315	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0289709568024	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00846195220947	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00872206687927	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00733208656311	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	5	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0256650447845	12
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.00910496711731	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.2.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0130290985107	6
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0158689022064	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (SRmul_ext SReqe)).	0.0170969963074	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00838088989258	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00794696807861	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00776314735413	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.01069688797	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.098207950592	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.2.1.0	search with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: simpl; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	0.0227620601654	8
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0133531093597	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0170950889587	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0128650665283	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	1	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0192129611969	2
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	0.0.0.7	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.377151966095	24
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.0523228645325	2
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	3	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0769419670105	11
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0435750484467	1
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	1.0.2.0.0.0.2	search with cache (only 1: unfold Pequiv; only 1: red; only 1: red; only 1: red; only 1: induction 1; only 1: intros; only 1: now symmetry).	1.25492715836	458
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	12.4	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	4.37541413307	867
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	10.6808311939	1999
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	4.83297801018	965
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40	5.3.21.1	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: easy).	5.05671405792	2924
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40	9.9	search with cache (only 1: fix even_spec 1; only 1: auto).	4.24804210663	1804
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	1.1	search with cache (only 1: intro x; only 1: reflexivity).	0.0257649421692	11
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.0.0	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0362551212311	4
Coq.setoid_ring.Ncring.ring_add_assoc1	40	0.3.13.1	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	3.7253241539	1413
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.0446879863739	8
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.11.2	search with cache (only 1: intros; only 1: pose proof (Zeq_bool_eq x y H) as H1; only 1: auto).	0.491796016693	233
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.4.3.3.7.6	search with cache (only 1: unfold Qeq; only 1: intros H; only 1: red; only 1: red; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	4.92216706276	1622
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0510680675507	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00650787353516	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : {}k {}).	0.00620007514954	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.1	search with cache (only 1: destruct 1; only 1: auto).	0.0112681388855	3
Coq.ssr.ssreflect.iffLR	40	2.2	search with cache (only 1: intro H1; only 1: tauto).	0.0387649536133	6
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00637412071228	1
Coq.ssr.ssreflect.iffLRn	40	5	search with cache (only 1: tauto).	0.0206160545349	12
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.00572395324707	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0075318813324	1
Coq.ssr.ssrbool.is_true_true	40
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: by [  ]).	0.00656914710999	1
Coq.ssr.ssrbool.is_true_locked_true	40
Coq.ssr.ssrbool.negbT	40	0.1.2	search with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0470650196075	6
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00611400604248	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00615215301514	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00575399398804	1
Coq.ssr.ssrbool.negbK	40	1	search with cache (only 1: by case).	0.00709009170532	2
Coq.ssr.ssrbool.negbNE	40	2	search with cache (only 1: by case : {}b {}).	0.0449211597443	3
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	8	search with cache (only 1: Bool.destr_bool).	0.0166940689087	13
Coq.ssr.ssrbool.negbRL	40	6	search with cache (only 1: Bool.destr_bool).	0.0159201622009	12
Coq.ssr.ssrbool.contra	40	2.15	search with cache (only 1: Bool.destr_bool; only 1: tauto).	0.147572994232	148
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0105798244476	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0114221572876	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0112810134888	1
Coq.ssr.ssrbool.contraT	40	9.18	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.916024923325	597
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00732588768005	1
Coq.ssr.ssrbool.contraFT	40	4.18	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.618166923523	365
Coq.ssr.ssrbool.contraFN	40	4.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	11.1229889393	241
Coq.ssr.ssrbool.contraTF	40	2.14.9	search with cache (only 1: intros; only 1: Bool.destr_bool; only 1: intuition).	33.3103270531	484
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	1	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.140742063522	2
Coq.ssr.ssrbool.ifT	40	4	search with cache (only 1: by move {+}->).	0.149964094162	13
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move {+}->).	0.0758299827576	1
Coq.ssr.ssrbool.ifN	40	5	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0139620304108	6
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.506272792816	3
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.270004034042	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.13427901268	1
Coq.ssr.ssrbool.if_arg	40	1	search with cache (only 1: by case b).	0.00595092773438	2
Coq.ssr.ssrbool.ifE	40	3	search with cache (only 1: trivial).	0.0827679634094	4
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.279597997665	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.00897097587585	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by move {+}<-; case Hb).	0.102435827255	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	4.4.21	search with cache (only 1: destruct 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	4.89801692963	1075
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.7	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.0450568199158	9
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	14	search with cache (only 1: by case).	1.45918798447	75
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40	1.8.25.23	search with cache (only 1: split; only 1: intros H ?; only 1: intros; only 1: auto).	17.956401825	2282
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0100879669189	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0999710559845	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0144510269165	1
Coq.ssr.ssrbool.pair_andP	40	6	search with cache (only 1: intuition).	0.318346977234	7
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00539708137512	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00500106811523	1
Coq.ssr.ssrbool.negP	40	1	search with cache (only 1: by case b1; constructor).	0.0082790851593	2
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00748586654663	1
Coq.ssr.ssrbool.negPf	40	23	search with cache (only 1: by case b1; constructor).	1.3274769783	255
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0153079032898	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0192019939423	1
Coq.ssr.ssrbool.implyP	40	2	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0140161514282	3
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.00599408149719	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.00682210922241	1
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.0768930912018	2
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.00863909721375	1
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.0113880634308	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00913596153259	1
Coq.ssr.ssrbool.andbAC	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0334959030151	2
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0105550289154	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: by [  ]).	0.00520586967468	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00551104545593	1
Coq.ssr.ssrbool.orbT	40	2.3	search with cache (only 1: intuition; only 1: by case : {}b {}).	0.00904893875122	7
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.00710701942444	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00555396080017	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00674700737	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0101299285889	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0106678009033	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0161218643188	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0193541049957	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: by case : {}b {}).	0.130201101303	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.0761411190033	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : {}b {}).	0.031998872757	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.026093006134	1
Coq.ssr.ssrbool.andb_orl	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.014251947403	3
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0134601593018	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0144200325012	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.01145195961	1
Coq.ssr.ssrbool.andb_idl	40	5.23	search with cache (only 1: Bool.destr_bool; only 1: intuition).	9.00972294807	435
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.588673830032	1
Coq.ssr.ssrbool.andb_id2l	40	2.2.4	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	2.96361899376	28
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.634495973587	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0821099281311	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0734879970551	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.17483997345	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.106182098389	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0910260677338	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00850486755371	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00817513465881	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0101380348206	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00844407081604	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0082540512085	1
Coq.ssr.ssrbool.implybT	40	1	search with cache (only 1: by case : {}b {}).	0.00738096237183	2
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.0073299407959	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.00612902641296	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.0289120674133	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.00785493850708	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00813412666321	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00794911384583	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0827720165253	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00759506225586	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00747513771057	1
Coq.ssr.ssrbool.implyb_idl	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.422137975693	2
Coq.ssr.ssrbool.implyb_idr	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.361327886581	3
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.123275995255	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00648999214172	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0108330249786	1
Coq.ssr.ssrbool.addbb	40	0	search with cache (only 1: by case).	0.0114991664886	1
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0129549503326	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.013197183609	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0129699707031	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0120680332184	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0180790424347	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.009596824646	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0100228786469	1
Coq.ssr.ssrbool.addKb	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0138092041016	4
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00986289978027	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0170919895172	2
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0354228019714	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.0174429416656	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0120689868927	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00905990600586	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00869107246399	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.0266799926758	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	1	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.00947713851929	2
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0344939231873	5
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: by [  ]).	0.00595903396606	1
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.00705909729004	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	search with cache (only 1: by [  ]).	0.0103039741516	1
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	2	search with cache (only 1: by [  ]).	0.0871810913086	3
Coq.ssr.ssrbool.in1W	40	3.2.1	search with cache (only 1: Bool.destr_bool; only 1: move  {}=>f0 fP; only 1: by [  ]).	0.191676139832	9
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0412659645081	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00867700576782	1
Coq.ssr.ssrbool.in1T	40	6.1	search with cache (only 1: Bool.destr_bool; only 1: auto with bool).	0.0759720802307	9
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.017452955246	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0174560546875	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0180139541626	2
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.55205988884	3
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  {}=>? ?; auto).	1.60724782944	4
Coq.ssr.ssrbool.on1W	40	1	search with cache (only 1: by move  {}=>? ?).	1.62847590446	2
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.620549917221	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.158080101013	1
Coq.ssr.ssrbool.on1T	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.193679094315	3
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0175218582153	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0173318386078	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.39191198349	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	1.21678686142	1
Coq.ssr.ssrbool.subon2	40	2	search with cache (only 1: by move  {}=>? ?; auto).	1.14542293549	3
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	1.08290886879	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.352756023407	1
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.314872980118	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.732169866562	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.459398984909	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0192310810089	1
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.70766711235	1
Coq.ssr.ssrbool.sub_in2	40	29.15.24	search with cache (only 1: Bool.destr_bool; only 1: move  {}=>f0 fP; only 1: auto).	7.66454696655	2973
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40	1.15	search with cache (only 1: move  {}=>f0 fP; only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	3.01731300354	127
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.099454164505	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	2	search with cache (only 1: by move  {}=>eq_fg eq_gh x; rewrite eq_fg).	0.0122158527374	3
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0476939678192	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.856117963791	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	2	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.0432260036469	3
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.743989944458	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	search with cache (only 1: firstorder).	0.00365400314331	2
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40	0.1	search with cache (only 1: intro H1; only 1: reflexivity).	0.0683238506317	3
Coq.ssr.ssrfun.fsym	40	13.5	search with cache (only 1: intros H ?; only 1: by [  ]).	0.221606969833	250
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: by [  ]).	0.04669713974	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0224449634552	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.218421936035	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.0820050239563	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0551719665527	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	1.65470409393	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.25385093689	2
Coq.ssr.ssrfun.canLR	40	0.13.5	search with cache (only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: trivial).	11.4863960743	439
Coq.ssr.ssrfun.canRL	40	7.13	search with cache (only 1: destruct 2; only 1: auto).	6.41649603844	270
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	14	search with cache (only 1: by case).	1.65786099434	75
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	0	search with cache (only 1: by move  {}=>eq_fg x).	0.061163187027	1
Coq.ssr.ssrfun.inj_can_sym	40	2.9.10	search with cache (only 1: intros Hfst Hsnd; only 1: intro H; only 1: auto).	0.458472967148	467
Coq.ssr.ssrfun.inj_comp	40	15.15.23.9	search with cache (only 1: intros Hfst Hsnd; only 1: intros H ?; only 1: intros; only 1: intuition).	2.87818694115	4642
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.1	search with cache (only 1: intros; only 1: trivial).	0.00870418548584	3
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.0250899791718	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0254271030426	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.0203938484192	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.0472581386566	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.3.2.9	search with cache (only 1: intros n v le le'; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial).	0.629406929016	1174
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40	1.0.27.5	search with cache (only 1: generalize dependent n; only 1: fix odd_spec 1; only 1: intros; only 1: now f_equal).	2.11482191086	2802
Coq.Vectors.VectorSpec.shiftrepeat_nth	40	3.26	search with cache (only 1: fix odd_spec 1; only 1: now simpl).	14.0264010429	6207
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.1.1.0.1.0	search with cache (only 1: intros n v; only 1: revert n v; only 1: intros n v; only 1: revert n v; only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0319769382477	14
Coq.Vectors.VectorSpec.const_nth	40	0.1.2.3	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.0263030529022	10
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.2.0.3.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: intro H; only 1: simpl; only 1: trivial).	0.0259940624237	10
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	3.0.2.1.13.0.8	search with cache (only 1: intros f Hf; only 1: intros n v le le'; only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: apply f_equal; only 1: trivial).	7.45572209358	11889
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.123046875	9
Coq.Vectors.VectorSpec.uncons_cons	40	0	search with cache (only 1: now simpl).	0.0182499885559	1
Coq.Vectors.VectorSpec.append_comm_cons	40	0	search with cache (only 1: reflexivity).	0.0311369895935	1
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	5.7.0.0.16	search with cache (only 1: induction n; only 1: trivial; only 1: PeanoNat.Nat.nzsimpl; only 1: right; only 1: trivial).	1.10670995712	951
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	2.1.7	search with cache (only 1: intros m n p; only 1: intros <-; only 1: trivial).	0.292906999588	563
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0305669307709	1
Coq.Setoids.Setoid.Seq_sym	40	0	search with cache (only 1: firstorder).	0.0314791202545	1
Coq.Setoids.Setoid.Seq_trans	40	0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: firstorder).	0.235202074051	3
Coq.Setoids.Setoid.gen_st	40	1.1	search with cache (only 1: reduce; only 1: simpl_relation).	0.0352549552917	4
Coq.Bool.IfProp.Iftrue_inv	40	2.7.0.1	search with cache (only 1: destruct 1; only 1: intuition; only 1: intros; only 1: discriminate).	0.229211091995	303
Coq.Bool.IfProp.Iffalse_inv	40	0.0.1.2.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: assumption).	0.0113909244537	9
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.012542963028	3
Coq.Bool.IfProp.IfProp_or	40	0.0.0.0.3.0	search with cache (only 1: intros; only 1: inversion H; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.103863954544	108
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.3.6.1	search with cache (only 1: intros a H; only 1: subst a; only 1: simpl; only 1: trivial).	0.0529041290283	149
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: inversion 1).	0.0113189220428	5
Coq.Bool.Zerob.zerob_false_intro	40	0.2.0.2	search with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: trivial).	0.0251739025116	40
Coq.Bool.Zerob.zerob_false_elim	40	4.0.2.0	search with cache (only 1: destruct n; only 1: simpl; only 1: now try Nat.order'; only 1: easy).	0.0405580997467	32
Coq.Bool.DecBool.ifdec_left	40	3.4.0.6.4.2	search with cache (only 1: intro A; only 1: intros; only 1: destruct H; only 1: repeat split; only 1: apply False_rec; only 1: auto).	0.92311501503	3573
Coq.Bool.DecBool.ifdec_right	40	0.11.0.0	search with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.341625928879	835
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.031445980072	3
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0302619934082	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0150918960571	7
Coq.Bool.Sumbool.sumbool_not	40	1.1.0.0.3	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: auto).	0.0564930438995	85
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	0	search with cache (only 1: discriminate).	0.0147070884705	1
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00844597816467	1
Coq.Bool.Bool.eq_true_false_abs	40
Coq.Bool.Bool.not_true_is_false	40	1.4.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.0125589370728	8
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0116860866547	3
Coq.Bool.Bool.not_true_iff_false	40	0.0.4.1	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0674221515656	96
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0399160385132	3
Coq.Bool.Bool.leb_implb	40	4.4.2	search with cache (only 1: split; only 1: destr_bool; only 1: destr_bool).	0.280410051346	254
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.0244109630585	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.0257720947266	1
Coq.Bool.Bool.eqb_prop	40	0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: intuition; only 1: intuition; only 1: repeat split).	0.0287470817566	5
Coq.Bool.Bool.eqb_true_iff	40	0.1.3.0.0	search with cache (only 1: split; only 1: intros; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.0271461009979	9
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.121037960052	18
Coq.Bool.Bool.negb_orb	40	0.0	search with cache (only 1: intuition; only 1: destr_bool).	0.0288000106812	2
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0151839256287	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.0130870342255	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.0134150981903	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0157318115234	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.0188310146332	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.0134599208832	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.0126569271088	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.0130910873413	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0178809165955	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0150780677795	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0274300575256	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0264301300049	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0204939842224	5
Coq.Bool.Bool.orb_prop	40	1.0.1.1.1.0	search with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: simpl; only 1: intuition; only 1: intuition).	0.0219390392303	10
Coq.Bool.Bool.orb_true_intro	40	1.3.2.0	search with cache (only 1: destruct b1; only 1: auto; only 1: destr_bool; only 1: intuition).	0.144603013992	165
Coq.Bool.Bool.orb_false_intro	40	2.0	search with cache (only 1: intros; only 1: destr_bool).	0.0157730579376	4
Coq.Bool.Bool.orb_false_elim	40	1.3	search with cache (only 1: destr_bool; only 1: intuition).	0.0924079418182	113
Coq.Bool.Bool.orb_diag	40	1	search with cache (only 1: destr_bool).	0.0247960090637	2
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.0112888813019	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.0235860347748	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.0215191841125	1
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0196630954742	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0258741378784	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0138511657715	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0262451171875	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0241370201111	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0343608856201	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0162289142609	9
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.019690990448	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0115990638733	3
Coq.Bool.Bool.andb_false_r	40	0	search with cache (only 1: destr_bool).	0.00985503196716	1
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.011617898941	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.024934053421	1
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.028382062912	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.0175271034241	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0145301818848	5
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0117609500885	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.011579990387	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0162489414215	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0199248790741	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0160911083221	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0158679485321	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0161170959473	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0147340297699	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0152199268341	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00977993011475	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.023472070694	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0118720531464	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.0102059841156	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00977516174316	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.013839006424	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.034695148468	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0226330757141	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.114785194397	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0195558071136	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0181331634521	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0179030895233	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0127668380737	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0143389701843	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0127670764923	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0362801551819	6
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.4.1	search with cache (only 1: intuition; only 1: destr_bool; only 1: intuition; only 1: intuition).	0.377820968628	365
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0244112014771	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0152149200439	2
Coq.Bool.Bool.absurd_eq_bool	40	2.2.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0192761421204	7
Coq.Bool.Bool.absurd_eq_true	40	2.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0138788223267	5
Coq.Bool.Bool.trans_eq_bool	40	0	search with cache (only 1: destr_bool).	0.0188648700714	1
Coq.Bool.Bool.Is_true_eq_true	40	2.2	search with cache (only 1: destr_bool; only 1: intuition).	0.0255880355835	6
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.014799118042	1
Coq.Bool.Bool.Is_true_eq_right	40	0	search with cache (only 1: destr_bool).	0.0146899223328	1
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0140488147736	1
Coq.Bool.Bool.eqb_eq	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0197229385376	4
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.0.6.0.1.0.0	search with cache (only 1: intros; only 1: destr_bool; only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: left; only 1: assumption).	0.759722948074	1852
Coq.Bool.Bool.orb_prop_intro	40	5.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0229270458221	7
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.03511095047	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0224330425262	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.023885011673	4
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0169200897217	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0167300701141	4
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0221300125122	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0220551490784	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0230929851532	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.0151278972626	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.0104200839996	1
Coq.Bool.Bool.andb_lazy_alt	40	1	search with cache (only 1: destr_bool).	0.014317035675	2
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.0185310840607	1
Coq.Bool.Bool.reflect_iff	40	0.2.0.0.0.6.1.3	search with cache (only 1: intros; only 1: intuition; only 1: destruct H; only 1: tauto; only 1: tauto; only 1: subst; only 1: inversion_clear H; only 1: assumption).	1.72935390472	3054
Coq.Bool.Bool.iff_reflect	40	9.4.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.394588947296	446
Coq.Bool.Bool.reflect_dec	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: tauto; only 1: unfold not; only 1: tauto).	0.0730412006378	23
Coq.Bool.Bool.eqb_spec	40	0.1.1.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.102383136749	70
Coq.Bool.BoolEq.beq_eq_true	40	0.0	search with cache (only 1: destruct 1; only 1: intuition).	0.030622959137	2
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	1.0.6.0.0.2.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto).	1.04020905495	965
Coq.Lists.ListSet.set_mem_correct2	40	4.2.0.0.0.1.2.0	search with cache (only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: intuition).	5.79839801788	4396
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	1.1.0.0.0.3.0.2.0.0.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: subst; only 1: elim (Aeq_dec b a0); only 1: left; only 1: auto with datatypes; only 1: simpl; only 1: auto with datatypes).	9.56191515923	8561
Coq.Lists.ListSet.set_add_intro	40
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.2.0.0.0.1.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: auto).	6.94008803368	5491
Coq.Lists.ListSet.set_add_not_empty	40	0.8.2.0.0.0.0.1.4	search with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: intros; only 1: discriminate).	4.39635181427	4051
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	0.0.1.0.1.0.0.1.0.0.24	search with cache (only 1: elim l; only 1: simpl; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto with datatypes; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: auto).	9.66334295273	15006
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.3.0.0.1.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.301499128342	124
Coq.Lists.ListSet.set_union_intro	40	0.0.2	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.287651777267	66
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.1.0.0.1.0.1	search with cache (only 1: simple induction x; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	0.779289960861	494
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0217819213867	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	6.1.0.1.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	3.54883503914	1173
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	3.0.0.0.6.0.0.0.1	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: intro Hl'; only 1: simpl; only 1: constructor; only 1: firstorder; only 1: simpl; only 1: destruct (set_mem x l'); only 1: auto; only 1: now apply set_add_nodup).	16.320704937	13825
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	9.0.8.22	search with cache (only 1: red; only 1: elim l; only 1: auto; only 1: firstorder).	29.5372099876	3750
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.4	search with cache (only 1: intros [? ?]; only 1: reflexivity).	0.0104761123657	6
Coq.Lists.Streams.tl_nth_tl	40	0.3.0.1.0.8	search with cache (only 1: induction n; only 1: intro x; only 1: trivial; only 1: intro x; only 1: case x; only 1: trivial).	0.187834024429	566
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	0.11.2.7	search with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: rewrite <- H; only 1: reflexivity).	0.662473917007	2968
Coq.Lists.Streams.trans_EqSt	40	0.5.5.1	search with cache (only 1: intros ? ? ? [? ?] [? ?]; only 1: destruct H; only 1: coinduction ltac:(Eq_sym); only 1: assumption).	0.540313959122	1236
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	0.24.4.11	search with cache (only 1: intros n; only 1: coinduction ltac:(Eq_trans); only 1: auto; only 1: assumption).	0.612001180649	4956
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0129110813141	5
Coq.Lists.Streams.Str_nth_map	40	3.5.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [? ?]; only 1: apply IHn).	0.208445072174	320
Coq.Lists.Streams.ForAll_map	40	4.16.15.1.18.0.0	search with cache (only 1: split; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(Equiv2); only 1: assumption; only 1: intros [? ?]; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: tauto).	19.2560689449	136547
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	4.0.0.0.1	search with cache (only 1: induction n; only 1: intros n s; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0202069282532	19
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0179510116577	6
Coq.Lists.List.nil_cons	40	3.1.2	search with cache (only 1: intro H; only 1: intro n; only 1: congruence).	0.0365149974823	9
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	1.1.0.0.2	search with cache (only 1: destruct l as [| x xs]; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate).	0.044196844101	18
Coq.Lists.List.length_zero_iff_nil	40	2.4.1.16	search with cache (only 1: destruct l; only 1: simpl; only 1: firstorder; only 1: firstorder  discriminate).	0.43607878685	638
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0151288509369	1
Coq.Lists.List.hd_error_cons	40	0.0.0	search with cache (only 1: simpl; only 1: intros; only 1: firstorder  discriminate).	0.0186419487	3
Coq.Lists.List.in_eq	40	0.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.0160629749298	2
Coq.Lists.List.in_cons	40	1.3	search with cache (only 1: simpl; only 1: auto).	0.0184671878815	6
Coq.Lists.List.not_in_cons	40	11	search with cache (only 1: firstorder).	0.253540039062	63
Coq.Lists.List.in_nil	40	1.1	search with cache (only 1: intro n; only 1: firstorder  discriminate).	0.0233941078186	4
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0305969715118	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40	5.0.12.4.0.12	search with cache (only 1: intro n; only 1: intros; only 1: intro H; only 1: induction n; only 1: inversion_clear H; only 1: discriminate).	5.75815796852	16373
Coq.Lists.List.app_nil_l	40	0.1.0	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity).	0.0251741409302	4
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0436911582947	7
Coq.Lists.List.app_assoc	40	1.0.9.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.863498926163	660
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0506319999695	7
Coq.Lists.List.app_comm_cons	40	0.0.0.1.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: auto).	0.113951921463	6
Coq.Lists.List.app_eq_nil	40	0.0.2.3.0	search with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: intros; only 1: auto; only 1: firstorder  discriminate).	0.224708080292	10
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40	1.26.10	search with cache (only 1: intro H; only 1: fix gcd_divide 1; only 1: auto).	22.6743209362	39265
Coq.Lists.List.app_length	40	1.1.0.1.3	search with cache (only 1: induction l as [| a0 l IHl]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.114885807037	51
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	0.1.1.1.0.4.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: firstorder  discriminate; only 1: simpl; only 1: intros a0 y H H0; only 1: elim H0; only 1: intuition; only 1: auto).	1.33669304848	1436
Coq.Lists.List.in_app_iff	40	0.4.0.5.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros y H0 H1; only 1: intuition).	1.23067307472	809
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40	0.1.3.13	search with cache (only 1: fix gcd_divide 1; only 1: intros l m n; only 1: symmetry; only 1: firstorder).	1.58266711235	2256
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0285818576813	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	2.0.0.0.1.0.4.3.3	search with cache (only 1: induction l; only 1: intros a b l H; only 1: now Nat.nzsimpl; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto with arith).	13.0626890659	20378
Coq.Lists.List.app_nth1	40	0.0.4.1.3.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	1.41072201729	1146
Coq.Lists.List.app_nth2	40	0.0.10.0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros l' d [| n]; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: auto with arith).	19.9044260979	22501
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40
Coq.Lists.List.nth_error_app2	40	0.0.1.0.0.3.0.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	1.54671096802	754
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	0.1.0.0.0.1.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: intros; only 1: auto; only 1: simpl; only 1: auto with arith).	0.1959400177	38
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	3	search with cache (only 1: easy).	0.0251231193542	4
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	8.4.1.3	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: now try Nat.order').	3.09436988831	2239
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0227379798889	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.4.3.0.0.1.4	search with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite (IHl y); only 1: auto).	3.3310508728	3266
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.087317943573	33
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0350170135498	2
Coq.Lists.List.concat_cons	40	0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0488090515137	6
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	6	search with cache (only 1: decide equality).	0.0377299785614	26
Coq.Lists.List.map_cons	40	0	search with cache (only 1: auto).	0.0255708694458	1
Coq.Lists.List.in_map	40	0.0.0.2.0.0.2	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder; only 1: subst; only 1: simpl; only 1: auto).	0.425960063934	163
Coq.Lists.List.in_map_iff	40	5.3.2.1.1	search with cache (only 1: induction l; only 1: intros l1; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	1.93781805038	1728
Coq.Lists.List.map_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0258560180664	6
Coq.Lists.List.map_nth	40	0.0.0.6.0.0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto).	5.74339985847	5650
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.8.0.0.1.0	search with cache (only 1: induction l; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.26708698273	1018
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	3.0.2	search with cache (only 1: induction l; only 1: auto; only 1: firstorder  discriminate).	0.0275819301605	12
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.3.0.0.0.16	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.975701093674	813
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0247070789337	8
Coq.Lists.List.map_map	40	0.6.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.855062961578	555
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.0.1.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0346360206604	8
Coq.Lists.List.fold_left_app	40	0.1.0.2	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0756888389587	46
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.9.0.1.1.1	search with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).	6.5529551506	5452
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40	1.5	search with cache (only 1: fix even_spec 1; only 1: firstorder  (subst; auto)).	0.437847137451	98
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40	8.7.2.0.0.0.4.8	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IH; only 1: intuition).	22.9831118584	25639
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.601009130478	322
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	0.0.0.1.2.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	1.00519704819	649
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	2.0.2.0.2.1.0.0.6	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	6.45169711113	2680
Coq.Lists.List.find_none	40	3.0.1.2.0.2.0.0.0.2	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: case_eq (f a); only 1: intuition; only 1: congruence; only 1: congruence; only 1: intuition; only 1: congruence).	10.3824830055	5645
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0197780132294	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	1.4.4.3.0.2.0.2.0	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	8.10010099411	8556
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.0.5.2.1.0.0.0.0	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	6.92238497734	4860
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0234999656677	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.1.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	12.1974241734	7240
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0673270225525	9
Coq.Lists.List.split_combine	40	0.2.1.1.10.2.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: f_equal; only 1: auto).	4.02191209793	6646
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40	0.0.3.1.3.0.0.1.0	search with cache (only 1: induction l, l'; only 1: auto; only 1: auto; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: firstorder; only 1: injection H; only 1: auto).	11.4858000278	8289
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.0.0.0.13.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct l'; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	15.3949351311	12201
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	0.1.0.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: subst; only 1: auto).	0.697354078293	81
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	25	search with cache (only 1: left).	0.45729804039	382
Coq.Lists.List.lel_trans	40	14.11.0	search with cache (only 1: unfold lel; only 1: intuition; only 1: Nat.Private_Tac.order).	5.61081600189	7142
Coq.Lists.List.lel_cons_cons	40	0.2.0.2	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.038379907608	8
Coq.Lists.List.lel_cons	40	0.0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto).	0.0221500396729	4
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0215280056	3
Coq.Lists.List.lel_nil	40	7.0.6	search with cache (only 1: destruct l' as [| y l']; only 1: auto; only 1: now f_equal).	0.60849404335	344
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: auto).	0.0176510810852	1
Coq.Lists.List.incl_tl	40	4.12	search with cache (only 1: intros a' y H H0; only 1: intuition).	0.660575151443	230
Coq.Lists.List.incl_tran	40	2	search with cache (only 1: auto).	0.0213990211487	3
Coq.Lists.List.incl_appl	40	4.3	search with cache (only 1: intros l m a; only 1: intuition).	0.0321180820465	9
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.023118019104	1
Coq.Lists.List.incl_cons	40	16.7	search with cache (only 1: intros l m a; only 1: firstorder  (subst; auto)).	3.1058280468	2844
Coq.Lists.List.incl_app	40	12.0.1.4.4.2	search with cache (only 1: intros l m a; only 1: unfold incl; only 1: elim l; only 1: auto with arith; only 1: simpl; only 1: intuition).	20.2514841557	8742
Coq.Lists.List.firstn_nil	40	0.0.0.0.15	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.280742883682	176
Coq.Lists.List.firstn_cons	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0398290157318	3
Coq.Lists.List.firstn_all	40	0.0.0.0.0.7	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.150650978088	71
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0.0.0	search with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: auto).	0.0425992012024	3
Coq.Lists.List.firstn_le_length	40	0.0.0.2.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.212696790695	21
Coq.Lists.List.firstn_length_le	40	2.0.0.0.6.3.0.3.0.0	search with cache (only 1: induction l; only 1: intros; only 1: induction n; only 1: auto; only 1: now f_equal; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	26.1367609501	21667
Coq.Lists.List.firstn_app	40	0.6.0.0.2.1.1	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.26359200478	1156
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40	0.9	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.190570116043	116
Coq.Lists.List.firstn_skipn_comm	40	0.1.2.33	search with cache (only 1: fix gcd_greatest 1; only 1: intros [| a] b; only 1: auto; only 1: auto).	11.6569218636	13612
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0378510951996	1
Coq.Lists.List.skipn_nil	40	0.0.0.2	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0454740524292	6
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.046441078186	1
Coq.Lists.List.skipn_none	40	0.0.0.0.4	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0532398223877	16
Coq.Lists.List.skipn_all2	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: inversion 1 as [H1| ?]; only 1: rewrite (length_zero_iff_nil l) in H1; only 1: subst; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	1.91914010048	965
Coq.Lists.List.firstn_skipn	40	0.2.0.0.0.1.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.63641214371	716
Coq.Lists.List.firstn_length	40	0.0.0.0.3.0.8	search with cache (only 1: induction n; only 1: auto; only 1: destruct l; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	1.45457696915	1142
Coq.Lists.List.skipn_length	40
Coq.Lists.List.skipn_all	40	0.0.0.0.2	search with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0314638614655	7
Coq.Lists.List.skipn_app	40	0.0.0.1.2.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.61691093445	799
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2	search with cache (only 1: now intros []).	0.0226640701294	3
Coq.Lists.List.combine_firstn_l	40	0.0.0.0.0.3.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.85544896126	1125
Coq.Lists.List.combine_firstn_r	40	0.1.0.0.0.0.3.6.0	search with cache (only 1: induction l as [| x l IHl]; only 1: now intros []; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	3.36737895012	3465
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	2.0.2.18	search with cache (only 1: induction 1; only 1: now constructor; only 1: simpl; only 1: firstorder).	25.6996490955	15022
Coq.Lists.List.Add_length	40	0.1.0.0.7	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.296638011932	202
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0394339561462	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0532100200653	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	0.1.0.0.0.0.1.5	search with cache (only 1: intro n; only 1: induction n; only 1: intros; only 1: simpl; only 1: Nat.order_nz; only 1: intros; only 1: simpl; only 1: auto).	0.70231294632	531
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	6.1.0.0.1.2.5	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: now intros []; only 1: simpl; only 1: intros x; only 1: now f_equal).	3.68421912193	3342
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	1.3	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0771551132202	18
Coq.Lists.List.Exists_cons	40	5.1.0.5.3	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	1.07072496414	680
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.1.2.2.0.0.0.4	search with cache (only 1: split; only 1: induction 1; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	4.38523983955	2814
Coq.Lists.List.Forall_inv	40	0.0.6	search with cache (only 1: intros a H; only 1: inversion 1; only 1: auto).	0.0356030464172	26
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	0.3.0.1.1.1.0.3.1.1	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: auto; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	9.00788998604	7185
Coq.Lists.List.Forall_inv_tail	40	0.1.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0354690551758	6
Coq.Lists.List.Exists_impl	40	3.3.1.14.3.2	search with cache (only 1: intros f g H l; only 1: induction 1; only 1: specialize (H x); only 1: firstorder; only 1: now apply Exists_cons_hd; only 1: now constructor).	7.41558003426	11199
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.0867021083832	10
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	0.0.0.0.1.2.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.116588115692	31
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.0207381248474	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.1.3.2.2.0.0.4.1	search with cache (only 1: induction l1; only 1: induction l1'; only 1: simpl; only 1: auto; only 1: firstorder; only 1: inversion H; only 1: inversion_clear 1; only 1: simpl; only 1: auto).	8.57450890541	7985
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.1.0.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.158993959427	9
Coq.Lists.List.repeat_spec	40	0.0.3.0.1.0.4	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct 1; only 1: auto; only 1: auto).	0.62455701828	263
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: auto).	0.0181419849396	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	6.0.1.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intuition).	3.07290697098	1100
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.2.0.1.4	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	2.37536501884	964
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.2.2.2.30	search with cache (only 1: induction l as [| y l]; only 1: reflexivity; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).	21.9253780842	10861
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40	1.18.6.4	search with cache (only 1: intuition; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	25.5886230469	14331
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0224878787994	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.1.2.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.0336618423462	9
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: eauto; only 1: auto).	0.0323340892792	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	1.0.0.6.0.0.2.1	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto).	3.77038311958	3957
Coq.Lists.SetoidList.InA_cons	40	2.0.0.1.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	0.0629789829254	9
Coq.Lists.SetoidList.InA_nil	40	0.1	search with cache (only 1: intuition; only 1: inversion_clear H).	0.176856040955	19
Coq.Lists.SetoidList.InA_alt	40	0.0.1.0.2.1.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.11542510986	890
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	6	search with cache (only 1: inversion 1).	0.060497045517	26
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.5.0.0.5.0	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto).	0.899353981018	1046
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.10.5.5	search with cache (only 1: intros P Q H l; only 1: induction 1; only 1: eauto with *; only 1: auto).	1.40553593636	1371
Coq.Lists.SetoidList.In_InA	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.209760189056	6
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	1.0.3.3.1	search with cache (only 1: split; only 1: intuition; only 1: invlist InA; only 1: auto; only 1: auto).	1.84145784378	152
Coq.Lists.SetoidList.InA_double_head	40	3.11	search with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.845046043396	299
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.105406999588	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.9.2	search with cache (only 1: constructor; only 1: abstract now inversion 1; only 1: auto).	0.968367099762	145
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.5	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.100118160248	8
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.7	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.125241994858	10
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.0.1.5	search with cache (only 1: red; only 1: split; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.41474199295	162
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	1.1.0.0.0.2.0.2.0.5	search with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	4.81899595261	1441
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	0.7.0.2.2.0.7	search with cache (only 1: induction l; only 1: auto; only 1: right; only 1: transitivity y; only 1: auto; only 1: inv; only 1: auto).	13.9603631496	2398
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	0.9.2	search with cache (only 1: intro; only 1: rewrite <- H; only 1: auto).	0.570652961731	191
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.0.2.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: apply H; only 1: simpl; only 1: auto).	0.0925421714783	8
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0422070026398	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.0.0.0.2.2.1	search with cache (only 1: intros; only 1: generalize H; only 1: induction 1 as [l| x l l' AD IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.144051074982	105
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.4	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0489830970764	16
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.2.2.5.7	search with cache (only 1: repeat red; only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto).	2.38131308556	822
Coq.Lists.SetoidList.eqlistA_app	40	0.0.1.0.0.0.0	search with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0642919540405	8
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.0.4.2.0.2	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: intuition).	0.409743070602	343
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0431740283966	3
Coq.NArith.BinNat.N.discr	40	8.0.8.2	search with cache (only 1: destruct n; only 1: auto with *; only 1: revert p; only 1: eauto with *).	0.355381011963	491
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.0164699554443	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0151829719543	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.13211107254	5
Coq.NArith.BinNat.N.bi_induction	40	2.0.0.7.1	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	0.591135025024	858
Coq.NArith.BinNat.N.recursion_wd	40	0.1.7.8.0.0.0.0.0.0	search with cache (only 1: intros a a' Ha f f' Hf n n' Hn; only 1: subst n'; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: cut (1%positive = 1%positive); only 1: fix sqrtrem_spec 1; only 1: auto; only 1: trivial).	10.3504369259	11877
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0176861286163	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0381510257721	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.0168931484222	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.0168890953064	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0174298286438	2
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0237920284271	3
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.2.1.0.0.0.5	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	4.97790384293	3489
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.9.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	30.9559900761	20870
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0423419475555	3
Coq.NArith.BinNat.N.pred_sub	40	2.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0490798950195	5
Coq.NArith.BinNat.N.succ_0_discr	40	5	search with cache (only 1: now destruct n).	0.0644099712372	6
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0444579124451	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0672428607941	10
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.0156071186066	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	9.7.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	4.46174907684	3965
Coq.NArith.BinNat.N.ltb_lt	40	2.3.2.2.4	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destruct m; only 1: now destruct n; only 1: now destruct (PeanoNat.Nat.odd n)).	1.10373187065	889
Coq.NArith.BinNat.N.leb_le	40	10.2.2	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: tauto).	0.843044996262	908
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	1.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.0269038677216	3
Coq.NArith.BinNat.N.compare_le_iff	40	0.0.1.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: reflexivity; only 1: reflexivity).	0.0357210636139	9
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.105291128159	59
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.134469032288	2
Coq.NArith.BinNat.N.succ_double_spec	40	9	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.125712156296	16
Coq.NArith.BinNat.N.double_add	40	0.1.0.1.0.0.0.2.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.88141798973	991
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0315089225769	1
Coq.NArith.BinNat.N.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.166841030121	114
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0217089653015	3
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0168309211731	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0726940631866	11
Coq.NArith.BinNat.N.double_le_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0346667766571	10
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0372178554535	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0737111568451	9
Coq.NArith.BinNat.N.compare_0_r	40	6	search with cache (only 1: now destruct n).	0.0856580734253	16
Coq.NArith.BinNat.N.pow_0_r	40	1	search with cache (only 1: now nzsimpl').	0.0910890102386	2
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	3.3	search with cache (only 1: intros; only 1: false_hyp ltac:(H) nlt_0_r).	0.220169067383	52
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	4.7.0.0.0.0.4	search with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro H; only 1: intuition; only 1: now destruct p).	17.7063169479	9912
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40	3.0.2.10.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	8.68977117538	5005
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	4.0.5.0	search with cache (only 1: intro H; only 1: destruct n; only 1: reflexivity; only 1: easy).	0.38377904892	355
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40	0.0.2.0.1.0.2.0.4.2.0.1.4.0.0.0	search with cache (only 1: destruct n; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: destruct p; only 1: split; only 1: now exists (pos p); only 1: easy; only 1: split; only 1: easy; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: now exists 0; only 1: trivial).	13.5232629776	13963
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	search with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0270071029663	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0444929599762	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	0.0361061096191	7
Coq.NArith.BinNat.N.gcd_divide_r	40	0.0.1.0.0.0.0	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.10564994812	20
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2	search with cache (only 1: apply le_0_l).	0.731376171112	125
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	8	search with cache (only 1: now destruct a).	0.0292699337006	9
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.1	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.623210906982	163
Coq.NArith.BinNat.N.testbit_neg_r	40	7.6	search with cache (only 1: intros H; only 1: false_hyp ltac:(H) nlt_0_r).	1.05050396919	271
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.0188450813293	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	6.8.1	search with cache (only 1: intro H; only 1: apply lt_nge; only 1: now rewrite <- ?succ_le_mono).	1.36204195023	930
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0212700366974	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	6.0.3.4.1	search with cache (only 1: intro H; only 1: rewrite le_lteq; only 1: destruct (lt_trichotomy n m); only 1: now left; only 1: intuition).	4.6896250248	3818
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0676300525665	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.0.0.1.0.6	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.228569984436	147
Coq.NArith.Ndec.Peqb_complete	40	0	search with cache (only 1: apply Pos.eqb_eq).	0.0543780326843	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.9	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.128186941147	26
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0671529769897	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0646469593048	1
Coq.NArith.Ndec.Neqb_complete	40	3	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0652070045471	4
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	2.1.3.0	search with cache (only 1: intros Ha Hb; only 1: eqb2eq; only 1: intros <-; only 1: congruence).	0.347856044769	33
Coq.NArith.Ndec.Ndiv2_eq	40	1.3.0	search with cache (only 1: intros Ha; only 1: eqb2eq; only 1: now subst).	0.0766320228577	7
Coq.NArith.Ndec.Ndiv2_neq	40	1.0.0.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.197047948837	5
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.0.2.1	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.214129924774	33
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	2.4.2.8	search with cache (only 1: rewrite !Nleb_Nle; only 1: intro LE; only 1: intros Hb; only 1: N.order).	3.86590099335	3374
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.8.2.3.2.0.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: red; only 1: intro; only 1: apply H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	11.9769961834	9197
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40	0.0.0.8.5.0.0.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: intro; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: now apply leb_complete).	9.81007790565	9357
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40	0.0.0.0.8.5.0.1	search with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite !N2Nat.inj_succ_double; only 1: apply leb_correct; only 1: apply le_n_S, mult_le_compat_l; only 1: now apply leb_complete).	14.7094359398	14513
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	4.2	search with cache (only 1: unfold Nleb; only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.196986198425	106
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40	8.0	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0703499317169	10
Coq.NArith.Ndec.Nmin_le_3	40	2.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.239682197571	20
Coq.NArith.Ndec.Nmin_le_4	40	6.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.261048078537	21
Coq.NArith.Ndec.Nmin_le_5	40	17.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	1.0889210701	1248
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.1.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0993640422821	5
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: now N.nzsimpl; only 1: intro H; only 1: exfalso; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate || simpl).	0.154423952103	10
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.0.9.8.3.0.4.0.20.8	search with cache (only 1: intros n; only 1: destruct n; only 1: reflexivity; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: apply Nat.min_l; only 1: Nat.Private_Tac.order).	16.133646965	35342
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	2.0.0.2.8	search with cache (only 1: intros n; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now simpl).	0.67271900177	632
Coq.NArith.Ndist.ni_min_O_r	40	1.0.4.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.220632076263	21
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0473589897156	2
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.4	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0931899547577	14
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.4.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.15146279335	19
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	0.0.9.2.7.10.5	search with cache (only 1: intros n m; only 1: induction 1; only 1: case n; only 1: apply Nat.le_0_l; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	27.3866760731	30300
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.3.0.1	search with cache (only 1: destruct a; only 1: trivial; only 1: intros a; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.072526216507	33
Coq.NArith.Ndigits.Nshiftr_nat_S	40	1.0.0.2	search with cache (only 1: intro n; only 1: intros; only 1: simpl; only 1: auto).	0.0404491424561	7
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0338399410248	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.0343480110168	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0329029560089	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.2.0.2.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: f_equal; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: f_equal; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	1.68492698669	1132
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.418765068054	252
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	7.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.land_spec).	0.140632152557	61
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_ldiff_spec).	0.507693052292	305
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	5.3.3.6	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now destruct p).	1.60576796532	1179
Coq.NArith.Ndigits.Ndouble_bit0	40	1.3.8	search with cache (only 1: induction n; only 1: reflexivity; only 1: easy).	0.136176109314	203
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.1.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial).	0.0375139713287	4
Coq.NArith.Ndigits.Ndiv2_double	40	1.0.2.0.0.4.0	search with cache (only 1: intros n H; only 1: induction n; only 1: simpl; only 1: trivial; only 1: vm_compute in H; only 1: simpl; only 1: now destruct p).	0.65371799469	543
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.0.2.1.7.0	search with cache (only 1: destruct n; only 1: easy; only 1: intro H; only 1: vm_compute in H; only 1: simpl; only 1: now destruct p).	5.42733597755	1409
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: trivial).	0.04208111763	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: trivial; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	2.61500716209	1052
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.65800976753	782
Coq.NArith.Ndigits.Nless_def_3	40	4.12	search with cache (only 1: fix even_spec 1; only 1: trivial).	1.29587101936	1241
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40	2.1.2.19.3.4.1.0	search with cache (only 1: intros n; only 1: unfold Nless; only 1: destruct n; only 1: reflexivity; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: reflexivity).	6.22708702087	11543
Coq.NArith.Ndigits.N0_less_1	40	0.0.3.1.2.0.11	search with cache (only 1: intro n; only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: intros Hn; only 1: exists p; only 1: trivial).	1.17762899399	1425
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	0.2.5.0.1.5.0.0.0.10.3	search with cache (only 1: intro n; only 1: destruct n; only 1: reflexivity; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: trivial; only 1: simpl in *; only 1: rewrite IHp; only 1: trivial; only 1: reflexivity).	18.9540741444	13581
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40	0.1.3.10	search with cache (only 1: unfold lt; only 1: fix le_div2 1; only 1: intros; only 1: trivial).	8.59204411507	4319
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.test	40	1	search with cache (only 1: N.order).	0.0803120136261	4
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	3.0.0.0.0.0	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	0.0362989902496	9
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	1.1.3.9.0.3.0.1.1	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: now Nat.nzsimpl').	16.8616609573	7925
Coq.NArith.Nnat.N2Nat.inj_succ	40	19.0.1.0.1.8	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	5.37602901459	7916
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.1.2.16	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.539735078812	850
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros; only 1: now subst).	0.0363349914551	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	1	search with cache (only 1: nat2N).	0.389280080795	62
Coq.NArith.Nnat.Nat2N.inj_succ	40	10	search with cache (only 1: nat2N).	0.0918278694153	75
Coq.NArith.Nnat.Nat2N.inj_pred	40	3.0.0.0	search with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.067626953125	25
Coq.NArith.Nnat.Nat2N.inj_add	40	0.30.0.0.3	search with cache (only 1: destruct n as [| n]; only 1: simpl; only 1: auto; only 1: Nat.nzsimpl; only 1: nat2N).	11.7357051373	13077
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.131556987762	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0443489551544	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0349159240723	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0617828369141	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0401828289032	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	4.1.4.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: fix odd_spec 1; only 1: destruct m; only 1: trivial).	0.886698961258	717
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0349628925323	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Pos.eqb_eq, Exx', Eyy').	0.0391080379486	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40	4.1.2.7.1.2.2	search with cache (only 1: intros a; only 1: destruct a as [| p]; only 1: trivial; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	31.7841689587	26137
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.10.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	1.91314005852	824
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0185298919678	1
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0207190513611	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.0.17.0.0.6	search with cache (only 1: elim s; only 1: reflexivity; only 1: simpl; only 1: intros m s1; only 1: intros ->; only 1: split).	3.06020092964	3493
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	18.0.14.2	search with cache (only 1: compute; only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: congruence).	6.88620686531	5869
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0577290058136	2
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	5	search with cache (only 1: auto).	0.0113391876221	6
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.038834810257	2
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0307638645172	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	search with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0171527862549	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	0.1.0.0	search with cache (only 1: intros x; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (Rle_0_sqr x)).	0.0240252017975	5
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	15.0	search with cache (only 1: intros; only 1: lra).	1.05316090584	859
Coq.Reals.Ratan.pos_opp_lt	40	8.1	search with cache (only 1: intros y H; only 1: lra).	0.248826980591	121
Coq.Reals.Ratan.tech_opp_tan	40	9.16.0.1	search with cache (only 1: intro; only 1: intros; only 1: rewrite tan_neg; only 1: assumption).	16.9609768391	24735
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.0.0.3.4.3.1.7.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: intro H7; only 1: auto with real; only 1: intro; only 1: cbn; only 1: intros; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	34.2877130508	30971
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.9.0.4	search with cache (only 1: intros x z; only 1: simpl; only 1: inversion 1; only 1: trivial; only 1: auto with arith).	1.3308839798	846
Coq.Reals.RList.pos_Rl_P2	40	0.3.14	search with cache (only 1: fix even_equiv 1; only 1: intro; only 1: firstorder  (subst; auto)).	1.16003584862	1305
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	4.0.17	search with cache (only 1: fix even_equiv 1; only 1: intros Hab; only 1: auto).	0.987023830414	1494
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40	4.17	search with cache (only 1: fix odd_equiv 1; only 1: tauto).	1.74498391151	3083
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.0.6.7	search with cache (only 1: intro; only 1: induction l as [| a l' Hrec]; only 1: reflexivity; only 1: simpl; only 1: auto).	6.48421096802	5055
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40	3.26	search with cache (only 1: fix ind_0_1_SS 1; only 1: auto with arith).	13.8397450447	23211
Coq.Reals.RList.RList_P18	40	3.0.0.0.0.1	search with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.0231809616089	10
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.0.1	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.0441818237305	4
Coq.Reals.RList.RList_P22	40	0.5.6.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).	1.54538607597	1111
Coq.Reals.RList.RList_P23	40	0.2.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	0.0202441215515	9
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros s1; only 1: elim s1; only 1: simpl; only 1: intros s2 n H; only 1: inversion H; only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	1.41252589226	819
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40	1.1.1.0.1.4.0.0.0.0.1.0.1.0	search with cache (only 1: simple induction l1; only 1: simpl; only 1: intros p H0 H2; only 1: inversion H0; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: induction i as [| i Hreci]; only 1: easy; only 1: simpl; only 1: apply H; only 1: auto with arith; only 1: apply lt_S_n; only 1: assumption).	38.069437027	25555
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.0.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.115242958069	52
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.1	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.483084917068	147
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	1.0.0.1.1.2.0	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: trivial; only 1: auto with arith).	0.271565914154	173
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	0.2.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.296441078186	22
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	3.3.0.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: now destruct 1; only 1: now destruct 1).	0.297742128372	144
Coq.Reals.Rbasic_fun.Rmin_Rgt	40	1.0.0.3.0.0.3.0.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition try easy; only 1: unfold Rgt; only 1: exact (Rlt_le_trans r r1 r2 H Hle); only 1: intuition try easy; only 1: generalize (Rnot_le_lt r1 r2 Hnle); only 1: intro; only 1: exact (Rgt_trans r1 r2 r H0 H)).	5.74553990364	5655
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.1.2.0.8.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with qarith; only 1: intro H1; only 1: auto with real).	0.941906929016	700
Coq.Reals.Rbasic_fun.Rmin_left	40	2.0.1.4.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto with real).	0.68446803093	128
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto).	0.107534885406	6
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.104712963104	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	2.1.0.3.1	search with cache (only 1: intros x y; only 1: rewrite <- (Rplus_0_r x); only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto with real).	0.837784051895	577
Coq.Reals.Rbasic_fun.Rmin_glb	40
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.110337018967	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.116804122925	6
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.0.0.0.10.1.0	search with cache (only 1: intros; only 1: pattern x at 1; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	1.66315603256	1446
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.115347146988	10
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.7.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.163676023483	47
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.1.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.20437002182	7
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.1.1.0.3	search with cache (only 1: intros r1 r2 r; only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: assumption; only 1: assumption).	0.745059013367	169
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.209621906281	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.3.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.308195829391	38
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.3.0.1.0.0.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	1.21141290665	238
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.180275917053	51
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	0.2.0.1.0.0.0.4.0	search with cache (only 1: split; only 1: compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: red; only 1: generalize Logic.eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	0.199453115463	311
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.0.2.1	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: auto).	0.141434192657	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	2.0	search with cache (only 1: intros; only 1: intuition).	0.15182185173	25
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.4.0.1.1	search with cache (only 1: simple induction 1; only 1: auto with real; only 1: intros; only 1: simpl; only 1: auto with real).	0.177484035492	57
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.8.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.55345702171	926
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.8.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.08446121216	803
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.1.0	search with cache (only 1: intro f; only 1: intro; only 1: reflexivity).	0.228890180588	16
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40	4.54	search with cache (only 1: fix even_odd_double 1; only 1: auto with zarith).	8.22636914253	19552
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.5.1	search with cache (only 1: intros; only 1: injection H; only 1: auto).	0.372534990311	34
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	12.19	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.957255840302	2054
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.2.0	search with cache (only 1: intros a; only 1: intros m IH; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.151292085648	8
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	4.5	search with cache (only 1: fix ind_0_1_SS 1; only 1: auto with real).	1.80721998215	405
Coq.Reals.Rfunctions.fact_simpl	40	0.4.0	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.121147155762	7
Coq.Reals.Rfunctions.simpl_fact	40	1.1.9	search with cache (only 1: fix odd_equiv 1; only 1: intro p; only 1: auto with arith).	1.05365490913	315
Coq.Reals.Rfunctions.pow_O	40	0.0	search with cache (only 1: intro; only 1: reflexivity).	0.153475046158	2
Coq.Reals.Rfunctions.pow_1	40	5.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.161360025406	7
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.148175954819	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40	0.1.8.0.0.0.0.0.0.7	search with cache (only 1: intro; only 1: simple induction n; only 1: simpl; only 1: intro; only 1: replace 1 with 0 + 1; only 1: auto with real; only 1: apply Rplus_0_l; only 1: fix le_div2 1; only 1: intro; only 1: auto with arith).	39.5079360008	31201
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	2.0.0.0.0.0.0	search with cache (only 1: intros z [| n]; only 1: auto with real; only 1: simpl; only 1: induction n; only 1: simpl; only 1: trivial; only 1: ring [ IHn ]).	1.20619082451	16
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.5.3	search with cache (only 1: intros; only 1: rewrite S_INR; only 1: ring).	1.20131707191	304
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	1.6.0.0.0.0.0.0.1	search with cache (only 1: intro n; only 1: case n; only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: intros; only 1: simpl; only 1: auto with real).	4.28301787376	4102
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	0.313631057739	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.5.0.1.0.1.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: replace 1 with 1 * 1; only 1: auto with real; only 1: auto with real).	6.82534503937	4521
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.0.0.2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: easy; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	1.35229516029	643
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.1.1	search with cache (only 1: simpl; only 1: intro x; only 1: ring_Rsqr).	0.170343875885	22
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	2.6.0.1.2.0.0.2	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: Z.order'; only 1: simpl; only 1: fix odd_equiv 1; only 1: auto with real).	2.18966007233	2551
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.162158966064	1
Coq.Reals.Rfunctions.powerRZ_1	40	1.0.1	search with cache (only 1: simpl; only 1: intro; only 1: ring_Rsqr).	0.148163795471	14
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.200886964798	9
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.3.2.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	0.190330028534	16
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40	0.1.12.1.3.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: ring_Rsqr; only 1: intro m; only 1: fix even_equiv 1; only 1: simpl; only 1: now try Nat.order').	13.1879110336	7344
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	search with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0801050662994	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.0.0.0.1.0	search with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.430979967117	70
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.0.0	search with cache (only 1: simpl; only 1: intros; only 1: apply Nat.div2_double).	0.0179300308228	3
Coq.Reals.Exp_prop.div2_S_double	40	1.0	search with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.012001991272	3
Coq.Reals.Exp_prop.div2_not_R0	40	4.3	search with cache (only 1: fix le_div2 1; only 1: auto).	0.0462679862976	38
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	0.0.0.0.2.4	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro; only 1: auto with real).	0.168916940689	191
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	6.2.0.2.6.2	search with cache (only 1: unfold limit1_in; only 1: intro n; only 1: intros z'; only 1: unfold limit_in; only 1: intros P x y H1 H2; only 1: firstorder).	3.97434091568	3906
Coq.Reals.Rpower.Rinv_Rdiv	40	0.5.0	search with cache (only 1: intros; only 1: field; only 1: auto).	0.0548980236053	14
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	4.0.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: auto).	0.0272529125214	10
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	3.2.2.1.1	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto).	0.977154970169	202
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40	1.3.11	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros a b Ha Hb; only 1: trivial).	11.8110518456	6088
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	40.1	search with cache (only 1: intros [n maj]; only 1: apply R).	3.5797598362	6454
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	6.0	search with cache (only 1: intros; only 1: now left || now right).	0.0257129669189	8
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0183639526367	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.1	search with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0479521751404	27
Coq.Reals.RIneq.Rlt_not_eq	40	1.0.0.17.0.5	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: subst n; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	6.71871614456	7960
Coq.Reals.RIneq.Rgt_not_eq	40	3.1.0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: pattern r1 at 2; only 1: pattern r1 at 2; only 1: now subst).	0.042671918869	21
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	2.0.0.3.1.0.0.3.2	search with cache (only 1: intros x y [H| H] abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	7.25158905983	7626
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	0.2.1	search with cache (only 1: intros a b H; only 1: red; only 1: auto).	0.0335538387299	18
Coq.Reals.RIneq.Rgt_ge	40	0.1.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0216958522797	4
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	0.0.0.1	search with cache (only 1: destruct 1; only 1: auto with real; only 1: red; only 1: auto with real).	0.38282585144	45
Coq.Reals.RIneq.Rlt_gt	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0254709720612	3
Coq.Reals.RIneq.Rgt_lt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0251851081848	2
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0407419204712	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0294139385223	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.04865193367	5
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.0357291698456	6
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: tauto; only 1: red; only 1: auto with real; only 1: contradiction).	0.300606012344	27
Coq.Reals.RIneq.Rnot_lt_ge	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: red; only 1: tauto).	0.040374994278	8
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0398979187012	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0349900722504	6
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0214600563049	5
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0219659805298	5
Coq.Reals.RIneq.Rle_not_gt	40	0.0.1.0.2	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0212619304657	8
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.0.2	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.272923946381	48
Coq.Reals.RIneq.Req_le	40	0.0.3	search with cache (only 1: destruct 1; only 1: right; only 1: reflexivity).	0.0228128433228	6
Coq.Reals.RIneq.Req_ge	40	0.0.4	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0320048332214	7
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: auto with *).	0.018895149231	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.0288460254669	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.1.2.2	search with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0483179092407	10
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.3.1.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: generalize (Rlt_asym r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0843818187714	20
Coq.Reals.RIneq.Rle_le_eq	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: split; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.0750689506531	9
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0304110050201	1
Coq.Reals.RIneq.Rlt_eq_compat	40
Coq.Reals.RIneq.Rgt_eq_compat	40	1.0.0.0.0	search with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.02064204216	6
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.1	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0606231689453	32
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.14531993866	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.15968298912	3
Coq.Reals.RIneq.Rge_dec	40	0.0.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.158931016922	3
Coq.Reals.RIneq.Rlt_le_dec	40	1.1.0.0.1.1	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.181608200073	10
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0582928657532	3
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0842289924622	3
Coq.Reals.RIneq.Rge_gt_dec	40
Coq.Reals.RIneq.Rlt_or_le	40	0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.05970287323	13
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.0.0.1	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.0960850715637	32
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.176676034927	32
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.131952047348	23
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.0.2.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.163312911987	23
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	1.0.5.0	search with cache (only 1: intro; only 1: split; only 1: ring; only 1: apply Rplus_0_l).	0.172088861465	39
Coq.Reals.RIneq.Rplus_opp_l	40
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0173180103302	2
Coq.Reals.RIneq.Rplus_eq_compat_r	40	3.1.0	search with cache (only 1: intros r r1 r2; only 1: intros EQ; only 1: now f_equal).	0.0415959358215	16
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0530381202698	3
Coq.Reals.RIneq.Rmult_0_r	40
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.025279045105	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.049779176712	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0364649295807	3
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	search with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0321640968323	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0.0	search with cache (only 1: intros a b H; only 1: rewrite H; only 1: auto with real).	0.040225982666	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0333449840546	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: congruence).	0.0405280590057	1
Coq.Reals.RIneq.Ropp_0	40
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.5.2	search with cache (only 1: intros n IH; only 1: setoid_replace n with 0%Z by auto with relations; only 1: ring).	0.0626859664917	10
Coq.Reals.RIneq.Ropp_involutive	40	7.0	search with cache (only 1: intros z; only 1: ring).	0.0339028835297	14
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.0	search with cache (only 1: intros a b; only 1: ring).	0.0481600761414	2
Coq.Reals.RIneq.Ropp_mult_distr_l	40
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.134938001633	2
Coq.Reals.RIneq.Rmult_opp_opp	40	7.1	search with cache (only 1: intros a b; only 1: ring).	0.0534691810608	10
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0359671115875	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0329070091248	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0405898094177	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0395679473877	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0617389678955	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0631210803986	2
Coq.Reals.RIneq.Rminus_diag_eq	40
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0467348098755	2
Coq.Reals.RIneq.Rminus_eq_contra	40	5.1	search with cache (only 1: intros r1 r2; only 1: intuition eauto  4 with real).	0.0639979839325	36
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0297949314117	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0401339530945	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.2.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.217425107956	74
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0483591556549	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.4.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.488380908966	23
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.3.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.275551795959	40
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.4	search with cache (only 1: intros p q H H0; only 1: auto with *).	0.201090097427	24
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	2.1.0.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0406649112701	23
Coq.Reals.RIneq.Rplus_le_compat_l	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	3.2.0.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r2 r); only 1: rewrite (Rplus_comm r1 r); only 1: auto with real).	0.288702011108	127
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.2.0.1	search with cache (only 1: intuition eauto  3; only 1: rewrite (Rplus_comm r2 r); only 1: rewrite (Rplus_comm r1 r); only 1: auto with real).	0.0562629699707	10
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0453150272369	5
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.3.2	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0611300468445	25
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.3	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0774540901184	20
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.12.16.1.0	search with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real).	18.1777870655	15893
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.6.0.0.0.0.0.0.2.0	search with cache (only 1: intros x y; only 1: intros [H| H] abs; only 1: apply Rlt_trans with x; only 1: assumption; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: assumption; only 1: rewrite H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: assumption).	19.2919518948	14178
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	4.3	search with cache (only 1: intros a b; only 1: auto using Rplus_lt_compat_l with real).	0.299903869629	121
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.0.6.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0490520000458	18
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0488200187683	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	1	search with cache (only 1: auto with real).	0.205943107605	98
Coq.Reals.RIneq.Ropp_le_ge_contravar	40
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0	search with cache (only 1: unfold Rge; only 1: intuition).	0.034560918808	2
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0.1.0.1	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: auto with real).	0.0822319984436	9
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0.1.0.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: auto with real; only 1: clear H; only 1: intro H; only 1: auto with real).	0.115206003189	8
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0278699398041	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.028981924057	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0238831043243	3
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0280480384827	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0292940139771	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0339829921722	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.0	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.025141954422	4
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.1	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0323979854584	5
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	0.3.5	search with cache (only 1: intros a b Ha Hb; only 1: intros H H0 H1; only 1: intuition).	0.164186000824	107
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.1.0	search with cache (only 1: intros; only 1: replace r with - - r; only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.120928049088	44
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0557110309601	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: auto with real; only 1: auto with real; only 1: ring).	0.0475289821625	8
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.042927980423	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.2	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0880670547485	18
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	11.0	search with cache (only 1: intro; only 1: apply Rlt_n_Sn).	0.168540000916	229
Coq.Reals.RIneq.tech_Rgt_minus	40	1.0.0.0.0.0	search with cache (only 1: intros x y; only 1: intros; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).	0.0520150661469	7
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	1.3.0.0.1	search with cache (only 1: intro n; only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).	0.145569801331	27
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.151910066605	38
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	18.0.3	search with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: now try Nat.order').	0.93218588829	2017
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	4.3.0	search with cache (only 1: intro n; only 1: simpl; only 1: auto with arith real).	0.552614927292	88
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.0.0.2.0	search with cache (only 1: intros n; only 1: case n; only 1: simpl; only 1: auto with real; only 1: auto with arith real).	0.118871927261	7
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	0.1.0	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0963490009308	4
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40	0.0.3.0.1.3.0.1.9.0	search with cache (only 1: intros; only 1: unfold Dgf, D_x, no_cond; only 1: split; only 1: trivial; only 1: apply Rminus_not_eq_right; only 1: red; only 1: intro; only 1: rewrite <- H0 in H; only 1: elim H; only 1: ring).	11.6324689388	5690
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0834698677063	2
Coq.Reals.Ranalysis2.quadruple_var	40	0.1	search with cache (only 1: intro; only 1: field).	0.0935649871826	3
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0595619678497	3
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	3.2.6.0.0	search with cache (only 1: intros; only 1: revert H; only 1: intros a b; only 1: intros HB; only 1: intuition).	1.09102797508	638
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	6.3.4.1.8.12.12.0	search with cache (only 1: intros; only 1: intro; only 1: apply NNPP; only 1: elim H; only 1: unfold not; only 1: intro all; only 1: inversion 1; only 1: easy).	22.7844200134	36801
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	1.0.5.1.1.2.0.0.2.0.1.4.0	search with cache (only 1: unfold included; only 1: intros * f; only 1: red; only 1: intros; only 1: unfold neighbourhood in H; only 1: elim H; only 1: intros; only 1: unfold included in H0; only 1: exists x0; only 1: unfold included; only 1: intros A; only 1: intros; only 1: intuition).	12.1240170002	17483
Coq.Reals.Rtopology.open_set_P2	40	9.2.3	search with cache (only 1: intro A; only 1: intro; only 1: firstorder).	1.0986289978	916
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.4.1.1	search with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intro; only 1: intro; only 1: elim H).	0.0722420215607	12
Coq.Reals.Rtopology.open_set_P5	40	10.0.16	search with cache (only 1: compute; only 1: intros; only 1: intuition eauto  3).	3.7601480484	7078
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40	0.4.5.1.5.1.5.3	search with cache (only 1: intros; only 1: intros A *; only 1: simpl; only 1: unfold open_set, complementary, point_adherent; only 1: intros; only 1: unfold neighbourhood, image_rec; only 1: intuition; only 1: firstorder).	6.38352108002	8858
Coq.Reals.Rtopology.open_set_P6	40	10.0.2.0	search with cache (only 1: unfold open_set; only 1: intros Ext A B Equiv; only 1: intros; only 1: firstorder).	1.25817513466	1367
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	2.17.2	search with cache (only 1: intros a b; only 1: unfold included; only 1: firstorder).	2.06274104118	3093
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	0.3.0	search with cache (only 1: unfold EUn; only 1: intros; only 1: now exists n).	0.0518929958344	6
Coq.Reals.Rseries.Un_bound_imp	40	15.1.1.5.7	search with cache (only 1: intros xn cau; only 1: intro p; only 1: intros; only 1: induction H; only 1: now subst).	22.328635931	20997
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	4.2.1.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: auto with arith).	0.459015846252	226
Coq.Reals.Rseries.Un_growing_shift	40	1.1.6.2	search with cache (only 1: intros; only 1: intros p; only 1: simpl; only 1: auto with arith).	0.208959102631	203
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	0.6.0.3.11.0.0.3.6.7	search with cache (only 1: intro; only 1: intro n; only 1: unfold Boule; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: elim n; only 1: simpl; only 1: intros; only 1: rewrite Rabs_R0; only 1: assumption).	31.7111990452	56225
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	12.15.1	search with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros F f A; only 1: firstorder  (subst; auto)).	4.08619189262	5466
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.0.0.1.1.1.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.0844900608063	10
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1	search with cache (only 1: reflexivity).	0.0594749450684	2
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	1.4.0.1.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	1.50371599197	552
Coq.Reals.Ranalysis1.continuity_mult	40	2.6.0.1.1.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	5.14226293564	2167
Coq.Reals.Ranalysis1.continuity_const	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	1.55792093277	1211
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	8.4.2.0.7	search with cache (only 1: unfold continuity; only 1: intros; only 1: apply continuity_pt_inv; only 1: auto; only 1: auto with real).	15.1742758751	16310
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.098072052002	8
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0686161518097	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	5.14	search with cache (only 1: compute; only 1: intuition eauto  2).	0.719053030014	539
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.2.2	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0629689693451	9
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	1.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.101255178452	6
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.1.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.273066043854	41
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.1.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.264685153961	32
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.22.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	3.8933570385	1770
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.1	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.149652957916	21
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	7.15.2	search with cache (only 1: intro X; only 1: fix even_equiv 1; only 1: auto).	1.938133955	2823
Coq.Reals.SeqProp.min_ss	40	0.4.0.0.0.0.0.2.1.0.2.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	3.87150001526	3171
Coq.Reals.SeqProp.Wn_decreasing	40	2.5.2.0	search with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: auto).	0.469544172287	412
Coq.Reals.SeqProp.Vn_growing	40	6.4.2.0.1	search with cache (only 1: intro; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: intro; only 1: fix even_equiv 1; only 1: auto with arith real).	2.06163096428	2493
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	5.3.1.2.3	search with cache (only 1: intros a b; only 1: intros; only 1: revert n; only 1: fix even_odd_double 1; only 1: auto).	2.27246689796	1588
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.0.0.0.0.0.0.1.1.0.0.1.0.0.5.3.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: intros; only 1: elim (H eps H0); only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: intros; only 1: unfold R_dist; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with Un n - Un m; only 1: apply H1; only 1: trivial; only 1: trivial; only 1: ring).	25.8651750088	25757
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0484261512756	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40	4.6.4	search with cache (only 1: intro xPos; only 1: fix even_odd_double 1; only 1: tauto).	0.418372154236	614
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40	0.2.2.5	search with cache (only 1: intros Un Hug Heub; only 1: intros; only 1: apply Rge_le; only 1: now apply growing_prop).	1.17496800423	379
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.10510802269	5
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0885820388794	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.11506319046	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	1.0.0.0.0.3.8	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	3.05559802055	1354
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.3	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.652709007263	172
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	1.1	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.113074064255	4
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.1.1.1.0.7	search with cache (only 1: generalize PI2_RGT_0; only 1: intro H1; only 1: generalize (Rplus_lt_compat_l PI 0 (PI / 2) H1); only 1: rewrite Rplus_0_r; only 1: intro H2; only 1: Lra.lra).	2.98344492912	1104
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40	0.0.0.7.9.3.2	search with cache (only 1: intros z; only 1: unfold toRad, toDeg; only 1: field; only 1: split; only 1: apply PI_neq0; only 1: unfold plat; only 1: discrR).	23.288631916	16822
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.0409770011902	10
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0166509151459	5
Coq.Reals.Ranalysis4.derivable_cosh	40	1.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.109241008759	33
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0164678096771	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	0.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.0227560997009	5
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.354595899582	91
Coq.Reals.Ranalysis4.derive_pt_sinh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.415159225464	111
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0270638465881	7
Coq.Reals.DiscrR.IZR_eq	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.0131452083588	3
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.3.0	search with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	0.424622058868	22
Coq.Reals.ConstructiveReals.CReq_sym	40	0.0.0.1.5	search with cache (only 1: destruct 1 as (eq_qp, H); only 1: destruct (CRltLinear R); only 1: split; only 1: assumption; only 1: assumption).	0.498313188553	226
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.0371720790863	7
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40	0.26.2	search with cache (only 1: red; only 1: fix gcd_divide 1; only 1: auto).	8.75854897499	9332
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	11	search with cache (only 1: firstorder).	0.476274013519	45
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	2.0.2.0.1.2.4	search with cache (only 1: intro H; only 1: intros m IH; only 1: intros n H0; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: auto with arith; only 1: trivial).	1.39887189865	1053
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	4.4	search with cache (only 1: destruct x as [xn limx]; only 1: assumption).	0.069965839386	45
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40	0.0.1.2.1.0.0.0.0.0	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply CReal_mult_proper_l; only 1: apply H; only 1: apply CReal_mult_comm).	36.7099130154	1324
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.2.0	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	15.5665400028	69
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0218839645386	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	1.2	search with cache (only 1: intro; only 1: ring).	1.66221308708	103
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	0.14	search with cache (only 1: intros a b; only 1: ring).	25.8035001755	881
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0209748744965	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	2.3.10	search with cache (only 1: intros [xn limx]; only 1: intros k p q H H0; only 1: auto with arith).	2.52928996086	1067
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	6.4	search with cache (only 1: pose proof (CRealLt_aboveSig x 0); only 1: now subst).	0.129728078842	122
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0221970081329	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.114959955215	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	2.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.201803922653	4
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.265281915665	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	3.1	search with cache (only 1: intros a Ha; only 1: auto with real).	0.334287881851	45
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	0.0.0.5.0	search with cache (only 1: unfold Rsqr; only 1: intros r H; only 1: elim (Rmult_integral r r H); only 1: trivial; only 1: trivial).	0.309972047806	33
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.15	search with cache (only 1: intros x y; only 1: ring_Rsqr).	1.71777200699	840
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.180523872375	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	5.0.0.3.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: ring_Rsqr).	1.16698098183	224
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: unfold Rabs; only 1: auto with zarith real).	0.285502910614	19
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	2.2.17.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	2.45193600655	1714
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	3.1.18.0.6.0.7	search with cache (only 1: destruct z; only 1: intros H; only 1: split with 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: now rewrite positive_nat_Z; only 1: now destruct 1).	18.5127220154	28247
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.1.1.0	search with cache (only 1: intros a b f; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).	0.218607902527	6
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	0.0.0.0.0.0.0.0.0.6.2	search with cache (only 1: intro; only 1: intro n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with S (S (2 * n)); only 1: replace (x ^ S (S (2 * n))) with x * x * x ^ (2 * n); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).	3.40271997452	2224
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0	search with cache (only 1: intros; only 1: apply derivable_pt_id).	0.150380849838	2
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	3.0	search with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intuition).	0.381515979767	5
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	0.2.0.0.2.0.0.0.0.0.0	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: split; only 1: rewrite <- Left_inv with (x := lb); only 1: intuition; only 1: intuition; only 1: rewrite <- Left_inv; only 1: intuition; only 1: intuition).	34.3031129837	4290
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	11.0.0	search with cache (only 1: intros; only 1: unfold Rdiv; only 1: lra).	0.84300994873	525
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40	6.8.1.2	search with cache (only 1: simpl; only 1: intros Un X; only 1: fix even_odd_double 1; only 1: auto with arith real).	15.3101420403	7848
Coq.Reals.AltSeries.PI_tg_pos	40	7.15	search with cache (only 1: fix odd_equiv 1; only 1: intuition eauto  2).	3.27059197426	5697
Coq.Reals.AltSeries.PI_tg_decreasing	40	3.11.5	search with cache (only 1: unfold Un_decreasing; only 1: fix le_div2 1; only 1: trivial).	1.04474306107	1656
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40	3.0.33	search with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: assumption).	17.1194839478	17408
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0837419033051	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0484681129456	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0798921585083	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0624108314514	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.0.0.0.0.8.2.2	search with cache (only 1: intros s1; only 1: intros n m; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	1.95020699501	1343
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.1.0.3.2.10	search with cache (only 1: intros s1; only 1: intros n m; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	2.40717697144	988
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0551779270172	5
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.105214834213	4
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0561189651489	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.1.0.0.0.1.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.0827980041504	15
Coq.Reals.Rlimit.eps4	40	24.0	search with cache (only 1: intros; only 1: field).	9.71180891991	2889
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.1	search with cache (only 1: intros x H; only 1: lra).	0.0654921531677	3
Coq.Reals.Rlimit.Rlt_eps4_eps	40	1.0	search with cache (only 1: intros; only 1: lra).	0.0576279163361	3
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	4.3.2.1.2	search with cache (only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros P H0 HS; only 1: intros E sig_forall_dec sig_not_dec Einhab Ebound; only 1: firstorder).	20.3291089535	7063
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.1.1.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).	0.0959351062775	7
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: subst; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.245840072632	39
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.105002880096	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.2.0	search with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0847730636597	6
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0763709545135	7
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.118675947189	7
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	1.0.6.0.0	search with cache (only 1: intros x y; only 1: intros; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	1.87450194359	423
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	1.1.0.0.0.2.2.2	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	4.44705605507	2715
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	58.5	search with cache (only 1: intros; only 1: firstorder).	34.1599869728	84159
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40	2.8	search with cache (only 1: fix even_odd_double 1; only 1: auto with real arith).	0.404979944229	238
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40	2.9	search with cache (only 1: fix even_odd_double 1; only 1: auto with real arith).	2.83051800728	1076
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.220053195953	49
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.169355154037	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.124710083008	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.2.13.0	search with cache (only 1: intro; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	1.13801789284	842
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.0.2.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.692399024963	183
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.112568855286	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.1.0	search with cache (only 1: intro; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.157990932465	26
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.7.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.295997142792	106
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.3.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.149659872055	8
Coq.Reals.Rtrigo1.PI2_RGT_0	40	1.1.8	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	1.67391014099	621
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	2.2.4	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.486093044281	152
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.0.5	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: destruct pi2_int; only 1: lra).	0.643075942993	148
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with (p - q) / 2 - (p + q) / 2 by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.226778030396	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	4.0.0	search with cache (only 1: intros Un X; only 1: simpl; only 1: trivial).	0.101829051971	7
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40	0.0.2.10.9.6	search with cache (only 1: intro z1; only 1: intro m; only 1: intro H; only 1: fix even_odd_double 1; only 1: intros x n; only 1: auto with real).	9.14760398865	8707
Coq.Reals.PartSum.tech12	40	7.0.0	search with cache (only 1: unfold Un_cv; only 1: intros Un X; only 1: auto with zarith real).	0.0756320953369	27
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	1.2.0.0.1.2	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: simpl; only 1: rewrite HrecN; only 1: ring).	0.208132982254	96
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.112941980362	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	4.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	2.60672593117	1890
Coq.Reals.PartSum.Rabs_triang_gen	40	1.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	1.42079997063	808
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	0.0.0.0.0.10.0.4.1.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: rewrite (H (S N)); only 1: rewrite HrecN; only 1: ring; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply le_n).	19.1998870373	28191
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.0.0.2.0.2.9	search with cache (only 1: intros n; only 1: intros H1; only 1: unfold Qeq, Qplus; only 1: case_eq n; only 1: simpl in *; only 1: now constructor; only 1: intros; only 1: trivial; only 1: auto with relations).	4.47628593445	3542
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	3.14.17	search with cache (only 1: intros a b; only 1: fix le_div2 1; only 1: auto).	18.7913589478	25387
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40	1.1.17.12	search with cache (only 1: intros n1 le_mn1; only 1: fix le_div2 1; only 1: intros a Ha; only 1: auto with arith).	29.1880340576	43812
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	1.79853105545	1467
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.11	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.186914920807	220
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.12.0.12.3	search with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	1.49201011658	2848
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.1.1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	0.0227921009064	8
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40	1.1.1.2.0.1.2.0.0.0	search with cache (only 1: intros x y H x0 y0 H0; only 1: split; only 1: intros H1 H2; only 1: rewrite <- H0 in H2; only 1: rewrite <- H in H2; only 1: contradiction; only 1: intros H1 H2; only 1: rewrite H0 in H2; only 1: rewrite H in H2; only 1: contradiction).	22.7836558819	6609
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	1.0.6.0.0.5.2	search with cache (only 1: intros x y z; only 1: intro; only 1: destruct H; only 1: intro abs; only 1: apply (CReal_lt_le_trans _ x); only 1: assumption; only 1: assumption).	12.07406497	1300
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	4.5.1	search with cache (only 1: intros x y z; only 1: intro; only 1: now rewrite H).	0.356162786484	341
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	2	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.0446381568909	26
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40	3.2.6	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: trivial).	0.422566890717	469
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	1.31767821312	445
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	3	search with cache (only 1: auto).	0.0115158557892	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	23	search with cache (only 1: assumption).	0.0537610054016	255
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.0.0.7.1.5	search with cache (only 1: intros n m; only 1: intro H; only 1: inversion H; only 1: now rewrite Nat.mul_1_l; only 1: subst; only 1: simpl; only 1: trivial using Nat.le_add_r).	2.17003011703	2395
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	0.0.6.24.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	3.73368406296	7835
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	10.5900120735	500
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	7	search with cache (only 1: apply CReal_plus_0_l).	0.0705051422119	17
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	4	search with cache (only 1: reflexivity).	0.0330100059509	16
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.0.0.0.0.0.0.6.8.4	search with cache (only 1: intros [xn limx]; only 1: red; only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	29.8027281761	5655
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0960409641266	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0876009464264	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.3.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	0.110262870789	18
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.258504152298	53
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	1.0.2	search with cache (only 1: case PI_2_aux; only 1: intros; only 1: intuition).	0.0522849559784	34
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	0.0333619117737	10
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition_in).	0.145213127136	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	0.0	search with cache (only 1: unfold empty, Empty; only 1: auto).	0.0816850662231	2
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.0	search with cache (only 1: unfold create; only 1: auto).	0.0791530609131	2
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0.0	search with cache (only 1: unfold create; only 1: auto).	0.0803542137146	2
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.2	search with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: auto).	0.162394046783	6
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0735399723053	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	15.4.0.5	search with cache (only 1: intros m; only 1: intro n; only 1: intro H'; only 1: now subst).	2.6845459938	1839
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40
Coq.FSets.FMapFullAVL.IntMake.find_2	40	0.13.3.3.0	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	1.70623517036	2029
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.5.1.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	0.117160081863	10
Coq.FSets.FMapFullAVL.IntMake.elements_3	40	30.0.1.1.1.6.2	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion_clear 1).	20.999229908	11867
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	0.2.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0902290344238	5
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.081109046936	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.8.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	2.32331800461	1073
Coq.FSets.FMapFullAVL.IntMake.map_1	40	0.1.0.1.0.1.8.1.5.4.15	search with cache (only 1: intros m x y e; only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: simpl; only 1: induction H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	31.0439629555	54097
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0859320163727	3
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.102875947952	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.0.0.16	search with cache (only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	0.995130062103	1093
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40	0.1.3.0.1.3.0.25.1	search with cache (only 1: induction 1; only 1: exists e; only 1: auto; only 1: firstorder; only 1: exists x; only 1: auto; only 1: firstorder; only 1: exists x; only 1: auto).	6.49421596527	8927
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40	0.1.1.0.1.1.0.1.4.10.4.5	search with cache (only 1: split; only 1: induction 1; only 1: eauto; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	18.6726679802	13185
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.2.3.1	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	1.18285298347	161
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	3.5.10	search with cache (only 1: intros x; only 1: intros a n Hn; only 1: intuition_in).	10.3757209778	1636
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	11.3	search with cache (only 1: intros n; only 1: easy).	0.490484952927	266
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	12.2	search with cache (only 1: intros; only 1: easy).	0.488291978836	275
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	6.3.6	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: L.MX.order).	2.51970386505	720
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	1.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0711500644684	3
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0445032119751	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0	search with cache (only 1: intuition_in).	0.0492300987244	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0640788078308	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	0.4.0	search with cache (only 1: intuition; only 1: apply (StrictOrder_Irreflexive x); only 1: auto with ordered_type).	0.12285900116	15
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.1.0.1.0	search with cache (only 1: intros x y; only 1: induction m; only 1: auto with ordered_type; only 1: intuition; only 1: eauto with ordered_type).	0.0859220027924	7
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0908160209656	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0810930728912	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	0	search with cache (only 1: auto).	0.0588541030884	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	0.0.0.13	search with cache (only 1: intro; only 1: intro n; only 1: intro abs; only 1: inversion abs).	0.890496015549	341
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	2.8	search with cache (only 1: fix even_spec 1; only 1: auto).	0.630932092667	322
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.0.0.1.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: easy; only 1: auto; only 1: intros; only 1: auto; only 1: auto).	0.16837310791	8
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40	0.0.1.4.0.0.3.1.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: auto).	3.27773404121	2451
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	1.1.1.0.0.2	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: now destruct 1; only 1: auto; only 1: auto; only 1: auto).	0.168663024902	86
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.6.0.0.0.0.0.0.3.1	search with cache (only 1: split; only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	21.3507990837	13488
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	0.0.0.0.4.3	search with cache (only 1: intros m x y; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.723654031754	371
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	0.3	search with cache (only 1: unfold create; only 1: intuition_in).	0.506317138672	45
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.1.2.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.137871980667	8
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	0.4.1.1.4	search with cache (only 1: simpl; only 1: induction 1; only 1: intuition; only 1: unfold IfEq; only 1: auto).	1.45986890793	624
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	3.0.2.0.5	search with cache (only 1: intros m x y; only 1: induction m; only 1: inversion 1; only 1: simpl; only 1: intuition_in).	0.773161172867	328
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.0.0.1.0.3.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.456763029099	128
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.15717291832	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	0.1.8.3	search with cache (only 1: intros m; only 1: intro H; only 1: intro abs; only 1: inversion abs).	0.723775863647	272
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40	0.1.1.4.4.0	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: induction m; only 1: intros; only 1: apply find_2; only 1: auto).	0.460766077042	440
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	1.7.7.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite <- elements_mapsto; only 1: auto).	1.09325695038	1012
Coq.FSets.FMapAVL.IntMake.elements_3	40	21.0.1.8.2	search with cache (only 1: intros; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: inversion 1).	6.13903093338	5510
Coq.FSets.FMapAVL.IntMake.elements_3w	40	1.12.21.0	search with cache (only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.953045845032	2078
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0577280521393	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.10.2.0.1.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl; only 1: rewrite equal_Equivb; only 1: auto using map_option_bst; only 1: auto using map_option_bst; only 1: auto using map_option_bst).	4.29719495773	3676
Coq.FSets.FMapAVL.IntMake.map_1	40	0.3.0.2.0.1.2.1.24.7	search with cache (only 1: intros A B f l; only 1: red; only 1: simpl; only 1: induction 1; only 1: simpl; only 1: auto; only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).	35.6444060802	54736
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.4.0.5.0	search with cache (only 1: destruct e2; only 1: simpl; only 1: trivial; only 1: simpl in *; only 1: trivial).	0.37714099884	239
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	3.1	search with cache (only 1: intros; only 1: intuition).	0.0679779052734	6
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	4.2	search with cache (only 1: intros; only 1: intuition).	0.0830218791962	8
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	6.0	search with cache (only 1: symmetry; only 1: intuition).	0.102559089661	12
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40	2.43	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	4.61603593826	5637
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	4.4	search with cache (only 1: symmetry; only 1: intuition).	0.0883679389954	27
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	5	search with cache (only 1: intuition).	0.20477604866	15
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	1	search with cache (only 1: intuition).	0.07301902771	14
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40	0.1.4.3.4.11	search with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: intro n; only 1: intuition; only 1: intro n; only 1: intuition; only 1: exact (add_3 E H)).	9.60315394402	6845
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.1.3.3	search with cache (only 1: intro H; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.441871881485	92
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	1	search with cache (only 1: intuition).	0.162405014038	34
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.148864030838	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	2	search with cache (only 1: intuition).	0.175997018814	14
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	1	search with cache (only 1: intuition).	0.118571996689	11
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	0.0.0.0.0.0.0.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.232359170914	22
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.2.11.2.8.0	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: red; only 1: intros x y z; only 1: eauto).	8.50154399872	6296
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	15.3	search with cache (only 1: intros; only 1: easy).	0.192228794098	412
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.8.9	search with cache (only 1: intros; only 1: red; only 1: eauto).	0.290683984756	376
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	1.5.0.1	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: auto).	1.38935017586	83
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	12	search with cache (only 1: firstorder).	0.369636058807	136
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.0.2.6	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	0.276589870453	71
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.0.1.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.109910964966	6
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	4.3.1.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.807806968689	150
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.2.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.175821065903	16
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.9.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.886128902435	211
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	8.0.2.4.9	search with cache (only 1: compute; only 1: intros k IH f Hf Hk; only 1: intro H; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).	7.33930301666	4832
Coq.FSets.FSetPositive.PositiveSet.In_1	40	6	search with cache (only 1: congruence).	0.0847778320312	65
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	5.1	search with cache (only 1: intros; only 1: easy).	0.0634610652924	39
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	11.0	search with cache (only 1: intros; only 1: now rewrite ?Pos.square_xO).	0.122243881226	113
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	29.4.4	search with cache (only 1: intros x y z; only 1: intuition auto; BinInt.Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: firstorder).	5.74786090851	8930
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	8.0	search with cache (only 1: intros; only 1: auto).	0.0239889621735	11
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.00907802581787	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.0	search with cache (only 1: intros n; only 1: now destruct n).	0.0151319503784	2
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	22	search with cache (only 1: discriminate).	0.0388860702515	231
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	5.4	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.170922040939	90
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.1.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.02751994133	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	5.4	search with cache (only 1: intros; only 1: easy).	0.0803959369659	45
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.2.1.3	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	0.13800907135	86
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.2.4.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	0.0780370235443	46
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	4.11.1.6.1.8	search with cache (only 1: intros H0; only 1: intro a'; only 1: intros y LT; only 1: intros; only 1: subst; only 1: easy || now destruct y).	17.2909920216	17589
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.0.11.1	search with cache (only 1: intros; only 1: destruct b, b'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.591109991074	646
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	15.0	search with cache (only 1: intros a b; only 1: now destruct a, b).	4.34806609154	2963
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.0579650402069	15
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	0.0.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0581529140472	100
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0.0	search with cache (only 1: intro n; only 1: destruct n as [| p| p]; only 1: constructor; only 1: constructor; only 1: constructor).	0.0190029144287	5
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.6	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0181529521942	17
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.022036075592	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0217528343201	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0218119621277	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.10	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	0.336682081223	416
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	1.0.7	search with cache (only 1: intros [| l' o' r']; only 1: reflexivity; only 1: trivial).	0.0591630935669	47
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	6.0.1	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0195920467377	16
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	2.4.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0221049785614	9
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.2.6.9	search with cache (only 1: intros a n Hn; only 1: rewrite remove_spec; only 1: intros (Hb, Ha); only 1: trivial).	0.661227941513	1008
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.1.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0271260738373	7
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.2.1.8.2	search with cache (only 1: intros s x y; only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: auto).	1.25436306	1192
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.02068400383	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.5	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0375809669495	26
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0296778678894	4
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0351119041443	4
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.1.8.5	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	2.42138886452	2365
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.565390110016	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.1.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0176820755005	5
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.2.3.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0210480690002	9
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0160551071167	4
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40	1.3.1.4.1.14.12	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	8.68893790245	9565
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	0.0.1.0.1.0.23	search with cache (only 1: induction i; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	0.947741031647	1892
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	0.129671812057	8
Coq.FSets.FMapPositive.PositiveMap.gempty	40	4	search with cache (only 1: now intros []).	0.0671310424805	11
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.133469820023	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.1	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0606911182404	7
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	18.4915509224	8837
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct i; only 1: destruct m; only 1: auto; only 1: auto; only 1: destruct m; only 1: reflexivity; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.617202997208	250
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	0.8	search with cache (only 1: inversion_clear 1; only 1: auto).	0.14493894577	29
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0667479038239	3
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0698308944702	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	5.0	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.0696671009064	12
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	1.1.3.11.1.6	search with cache (only 1: intro H; only 1: unfold MapsTo; only 1: destruct 1; only 1: rewrite gso; only 1: auto; only 1: auto).	5.98697185516	5373
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.1.0.0.0.0.4.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: unfold map; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	6.90462303162	5330
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.80598592758	7371
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0415420532227	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	1.6.0.3.1.2	search with cache (only 1: intros f Hf; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intro; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	1.22936201096	1378
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	0.0.1.4	search with cache (only 1: intros h; only 1: intros; only 1: symmetry; only 1: intuition).	0.0783021450043	66
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	3.4	search with cache (only 1: intros; only 1: intuition).	0.0445940494537	37
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.13.7	search with cache (only 1: unfold In; only 1: firstorder  (subst; auto); only 1: apply (empty_1 H)).	3.13480210304	2969
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	1.3.3	search with cache (only 1: intros a; only 1: symmetry; only 1: intuition).	0.041393995285	38
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.3.0.2	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto with map).	0.0374691486359	19
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40	0.0.0.1.1.0.0.0.1.4.0.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	2.87073683739	2733
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	7.0.0.0.2.0	search with cache (only 1: split; only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto; only 1: intuition).	1.60817193985	895
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40	0.0.0.1.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	1.10382509232	574
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.3.2	search with cache (only 1: compute; only 1: intros; only 1: auto with map).	0.0166809558868	8
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40	0.0.0.0.0.0.2.0.0.12	search with cache (only 1: compute; only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: destruct (eq_dec x y); only 1: rewrite add_eq_o; only 1: auto; only 1: auto; only 1: rewrite add_neq_o; only 1: auto; only 1: auto).	16.9833750725	10101
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.2.0.0.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.105141878128	13
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	0.0438299179077	16
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40	0.0.0.0.0.2.2.0.6.0.0	search with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: simpl; only 1: auto; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	2.57981109619	2266
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0	search with cache (only 1: split).	0.00890493392944	1
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	1.1.0	search with cache (only 1: red; only 1: compute; only 1: auto).	0.0510652065277	14
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	16	search with cache (only 1: congruence).	4.27871608734	2464
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	2.0.0.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.0407390594482	11
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40	0.0.10.2.8.2	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite Equal_mapsto_iff; only 1: intros; only 1: rewrite <- H; only 1: apply MapsTo_iff; only 1: trivial).	16.8078238964	18296
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.3.0	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0584590435028	37
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	2.0.9	search with cache (only 1: intro; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	0.196748018265	130
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	1.0.2.0.0.1.0.10.0.0.1.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: tauto; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	7.68764591217	8353
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	13	search with cache (only 1: firstorder).	0.788199186325	407
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	0.0.12	search with cache (only 1: intros m1 m2; only 1: compute; only 1: firstorder).	0.822976827621	175
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40	6.19	search with cache (only 1: intros k e; only 1: firstorder).	3.10312795639	2561
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.323723077774	183
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40	0.0.0.0.0.0.0.1.0.1.1.1	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: induction (elements m); only 1: discriminate; only 1: destruct a; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).	6.32612514496	1889
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40	1.1.0.0.0.11.0	search with cache (only 1: intros; only 1: unfold min_elt in *; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	20.6210389137	9985
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	3	search with cache (only 1: inversion_clear 1).	0.0193450450897	4
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.2	search with cache (only 1: unfold Empty, empty; only 1: eauto).	0.0341439247131	4
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	0.7	search with cache (only 1: fix even_spec 1; only 1: auto).	0.0764420032501	23
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	1.9	search with cache (only 1: fix even_spec 1; only 1: auto).	0.565238952637	254
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.3.0.0.0.0.0.4.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	10.8327670097	3814
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.28422498703	9
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.1	search with cache (only 1: intros m Hm x y; only 1: auto).	0.0247271060944	3
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0168800354004	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	1.0.0.0.2	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.0325090885162	8
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.0.1.0.0.2.5.3	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: split; only 1: eauto; only 1: auto; only 1: eauto; only 1: auto; only 1: auto).	2.13439798355	1786
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	0.1.7.2	search with cache (only 1: intros m; only 1: intro H; only 1: intro abs; only 1: inversion abs).	0.634007930756	315
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.022057056427	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0241720676422	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.2.17	search with cache (only 1: intros n; only 1: induction n; only 1: auto).	0.315890073776	643
Coq.FSets.FMapWeakList.Make.cardinal_1	40	1	search with cache (only 1: auto).	0.0497407913208	2
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	2.0.0.0	search with cache (only 1: intros; only 1: split; only 1: Dec.fsetdec; only 1: auto with fset).	0.083055973053	6
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	1.0	search with cache (only 1: intros n m; only 1: now BinInt.Z.nzsimpl).	0.165987014771	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	13.1	search with cache (only 1: compute; only 1: firstorder).	5.37753510475	2121
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	3.1.6.1.36	search with cache (only 1: vm_compute; only 1: split; only 1: Dec.fsetdec; only 1: intros; only 1: intuition).	3.90239596367	4335
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	5.0.2.14.1.1	search with cache (only 1: red; only 1: split; only 1: unfold Same_set, Included, mkEns, In; only 1: intro; only 1: Dec.fsetdec; only 1: inversion 1).	6.10486507416	6481
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	3.4.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder; only 1: Dec.fsetdec).	0.129380941391	18
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	1.80265378952	551
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	3.1.0.0.0.0.3.1.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	9.3405418396	3671
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.137125015259	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40	5.42.0	search with cache (only 1: intros; only 1: f_equiv; only 1: auto with *).	8.52216601372	6500
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40	0.3.11.21.3	search with cache (only 1: intros; only 1: apply subset_1; only 1: intros Heqn; only 1: do 2 rewrite mem_iff; only 1: auto).	18.6936209202	12428
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	1	search with cache (only 1: intuition).	0.0807960033417	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0574090480804	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0.6	search with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.0830869674683	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.203529834747	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.198692798615	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.211155891418	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	1	search with cache (only 1: auto with set).	0.0611250400543	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40	0.0.0.0.0.0.0.2.0.0	search with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	32.8428440094	2661
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.0498290061951	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.154878854752	39
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	35	search with cache (only 1: auto with set).	0.867855072021	621
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	2.5.0.2.5.0.0.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	7.27319383621	2853
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0681281089783	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.3.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.170365810394	29
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	4	search with cache (only 1: auto with set).	0.0612518787384	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	5	search with cache (only 1: intuition).	0.108317136765	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.0588049888611	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	2.0	search with cache (only 1: intros; only 1: auto with set).	0.0757040977478	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	1.4.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0779120922089	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	1.5.0.4.1.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: split; only 1: apply subset_2; only 1: auto with set; only 1: Dec.fsetdec).	5.91417193413	636
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0525240898132	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	1.1.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0604770183563	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	0.0.0.4	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.612679004669	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	1	search with cache (only 1: auto with set).	0.0511009693146	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0689890384674	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.122117996216	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0458431243896	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0447900295258	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0449390411377	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	1	search with cache (only 1: auto with set).	0.0865168571472	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	1	search with cache (only 1: auto with set).	0.0873260498047	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0674591064453	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.180428028107	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.0530071258545	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0742788314819	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0636179447174	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0550379753113	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.058779001236	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.064110994339	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	1	search with cache (only 1: auto with set).	0.0594370365143	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	4.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: intuition).	0.304367780685	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0832657814026	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0846960544586	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	3.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.179674863815	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0948250293732	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0932478904724	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0546469688416	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0498178005219	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	1	search with cache (only 1: auto with set).	0.0608971118927	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0532240867615	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40	1.0.0.0.11.5	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	3.83574700356	2891
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.075177192688	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.195154905319	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.0790369510651	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.160789966583	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0848710536957	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0783488750458	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	8	search with cache (only 1: intuition).	0.218012094498	52
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	13	search with cache (only 1: solve_proper).	0.358563184738	75
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	2.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.090842962265	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.100461006165	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	4.1.0.1.0.0.3	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	1.2753610611	640
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	47.3.2	search with cache (only 1: simpl; only 1: intros; only 1: eauto).	5.90826797485	23265
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	9.9.0.1	search with cache (only 1: intros; only 1: simpl; only 1: generalize (is_empty_1 (s:=s)), (is_empty_2 (s:=s)); only 1: eauto).	1.0846619606	1703
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.1.0.3.1.2	search with cache (only 1: unfold equal; only 1: intros s x; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.349012136459	438
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.5.4.0	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	1.20428800583	1300
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.6.2	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.163723945618	222
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.1.4.13	search with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.64742398262	1392
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	2.0	search with cache (only 1: intros; only 1: firstorder).	0.106693983078	69
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.1.3.8.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	10.8158400059	2942
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.2.8.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	15.8074638844	1507
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0140299797058	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.2.8.3	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.457324981689	743
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.2.1	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.161271095276	46
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.1.6.1	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0967960357666	149
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.1	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0222680568695	14
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.2	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0367078781128	40
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0140910148621	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.1.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.union s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0362169742584	12
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.3.1.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.union s s'); only 1: firstorder; only 1: case (M.inter s s'); only 1: firstorder).	0.0907161235809	15
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.2.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0195631980896	6
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.3.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).	0.0460319519043	15
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	10	search with cache (only 1: decide equality).	0.124639987946	35
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	15.3.3.0	search with cache (only 1: intros; only 1: intros l; only 1: intros; only 1: now rewrite H).	2.42080187798	4505
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	1.2.0.0.2.4	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	2.39908194542	1140
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.200498104095	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	8.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: discriminate).	4.19704508781	1036
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0273809432983	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	12	search with cache (only 1: solve_proper).	0.389926195145	262
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40	5.4.4	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.166654825211	284
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	6.2.1	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.185386896133	163
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.13601899147	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: split; only 1: fsetdec; only 1: fsetdec).	0.175889015198	5
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	0	search with cache (only 1: fsetdec).	0.188621997833	1
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	1	search with cache (only 1: fsetdec).	0.111782073975	2
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0.0.0	search with cache (only 1: red; only 1: intros y LT; only 1: auto).	0.0613169670105	3
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.090010881424	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.198153018951	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0802340507507	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	3.1.0	search with cache (only 1: red; only 1: intros y LT; only 1: fsetdec).	0.11682009697	7
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.104511976242	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.104415893555	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.216977119446	2
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.164161920547	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.155483007431	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.2.2.1	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.508845090866	42
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.19730091095	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.149437904358	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	0	search with cache (only 1: fsetdec).	0.269181966782	1
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.258188009262	1
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.284963846207	26
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.301729202271	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.212953805923	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.223999977112	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.229328870773	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.412248849869	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.216639995575	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.201769828796	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.281715869904	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.34476685524	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.254909038544	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.245849132538	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.399768829346	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.617045879364	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.484074831009	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.140470981598	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.14277100563	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.192761898041	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.167226076126	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.18856215477	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.275411844254	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.355438947678	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	2	search with cache (only 1: fsetdec).	0.141525030136	12
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.144007921219	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.152928113937	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.161911010742	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.398411035538	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.22647190094	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.567667007446	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.302702903748	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.361782073975	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.200246095657	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.108303070068	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.123628854752	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0736479759216	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0676000118256	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.106462955475	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.218409061432	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.159075021744	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0901880264282	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.490798950195	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.170024871826	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.311401128769	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.432601928711	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	1.4.3	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.38049697876	40
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.4.5	search with cache (only 1: intro H; only 1: expAdd; only 1: fsetdec).	0.929092884064	87
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.531430959702	7
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.641479969025	2
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.570269107819	3
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.833680868149	37
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	1.0.3.4	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: trivial; only 1: auto).	0.241264820099	80
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.1.0.5.2	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: exact eq_equivalence; only 1: auto with *).	0.250752925873	138
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0890679359436	3
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.1.0.3	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0791890621185	8
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40	0.12.0.10.10.8	search with cache (only 1: intros; only 1: remember (cardinal s) as n; only 1: case n; only 1: auto with arith; only 1: fix le_div2 1; only 1: trivial).	27.7906458378	30892
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	8.0	search with cache (only 1: symmetry; only 1: intuition).	0.280987024307	82
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.1.0.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: expAdd; only 1: fsetdec).	0.240041017532	7
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	1.1.0.0.0.3.0.0.5	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: intuition).	4.96345901489	3843
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	1	search with cache (only 1: auto with set fset).	0.123698949814	50
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	0.1.0.0.0.0.5.1.7	search with cache (only 1: compute; only 1: intros; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: auto).	2.55714201927	1409
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0980639457703	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.100125074387	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: intuition).	0.318205118179	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.127564907074	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.1.3.0	search with cache (only 1: split; only 1: intro UIP; only 1: auto; only 1: eauto).	0.0296120643616	8
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	2.2	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: fsetdec).	0.113456010818	21
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0521450042725	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.213572025299	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	15	search with cache (only 1: intuition).	0.0752301216125	278
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0363600254059	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	2.12	search with cache (only 1: intros H0; only 1: fsetdec).	0.3480489254	315
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0832548141479	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0894539356232	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.123869895935	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0480501651764	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.15940117836	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.202867984772	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.1.2	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0856499671936	21
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	10	search with cache (only 1: fsetdec).	0.395838022232	111
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	2.4	search with cache (only 1: intros A eq_dec; only 1: fsetdec).	0.100057125092	31
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0765810012817	1
Coq.FSets.FMapList.Raw.empty_1	40	4	search with cache (only 1: inversion_clear 1).	0.0237939357758	5
Coq.FSets.FMapList.Raw.empty_sorted	40	1	search with cache (only 1: constructor).	0.0311598777771	2
Coq.FSets.FMapList.Raw.is_empty_1	40	0.25	search with cache (only 1: fix even_spec 1; only 1: solve [ auto ]).	1.64219713211	1208
Coq.FSets.FMapList.Raw.is_empty_2	40	0.1.0.0.4.5	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: unfold Empty, PX.MapsTo; only 1: intros (k, e) l inlist; only 1: intuition).	2.70790100098	1518
Coq.FSets.FMapList.Raw.mem_1	40	3.10.2	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto).	3.95396709442	852
Coq.FSets.FMapList.Raw.mem_2	40	3.14.1	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto).	17.023663044	16640
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40	0.0.1.0.1.3.1.1.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: eauto with ordered_type; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto).	21.0474750996	6289
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.2.0.0.1.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: intuition).	1.95069098473	631
Coq.FSets.FMapList.Raw.elements_1	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0190110206604	3
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0165700912476	1
Coq.FSets.FMapList.Raw.elements_3	40	3	search with cache (only 1: intuition).	0.0178499221802	4
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	4.1.0.0.10	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).	1.39544701576	1299
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.0.1.1.0.0.0.4.0	search with cache (only 1: intros m x e f; only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: simpl; only 1: auto).	2.6915268898	1913
Coq.FSets.FMapList.Raw.map_sorted	40	4.4.7.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct a as (x', e); only 1: inversion 1; only 1: eauto).	13.6478359699	10696
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.1.1.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear H; only 1: auto).	0.574831962585	183
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.0.0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.539374113083	128
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	0.1.6.2	search with cache (only 1: intros m; only 1: intro; only 1: intro abs; only 1: inversion abs).	0.492028951645	172
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40	1.5.10.27.0.0	search with cache (only 1: intros m; only 1: case m; only 1: intros p l abs; only 1: destruct p; only 1: exact (Raw.empty_1 (elt:=elt)); only 1: inversion abs).	16.6811289787	32079
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0282211303711	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0295829772949	2
Coq.FSets.FMapList.Make.elements_3	40	0.5	search with cache (only 1: induction m; only 1: auto).	0.0505928993225	18
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0228409767151	1
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	2.14.2	search with cache (only 1: intros m; only 1: fix odd_spec 1; only 1: auto).	2.09964799881	2261
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.5	search with cache (only 1: split; only 1: auto with sets).	0.0134701728821	13
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	0.9.2	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.20583319664	257
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.0.4.5.2.9	search with cache (only 1: red; only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.60816693306	3119
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	1.2.6	search with cache (only 1: intro H; only 1: left; only 1: trivial).	0.0186760425568	46
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto).	0.0116729736328	2
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.4.2.1.1.11	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: unfold rev; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).	19.1240830421	8054
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.17	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	4.6132941246	4511
Coq.Numbers.DecimalFacts.unorm_invol	40	0	search with cache (only 1: now induction d).	0.0134041309357	1
Coq.Numbers.DecimalFacts.norm_invol	40	4.4.7	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.375902891159	230
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.1.10.3	search with cache (only 1: revert q; only 1: induction n; only 1: trivial; only 1: trivial).	11.2780630589	2549
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	2	search with cache (only 1: apply of_lu_double_gen).	0.0814890861511	3
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	6	search with cache (only 1: now induction d).	0.38831281662	128
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0592448711395	2
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: trivial).	0.0459129810333	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0634729862213	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	4	search with cache (only 1: trivial).	0.0429232120514	12
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	11.0	search with cache (only 1: simpl; only 1: now induction d).	1.21196484566	76
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	0.0.0.0.0.0.0.0.0.0.1.1	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.974442958832	604
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.2.6.0	search with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: unfold Nat.of_uint; only 1: now induction d).	0.844398021698	411
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	0.0.0.0.0.0.0.0.0.5.0.0.0.0.0.0.7	search with cache (only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: destruct d; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d; only 1: destruct (nzhead d) eqn:E; only 1: auto; only 1: destruct (nzhead_nonzero _ _ E); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	19.2672538757	13473
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.0697619915009	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0963840484619	3
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.0934820175171	7
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	4.6.0	search with cache (only 1: exists (N.of_uint d); only 1: apply Unsigned.to_of; only 1: now induction d).	1.21394991875	886
Coq.Numbers.DecimalN.Signed.of_int_norm	40	11.0.0.0.0.14	search with cache (only 1: unfold N.to_int, N.of_int, norm; only 1: destruct d; only 1: f_equal; only 1: f_equal; only 1: apply unorm_invol; only 1: now induction d).	8.10243797302	4906
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1	search with cache (only 1: trivial).	0.0175230503082	17
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	0.2.0.1.2	search with cache (only 1: repeat red; only 1: intros; only 1: simpl; only 1: BinInt.Z.nzsimpl'; only 1: now f_equiv).	0.196499109268	16
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.1.0.1.4	search with cache (only 1: repeat red; only 1: intros; only 1: simpl; only 1: BinInt.Z.nzsimpl'; only 1: now f_equiv).	0.467432022095	136
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	5.12	search with cache (only 1: fix le_div2 1; only 1: auto with *).	0.607266902924	485
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.13674902916	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.2	search with cache (only 1: compute; only 1: now nzsimpl).	0.0470480918884	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.092924118042	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	5.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.048525094986	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.0989699363708	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.2.2.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.388401985168	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	6.0.0	search with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').	0.25502204895	31
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.2.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.413523197174	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.0.0.1	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: intro m; only 1: now nzsimpl).	0.462538003922	18
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	1.1.3.2	search with cache (only 1: unfold Z.opp, Z.eq; only 1: intro m; only 1: simpl; only 1: now nzsimpl).	0.705181121826	74
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.4.1.0	search with cache (only 1: intros; only 1: intro H; only 1: apply BinInt.Z.lt_nge in H; only 1: now apply H).	0.0268950462341	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	10.0.3	search with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	5.19839310646	1297
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0243248939514	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	1.41263699532	32
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	1.29759812355	32
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0257520675659	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	0.5.2	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	0.316438913345	41
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.4.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	0.0212380886078	10
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0174760818481	7
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.6.13.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	13.2589871883	4971
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	10.2.2	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (mul_0_r a); only 1: now apply mul_le_mono_nonpos_l).	10.3681781292	4656
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	2.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.283977985382	50
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.04354596138	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	4.4.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.195900917053	71
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	1.0.0.5.0.0.0.0.1.37	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_refl; only 1: order').	12.7472679615	11001
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.436470985413	47
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0826191902161	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.270703077316	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0419859886169	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	4.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0308060646057	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0290441513062	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	2.3.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0419018268585	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	6.7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.595947980881	260
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0409820079803	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0413329601288	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	8.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.226652145386	74
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0350368022919	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0896890163422	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0440168380737	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	2.1.1	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0914289951324	20
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.1.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.258768081665	149
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.1.0.0.0.0	search with cache (only 1: intros n m; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.158719062805	28
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.0.0.1.1.1.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	5.39563989639	2799
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.1.1.1.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.791301965714	353
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.2.0.2.0.4.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	3.06641817093	2345
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.235976934433	38
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	2.0	search with cache (only 1: intros n m; only 1: apply abs_nonneg).	0.0433769226074	13
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0107419490814	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.23.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	2.71463179588	2994
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0165159702301	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0196990966797	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.018522977829	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.1.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	2.43784785271	859
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	0.0.0.1.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.185111045837	16
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	1.2.4.1.4.0.4.0	search with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros EQ; only 1: intros _ H; only 1: now apply divide_abs_l).	23.5120429993	13186
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.1.0.2.0.7.2.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	5.43334794044	3043
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.4.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0635139942169	15
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.4.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	2.64742898941	1477
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	2.0.0.1.1.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	4.16502904892	1561
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.6.0.0.0.7.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	17.98427701	3412
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	0.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	1.80803918839	475
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.7.1.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	5.90291690826	3071
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.1.0.0.1.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	11.0101308823	4731
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	0.0.0.5.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	4.5077791214	1781
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	2.86052894592	873
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.3.0.0.5.0.3.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	11.3541340828	7259
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.3.0.0.0.0.11.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: left; only 1: order; only 1: left; only 1: order; only 1: right; only 1: order).	1.90523290634	2890
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.4.9	search with cache (only 1: intro H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.739075899124	721
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0447919368744	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	0.4.1.8.1	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	6.19026899338	2562
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	6.2.5.1.1	search with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: now nzsimpl').	8.8655860424	6205
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.0.3.4.5	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	5.51464509964	4203
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	0.1.0.0.3.5.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: rewrite pred_succ; only 1: apply le_succ_l).	21.6839101315	9247
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.0.6.1.0.5.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	3.93284511566	1751
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.3.1	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.3289270401	95
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.1.0.1	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.452050209045	81
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.0.5.1.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.522120952606	191
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.0.5.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.307938098907	38
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	1.4.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.411035060883	62
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.1.1.3	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	1.09353280067	190
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0124359130859	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0218408107758	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.7.11.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: auto with relations; only 1: now right).	4.4686858654	2874
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.0.0.0.0.2.0.0	search with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: auto with relations; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: now rewrite opp_nonneg_nonpos).	0.270978927612	130
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	7.6.3.8	search with cache (only 1: simpl_relation; only 1: destruct_max n; only 1: auto with sets; only 1: auto).	6.73566889763	7787
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0228629112244	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	5.5.7	search with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.14269900322	258
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.0.1.1.1.0	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: auto using lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: auto using lt_0_1).	0.25372004509	153
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.2.0.0.1.0	search with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	0.22057390213	44
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.10.0.0.1.3.2	search with cache (only 1: intros a b; only 1: intros Ha Hb H; only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	13.5628159046	14043
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0346758365631	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.11.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	4.68197393417	2012
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	2.93365907669	2136
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0126719474792	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.1.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	19.8184969425	12201
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.1.1.4.0.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: intuition; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	13.1076409817	3789
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0112071037292	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	1.0.3.0.1.0.2.3.0.0	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: right; only 1: destruct (mod_neg_bound a b); only 1: order; only 1: auto).	22.2235300541	12704
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0248749256134	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0248720645905	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40	0.4.2.1.0.0.0.1.1.0	search with cache (only 1: intros; only 1: pos_or_neg a; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order; only 1: order; only 1: rewrite <- div_opp_opp by trivial; only 1: rewrite opp_0; only 1: apply Private_NZDiv.div_small; only 1: intuition).	12.8971869946	14578
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.112730979919	140
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00978398323059	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0147109031677	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: split; only 1: order; only 1: order; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	3.644728899	1784
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: split; only 1: intuition order; only 1: apply le_refl; only 1: nzsimpl; only 1: now try split).	0.70659995079	360
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.105086088181	82
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.2.0	search with cache (only 1: intros; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: auto).	0.366447925568	100
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.2.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.233641862869	63
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: order).	0.0414080619812	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	2.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0432021617889	12
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.269900083542	66
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.017028093338	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.2.1.0.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.0158491134644	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0244641304016	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	16.7002208233	8607
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0445120334625	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	1.10.8	search with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	19.0105168819	6069
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.79527878761	353
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.3.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: destruct (lt_ge_cases 0 b) as [Hb'| Hb']; only 1: now rewrite Private_NZDiv.mul_mod_distr_l; only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.340319871902	73
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.2.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.595444917679	84
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.2.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.556729793549	74
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.2.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.360244989395	55
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.2.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.343832015991	39
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.1.1.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	1.44336700439	190
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0322530269623	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	0.0.2.0.0.0.0.1.3.0	search with cache (only 1: intros n m; only 1: apply pred_inj; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: split; only 1: apply pred_inj; only 1: intro H; only 1: now f_equiv).	13.3491899967	3209
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	2.0.0.0.1.4.5.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.5207090378	5524
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0280668735504	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.12.0.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	5.59709501266	1612
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.0.9.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.95957779884	2667
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.9.1.0	search with cache (only 1: intros n m p; only 1: rewrite 2!(add_comm n); only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	33.9376089573	6870
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.1.2.2.0.0	search with cache (only 1: intros n1 n2; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	0.543320894241	202
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.096116065979	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.3.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.0868580341339	26
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite 2!(add_comm n); only 1: now rewrite opp_involutive).	0.614850997925	76
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.0479311943054	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.4.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0627179145813	7
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.8.1	search with cache (only 1: symmetry; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_l, sub_0_l).	0.647480964661	237
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	4.5.1.0.0.1.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite add_succ_l; only 1: rewrite sub_succ_r, sub_succ_l; only 1: now rewrite pred_succ).	8.87705397606	2825
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0255780220032	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0210270881653	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.0545568466187	49
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	2.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.0943608283997	55
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.04496717453	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.245477199554	114
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.01194190979	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00962901115417	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.186434030533	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.2.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	0.0395650863647	15
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	3.0.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.322535037994	64
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0674397945404	36
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.348223924637	95
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0163879394531	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.2.0.2.0	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0162708759308	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0211760997772	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	7.3893840313	3701
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.1.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.142293930054	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0490610599518	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.1.7.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.687683105469	245
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.0.0.0.0.0.2.1.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	4.46319508553	1167
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	1.09409594536	266
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.980231046677	91
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.1.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.503535985947	48
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.1.1.0.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.50702214241	63
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.2.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.37672996521	51
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.1.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.185757875443	21
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.106018066406	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	1	search with cache (only 1: BinInt.Z.order).	0.0669159889221	6
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	9.4.3	search with cache (only 1: intros A eq_dec; only 1: intros Refl Sym l Hl x y Hx Hy; only 1: firstorder).	1.7822291851	1206
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.1.18.1	search with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	1.84860515594	1328
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	3.0	search with cache (only 1: intros a; only 1: now destruct a).	0.0198929309845	5
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0220510959625	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0	search with cache (only 1: reflexivity).	0.00888395309448	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40	9.1.0.5.1	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now f_equal).	33.8943440914	22406
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.2.0	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.0321238040924	5
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0.0.0.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0191237926483	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.2.0.0.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0230350494385	10
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0303390026093	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0223479270935	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40	0.0.1.0.10.0.0.0	search with cache (only 1: intros; only 1: replace k with (k - size + size)%nat by lia; only 1: induction (k - size)%nat; only 1: destruct x; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	12.7993330956	4531
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.0.1	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	1.01712203026	4
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0158410072327	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.1.0.0.0.2	search with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: intros; only 1: simpl; only 1: auto).	3.04681801796	18
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	1.1.1	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.0246748924255	6
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40	5.18	search with cache (only 1: fix le_div2 1; only 1: auto).	10.9208159447	7410
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0115029811859	2
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40	4.13	search with cache (only 1: fix le_div2 1; only 1: auto).	1.77600097656	582
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0.0.1	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.016350030899	4
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.0.3	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.147926092148	14
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	0.5.5	search with cache (only 1: intros n; only 1: intro m; only 1: now destruct n, m).	15.1048359871	96
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0295760631561	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40	1.0.9	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: auto).	1.11798501015	748
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: easy).	0.0122039318085	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: reflexivity).	0.0106539726257	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: auto with zarith).	0.0255792140961	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0100381374359	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0157999992371	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0	search with cache (only 1: auto).	0.0187599658966	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	3.0	search with cache (only 1: intros x y; only 1: reflexivity).	0.0106689929962	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	1.5.4.3	search with cache (only 1: destruct x; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: reflexivity).	37.3548288345	2563
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0112698078156	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.2	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.0307128429413	15
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	1.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0600528717041	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.039048910141	4
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.016753911972	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0238289833069	8
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	39.28	search with cache (only 1: intuition; only 1: lia).	7.66512989998	9241
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0485641956329	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0547180175781	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0	search with cache (only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.055878162384	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.2.0.0	search with cache (only 1: unfold to_Z, zero; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.161157131195	29
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.1	search with cache (only 1: intros x y; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.15482711792	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.9.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.852921962738	372
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	1.0.4.6.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: rewrite <- Zminus_mod_idemp_r; only 1: symmetry; only 1: rewrite Zminus_mod_idemp_r; only 1: apply Zplus_mod_idemp_l).	1.7461578846	1219
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	6.6.21.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite <- Zminus_mod_idemp_l; only 1: rewrite <- Zminus_mod_idemp_r; only 1: auto).	24.003881216	29145
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40	0.0.1.0.0.0.1.7	search with cache (only 1: intros a b Ha Hb; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: assert ([|b|] > 0) by lia; only 1: assert ([|b|] > 0) by lia; only 1: generalize (Z_mod_lt [|a|] [|b|] H0), (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).	5.52942299843	2715
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	1.0.1	search with cache (only 1: intros; only 1: unfold add_carry, to_Z; only 1: trivial).	0.070858001709	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	1.2.0.16.2.0.0	search with cache (only 1: intros; only 1: destruct x; only 1: apply Zquot2_odd_eqn; only 1: generalize (Z.sqrtrem_spec (Z.pos p)); only 1: intro n; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	28.3645670414	17611
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40	0.0.0.0.0.2.1.2.18.5	search with cache (only 1: cut (1 <= 2 ^ Z.pos digits); only 1: induction p; only 1: discriminate; only 1: simpl; only 1: auto using Z.lt_gt with zarith; only 1: auto with zarith; only 1: apply Z.le_trans with (Z.pos digits); only 1: lia; only 1: apply Zpower2_le_lin; only 1: auto with zarith).	19.4983999729	12629
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	0.3.0.1.1.0.8.27	search with cache (only 1: intros n; only 1: generalize (proj1 (is_zero_spec n)); only 1: case is_zero; only 1: intros ->; only 1: reflexivity; only 1: auto; only 1: intros h; only 1: discriminate).	15.1812329292	20376
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0.5	search with cache (only 1: intros n; only 1: auto).	0.0242869853973	15
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	2.43328499794	641
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.1.3	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.479846954346	16
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	search with cache (only 1: intros h; only 1: Z.order_nz).	0.112370967865	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	3	search with cache (only 1: discriminate).	0.110012054443	4
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.0	search with cache (only 1: red; only 1: reflexivity).	0.0755131244659	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: reflexivity).	0.0530250072479	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.0520758628845	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	19	search with cache (only 1: congruence).	0.12186384201	165
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.24.1	search with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	2.21533107758	2697
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.1.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0664329528809	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	0.0.0.2.0.0.17	search with cache (only 1: compute; only 1: intros; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).	2.83169007301	2398
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.4.4.0	search with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.275586128235	218
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	1.4.1.0.1	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intro; only 1: subst; only 1: reflexivity).	1.00927209854	99
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	2	search with cache (only 1: apply subc_spec).	0.0624430179596	3
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	3	search with cache (only 1: apply sub_spec).	0.066624879837	4
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0967311859131	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	2	search with cache (only 1: now intros ->).	0.057336807251	3
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.149378061295	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	6.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.275902032852	9
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	1	search with cache (only 1: reflexivity).	0.0520780086517	2
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.3.1	search with cache (only 1: intros Heqn; only 1: subst; only 1: apply negb_involutive).	0.0709671974182	7
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.114809989929	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0734632015228	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40	3.2.6.3.2.10.0.2	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: apply negbE; only 1: rewrite is_zeroE, lsl_spec, lsr_spec; only 1: generalize φ (i), (to_Z_bounded i), φ (j), (to_Z_bounded j); only 1: intros Heq; only 1: fix odd_spec 1; only 1: auto with zarith).	21.9554507732	21922
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.0787138938904	5
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	1.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.0624828338623	5
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	8.0.1.2.8.3.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lxor_spec, xorb_comm; only 1: generalize (ltb_spec j i); only 1: intros H2; only 1: case H2; only 1: intros _ H3; only 1: ring).	6.1273021698	5240
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	3.24	search with cache (only 1: intros A eq_dec x P H p; only 1: firstorder).	6.50863313675	6048
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.5	search with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.0765361785889	23
Coq.Numbers.Cyclic.Int63.Ring63.test	40	0.3	search with cache (only 1: intros a b; only 1: ring).	0.118599891663	27
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.233497142792	8
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	10.1.0.3.0	search with cache (only 1: split; only 1: split; only 1: red; only 1: easy; only 1: congruence).	1.89338588715	2165
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	34.25	search with cache (only 1: unfold base; only 1: auto with zarith).	5.1424639225	8630
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.0	search with cache (only 1: zify; only 1: congruence).	0.0337190628052	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	0	search with cache (only 1: assumption).	0.0131058692932	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.4.0.1	search with cache (only 1: intro; only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl'; only 1: apply ZnZ.spec_to_Z).	0.434410095215	69
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	1.0.1	search with cache (only 1: intro H; only 1: zify; only 1: trivial).	0.0831968784332	19
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.0468711853027	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.0369210243225	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0495960712433	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.0.0.0.1.0.0.0.1.10.0.0.1.0	search with cache (only 1: induction n; only 1: split; only 1: constructor; only 1: now exists 0; only 1: induction n; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).	23.2216091156	25613
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.0.5.1	search with cache (only 1: intro H; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0372188091278	27
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	2.0.1.0.17.0.0.0	search with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: order).	17.7661747932	13843
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.0.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.00955009460449	3
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.3.1.0.8.0.3.6	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: split; only 1: intros H; only 1: rewrite lt_succ_r; only 1: apply le_0_l; only 1: intros H; only 1: apply neq_succ_0).	32.8384649754	64106
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.0.3.5	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.365406036377	540
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.1.0.0.0.0.0.1.0.0.12	search with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_succ_diag_r).	10.0060470104	12116
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.1.0.0	search with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0254409313202	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.1.0.0.0.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.13353395462	44
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	1.0.3.2	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0319318771362	31
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.5.2.0.2.0.5	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	7.17797708511	6929
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.0.0.0.2.0.2	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	0.938322067261	550
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.1.0.2	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.101625919342	52
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: nzsimpl; only 1: order).	0.0257570743561	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0313220024109	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	3.0.0	search with cache (only 1: intros z n H; only 1: apply div_small; only 1: auto').	0.0143129825592	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: now nzsimpl).	0.0305728912354	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0111830234528	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0151040554047	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.9.5.0.0.0.0	search with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: apply (neq_succ_0 0); only 1: now rewrite <- one_succ; only 1: now nzsimpl').	3.43100309372	4212
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.0.0.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.122430086136	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.00711584091187	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00684499740601	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	3.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: symmetry; only 1: apply mul_comm).	0.0250380039215	16
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	3.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.577527046204	302
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.6.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.062647819519	63
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0854578018188	38
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	1.2.0.0.0.0.1.2.1.2.3.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: intro H1; only 1: now apply H; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	31.031028986	23666
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	3.0.1.1.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	0.0463910102844	12
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0550541877747	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0318551063538	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	1.0.7.1	search with cache (only 1: intros n m p H; only 1: apply div_le_lower_bound; only 1: apply le_0_l; only 1: auto').	0.65660405159	477
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.166532993317	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0660929679871	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.1.2.2.2	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.499200820923	364
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.1.9.0	search with cache (only 1: intros; only 1: intuition; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	1.3873000145	606
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.18243384361	409
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.32091808319	477
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.3.0.1.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0197100639343	11
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.7.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.518523931503	324
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0220170021057	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.3.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.64613699913	208
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0150918960571	15
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0163550376892	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	2.2.4.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	1.75929903984	624
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.0790967941284	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0508460998535	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.1.2.0.1.0.0.0.0.4	search with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: order).	2.76878809929	2590
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0107231140137	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	16.2	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.343986034393	614
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.21.2.14.1	search with cache (only 1: cases ltac:(n); only 1: auto with *; only 1: intro n; only 1: right; only 1: now exists n).	19.6795768738	18819
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	5.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now nzsimpl').	0.243216991425	134
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40	3.10.0.0.4.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	9.83220005035	8929
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.6.3.33	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_0; only 1: auto).	4.76248407364	17092
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	2.23	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.212157964706	336
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	1.0.2.4.7.0	search with cache (only 1: intros; only 1: unfold even; only 1: rewrite recursion_succ; only 1: auto; only 1: reflexivity; only 1: f_equiv').	1.17132401466	1130
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.2.0.7	search with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	0.140303850174	126
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	1.4.0	search with cache (only 1: intros x y z; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l).	0.242386817932	20
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.9.0	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: assumption).	0.723539113998	407
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.2.3.0.0.0.2.1.0.0	search with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	5.22011208534	4285
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	2.4.0	search with cache (only 1: intros x x' EQ; only 1: subst; only 1: easy).	0.0384809970856	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0626039505005	11
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	14.14.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	5.73142409325	6426
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.2.0.0.1.38	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: order').	9.10193586349	7930
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.1.2.0.33.15.1	search with cache (only 1: destr_bool; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: now nzsimpl; only 1: order'; only 1: order_nz).	25.7763779163	28293
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0353200435638	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.030177116394	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	0.10.1.3	search with cache (only 1: repeat red; only 1: intros; only 1: rewrite H; only 1: trivial).	5.28172397614	1162
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.5.3	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.588376045227	70
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.0567619800568	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.11.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	5.11363697052	3546
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.1.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0620691776276	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0693900585175	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0699961185455	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0250511169434	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.0393979549408	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0459351539612	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	4.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0477631092072	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	1.0.21.2.1.2	search with cache (only 1: intros n m; only 1: intros; only 1: bitwise; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: intuition).	35.6024720669	20639
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.041041135788	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0485231876373	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	17.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	2.41773200035	1461
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.2.0.2.0.0.0.0.0.0.0.1.1	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	7.29820609093	4612
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.2.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0474200248718	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.5.6.0.0.0.0.1.0.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	40.0236198902	25565
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	1.58768200874	563
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.6.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.236624002457	46
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	0.0.3.7.1.0	search with cache (only 1: intros a n H; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: symmetry; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).	1.90787601471	1873
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.2.0.0.5	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.761598110199	666
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.1.2	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.21913599968	28
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.0.1.0.0	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0988969802856	18
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	5.0.0.1.0.3.4	search with cache (only 1: intros n m; only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: now nzsimpl).	10.8850340843	6106
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	0.0.0.0.1.2.0.0.0.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.42158389091	1033
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.2.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0274701118469	9
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0897879600525	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.2.0	search with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.414885044098	67
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	6.0	search with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	0.848078012466	139
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.0.0.1.3.1.2	search with cache (only 1: intro n; only 1: intro H; only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	5.47281908989	2500
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.0.0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	2.08944487572	200
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0579779148102	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.0.6.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	0.577071905136	93
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	7.92428803444	1696
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	1.3.3.1	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	0.264496088028	177
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.3.0.9.0	search with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	5.18612885475	2375
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.1.0.2.3	search with cache (only 1: intros; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	0.526657819748	255
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	0.4.0.10.0	search with cache (only 1: intros; only 1: apply pow_lt_mono_r; only 1: order; only 1: now apply le_0_l; only 1: order).	13.6271190643	5301
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: trivial; only 1: apply Private_NZPow.pow_le_mono_l; only 1: trivial).	0.0349769592285	9
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.6.0.0.2.1.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	1.87969398499	1933
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.1.3.1.0.3.0.0.5	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	22.1827499866	12825
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	0.2.0.0.1.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	9.53639602661	2176
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.10.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	27.0902211666	8983
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	5.44733285904	1266
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.3.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l).	10.7226090431	1996
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	2.98901796341	882
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	0.0.0.5.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	5.59541606903	2078
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0142278671265	2
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.1.2.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	1.02353286743	8
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	2.0	search with cache (only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.0209639072418	4
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.12.4	search with cache (only 1: intro H; only 1: unfold lcm; only 1: now nzsimpl).	2.04724693298	1344
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1).	0.0160419940948	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.0.9.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	1.83478498459	1455
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0388739109039	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.029186964035	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	8.4.1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).	2.96059989929	1827
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	8.1.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply add_sub).	8.88864898682	2470
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.0	search with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	0.0886640548706	2
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	0.1.0	search with cache (only 1: intros E; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.180088043213	4
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	0.0.1.0.0.0.1.1.1.0.7.3.0.4.0.0.2	search with cache (only 1: intros a Ha; only 1: destruct (sqrt_spec _ Ha) as (LE, LT); only 1: destruct (le_exists_sub _ _ LE) as (r, (Hr, Hr')); only 1: assert (Ha' : 0 <= √ a) by now apply sqrt_nonneg; only 1: destruct (sqrt_spec a Ha) as (LEa, LTa); only 1: apply sqrt_unique; only 1: split; only 1: order; only 1: nzsimpl'; only 1: apply le_succ_l; only 1: rewrite <- succ_le_mono; only 1: rewrite <- add_assoc; only 1: rewrite <- (add_0_r a²)  at 1; only 1: apply add_le_mono_l; only 1: apply add_nonneg_nonneg; only 1: order; only 1: order).	39.7797880173	26909
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.1.2.7.2	search with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	1.07107400894	196
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.2.0.0.5.9	search with cache (only 1: intro n; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	4.24110388756	3249
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.0.1.0.0.2.0.0.0.3.5.0.0	search with cache (only 1: intros; only 1: destruct (lt_ge_cases a 0) as [Ha| Ha]; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	4.66864299774	4017
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.1.1.1.0	search with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl; only 1: now nzsimpl).	0.0524551868439	9
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	0.2.1.0.0.0.0.0.0.0.0.5.0.0	search with cache (only 1: intros a; only 1: split; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: intros H; only 1: order; only 1: intros H; only 1: order; only 1: intros H; only 1: order; only 1: intros Ha; only 1: rewrite sqrt_up_eqn; only 1: apply lt_succ_r, sqrt_nonneg; only 1: trivial).	33.6070609093	22835
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.48700594902	321
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0157330036163	8
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.1.2.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.190815925598	118
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: order'; only 1: order).	0.010204076767	7
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00739693641663	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.3.0.0.3.0.0.0.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order'; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	11.0459940434	11105
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	5.0.0.8.1	search with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: auto using mod_small).	12.1340868473	7860
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0406188964844	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	2.0.0.0.1.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0431530475616	11
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0976891517639	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.2.0.2	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.225295066833	55
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0590491294861	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.5.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.361529827118	81
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0747509002686	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0245370864868	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	13.0.1	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.842766046524	569
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.6.2.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: left; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.596177101135	324
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	7.0.1.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: firstorder).	0.344390869141	160
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0107650756836	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.0.4.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.0247130393982	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0152640342712	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0160059928894	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0156471729279	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0158770084381	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	2	search with cache (only 1: order).	0.115155935287	97
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	2	search with cache (only 1: order).	0.0842969417572	71
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.4.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: now transitivity y).	0.0486128330231	39
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.21.5	search with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	29.0496649742	25338
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	3.4.9.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	7.55263185501	4885
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.4.0	search with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.00954699516296	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.1.0.14.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	7.91070818901	6111
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.4.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0166819095612	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.9.1	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0886800289154	103
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.0.3.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.030454158783	18
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	2.2.3.14	search with cache (only 1: intros n m; only 1: rewrite one_succ; only 1: rewrite <- le_succ_l; only 1: order).	1.91038799286	3007
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.1.1.2	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.394932985306	248
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	1.1.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0660917758942	65
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.0.2.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	0.579418182373	98
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.0.6.2.0.1	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	36.433795929	1031
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	1.1.18.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	3.12511396408	2295
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	8	search with cache (only 1: intuition order).	0.188289880753	108
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	1	search with cache (only 1: intuition order).	0.111311912537	31
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	1.0.1.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.012332201004	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.1.5.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: generalize (le_gt_cases n m); only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	1.21759295464	1079
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0130159854889	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0125470161438	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	2.0.2.0.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0169150829315	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.0.1.1.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.598556041718	214
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.0.2.0.0.0.1.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	0.76229095459	394
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	27.1	search with cache (only 1: intros RS' n; only 1: order).	35.5120849609	10688
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40	6.3	search with cache (only 1: intros L R n; only 1: firstorder).	0.0766129493713	123
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	8.2.4	search with cache (only 1: intros m H1 H2; only 1: apply strong_right_induction; only 1: now apply rs_rs').	5.39198303223	4937
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40	0.3.1.1	search with cache (only 1: intro n; only 1: intro H1; only 1: compute; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.202711105347	18
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	0.4.2.3	search with cache (only 1: intro n; only 1: intro H1; only 1: compute; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.39917802811	200
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	13	search with cache (only 1: solve_proper).	0.0536911487579	95
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	1.1.2	search with cache (only 1: fix le_div2 1; only 1: intros a; only 1: trivial).	0.0446670055389	43
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.17	search with cache (only 1: fix le_div2 1; only 1: now unfold ofnat).	2.15572214127	656
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	1.1.0.13.6	search with cache (only 1: intros a; only 1: fix even_spec 1; only 1: destruct m; only 1: auto; only 1: auto).	18.2634329796	28194
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.1.2.2.1.5	search with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: intros n; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	2.09015607834	1805
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0511169433594	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	2.0.0.0.0.0.6.3	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.06409788132	698
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0357959270477	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.3.4.2.1	search with cache (only 1: intros n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: reflexivity; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.989147901535	750
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0299751758575	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.026869058609	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	1.1.1.2.0.3.1	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: intro H1; only 1: trivial).	0.525599002838	459
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.244962930679	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	2.45473194122	636
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.8.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.35471200943	71
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	2.3.0.0	search with cache (only 1: intros; only 1: rewrite <- even_spec in H; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.0571138858795	16
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.2.0.1.0.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: apply even_spec in Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0369639396667	16
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	1.0.8.0.1.2.0	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: apply even_spec in Hm; only 1: case_eq (even n); only 1: now rewrite even_mul, Hm; only 1: now rewrite even_mul, Hm).	3.50273299217	2990
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.4.0.0.9.0	search with cache (only 1: intros; only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	11.6320610046	3218
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.15798997879	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.252822160721	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	1.0.0.3.0.1.5.3	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl'; only 1: intro n; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	7.60107493401	3750
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0364179611206	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0313410758972	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.0.0.2	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl').	0.115840911865	17
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	2.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.103677988052	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0480029582977	3
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0420029163361	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	17.0.3.1.1.1.21	search with cache (only 1: apply log2_unique' with 0; only 1: order; only 1: split; only 1: order; only 1: nzsimpl; only 1: apply lt_0_1; only 1: now nzsimpl').	35.4093379974	30691
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.13.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	3.53202486038	2493
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.0.0.0.0.0.14	search with cache (only 1: unfold log2_up; only 1: intros; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	27.5728480816	11060
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	2.3.1.1.4	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.858505010605	777
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	1.2	search with cache (only 1: intros; only 1: firstorder).	0.0231819152832	28
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	search with cache (only 1: intros; only 1: firstorder).	0.0163450241089	14
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.2.3.1	search with cache (only 1: symmetry; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto).	0.0597920417786	111
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	1.3.0.0.5.0	search with cache (only 1: intros n m p H; only 1: generalize (lt_trans n m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	7.10696601868	1921
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	2.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.543641805649	32
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.0.2.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: apply eq_mul_0 in H1; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0390119552612	25
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.2.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.02077293396	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0	search with cache (only 1: reflexivity).	0.00700998306274	1
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0190010070801	11
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.00711512565613	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	4	search with cache (only 1: eauto using eq_trans, eq_sym).	3.31530284882	18
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.2.0.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.104511022568	65
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.3.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.0309388637543	14
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.0.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0553328990936	127
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	5.3	search with cache (only 1: intros x x' Hx y y' Hy; only 1: now f_equiv).	0.249212026596	37
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.4.3	search with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.075493812561	24
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	6.0.1.13	search with cache (only 1: intros a b Hb; only 1: intros Ha'; only 1: apply (Z.lt_irrefl 0); only 1: Nat.order).	5.37218999863	4472
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0534689426422	3
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0572879314423	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	17.1.2	search with cache (only 1: intros n; only 1: induction n; only 1: easy).	0.664297103882	873
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	7.15.11	search with cache (only 1: intros a b H; only 1: destruct H; only 1: easy).	6.67824411392	3923
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	1.5.5	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	0.475337028503	275
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	1.1.0.0.6.3.0.3	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq; only 1: simpl; only 1: unfold eq, lt; only 1: simpl; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	23.7881579399	2804
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	5.2	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.142951011658	44
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.152338981628	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.3.2	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: auto).	0.0165910720825	13
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	1.1.0.6.1.0.5	search with cache (only 1: unfold eq, lt, le in *; only 1: intros; only 1: case leb; only 1: case leb; only 1: tauto; only 1: intuition; only 1: intuition).	20.7022228241	12532
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.11.1	search with cache (only 1: intros n; only 1: red; only 1: eauto).	0.197180986404	311
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.4.4.7	search with cache (only 1: induction x; only 1: red; only 1: destruct 1; only 1: auto).	2.09911704063	1027
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.1	search with cache (only 1: apply eqb_eq; only 1: reflexivity).	0.0317199230194	4
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	0.5.1.6.0.5.1.6.6.5	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: symmetry; only 1: apply eqb_eq; only 1: trivial; only 1: apply eqb_eq; only 1: symmetry; only 1: apply eqb_eq; only 1: trivial).	20.6840920448	19010
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	5.8.10.9.25	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: repeat red; only 1: apply Logic.eq_trans).	3.72877907753	12031
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	0.0.0.38.0	search with cache (only 1: intros; only 1: case_eq (PeanoNat.Nat.compare x y); only 1: auto; only 1: auto; only 1: auto).	3.29961299896	7962
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	2.0.0.0.0.2	search with cache (only 1: split; only 1: destruct (compare x y); only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.585086107254	157
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	search with cache (only 1: order).	1.01854586601	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.0317661762238	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0189850330353	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.0335569381714	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0303311347961	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.1.1.0	search with cache (only 1: destruct (compare x y); only 1: intuition; only 1: intuition; only 1: auto).	0.030088186264	6
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0184400081635	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.044312953949	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0176069736481	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0400741100311	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0328929424286	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0309190750122	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.01713514328	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0165770053864	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.38040804863	470
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.673419952393	440
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	8.8.0.1.0	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: auto with ordered_type; only 1: auto with ordered_type).	12.1593921185	9011
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.2.3	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0581891536713	21
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	4.0.0.0.0.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	0.810143947601	514
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	0.0.3.1.2.0.13	search with cache (only 1: induction l as [| a l' Hrec]; only 1: auto with *; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	7.12731909752	5284
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	0.8.3.4	search with cache (only 1: intros x y z; only 1: intros H; only 1: rewrite <- H; only 1: auto).	1.32953000069	1027
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.0.0.6	search with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0538768768311	36
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	7.2.8	search with cache (only 1: simple induction l; only 1: auto; only 1: intuition).	0.424832105637	493
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.2	search with cache (only 1: induction 1; only 1: auto).	0.0188660621643	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.0205669403076	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0159528255463	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	3.1	search with cache (only 1: unfold eqk, eqke; only 1: firstorder).	0.027065038681	6
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.0156741142273	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	1.4.0	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: intuition).	0.060977935791	8
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	3.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0308630466461	5
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	1.8.8	search with cache (only 1: unfold eqk, eqke; only 1: intros x y z; only 1: order).	0.942053794861	812
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	0.3.6.5.2.3	search with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto with ordered_type; only 1: simpl in *; only 1: subst; only 1: auto).	11.8783860207	2859
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0235691070557	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0193030834198	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	7.0.2.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	0.814044952393	362
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	8.0.0.4	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.679522037506	308
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0449049472809	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.1.15.7.15.10.1	search with cache (only 1: split; only 1: unfold eqke, ltk; only 1: intros l; only 1: intuition; only 1: intros l; only 1: order; only 1: eauto with ordered_type).	4.7852678299	7659
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	10.8.5.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: order).	35.4336519241	18399
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0185651779175	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0191810131073	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0187239646912	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.2.7.2	search with cache (only 1: unfold eqke, ltk; only 1: induction 1; only 1: intuition; only 1: auto).	0.5541639328	383
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	3.1.10.0.0.17	search with cache (only 1: induction l as [| x xs Hl]; only 1: unfold eqk, ltk; only 1: eauto with ordered_type; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	11.3106322289	12190
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.0.0.5.7.4	search with cache (only 1: unfold ltk, eqk; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	4.03144097328	2736
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.10.4.1	search with cache (only 1: inversion 1; only 1: intros; only 1: intuition; only 1: eauto with *).	1.19680309296	1017
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.0.0.0	search with cache (only 1: unfold eqk, ltk; only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0474171638489	5
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0315670967102	18
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	0.0.0.0.0.0.0.2.0.0.0.0.1.1.2.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	27.4267110825	12360
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.1.0.0.0.0.0.1.1.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	7.7073559761	2653
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.1.1.0.0.0.1.1.0.0.5	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy).	5.27188014984	3209
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	2.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0302760601044	4
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	2.2.2.2.20	search with cache (only 1: split; only 1: repeat red; only 1: iorder; only 1: repeat red; only 1: iorder).	0.253263950348	624
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	6.0.0	search with cache (only 1: compute; only 1: intros x y; only 1: order).	0.0372350215912	35
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	0.8	search with cache (only 1: compute; only 1: iorder).	0.126020908356	57
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.015331029892	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	0.9.18.10.18.9.3	search with cache (only 1: destr_bool; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: left; only 1: order; only 1: left; only 1: order; only 1: intuition).	26.2334148884	59444
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.0897479057312	31
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	5	search with cache (only 1: iorder).	0.202888011932	94
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	3.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.165229082108	44
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0182728767395	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.0.3.2.2.0	search with cache (only 1: intro H; only 1: intro EQ; only 1: eapply OrderTac.lt_irrefl; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	0.333858013153	121
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0212149620056	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0181639194489	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	3	search with cache (only 1: order).	2.02007889748	11
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	2	search with cache (only 1: order).	1.01353883743	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2	search with cache (only 1: order).	1.01258587837	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	2	search with cache (only 1: order).	1.01138091087	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	7.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0310609340668	15
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	7.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0556769371033	30
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0121510028839	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	search with cache (only 1: order).	0.057315826416	55
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.0116930007935	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	1	search with cache (only 1: intuition).	0.0123391151428	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.2	search with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0721158981323	25
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.0111200809479	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.0111770629883	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.0110259056091	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.01043009758	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.1	search with cache (only 1: unfold lt; only 1: auto with *).	0.0182709693909	3
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0144579410553	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.4	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0166640281677	8
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0206780433655	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	5	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0406739711761	12
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	1.0.0.13.9	search with cache (only 1: symmetry; only 1: case leb_spec0; only 1: intuition; only 1: symmetry; only 1: intuition).	15.7858381271	9716
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.0.0.19.1.11	search with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	6.44947910309	6925
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.1.15	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.780304908752	410
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	1.1.4	search with cache (only 1: intros l1 l2 Eq x; only 1: subst; only 1: auto).	0.020791053772	9
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.0.0.2.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0518159866333	10
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.1.0.5.1.0.6	search with cache (only 1: destruct l; only 1: auto; only 1: constructor; only 1: transitivity y; only 1: auto; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: auto).	1.31428194046	1639
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	10.1.1.0.5	search with cache (only 1: destruct l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	2.2129149437	2713
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0345571041107	9
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	2.2.1.6	search with cache (only 1: simple induction l; only 1: auto; only 1: constructor; only 1: intuition).	0.181341171265	181
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	5	search with cache (only 1: solve_proper).	0.0741500854492	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	10.6.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold RelCompFun; only 1: solve_proper).	16.954816103	2539
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1	search with cache (only 1: eauto with *).	0.0194058418274	2
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0557398796082	3
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.131199836731	1
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2	search with cache (only 1: firstorder).	0.0194919109344	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.0275850296021	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0165967941284	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0179600715637	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.0184378623962	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: auto).	0.0152060985565	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0145308971405	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	1	search with cache (only 1: firstorder).	0.0152049064636	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.1.16	search with cache (only 1: induction 1; only 1: firstorder; only 1: auto).	0.265516996384	377
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0321691036224	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	0.0.0.0.0.0.1.24.4.4.2	search with cache (only 1: unfold In, MapsTo; only 1: intuition; only 1: firstorder; only 1: induction H; only 1: firstorder; only 1: auto; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: compute in E; only 1: exists e'; only 1: now rewrite E).	11.2468831539	17100
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.2.1	search with cache (only 1: unfold In, MapsTo; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).	0.113878965378	47
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	3	search with cache (only 1: now intros <-).	0.0340518951416	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0411760807037	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0.0.4	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: induction 1; only 1: auto; only 1: firstorder).	0.117259979248	8
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.0.4.20	search with cache (only 1: inversion 1; only 1: induction 1; only 1: trivial; only 1: auto).	4.485019207	2799
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.8.3	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.813024997711	243
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.3	search with cache (only 1: induction 1; only 1: auto).	0.0367870330811	5
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	0	search with cache (only 1: auto).	0.0139770507812	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0145018100739	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0168058872223	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.4.0	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: auto).	0.0221040248871	7
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	2.7	search with cache (only 1: intros P Q H xs H0; only 1: eauto).	0.15719294548	94
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.13	search with cache (only 1: fix gcd_divide 1; only 1: eauto).	1.92788791656	411
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	2.0.0.2	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: eauto).	0.0594651699066	8
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0516040325165	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.0.12.3.10	search with cache (only 1: intro Pdec; only 1: induction 1 as [| ? ? ? ? HForall]; only 1: destruct H; only 1: eauto; only 1: eauto).	8.66622495651	3983
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.1.1.2.6	search with cache (only 1: intros x y z H; only 1: revert z; only 1: induction 1 as [| ? ? ? ? HForall]; only 1: eauto; only 1: auto).	0.593127012253	305
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40	0.0.1.2.9.0.0.1.1.0.5.10	search with cache (only 1: intros a b Ha Hb; only 1: intros; only 1: induction H; only 1: unfold MapsTo in *; only 1: induction H; only 1: destruct y; only 1: exists e; only 1: destruct H; only 1: eauto; only 1: destruct IHInA as [e H0]; only 1: exists e; only 1: auto).	15.2688741684	17005
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.6.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.0543310642242	14
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.2.0.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: auto).	0.0554559230804	7
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	2.2.9	search with cache (only 1: repeat red; only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0460970401764	109
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	5.0	search with cache (only 1: unfold eq, lt, compare; only 1: decide equality).	0.0322198867798	7
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0912570953369	176
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	2.17378091812	1979
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.1.0.0.2.5	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).	0.118525028229	173
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0103161334991	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	2	search with cache (only 1: solve_max).	0.0150570869446	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0192341804504	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0306270122528	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.3.0.2.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0181219577789	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0112838745117	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	2	search with cache (only 1: solve_max).	0.129939079285	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.2.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0833730697632	32
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0151088237762	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	1.0.1.1.0.0	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: solve_max).	0.0589261054993	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0340430736542	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.13604092598	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	3.0.0.0.3.0.0.0.0	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	4.5783970356	3004
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.10	search with cache (only 1: apply min_l; only 1: order).	0.0168781280518	33
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.0.1.0.6	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.206096887589	197
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	2	search with cache (only 1: solve_min).	0.0113887786865	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	1	search with cache (only 1: solve_min).	0.0182709693909	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0138478279114	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.1.0.0.2.12.9	search with cache (only 1: intros; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order)).	37.983727932	22842
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	3.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.32821416855	543
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	1.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.35569405556	291
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	5	search with cache (only 1: solve_min).	0.0341260433197	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	search with cache (only 1: solve_min).	0.0137579441071	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.013377904892	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	1.1.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0399589538574	22
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0120480060577	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	1	search with cache (only 1: solve_min).	0.0249769687653	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0208320617676	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.4.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0961489677429	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.3	search with cache (only 1: apply max_l; only 1: solve_min).	0.134974956512	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.0.1.0	search with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.0401389598846	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.2.0.0.0.0.0.1.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.66256189346	1722
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	0.1.0.1.0.0.0.1.1.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.00233507156	1432
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	1.0.8.26	search with cache (only 1: intros x x' Hxx'; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).	2.28997898102	2346
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.9	search with cache (only 1: apply min_mono; only 1: eauto with *).	0.0312430858612	46
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.4.3.5.14	search with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: tauto).	12.029501915	15781
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00826096534729	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0100469589233	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.00937986373901	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.8	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0583930015564	56
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.2.7.0	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.431843996048	266
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	4.2	search with cache (only 1: unfold eq, lt; only 1: decide equality).	0.0191798210144	13
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40	0.0.0.0.0.0.3.23.0	search with cache (only 1: intros; only 1: compute; only 1: elim_comp; only 1: elim_comp; only 1: auto; only 1: elim_comp; only 1: trivial; only 1: elim_comp; only 1: auto).	3.13543105125	7503
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	2.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0647060871124	8
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.0.0.0.1.2.0.32	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	11.339619875	9413
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0361950397491	5
Coq.ZArith.Znat.positive_N_Z	40	2.3.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: simpl; only 1: f_equal).	0.0451500415802	8
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: reflexivity).	0.0425891876221	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0755770206451	6
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0601098537445	4
Coq.ZArith.Znat.Z_nat_N	40	0.1.0.0.0.1.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: reflexivity).	0.415208816528	242
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0347290039062	1
Coq.ZArith.Znat.Zabs_nat_N	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0804870128632	7
Coq.ZArith.Znat.N2Z.id	40	0	search with cache (only 1: now destruct n).	0.0312941074371	1
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: congruence).	1.48139309883	864
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.1.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now Morphisms.f_equiv).	2.31583881378	1142
Coq.ZArith.Znat.N2Z.is_nonneg	40
Coq.ZArith.Znat.N2Z.inj_0	40	6	search with cache (only 1: trivial).	0.0449779033661	7
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.028792142868	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0423810482025	10
Coq.ZArith.Znat.N2Z.inj_le	40
Coq.ZArith.Znat.N2Z.inj_lt	40	6.7	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	1.79386496544	602
Coq.ZArith.Znat.N2Z.inj_ge	40	3.6.8	search with cache (only 1: unfold N.le, N.ge; only 1: symmetry; only 1: now destruct n, m).	0.941178798676	365
Coq.ZArith.Znat.N2Z.inj_gt	40	5.4	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0721769332886	27
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	1	search with cache (only 1: now destruct n, m).	0.0507621765137	2
Coq.ZArith.Znat.N2Z.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0524270534515	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.144065856934	23
Coq.ZArith.Znat.N2Z.inj_pred_max	40	3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.0360510349274	7
Coq.ZArith.Znat.N2Z.inj_pred	40	3.0.2.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: intro H; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: now destruct p).	0.0546219348907	10
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.5.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.226218938828	94
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0337059497833	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.109503030777	10
Coq.ZArith.Znat.Z2N.id	40	1.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0396840572357	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intros; only 1: now Morphisms.f_equiv).	0.142639875412	61
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0353960990906	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct n; only 1: simpl; only 1: trivial).	0.0535800457001	6
Coq.ZArith.Znat.Z2N.inj_neg	40	2	search with cache (only 1: trivial).	0.0260691642761	3
Coq.ZArith.Znat.Z2N.inj_add	40	3.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0797078609467	5
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	1.58098816872	348
Coq.ZArith.Znat.Z2N.inj_succ	40	1.2.2.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	0.862895011902	222
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.0620200634003	9
Coq.ZArith.Znat.Z2N.inj_compare	40	1.6	search with cache (only 1: intros; only 1: now destruct n, m).	0.765031099319	230
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.4.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.427816152573	203
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0737509727478	11
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	2	search with cache (only 1: now destruct n).	0.0661227703094	3
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	4.1	search with cache (only 1: intros; only 1: now destruct n).	0.0664570331573	7
Coq.ZArith.Znat.Zabs2N.id_abs	40	2	search with cache (only 1: now destruct n).	0.0981318950653	21
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0380930900574	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0328500270844	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0417711734772	7
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0279450416565	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0669310092926	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.2.1.3.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: intro H; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: now destruct 1).	3.29990196228	1320
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	2.9452688694	548
Coq.ZArith.Znat.Zabs2N.inj_mul	40	3	search with cache (only 1: now destruct n, m).	0.778561830521	199
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	1.3.1.3.0	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: easy).	2.09119987488	479
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.246356010437	80
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0428531169891	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.040461063385	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.0.0.0.0.1.6.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: destruct p as [p| p| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	9.45318603516	3990
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	45	search with cache (only 1: now destruct n, m).	29.303139925	16729
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0360689163208	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: reflexivity).	0.0386021137238	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.1.0.7	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.135978937149	88
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0356550216675	1
Coq.ZArith.Znat.Nat2Z.id	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.0505068302155	7
Coq.ZArith.Znat.Nat2Z.inj	40	19.0	search with cache (only 1: intro H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	5.27105498314	8842
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now subst).	0.0657351016998	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	7.0.12	search with cache (only 1: unfold Z.le; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	5.37903690338	5255
Coq.ZArith.Znat.Nat2Z.inj_lt	40	6.0.4	search with cache (only 1: unfold Z.lt; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.822985172272	331
Coq.ZArith.Znat.Nat2Z.inj_ge	40	4.0.1.0.0	search with cache (only 1: unfold Z.ge; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.0868828296661	15
Coq.ZArith.Znat.Nat2Z.inj_gt	40	2.0.1.0.2	search with cache (only 1: unfold Z.gt; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.0455989837646	11
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.5.0.7.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: intros H; only 1: simpl; only 1: now destruct Hn || now destruct Hm || clear; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	6.81795406342	4965
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0360491275787	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0472118854523	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0366771221161	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.0382869243622	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.0489389896393	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	0.13.2.2.4	search with cache (only 1: unfold Z.succ; only 1: intros; only 1: rewrite Z2N.inj_add by easy; only 1: Z.nzsimpl; only 1: easy).	5.00250792503	7630
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0581188201904	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	2.0	search with cache (only 1: intros; only 1: now destruct n).	0.0398049354553	4
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	1.39423894882	989
Coq.ZArith.Znat.Zabs2Nat.id	40	0.1.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.0543558597565	8
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0352990627289	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0369019508362	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0543360710144	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0677480697632	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0660519599915	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	6.6.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	1.14569783211	1029
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).	22.9891672134	21683
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40	3.0.3.0.7.0.1.12	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: now Z.nzsimpl; only 1: simpl; only 1: intro H; only 1: apply IHn; only 1: now apply Peano.le_S_n).	32.9359509945	31685
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.0426728725433	12
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.0.0.0.1.0.1.0.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	29.465116024	20538
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.0.1.0.1.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	12.4166679382	7156
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0325770378113	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	19.7289721966	10056
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	1.1.0.1.0.5	search with cache (only 1: intros n Hn; only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	1.07803988457	734
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.2.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0425040721893	8
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.120368003845	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0432829856873	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	6.0	search with cache (only 1: Z.bitwise; only 1: now destruct a).	0.026447057724	8
Coq.ZArith.Zquot.Zrem_0_l	40	0.0	search with cache (only 1: Z.bitwise; only 1: trivial).	0.081346988678	2
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0176122188568	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.020742893219	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0263059139252	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	2.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0215749740601	9
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.11.4	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.681768894196	761
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.0.5.10.12.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: symmetry; only 1: rewrite Z.mod_divide; only 1: intuition; only 1: trivial; only 1: trivial).	11.9060060978	9399
Coq.ZArith.Zdigits.binary_value	40	12	search with cache (only 1: constructor).	0.0395820140839	112
Coq.ZArith.Zdigits.two_compl_value	40	2.0.0.0.0.0	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0183091163635	8
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0120410919189	3
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0134608745575	2
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	2	search with cache (only 1: reflexivity).	0.0102829933167	3
Coq.ZArith.Zdigits.Z_div2_value	40	1.0.4.0.0.2	search with cache (only 1: destruct z; only 1: simpl; only 1: reflexivity; only 1: now try destruct p; only 1: simpl; only 1: now destruct 1 || trivial).	2.60878992081	705
Coq.ZArith.Zdigits.Pdiv2	40	0.11.0.9.1	search with cache (only 1: intros; only 1: destruct z; only 1: easy; only 1: now try destruct p; only 1: trivial).	1.50955104828	1287
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0200769901276	2
Coq.ZArith.Zdigits.Zeven_bit_value	40	9.16.2	search with cache (only 1: intros n Hn; only 1: apply Zeven_bool_iff in Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	7.79017806053	7971
Coq.ZArith.Zdigits.Zodd_bit_value	40	1.0.1.0.6.2	search with cache (only 1: intros; only 1: destruct z; only 1: simpl; only 1: easy; only 1: now destruct p; only 1: now destruct p).	2.83785295486	1884
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.0358607769012	10
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.36	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	2.34168791771	5110
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.0170300006866	7
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	5	search with cache (only 1: now destruct n).	0.0093469619751	6
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	3	search with cache (only 1: now destruct n).	0.00784587860107	4
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	3	search with cache (only 1: now destruct n).	0.0167291164398	4
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.29	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.610173940659	658
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	6	search with cache (only 1: now destruct n, m).	0.0479819774628	31
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: reflexivity).	0.0120449066162	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: trivial).	0.00864505767822	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0116720199585	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0122110843658	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.1.0.2.1.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: reflexivity).	0.767940044403	623
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.00926208496094	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.00765204429626	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00717091560364	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40	2.0.2.0.1.3.4.0.13	search with cache (only 1: revert m; only 1: induction n; only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption; only 1: fix odd_spec 1; only 1: now destruct p; only 1: fix odd_spec 1; only 1: now destruct p).	11.0830328465	17111
Coq.ZArith.BinInt.Z.leb_le	40	2.0.2.0.1.3.4.0.5	search with cache (only 1: revert m; only 1: induction n; only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption; only 1: fix odd_spec 1; only 1: now destruct p; only 1: fix odd_spec 1; only 1: now destruct p).	12.8605079651	11882
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.00632500648499	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0111560821533	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.2.1.0.0.10	search with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: trivial).	0.361948013306	414
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	10.1	search with cache (only 1: intro H; only 1: now destruct n).	0.0861618518829	101
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0190041065216	5
Coq.ZArith.BinInt.Z.sgn_null	40	3.0	search with cache (only 1: intros H; only 1: now destruct n).	0.0187878608704	5
Coq.ZArith.BinInt.Z.sgn_pos	40	3	search with cache (only 1: now destruct n).	0.193573951721	37
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0115420818329	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now subst).	0.0065929889679	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.1.8.4.2	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: symmetry; only 1: now f_equiv; only 1: now destruct 1 || intros _).	2.19256520271	945
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0114269256592	1
Coq.ZArith.BinInt.Z.square_spec	40	1.0.0.1.0.0.0.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.776684045792	291
Coq.ZArith.BinInt.Z.sqrtrem_spec	40	3.0.0.0.0.0.1.0.0.0.0.0.2	search with cache (only 1: intro H; only 1: destruct n; only 1: now split; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: destruct 1; only 1: subst; only 1: now split; only 1: subst; only 1: now split; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl; only 1: now destruct 1).	3.33787202835	2058
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	search with cache (only 1: now destruct n).	0.0115208625793	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.9.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	3.24540400505	1432
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0106008052826	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: reflexivity).	0.0116651058197	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	4	search with cache (only 1: now destruct n).	0.315618991852	5
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0124549865723	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.2	search with cache (only 1: intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.251502990723	75
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite N.mul_comm).	0.0259339809418	7
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.0.0.0.0.0.1	search with cache (only 1: rewrite <- N.ggcd_gcd; only 1: generalize (N.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite N.mul_comm).	0.0211238861084	8
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	5.82390904427	4911
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0275270938873	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.00969099998474	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	10	search with cache (only 1: now destruct n).	0.0165379047394	21
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0121591091156	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40	1.13.30.5	search with cache (only 1: simpl; only 1: revert a; only 1: fix even_spec 1; only 1: easy).	7.11960196495	8680
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a).	0.00823998451233	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	1	search with cache (only 1: apply N.gt_lt_iff).	0.0134038925171	2
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0138220787048	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	3	search with cache (only 1: apply N.ge_le_iff).	0.00927305221558	4
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00970387458801	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	4	search with cache (only 1: apply mul_cancel_l).	0.0163719654083	23
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.12.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	22.2031359673	9707
Coq.ZArith.BinInt.Pos2Z.id	40	0.3	search with cache (only 1: simpl; only 1: trivial).	0.0228519439697	5
Coq.ZArith.BinInt.Pos2Z.inj	40	0	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.00897908210754	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: now injection 1 || (intros; now f_equal)).	0.0178620815277	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.00979900360107	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	4	search with cache (only 1: easy).	0.0129947662354	5
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: easy).	0.00875782966614	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1	search with cache (only 1: easy).	0.013041973114	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0102589130402	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	2.6	search with cache (only 1: simpl; only 1: now destruct p).	0.0172789096832	10
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0113639831543	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	5.1	search with cache (only 1: intros H; only 1: now destruct p).	0.712764024734	439
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.00765085220337	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	2	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00873899459839	3
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0124850273132	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0092339515686	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.1.0.4.0	search with cache (only 1: revert q; only 1: destruct q; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.210212945938	145
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	search with cache (only 1: reflexivity).	0.0079460144043	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.00767111778259	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.00765204429626	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.01229596138	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	search with cache (only 1: reflexivity).	0.00959706306458	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.0.0.0.5.0.4	search with cache (only 1: simpl; only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	1.30575108528	852
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: now injection 1).	0.00835609436035	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0134789943695	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.00820112228394	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0133638381958	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.00911402702332	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.0124678611755	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.00840497016907	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0620131492615	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	2	search with cache (only 1: now f_equal).	0.0123949050903	3
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.00857305526733	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.0.2.4.0.0.0	search with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: revert q; only 1: red; only 1: intros m Hm; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	7.75794005394	1009
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	6.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.0190188884735	10
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	1.0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0115561485291	5
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.00744581222534	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.00735402107239	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00717782974243	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00751495361328	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	search with cache (only 1: trivial).	0.00735712051392	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.00694704055786	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0093560218811	2
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.0.1.1	search with cache (only 1: revert q; only 1: intro m; only 1: simpl; only 1: trivial).	0.263859987259	90
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.00743198394775	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00744199752808	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.0.0.0.0.1.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.0238690376282	8
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	search with cache (only 1: apply Z.testbit_Zpos).	0.00952911376953	11
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	5	search with cache (only 1: now destruct x).	0.0208339691162	6
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.0139088630676	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	1	search with cache (only 1: now destruct x).	0.106207132339	75
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0132610797882	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	6.6.0.1.0.3	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: easy; only 1: now destruct p; only 1: now destruct p).	1.74187898636	2523
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.3.1.0.12	search with cache (only 1: destruct x; only 1: auto; only 1: simpl; only 1: now destruct p; only 1: easy).	0.878057956696	466
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0344338417053	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.2.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.116609096527	14
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.1.0	search with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0499639511108	5
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0339229106903	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.033830165863	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.1.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).	0.0270440578461	7
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0455121994019	4
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	3.2	search with cache (only 1: intros a a' H; only 1: now f_equal).	0.0120549201965	7
Coq.ZArith.BinInt.ZL0	40	0	search with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.0537850856781	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	4.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl).	0.07288813591	6
Coq.ZArith.BinInt.Z_eq_mult	40	1	search with cache (only 1: now destruct m).	0.01828789711	11
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.00880599021912	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: reflexivity).	0.0131349563599	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	10.4979958534	8983
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.2	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	12.5426130295	8982
Coq.ZArith.Zeven.Zodd_even_bool	40	0.2.0.0.0.0.2.2.0.0.0.0.0.4.11	search with cache (only 1: induction n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.4946949482	5314
Coq.ZArith.Zeven.Zeven_odd_bool	40	0.0.0.0.0.0.2.2.0.0.0.0.0.3.1.26	search with cache (only 1: destruct n; only 1: symmetry; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	8.14556980133	10582
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.56047201157	6767
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	19.4250061512	11668
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0313320159912	5
Coq.ZArith.Zeven.Zeven_Sn	40	1.1.1.1.0.0.3	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	1.02977705002	680
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	1.1.5.2.0.0.4	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: intros H; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	11.0149538517	7778
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0.1	search with cache (only 1: intro H; only 1: now destruct n as [| [| | ]| [| | ]]).	0.0172369480133	3
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intro H; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: reflexivity).	14.8604280949	4875
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.307559967041	18
Coq.ZArith.Zeven.Zodd_quot2	40	6.0	search with cache (only 1: boolify_even_odd; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.108032941818	19
Coq.ZArith.Zeven.Zodd_quot2_neg	40	1.0.5.0	search with cache (only 1: intros Hn Hn'; only 1: Z.nzsimpl; only 1: apply Zodd_bool_iff in Hn'; only 1: now destruct n as [| [| | ]| [| | ]]).	0.799423933029	137
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	3.0	search with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.0403790473938	11
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.4	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.194365978241	50
Coq.ZArith.Zeven.Zeven_2p	40	9	search with cache (only 1: now destruct p).	0.0199921131134	11
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.8.3	search with cache (only 1: destruct p; only 1: split; only 1: now destruct p; only 1: now destruct p).	0.449507951736	299
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.1.0.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0551300048828	15
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.040461063385	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0351259708405	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0303280353546	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	1	search with cache (only 1: apply Z.divide_opp_l).	0.0324399471283	2
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	2	search with cache (only 1: apply Z.divide_abs_l).	0.0377259254456	3
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.4.0.4.10.1	search with cache (only 1: intros; only 1: inversion_clear H; only 1: subst; only 1: zero_or_not b; only 1: apply Z.mod_mul; only 1: trivial).	3.03473496437	2713
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	2.5.0	search with cache (only 1: intro H; only 1: destruct 1; only 1: Z.order).	0.0959069728851	26
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	1.0.0.7.2	search with cache (only 1: intros * []; only 1: constructor; only 1: trivial; only 1: trivial; only 1: auto).	0.740759134293	440
Coq.ZArith.Znumtheory.Zis_gcd_0	40	23	search with cache (only 1: firstorder).	3.52637791634	2809
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.2.0.0.37.0	search with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith; only 1: trivial).	8.45635414124	7472
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.11	search with cache (only 1: split; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).	0.181480884552	127
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).	0.172632217407	6
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.104386091232	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.053640127182	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	19	search with cache (only 1: firstorder).	3.81304097176	1940
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	2.0.0.1.7	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	1.66259098053	269
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	2.0.2	search with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with zarith).	0.12868309021	43
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	2.21	search with cache (only 1: simple induction 1; only 1: discriminate).	0.75585103035	806
Coq.ZArith.Znumtheory.not_prime_1	40	0.0.10.23	search with cache (only 1: unfold not; only 1: intros (H, H'); only 1: contradict H; only 1: discriminate).	12.7001080513	4714
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	2.29.3	search with cache (only 1: intros; only 1: inversion H; only 1: now apply (Zlt_le_succ 1)).	4.53057599068	3129
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0.0.6.27.4.0	search with cache (only 1: Z.swap_greater; only 1: intros Hb; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: unfold Z.div, Z.modulo; only 1: destruct Z.div_eucl; only 1: auto).	14.5889348984	7665
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0613620281219	3
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0418400764465	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.114031076431	6
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0486209392548	7
Coq.ZArith.Zdiv.Zmod_1_r	40	4.1	search with cache (only 1: intro n; only 1: now Z.nzsimpl).	0.247195959091	27
Coq.ZArith.Zdiv.Zdiv_1_r	40	3.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl').	0.143723964691	17
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.2.4.26.2	search with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	16.626816988	18087
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40	2.0.17	search with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Hc Hab; only 1: auto).	2.96154403687	1928
Coq.ZArith.Zdiv.Z_div_le	40	0.0.3.0	search with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0585830211639	7
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.7	search with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.449956893921	84
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0733139514923	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0389790534973	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.1.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.076544046402	4
Coq.ZArith.Zdiv.eqm_refl	40	5.0	search with cache (only 1: intros n; only 1: reflexivity).	0.0536620616913	7
Coq.ZArith.Zdiv.eqm_sym	40	2.1.1	search with cache (only 1: unfold eqm; only 1: intros n m H; only 1: auto with arith).	0.0522291660309	16
Coq.ZArith.Zdiv.eqm_trans	40	1.3.2	search with cache (only 1: unfold eqm; only 1: induction 1; only 1: auto).	0.0774779319763	29
Coq.ZArith.Zdiv.eqm_setoid	40	0.2.14.5.5.25	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: unfold eqm; only 1: red; only 1: now unfold eqm; intros a b c ->).	29.0703268051	5453
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.3.1.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.220067024231	40
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.1.0.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: Z.order).	0.147570133209	19
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.125441074371	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.0.3.0.2	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.989416122437	115
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.2	search with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: auto).	0.100749969482	32
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0199279785156	5
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.00925302505493	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	13.4.10	search with cache (only 1: intro; only 1: intro n; only 1: now destruct n).	1.29590511322	3243
Coq.ZArith.Zabs.Zabs_dec	40	1.1.0.23.1	search with cache (only 1: intro n; only 1: destruct n; only 1: auto with relations; only 1: auto; only 1: auto).	4.05481815338	3469
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	6.0	search with cache (only 1: intro H; only 1: trivial).	0.00965595245361	8
Coq.ZArith.Int.Z_as_Int.i2z_0	40	7	search with cache (only 1: trivial).	0.0125789642334	8
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.00838398933411	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	3	search with cache (only 1: trivial).	0.0097758769989	4
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.007896900177	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.00786113739014	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	17	search with cache (only 1: reflexivity).	0.0412530899048	126
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00719094276428	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00793600082397	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0112090110779	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	1	search with cache (only 1: reflexivity).	0.0119090080261	2
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.012423992157	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0126190185547	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.02969789505	2
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.0355319976807	4
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	3.0.2.0.0.0	search with cache (only 1: intro Hn; only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: now destruct Hn).	0.429794073105	127
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: trivial).	0.0387570858002	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0323059558868	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	25	search with cache (only 1: now apply Pos.iter_swap_gen).	0.978672027588	459
Coq.ZArith.Zpower.two_p_equiv	40	0.0.1.1.1	search with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	0.0538909435272	8
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: reflexivity).	0.0267651081085	1
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	1	search with cache (only 1: apply Pos2Nat.inj_iter).	0.167238950729	2
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	2	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0781500339508	44
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	3.1.0.1.1.2.6	search with cache (only 1: destruct x; only 1: intro H; only 1: constructor; only 1: intros H; only 1: easy; only 1: intros Hx; only 1: now try destruct p).	1.550770998	1328
Coq.ZArith.Zpower.two_p_S	40	0.0.1.1.7.0.3	search with cache (only 1: destruct x; only 1: reflexivity; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now Z.nzsimpl; only 1: now destruct 1 || trivial).	6.10118603706	1768
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	1	search with cache (only 1: apply Z.le_0_sub).	0.0189409255981	2
Coq.ZArith.auxiliary.Zle_left_rev	40	3	search with cache (only 1: apply Z.le_0_sub).	0.0411920547485	11
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.0204029083252	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	11	search with cache (only 1: apply Z.lt_0_sub).	0.0915961265564	51
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	1.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0749161243439	17
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.344745874405	45
Coq.ZArith.auxiliary.Zgt_left_gt	40	2.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0537428855896	5
Coq.ZArith.auxiliary.Zgt_left_rev	40	1.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0579829216003	4
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.2.9.0.3.3.0	search with cache (only 1: unfold Z.le, Z.max; only 1: intro Hn; only 1: case Z.compare_spec; only 1: auto; only 1: intros; only 1: now elim H; only 1: trivial).	11.4494540691	8065
Coq.ZArith.Zmax.Zpos_max_1	40	22	search with cache (only 1: now destruct p).	0.517319917679	236
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.3.18	search with cache (only 1: compute; only 1: induction p; only 1: easy; only 1: easy; only 1: reflexivity).	0.756785154343	331
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	1.1.0.8	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.168354988098	88
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.0.1.0.0.6	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto with relations; only 1: left; only 1: auto; only 1: right; only 1: auto with relations).	0.617339849472	239
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.11	search with cache (only 1: intro H; only 1: Z.order).	0.671342849731	248
Coq.ZArith.Zorder.Zlt_not_le	40	0.9	search with cache (only 1: intros; only 1: Z.order).	0.172904014587	65
Coq.ZArith.Zorder.Zle_not_gt	40	13	search with cache (only 1: intuition).	0.656069993973	451
Coq.ZArith.Zorder.Zgt_not_le	40	2.6	search with cache (only 1: intro H; only 1: auto).	0.106610059738	26
Coq.ZArith.Zorder.Znot_ge_lt	40	8.23.3	search with cache (only 1: intros LT; only 1: Z.swap_greater; only 1: Z.order).	1.2678527832	2069
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0498881340027	4
Coq.ZArith.Zorder.Znot_gt_le	40	1	search with cache (only 1: trivial).	0.0299949645996	2
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0366699695587	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.2.8	search with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	1.09959483147	382
Coq.ZArith.Zorder.Zgt_irrefl	40
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.312849998474	35
Coq.ZArith.Zorder.Zle_gt_trans	40	10.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	1.22060108185	319
Coq.ZArith.Zorder.Zgt_le_trans	40	1.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0457489490509	3
Coq.ZArith.Zorder.Zge_trans	40	1.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0853900909424	3
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0609831809998	5
Coq.ZArith.Zorder.Zsucc_gt_reg	40	4.14	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.910063028336	575
Coq.ZArith.Zorder.Zsucc_le_reg	40	9	search with cache (only 1: apply Z.succ_le_mono).	0.0829520225525	22
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.059583902359	1
Coq.ZArith.Zorder.Zgt_succ	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0490958690643	2
Coq.ZArith.Zorder.Znot_le_succ	40	2.0.1.2	search with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.0660438537598	11
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0430729389191	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0382552146912	1
Coq.ZArith.Zorder.Zgt_succ_le	40	22.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.985408067703	1132
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0531840324402	1
Coq.ZArith.Zorder.Zle_succ_gt	40	7.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0511651039124	9
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.027291059494	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.3.5.4.25	search with cache (only 1: destruct n; only 1: intros H; only 1: Z.order_pos; only 1: now destruct p; only 1: intros H; only 1: easy).	4.77048301697	4166
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0416350364685	7
Coq.ZArith.Zorder.Zle_neg_pos	40	1.0	search with cache (only 1: intros a b; only 1: easy).	0.0376269817352	3
Coq.ZArith.Zorder.Zgt_pos_0	40	3.0	search with cache (only 1: intros n; only 1: reflexivity).	0.0433840751648	5
Coq.ZArith.Zorder.Zle_0_pos	40	2.0	search with cache (only 1: intros a; only 1: easy).	0.0374631881714	4
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0454058647156	1
Coq.ZArith.Zorder.Zle_0_nat	40	3.1.2.0.11	search with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: now Z.nzsimpl; only 1: intros m IH; only 1: easy).	4.23580217361	4386
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0250849723816	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_reg_l	40	6	search with cache (only 1: apply Z.add_le_mono_l).	0.0425860881805	7
Coq.ZArith.Zorder.Zplus_le_reg_r	40
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	11	search with cache (only 1: apply Z.add_lt_mono_l).	0.064432144165	34
Coq.ZArith.Zorder.Zplus_lt_reg_r	40
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.12	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.139095067978	105
Coq.ZArith.Zorder.Zplus_gt_reg_r	40
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.9	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.299998998642	37
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0817089080811	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0254259109497	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0246350765228	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40
Coq.ZArith.Zorder.Zmult_ge_compat_r	40
Coq.ZArith.Zorder.Zmult_ge_compat_l	40
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0637559890747	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0244560241699	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0728459358215	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0365698337555	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0686159133911	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0640552043915	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	21.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	1.42743110657	1167
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0428810119629	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.7	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.111325025558	30
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	3	search with cache (only 1: apply Z.le_0_sub).	0.0351819992065	4
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	2	search with cache (only 1: apply Z.leb_le).	0.00934219360352	3
Coq.ZArith.Zbool.Zle_bool_antisym	40	5.2.0.3.0.1.0.0.4	search with cache (only 1: case Z.leb_spec; only 1: case Z.leb_spec; only 1: intro; only 1: intros; only 1: Z.order'; only 1: intros H1 H2 H3; only 1: now try Z.order'; only 1: intros Ha Hb; only 1: discriminate).	12.4289021492	10542
Coq.ZArith.Zbool.Zle_bool_trans	40	1.34	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	1.94940781593	3816
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	search with cache (only 1: trivial).	0.00748705863953	3
Coq.ZArith.Zbool.Zone_min_pos	40	22.10	search with cache (only 1: intros Hn; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.74074816704	2703
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.1	search with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.0247330665588	16
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.5.0.20.1	search with cache (only 1: split; only 1: Z.swap_greater; only 1: apply Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.leb_le).	8.07710385323	8288
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	2.2.1.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: symmetry; only 1: symmetry; only 1: apply Z.lt_le_pred).	0.0388910770416	24
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0420310497284	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	2.1.1.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto with arith; only 1: auto with arith).	0.848927974701	252
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0393259525299	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.0730137825012	8
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.5.3	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.918431043625	487
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.1.0.0	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.041445016861	6
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.2.1	search with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: auto with arith).	0.0517401695251	17
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: auto).	1.14906692505	572
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.2.1	search with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.175960063934	7
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.0510199069977	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.0.0.0.1	search with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb).	0.118517875671	22
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.25.3	search with cache (only 1: intro H'; only 1: destruct r using Acc_inv_dep; only 1: auto).	1.78911995888	4131
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0420708656311	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.13	search with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0402371883392	75
Coq.Program.Wf.Fix_F_sub_rect	40	1.15.5.3.0	search with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Fix_F_eq; only 1: auto).	0.937577009201	2209
Coq.Program.Wf.eq_Fix_F_sub	40	1.4.5.3.1	search with cache (only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: rewrite <- Fix_F_eq; only 1: auto).	6.50317692757	705
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	4.6.16.1	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	0.463023900986	2233
Coq.Program.Equality.JMeq_eq_refl	40	1	search with cache (only 1: apply UIP_refl).	0.0244698524475	2
Coq.Program.Equality.UIP_refl_refl	40	5	search with cache (only 1: apply UIP).	0.0309648513794	43
Coq.Program.Equality.inj_pairT2_refl	40	3	search with cache (only 1: apply UIP).	0.0204939842224	4
Coq.Program.Equality.solution_left	40	0.2.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0197720527649	7
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0218629837036	3
Coq.Program.Equality.deletion	40	0.0	search with cache (only 1: intros; only 1: assumption).	0.0449409484863	2
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40	0.1.0.1.0	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.0166139602661	7
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	7.3.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0635259151459	182
Coq.Program.Combinators.compose_id_left	40	5	search with cache (only 1: auto).	0.0100009441376	6
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0166010856628	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0125241279602	2
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0105469226837	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00935792922974	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	4.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.128084182739	14
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40	0.1.6.4.5.4	search with cache (only 1: intros l1 l2 e; only 1: do 2 rewrite multiplicity_In; only 1: unfold PermutSetoid.permutation, meq; only 1: intros H; only 1: rewrite H; only 1: auto).	6.98959803581	4577
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40	0.0.0.1.1.0.0.3.3	search with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: induction l as [| x l IHl]; only 1: auto; only 1: simpl; only 1: intros; only 1: specialize (H x); only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ).	2.27466392517	1414
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.0.4.1.7.1	search with cache (only 1: induction stack as [| []]; only 1: constructor; only 1: simpl; only 1: firstorder; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	1.66775393486	2566
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	0.2.2	search with cache (only 1: induction l; only 1: auto; only 1: now constructor).	0.019268989563	7
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	0.0.1.2	search with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.040992975235	7
Coq.Sorting.Permutation.Permutation_cons	40	1.1.0	search with cache (only 1: intros a a' Ha n; only 1: subst; only 1: auto).	0.0348479747772	5
Coq.Sorting.Permutation.Permutation_in	40	0.2.0.0.0.3.1.0.0.2.1	search with cache (only 1: intros l l' Hperm; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct 1 as [H1| ]; only 1: auto; only 1: auto; only 1: simpl; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: auto).	8.20491886139	5722
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	1.0.0.0.0.7	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: intros l l' Hperm; only 1: auto; only 1: simpl; only 1: auto).	0.382901906967	236
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1	search with cache (only 1: auto).	0.0339779853821	2
Coq.Sorting.Permutation.Permutation_rev	40	12.0.8	search with cache (only 1: induction l as [| a l' Hrec]; only 1: constructor; only 1: eauto using Permutation_in).	6.8930439949	4484
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	1.0.0.0.0.0.0.0.0.1	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.396955966949	206
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	9	search with cache (only 1: split).	0.0704660415649	21
Coq.Sorting.PermutSetoid.permut_sym	40	4.4	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.03440284729	10
Coq.Sorting.PermutSetoid.permut_trans	40	1.1.1.3	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.131228923798	45
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.1.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.048907995224	5
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40	0.0.5.5.1.2	search with cache (only 1: intros; only 1: replace (a :: l) with [ ] ++ a :: l; only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: auto; only 1: auto).	22.1949858665	8415
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	3.1.11.0.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	8.53653001785	2111
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	1.1.0.0.1.0.0.0.0.12	search with cache (only 1: intro a; only 1: unfold permutation, meq; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: simpl; only 1: destruct (eqA_dec a a0); only 1: simpl; only 1: auto with arith; only 1: auto with arith).	15.3712038994	16506
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	2.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	1.89214587212	734
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.0.0.1.0.0.0.0.0.0.2.0.1	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: destruct (eqA_dec a a0); only 1: simpl; only 1: auto; only 1: reflexivity).	11.232708931	4062
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	1.4.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	0.0409719944	10
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.1.1.1	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: inversion 1; only 1: auto with arith).	0.792624950409	86
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.9.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	1.31230807304	907
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.11	search with cache (only 1: inversion 1; only 1: auto).	0.349609136581	203
Coq.Sorting.Sorted.Sorted_inv	40	1.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0391409397125	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.1.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0281929969788	4
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using Sorted_inv; only 1: firstorder using StronglySorted_inv).	0.0226349830627	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	0.0.2.0.0.2.9	search with cache (only 1: intro Pdec; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	15.4040710926	12876
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	1.4.0	search with cache (only 1: intros n; only 1: repeat red; only 1: auto).	0.0529148578644	16
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: intros; only 1: auto with datatypes).	0.0352540016174	2
Coq.Sorting.Heap.invert_heap	40	0.5.14	search with cache (only 1: intros b; only 1: inversion_clear 1; only 1: auto).	1.21241903305	538
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.2.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	1.15984582901	529
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40	5.2.2.4	search with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	0.611374139786	347
Coq.Sorting.Heap.Proper_instance_0	40	0.0.1	search with cache (only 1: repeat intro; only 1: simpl; only 1: auto with arith).	0.0427198410034	4
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.17.16	search with cache (only 1: intros P; only 1: fix merge0 1; only 1: auto with datatypes).	10.7182149887	4811
Coq.Sorting.Heap.list_to_heap	40	0.16	search with cache (only 1: fix merge 1; only 1: auto).	0.329425811768	342
Coq.Sorting.Heap.heap_to_list	40
Coq.Sorting.Heap.treesort	40	1.29	search with cache (only 1: fix merge 1; only 1: auto).	1.64581799507	1997
Coq.Init.Wf.Acc_inv	40	2.14	search with cache (only 1: destruct 1; only 1: auto).	0.0815041065216	287
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.1.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0225489139557	5
Coq.Init.Wf.well_founded_ind	40	0.1.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.022469997406	5
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.4.3.7.6.2.0	search with cache (only 1: intro z; only 1: intro H; only 1: reflexivity || destruct H; only 1: auto; only 1: intro H; only 1: induction n; only 1: auto).	0.78931593895	5024
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0278148651123	6
Coq.Init.Peano.pred_Sn	40	1.1	search with cache (only 1: intros; only 1: auto).	0.00606989860535	4
Coq.Init.Peano.not_eq_S	40	4.1	search with cache (only 1: intro H; only 1: auto).	0.00831890106201	7
Coq.Init.Peano.O_S	40	1	search with cache (only 1: discriminate).	0.00635504722595	2
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00765299797058	6
Coq.Init.Peano.plus_n_Sm	40	1.2.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.00986289978027	10
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00868010520935	5
Coq.Init.Peano.mult_n_O	40	0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00782489776611	5
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.2	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00692582130432	6
Coq.Init.Peano.le_n_S	40	0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.00697112083435	3
Coq.Init.Peano.nat_case	40	1.4.1	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.00907683372498	9
Coq.Init.Peano.nat_double_ind	40	3.0.7.3.2	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.30185008049	1070
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.0.0.2.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.921936988831	2053
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.2.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.01806998253	1862
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.02534508705	1924
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	3.0.6.0.1.0	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	2.35894393921	3784
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00722289085388	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.008455991745	3
Coq.Init.Datatypes.surjective_pairing	40	3.4	search with cache (only 1: intros A B []; only 1: reflexivity).	0.0110459327698	17
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0107760429382	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.3	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0107591152191	8
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	4.44162893295	21733
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00486779212952	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.2.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0471909046173	312
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40
Coq.Init.Logic.not_iff_compat	40	3.2.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0113182067871	16
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.7.1.0.0.7.1.6	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: trivial).	0.60661816597	7134
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	3.0	search with cache (only 1: intros; only 1: assumption).	0.00849390029907	17
Coq.Init.Logic.iff_to_and	40	2.3.3.4.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: assumption; only 1: intros; only 1: trivial).	0.159043073654	1228
Coq.Init.Logic.inst	40	3.2	search with cache (only 1: intros; only 1: apply H).	0.00618982315063	7
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00688099861145	2
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00738000869751	3
Coq.Init.Logic.eq_trans_r	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00723195075989	3
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00866508483887	3
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00715398788452	4
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0064549446106	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00712490081787	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40
Coq.Init.Logic.rew_opp_r	40	0.5.7	search with cache (only 1: intros h1 h2; only 1: destruct H; only 1: reflexivity).	0.0280401706696	163
Coq.Init.Logic.rew_opp_l	40	0.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00795102119446	4
Coq.Init.Logic.f_equal2	40	0.1.7.3	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0565769672394	299
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00824904441833	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0108578205109	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0105679035187	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.00771689414978	13
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00671815872192	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00830221176147	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00768613815308	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00785303115845	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00793886184692	3
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00859308242798	2
Coq.Init.Logic.rew_swap	40	0.1.1.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0134248733521	23
Coq.Init.Logic.rew_compose	40	3.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0123748779297	6
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	2.0	search with cache (only 1: intros A C h1 h2; only 1: reflexivity).	0.00806498527527	4
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40
Coq.Init.Logic.eq_trans_sym_distr	40	0.5.2	search with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.0121810436249	18
Coq.Init.Logic.eq_trans_rew_distr	40
Coq.Init.Logic.rew_const	40	0.6	search with cache (only 1: destruct e; only 1: reflexivity).	0.00929713249207	15
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	5.5.3	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0259139537811	185
Coq.Init.Logic.inhabited_covariant	40	4.0.5	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.0124409198761	81
Coq.Init.Logic.eq_stepl	40	2.0.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.00731801986694	7
Coq.Init.Logic.iff_stepl	40	10.9.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.409847974777	4485
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.6.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0243158340454	49
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0113339424133	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00906896591187	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0092511177063	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00970506668091	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.1.1	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0162999629974	23
Coq.Init.Logic_Type.identity_ind_r	40	0.10	search with cache (only 1: destruct 2; only 1: auto).	0.0275621414185	108
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.00941801071167	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00891494750977	3
Coq.Init.Specif.sigT_eta	40	0.4	search with cache (only 1: destruct p; only 1: auto).	0.0216610431671	6
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0213010311127	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0242910385132	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0241050720215	2
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.1.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0121250152588	5
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0194609165192	4
Coq.Init.Specif.eq_existT_curried_map	40	0.6	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.120167016983	13
Coq.Init.Specif.eq_existT_curried_trans	40	0.7.0	search with cache (only 1: destruct q; only 1: subst; only 1: reflexivity).	0.0321328639984	10
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0149168968201	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0135390758514	3
Coq.Init.Specif.eq_sig_uncurried	40	0.1.0.3.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.023227930069	10
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	3.1.0.6.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intros; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried; only 1: trivial).	0.415951967239	766
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0151200294495	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0207500457764	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0157558917999	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.1.1.6.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.299513816833	173
Coq.Init.Specif.eq_sig2_uncurried_iff	40
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0213718414307	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0108060836792	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.0.0.0.0.6.0.2.2.0	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	1.06183099747	1066
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.022716999054	3
Coq.QArith.Qreduction.Qred_correct	40	0.4.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto with zarith).	2.82576489449	1659
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.07053399086	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0756461620331	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	26	search with cache (only 1: apply Qle_Qabs).	2.80138492584	2852
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: reflexivity).	2.56422591209	34
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	2.8.4.0.3.5	search with cache (only 1: intros n; only 1: simpl; only 1: red; only 1: simpl; only 1: Z.nzsimpl; only 1: apply Z.square_nonneg).	11.7841730118	4843
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	4.0.1.1.3.2	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto with *).	2.78470087051	552
Coq.QArith.Qfield.ex1	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.137480020523	5
Coq.QArith.Qfield.ex2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.111124038696	11
Coq.QArith.Qfield.ex3	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.21186208725	5
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: now try destruct p).	0.0408391952515	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0496139526367	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0546460151672	1
Coq.QArith.Qfield.ex7	40	0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.11057305336	16
Coq.QArith.Qfield.ex8	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0799341201782	4
Coq.QArith.Qfield.ex9	40	0	search with cache (only 1: easy).	0.0432798862457	1
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	0.3.5	search with cache (only 1: intros (x1, x2); only 1: intro; only 1: ring).	1.31516003609	338
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0507099628448	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.12	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.770634889603	596
Coq.QArith.Qcanon.Qred_involutive	40	2.5.0.9	search with cache (only 1: intro n; only 1: destruct n; only 1: apply Qred_complete; only 1: apply Qred_correct).	5.86246800423	5755
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	3.0	search with cache (only 1: intros x y; only 1: reflexivity).	0.0376269817352	5
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0398449897766	4
Coq.QArith.Qcanon.Qcle_alt	40	0	search with cache (only 1: reflexivity).	0.0347080230713	1
Coq.QArith.Qcanon.Qcge_alt	40	0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0391798019409	4
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.0976769924164	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	0.5.2	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	0.185761928558	33
Coq.QArith.Qcanon.Qcplus_0_r	40	3.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.067253112793	6
Coq.QArith.Qcanon.Qcplus_comm	40	4.16.1	search with cache (only 1: intros; only 1: qc; only 1: ring).	2.24463009834	1949
Coq.QArith.Qcanon.Qcopp_involutive	40	0.1.2	search with cache (only 1: intros a0; only 1: qc; only 1: ring).	0.190612077713	14
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.4	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	0.293736934662	43
Coq.QArith.Qcanon.Qcmult_assoc	40	1.0.0.14.0.9	search with cache (only 1: intros l l1 h1; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	3.23625206947	1779
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.1.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0849170684814	5
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.091912984848	6
Coq.QArith.Qcanon.Qcmult_1_l	40	13.0.13	search with cache (only 1: intro l'; only 1: qc; only 1: ring).	5.66964292526	2634
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0571780204773	5
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.12.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	2.93459701538	1311
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	2.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.655850172043	5
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.1	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.100796937943	7
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	9.1.2.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto with arith).	2.90718793869	1183
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.129745006561	6
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.2.10.0	search with cache (only 1: intros n; only 1: red; only 1: red; only 1: auto with zarith).	0.323256015778	344
Coq.QArith.Qcanon.Qcle_antisym	40	0.5.7.0	search with cache (only 1: intros x y; only 1: destruct x; only 1: intro H; only 1: auto with qarith).	1.09014511108	609
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	3.0.0	search with cache (only 1: intros a b H; only 1: red; only 1: intuition).	0.0399208068848	6
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.0.0.0.1.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eapply Qle_trans; only 1: eauto; only 1: auto with qarith; only 1: auto).	0.0493099689484	9
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	4.0.1.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	0.0742130279541	32
Coq.QArith.Qcanon.Qcnot_lt_le	40	6.2	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nlt_ge).	0.0570080280304	33
Coq.QArith.Qcanon.Qcnot_le_lt	40	2.2.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros (x1, x2) (y1, y2); only 1: apply Z.nle_gt).	0.347050905228	27
Coq.QArith.Qcanon.Qclt_not_le	40	4.0	search with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.0401880741119	6
Coq.QArith.Qcanon.Qcle_not_lt	40	2.0	search with cache (only 1: intros n m; only 1: apply Z.le_ngt).	0.0385630130768	4
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.1.9	search with cache (only 1: unfold Qclt, Qcle; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.248115062714	221
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40	0.1.0.4.0.0.0.7	search with cache (only 1: unfold Qclt, Qcle; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.lt_sub_lt_add_r, Z.opp_involutive; only 1: reflexivity).	3.85258698463	1210
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.0.2.1.1.0.2	search with cache (only 1: Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: induction n as [| n H]; only 1: intro H; only 1: trivial; only 1: trivial).	1.22732615471	953
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.2.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.297909975052	109
Coq.QArith.Qreals.IZR_nz	40	0.2	search with cache (only 1: intro n; only 1: now apply not_0_IZR).	0.21073102951	41
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.0.5.0.0.11.0.0.0	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl_mult; only 1: unfold Qden, Qnum; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	27.1717200279	12005
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	1.0	search with cache (only 1: symmetry; only 1: reflexivity).	0.0704619884491	3
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	1	search with cache (only 1: reflexivity).	0.0609560012817	2
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	10	search with cache (only 1: reflexivity).	0.0411419868469	21
Coq.QArith.QArith_base.Qeq_sym	40	3.0	search with cache (only 1: symmetry; only 1: trivial).	0.0828630924225	5
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40	0.0.0.0.0.0.10.5.8.13	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: red; only 1: intros x y z; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	1.16656708717	2437
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40	45.2.20	search with cache (only 1: split; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool).	11.1269629002	12764
Coq.QArith.QArith_base.Qeq_bool_eq	40	2	search with cache (only 1: apply Zeq_is_eq_bool).	0.0612001419067	3
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0971992015839	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	4.3.12	search with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	1.05993199348	1752
Coq.QArith.QArith_base.Qle_bool_imp_le	40	3	search with cache (only 1: apply Z.leb_le).	0.0513739585876	4
Coq.QArith.QArith_base.Qnot_eq_sym	40	0	search with cache (only 1: intuition).	0.0353538990021	1
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.8	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.095291852951	10
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.39	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	3.37343001366	6077
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	3.9.2.6	search with cache (only 1: Z.bitwise; only 1: f_equal; only 1: simpl; only 1: now Z.nzsimpl).	2.77547907829	628
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	7.6.0.2	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	10.9473919868	2995
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	3	search with cache (only 1: now try destruct p).	0.0361661911011	4
Coq.QArith.QArith_base.Qplus_assoc	40	4.2.1.0.3.2	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: auto).	4.68648099899	650
Coq.QArith.QArith_base.Qplus_0_l	40	2.0.19	search with cache (only 1: fix le_div2 1; only 1: intro n; only 1: easy).	4.60198903084	735
Coq.QArith.QArith_base.Qplus_0_r	40	0.4.16.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: simpl_mult; only 1: ring).	5.32217693329	2591
Coq.QArith.QArith_base.Qplus_comm	40	2.3.1.0.8	search with cache (only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.66498589516	598
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.21883893013	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.235324859619	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.184226989746	5
Coq.QArith.QArith_base.Qmult_0_l	40	2	search with cache (only 1: constructor).	0.0953710079193	15
Coq.QArith.QArith_base.Qmult_0_r	40	0.1.0.4	search with cache (only 1: red; only 1: intros; only 1: simpl; only 1: ring).	0.165102005005	26
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.2.1.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.774007081985	165
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0949580669403	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.1.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.214349031448	6
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.176285982132	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	5.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: now N.nzsimpl').	0.395018100739	45
Coq.QArith.QArith_base.inject_Z_opp	40	0	search with cache (only 1: now destruct x).	0.039281129837	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.160291194916	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40
Coq.QArith.QArith_base.Qle_antisym	40	24.3	search with cache (only 1: red; only 1: apply Z.le_antisymm).	17.2169969082	8397
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	10	search with cache (only 1: apply Z.lt_irrefl).	0.0370450019836	26
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40	11.3	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases).	2.03889393806	794
Coq.QArith.QArith_base.Qlt_le_weak	40	0.7.2.3.14.5	search with cache (only 1: red; only 1: unfold Qeq, Qlt, Qcompare; only 1: intuition; only 1: red; only 1: rewrite H; only 1: discriminate).	8.20788598061	4913
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	3.11	search with cache (only 1: intuition; only 1: now apply Z.ge_le).	0.271798849106	128
Coq.QArith.QArith_base.Qnot_le_lt	40	9.6	search with cache (only 1: intuition; only 1: Z.order).	0.589636802673	205
Coq.QArith.QArith_base.Qlt_not_le	40	3	search with cache (only 1: apply Z.nle_gt).	0.0613369941711	4
Coq.QArith.QArith_base.Qle_not_lt	40	2	search with cache (only 1: apply Z.nlt_ge).	0.0609030723572	3
Coq.QArith.QArith_base.Qle_lt_or_eq	40	2.1.12	search with cache (only 1: intros a b; only 1: unfold Qeq, Qmult; only 1: apply Z.lt_eq_cases).	7.5192360878	3111
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	2.2.0.5.6.1.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: unfold Qle, Qlt; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: simpl; only 1: intros n; only 1: auto with zarith).	30.0191099644	9824
Coq.QArith.QArith_base.Qinv_le_0_compat	40	2.2.0.1.0	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	0.274734020233	18
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0758619308472	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.0830099582672	10
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	2.6.4.0.0	search with cache (only 1: intros a; only 1: Z.bitwise; only 1: simpl; only 1: Z.nzsimpl; only 1: trivial).	0.856724977493	722
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.2.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.135837078094	35
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.0.1.0.0.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.132244110107	14
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0311920642853	10
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.5.0.20	search with cache (only 1: unfold Qle, Qlt; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	13.4341170788	6660
Coq.QArith.Qabs.Zabs_Qabs	40	0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.0160710811615	4
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	1.2.1.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: ring).	0.0809531211853	35
Coq.QArith.Qabs.Qabs_Qinv	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.54060292244	176
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	0.0.1.0.0.0.2.0.0.0.21	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: red; only 1: simpl; only 1: discriminate).	11.9253101349	11932
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	2.0	search with cache (only 1: red; only 1: reflexivity).	0.00387787818909	4
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00386095046997	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00368309020996	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	0.0.20.7	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.740599155426	2601
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.00596404075623	1
Coq.Classes.CMorphisms.subrelation_respectful	40	1	search with cache (only 1: firstorder).	0.00834202766418	2
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00575685501099	1
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00610494613647	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	2.1.2	search with cache (only 1: intros x y H'; only 1: red in H'; only 1: simpl_crelation).	0.145723104477	8
Coq.Classes.CMorphisms.pointwise_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.00991797447205	2
Coq.Classes.CMorphisms.forall_subrelation	40	2.1	search with cache (only 1: reduce; only 1: firstorder).	0.0103399753571	5
Coq.Classes.CMorphisms.iff_impl_subrelation	40	2.0	search with cache (only 1: reduce; only 1: firstorder).	0.00602984428406	4
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00431799888611	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0056369304657	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00484395027161	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	0	search with cache (only 1: firstorder).	0.00644898414612	1
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0889739990234	1
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0229921340942	1
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	2.2.1	search with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	2.08695578575	660
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	4.2.0	search with cache (only 1: transitivity y; only 1: assumption; only 1: firstorder).	4.4962220192	387
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	4.2.0	search with cache (only 1: transitivity x0; only 1: auto; only 1: firstorder).	0.802406072617	393
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0563669204712	1
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	7.3.0	search with cache (only 1: transitivity y; only 1: assumption; only 1: firstorder).	0.373924970627	669
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	6.16641998291	1098
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00655078887939	1
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	5	search with cache (only 1: firstorder).	0.0177800655365	6
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00731587409973	1
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	1	search with cache (only 1: firstorder).	0.00540518760681	2
Coq.Classes.CMorphisms.flip_respectful	40	1.1	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0187108516693	4
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: firstorder).	0.00490593910217	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00448393821716	1
Coq.Classes.CMorphisms.eq_subrelation	40	0.4.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0078489780426	8
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00464797019958	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00402402877808	1
Coq.Classes.CMorphisms.proper_proper	40	0.1.0.0.0.0	search with cache (only 1: reduce; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0374600887299	7
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00622010231018	1
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: simpl_crelation).	0.0083019733429	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	2.1	search with cache (only 1: reduce; only 1: auto).	0.0264630317688	5
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.14.1.4	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation; only 1: unfold respectful, relation_equivalence in *; only 1: auto).	14.2140409946	2571
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	0.4.6	search with cache (only 1: intros H x y Hxy; only 1: simpl_crelation; only 1: firstorder).	3.83530592918	576
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.00866293907166	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0105409622192	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	1.1.2.5	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.377470970154	330
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.0274231433868	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00937819480896	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0211470127106	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.496006965637	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.0257999897003	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0258481502533	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	0	search with cache (only 1: firstorder).	0.0240030288696	1
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	1	search with cache (only 1: firstorder).	0.0279140472412	2
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0427169799805	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.044312953949	1
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0558791160583	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0698480606079	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0252630710602	1
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0256540775299	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.00880718231201	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.0099139213562	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0114760398865	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	4	search with cache (only 1: firstorder).	0.0131330490112	5
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0174050331116	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.046443939209	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.0.0.4.5	search with cache (only 1: firstorder; only 1: reduce_goal; only 1: transitivity y; only 1: auto; only 1: auto).	0.490962982178	728
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00693988800049	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00476884841919	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00604605674744	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.248188018799	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	2	search with cache (only 1: auto).	0.0180759429932	3
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00929498672485	1
Coq.Classes.RelationClasses.flip_Reflexive	40	4.0.1.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: trivial).	0.010763168335	9
Coq.Classes.RelationClasses.flip_Antisymmetric	40	0.1	search with cache (only 1: hnf; only 1: auto).	0.0110590457916	3
Coq.Classes.RelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0277400016785	4
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0277109146118	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0400230884552	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.104341983795	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00873804092407	1
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00959992408752	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.1.1.0.0	search with cache (only 1: induction l; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.0236599445343	7
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0253801345825	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0362279415131	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0133709907532	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0170049667358	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	3.0.1.0	search with cache (only 1: hnf; only 1: intros; only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).	0.120903968811	8
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0178799629211	1
Coq.Classes.Morphisms.eq_proper_proxy	40	0	search with cache (only 1: reflexivity).	0.00824189186096	1
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00798296928406	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00771403312683	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.11.0.7.1.2	search with cache (only 1: hnf; only 1: intros; only 1: compute; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: firstorder).	0.881485939026	2311
Coq.Classes.Morphisms.subrelation_id_proper	40	0	search with cache (only 1: auto).	0.00861120223999	1
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0123391151428	1
Coq.Classes.Morphisms.subrelation_refl	40	1	search with cache (only 1: firstorder).	0.00958180427551	2
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00896596908569	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.0.3.0	search with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	0.0435268878937	7
Coq.Classes.Morphisms.pointwise_subrelation	40	0	search with cache (only 1: firstorder).	0.0125751495361	1
Coq.Classes.Morphisms.forall_subrelation	40	2.0.0	search with cache (only 1: reduce; only 1: apply H; only 1: firstorder).	0.0136699676514	5
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00943112373352	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00941610336304	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.0146679878235	3
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.114199876785	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	3.98573279381	156
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	2.2.1	search with cache (only 1: transitivity x0; only 1: firstorder; only 1: firstorder).	7.29794001579	606
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	2.3.0	search with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	3.83489990234	469
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	6.2	search with cache (only 1: symmetry; only 1: firstorder).	1.05679106712	745
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0827510356903	12
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.152080059052	171
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	1.4.0.0	search with cache (only 1: split; only 1: intros; only 1: firstorder; only 1: firstorder).	2.07644987106	212
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.0118989944458	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.0112361907959	2
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0111789703369	3
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00978708267212	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0339021682739	1
Coq.Classes.Morphisms.flip1	40	0	search with cache (only 1: firstorder).	0.0211880207062	1
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00869798660278	1
Coq.Classes.Morphisms.eq_subrelation	40	0.0.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0117540359497	4
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00864315032959	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00854992866516	1
Coq.Classes.Morphisms.proper_proper	40	0.0.2.0.1.0	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation; only 1: split; only 1: firstorder; only 1: firstorder).	0.130260944366	32
Coq.Classes.Morphisms.proper_normalizes_proper	40	4.6	search with cache (only 1: red; only 1: firstorder).	0.0899350643158	44
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0224509239197	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	1.1	search with cache (only 1: reduce; only 1: simpl_relation).	0.0567290782928	4
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.7.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip in *; only 1: unfold respectful; only 1: firstorder).	4.10154891014	627
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.18.1.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: firstorder; only 1: rewrite H; only 1: firstorder).	22.2389788628	5643
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	1	search with cache (only 1: firstorder).	0.0398299694061	2
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0377380847931	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.10075712204	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0376949310303	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	1.4	search with cache (only 1: compute; only 1: auto).	0.0515580177307	7
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0607120990753	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.58546090126	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	2	search with cache (only 1: firstorder).	0.0459589958191	3
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.044203042984	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0493519306183	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0365869998932	1
Coq.Classes.RelationPairs.pair_compat	40	0.1	search with cache (only 1: repeat red; only 1: auto).	0.0182421207428	3
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0171940326691	1
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0220510959625	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.3.2.0	search with cache (only 1: repeat red; only 1: intros; only 1: compute in *; only 1: auto).	0.0849990844727	9
Coq.Classes.DecidableClass.Decidable_sound	40	0.4.7.16.6	search with cache (only 1: intro A; only 1: intros [Hl Hr]; only 1: intro H1; only 1: apply Hr; only 1: assumption).	2.32444810867	14031
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.9	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.313045024872	90
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	3.1.6.3.3.1	search with cache (only 1: symmetry; only 1: split; only 1: intros; only 1: subst; only 1: apply Nat.eqb_refl; only 1: apply Nat.eqb_eq).	2.64598798752	2860
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	2.0.1.0.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.0140600204468	12
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	10	search with cache (only 1: now simpl).	0.0466899871826	21
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0361449718475	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0279939174652	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	11.9.17.0	search with cache (only 1: intros; only 1: destruct H; only 1: simpl in *; only 1: firstorder).	11.9404959679	12708
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.11	search with cache (only 1: repeat red; only 1: firstorder).	2.0964179039	474
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.412019014359	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0142221450806	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.013885974884	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.01389503479	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0166819095612	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.031681060791	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	2.0.1.47	search with cache (only 1: exfalso; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	5.52277517319	9542
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: trivial).	0.0164959430695	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	6.2.4	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: auto).	0.157481908798	345
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40	1.22.3	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: Bool.destr_bool).	7.27185297012	13154
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: trivial).	0.0238430500031	6
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	4.6.2.2	search with cache (only 1: unfold gt, le, compare; only 1: revert q; only 1: fix odd_spec 1; only 1: easy).	8.48567700386	3041
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40	1.0.10.8.4	search with cache (only 1: unfold to_nat; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros q; only 1: auto).	2.70333790779	2760
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40	1.0.6	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.116461992264	100
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.0.2.0.1.4.0.14	search with cache (only 1: destruct n; only 1: reflexivity; only 1: induction n; only 1: now Nat.nzsimpl'; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	1.04303598404	1432
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	2.1.0.7.0.6	search with cache (only 1: intros; only 1: split; only 1: apply Pos2Nat.inj; only 1: trivial; only 1: trivial; only 1: auto).	11.7649440765	13223
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0201950073242	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	2.8.4	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: Bool.destr_bool).	29.2757110596	1215
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.0.0.3.4.1.0.1.4.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply Nat2Pos.id).	3.98084402084	6516
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intros; only 1: auto).	0.0608270168304	8
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	3.3.0.0	search with cache (only 1: apply Pos2Nat.inj; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos.of_nat_succ; only 1: trivial).	0.0365331172943	19
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40	0.1.0.4.4.16.22.0	search with cache (only 1: intros; only 1: do 2 Morphisms.f_equiv; only 1: induction n as [| n H]; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: eauto with *; only 1: auto with relations).	16.1927609444	23085
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40	1.0.0.0.16	search with cache (only 1: fix le_div2 1; only 1: intro n; only 1: intro; only 1: assert (leS : forall n m, n <= m -> S n <= S m) by (induction 1; auto); only 1: auto).	1.23551082611	2289
Coq.PArith.BinPos.Pos.eq_dec	40	0	search with cache (only 1: decide equality).	0.0151810646057	1
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: trivial).	0.00697708129883	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0133590698242	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.1.2.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.0279848575592	14
Coq.PArith.BinPos.Pos.double_succ	40	1	search with cache (only 1: reflexivity).	0.011696100235	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0206818580627	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.150460004807	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	2.53748512268	803
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.0.2.0.0.0.0.0	search with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).	0.614240169525	348
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.0.11.0.4	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	2.78541994095	2191
Coq.PArith.BinPos.Pos.add_1_r	40	0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.0179698467255	6
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0076060295105	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.1.3.2.2	search with cache (only 1: split; only 1: now apply add_reg_r; only 1: intros H; only 1: f_equal; only 1: auto using add_carry_add).	2.62196707726	1663
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	2.0	search with cache (only 1: revert q; only 1: now f_equal).	1.7399020195	182
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.00834393501282	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	3.1.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: trivial).	0.0655148029327	55
Coq.PArith.BinPos.Pos.mul_1_r	40	3.6.0.5.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	4.04462695122	4203
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.0.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.0125200748444	3
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.0.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0110678672791	5
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0204701423645	1
Coq.PArith.BinPos.Pos.square_xO	40
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	2.0.1.2.0.3.4.9	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: split).	6.44702601433	5471
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0234198570251	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	1.1.0.0.2.2.5.0.0.0	search with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	30.6996879578	17353
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	2.0.1.5	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	0.300043821335	133
Coq.PArith.BinPos.Pos.eqb_eq	40	4.2.10.3.4	search with cache (only 1: symmetry; only 1: revert q; only 1: fix odd_spec 1; only 1: intro n; only 1: auto with relations).	23.5071499348	24695
Coq.PArith.BinPos.Pos.ltb_lt	40	13.2.0	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now rewrite ?IHp).	3.29341387749	3432
Coq.PArith.BinPos.Pos.leb_le	40	13.2.1	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now rewrite ?IHp).	3.01119399071	3000
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	3.6.10	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	0.793138027191	721
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	1.1.1.1.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	1.62680411339	507
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.3	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.383865833282	177
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	1.5.5.0	search with cache (only 1: rewrite compare_cont_spec; only 1: revert q; only 1: fix odd_spec 1; only 1: trivial).	0.463963031769	336
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.32.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	27.7903459072	24251
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.10.7	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	1.54953408241	690
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.12.6	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	1.06726288795	577
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.24.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	7.38443207741	6009
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.1.1.0	search with cache (only 1: induction p; only 1: auto; only 1: trivial; only 1: trivial).	0.0175108909607	6
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00735306739807	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.16.6.1	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	7.18760585785	7956
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40	1.0.18.6	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intros; only 1: trivial).	5.0049021244	6280
Coq.PArith.BinPos.Pos.gt_iff_add	40	3.20.2	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	14.9643900394	9758
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.2.0.2.0.19	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial).	0.68571305275	1381
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1	search with cache (only 1: unfold lt; only 1: now split).	0.0124471187592	3
Coq.PArith.BinPos.Pos.compare_le_iff	40	4	search with cache (only 1: easy').	0.0201950073242	5
Coq.PArith.BinPos.Pos.gt_lt_iff	40	1.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.10476899147	34
Coq.PArith.BinPos.Pos.gt_lt	40
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00999212265015	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	4.1	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0156619548798	7
Coq.PArith.BinPos.Pos.ge_le	40	5.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0469789505005	13
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0116720199585	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	21	search with cache (only 1: now destruct compare || now destruct p).	1.04623699188	1252
Coq.PArith.BinPos.Pos.nlt_1_r	40	2	search with cache (only 1: now destruct p).	0.0323638916016	3
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0395128726959	42
Coq.PArith.BinPos.Pos.le_nlt	40	0.4.0	search with cache (only 1: unfold ge, lt, compare; only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0137131214142	7
Coq.PArith.BinPos.Pos.lt_nle	40	0.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.658497095108	82
Coq.PArith.BinPos.Pos.lt_le_incl	40	3.2	search with cache (only 1: unfold lt, le; only 1: now do 2 destruct compare).	0.168704986572	17
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.4.8.1	search with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: now left).	0.51299405098	385
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	2.19.24	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: auto with *).	9.04380393028	17586
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	2.1.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0118279457092	7
Coq.PArith.BinPos.Pos.lt_compat	40	7	search with cache (only 1: solve_proper).	0.300165891647	44
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0140011310577	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: rewrite 3!PeanoNat.Nat.lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations).	3.55094885826	2338
Coq.PArith.BinPos.Pos.le_succ_l	40	5.2.4.1	search with cache (only 1: unfold lt; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	3.11087012291	1368
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	3.2.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.00844311714172	9
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40	3.14.0	search with cache (only 1: revert p q r; only 1: fix gcd_divide 1; only 1: auto).	6.24945998192	7705
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.2.2	search with cache (only 1: unfold le, ge; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0559151172638	7
Coq.PArith.BinPos.Pos.add_le_mono_r	40
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40	2.1.14.1	search with cache (only 1: revert p q r; only 1: fix gcd_divide 1; only 1: intros a b n; only 1: trivial).	24.0871651173	17933
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.4.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0171051025391	7
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0096869468689	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	2.0.0.0.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0167558193207	10
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00761103630066	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0161738395691	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0186929702759	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.1.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0304319858551	10
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	0.0.1.0.5.2.5.0.0	search with cache (only 1: unfold le, min; only 1: intros x y; only 1: rewrite compare_gt_iff; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: now elim H; only 1: auto).	5.58865308762	5553
Coq.PArith.BinPos.Pos.max_1_l	40	1.1.1.0.11	search with cache (only 1: induction n; only 1: now f_equal; only 1: now f_equal; only 1: apply max_l; only 1: intuition).	0.220445871353	253
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0169169902802	9
Coq.PArith.BinPos.Pos.min_1_l	40	1.1	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0111238956451	4
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.017215013504	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	8.2.7	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply add_le_mono_l).	3.45717811584	2879
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.4	search with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.037740945816	21
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0187499523163	4
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	10.3.0.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).	0.820708036423	819
Coq.PArith.BinPos.Pos.mul_max_distr_r	40	0.0.0.4	search with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply max_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.042093038559	16
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.1	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0177569389343	4
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.0	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0271019935608	4
Coq.PArith.BinPos.Pos.iter_op_succ	40	0.3.1.0.1.0	search with cache (only 1: induction p; only 1: intros; only 1: simpl; only 1: congruence; only 1: now rewrite ?H, ?IHp; only 1: firstorder).	0.409572124481	121
Coq.PArith.BinPos.Pos.of_nat_succ	40	4.16.7	search with cache (only 1: revert n; only 1: fix odd_spec 1; only 1: now f_equal).	0.740447998047	1769
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40	6.2.31	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	7.17537879944	10181
Coq.PArith.BinPos.Pos.divide_mul_r	40	3.27	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto using max_le_compat_l, le_min_r).	9.67048215866	8997
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40	0.1.19.6.10.1	search with cache (only 1: intros q r; only 1: symmetry; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	24.7441179752	35346
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40	8.0.2	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.634185791016	389
Coq.PArith.BinPos.Pos.gcdn_greatest	40	0.0.16	search with cache (only 1: fix le_div2 1; only 1: intros x y z; only 1: auto).	4.26854896545	4131
Coq.PArith.BinPos.Pos.gcd_greatest	40	1.0.6	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0838530063629	83
Coq.PArith.BinPos.Pos.ggcd_greatest	40	0.1.4.0.8.0.2.5.0	search with cache (only 1: intros; only 1: generalize (ggcd_correct_divisors a b); only 1: generalize (ggcd_correct_divisors a b); only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	11.9409120083	8367
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.1	search with cache (only 1: unfold Pos.gt; only 1: now split).	0.00810408592224	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.0.0.15.2	search with cache (only 1: intro n; only 1: induction n; only 1: intuition; only 1: intuition; only 1: intuition).	1.13491821289	488
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: now subst).	0.0215821266174	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	4.2.3	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: now f_equal).	0.525259971619	314
Coq.Arith.Even.odd_equiv	40	4.1.1	search with cache (only 1: fix even_equiv 1; only 1: intros; only 1: now f_equal).	0.117393016815	66
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0242547988892	5
Coq.Arith.Even.not_even_and_odd	40	13.0.3.0.3.5.9.0	search with cache (only 1: induction n; only 1: now repeat split; only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	7.81021809578	20837
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.189059972763	1
Coq.Arith.Even.even_even_plus	40	15	search with cache (only 1: parity_binop).	0.47457909584	247
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0815420150757	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0896410942078	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0837650299072	1
Coq.Arith.Even.even_plus_aux	40	5	search with cache (only 1: parity_binop).	0.425080776215	12
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.083370923996	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.112462043762	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.105831861496	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0768640041351	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0935671329498	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0773878097534	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0753290653229	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.117727041245	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.228577852249	1
Coq.Arith.Even.even_mult_l	40	15	search with cache (only 1: parity_binop).	0.385244131088	263
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0470788478851	1
Coq.Arith.Even.even_mult_inv_r	40	2	search with cache (only 1: parity_binop).	0.103214025497	13
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.131540060043	1
Coq.Arith.Even.odd_mult	40	1	search with cache (only 1: parity_binop).	0.120202064514	11
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0854940414429	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0846269130707	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0143830776215	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0392820835114	1
Coq.Arith.Minus.minus_diag_reverse	40	1.3.6	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: now rewrite IH).	0.217678070068	99
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	6.1.3.0.3.28	search with cache (only 1: revert n m; only 1: intro n; only 1: Nat.induct ltac:(p); only 1: intros m; only 1: now Nat.nzsimpl; only 1: trivial).	9.40354704857	7937
Coq.Arith.Minus.plus_minus	40	8.0.2.0.1.0.11.1.4.8.0	search with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: Nat.induct ltac:(m); only 1: intro H; only 1: now subst; only 1: intros m IH; only 1: now try Nat.order'; only 1: intro n; only 1: now try Nat.order'; only 1: intros n m IH H1; only 1: eauto).	36.5414581299	83825
Coq.Arith.Minus.minus_plus	40	0.0.0.1.3.0.8	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intros; only 1: apply Nat.sub_0_r; only 1: simpl; only 1: trivial).	0.522703886032	359
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.2.0.1.5.0.0.0.0.14	search with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: now subst; only 1: intro H; only 1: simpl; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: now rewrite <- ?Nat.succ_le_mono).	24.2124738693	31121
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40	3.7.10.3.3.1	search with cache (only 1: induction 1; only 1: intros H; only 1: auto with arith; only 1: destruct H; only 1: auto with arith; only 1: auto with arith).	8.84246110916	15939
Coq.Arith.Between.between_restr	40	1.0.1.12.1	search with cache (only 1: intros x y z; only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.682849168777	950
Coq.Arith.Between.exists_le_S	40	0.0.3.2	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0490520000458	35
Coq.Arith.Between.exists_S_le	40	0.0.18.8	search with cache (only 1: intros a; only 1: fix le_div2 1; only 1: intros m IH; only 1: auto).	6.07606506348	10921
Coq.Arith.Between.in_int_intro	40	1.12	search with cache (only 1: intros a n H H'; only 1: easy).	0.797533988953	680
Coq.Arith.Between.in_int_lt	40	5.0	search with cache (only 1: intros n m p (q, Hq); only 1: PeanoNat.Nat.Private_Tac.order).	0.0169870853424	7
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	5.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0346601009369	7
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0138049125671	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0387389659882	6
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40	0.0.0.0.21	search with cache (only 1: fix gcd_greatest 1; only 1: induction 1; only 1: auto with arith; only 1: intros P_or_Q; only 1: auto with arith).	10.027215004	14564
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	3.0.4.0.2.0.5	search with cache (only 1: destruct n; only 1: intro H; only 1: intuition; only 1: intro H; only 1: destruct m; only 1: now right; only 1: now left).	1.24456906319	1176
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	2.1.9.14.0	search with cache (only 1: intros Ev Od; only 1: intros Base Step; only 1: fix odd_equiv 1; only 1: intro n; only 1: auto).	1.85975718498	6417
Coq.Arith.Div2.lt_div2	40	3.0.2.8.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: intros; only 1: trivial).	8.76881814003	12249
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	5	search with cache (only 1: intuition).	0.0172369480133	15
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.0.23	search with cache (only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto with arith).	0.583943128586	1639
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.00799679756165	3
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.0606517791748	27
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40	9.0.4.5.2.7	search with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: split; only 1: auto; only 1: Nat.nzsimpl; only 1: auto).	38.9061820507	17937
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.00647401809692	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00975394248962	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	2	search with cache (only 1: apply Nat.add_le_mono).	0.0132279396057	3
Coq.Arith.Plus.plus_lt_compat	40	3.0.18.2.8	search with cache (only 1: intro H; only 1: intro LT; only 1: apply Nat.add_lt_le_mono; only 1: assumption; only 1: Nat.Private_Tac.order).	1.78986597061	3248
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	3.3.1.0.0.3	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intro; only 1: simpl; only 1: now try Nat.order').	1.82323598862	1207
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	7.0.0.1.1.1.7.2	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro n; only 1: Nat.nzsimpl; only 1: split; only 1: intro H; only 1: auto; only 1: auto).	10.9157378674	7346
Coq.Arith.Lt.lt_le_S	40	4	search with cache (only 1: auto).	0.0570771694183	22
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.0332579612732	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0367290973663	4
Coq.Arith.Lt.le_not_lt	40	0.1	search with cache (only 1: intro H; only 1: Nat.order).	0.0583698749542	32
Coq.Arith.Lt.lt_not_le	40	0.3	search with cache (only 1: intro H; only 1: Nat.order).	0.084538936615	43
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.auto').	0.0410208702087	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	search with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0377929210663	4
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply le_n_S).	0.0335559844971	1
Coq.Arith.Lt.lt_S_n	40	1	search with cache (only 1: apply Nat.succ_lt_mono).	0.0344820022583	11
Coq.Arith.Lt.S_pred	40	1.1.12	search with cache (only 1: inversion 1; only 1: trivial; only 1: trivial).	0.560530900955	290
Coq.Arith.Lt.S_pred_pos	40	0.0.4	search with cache (only 1: inversion 1; only 1: now Nat.nzsimpl; only 1: trivial).	0.081521987915	37
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	3.9.0.5	search with cache (only 1: Nat.induct n; only 1: inversion 1; only 1: fix gcd_divide 1; only 1: trivial).	5.07191085815	6878
Coq.Arith.Lt.le_lt_or_eq	40	32.1.24	search with cache (only 1: inversion 1; only 1: intuition; only 1: intuition).	23.8475430012	17761
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	12.6974859238	8499
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	10.9832999706	11308
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.34348487854	200
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0382401943207	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.018853187561	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0141248703003	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0156049728394	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.0.1.31.4	search with cache (only 1: intros n Hn; only 1: fix gcd_divide 1; only 1: intros [| a] b; only 1: trivial; only 1: trivial).	4.4292550087	12990
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.051961183548	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	9.2.7.5.14.20	search with cache (only 1: pattern n; only 1: Nat.induct ltac:(n); only 1: Nat.order'; only 1: fix le_div2 1; only 1: intros m IH; only 1: auto).	5.08756804466	7969
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40	0.1.23.22	search with cache (only 1: revert n m; only 1: fix gcd_divide 1; only 1: intros a b; only 1: trivial).	5.98353719711	7963
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.1.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	1.22034692764	403
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	0.1.0.0.0.11.1.1.0.2.6	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.45011806488	3425
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.2.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.314996004105	238
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0302579402924	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	1.0.9	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0598781108856	50
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.0145380496979	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0152730941772	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	6	search with cache (only 1: apply Nat.le_decidable).	0.0297029018402	25
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.le_decidable).	0.013209104538	1
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0130250453949	2
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0152039527893	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0145719051361	1
Coq.Arith.Compare_dec.not_gt	40	2	search with cache (only 1: apply Nat.le_ngt).	0.0279250144958	3
Coq.Arith.Compare_dec.not_ge	40	2	search with cache (only 1: apply Nat.nle_gt).	0.0187540054321	11
Coq.Arith.Compare_dec.not_lt	40	2	search with cache (only 1: apply Nat.le_ngt).	0.0224039554596	11
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.0.0.1.1.0.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).	0.972519874573	778
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	11	search with cache (only 1: apply Nat.compare_lt_iff).	0.214745998383	77
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2	search with cache (only 1: apply Nat.compare_gt_iff).	0.0172560214996	3
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	7.4.1	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: intuition).	2.83148598671	1615
Coq.Arith.Compare_dec.leb_correct	40	3.27	search with cache (only 1: fix odd_spec 1; only 1: intuition).	26.6999430656	42152
Coq.Arith.Compare_dec.leb_complete	40	1	search with cache (only 1: apply Nat.leb_le).	0.0187149047852	2
Coq.Arith.Compare_dec.leb_correct_conv	40	0.11	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.160915136337	116
Coq.Arith.Compare_dec.leb_complete_conv	40	1	search with cache (only 1: apply leb_iff_conv).	0.0314419269562	2
Coq.Arith.Compare_dec.leb_compare	40	6.5.1	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: auto).	3.09098911285	1709
Coq.Arith.EqNat.eq_nat_refl	40	5.9.20	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: trivial).	0.547811985016	748
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0169870853424	6
Coq.Arith.EqNat.eq_nat_eq	40	10	search with cache (only 1: apply eq_nat_is_eq).	0.284183979034	273
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.0.0.0.0.0.0.2.0.1	search with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: right; only 1: auto).	0.454566955566	375
Coq.Arith.EqNat.beq_nat_refl	40	6.2.0.4.8	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.514396905899	740
Coq.Arith.EqNat.beq_nat_true	40	1.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: contradiction || auto).	2.08945798874	958
Coq.Arith.EqNat.beq_nat_false	40	0.2.0.0.0.2.0.2.0.0.2	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: intro H; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: easy; only 1: intro H; only 1: auto).	5.77121400833	4222
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	24.2.3.3	search with cache (only 1: intros H x0; only 1: induction n; only 1: auto; only 1: firstorder).	10.8540489674	5372
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	3	search with cache (only 1: now trivial).	0.0330641269684	21
Coq.Arith.PeanoNat.Nat.recursion_succ	40	2.0.1.5.0	search with cache (only 1: intros A A_wd A0 AS; only 1: intros; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.364807128906	167
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.1.1	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0217080116272	5
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0183529853821	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.0182960033417	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0178718566895	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0180070400238	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.0191290378571	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0231308937073	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0196251869202	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0285060405731	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.0.0.0.2.0.0.1.1.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: tauto; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: now intros ->; only 1: now injection 1).	6.59494900703	5140
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	1.3.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	3.71792888641	4028
Coq.Arith.PeanoNat.Nat.compare_succ	40	0	search with cache (only 1: reflexivity).	0.0107460021973	1
Coq.Arith.PeanoNat.Nat.max_l	40	1.0.0.0.0.0.0.0.0.0.0.0.8	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.22491288185	3262
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.1.0.1.5	search with cache (only 1: induction n; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.931452989578	656
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.0.0.0.0.0.3.3	search with cache (only 1: induction n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.98585009575	1480
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.0.0.0.0.0.1.0.0.1.1.2	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.63589406013	1975
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	7.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.017865896225	9
Coq.Arith.PeanoNat.Nat.pow_0_r	40	2	search with cache (only 1: now nzsimpl).	0.0164310932159	3
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.0	search with cache (only 1: intro; only 1: auto).	0.0129749774933	2
Coq.Arith.PeanoNat.Nat.square_spec	40	3	search with cache (only 1: now nzsimpl').	0.0224919319153	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0175859928131	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	0.1.0.0.1.0.0.0.0.5.0.0.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite plus_n_Sm; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	7.61345815659	5371
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	8.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0552680492401	42
Coq.Arith.PeanoNat.Nat.divmod_spec	40	2.7	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.143095016479	171
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0329310894012	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	5.2	search with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0436320304871	65
Coq.Arith.PeanoNat.Nat.gcd_divide	40	0.5.2.1	search with cache (only 1: intro n; only 1: set (s := log2 n); only 1: fix even_spec 1; only 1: auto).	0.084841966629	105
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	6.0.1	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	0.0234041213989	25
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0154271125793	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	2.22.1	search with cache (only 1: intros x y z; only 1: fix gcd_divide 1; only 1: intuition auto; Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	7.08075213432	5770
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	4	search with cache (only 1: apply le_0_l).	0.0301449298859	5
Coq.Arith.PeanoNat.Nat.div2_double	40	0.1.3.0.1.10.13	search with cache (only 1: simpl; only 1: nzinduct n; only 1: auto; only 1: intro; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.22395396233	1037
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0319049358368	7
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.0.15	search with cache (only 1: fix le_div2 1; only 1: intro H; only 1: auto).	3.47679400444	2398
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.106337070465	72
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.2.1	search with cache (only 1: nzinduct n; only 1: tauto; only 1: intro n; only 1: now nzsimpl).	0.0399250984192	16
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.1.3	search with cache (only 1: fix gcd_greatest 1; only 1: intros n m p; only 1: trivial).	0.391036987305	45
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	4.1.3	search with cache (only 1: fix gcd_greatest 1; only 1: intros n m p; only 1: auto).	1.08237600327	289
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	8.1.3	search with cache (only 1: fix gcd_greatest 1; only 1: intros n m p H; only 1: auto with relations).	7.0417740345	2606
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	0.0.9.7	search with cache (only 1: intro; only 1: fix gcd_greatest 1; only 1: intros; only 1: auto with *).	5.58224701881	3659
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	1.10.9.4	search with cache (only 1: intro; only 1: intro; only 1: fix gcd_greatest 1; only 1: assumption).	27.8222141266	22158
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0325210094452	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	1.0.0.0.0.0.0.0.0.0.2.5.0.4	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: rewrite max_le_iff; only 1: auto; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).	12.1786828041	11816
Coq.Arith.PeanoNat.Nat.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0253579616547	2
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	1	search with cache (only 1: inversion H).	0.188020944595	2
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	1	search with cache (only 1: Nat.order).	0.049751996994	7
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00620198249817	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00758981704712	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	2	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.00802397727966	3
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00595211982727	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00601816177368	1
Coq.Arith.Gt.le_S_gt	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00629115104675	1
Coq.Arith.Gt.gt_S_le	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.00599598884583	1
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0098090171814	1
Coq.Arith.Gt.le_gt_S	40	4	search with cache (only 1: apply Nat.lt_succ_r).	0.0299038887024	22
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00892496109009	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00865602493286	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.7.3	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0630459785461	152
Coq.Logic.JMeq.JMeq_trans	40	2.1.1	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0145449638367	7
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00982809066772	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0111789703369	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0122458934784	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.012638092041	4
Coq.Logic.JMeq.JMeq_congr	40	0.7.2	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0276510715485	66
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0126421451569	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0189399719238	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.4	search with cache (only 1: destruct 1; only 1: trivial).	0.0188629627228	22
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.6.4.0	search with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: trivial).	0.140218019485	211
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.6.2.15	search with cache (only 1: intro A; only 1: intro H; only 1: destruct H; only 1: trivial).	0.352113008499	1249
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0367031097412	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	13.1.10	search with cache (only 1: intro HC; only 1: intros; only 1: tauto).	11.4226939678	12746
Coq.Logic.Classical_Prop.not_imply_elim	40	1.1.0.5.0	search with cache (only 1: intros P H; only 1: destruct (classic P); only 1: intro HAB; only 1: auto; only 1: tauto).	0.152836084366	263
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.1.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: apply H; only 1: intro; only 1: auto).	0.0178761482239	7
Coq.Logic.Classical_Prop.imply_to_or	40	2.0.0.0.1.1.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: assert (h : P 1); only 1: unfold P; only 1: intuition; only 1: tauto).	0.516226053238	171
Coq.Logic.Classical_Prop.imply_to_and	40	2.0.0.5	search with cache (only 1: intros A; only 1: unfold not; only 1: intros; only 1: tauto).	0.176267147064	112
Coq.Logic.Classical_Prop.or_to_imply	40	0.1	search with cache (only 1: intros A; only 1: tauto).	0.118257045746	96
Coq.Logic.Classical_Prop.not_and_or	40	0.0.2.2	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0594770908356	8
Coq.Logic.Classical_Prop.or_not_and	40	2	search with cache (only 1: tauto).	0.0750830173492	36
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0407559871674	1
Coq.Logic.Classical_Prop.and_not_or	40	0.0.0.4.0.0	search with cache (only 1: simple induction 1; only 1: red; only 1: intro; only 1: simple induction 2; only 1: auto; only 1: auto).	0.0820169448853	32
Coq.Logic.Classical_Prop.imply_and_or	40	3.0	search with cache (only 1: intros; only 1: tauto).	0.207781076431	41
Coq.Logic.Classical_Prop.imply_and_or2	40	3.0	search with cache (only 1: intros; only 1: tauto).	0.0428900718689	5
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40	16	search with cache (only 1: firstorder  (subst; auto)).	0.22380399704	234
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40	0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.1.1.0.0	search with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).	20.2900390625	29995
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	18.0	search with cache (only 1: intros; only 1: firstorder  (subst; auto)).	0.476794958115	1004
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	1.0.0.0.0.0.0.0.2.8.3.0.0	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: pattern 0; only 1: elim H; only 1: intros x [n fxn]; only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: assumption).	10.4209489822	24254
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	2.12.0.0.7	search with cache (only 1: intro x; only 1: compute; only 1: firstorder; only 1: apply H; only 1: firstorder).	4.89210104942	2272
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.1.1.7.1.0.0.6.5.0.0	search with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: intros; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: eauto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: intro; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	4.48294115067	12562
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	4.0.0.2.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: auto).	0.129339933395	143
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	30.6.2	search with cache (only 1: intros; only 1: red; only 1: apply H).	3.07757878304	8565
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0365920066833	4
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.1.1	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0452351570129	15
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	41	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	10.1810269356	5524
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	4.3.0.0.1	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intros; only 1: firstorder).	1.18242788315	329
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.11.1.0.0.0.2	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: intro x; only 1: firstorder; only 1: exists f; only 1: firstorder).	2.8476319313	3466
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	5	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.750716924667	22
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	3	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.770164966583	13
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	11.12.8.0.4	search with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	39.6157770157	200923
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40	2.31.0	search with cache (only 1: intros ReprFunChoice P; only 1: fix gcd_divide 1; only 1: trivial).	4.07387709618	5477
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0422480106354	6
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.0.2.1.0.3.2	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: trivial).	2.032310009	2011
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	12.2	search with cache (only 1: intros P notall; only 1: firstorder).	0.70464515686	1060
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	0.8.5	search with cache (only 1: red; only 1: simple induction 2; only 1: auto).	0.853859901428	1429
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0194249153137	14
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	6.0.49.1	search with cache (only 1: intros (l, F); only 1: induction l; only 1: auto; only 1: firstorder).	16.528922081	48792
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0311510562897	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0	search with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	24.2301189899	11565
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.3	search with cache (only 1: destruct 1; only 1: auto).	0.0199348926544	12
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.1	search with cache (only 1: destruct 1; only 1: auto).	0.0128560066223	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0110969543457	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0296380519867	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	0.7.2	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0590190887451	87
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: auto).	0.0275502204895	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: auto).	0.0273950099945	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	3.0.0	search with cache (only 1: intros; only 1: intros p q; only 1: eauto using @functional_extensionality_dep).	0.0118510723114	6
Coq.Logic.HLevels.false_hprop	40	8.1	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0161728858948	44
Coq.Logic.HLevels.true_hprop	40	4.5.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).	0.0190920829773	59
Coq.Logic.HLevels.not_hprop	40	2.7.8.0.1	search with cache (only 1: intro H; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro H1; only 1: contradiction).	0.424835920334	2412
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40	0.15.2.3	search with cache (only 1: intro n; only 1: intros a b; only 1: fix le_div2 1; only 1: trivial).	14.8643968105	15077
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.5	search with cache (only 1: destruct 1; only 1: auto).	0.00792598724365	12
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00523400306702	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.7.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00904488563538	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.1.0.0.6.9	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.20365691185	653
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.00866007804871	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00770592689514	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.2.0.0.11.0	search with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.22064614296	427
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.1.11.17.1.10.7.12.0	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig; only 1: destruct 1 as (eq_qp, H); only 1: destruct H; only 1: destruct eq_qp using eq_indd; only 1: reflexivity).	15.6339251995	53452
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.1.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.00727701187134	4
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.0.5.0.0	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity).	0.0203177928925	24
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	6.5.13	search with cache (only 1: intros A B []; only 1: subst; only 1: auto).	0.194180011749	435
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	2.0.2	search with cache (only 1: red; only 1: intros; only 1: auto).	0.00584197044373	7
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	2.7	search with cache (only 1: red; only 1: auto).	0.0521590709686	136
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	7.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0253529548645	51
Coq.Logic.EqdepFacts.f_eq_dep	40	0.3	search with cache (only 1: destruct 1; only 1: trivial).	0.00817394256592	5
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: trivial).	0.0105798244476	2
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: intros * []; only 1: trivial).	0.00646615028381	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	1.0	search with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.0203051567078	3
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	6	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.7375729084	27
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.0.0.0.2.1.0	search with cache (only 1: intros Ext A Ha; only 1: change_no_check A with ((fun _ => A) I); only 1: apply Ext; only 1: split; only 1: auto; only 1: intro H1; only 1: elim H1).	0.0154330730438	10
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	0.5	search with cache (only 1: intros [Hl Hr]; only 1: trivial).	0.0177621841431	12
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	1.0.2.0.2.0	search with cache (only 1: intro A; only 1: intros [?| ?]; only 1: auto; only 1: intro H1; only 1: elim H1; only 1: assumption).	0.0272891521454	143
Coq.Logic.Decidable.dec_True	40	2.12	search with cache (only 1: unfold decidable; only 1: tauto).	0.0095648765564	94
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00304698944092	2
Coq.Logic.Decidable.dec_or	40	5.1.4	search with cache (only 1: unfold decidable; only 1: intros; only 1: tauto).	0.0933310985565	335
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0188241004944	2
Coq.Logic.Decidable.dec_not	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.014331817627	3
Coq.Logic.Decidable.dec_imp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0146589279175	3
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0205218791962	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00947999954224	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00777292251587	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0119998455048	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0193600654602	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0100500583649	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0373258590698	2
Coq.Logic.Decidable.not_true_iff	40	0.0.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00619602203369	7
Coq.Logic.Decidable.not_false_iff	40	2	search with cache (only 1: tauto).	0.00631189346313	3
Coq.Logic.Decidable.not_not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0109689235687	3
Coq.Logic.Decidable.contrapositive	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0127279758453	3
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0149199962616	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0152261257172	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0141360759735	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0152981281281	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0161519050598	2
Coq.Logic.Decidable.not_or_iff	40	7.0	search with cache (only 1: intros; only 1: tauto).	0.0173799991608	11
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.00997304916382	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0209119319916	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0199258327484	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.13	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto with *; only 1: eauto with *).	0.163155078888	200
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0727150440216	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	10.1.0.17	search with cache (only 1: induction s; only 1: auto; only 1: simpl; only 1: intuition_in).	13.5378601551	1868
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: auto; only 1: simpl; only 1: ok).	0.035817861557	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.669044971466	651
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0426831245422	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0367789268494	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0868010520935	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.0.0.8.0	search with cache (only 1: induct s x; only 1: ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.674787044525	81
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	8	search with cache (only 1: exact (rmatch _ _ _)).	0.0303440093994	9
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0621321201324	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0.0.0.0	search with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.185706853867	5
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	0.1.0	search with cache (only 1: unfold filter; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0296080112457	4
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.022675037384	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0230488777161	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.3025431633	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0429878234863	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.7.1.1.0.10	search with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.76302313805	2647
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	1.0.0.1.1.0.0.0.1.1.0.0.5	search with cache (only 1: case rbal_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: auto).	11.4302918911	3879
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	1.0.0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: auto).	4.53474402428	1670
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.2.6.0.0.8.3.9	search with cache (only 1: intros; only 1: repeat red; only 1: destruct s; only 1: auto; only 1: simpl; only 1: descolor; only 1: firstorder; only 1: auto).	21.7967810631	24879
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.3.0.2.2	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: descolor; only 1: intuition; only 1: auto).	0.306927919388	158
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	2.1	search with cache (only 1: intros H; only 1: intuition).	0.477738142014	16
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	2	search with cache (only 1: now split).	0.0373809337616	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.0.2.0.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0679531097412	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	10.14	search with cache (only 1: unfold filter; only 1: auto_tc).	0.615598917007	734
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.4.1.2	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).	0.0720710754395	53
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0357809066772	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	1.0.0.2.0.0.0.3	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.05088710785	752
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0497989654541	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.14.0.0.0.0	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	14.2600259781	10598
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.100443124771	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0430910587311	3
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	2.0.0.0.2	search with cache (only 1: intros a n; only 1: split; only 1: intros H; only 1: trivial; only 1: now destruct n).	0.209644079208	26
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	search with cache (only 1: intros n; only 1: now destruct n).	0.0169279575348	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	5.3	search with cache (only 1: repeat red; only 1: intuition).	0.0171499252319	14
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	9.0	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0272989273071	39
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.7.0	search with cache (only 1: intros n; only 1: repeat red; only 1: intuition).	0.0350949764252	10
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	4.3.13	search with cache (only 1: intros a; only 1: fix even_spec 1; only 1: intuition).	2.99929499626	3153
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	2.11.3.4.5	search with cache (only 1: intro H; only 1: intros x y z; only 1: intuition; only 1: subst; only 1: easy || now destruct y).	3.72745919228	3859
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	5	search with cache (only 1: destr_bool).	0.014897108078	14
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	4.0.4.0.0.9.1	search with cache (only 1: intros n m; only 1: induction n; only 1: intuition; only 1: intuition; only 1: now subst; only 1: intuition; only 1: now subst).	7.96988916397	7119
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	1.0.0.1.0	search with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: easy'; only 1: now split).	0.40998506546	7
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	0.1.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0827429294586	233
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.2	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0318138599396	23
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.4	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0173270702362	17
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0175609588623	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0128121376038	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0124628543854	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.10	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	0.381356954575	487
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	3.4	search with cache (only 1: intro n; only 1: now destruct n).	0.0192189216614	17
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40	3.4.4.0.0.1	search with cache (only 1: unfold In; only 1: intros; only 1: revert x y s; only 1: intros a b; only 1: fix odd_spec 1; only 1: trivial).	5.99656820297	5747
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40	1.43	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	3.579433918	7067
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	1.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0173740386963	4
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	1.7.11.6	search with cache (only 1: unfold In; only 1: intro H; only 1: fix odd_spec 1; only 1: intuition).	34.5688090324	30998
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	1.10.14	search with cache (only 1: intros n Hn; only 1: fix sqrtrem_spec 1; only 1: auto).	1.30747509003	1967
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	3.6	search with cache (only 1: intro; only 1: now rewrite H).	0.0239880084991	26
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0199601650238	3
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.8.2	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.157982826233	79
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	3.14	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.263804912567	459
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.1	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0240559577942	12
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	2.1	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0174310207367	5
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0166499614716	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0241940021515	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.2.0	search with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: intuition).	0.0204250812531	5
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.2	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.111302137375	31
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0232751369476	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.1.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0637898445129	14
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0.0	search with cache (only 1: intros P; only 1: intuition; only 1: rewrite filter_spec; only 1: auto; only 1: intuition).	0.0309989452362	6
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.2.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.0201389789581	6
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	2.0	search with cache (only 1: symmetry; only 1: intuition).	0.01881980896	4
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40	0.1.3.0.0.3.0.9.27.0	search with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: inversion H; only 1: absurd (false = true); only 1: discriminate; only 1: inversion H; only 1: apply <- mem_spec; only 1: auto).	10.8011569977	9702
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	1.2	search with cache (only 1: symmetry; only 1: intuition).	0.0217299461365	5
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	1.9	search with cache (only 1: symmetry; only 1: intuition).	0.0418031215668	34
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	3.9	search with cache (only 1: symmetry; only 1: intuition).	0.114166021347	76
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	0.1	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0155928134918	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	5.0.4.6.4	search with cache (only 1: split; only 1: rewrite add_spec; only 1: intuition auto; BinInt.Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: auto with relations; only 1: intuition).	2.3096678257	1718
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	1.1.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.0353457927704	8
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.0.6.4	search with cache (only 1: split; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).	0.486889123917	263
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	0.5.2	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0661289691925	38
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0254499912262	2
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0230638980865	3
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	0	search with cache (only 1: intuition).	0.0117650032043	1
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.1.0.2.1.1	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (eq_dec x y); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	7.07986307144	1217
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	1.0.0.0.2.3	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	15.498237133	2529
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	2.11.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hx; only 1: auto).	22.345498085	359
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	9	search with cache (only 1: firstorder).	0.340934991837	81
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	19	search with cache (only 1: firstorder).	0.587112903595	1208
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	2.1.2.1.10	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: generalize (mem_iff s x); only 1: intuition; only 1: firstorder).	12.7519490719	2450
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	2.6.1	search with cache (only 1: intros x y H a; only 1: generalize dependent y; only 1: firstorder).	0.251531124115	221
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.0630059242249	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0604128837585	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0943400859833	4
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0598659515381	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.7.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.198330879211	15
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0455448627472	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0793499946594	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	0.0.0	search with cache (only 1: constructor; only 1: intuition; only 1: intuition).	0.0137190818787	3
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	0	search with cache (only 1: intuition).	0.0139098167419	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	0	search with cache (only 1: fsetdec).	0.040894985199	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0156948566437	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0352139472961	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0639650821686	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0262920856476	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0200538635254	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0357890129089	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0391550064087	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0467138290405	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0263671875	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0292010307312	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.1.1.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.126754999161	6
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0348448753357	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0271949768066	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0	search with cache (only 1: fsetdec).	0.11025595665	1
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.130301952362	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	2.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0909421443939	4
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.081356048584	1
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.109800100327	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.0949521064758	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.120355129242	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.224820137024	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	1	search with cache (only 1: fsetdec).	0.0993299484253	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0523610115051	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0845520496368	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0601801872253	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0874779224396	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0702879428864	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.138247966766	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.224940061569	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.18788599968	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.185703992844	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0247721672058	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.043083190918	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0464820861816	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0691139698029	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0493059158325	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0616428852081	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	1	search with cache (only 1: fsetdec).	0.315948009491	11
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.080775976181	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0442440509796	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0865309238434	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0762820243835	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.176567077637	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.130578041077	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.237910032272	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.170190095901	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.119997024536	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0747530460358	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0456039905548	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0319018363953	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0334281921387	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0435450077057	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0602381229401	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0494959354401	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0343039035797	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.113556146622	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0638718605042	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.417927980423	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.131372928619	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	1.0.0.11	search with cache (only 1: constructor; only 1: rewrite add_spec; only 1: intuition; only 1: intuition).	0.60172700882	102
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	1.3.4	search with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.195234060287	31
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.472679853439	25
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.385610103607	4
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.365194797516	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.7	search with cache (only 1: expAdd; only 1: fsetdec).	0.482836008072	24
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.3.6	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto with arith; only 1: intros; only 1: auto).	1.05353498459	143
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	5.5.2.0.3.2	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with *; only 1: intros a b; only 1: fsetdec).	13.2876360416	3743
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40	7.0.0.0.0.6.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	37.8927979469	6227
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0197570323944	3
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.0275621414185	7
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	6.1	search with cache (only 1: symmetry; only 1: auto with set).	0.0688881874084	64
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.3.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: fsetdec).	0.0254881381989	7
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.1.0.0.0.1.1.0.0.5	search with cache (only 1: symmetry; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto with set relations; only 1: intuition).	9.71056389809	9275
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with *).	0.032243013382	18
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0139009952545	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0135028362274	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40	0.15.23.0	search with cache (only 1: intros s s' E; only 1: generalize (is_empty_iff s); only 1: fix even_spec 1; only 1: intuition).	18.8618149757	27543
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	1.1.0.0.5	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto with *; only 1: eauto with *).	0.0675559043884	56
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.4	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0747849941254	9
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.0	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0286490917206	3
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.407423019409	7
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.191292047501	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	1.2.1.1	search with cache (only 1: intros; only 1: apply <- mem_spec; only 1: apply -> elements_spec1; only 1: intuition).	0.141482830048	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.133991956711	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	2.0.4	search with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intuition).	0.162114143372	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.251809835434	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.1162109375	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.03433918953	69
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.0889711380005	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40	0.0.0.1.0.2.0.0	search with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	14.229216814	1062
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40	0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	29.0613019466	3102
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.1.1.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: trivial).	0.0756750106812	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.1.1	search with cache (only 1: rewrite <- mem_spec; only 1: intuition; only 1: congruence).	0.820405960083	22
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	0.5	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.134281873703	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40	1.9.0.1.9.0.0.1	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	35.5222690105	8261
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0954840183258	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	3.2	search with cache (only 1: intros; only 1: auto with set).	0.0538020133972	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	1	search with cache (only 1: auto with set).	0.0476610660553	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	2	search with cache (only 1: intuition).	0.0916321277618	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40	9.5.0.1.4	search with cache (only 1: intros H a; only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: eauto with set).	20.2739269733	6698
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	2.0	search with cache (only 1: intros; only 1: auto with set).	0.0503308773041	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	2.0	search with cache (only 1: intros; only 1: auto with set relations).	0.0522210597992	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.0775010585785	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	0.0.11	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: rewrite remove_spec; only 1: intuition).	1.90996694565	149
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.0843498706818	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.0.1.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.910238027573	76
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	0.0.0.23	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	2.22426009178	1525
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.0703449249268	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0726099014282	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0537340641022	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0492310523987	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0476219654083	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set relations).	0.0471510887146	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	1	search with cache (only 1: auto with set).	0.0550761222839	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	1	search with cache (only 1: auto with set).	0.062618970871	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0714478492737	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.198709011078	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.0471501350403	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0520069599152	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.049252986908	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0496962070465	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0473189353943	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0471670627594	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0477938652039	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0484929084778	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0462958812714	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0457179546356	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	5.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.12044095993	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.0887501239777	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	2.0	search with cache (only 1: intros; only 1: auto with set).	0.0781259536743	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0822730064392	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0706830024719	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	1	search with cache (only 1: auto with set).	0.0694491863251	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.063982963562	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.0730030536652	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.0669851303101	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.0643410682678	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.092896938324	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	0.0761551856995	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.3.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with *; only 1: congruence; only 1: auto; only 1: auto).	0.596997976303	244
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1	search with cache (only 1: auto with set).	0.053295135498	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	6	search with cache (only 1: solve_proper).	0.198068857193	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	3.0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intuition).	0.148730039597	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0739419460297	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.3.0.0.1.1.7	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: do 2 (rewrite filter_spec; auto); only 1: set_iff; only 1: rewrite filter_spec; only 1: intuition; only 1: auto).	13.6858971119	599
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.0.0.1.0.0.2	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	0.137491941452	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	0.1.1.8.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: generalize (H x); only 1: auto with *; only 1: auto).	1.32179784775	980
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.103142976761	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: intuition).	0.595062017441	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.342571973801	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	1	search with cache (only 1: intuition).	0.100922107697	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.140202045441	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.209024906158	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.331182956696	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	8.0	search with cache (only 1: intro; only 1: intuition).	0.0833930969238	10
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0961580276489	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	22	search with cache (only 1: fsetdec).	8.01260900497	4050
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.132062911987	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.184543132782	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.213915109634	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.132824897766	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.333984851837	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.351749897003	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.2.10.1	search with cache (only 1: intros s s' E; only 1: intros x y H; only 1: rewrite singleton_spec; only 1: intuition).	1.98831796646	844
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2	search with cache (only 1: fsetdec).	0.162042140961	12
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	1	search with cache (only 1: fsetdec).	0.145555973053	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.115201950073	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	0.1.4	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: intuition).	0.403845071793	90
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	2.4	search with cache (only 1: fix odd_spec 1; only 1: assumption).	0.181870937347	41
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	1.4.4.0.0.3	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).	2.27922511101	1584
Coq.MSets.MSetGenTree.Props.In_node_iff	40	1.5.1	search with cache (only 1: split; only 1: intuition_in; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.220010995865	32
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	2	search with cache (only 1: intuition_in).	0.0701570510864	30
Coq.MSets.MSetGenTree.Props.lt_leaf	40	1.9.0	search with cache (only 1: intuition_in; only 1: repeat red; only 1: intuition_in).	0.197976112366	141
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0209720134735	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.1.6	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.19334602356	37
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.6.5.1	search with cache (only 1: intuition_in; only 1: red; only 1: intuition_in; only 1: order).	1.44434404373	503
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1.5	search with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.124368190765	37
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.1.0	search with cache (only 1: intros x y; only 1: intros; only 1: eauto).	0.0290839672089	6
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0377140045166	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.0257530212402	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.1.3.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto).	1.08228898048	550
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.4.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.418349981308	150
Coq.MSets.MSetGenTree.Props.empty_spec	40	1.0.1	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0223970413208	5
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.0306038856506	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	4.2	search with cache (only 1: fix even_spec 1; only 1: auto).	0.145909070969	78
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	1.25	search with cache (only 1: fix odd_spec 1; only 1: auto).	3.69213891029	3688
Coq.MSets.MSetGenTree.Props.eq_equiv	40	3.0.8.21.8.13	search with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros s s' s'' H; only 1: generalize s''; only 1: firstorder).	1.85307407379	3582
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	1.0.0.8.5	search with cache (only 1: intros; only 1: rewrite elements_node; only 1: unfold elements; only 1: simpl; only 1: now rewrite !app_assoc_reverse).	1.99477314949	957
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	5	search with cache (only 1: firstorder).	0.026104927063	6
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	0.25	search with cache (only 1: fix gcd_divide 1; only 1: auto).	2.66447782516	1671
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	9.12.5	search with cache (only 1: unfold lt; only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	38.4461381435	16614
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	31	search with cache (only 1: firstorder).	0.363497972488	919
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	7.1.10	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: rewrite (Hll' x); only 1: now f_equiv).	6.93617510796	1527
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	4.5.11.0.10	search with cache (only 1: intros x y z; only 1: intro H; only 1: elim H; only 1: destruct 1; only 1: firstorder).	6.40985393524	7569
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.151211977005	18
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	6.0	search with cache (only 1: intros n m; only 1: now Z_as_DT.nzsimpl).	0.292671918869	8
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	7.35.1.5	search with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	22.587348938	26282
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	12.4	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition Dec.fsetdec).	2.66169404984	1353
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	2.2.0.3.8.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: intuition).	4.92161417007	1740
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	3.76251912117	707
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.0.0.0.0.1.1.2.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intros; only 1: constructor 1; only 1: intuition; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	5.25115203857	1407
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	1.2.6	search with cache (only 1: simpl_relation; only 1: rewrite 2!InA_alt; only 1: firstorder).	1.73799395561	285
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	0.3	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.13649392128	31
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	5.2	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.0785820484161	45
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.1.0.0.2.0.0.0.0.4	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	8.99558401108	3805
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	1	search with cache (only 1: intuition).	0.0207757949829	2
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	2.1	search with cache (only 1: apply <- isok_iff; only 1: intuition).	0.0394198894501	5
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.0.5.11	search with cache (only 1: repeat red; only 1: unfold empty; only 1: intros a H; only 1: inv).	1.96173810959	354
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40	9.2	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.395634889603	249
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	1.3.0.2	search with cache (only 1: split; only 1: intros; only 1: auto; only 1: auto).	0.0387070178986	17
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0405759811401	3
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0	search with cache (only 1: reflexivity).	0.0326941013336	1
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	0.0.0.6.3	search with cache (only 1: destruct s; only 1: easy; only 1: simpl; only 1: intros; only 1: inversion H).	1.44689893723	818
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.0206708908081	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40	1.9.6.1	search with cache (only 1: intros; only 1: revert s; only 1: fix even_spec 1; only 1: intuition).	19.187912941	3875
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40	0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: generalize (IHs H1 f x); only 1: destruct (f a); only 1: destruct (partition f s); only 1: simpl in *; only 1: auto; only 1: destruct (partition f s); only 1: simpl in *; only 1: inversion_clear H; only 1: auto; only 1: auto).	34.1947329044	8571
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	2.2	search with cache (only 1: repeat red; only 1: auto).	0.0167231559753	6
Coq.MSets.MSetList.MakeRaw.mem_spec	40	0.5	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.223876953125	53
Coq.MSets.MSetList.MakeRaw.add_inf	40	1.1.3	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0839581489563	29
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.0.1.1.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	16.9716989994	2582
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition).	0.0204861164093	4
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.2.16.12.3	search with cache (only 1: intros; only 1: symmetry; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: intuition).	20.0266830921	25079
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.186089992523	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.0212230682373	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	5.1.10	search with cache (only 1: repeat red; only 1: intros a H; only 1: inversion_clear H).	0.192892074585	201
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	8.1	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0398290157318	42
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.0.2	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0211200714111	5
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	3.10.0	search with cache (only 1: intuition; only 1: inv; only 1: intuition).	0.430650949478	446
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	1.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0292179584503	4
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.2.7	search with cache (only 1: destruct s; only 1: inversion 2; only 1: simpl; only 1: inversion 1).	0.968466997147	505
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0358531475067	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1.1	search with cache (only 1: induction 1; only 1: auto).	0.0202748775482	4
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40	1.3.15.0	search with cache (only 1: intros; only 1: revert s; only 1: fix even_spec 1; only 1: intuition).	22.2335100174	7913
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	13	search with cache (only 1: solve_proper).	0.705458164215	439
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	0.5.13.6.11	search with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change_no_check (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: intro H; only 1: induction H; only 1: auto with *; only 1: auto).	27.6966750622	38160
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	search with cache (only 1: trivial).	0.0153820514679	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00881099700928	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.2.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00960612297058	10
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.0.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).	0.00735592842102	7
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.4.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00963687896729	15
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	0.0123357772827	6
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.2.1.0.0.0.1.3.0.0.0.0.7.0	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	12.2434649467	27149
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.0.2.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: trivial; only 1: auto).	0.00840306282043	8
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.3.0.0.3.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: auto with sets).	1.87276506424	3918
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	1.4.1.5.5.3.4.5.0.3	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: split; only 1: intro H1; only 1: auto; only 1: intro H1; only 1: intros; only 1: eauto; only 1: intro H1; only 1: auto).	3.99870204926	18199
Coq.Relations.Relations.inverse_image_of_eq	40	0.3.0.0.3.1.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.103367090225	333
Coq.Sets.Uniset.leb_refl	40	0	search with cache (only 1: destr_bool).	0.00498700141907	1
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00775694847107	5
Coq.Sets.Uniset.seq_refl	40	1.6	search with cache (only 1: destr_bool; only 1: auto).	0.0104551315308	9
Coq.Sets.Uniset.seq_trans	40	0.1.11.7.4.4.8.0.6	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H1; only 1: elim H1; only 1: elim H1; only 1: intros Hfst Hsnd; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	18.8017110825	46946
Coq.Sets.Uniset.seq_sym	40	0.0.1	search with cache (only 1: destruct y; only 1: unfold seq; only 1: intuition).	0.0121409893036	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00919485092163	3
Coq.Sets.Uniset.union_empty_right	40	1.1.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.0468051433563	47
Coq.Sets.Uniset.union_comm	40	1.9.0.0	search with cache (only 1: unfold seq; only 1: simpl; only 1: destruct y; only 1: intuition).	0.394259929657	657
Coq.Sets.Uniset.union_ass	40	0.2.4.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: destruct y; only 1: simpl; only 1: intuition).	0.55112695694	609
Coq.Sets.Uniset.seq_left	40	1.0.2.0.0.0.0.1.0	search with cache (only 1: unfold seq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.77407002449	872
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0214109420776	10
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	0.199105024338	167
Coq.Sets.Multiset.meq_refl	40	0.0.8	search with cache (only 1: intros a b; only 1: PeanoNat.Nat.bitwise; only 1: trivial).	0.142971992493	73
Coq.Sets.Multiset.meq_trans	40	8.1	search with cache (only 1: unfold meq; only 1: congruence).	1.07216191292	172
Coq.Sets.Multiset.meq_sym	40	1.0.0.0.2.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).	0.0265529155731	9
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0164968967438	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0345401763916	5
Coq.Sets.Multiset.munion_comm	40	0.2.11.2	search with cache (only 1: destruct x; only 1: fix even_spec 1; only 1: unfold meq; only 1: auto).	3.18621206284	3132
Coq.Sets.Multiset.munion_ass	40	6.0.2.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intuition).	1.04944300652	884
Coq.Sets.Multiset.meq_left	40	0.1.1.5.1.1.0.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros EQ; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	2.56685304642	2301
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0331900119781	9
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	0.1.2.2.4	search with cache (only 1: intros n m p q H1 H2; only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	1.99343800545	1398
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	0.518399953842	320
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: exact PeanoNat.Nat.le_refl).	0.0177171230316	1
Coq.Sets.Integers.le_antisym	40	1.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0228140354156	5
Coq.Sets.Integers.le_trans	40	4.1.0	search with cache (only 1: red; only 1: intros n m p; only 1: PeanoNat.Nat.Private_Tac.order).	0.0493488311768	27
Coq.Sets.Integers.le_Order	40	1.0.3.1.2	search with cache (only 1: split; only 1: auto with sets; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.127184867859	174
Coq.Sets.Integers.triv_nat	40	3.3.3.4.1	search with cache (only 1: nzinduct n; only 1: split; only 1: intros a; only 1: red; only 1: now split).	0.8191010952	1094
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40	2.0.34.4.33	search with cache (only 1: split; only 1: intros H; only 1: fix gcd_divide 1; only 1: intros n m; only 1: auto).	34.5389409065	67932
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.10.3.2.4	search with cache (only 1: intros; only 1: intro H1; only 1: intros; only 1: red; only 1: auto).	0.237812042236	1039
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	5.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.0652651786804	61
Coq.Sets.Relations_1_facts.contains_is_preorder	40	5.1	search with cache (only 1: intro A; only 1: auto  10 with sets).	0.0134429931641	44
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	6.0.1.8.0.3.0.2.0.1	search with cache (only 1: split; only 1: intro H'1; only 1: auto  10 with sets; only 1: intro H'1; only 1: intros A B [H1 H2]; only 1: destruct 1; only 1: auto  10 with sets; only 1: unfold Symmetric, Complement; only 1: intros A B [H1 H2]; only 1: auto  10 with sets).	5.55954194069	24938
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.4.8	search with cache (only 1: intro H'1; only 1: intros A B [H1 H2]; only 1: auto  10 with sets).	0.170019865036	473
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.00679802894592	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0118551254272	2
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.0	search with cache (only 1: intros; only 1: auto  10 with sets).	0.0147759914398	2
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.0301361083984	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	2.1.0.0.0.0.7.0.7	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	1.03989696503	5539
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.0.6.3.0.0.5.5	search with cache (only 1: intro T; only 1: intros U R; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	4.38591885567	22522
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	0.0.0.1.1.1.2.0.1.0.0.3.1.0.1	search with cache (only 1: generalize Rstar_contains_R; only 1: intro T; only 1: red in T; only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	24.9687361717	69852
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.1.0.0.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	0.930260181427	1929
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.0.0.0.0.0.0.1	search with cache (only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.658913135529	1113
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	4.1.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: auto).	0.0118191242218	8
Coq.Sets.Permut.comm_left	40	1.3.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.00942182540894	7
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	2.0.0.3.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: trivial).	0.0198400020599	20
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	2.0.0.10.1.1.11.0	search with cache (only 1: intuition; only 1: elim (classic (In U X x)); only 1: red; only 1: intro H'0; only 1: exists x; only 1: auto with sets; only 1: auto with sets; only 1: intuition).	13.1014540195	22869
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	0.9.12.0.2.17	search with cache (only 1: intro X; only 1: apply Extensionality_Ensembles; only 1: split; only 1: destruct 1 as [x0 H y H0]; only 1: destruct H; only 1: auto with sets).	14.4379088879	16082
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	5.5.8.2	search with cache (only 1: intros X A x H'0; only 1: elim H'0; only 1: intro H'5; only 1: firstorder).	1.47009396553	2639
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40	0.15.2	search with cache (only 1: intros X f H'; only 1: fix le_div2 1; only 1: trivial).	2.24560785294	3234
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	5.0	search with cache (only 1: red; only 1: destruct 1).	0.0201108455658	33
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00952696800232	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1	search with cache (only 1: auto with sets).	0.00986194610596	2
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40	1.7.0.0.0.5.3.0.7	search with cache (only 1: intro X; only 1: intro A; only 1: intros f [x]; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'6; only 1: subst; only 1: auto with sets).	30.6057209969	41037
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40	2.2.5.1.4.4.0	search with cache (only 1: intro A; only 1: split; only 1: split; only 1: auto with sets; only 1: red; only 1: red; only 1: auto with sets).	1.56202316284	3014
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	3.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.032233953476	11
Coq.Sets.Powerset.Union_increases_l	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.0287811756134	2
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.027449131012	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.1.0.0.0.2	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: elim H'1; only 1: elim H'1; only 1: auto with sets).	0.274238109589	114
Coq.Sets.Powerset.Intersection_decreases_r	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets).	0.043713092804	11
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	12.1.1	search with cache (only 1: intros A x y H'; only 1: intro H; only 1: firstorder).	3.49082279205	1332
Coq.Sets.Classical_sets.Subtract_inv	40	2.0.2	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.0251770019531	21
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40	1.4.0.0.3.12.1	search with cache (only 1: intros X Y H'; only 1: split; only 1: elim H'; only 1: intros H'0 H'1; only 1: auto with sets; only 1: elim H'; only 1: auto  7 using Inhabited_Setminus with sets).	15.2322251797	10002
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: red; only 1: intro H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: elim H'1; only 1: auto with sets).	0.0216619968414	7
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.1.3.5.0.0.0.0.0.0.1	search with cache (only 1: red; only 1: generalize Rstar_contains_Rplus; only 1: intro T; only 1: red in T; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros U R; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	3.06466221809	11142
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.1.5.0.1	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.485511064529	243
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.2.1.0.0	search with cache (only 1: intros A B x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.291621923447	22
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40	3.1.1.0.2.2.0.2.0.1	search with cache (only 1: intros; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intro H'3; only 1: elim H'3; only 1: auto with sets; only 1: intros; only 1: red; only 1: tauto).	7.32557010651	9920
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.0.0.0.1.0.0.1.0.1.0	search with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	4.15445494652	1626
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.0.1.0.0.2.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	1.20773887634	779
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	7	search with cache (only 1: auto  10 with sets).	0.0485291481018	21
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0224969387054	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0300118923187	1
Coq.Sets.Powerset_facts.Union_commutative	40	1	search with cache (only 1: auto with sets).	0.0320768356323	2
Coq.Sets.Powerset_facts.Union_associative	40	22.2	search with cache (only 1: intros B C H'; only 1: auto  10 with sets).	1.43348503113	740
Coq.Sets.Powerset_facts.Union_idempotent	40	1	search with cache (only 1: auto  6 with sets).	0.0407738685608	2
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  9 with sets).	0.0240821838379	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.931818962097	1171
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	22.2359120846	22881
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.2.1.1.0.2.1.1.1.0.2	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	1.37981510162	2028
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.1.3.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	10.880120039	9249
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	9.1.1.5	search with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	2.18839406967	2839
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.2.3.4.0.1.1.1.3.1.7.2	search with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'; only 1: red; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	19.4561760426	38581
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	1.0.2.0.0.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: induction H'; only 1: destruct 1; only 1: destruct 1; only 1: intros x1 H'0; only 1: auto with sets).	0.0190000534058	11
Coq.Sets.Powerset_facts.incl_add	40	0.1	search with cache (only 1: unfold Add; only 1: auto with sets).	0.0626418590546	3
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	5.6	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.5893638134	340
Coq.Sets.Powerset_facts.Add_commutative'	40	21.0.0.0	search with cache (only 1: intros A x y; only 1: unfold Add; only 1: rewrite (Union_associative A (Singleton U x) (Singleton U y)); only 1: auto  10 with sets).	23.211774826	19505
Coq.Sets.Powerset_facts.Add_distributes	40	3.2.2.0.5	search with cache (only 1: intros x y z H' H'0; only 1: apply Extensionality_Ensembles; only 1: red; only 1: unfold Add; only 1: auto  10 with sets).	1.73982810974	1028
Coq.Sets.Powerset_facts.setcover_intro	40	2	search with cache (only 1: auto with sets).	0.00996804237366	3
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0310389995575	5
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0944471359253	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.10.2.1.6	search with cache (only 1: intros A B; only 1: apply Extensionality_Ensembles; only 1: split; only 1: destruct 1; only 1: intuition; only 1: intuition).	2.02924513817	3194
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	2.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.179527044296	107
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.1.4.0.0.3.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: destruct H1; only 1: intuition; only 1: intuition).	1.06713604927	1214
Coq.Sets.Constructive_sets.Extension	40	1.7.1.7.1.5	search with cache (only 1: destruct 1; only 1: split; only 1: intro H; only 1: auto; only 1: intro H; only 1: auto).	0.646631002426	2418
Coq.Sets.Constructive_sets.Noone_in_empty	40	1.4.6.1	search with cache (only 1: unfold not; only 1: intro H; only 1: intro H1; only 1: elim H1).	0.0762259960175	252
Coq.Sets.Constructive_sets.Included_Empty	40	3.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0212540626526	6
Coq.Sets.Constructive_sets.Add_intro1	40	0.10.0.0	search with cache (only 1: intro; only 1: intros B C H'; only 1: left; only 1: trivial).	0.384028196335	909
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0159740447998	2
Coq.Sets.Constructive_sets.Inhabited_add	40
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	1.6.1.5.1.0.9	search with cache (only 1: intro H; only 1: red; only 1: destruct 1; only 1: intro; only 1: elim (Noone_in_empty x); only 1: elim H1; only 1: auto using Add_intro2 with sets).	3.08316683769	15629
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.12.12.2.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	5.52652406693	34867
Coq.Sets.Constructive_sets.Singleton_inv	40	0.1.1	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: trivial).	0.032674074173	5
Coq.Sets.Constructive_sets.Singleton_intro	40	1.1.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto with sets).	0.0282649993896	5
Coq.Sets.Constructive_sets.Union_inv	40	0.0.0.6	search with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Add_intro2 with sets; only 1: auto with sets).	0.0527369976044	26
Coq.Sets.Constructive_sets.Add_inv	40	1.9.5.15.1.0	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: destruct 1; only 1: auto with sets; only 1: destruct H; only 1: auto using Add_intro2 with sets).	21.1339740753	58490
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets).	0.0158290863037	4
Coq.Sets.Constructive_sets.Couple_inv	40	4.0.2.4	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.117117166519	328
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0245461463928	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.0313730239868	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	7.0.0.5	search with cache (only 1: intros; only 1: red; only 1: destruct 1; only 1: auto with sets).	0.188045024872	763
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.1.33.4	search with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	11.0565779209	26894
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40	3.4.3.2	search with cache (only 1: intros a H; only 1: induction 1; only 1: now elim H; only 1: intuition).	1.68125891685	1495
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40	0.33	search with cache (only 1: fix odd_spec 1; only 1: trivial).	14.820841074	12227
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40	1.18.0	search with cache (only 1: intros X x H'; only 1: fix le_div2 1; only 1: auto with sets).	6.23755288124	4766
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	0.1.3	search with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.028736114502	43