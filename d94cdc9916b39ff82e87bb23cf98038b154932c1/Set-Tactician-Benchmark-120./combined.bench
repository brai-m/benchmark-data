Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	27.883780	2
Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	28.251300	1
Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	28.259284	6
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	28.496243	2
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	29.019895	2
Coq.Init.Peano.plus_n_O	120
Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	29.408743	2
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	29.199128	2
Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	29.284064	2
Coq.Init.Logic.not_iff_compat	120	0.0.0.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	28.790596	10
Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	29.228468	2
Coq.Init.Datatypes.eq_true_ind_r	120	0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	29.075050	11
Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	29.150119	5
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.1.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	29.573654	25
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	29.725341	2
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	29.444690	18
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	29.476400	16
Coq.Init.Wf.Well_founded.Acc_inv	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	30.153223	2
Coq.Init.Wf.Well_founded.well_founded_induction_type	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	29.687692	4
Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	29.920002	2
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	30.223187	13
Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	30.280433	6
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	30.381802	16
Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT_uncurried; only 1: exact pq).	30.299730	5
Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	30.799787	23
Coq.Init.Tactics.decide_left	120	0.2.4.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: apply H0; only 1: clear H0; only 1: destruct n; only 1: assumption).	32.164992	39
Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	31.795456	35
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.2.0.0.0.0.0.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	32.357180	46
Coq.Init.Logic.and_iff_compat_l	120	1.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	33.184140	60
Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	34.246832	43
Coq.Init.Logic.neg_false	120	2.0.0.0.0.0.0.0.1.0.7.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: split; only 1: intros ?; only 1: apply H; only 1: assumption; only 1: intros ?; only 1: destruct H0; only 1: intros ?; only 1: destruct H; only 1: assumption).	34.761815	144
Coq.Init.Logic.and_cancel_r	120	3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	35.513583	69
Coq.Init.Datatypes.andb_prop	120	0.0.0.0.1.2.0.1.0.0.0.0.0.0.1.1	synth with cache (only 1: split; only 1: destruct b; only 1: destruct a; only 1: split; only 1: assumption; only 1: destruct a; only 1: split; only 1: assumption; only 1: destruct b; only 1: auto; only 1: destruct H; only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	40.434437	145
Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	23.338570	1
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	23.778729	2
Coq.Init.Specif.sigT.eq_existT_curried	120	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	24.438977	3
Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	23.848082	7
Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	23.998746	1
Coq.Init.Datatypes.surjective_pairing	120	0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	23.978702	3
Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	24.651540	6
Coq.Init.Logic.universal_quantification.inst	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	23.977381	2
Coq.Init.Peano.mult_n_O	120	0.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	24.816308	9
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	24.503926	6
Coq.Init.Wf.Well_founded.well_founded_induction	120	0	synth with cache (only 1: exact well_founded_induction_type).	24.373612	1
Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	25.146710	3
Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	25.208460	3
Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	25.077910	3
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	25.682634	14
Coq.Init.Wf.Well_founded.well_founded_ind	120	0	synth with cache (only 1: exact well_founded_induction_type).	25.386713	1
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	24.243247	2
Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	24.899983	7
Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	26.386274	18
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	24.020548	3
Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	26.026350	3
Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	25.262436	4
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	24.644410	2
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	28.655010	43
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	24.452922	2
Coq.Init.Logic.or_cancel_l	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	30.579847	52
Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	29.906244	44
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	25.702386	6
Coq.Init.Logic.or_cancel_r	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	31.420518	52
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	25.245878	16
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	24.823754	8
Coq.Init.Datatypes.andb_true_intro	120	0.0.1.0.0.1.5.30.1.3	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H; only 1: destruct b2; only 1: destruct H0; only 1: simpl; only 1: auto; only 1: destruct H0; only 1: simpl; only 1: auto).	67.126650	2865
Coq.Init.Peano.le_0_n	120
Coq.Init.Specif.sig.eq_exist_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	28.174140	6
Coq.Init.Datatypes.rew_pair	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	27.515572	3
Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	27.588590	8
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	27.798796	8
Coq.Init.Logic_Type.identity_ind_r	120	0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	29.248401	16
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	28.100960	8
Coq.Init.Specif.sig.eq_sig_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist_uncurried; only 1: exact pq).	28.754762	5
Coq.Init.Peano.le_S_n	120	48.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply le_pred).	30.462116	166
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	27.191044	3
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	27.754056	3
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	27.234892	3
Coq.Init.Logic.equality_dep.f_equal_dep	120	4.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	29.359895	24
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	27.494540	4
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.0.0.0.7	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	29.941678	37
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	27.728313	5
Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	29.305463	3
Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	26.716206	1
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	28.136044	6
Coq.Init.Logic.eq_trans_refl_l	120	0.0.1.1	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct e; only 1: reflexivity).	28.336913	11
Coq.Init.Logic.eq_sym_involutive	120	0.0.4	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	28.836578	18
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.2.0	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct e; only 1: reflexivity).	29.952953	15
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.3	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	30.344002	22
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	7.16.0	synth with cache (only 1: intros; only 1: destruct r; only 1: auto).	37.538540	306
Coq.Init.Datatypes.injective_projections	120	0.2.0.5.2.0.0	synth with cache (only 1: intros; only 1: destruct p1; only 1: destruct p2; only 1: simpl in *; only 1: rewrite H0; only 1: rewrite H; only 1: reflexivity).	54.082960	374
Coq.Init.Logic.f_equal_compose	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	34.633399	5
Coq.Init.Peano.n_Sn	120	3.0.17	synth with cache (only 1: apply nat_rect; only 1: auto; only 1: auto).	101.840223	4945
Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	28.803741	4
Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	28.987300	8
Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.0.5	synth with cache (only 1: intros ?; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	31.493561	18
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e; only 1: destruct e0; only 1: destruct x; only 1: simpl; only 1: reflexivity).	32.322290	7
Coq.Init.Peano.nat_case	120	0.0.1.3.0	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct n; only 1: assumption; only 1: auto).	30.906764	29
Coq.Init.Logic.map_subst	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	30.804894	3
Coq.Init.Logic.rew_swap	120	0.1.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	29.933251	7
Coq.Init.Logic.rew_compose	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	29.826401	3
Coq.Init.Logic.eq_trans_assoc	120	0.0.2.0	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct e''; only 1: reflexivity).	33.837849	12
Coq.Init.Logic.rew_map	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct H; only 1: reflexivity).	32.620083	6
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	28.527680	1
Coq.Init.Logic.eq_trans_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	29.141108	3
Coq.Init.Logic.map_subst_map	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros; only 1: destruct H; only 1: reflexivity).	31.940014	5
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT2_uncurried; only 1: exact pqr).	33.338042	5
Coq.Init.Logic.eq_sym_map_distr	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	31.469523	4
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Specif.exists_to_inhabited_sig	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: unfold Fix; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	30.786342	6
Coq.Init.Logic.eq_trans_sym_distr	120	0.0.0.2	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	33.262988	14
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	32.155026	3
Coq.Init.Logic.rew_const	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	32.199105	3
Coq.Init.Logic.eq_trans_map	120	0.3.7.23.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1; only 1: destruct H1'; only 1: destruct H2'; only 1: reflexivity).	40.161418	317
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	28.679632	2
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	30.021048	4
Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	35.411469	9
Coq.Init.Logic.inhabited_covariant	120	26.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	34.356748	139
Coq.Init.Logic.universal_quantification.gen	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	37.427249	7
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	31.138987	8
Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	38.576332	3
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120	0.0.0.0	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	30.378643	4
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	36.473089	3
Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	38.992311	19
Coq.Init.Logic.forall_exists_coincide_unique_domain	120	0.0.0.0.5.4.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: exists x; only 1: auto).	39.843764	105
Coq.Init.Logic.eq_stepl	120	0.3.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	40.402408	31
Coq.Init.Specif.sig2.eq_sig2_uncurried	120	0.0.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist2_uncurried; only 1: exact pqr).	40.074625	5
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	36.260149	3
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Peano.le_pred	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	47.839662	3
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	35.170229	13
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Peano.nat_rect_succ_r	120	0.0.1.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	41.505766	15
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Logic.unique_existence	120
Coq.Init.Peano.nat_rect_plus	120	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.2.0	synth with cache (only 1: intros; only 1: induction m; only 1: simpl; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: trivial; only 1: simpl; only 1: destruct IHm; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: trivial).	69.717155	209
Coq.Init.Peano.max_l	120
Coq.Init.Peano.max_r	120	0.0.0.0.0.0.2.0.1.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros ?; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).	114.726206	1040
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Peano.min_l	120
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Peano.min_r	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Datatypes.CompSpec2Type	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
