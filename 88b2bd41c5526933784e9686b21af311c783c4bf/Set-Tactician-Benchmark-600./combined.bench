coq-bbv.1.3	bbv.BinNotation.Unnamed_thm1	600	2	synth with cache (only 1: reflexivity).	0.010457	3
coq-bbv.1.3	bbv.HexNotation.Unnamed_thm0	600	0	synth with cache (only 1: reflexivity).	0.009852	1
coq-bbv.1.3	bbv.HexNotation.Unnamed_thm2	600	0	synth with cache (only 1: reflexivity).	0.009863	1
coq-corn.8.16.0	CoRN.logic.Classic.ClassicExists.existsC_ind	600	3.0	synth with cache (only 1: intros; only 1: firstorder).	0.012873	5
coq-hott.8.11	HoTT.Basics.Overture.issig_equiv	600	0	synth with cache (only 1: issig).	0.020033	1
coq-poltac.0.8.11	PolTac.ZAux.Zlt_pos_neg	600	16.0.0	synth with cache (only 1: intros n; only 1: intros Ha; only 1: intuition).	0.032496	19
coq-tlc.20200328	TLC.LibTactics.iff_intro_swap	600	0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros P; only 1: split; only 1: trivial; only 1: trivial).	0.017832	5
coq-tlc.20200328	TLC.LibTactics.ltac_something_eq	600	0.1	synth with cache (only 1: intros; only 1: intuition).	0.013917	3
coq-mathcomp-apery.1.0.1	mathcomp.apery.conj.Private.andb_iter_cons_cons	600	1.0	synth with cache (only 1: simpl; only 1: easy).	0.022255	3
coq-poltac.0.8.11	PolTac.RAux.Rge_sign_neg_neg	600	0.0.0.0.0.7.3.0	synth with cache (only 1: intros; only 1: replace (x * y) with (- x * - y); only 1: apply Rle_ge; only 1: apply Rmult_le_pos; only 1: auto with real; only 1: rewrite <- Ropp_0; only 1: auto with real; only 1: ring).	0.149931	18
coq-corn.8.16.0	CoRN.stdlib_omissions.Q.positive_nonzero_in_Q	600	0.0.12.0	synth with cache (only 1: intros H; only 1: absurd (1 < 0)%Z; only 1: discriminate; only 1: discriminate).	0.036479	16
coq-hott.8.11	HoTT.Truncations.Core.istruncmap_mapinO_tr	600	3.0	synth with cache (only 1: intros y; only 1: exact _).	0.028772	5
coq-tlc.20200328	TLC.LibSum.IsIn.is_inl_neg_is_inr	600	16.30.0	synth with cache (only 1: intros x; only 1: compute; only 1: tautob).	0.025653	49
coq-haskell.1.0.0	Hask.Data.Semigroup.Just_Proper	600	1.4	synth with cache (only 1: intros x; only 1: auto).	0.030022	7
coq-haskell.1.0.0	Hask.Data.List.olast_ex2	600	13	synth with cache (only 1: trivial).	0.013188	14
coq-haskell.1.0.0	Hask.Data.List.ex_mapAccumL_1	600	2.2	synth with cache (only 1: simpl in *; only 1: auto).	0.018764	6
coq-corn.8.16.0	CoRN.model.setoids.Nsetoid.ap_nat_cotransitive	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold cotransitive; only 1: intros x; only 1: intros y; only 1: intros X; only 1: intros z; only 1: unfold ap_nat; only 1: case (Nat.eq_dec x z); only 1: intros e; only 1: right; only 1: rewrite <- e; only 1: assumption; only 1: intros ?; only 1: left; only 1: intros ?; only 1: elim n; only 1: assumption).	0.283173	16
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zarith.Zdec	600	0	synth with cache (only 1: exact (fun x : Z => Z.eq_dec x 0)).	0.012659	1
coq-corn.8.16.0	CoRN.tactics.AlgReflection.Correctness_Results.eq_nat_corr	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros H; only 1: case (IHn _ H); only 1: reflexivity).	0.120411	16
coq-corn.8.16.0	CoRN.model.structures.Nsec.ap_nat_irreflexive0	600	3.6.7.0	synth with cache (only 1: intros; only 1: intros y; only 1: elim (Z.lt_irrefl 0); only 1: easy).	0.055959	20
coq-corn.8.16.0	CoRN.model.semigroups.Zsemigroup.Zplus_is_CSemiGroup	600	0.0.0.0.0.0.16	synth with cache (only 1: red; only 1: red; only 1: intros x; only 1: intros y; only 1: intros z; only 1: simpl; only 1: apply Z.add_assoc).	0.090470	23
coq-smtcoq.2.0+8.11	SMTCoq.State.Lit.lit_true	600	4.1	synth with cache (only 1: apply to_Z_inj; only 1: split).	0.053154	7
coq-corn.8.16.0	CoRN.model.setoids.Qsetoid.Qplus_strext1	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.posnum.inferP	600	1.0	synth with cache (only 1: intros UIP_refl; only 1: trivial).	0.046047	3
coq-qcert.2.2.0	Qcert.Utils.Fresh.Fresh.find_bounded_S_nin_finds	600	1.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite find_bounded_S_seq; only 1: rewrite <- (find_over_map (fun x => if in_dec equiv_dec x dom then false else true) f); only 1: apply find_fresh_from; only 1: rewrite map_length; only 1: rewrite seq_length; only 1: trivial; only 1: apply map_inj_NoDup; only 1: trivial; only 1: apply seq_NoDup).	0.103516	10
coq-smtcoq.2.0+8.11	SMTCoq.PropToBool.Unnamed_thm1	600	0	synth with cache (only 1: trivial).	0.012848	1
coq-poltac.0.8.11	PolTac.Zex.pols_test2	600	20.1	synth with cache (only 1: intros H2; only 1: auto with zarith).	0.126661	23
coq-poltac.0.8.11	PolTac.ReplaceTest.Unnamed_thm25	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros c; only 1: intros d; only 1: intros H1; only 1: intros H2; only 1: polr H1; only 1: pols; only 1: auto; only 1: pols; only 1: auto).	0.223611	11
coq-corn.8.16.0	CoRN.tactics.RingReflection.Ring_Interpretation_Function.fexprR2interp	600	3.12.5.30.47.99.99.228.6	synth with cache (only 1: intros x; only 1: destruct N.ggcd as (g, _tmp_tactician0); only 1: constructor; only 1: constructor; only 1: intuition; only 1: case x; only 1: intros e; only 1: intros H; only 1: apply xexprR2interpR).	0.507574	538
coq-corn.8.16.0	CoRN.stdlib_omissions.P.Ple_le	600
coq-corn.8.16.0	CoRN.logic.Classic.infinitePidgeonHolePrinicpleB	600
coq-corn.8.16.0	CoRN.util.SetoidPermutation.SetoidPermutation_from_Permutation	600
coq-qcert.2.2.0	Qcert.Utils.Lattice.Lattice.bprops.join_top_r	600
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.compare	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.eqb_elt_eq	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.lt_elt_strorder	600	0	synth with cache (only 1: apply StrictOrder_OrdType).	0.007786	1
coq-topology.10.0.1	Topology.InteriorsClosures.interior_closure.interior_deflationary	600
coq-poltac.0.8.11	PolTac.ZAux.Zgt_sign_pos_pos	600
coq-printf.2.0.0	Printf.Justify.drop_spec	600
coq-ceres.0.4.0	Ceres.CeresString.not_string_elem_head	600
coq-hott.8.11	HoTT.WildCat.Yoneda.opyoneda	600
coq-bbv.1.3	bbv.ZLib.range_div_pos	600
coq-corn.8.16.0	CoRN.logic.Stability.Stable_False	600	0	synth with cache (only 1: firstorder).	0.010667	1
coq-poltac.0.8.11	PolTac.RAux.Rgt_sign_neg_pos_rev	600
coq-poltac.0.8.11	PolTac.RAux.Rmult_gt_neg_compat_l	600	0.0.0.0.0.0	synth with cache (only 1: unfold Rgt; only 1: replace (p * n) with (- (- p * n)); only 1: replace (p * m) with (- (- p * m)); only 1: auto with real; only 1: ring; only 1: ring).	0.085949	6
coq-corn.8.16.0	CoRN.logic.Stability.DN_decisionT	600	13.11	synth with cache (only 1: intros X1; only 1: auto with zarith).	0.149139	26
coq-corn.8.16.0	CoRN.stdlib_omissions.Q.Qdiv_flip_lt	600
coq-bbv.1.3	bbv.DepEqNat.nat_cast_proof_irrel	600
coq-corn.8.16.0	CoRN.algebra.OperationClasses.Commutative.mulC_id_r	600
coq-corn.8.16.0	CoRN.algebra.OperationClasses.Commutative.mulC_zero_r	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.Reflective_Subuniverse.Functor.O_functor_2homotopy	600
coq-hott.8.11	HoTT.Factorization.Factorization.issig_PathFactorization	600
coq-hott.8.11	HoTT.Modalities.Modality.EasyModalities.O_ind_easy_beta	600
coq-hott.8.11	HoTT.Extensions.Extensions.equiv_extendable_pathsplit	600
coq-corn.8.16.0	CoRN.algebra.RSetoid.join0	600
coq-corn.8.16.0	CoRN.order.SemiLattice.meet_compat_Proper	600
coq-hott.8.11	HoTT.HIT.Coeq.Coeq_ind_dp	600
coq-hott.8.11	HoTT.Colimits.Colimit_Flattening.Flattening.transport_E'	600
coq-hott.8.11	HoTT.Colimits.Pushout.pushout_unrec	600
coq-hott.8.11	HoTT.Colimits.MappingCylinder.MappingCylinder.CylInd.Cyl_ind_dp	600
coq-hott.8.11	HoTT.Categories.Comma.ProjectionFunctors.comma.comma_category_projection_functor_object_of	600
coq-hott.8.11	HoTT.Modalities.Descent.LeftExactness.path_OO	600
coq-hott.8.11	HoTT.Colimits.Colimit_Pushout.PO.PO_ind	600
coq-tlc.20200328	TLC.LibRelation.Inhab_binary	600
coq-tlc.20200328	TLC.LibRelation.Irrefl.irrefl_inv_neq	600	0.0.0.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros_all; only 1: subst ~; only 1: apply * H).	0.022286	5
coq-tlc.20200328	TLC.LibRelation.Trans.trans_inv_swap	600	0.0	synth with cache (only 1: introv Tr R1 R2; only 1: apply * Tr).	0.012611	2
coq-tlc.20200328	TLC.LibRelation.Eq.refl_eq	600	0.0	synth with cache (only 1: intros_all; only 1: trivial).	0.012339	2
coq-tlc.20200328	TLC.LibRelation.Eq.sym_eq	600	0	synth with cache (only 1: congruence).	0.008103	1
coq-corn.8.16.0	CoRN.order.TotalOrder.TotalOrderMinDef.min_lb_l	600
coq-hott.8.11	HoTT.Truncations.Core.Trunc_swap	600
coq-hott.8.11	HoTT.Categories.Category.Sigma.Univalent.on_both.iso_A'_code	600
coq-hott.8.11	HoTT.Cubical.PathCube.PathCubeRewriting.cu_GGGGGG	600
coq-ceres.0.4.0	Ceres.CeresParserRoundtrip.after_atom_string_cons	600
coq-hott.8.11	HoTT.Homotopy.Suspension.Susp_ind_dp	600
coq-haskell.1.0.0	Hask.Control.Category.iso_compose_obligation_2	600
coq-qcert.2.2.0	Qcert.Utils.StringAdd.StringOrder.compare_spec	600
coq-qcert.2.2.0	Qcert.Utils.OptimizerStep.OptimizerStep.optim_list_correct_from_model	600
coq-haskell.1.0.0	Hask.Control.Monad.Trans.Class.MonadTransLaws.trans_law_1_x	600
coq-haskell.1.0.0	Hask.Data.List.ListLaws.List_FunctorLaws_obligation_1	600
coq-topology.10.0.1	Topology.Connectedness.connected_img	600
coq-corn.8.16.0	CoRN.model.Zmod.ZDivides.zdivides.Zdivides_antisymm	600
coq-haskell.1.0.0	Hask.Control.Monad.Trans.Control.mbc_law_1_x	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Misc.app_inv_tail_length	600
coq-gaia-stern.1.15	gaia.stern.fibm.ltn_paddl	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Misc.is_nil_dec	600	0.0.0.0.0	synth with cache (only 1: destruct l; only 1: left; only 1: easy; only 1: right; only 1: inversion 1).	0.113201	5
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Misc.eq_means_same_length	600	0.4.1.0.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros l; only 1: intros H; only 1: rewrite H; only 1: auto with arith).	0.036293	11
coq-corn.8.16.0	CoRN.model.setoids.Nsetoid.plus_strext	600
coq-corn.8.16.0	CoRN.algebra.CSetoidFun.function_projection.proj_bin_fun	600
coq-qcert.2.2.0	Qcert.Utils.OptimizerLogger.OptimizerLogger.run_optimizer_steps_correct	600
coq-corn.8.16.0	CoRN.model.structures.Zsec.ap_Z_symmetric0	600
coq-corn.8.16.0	CoRN.model.structures.Zsec.Zmult_strext0	600	0.0.0.8.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x1; only 1: intros x2; only 1: intros y1; only 1: intros y2; only 1: intros H; only 1: unfold ap_Z; only 1: unfold ap_Z in H; only 1: case (Z.eq_dec x1 x2); only 1: intros e; only 1: right; only 1: red; only 1: intros H0; only 1: contradict H; only 1: subst; only 1: reflexivity; only 1: auto).	0.095746	24
coq-corn.8.16.0	CoRN.model.setoids.Zfinsetoid.ZFap_tight	600
coq-corn.8.16.0	CoRN.model.setoids.decsetoid.contents.fun_strext	600
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.string_app_assoc	600
coq-topology.10.0.1	Topology.SeparatednessAxioms.topological_property_T3_sep	600
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zarith.Zunit_eq_one	600
coq-corn.8.16.0	CoRN.model.structures.Npossec.plus_resp_Npos0	600
coq-haskell.1.0.0	Hask.Data.Maybe.Equivalence_Maybe_obligation_3	600
coq-hott.8.11	HoTT.Spaces.Nat.nat_plus_comm	600
coq-hott.8.11	HoTT.Constant.collapsible_splitsupp	600
coq-hott.8.11	HoTT.Homotopy.Join.Join.equiv_join_hor	600
coq-hott.8.11	HoTT.HIT.Circle.S1_rec_beta_loop	600
coq-corn.8.16.0	CoRN.algebra.CSemiGroups.cs_unique_unit	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.leb_0	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.to_Z_sub_1	600	1.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: pose proof (to_Z_bounded y) as W0; only 1: rewrite sub_spec; only 1: rewrite ltb_spec; only 1: intros hlt; only 1: pose proof (to_Z_bounded y); only 1: rewrite to_Z_1; only 1: rewrite Z.mod_small; only 1: omega; only 1: generalize (to_Z_bounded x); auto with zarith).	0.131109	13
coq-corn.8.16.0	CoRN.model.structures.Nsec.not_or	600
coq-hott.8.11	HoTT.Modalities.Lex.ImpliesLex.lex_from_isconnected_paths	600
coq-hott.8.11	HoTT.Categories.HomotopyPreCategory.homotopy_precategory	600
coq-corn.8.16.0	CoRN.algebra.CSetoids.CSetoid_basics.eq_transitive	600
coq-topology.10.0.1	Topology.WeakTopology.WeakTopology.WeakTopology_and_Nets.net_limit_in_weak_topology_impl_net_limit_in_projections	600
coq-topology.10.0.1	Topology.CountabilityAxioms.second_countable_impl_Lindelof	600
coq-corn.8.16.0	CoRN.model.totalorder.QMinMax.QTotalOrder.Qmult_pos_monotone_r	600
coq-hott.8.11	HoTT.Classes.theory.additional_operations.decide_eqb_ok	600
coq-corn.8.16.0	CoRN.util.Qdlog.Proper_instance_1	600
coq-ceres.0.4.0	Ceres.CeresRoundtrip.Sound_N	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.arithmetics.fact_logp_sum_small	600
coq-hott.8.11	HoTT.Classes.theory.rings.cancellation.left_cancellation_ne_0	600
coq-hott.8.11	HoTT.Spaces.Card.contents.exp_card_sum_mult	600
coq-tlc.20200328	TLC.LibPer.prove_per_single	600	0.0.0.0.1	synth with cache (only 1: intros A; only 1: intros x; only 1: unfold per_single; only 1: intros y; only 1: easy).	0.042435	6
coq-mathcomp-apery.1.0.1	mathcomp.apery.floor.floorQ_epslt1	600
coq-poltac.0.8.11	PolTac.PolAux.plus_ge_reg_l	600
coq-poltac.0.8.11	PolTac.PolAux.eq_lt_trans_r	600	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intros H; only 1: rewrite H; only 1: auto).	0.065182	6
coq-poltac.0.8.11	PolTac.PolAux.Nplus_ge_reg_l	600	0.1.0.0	synth with cache (only 1: intros; only 1: to_nat; only 1: apply plus_le_reg_l with nn1; only 1: auto with arith).	0.046689	5
coq-poltac.0.8.11	PolTac.PolAux.eq_Zlt_trans_r	600	0.0.2.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intros H; only 1: rewrite H; only 1: auto).	0.067772	8
coq-qcert.2.2.0	Qcert.Utils.SortingAdd.SortingAdd.In.in_insertion_sort_insert	600
coq-smtcoq.2.0+8.11	SMTCoq.State.C.or_correct	600
coq-corn.8.16.0	CoRN.model.setoids.Qsetoid.Qlt_strext	600
coq-tlc.20200328	TLC.LibListAssoc.Rem.rem_nil	600	0.1	synth with cache (only 1: intros; only 1: auto).	0.041823	3
coq-corn.8.16.0	CoRN.model.totalorder.QposMinMax.Qpos_power_ispos	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Lang.cNRAEnvEq.cNRAEnvEq.proper_cNRAEnvGetConstant	600	11.0	synth with cache (only 1: unfold nraenv_core_eq; only 1: constructor).	0.062738	13
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.ModelRoundTrip.ejson_brands_map_ejstring	600	0	synth with cache (only 1: apply of_string_list_map_ejstring).	0.020754	1
coq-corn.8.16.0	CoRN.model.totalorder.QposMinMax.QTotalOrder.Qplus_monotone_l	600	0.0.0.0.0.2.0.0	synth with cache (only 1: red; only 1: intros until a; only 1: intros abs; only 1: intros y; only 1: intros Hxy; only 1: apply Qplus_le_compat; only 1: assumption; only 1: apply Qle_refl).	0.086301	10
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvEq.NRAEnvEq.eq_lift.lift_nraenv_core_eq_to_nraenv_eq	600	1.0.0.0.0.0.0.1.0.0.0.0.0.0.21.0	synth with cache (only 1: unfold nraenv_eq; only 1: econstructor; only 1: unfold nraenv_core_eq; only 1: intros; only 1: unfold nraenv_eval in *; only 1: rewrite nraenv_roundtrip; only 1: rewrite nraenv_roundtrip; only 1: specialize (H _ _ dn_c _ dn_env _ dn_x); only 1: assumption; only 1: unfold nraenv_core_eq; only 1: intros; only 1: unfold nraenv_eval in *; only 1: rewrite nraenv_roundtrip in H; only 1: rewrite nraenv_roundtrip in H; only 1: specialize (H _ _ dn_c _ dn_env _ dn_x); only 1: assumption).	0.340046	39
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvEq.NRAEnvEq.eq_lift.lift_nraenv_eq_to_nraenv_core_eq_l	600	1.0.0.0.0	synth with cache (only 1: unfold nraenv_eq; only 1: unfold nraenv_core_eq; only 1: intros; only 1: specialize (H _ _ dn_c _ dn_env _ dn_x); only 1: assumption).	0.074094	6
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvEq.NRAEnvEq.proper_NRAEnvID	600	0	synth with cache (only 1: constructor).	0.015971	1
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvIgnore.NRAEnvIgnore.nraenv_ignores_id_eq	600	0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction e; only 1: split; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto; only 1: split; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: congruence; only 1: split; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe in H; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2 in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2 in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2 in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: congruence; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe2 in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe in H; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: rewrite IHe3 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: elim H0; only 1: clear H0; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: rewrite H1; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: elim H0; only 1: clear H0; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: rewrite <- IHe3 in H1; only 1: auto; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe1 in H; only 1: rewrite IHe2 in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite H; only 1: rewrite H0; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite andb_true_inversion in H; only 1: elim H; only 1: clear H; only 1: intros; only 1: rewrite <- IHe1 in H; only 1: rewrite <- IHe2 in H0; only 1: split; only 1: assumption; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe in H; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe in H; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe in H; only 1: assumption; only 1: split; only 1: simpl; only 1: intros; only 1: rewrite IHe in H; only 1: assumption; only 1: simpl; only 1: intros; only 1: rewrite <- IHe in H; only 1: assumption).	3.702194	306
coq-poltac.0.8.11	PolTac.Rex.pols_test5	600
coq-hott.8.11	HoTT.Spaces.BAut.ap_baut_prod_r	600
coq-hott.8.11	HoTT.Homotopy.EMSpace.LicataFinsterLemma.transport_decode'	600
coq-hott.8.11	HoTT.Homotopy.CayleyDickson.ImaginaroidHSpace.cd_op_left_identity	600
coq-hott.8.11	HoTT.Spaces.BAut.Cantor.BAut_Cantor_Idempotent.Assumptions.ap_ff	600
coq-hott.8.11	HoTT.Algebra.ooGroup.grouphom_pp_p	600
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.dec_Z_of_pair	600
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.Z_negate	600	4.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: auto).	0.234565	8
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.Z_of_N_morphism	600	0.0.0.0.2.0.2.0.0.1.0.1.0.0.0.2.0.2.0.5	synth with cache (only 1: split; only 1: split; only 1: hnf; only 1: intros; only 1: apply Z_path; only 1: red; only 1: simpl; only 1: rewrite plus_0_r; only 1: rewrite plus_0_r; only 1: rewrite plus_0_r; only 1: split; only 1: split; only 1: split; only 1: hnf; only 1: intros; only 1: apply Z_path; only 1: red; only 1: simpl; only 1: ring_with_nat; only 1: split).	0.366087	35
coq-corn.8.16.0	CoRN.model.structures.QnnInf.liftM2.liftM2_Proper	600
coq-corn.8.16.0	CoRN.model.structures.QnonNeg.binop.binop_proper	600
coq-corn.8.16.0	CoRN.metric2.Hausdorff.HausdorffMetric.hausdorffBall_stable	600
coq-qcert.2.2.0	Qcert.Utils.LiftIterators.LiftIterators.lift_map.lift_map_map	600
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.bunion_comm	600
coq-bits.1.1.0	Bits.extraction.axioms16.bitsFromInt16_inj	600
coq-bits.1.1.0	Bits.extraction.axioms8.bitsFromInt8K	600
coq-qcert.2.2.0	Qcert.Utils.Fresh.Fresh.find_fresh_inj_f_fresh	600
coq-bits.1.1.0	Bits.extraction.axioms32.bitsFromInt32_inj	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Lists.ends_with_a_rcons	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.class_instances.atomic.fork_atomic	600
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Form.is_Ftrue_correct	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.class_instances.pure_exec.pure_unop	600	0	synth with cache (only 1: solve_pure_exec).	0.119706	1
coq-topology.10.0.1	Topology.RTopology.Rmetric_bound2	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.bigopz.BigInt.index_iotaz_add	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.multinomial.GNewton.generalizedNewton	600
coq-corn.8.16.0	CoRN.reals.fast.Compress.compress_correct	600
coq-corn.8.16.0	CoRN.tactics.RingReflection.Ring_NormCorrect.MM_plus_corr_R	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection1.Main.irr_reg_off_ker_0	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_analysis.RationalPower.exp_quo_equiv	600
coq-qcert.2.2.0	Qcert.Utils.Lattice.Lattice.boprops.le_top	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.ltk_eqk	600
coq-topology.10.0.1	Topology.InteriorsClosures.interior_closure.interior_maximal	600
coq-poltac.0.8.11	PolTac.ZAux.Zmult_lt_neg_compat_l_rev	600
coq-bbv.1.3	bbv.ZLib.testbit_true_nonneg'	600
coq-corn.8.16.0	CoRN.reals.fast.CRGroupOps.QboundAbove_uc_prf	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.tight_apart_cpoly_ap	600
coq-qcert.2.2.0	Qcert.NRA.Lang.NRAEq.NRAEq.proper_NRAMapProduct	600
coq-poltac.0.8.11	PolTac.RAux.Rmult_ge_neg_compat_l_rev	600
coq-corn.8.16.0	CoRN.stdlib_omissions.Q.Qabs_nonpos	600
coq-corn.8.16.0	CoRN.stdlib_omissions.Q.positive_in_Q	600	3	synth with cache (only 1: easy).	0.013293	4
coq-corn.8.16.0	CoRN.algebra.COrdFields2.Properties_of_leEq.addition.inv_resp_leEq	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection5.IsoDef.injm_narrow	600
coq-corn.8.16.0	CoRN.model.structures.Qpossec.Qpos_as_positive_ratio_obligation_2	600
coq-corn.8.16.0	CoRN.ftc.RefSeparated.Separating__Separated.d	600	12	synth with cache (only 1: assumption).	0.051486	13
coq-mathcomp-apery.1.0.1	mathcomp.apery.ops_for_v.AnnOfV.v_Sk2	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.Reflective_Subuniverse.Functor.to_O_natural_compose	600
coq-hott.8.11	HoTT.Extensions.Extensions.extendable_homotopic	600
coq-hott.8.11	HoTT.Factorization.FactsysExtensions.extension_factsys	600
coq-hott.8.11	HoTT.Colimits.Colimit_Flattening.Flattening.cocone_E'	600
coq-hott.8.11	HoTT.Colimits.Pushout.EquivSigmaPushout.esp1	600
coq-hott.8.11	HoTT.HIT.Coeq.CoeqRec2.Coeq_rec2	600
coq-hott.8.11	HoTT.Modalities.Descent.LeftExactness.isequiv_path_OO	600
coq-tlc.20200328	TLC.LibRelation.Union.functional_union	600
coq-tlc.20200328	TLC.LibRelation.Inverse.inverse_eq	600	3.1	synth with cache (only 1: intros _tmp_tactician0; only 1: auto).	0.013279	6
coq-hott.8.11	HoTT.Categories.Category.Sigma.Univalent.on_both.iso_A'_decode_helper	600
coq-hott.8.11	HoTT.Cubical.PathCube.PathCubesFromPaths.cu_G11	600
coq-hott.8.11	HoTT.Homotopy.Suspension.Susp_eta_homot	600
coq-haskell.1.0.0	Hask.Control.Category.Monic_Retraction_Iso_obligation_2	600
coq-qcert.2.2.0	Qcert.Utils.OptimizerStep.OptimizerStep.optim_lookup_none_nin	600
coq-qcert.2.2.0	Qcert.Utils.StringAdd.Prefix.substring_append_cancel	600
coq-haskell.1.0.0	Hask.Data.List.ListLaws.List_FunctorLaws_obligation_2	600
coq-corn.8.16.0	CoRN.model.Zmod.ZDivides.zdivides.Zdivides_minus_elim	600
coq-gaia-stern.1.15	gaia.stern.fibm.odd_dichot	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Misc.concat_In	600
coq-corn.8.16.0	CoRN.model.setoids.Nsetoid.plus2	600
coq-corn.8.16.0	CoRN.model.setoids.Nsetoid.plus3	600
coq-corn.8.16.0	CoRN.model.structures.Zsec.a_very_specific_lemma3	600
coq-corn.8.16.0	CoRN.algebra.CSetoidFun.p66E2b4.ap_fm_cotransitive	600
coq-corn.8.16.0	CoRN.model.setoids.decsetoid.contents.Crel_strext	600
coq-corn.8.16.0	CoRN.algebra.CSetoidFun.p66E2b4.eq_fm_reflexive	600	0.0.0	synth with cache (only 1: intros x; only 1: red; only 1: easy).	0.038856	3
coq-topology.10.0.1	Topology.SeparatednessAxioms.Hausdorff_and_nets.net_limit_is_unique_cluster_point_impl_Hausdorff	600
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.token_string_atom_snoc	600
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zineq.Zle_antisymm	600
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zineq.Zgt_0_NEG	600	0	synth with cache (only 1: easy).	0.012334	1
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zineq.ZNEG_neq_ZERO	600	0.0	synth with cache (only 1: intros; only 1: easy).	0.022808	2
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zineq.Zdiv_neg_nonpos	600	0.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: induction a as [| p| p]; only 1: induction b as [| p| p]; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: discriminate; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: discriminate; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: discriminate; only 1: induction b as [| p0| p0]; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: discriminate; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: auto; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: easy; only 1: induction b as [| p0| p0]; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: discriminate; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: auto; only 1: unfold Z.lt; only 1: unfold Z.gt; only 1: unfold Z.le; only 1: simpl; only 1: intros H0; only 1: intros H1; only 1: discriminate).	0.558117	78
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zabs.Zabs_geq	600	0.0.1.0.0.1.0.0.0.1.0.9.0	synth with cache (only 1: intros n; only 1: destruct n; only 1: unfold Z.abs; only 1: easy; only 1: simpl; only 1: case p; only 1: intros; only 1: apply Z.le_refl; only 1: intros a; only 1: easy; only 1: intros H0; only 1: inversion H0; only 1: easy).	0.142843	25
coq-haskell.1.0.0	Hask.Data.Maybe.ap_endo_nothing	600
coq-haskell.1.0.0	Hask.Data.Maybe.alt_endo_just	600	0.0.0.0.0.1.0	synth with cache (only 1: induction m; only 1: split; only 1: intros; only 1: intuition auto; discriminate; only 1: intuition; only 1: discriminate; only 1: intuition auto; discriminate).	0.116584	8
coq-hott.8.11	HoTT.Constant.cconst_factors_hprop	600
coq-hott.8.11	HoTT.Homotopy.Join.Join.isconnected_join	600
coq-hott.8.11	HoTT.Spaces.Nat.leq_antisym	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.ltb_leb_sub1	600
coq-corn.8.16.0	CoRN.algebra.CSetoids.CSetoid_relations_and_predicates.csp'_wd	600
coq-ceres.0.4.0	Ceres.CeresRoundtrip._find_or_spec	600
coq-hott.8.11	HoTT.Classes.theory.rings.strong_cancellation.strong_left_cancellation_cancel	600
coq-tlc.20200328	TLC.LibTacticsDemos.demo_false_1	600
coq-tlc.20200328	TLC.LibTacticsDemos.demo_sets_and_set_eq_and_sets_eq	600	1.1.0	synth with cache (only 1: intros q; only 1: intros a; only 1: easy).	0.036994	5
coq-tlc.20200328	TLC.LibTacticsDemos.demo_asserts_and_cuts_rewrite	600	52.19.62.3.1.0	synth with cache (only 1: intros n; only 1: intros b; only 1: intuition auto with arith; only 1: clear H0; only 1: clears_all; only 1: demo).	0.250726	241
coq-tlc.20200328	TLC.LibTacticsDemos.demo_inject_and_injects	600	0.0.3.0.4.0.0	synth with cache (only 1: intros a; only 1: intros q; only 1: intros m; only 1: intros; only 1: injection H; only 1: intros; only 1: Nat.order').	0.073013	14
coq-tlc.20200328	TLC.LibTacticsDemos.demo_fequals_2	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: fequal; only 1: demo; only 1: demo; only 1: demo).	0.055199	5
coq-tlc.20200328	TLC.LibTacticsDemos.demo_specializes_definition_2	600	0.0	synth with cache (only 1: introv H; only 1: specializes H i i eq_refl).	0.046866	2
coq-tlc.20200328	TLC.LibPer.per_add_edge_covariant	600
coq-poltac.0.8.11	PolTac.PolAux.Z2R_le	600
coq-qcert.2.2.0	Qcert.Utils.SortingAdd.SortingAdd.In.insertion_sort_trich_equiv	600
coq-corn.8.16.0	CoRN.algebra.CPoly_ApZero.Poly_Representation.poly_01_factor'_apzero	600
coq-corn.8.16.0	CoRN.fta.CPoly_Rev.Poly_Reverse.Rev_coeff	600
coq-tlc.20200328	TLC.LibFixDemos.parse'_cont	600
coq-tlc.20200328	TLC.LibFixDemos.Parse'_alternative_correct	600	0	synth with cache (only 1: reflexivity).	0.028962	1
coq-qcert.2.2.0	Qcert.DNNRC.Lang.DNNRCBaseEq.DNNRCBaseEq.dunary_op_proper	600
coq-corn.8.16.0	CoRN.algebra.COrdAbs.AbsSmall_properties.AbsSmall_plus	600
coq-corn.8.16.0	CoRN.model.Zmod.IrrCrit.fpx_resp_deggemonic	600
coq-tlc.20200328	TLC.LibListAssoc.Rem.rem_last	600
coq-corn.8.16.0	CoRN.metric2.Classified.genball.genball_Proper	600
coq-corn.8.16.0	CoRN.algebra.Bernstein.Bernstein.Bernstein_inv2	600
coq-corn.8.16.0	CoRN.liouville.CPoly_Euclid.poly_eucl.degree_poly_div	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Lang.cNRAEnvIgnore.cNRAEnvIgnore.nraenv_core_of_nra_is_nra	600
coq-corn.8.16.0	CoRN.model.structures.NNUpperR.QnonNeg_mid	600
coq-corn.8.16.0	CoRN.liouville.QX_ZX.Z_Q.injZ_spec2	600
coq-corn.8.16.0	CoRN.liouville.QX_ZX.Z_Q.Zlcm_den_poly_spec0	600	10.0.0.0.0.0.4.0.0	synth with cache (only 1: intros p; only 1: intros n; only 1: symmetry; only 1: rewrite nth_coeff_c_mult_p; only 1: unfold inject_Z; only 1: simpl; only 1: unfold Qeq; only 1: simpl; only 1: reflexivity).	0.280594	23
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnv.NRAEnv.Semantics.MacroCorrect.nraenv_macro_map_correct	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Lang.cNRAEnvSize.cNRAEnvSize.nraenv_core_size_nzero	600
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedData.enhanced_foreign_data_obligation_4	600	0.4.0.6.110	synth with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.588557	125
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.clairvoyant_coin.proof.new_coin_spec	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Lang.cNRAEnvEq.cNRAEnvEq.nraenv_core_of_nra_proper_inv	600
coq-corn.8.16.0	CoRN.algebra.COrdCauchy.Mult_Continuous.plus_contin	600
coq-corn.8.16.0	CoRN.model.structures.OpenUnit.OpenUnit_Dual_lt_1	600
coq-corn.8.16.0	CoRN.model.totalorder.QposMinMax.Qpos_max_mult_distr_r	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection7.MinSimpleOdd.mFT_sol	600
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSEval.NNRSEval.props.nnrs_stmt_eval_env_domain_stack	600
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvEq.NRAEnvEq.proper_NRAEnvMap	600
coq-qcert.2.2.0	Qcert.cNNRC.Typing.TcNNRCEq.TcNNRCEq.nnrc_base_const_tproper	600	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Proper; only 1: unfold respectful; only 1: unfold tnncr_core_rewrites_to; only 1: intros; only 1: rewrite <- H; only 1: split; only 1: assumption; only 1: intros; only 1: reflexivity).	0.337513	9
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.subG_mcounterΣ	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.wp_array_clone	600
coq-corn.8.16.0	CoRN.ftc.COrdLemmas.Lemmas.om_fun_2a	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.atomic_heap.proof.primitive_alloc_spec	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCShadow.cNNRCShadow.nnrc_core_eval_remove_duplicate_env_weak	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCRewriteUtil.NNRCRewriteUtil.not_in_over_app	600	1	synth with cache (only 1: intuition).	0.119710	2
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.RuntimeLemmas.bdistinct_ejson_to_data_comm	600
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.RuntimeLemmas.ejson_to_data_jobj_nbrand_no_data	600	0.4.1.0.0.0.1.2.0.3.0.0.0.3.0.2.0.1.0.0.1.0.1.8.0.0.0.0.1.0.1.1.0.6.1.0.6.1.6.1.1.3.0.2.0.3.0.7.1.0.1.0.1.1.0.2	synth with cache (only 1: simpl; only 1: destruct e; only 1: congruence; only 1: congruence; only 1: congruence; only 1: simpl; only 1: congruence; only 1: congruence; only 1: destruct l; only 1: simpl; only 1: intros; only 1: match_destr; only 1: congruence; only 1: simpl; only 1: destruct e; only 1: match_destr; only 1: simpl in *; only 1: match_destr; only 1: simpl in *; only 1: intros; only 1: match_destr; only 1: simpl in *; only 1: match_destr; only 1: simpl in *; only 1: destruct (string_dec s0 "$data"); only 1: destruct l; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: destruct (string_dec s "$right"); only 1: congruence; only 1: congruence; only 1: congruence; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: simpl in *; only 1: match_destr; only 1: destruct d; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: simpl in *; only 1: congruence; only 1: congruence).	1.443079	129
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.RuntimeLemmas.ejson_to_data_jobj_nbrand_no_class	600	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: congruence).	0.247716	6
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCRewriteUtil.NNRCRewriteUtil.use_sum_not	600	4.6.5.4.1.36.36.1.35.39.54.2.0.3.0.1.0.0.0.0.3.0.1.0.0.0.0.3.0.9.0.0.0.0.0.3.0.3.0.3.0.0.1.0.1.0.9.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: split; only 1: destruct u1; only 1: destruct u2; only 1: unfold use_sum in H; only 1: reflexivity; only 1: unfold use_sum in H; only 1: reflexivity; only 1: unfold use_sum in H; only 1: reflexivity; only 1: destruct u2; only 1: unfold use_sum in H; only 1: assumption; only 1: unfold use_sum in H; only 1: congruence; only 1: unfold use_sum in H; only 1: congruence; only 1: destruct u2; only 1: unfold use_sum in H; only 1: easy; only 1: unfold use_sum in H; only 1: easy; only 1: unfold use_sum in H; only 1: easy; only 1: destruct u1; only 1: destruct u2; only 1: unfold use_sum in H; only 1: reflexivity; only 1: unfold use_sum in H; only 1: assumption; only 1: unfold use_sum in H; only 1: easy; only 1: destruct u2; only 1: unfold use_sum in H; only 1: reflexivity; only 1: unfold use_sum in H; only 1: congruence; only 1: unfold use_sum in H; only 1: easy; only 1: destruct u2; only 1: unfold use_sum in H; only 1: reflexivity; only 1: unfold use_sum in H; only 1: congruence; only 1: unfold use_sum in H; only 1: easy; only 1: intros _tmp_tactician0; only 1: destruct u1; only 1: SCase "v0 = v"%string; only 1: Case "NNRCGetConstant"%string; only 1: destruct u2; only 1: reflexivity; only 1: intuition; only 1: intuition; only 1: destruct _tmp_tactician0 as (EQ, EQ'); only 1: rewrite EQ; only 1: rewrite EQ'; only 1: eauto; only 1: tauto).	1.266327	324
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.spin_lock.proof.release_spec	600
coq-qcert.2.2.0	Qcert.NRA.Optim.TNRARewrite.TNRARewrite.typed_nra_total_bool	600	7.20.0	synth with cache (only 1: intros; only 1: dependent induction H0; only 1: constructor).	0.126199	30
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection8.Eight.Fitting_Uniqueness	600
coq-qcert.2.2.0	Qcert.Compiler.Trivial.TrivialModel.trivial_foreign_operators_obligation_2	600	0.0.0	synth with cache (only 1: constructor; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []).	0.056607	3
coq-qcert.2.2.0	Qcert.Compiler.Trivial.TrivialModel.trivial_foreign_operators_typing_obligation_10	600	1.0.4.0.0.1.5.0.1.1.1.1.1.5.2.1.1.1.1.0.7.4.0.1.1.1.1.1.1.1.0.13.5.0.30	synth with cache (only 1: inversion H; only 1: destruct x; only 1: simpl in *; only 1: inversion H; only 1: destruct x; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: constructor; only 1: tauto; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: left; only 1: let rec destructer := repeat progress (try match goal with | H:context [ match ?p with | exist _ _ _ => _ end ] |- _ => destruct p | H:context [ match ?p with | _ => _ end ] |- _ => case_eq p; intros; repeat match goal with | H1:?a = ?a |- _ => clear H1 | H1:?a = ?b |- _ => rewrite H1 in * end | H:Some _ = Some _ |- _ => inversion H; clear H | H:exists y, _ y |- _ => destruct H | H:_ /\ _ |- _ => destruct H | H:lift _ _ = Some _ |- _ => apply some_lift in H; destruct H | H:lift _ _ = None |- _ => apply none_lift in H | H:context [ RecMaybe _ (rec_concat_sort _ _) ] |- _ => rewrite RecMaybe_rec_concat_sort in H | H:RecMaybe _ _ = Some _ |- _ => apply RecMaybe_some_pf in H; destruct H | H1:is_list_sorted StringOrder.lt_dec (domain ?l) = true, H2:context [ RecMaybe ?k ?l ] |- _ => rewrite (RecMaybe_pf_some _ _ H1) in H2 | H:tuncoll _ = _ |- _ => apply tuncoll_correct in H | H:tsingleton _ = _ |- _ => apply tsingleton_correct in H | H:tunrec _ = _ |- _ => apply tunrec_correct in H; destruct H | H:proj1_sig _ = ⊥₀ |- _ => apply Bottom_canon in H | H:proj1_sig _ = Brand₀ ?b |- _ => apply TUtil.Brand_canon in H | H:proj1_sig _ = ⊤₀ |- _ => apply Top_canon in H | H:proj1_sig _ = Unit₀ |- _ => apply Unit_canon in H | H:proj1_sig _ = Nat₀ |- _ => apply TUtil.Nat_canon in H | H:proj1_sig _ = Float₀ |- _ => apply TUtil.Float_canon in H | H:proj1_sig _ = Bool₀ |- _ => apply Bool_canon in H | H:proj1_sig _ = String₀ |- _ => apply TUtil.String_canon in H | H:proj1_sig _ = Coll₀ ?A |- _ => match A with | String₀ => apply Coll_String_inside in H | proj1_sig _ => apply TUtil.Coll_canon in H | _ => destruct (Coll_inside _ _ H); subst; apply TUtil.Coll_canon in H end | H:?a = ?a |- _ => clear H | H:?a = ?b |- _ => rewrite H in * | H:binary_op_type _ _ _ _ |- _ => inversion H; clear H end; try autorewrite with type_canon in *; try unfold equiv, complement, rtype in *; simpl in *; try rtype_equalizer; try subst; try discriminate; try reflexivity) in destructer; only 1: eauto  3 with qcert; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: constructor; only 1: auto; only 1: exact None; only 1: exact None; only 1: simpl in *; only 1: intuition; only 1: exact None).	0.664175	128
coq-qcert.2.2.0	Qcert.Compiler.Trivial.TrivialModel.trivial_foreign_operators_typing_obligation_13	600	0	synth with cache (only 1: destruct fb).	0.043967	1
coq-qcert.2.2.0	Qcert.Compiler.Trivial.TrivialModel.trivial_foreign_type_to_JSON_obligation_2	600	26	synth with cache (only 1: tauto).	0.038703	27
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.increment.increment.incr_spec_direct	600
coq-qcert.2.2.0	Qcert.Translation.Lang.cNRAEnvtocNNRC.cNRAEnvtocNNRC.map_sem_correct	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Typing.TcNRAEnv.TcNRAEnv.oproduct_typed_env	600	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Forall_forall in *; only 1: induction dl; only 1: simpl in *; only 1: exists []; only 1: split; only 1: reflexivity; only 1: apply dtcoll; only 1: apply Forall_nil; only 1: simpl in *; only 1: assert (exists r, a = drec r /\ drec r ▹ Rec Closed τ₁ pf1); only 1: clear IHdl H; only 1: assert (a ▹ Rec Closed τ₁ pf1); only 1: specialize (H0 a); only 1: apply H0; only 1: left; only 1: reflexivity; only 1: destruct (data_type_Rec_inv H); only 1: subst; only 1: apply dtrec_closed_inv in H; only 1: eexists; only 1: split; only 1: reflexivity; only 1: apply dtrec_full; only 1: trivial; only 1: destruct H2 as [? _tmp_tactician0]; only 1: destruct _tmp_tactician0 as [? ?]; only 1: subst; only 1: assert (forall x : data, In x dl -> x ▹ Rec Closed τ₁ pf1); only 1: apply forall_in_weaken with (P := fun x0 => drec x = x0); only 1: assumption; only 1: specialize (IHdl H1); only 1: destruct IHdl as [? _tmp_tactician0]; only 1: destruct _tmp_tactician0 as [? ?]; only 1: unfold oproduct; only 1: simpl; only 1: assert (exists y, omap_concat (drec x) dl0 = Some y /\ dcoll y ▹ Coll (Rec Closed (rec_concat_sort τ₁ τ₂) pf3)); only 1: eapply omap_concat_typed; only 1: eauto; only 1: eauto; only 1: eauto; only 1: destruct H5 as [? _tmp_tactician0]; only 1: destruct _tmp_tactician0 as [? ?]; only 1: generalize (oproduct_cons _ _ _ _ _ H2 H5); only 1: unfold oproduct; only 1: simpl; only 1: rewrite H5; only 1: intros eqq; only 1: exists (x1 ++ x0); only 1: split; only 1: trivial; only 1: inversion H6; only 1: subst; only 1: inversion H4; only 1: subst; only 1: generalize (TNRA.recover_rec_forall Closed x1 r (rec_concat_sort τ₁ τ₂) pf3 H9 H8); only 1: intros; only 1: generalize (TNRA.recover_rec_forall Closed x0 r0 (rec_concat_sort τ₁ τ₂) pf3 H11 H10); only 1: intros; only 1: constructor; only 1: apply Forall_app; only 1: trivial; only 1: trivial).	2.528335	64
coq-hott.8.11	HoTT.Homotopy.EMSpace.LicataFinsterLemma.encode_North_decode'	600
coq-hott.8.11	HoTT.Algebra.ooGroup.Subgroups.equiv_coset_subgroup	600
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.Z_strict_srorder	600
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.Zapart_hProp	600	0.0.0.0.0.0.0	synth with cache (only 1: apply (Z_rec2 (fun q r => BuildhProp (Tle q r))); only 1: intros; only 1: apply path_hprop; only 1: simpl; only 1: apply (le_respects _); only 1: trivial; only 1: trivial).	0.142767	7
coq-corn.8.16.0	CoRN.metric2.Hausdorff.HausdorffMetric.hemiMetric_wd	600
coq-qcert.2.2.0	Qcert.Utils.LiftIterators.LiftIterators.lift_map.lift_map_over_app	600
coq-bits.1.1.0	Bits.extraction.axioms16.lsr_repr	600
coq-bits.1.1.0	Bits.extraction.axioms8.eq_adj	600
coq-qcert.2.2.0	Qcert.Utils.Fresh.Fresh.find_fresh_inj_f_equivlist	600
coq-bits.1.1.0	Bits.extraction.axioms32.one_repr	600
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.MBag.groupby_noDup	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.list_of_numK	600
coq-corn.8.16.0	CoRN.ftc.TaylorLemma.Taylor_Defs.TL_b_i'	600	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: split; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: split; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.754792	11
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Form.Interp.check_form_correct	600
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Typ.Interp.Interp_Equality.eqb_compdec_spec_false	600	0.0.8.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: destruct c as [TY _tmp_tactician0 O C I]; only 1: destruct _tmp_tactician0 as [E HE]; only 1: unfold eqb_of_compdec; only 1: simpl; only 1: rewrite <- not_true_iff_false; only 1: rewrite HE; only 1: easy).	0.123524	17
coq-iris-heap-lang.3.4.0	iris.heap_lang.class_instances.pure_exec.pure_fst	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.class_instances.pure_exec.pure_case_inl	600	0	synth with cache (only 1: solve_pure_exec).	0.104065	1
coq-topology.10.0.1	Topology.RTopology.Ropp_continuous	600
coq-corn.8.16.0	CoRN.reals.fast.CRAlternatingSum.RationalStreamSum.Str_alt_decr_tl	600
coq-corn.8.16.0	CoRN.reals.RealCount.IntervalSequence.grow_rht	600
coq-corn.8.16.0	CoRN.reals.CPoly_Contin.plus_op_contin	600
coq-corn.8.16.0	CoRN.reals.Bridges_LUB.LUBP.upper_bound_sequence.U_m_n_W	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.bigopz.BigInt.big_nat_widen_lr	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TUnaryOperators.TUnaryOperators.canon_brands_alt_is_canon	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection1.Main.inertia_Ind_irr	600
coq-corn.8.16.0	CoRN.metrics.ContFunctions.Composition.comp_resp_continuous	600
coq-corn.8.16.0	CoRN.model.rings.CRring.CRisCRing	600
coq-corn.8.16.0	CoRN.ftc.PartInterval.Equivalences.part_int_const	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.find_1	600
coq-bbv.1.3	bbv.ZLib.two_digits_encoding_inj_hi	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.Ccpoly_ind_cs	600
coq-poltac.0.8.11	PolTac.RAux.Rmult_gt_compat_l_rev	600
coq-corn.8.16.0	CoRN.algebra.COrdFields2.Properties_of_leEq.addition.shift_leEq_rht	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection5.Five.OneGroup.Rank3.ntZ	600
coq-corn.8.16.0	CoRN.fta.MainLemma.Main_Lemma.Main_1	600
coq-corn.8.16.0	CoRN.reals.faster.ARbigQ.bigQ_div_correct	600
coq-corn.8.16.0	CoRN.ftc.FunctSequence.More_Algebraic_Properties.fun_Lim_seq_minus	600
coq-corn.8.16.0	CoRN.model.structures.Qpossec.Qpos_inv_wd_Proper	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.InducedIrrs.KerIirr.Iirr_ker_conjg	600
coq-corn.8.16.0	CoRN.ftc.FunctSeries.More_Operations.Fun_Series_Sum_inv	600
coq-corn.8.16.0	CoRN.ftc.RefSeparated.Separating__Separated.sep__sep_mon	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.Reflective_Subuniverse.Types.inO_contr	600
coq-hott.8.11	HoTT.Colimits.Pushout.PushoutAssoc.Pushout_Assoc_Left_Rec.pushout_assoc_left_rec_beta_pgluell	600
coq-hott.8.11	HoTT.Modalities.Descent.LeftExactness.OO_isequiv_mapino_isconnected	600
coq-tlc.20200328	TLC.LibRelation.Rclosure.antisym_rclosure	600
coq-hott.8.11	HoTT.Cubical.PathCube.cu_fill_right	600
coq-hott.8.11	HoTT.Homotopy.Suspension.UnivProp.is01cat_Susp_ind_type	600
coq-hott.8.11	HoTT.Categories.Category.Sigma.Univalent.on_both.iscategory_sigT	600
coq-qcert.2.2.0	Qcert.Utils.StringAdd.Prefix.prefix_app	600
coq-haskell.1.0.0	Hask.Data.List.ListLaws.List_ApplicativeLaws_obligation_2	600
coq-corn.8.16.0	CoRN.model.Zmod.ZDivides.zdivides.Zdivides_abs_intro	600
coq-gaia-stern.1.15	gaia.stern.fibm.sqrnD_sub'	600
coq-corn.8.16.0	CoRN.algebra.CSetoidFun.CSetoid_Ops.total_eq_part	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.List2.Forall2.Forall2_In_l	600
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zabs.Zabs_le_pos	600
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.next_sound	600
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zsign.Zsgn_mult_compat	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.1.1.0	synth with cache (only 1: intros; only 1: case a; only 1: case b; only 1: auto with zarith; only 1: intros; only 1: auto with zarith; only 1: intros; only 1: auto with zarith; only 1: case b; only 1: intros; only 1: auto with zarith; only 1: intros; only 1: auto with zarith; only 1: intros; only 1: auto with zarith; only 1: case b; only 1: intros; only 1: auto with zarith; only 1: intros; only 1: auto with zarith; only 1: intros; only 1: auto with zarith).	0.330527	27
coq-corn.8.16.0	CoRN.ftc.DerivativeOps.Derivative_Sums.Derivative_I_Sumx	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.int_ind	600
coq-corn.8.16.0	CoRN.algebra.CSetoids.CSetoid_relations_and_predicates.CCsetoidRelations.Crel_strext_imp_rhtarg	600
coq-ceres.0.4.0	Ceres.CeresRoundtrip.DeRetField.sound_ret_field	600
coq-hott.8.11	HoTT.Classes.theory.rings.ring_props.plus_negate_l	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Stratified.stratifiedLevel_spec_stratified	600
coq-corn.8.16.0	CoRN.algebra.CPoly_ApZero.Poly_Representation.poly_01_factor_degree	600
coq-corn.8.16.0	CoRN.fta.CPoly_Rev.Poly_Reverse.Rev_zero	600
coq-qcert.2.2.0	Qcert.DNNRC.Lang.DNNRCBaseEq.DNNRCBaseEq.dif_proper	600
coq-corn.8.16.0	CoRN.algebra.COrdAbs.AbsSmall_properties.AbsSmall_x_minus_eps_div2	600
coq-corn.8.16.0	CoRN.model.structures.NNUpperR.Qmult_le_compat	600
coq-corn.8.16.0	CoRN.ftc.NthDerivative.Trivia.Derivative_I_n_wdl	600
coq-corn.8.16.0	CoRN.fta.FTA.Fund_Thm_Alg.FTA_a_la_Henk	600
coq-corn.8.16.0	CoRN.fta.FTAreg.Seq_is_CC_CAuchy.zlt_nrtc	600
coq-corn.8.16.0	CoRN.algebra.Bernstein.Bernstein.RaiseDegreeB	600
coq-corn.8.16.0	CoRN.algebra.COrdCauchy.Monotonous_functions.resp_less_char'	600
coq-qcert.2.2.0	Qcert.CAMP.Typing.TCAMP.TCAMP.rec_concat_sort_bindings_type	600
coq-corn.8.16.0	CoRN.metric2.Classified.pairops_uc.UniformlyContinuous_instance_4	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection7.MinSimpleOdd.mmax_ofS	600
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvEq.NRAEnvEq.proper_NRAEnvApp	600
coq-qcert.2.2.0	Qcert.CAMPRule.Typing.TCAMPRule.TCAMPRule.typed_rule_correct	600
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSEval.NNRSEval.eval_eqs.nnrs_expr_eval_unused_env	600
coq-corn.8.16.0	CoRN.ftc.RefLemma.Refinement_Lemma.First_Refinement_Lemma.H	600
coq-corn.8.16.0	CoRN.ode.SimpleIntegration.implements_abstract_interface.bounded	600
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRCMR.NNRCtoNNRCMR.bminus_In_alt_neq	600
coq-corn.8.16.0	CoRN.ftc.Differentiability.Operations.Diffble_I_mult	600
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRCMR.NNRCtoNNRCMR.nnrc_to_nnrcmr_chain_ns_aux_func_obligation_1	600	46.14.9.3.0	synth with cache (only 1: simpl; only 1: simpl in *; only 1: SSSCase "MapScalar"%string; only 1: Case "NNRCBinop"%string; only 1: lia).	0.283956	77
coq-corn.8.16.0	CoRN.ode.BanachFixpoint.BanachFixpoint.PropHolds_instance_3	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.mono_proof.incr_mono_spec	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.array_init.wp_array_init_loop	600
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedEJsonToWSON.enhanced_foreign_to_wson_obligation_1	600
coq-qcert.2.2.0	Qcert.NNRCMR.Optim.NNRCMRRewrite.NNRCMRRewrite.flatten_dist_map_correct	600
coq-corn.8.16.0	CoRN.ftc.COrdLemmas.Lemmas.str_Sumx_Sum_Sum	600
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.RuntimeLemmas.merge_bindings_key_encode_comm	600
coq-corn.8.16.0	CoRN.ftc.MoreIntervals.Intervals.interval_convex	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCShadow.cNNRCShadow.nnrc_no_free_vars_eval_equiv_env	600
coq-qcert.2.2.0	Qcert.NRA.Optim.TNRARewrite.TNRARewrite.remove_still_well_typed	600
coq-corn.8.16.0	CoRN.metrics.LipExt.LipschitzExtension.BuildExtension.f_multi_ext_uni_continuous	600
coq-corn.8.16.0	CoRN.ftc.RefSeparating.Separating_Partition.sep__part_h_mon_3	600
coq-corn.8.16.0	CoRN.fta.KneserLemma.Kneser_Lemma.z_exists	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection12.Section12.nonabelian_tau2	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCRewrite.NNRCRewrite.for_singleton_to_let	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCRewrite.NNRCRewrite.nnrc_core_eval_lookup_equiv_on	600	7.0.0.1.5.0	synth with cache (only 1: intros c; only 1: SSCase "v0 = v"%string; only 1: apply nnrc_core_eval_equiv_free_in_env; only 1: intros x; only 1: intros Hx; only 1: intuition).	0.212279	19
coq-corn.8.16.0	CoRN.ode.FromMetric2.QField.CompleteSegment.Limit_instance_0_obligation_1	600
coq-qcert.2.2.0	Qcert.tDNNRC.Typing.tDNNRCSub.tDNNRCSub.typ.dbindings_type_proper	600
coq-corn.8.16.0	CoRN.ftc.Integral.Basic_Properties.Well_Definedness.integral_wd	600
coq-corn.8.16.0	CoRN.reals.fast.CRIR.IRasCRasIR_id	600
coq-corn.8.16.0	CoRN.reals.faster.ARAlternatingSum.RationalStreamSum.app_inverse_below_correct	600
coq-qcert.2.2.0	Qcert.NNRSimp.Typing.TNNRSimp.TNNRSimp.nnrs_imp_stmt_eval_preserves_types	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TOperatorsInfer.TOperatorsInfer.b.infer_binary_op_type_correct	600
coq-corn.8.16.0	CoRN.ftc.MoreFunctions.Sums.Continuous_Sum0	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.increment.increment.incr_spec	600
coq-corn.8.16.0	CoRN.ftc.MoreFunctions.More_Results.Derivative_minus	600	1.0.0.0.0.1.1.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: elim derF; only 1: intros incF; only 1: intros H; only 1: elim H; only 1: intros incF'; only 1: intros derivF; only 1: split; only 1: Deriv; only 1: split; only 1: Deriv; only 1: elim derG; only 1: elim derG; only 1: intros incG; only 1: intros H'; only 1: intros incG'; only 1: elim H'; only 1: Deriv).	0.725207	21
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.A'.W_k.w_seq_le_S	600
coq-corn.8.16.0	CoRN.reals.fast.ContinuousCorrect.Q_dense_in_compact	600
coq-corn.8.16.0	CoRN.ftc.MoreFunctions.Diffble_Basic_Properties.Diffble_minus	600	0.0.8.0.0.4.0.0.0.1.0.0.1.0.0.0.0	synth with cache (only 1: elim diffF; only 1: intros incF; only 1: intros diffbleF; only 1: split; only 1: elim diffG; only 1: intros incG; only 1: intros diffbleG; only 1: split; only 1: Included; only 1: Included; only 1: intros; only 1: elim diffG; only 1: intros incG; only 1: intros diffbleG; only 1: apply Diffble_I_minus; only 1: auto; only 1: auto).	0.858708	31
coq-corn.8.16.0	CoRN.ftc.MoreFunSeries.More_Definitions.Cauchy_fun_seq_Lim_IR	600
coq-corn.8.16.0	CoRN.ftc.Rolle.Rolle.Rolle_lemma1	600
coq-corn.8.16.0	CoRN.reals.fast.CRpi_slow.Pi.small_per_23	600	1.9	synth with cache (only 1: vm_compute; only 1: auto with relations).	0.038158	12
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection13.Section13.OneComplement.cent_norm_tau13_mmax	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Typing.TcNRAEnv.TcNRAEnv.omap_product_typed2_env	600
coq-corn.8.16.0	CoRN.reals.fast.CRarctan_small.Qmult_opp_1	600	1.7	synth with cache (only 1: intros Hn; only 1: easy).	0.201635	125
coq-hott.8.11	HoTT.Homotopy.EMSpace.LicataFinsterLemma.merid_mu	600
coq-corn.8.16.0	CoRN.metric2.Hausdorff.HausdorffMetricStrong.hemiMetricStrong_wd1	600
coq-qcert.2.2.0	Qcert.Utils.LiftIterators.LiftIterators.lift_map.lift_map_ext	600
coq-bits.1.1.0	Bits.extraction.axioms16.add_repr	600
coq-bits.1.1.0	Bits.extraction.axioms8.neg_repr	600
coq-hott.8.11	HoTT.Classes.implementations.natpair_integers.NatPair.contents.Z_integers	600
coq-bits.1.1.0	Bits.extraction.axioms32.implies_lsr	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.pos_of_listK	600
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.bdistinct_mult	600
coq-qcert.2.2.0	Qcert.Utils.Bag.Bag.mult_pos_equiv_in	600	1.10.1.5.8.1.1.0.0.0	synth with cache (only 1: intros; only 1: induction l as [| y l]; only 1: simpl; only 1: intuition; only 1: destruct IHl; only 1: simpl; only 1: match_destr; only 1: rewrite e in *; only 1: intuition; only 1: intuition).	0.408285	37
coq-corn.8.16.0	CoRN.ftc.TaylorLemma.Taylor_Defs.TL_lemma_a	600
coq-corn.8.16.0	CoRN.ftc.TaylorLemma.Taylor_Defs.TL_lemma_b	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply FSumx_pred'; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split; only 1: split).	1.617315	18
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Typ.Interp.Interp_Equality.i_eqb_refl	600
coq-topology.10.0.1	Topology.RTopology.RTop_separable	600
coq-corn.8.16.0	CoRN.reals.CPoly_Contin.mult_op_contin	600
coq-corn.8.16.0	CoRN.reals.Bridges_LUB.LUBP.upper_bound_sequence.a_familiar_simple_inequality	600
coq-qcert.2.2.0	Qcert.Translation.Typing.TOQLtoNRAEnv.TOQLtoNRAEnv.oql_to_nraenv_type_preserve_f	600
coq-corn.8.16.0	CoRN.ftc.Composition.Maps_into_Compacts.Part_Funct.maps_lemma	600	12.1.0	synth with cache (only 1: inversion_clear maps; only 1: intros; only 1: Included).	0.122228	16
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection1.Main.cfclass_Ind_irrP	600
coq-corn.8.16.0	CoRN.ftc.StrongIVT.IVT'.b'_seq_Cauchy	600
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSRename.NNRSRename.rename_vars.nnrs_stmt_bound_mdenv_vars_rename_env	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: congruence; only 1: simpl; only 1: match_destr; only 1: simpl; only 1: match_destr; only 1: congruence; only 1: congruence; only 1: simpl; only 1: match_destr; only 1: congruence; only 1: congruence; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: match_destr; only 1: simpl; only 1: congruence; only 1: simpl; only 1: match_destr; only 1: match_destr; only 1: congruence; only 1: match_destr; only 1: congruence; only 1: congruence).	0.401826	28
coq-corn.8.16.0	CoRN.reals.faster.ARcos.ARcos.ARtoCR_preserves_cos	600	1	synth with cache (only 1: apply preserves_unary_complete_fun).	0.145732	2
coq-corn.8.16.0	CoRN.transc.PowerSeries.Exp	600
coq-corn.8.16.0	CoRN.ftc.MoreIntegrals.Lemmas.compact_inc_Min_rht	600	5.4.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply included_compact; only 1: split; only 1: apply leEq_reflexive; only 1: apply Min_leEq_Max; only 1: split; only 1: apply Min_leEq_rht; only 1: apply rht_leEq_Max).	0.129509	17
coq-corn.8.16.0	CoRN.transc.TaylorSeries.Convergence_in_IR.H1	600
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedTyping.uri_unary_op_typing_sound	600	0.1.2.2.6.0.0.1.0.0.0.0	synth with cache (only 1: inversion 1; only 1: subst; only 1: solve [ inversion 1; subst; try invcs ltac:(H0); try invcs ltac:(H3); simpl; unfold denhancedsqldate, denhancedsqldateperiod; simpl; eexists; split; try reflexivity; repeat constructor; repeat constructor ]; only 1: subst; only 1: inversion 1; only 1: subst; only 1: invcs ltac:(H0); only 1: simpl; only 1: eexists; only 1: eexists; only 1: reflexivity; only 1: constructor).	0.719238	24
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.add_2	600
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSRename.NNRSRename.rename_vars.nnrs_stmt_bound_mdenv_vars_rename_mdenv	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction s; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intuition; only 1: simpl; only 1: match_destr; only 1: congruence; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.300241	21
coq-qcert.2.2.0	Qcert.NNRC.Typing.TNNRCEq.TNNRCEq.data_normalized_bindings_type_map	600	0.0	synth with cache (only 1: rewrite Forall_map; only 1: apply bindings_type_Forall_normalized).	0.053057	2
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoDNNRC.NNRCtoDNNRC.Top.nnrc_to_dnnrc_top_correct	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_lin_ap_zero_	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection14.Section14.ell_sigma0P	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.z3irrational.delta_asympt	600
coq-corn.8.16.0	CoRN.algebra.COrdFields2.Properties_of_leEq.misc.sqr_nonneg	600
coq-corn.8.16.0	CoRN.ftc.FunctSequence.More_Algebraic_Properties.fun_Lim_seq_mult	600
coq-corn.8.16.0	CoRN.transc.SinCos.Basic_Properties.Sin_less_One	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCOptimizer.NNRCOptimizer.engine.rewriter_simpl_rew_no_free_var	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection5.Five.narrow_der1_complement_max_pdiv	600
coq-corn.8.16.0	CoRN.transc.Exponential.Derivative_Exp	600
coq-corn.8.16.0	CoRN.model.structures.Qpossec.QabsQpos_Qpos	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.InducedIrrs.KerIirr.Iirr_kerDS	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.Reflective_Subuniverse.Types.inO_forall	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.app_over_id_l	600	0.0.0.1.0.0	synth with cache (only 1: unfold nraenv_core_eq; only 1: intros; only 1: simpl; only 1: destruct (h ⊢ₑ p @ₑ x ⊣ c; env); only 1: reflexivity; only 1: reflexivity).	0.172775	7
coq-hott.8.11	HoTT.Colimits.Pushout.PushoutAssoc.pushout_assoc_right_ind	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.app_over_appenv_over_mapenv	600	1.1.0.0.4.1.0.0	synth with cache (only 1: unfold nraenv_core_eq; only 1: intros; only 1: simpl; only 1: generalize (h ⊢ₑ p2 @ₑ x ⊣ c; env); only 1: intros; only 1: destruct o; only 1: reflexivity; only 1: reflexivity).	0.228484	15
coq-tlc.20200328	TLC.LibRelation.Rclosure.trans_rclosure	600
coq-hott.8.11	HoTT.Cubical.PathCube.sq_ap_compose	600
coq-hott.8.11	HoTT.Cubical.PathCube.sq_ap_idmap	600	0	synth with cache (only 1: by destruct s).	0.020137	1
coq-hott.8.11	HoTT.Homotopy.Suspension.UnivPropNat.is0functor_functor_Susp_ind_data'	600
coq-qcert.2.2.0	Qcert.Utils.StringAdd.Prefix.substring_split	600
coq-corn.8.16.0	CoRN.transc.ArTanH.ArTanH_zero	600
coq-corn.8.16.0	CoRN.model.Zmod.ZDivides.zdivides.Zmodeq_small	600
coq-gaia-stern.1.15	gaia.stern.fibm.sum_rev	600
coq-corn.8.16.0	CoRN.algebra.CSetoidFun.bijections.injective_imp_injective_weak	600
coq-haskell.1.0.0	Hask.Data.List.Permutation_sortBy	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.List2.Forall2.Forall2_app_inv	600
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof._done_or_fail_sound	600
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zsign.Zsgn_plus_l	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tmerge_empty_record_l_fun_correctness	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.get_amapi	600
coq-corn.8.16.0	CoRN.algebra.CSetoids.CSetoid_relations_and_predicates.Ccsr_wdl	600
coq-ceres.0.4.0	Ceres.CeresRoundtrip.SoundClass_sum	600
coq-hott.8.11	HoTT.Classes.theory.rings.ring_props.negate_mult	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Effective.stratify_stratified	600
coq-corn.8.16.0	CoRN.algebra.CPoly_ApZero.Poly_Representation.poly_01_degree	600
coq-corn.8.16.0	CoRN.transc.TrigMon.Cos_resp_less_aux'	600
coq-corn.8.16.0	CoRN.model.structures.NNUpperR.binop.binop_obligation_2	600
coq-corn.8.16.0	CoRN.ftc.NthDerivative.Basic_Results.Derivative_I_n_imp_inc'	600
coq-corn.8.16.0	CoRN.fta.FTAreg.Seq_is_CC_CAuchy.nrt_pow	600
coq-corn.8.16.0	CoRN.algebra.Bernstein.Bernstein.evalBernsteinBasisConst	600
coq-corn.8.16.0	CoRN.algebra.COrdCauchy.Monotonous_functions.local_mon'_imp_mon'2_lt	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection7.MinSimpleOdd.uniq_mmax_neq1	600
coq-qcert.2.2.0	Qcert.NRAEnv.Lang.NRAEnvEq.NRAEnvEq.proper_NRAEnvFlatMap	600
coq-corn.8.16.0	CoRN.ftc.RefLemma.Refinement_Lemma.Third_Refinement_Lemma.RL_alpha	600
coq-corn.8.16.0	CoRN.transc.InvTrigonom.Derivative_ArcTan	600
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedDataTyping.enhanced_foreign_data_typing_obligation_5	600	2.0.6.2.0.4.8.9.11.0.7	synth with cache (only 1: inversion H; only 1: inversion H; only 1: inversion H1; only 1: destruct d; only 1: inversion H; only 1: subst; only 1: constructor; only 1: simpl in *; only 1: inversion H; only 1: subst; only 1: constructor).	0.241198	60
coq-corn.8.16.0	CoRN.reals.fast.CRexp.rational_exp_small_neg_correct	600
coq-corn.8.16.0	CoRN.reals.fast.CRexp.CRe_inv_obligation_1	600	0.7.7.0	synth with cache (only 1: split; only 1: intros Ha; only 1: discriminate; only 1: discriminate).	0.169816	18
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.array_init.twp_array_init_loop	600
coq-corn.8.16.0	CoRN.ode.BanachFixpoint.BanachFixpoint.Qpower_mc_power	600
coq-qcert.2.2.0	Qcert.Translation.Model.DataToEJson.DataToEJson.RuntimeLemmas.ejson_key_is_eq_r_correct	600
coq-corn.8.16.0	CoRN.complex.Complex_Exponential.ExpCC_equation_aid_2	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCShadow.cNNRCShadow.nnrc_core_eval_cons_subst_disjoint	600
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedTypeToJSON.enhanced_foreign_type_to_JSON_obligation_1	600	52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.14.13.16.39.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.14.13.16.39.11.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.14.13.16.39.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.52.53.52.53.8.40.9.11.38.52.53.52.53.8.40.9.11.38.7.49.3.55.28.14.13.16.39.11.14.41.9.11.41.1.8.0.29.1	synth with cache (only 1: Case "OpNatSum"%string; only 1: SCase "v0 <> v"%string; only 1: SSSCase "RedOp"%string; only 1: SSCase "coll = nil"%string; only 1: SSSSCase "RedId"%string; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: destruct b0; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct b1; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct b1; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b0; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct b1; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct b1; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b2; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct a; only 1: SSSCase "RedOp"%string; only 1: destruct b1; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct b3; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: destruct s; only 1: econstructor; only 1: econstructor; only 1: destruct a; only 1: destruct b3; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	35.935605	23581
coq-corn.8.16.0	CoRN.ftc.MoreIntervals.Compact_Constructions.Proper_Compact_with_One_or_Two_Points.iprop_compact_in_interval'	600
coq-corn.8.16.0	CoRN.ftc.RefSeparating.Separating_Partition.sep__part_h_lemma	600
coq-corn.8.16.0	CoRN.fta.KneserLemma.Kneser_Lemma.Kneser_2c	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCRewrite.NNRCRewrite.nnrcproject_over_nnrcproject	600
coq-corn.8.16.0	CoRN.ftc.Integral.Basic_Properties.Linearity_and_Monotonicity.integral_empty	600
coq-corn.8.16.0	CoRN.reals.fast.CRIR.IR_minus_as_CR	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection12.Section12.primes_norm_tau2Elem	600
coq-qcert.2.2.0	Qcert.Translation.Typing.TcNNRCtoCAMP.TcNNRCtoCAMP.nnrc_to_camp_ns_type_preserve	600
coq-corn.8.16.0	CoRN.reals.faster.ARAlternatingSum.RationalStreamSum.fSsum_fst	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.KappaClassification.trivgPmax	600
coq-qcert.2.2.0	Qcert.NNRSimp.Typing.TNNRSimp.TNNRSimp.nnrs_imp_stmt_type_lookup_equiv_prop	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.A'.W_k.w_seq_bound_tail	600
coq-corn.8.16.0	CoRN.reals.fast.CRroot.SquareRoot.root_loop_one_le	600
coq-corn.8.16.0	CoRN.ftc.MoreFunctions.Nth_Derivative.Basic_Results.Derivative_n_unique	600
coq-corn.8.16.0	CoRN.metrics.CPMSTheory.lists.list_IR	600	1.0	synth with cache (only 1: intros ?; only 1: apply nil).	0.072771	3
coq-corn.8.16.0	CoRN.transc.Pi.Pi_and_Order.QuarterPi_less_HalfPi	600
coq-corn.8.16.0	CoRN.transc.Pi.Pi_and_Order.neg_invHalfPi	600	0.0.0.0	synth with cache (only 1: astepr [--] ZeroR; only 1: apply inv_resp_less; only 1: apply pos_div_two; only 1: apply pos_Pi).	0.107809	4
coq-corn.8.16.0	CoRN.transc.Pi.Pi_and_Order.invQuarterPi_less_Pi	600	0.0.0.0.0	synth with cache (only 1: apply less_transitive_unfolded with ZeroR; only 1: astepr [--] ZeroR; only 1: apply inv_resp_less; only 1: apply pos_QuarterPi; only 1: apply pos_Pi).	0.166406	5
coq-corn.8.16.0	CoRN.transc.RealPowers.power_strext	600
coq-corn.8.16.0	CoRN.reals.faster.ARroot.ARsqrt.sqrt_mid.Proper_instance_0	600
coq-corn.8.16.0	CoRN.coq_reals.Rreals_iso.R_lt_as_IR_back	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TOperatorsInfer.TOperatorsInfer.u.Forall_rremove	600
coq-corn.8.16.0	CoRN.ftc.MoreFunSeries.Algebraic_Properties.fun_Cauchy_prop_const_IR	600
coq-corn.8.16.0	CoRN.reals.PosSeq.SeqProperties.One_seq_is_pos	600	0.6	synth with cache (only 1: intros H7; only 1: apply pos_one).	0.067710	8
coq-corn.8.16.0	CoRN.ftc.FTC.FTC.Continuous_prim	600
coq-corn.8.16.0	CoRN.transc.Trigonometric.Sine_and_Cosine.Sine_of_Sum.Sin_plus_fun	600
coq-qcert.2.2.0	Qcert.NRAEnv.Typing.TNRAEnvEq.TNRAEnvEq.eq_lift.lift_tnraenv_core_eq_to_tnraenv_eq_r	600
coq-corn.8.16.0	CoRN.ftc.CalculusTheorems.Various_Theorems.strict_inc_glues	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tdot_over_concat_neq_r_arrow	600
coq-corn.8.16.0	CoRN.reals.fast.Integration.id01.SupDistanceToLinear_glue	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.TNNRCRewrite.TNNRCRewrite.tnnrceither_rename_r_arrow	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.TNNRSimpRewrite.TNNRSimpRewrite.bagunion_nil_l_trew	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpOptimizer.NNRSimpOptimizer.optims.unflatten_fun_correctness	600
coq-corn.8.16.0	CoRN.reals.fast.CRarctan_small.widen_interval	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpOptimizer.NNRSimpOptimizer.optim_lists_props.nnrs_imp_expr_optim_list_distinct	600	1.0.0.10.5.29	synth with cache (only 1: red; only 1: simpl; only 1: constructor; only 1: simpl; only 1: tauto; only 1: constructor).	0.253505	51
coq-hott.8.11	HoTT.Homotopy.EMSpace.LicataFinsterLemma.licata_finster	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection13.Section13.tau13_primact_Msigma	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection8.Eight.OneMaximal.FT_Dade1_supportJ	600
coq-corn.8.16.0	CoRN.reals.fast.MultivariatePolynomials.Qclamp01_clamped	600
coq-corn.8.16.0	CoRN.metric2.Hausdorff.HausdorffMetricStrong.hemiMetricStrong_triangle	600
coq-bits.1.1.0	Bits.extraction.axioms16.implies_lxor	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.nat_of_list_rT	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.log2_0	600	0	synth with cache (only 1: by [  ]).	0.014165	1
coq-gaia-stern.1.15	gaia.stern.stern.Stern.log2_1	600	0	synth with cache (only 1: by [  ]).	0.015717	1
coq-mathcomp-apery.1.0.1	mathcomp.apery.reduce_order.ReduceBToOrder2.b'2_eq	600
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Typ.Interp.Interp_Equality.i_eqb_t	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.TNNRSimpUnflatten.TNNRSimpUnflatten.typ.nnrs_imp_stmt_unflatten_type	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection7.Seven.InverseDade.sLG	600
coq-corn.8.16.0	CoRN.ftc.TaylorLemma.Taylor_Defs.Taylor_lemma9	600
coq-corn.8.16.0	CoRN.reals.Bridges_LUB.LUBP.upper_bound_sequence.W_n_is_upper	600
coq-corn.8.16.0	CoRN.liouville.Liouville.CPoly_bounded.AbsIR_leEq	600
coq-corn.8.16.0	CoRN.ftc.Composition.Mapping.included_comp	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Typing.TcNRAEnvEq.TcNRAEnvEq.rewrites_typed_with_untyped	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection1.Main.IndSumInertia.nHG	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection1.Main.IndSumInertia.sHT	600	2	synth with cache (only 1: exact : normal_sub ).	0.122095	3
coq-qcert.2.2.0	Qcert.NNRS.Typing.TNNRSRename.TNNRSRename.nnrs_stmt_type_rename_mdenv_in_inv	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.a_props.le_0_a	600
coq-corn.8.16.0	CoRN.ftc.StrongIVT.IVT'_dec	600
coq-corn.8.16.0	CoRN.reals.faster.ARArith.ARarith.ARtoCR_preserves_boundAbove	600	0	synth with cache (only 1: apply preserves_unary_fun).	0.044987	1
coq-corn.8.16.0	CoRN.reals.fast.CRcos.Cos_Poly.cos_poly_fun_correct	600
coq-corn.8.16.0	CoRN.ftc.MoreIntegrals.Definitions.Integral_inc1	600
coq-corn.8.16.0	CoRN.ftc.MoreIntegrals.More_Properties.le_cb_c	600	0	synth with cache (only 1: apply Min_leEq_lft).	0.030977	1
coq-qcert.2.2.0	Qcert.Compiler.Enhanced.EnhancedTyping.enhanced_unary_op_typing_sound	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.remove_4	600
coq-qcert.2.2.0	Qcert.NNRC.Typing.TNNRCEq.TNNRCEq.tproper_NNRCLet	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing._cpoly_lin_ap_zero	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection14.Section14.kappa_nonregular	600
coq-corn.8.16.0	CoRN.reals.faster.ARarctan.ARarctan.AQarctan_mid_pos_correct	600
coq-qcert.2.2.0	Qcert.Translation.Typing.TCAMPtoNRA.TCAMPtoNRA.ATnra_match_invcoll	600
coq-corn.8.16.0	CoRN.algebra.COrdFields2.Properties_of_leEq.misc.power_cancel_less	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection11.Section11.Ep2A	600	0	synth with cache (only 1: by case : excM ).	0.041948	1
coq-corn.8.16.0	CoRN.ftc.FunctSequence.Still_More_Algebraic_Properties.fun_Lim_seq_inv	600
coq-corn.8.16.0	CoRN.transc.Exponential.Exp_inv_char	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCOptimizer.NNRCOptimizer.tproject_over_concat_l_fun_correctness	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.InducedIrrs.SeqInd.seqInd_uniq	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.Reflective_Subuniverse.Types.inO_hfiber	600
coq-tlc.20200328	TLC.LibRelation.Rclosure.rclosure_inverse_eq	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.dup_elim	600
coq-hott.8.11	HoTT.Homotopy.Suspension.UnivPropNat.isequiv0gpd_functor_Susp_ind_data'	600
coq-qcert.2.2.0	Qcert.Utils.StringAdd.Prefix.substring_bounded	600
coq-gaia-stern.1.15	gaia.stern.fibm.double_square	600
coq-corn.8.16.0	CoRN.model.Zmod.ZDivides.zdivides.Zmod0_Zdivides	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.List2.Forall2.Forall2_map_Forall	600
coq-corn.8.16.0	CoRN.model.Zmod.ZBasics.zsign.Zsgn_plus_r	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.afold_right_spec	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tapp_over_env_fun_correctness	600
coq-corn.8.16.0	CoRN.ode.AbstractIntegration.cmΣ_const	600
coq-qcert.2.2.0	Qcert.NNRS.Typing.TNNRS.TNNRS.typed_nnrs_expr_yields_typed_data_compute	600
coq-ceres.0.4.0	Ceres.CeresRoundtrip.CompleteClass_list	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContextLift.cNRAEnvContext.lift_nra_context_substs	600
coq-hott.8.11	HoTT.Classes.theory.rings.ring_props.negate_mult_distr_l	600
coq-corn.8.16.0	CoRN.ode.Picard.prod_nonempty	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Effective.stratify_stratified_spec	600
coq-corn.8.16.0	CoRN.ode.Picard.Computation.IsUniformlyContinuous_instance_0	600	1.0.1.1.0.12.3.2.3.8.0	synth with cache (only 1: intros H; only 1: intros E; only 1: split; only 1: intros; only 1: easy; only 1: intros e; only 1: intros x1; only 1: intros _tmp_tactician0; only 1: intros e_neg; only 1: intros A; only 1: apply A).	0.411539	42
coq-corn.8.16.0	CoRN.algebra.CPoly_ApZero.Characteristic_zero.poly_apzero	600
coq-qcert.2.2.0	Qcert.Tests.TNRATest.TNRATest.mkpersons_typed	600
coq-corn.8.16.0	CoRN.model.structures.NNUpperR.mult_0_l	600
coq-corn.8.16.0	CoRN.transc.TrigMon.Tangent.Derivative_Tan_1	600
coq-corn.8.16.0	CoRN.ftc.NthDerivative.More_Results.n_deriv_inc	600
coq-corn.8.16.0	CoRN.metrics.CMetricSpaces.Zeroff.metric_ap_tight	600
coq-corn.8.16.0	CoRN.fta.CC_Props.Continuity_for_CC.poly_pres_lim	600
coq-corn.8.16.0	CoRN.fta.FTAreg.Seq_is_CC_CAuchy.SublemmaRe	600
coq-corn.8.16.0	CoRN.algebra.COrdCauchy.Monotonous_functions.part_mon_imp_mon'	600
coq-corn.8.16.0	CoRN.ftc.WeakIVT.Lemma1.Weak_IVT_ap_lft	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection7.Seven.plength_1_normed_constrained	600
coq-corn.8.16.0	CoRN.ftc.RefLemma.Refinement_Lemma.Third_Refinement_Lemma.RL_csi1	600
coq-qcert.2.2.0	Qcert.cNNRC.Typing.TcNNRCShadow.TcNNRCShadow.nnrc_core_type_cons_subst	600
coq-corn.8.16.0	CoRN.complex.Complex_Exponential.ExpCC_Zero	600
coq-corn.8.16.0	CoRN.transc.InvTrigonom.Inverses.ArcTan_Range.min1	600
coq-corn.8.16.0	CoRN.model.structures.StepQsec.QS.QplusS	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection6.Six.GeneralCoherence.nKL	600
coq-corn.8.16.0	CoRN.ftc.RefSepRef.Refining_Separated.RSR_f'_mon	600
coq-corn.8.16.0	CoRN.ftc.RefSeparating.Separating_Partition.sep__part_fun_m	600
coq-corn.8.16.0	CoRN.complex.AbsCC.AbsCC_properties.cc_recip_char	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection9.Nine.not_cHU	600
coq-corn.8.16.0	CoRN.ftc.Integral.Basic_Properties.Linearity_and_Monotonicity'.linear_integral	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCShadow.cNNRCShadow.shadow_free_unshadow_id	600
coq-corn.8.16.0	CoRN.reals.fast.CRIR.IR_recip_as_CR_2	600
coq-qcert.2.2.0	Qcert.Translation.Typing.TcNNRCtoCAMP.TcNNRCtoCAMP.fresh_bindings_cons_loop_var	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.FTtypeClassification.kappa_witness	600
coq-corn.8.16.0	CoRN.ode.metric.MetricSpace.msd_nonneg	600
coq-corn.8.16.0	CoRN.reals.Cesaro.AlgebraBits.algebraic_estimate1	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.Computations.w_ge0	600
coq-corn.8.16.0	CoRN.reals.fast.CRroot.SquareRoot.rational_sqrt_mid_err	600
coq-corn.8.16.0	CoRN.model.reals.CRreal.CRlim	600
coq-corn.8.16.0	CoRN.ftc.MoreFunctions.Nth_Derivative.Basic_Results.Diffble_n_imp_inc	600
coq-corn.8.16.0	CoRN.metrics.CPMSTheory.loc_and_bound.Re_co_do	600
coq-corn.8.16.0	CoRN.ftc.Partitions.Even_Partitions.even_partition_Mesh	600
coq-corn.8.16.0	CoRN.complex.NRootCC.NRootCC_1.NRootCC_1_ap_real.nrCC1_a3	600
coq-corn.8.16.0	CoRN.ftc.Derivative.included_imp_deriv	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection12.Section12.der_compl_cent_beta'	600
coq-corn.8.16.0	CoRN.transc.Pi.Sin_And_Cos.Sin_plus_HalfPi	600
coq-corn.8.16.0	CoRN.transc.RealPowers.power_inv	600
coq-corn.8.16.0	CoRN.coq_reals.Rreals_iso.IR_One_as_R	600
coq-corn.8.16.0	CoRN.reals.faster.ARroot.ARsqrt.sqrt_mid.AQsqrt_loop_invariant2	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpUnflatten.NNRSimpUnflatten.unflatten.ident.nnrs_imp_expr_unflatten_read_nfree_id	600
coq-corn.8.16.0	CoRN.ftc.MoreFunSeries.Operations.FSeries_Sum_scal	600
coq-corn.8.16.0	CoRN.reals.faster.ARbigD.SemiRing_Morphism_instance_1	600
coq-corn.8.16.0	CoRN.ftc.CalculusTheorems.Various_Theorems.Feq_criterium	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.TNNRSimpRewrite.TNNRSimpRewrite.merge_nil_l_trew	600
coq-hott.8.11	HoTT.Homotopy.EMSpace.EilenbergMacLane.trunc_lemma	600
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.cross_shadow_free_disjointness.nnrs_stmt_cross_shadow_free_under_free_mdenv_cons	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection8.Eight.OneMaximal.FT_core_prime_Dade_def	600
coq-corn.8.16.0	CoRN.reals.fast.MultivariatePolynomials.MVP_uc_rec	600
coq-corn.8.16.0	CoRN.metrics.Prod_Sub.subpsmetrics.dsub_com	600
coq-corn.8.16.0	CoRN.reals.fast.Integration.Integrate01_correct	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.TNNRCRewrite.TNNRCRewrite.tnnrcproject_over_concat_rec_l_nin	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.log2_double	600
coq-corn.8.16.0	CoRN.reals.fast.Plot.PlotPath.wpos	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpRewrite.NNRSimpRewrite.rename_let_eq	600
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Typ.Cast.neq_cast	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tenvnth0_bag_arrow	600
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRS.NNRCtoNNRS.from_stratified.nnrc_expr_to_nnrs_expr_free_vars	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection7.Seven.InverseDade.invDade_on	600
coq-corn.8.16.0	CoRN.model.metric2.LinfMetric.StepF_eq_change_base_setoid_const	600
coq-corn.8.16.0	CoRN.ftc.Continuity.Definitions_and_Basic_Results.Continuous_I_imp_tb_image	600
coq-corn.8.16.0	CoRN.reals.Series.Operations.series_sum_minus	600
coq-corn.8.16.0	CoRN.reals.faster.ARabs.ARabs.ARabs_opp	600
coq-corn.8.16.0	CoRN.complex.CComplex.Complex_Numbers.cc_plus_strext	600
coq-corn.8.16.0	CoRN.liouville.Liouville.liouville_lemmas3.Liouville_lemma6	600
coq-corn.8.16.0	CoRN.fta.KeyLemma.Key_Lemma.p3m_P	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Typing.TcNRAEnvEq.TcNRAEnvEq.andefault_tproper	600
coq-corn.8.16.0	CoRN.metrics.IR_CPMSpace.Reals.d_is_lipschitz	600
coq-corn.8.16.0	CoRN.ftc.Composition.Generalized_Intervals.fun_Lim_seq_comp'_IR	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.a_props.ler_rat_of_positive	600
coq-corn.8.16.0	CoRN.reals.faster.ARArith.ARarith.PartialOrder_instance_0	600
coq-corn.8.16.0	CoRN.ftc.WeakIVT.IVT.IVT_iter	600	3.0	synth with cache (only 1: intros xy; only 1: auto).	0.099729	5
coq-corn.8.16.0	CoRN.reals.faster.ARroot.ARsqrt.sqrt_mid.AQsqrt_mid_bounded_raw_proper	600	0.0.0.0.0.11	synth with cache (only 1: intros x; only 1: intros y; only 1: intros E; only 1: change (x ≡ y) in E; only 1: rewrite E; only 1: easy).	0.577390	17
coq-qcert.2.2.0	Qcert.Driver.CompConfig.CompConfig.constants.vdbindings_of_constants_config_commutes	600
coq-corn.8.16.0	CoRN.reals.NRootIR.Nth_Root.nroot	600
coq-corn.8.16.0	CoRN.ftc.FunctSums.FSum0_wd	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection11.Section11.sigma'_Sylow_contra	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection14.Section14.mem_sigma_cover_decomposition	600
coq-qcert.2.2.0	Qcert.Translation.Typing.TCAMPtoNRA.TCAMPtoNRA.nra_of_camp_type_form_output_weak	600
coq-corn.8.16.0	CoRN.model.metric2.L1metric.L1ball_dec	600
coq-corn.8.16.0	CoRN.reals.fast.RasterizeQ.RasterizeCorrect.RasterizeQ2_correct	600
coq-corn.8.16.0	CoRN.ftc.PartFunEquality.More_on_Equality.Operations.Feq_div	600
coq-corn.8.16.0	CoRN.transc.Exponential.pos_E	600
coq-qcert.2.2.0	Qcert.NNRC.Optim.NNRCOptimizer.NNRCOptimizer.tproject_over_project_fun_correctness	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.InducedIrrs.SeqInd.Beta.seqInd_sub_lin_vchar	600
coq-corn.8.16.0	CoRN.ode.Picard.Computation.L_rx	600		synth with cache (only 1: unfold L; only 1: simpl; only 1: rewrite Qmult_comm; only 1: apply lt_iff_le_ne; only 1: split; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: rewrite Qmult_comm; only 1: easy; only 1: unfold equiv; only 1: rewrite <- preserves_1; only 1: intros aone; only 1: discriminate).	518.715462	43129
coq-corn.8.16.0	CoRN.reals.fast.CRGeometricSum.InfiniteSum_raw_N_extend	600
coq-corn.8.16.0	CoRN.reals.fast.CRcos.Cos_Poly.DoneMinusX2	600
coq-corn.8.16.0	CoRN.reals.fast.RasterQ.In_filter_list	600
coq-corn.8.16.0	CoRN.metrics.CPseudoMSpaces.Zerof.zero_fun_com	600
coq-corn.8.16.0	CoRN.reals.Bridges_iso.bridges_axioms_imply_ours.is_Archimedes'	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tapp_over_app_arrow	600	0.2.2.93.50.31.11.8.0.0.0.2.0.1	synth with cache (only 1: unfold tnraenv_core_rewrites_to; only 1: intros; only 1: simpl; only 1: split; only 1: nraenv_core_inferer; only 1: intros; only 1: Case "NRAConst"%string; only 1: clear H τout; only 1: unfold olift; only 1: let rec destructer := repeat progress (try match goal with | H:context [ match ?p with | exist _ _ _ => _ end ] |- _ => destruct p | H:context [ match ?p with | _ => _ end ] |- _ => case_eq p; intros; repeat match goal with | H1:?a = ?a |- _ => clear H1 | H1:?a = ?b |- _ => rewrite H1 in * end | H:Some _ = Some _ |- _ => inversion H; clear H | H:exists y, _ y |- _ => destruct H | H:_ /\ _ |- _ => destruct H | H:lift _ _ = Some _ |- _ => apply some_lift in H; destruct H | H:lift _ _ = None |- _ => apply none_lift in H | H:context [ RecMaybe _ (rec_concat_sort _ _) ] |- _ => rewrite RecMaybe_rec_concat_sort in H | H:RecMaybe _ _ = Some _ |- _ => apply RecMaybe_some_pf in H; destruct H | H1:is_list_sorted StringOrder.lt_dec (domain ?l) = true, H2:context [ RecMaybe ?k ?l ] |- _ => rewrite (RecMaybe_pf_some _ _ H1) in H2 | H:tuncoll _ = _ |- _ => apply tuncoll_correct in H | H:tsingleton _ = _ |- _ => apply tsingleton_correct in H | H:tunrec _ = _ |- _ => apply tunrec_correct in H; destruct H | H:` _ = ⊥₀ |- _ => apply Bottom_canon in H | H:` _ = Brand₀ ?b |- _ => apply TUtil.Brand_canon in H | H:` _ = ⊤₀ |- _ => apply Top_canon in H | H:` _ = Unit₀ |- _ => apply Unit_canon in H | H:` _ = Nat₀ |- _ => apply TUtil.Nat_canon in H | H:` _ = Float₀ |- _ => apply TUtil.Float_canon in H | H:` _ = Bool₀ |- _ => apply Bool_canon in H | H:` _ = String₀ |- _ => apply TUtil.String_canon in H | H:` _ = Coll₀ ?A |- _ => match A with | String₀ => apply Coll_String_inside in H | ` _ => apply TUtil.Coll_canon in H | _ => destruct (Coll_inside _ _ H); subst; apply TUtil.Coll_canon in H end | H:?a = ?a |- _ => clear H | H:?a = ?b |- _ => rewrite H in * | H:binary_op_type _ _ _ _ |- _ => inversion H; clear H end; try autorewrite with type_canon in *; try unfold equiv, complement, rtype in *; simpl in *; try rtype_equalizer; try subst; try discriminate; try reflexivity) in destructer; only 1: case_option; only 1: reflexivity; only 1: intros; only 1: reflexivity).	0.911588	214
coq-corn.8.16.0	CoRN.reals.IVT.Nested_Intervals.intervals_cauchy	600
coq-qcert.2.2.0	Qcert.Translation.Typing.TNNRStoNNRSimp.TNNRStoNNRSimp.nnrs_stmt_to_nnrs_imp_stmt_assigned_must_assign	600
coq-corn.8.16.0	CoRN.reals.Intervals.Totally_Bounded.aux_seq_glb	600
coq-qcert.2.2.0	Qcert.NNRS.Typing.TNNRSCrossShadow.TNNRSCrossShadow.nnrs_uncross_shadow_type_f	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TOperatorsEq.TOperatorsEq.tunary_op_rewrites_to_pre	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpRename.NNRSimpRename.var_usage.nnrs_imp_stmt_rename_either_l_var_usage_sub_b	600
coq-corn.8.16.0	CoRN.reals.CMetricFields.basics.Hulp	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TBinaryOperators.TBinaryOperators.mapTopNotSub_sublist_same	600
coq-corn.8.16.0	CoRN.model.metric2.LinfMetricMonad.SupMetric.StepFSupBall_refl	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.aec_simplify_holes_preserved	600
coq-corn.8.16.0	CoRN.reals.fast.Interval.Interval.UniformPartition_fine_aux	600
coq-corn.8.16.0	CoRN.reals.CReals1.More_Cauchy_Props.twice_inv_seq	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TGroupBy.TGroupBy.typed_to_partitions_yields_typed_data	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection10.CoreTheory.GenericCores.sigmaJ	600
coq-corn.8.16.0	CoRN.metrics.CMetricSpaces.Zeroff.metric_d_strext	600
coq-corn.8.16.0	CoRN.reals.iso_CReals.Concrete_iso_between_Creals.g21_is_inverse_f12	600
coq-qcert.2.2.0	Qcert.Tests.TNRATest.TNRATest.q2_wt	600
coq-corn.8.16.0	CoRN.ftc.NthDerivative.More_Results.n_deriv_inc'	600
coq-corn.8.16.0	CoRN.model.structures.StepQsec.StepQ_le_refl	600
coq-corn.8.16.0	CoRN.transc.TrigMon.Tangent.Tan_resp_leEq	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.sW2K	600
coq-corn.8.16.0	CoRN.ode.AbstractIntegration.riemann_sum_const	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.ntW2	600
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompDriverConfig.target_language_of_driver_is_postfix_nnrcmr	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tappenv_over_env_l_fun_correctness	600
coq-qcert.2.2.0	Qcert.NNRS.Typing.TNNRS.TNNRS.nnrs_stmt_preserves_md_some_cons	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Idempotent.stratify_aux_stratify_id	600
coq-corn.8.16.0	CoRN.ftc.MoreFunctions.Nth_Derivative.Corollaries.Derivative_n_imp_Continuous	600
coq-corn.8.16.0	CoRN.transc.InvTrigonom.Inverses.ArcTan_Range.min5	600
coq-corn.8.16.0	CoRN.coq_reals.Rreals_iso.R_div_as_IR	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.FTtypeClassification.FTtype_Fmax	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.TNNRSimpRewrite.TNNRSimpRewrite.rename_either_r_trew	600
coq-corn.8.16.0	CoRN.transc.RealPowers.real_power_resp_less_both	600
coq-corn.8.16.0	CoRN.transc.Pi.Sin_And_Cos.Sin_periodic	600
coq-corn.8.16.0	CoRN.reals.fast.CRIR.IR_zring_as_CR	600
coq-corn.8.16.0	CoRN.ftc.RefLemma.Refinement_Lemma.Third_Refinement_Lemma.RL_R'_sep	600
coq-corn.8.16.0	CoRN.reals.faster.ARroot.ARsqrt.sqrt_mid.Proper_instance_1	600
coq-corn.8.16.0	CoRN.reals.fast.MultivariatePolynomials.MVP_uc_fun_wd_Proper	600
coq-corn.8.16.0	CoRN.complex.AbsCC.AbsCC_properties.AbsCC_strext	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection6.Six.GeneralCoherence.ccS	600
coq-corn.8.16.0	CoRN.reals.fast.CRroot.SquareRoot.rational_sqrt_mid_correct0	600
coq-corn.8.16.0	CoRN.liouville.Liouville.liouville_theorem.constant_nz	600
coq-corn.8.16.0	CoRN.reals.NRootIR.Nth_Root.NRoot_pos	600
coq-qcert.2.2.0	Qcert.Driver.CompCorrectness.CompCorrectness.eval_preserved.correct_driver_succeeds_imp_ejson	600
coq-corn.8.16.0	CoRN.ftc.PartFunEquality.More_on_Equality.Operations.Feq_comp	600
coq-corn.8.16.0	CoRN.ode.metric.compose_uc	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection12.PFTwelve.Twelve2.FTtype1_ref_irr	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection10.Ten.OneMaximal.defA1	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection7.Seven.InverseDade.DadeK	600
coq-corn.8.16.0	CoRN.reals.fast.CRGeometricSum.GeometricSeries.InfiniteGeometricSum_bound	600
coq-corn.8.16.0	CoRN.metrics.CPMSTheory.loc_and_bound.locatedsub_totallybounded_imp_totallyboundedsub	600
coq-corn.8.16.0	CoRN.ftc.Partitions.Sep_Partitions._Separated_imp_length_zero	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tflip_env1_arrow	600
coq-corn.8.16.0	CoRN.reals.IVT.Bisection.rht_b	600
coq-corn.8.16.0	CoRN.transc.Exponential.Exp_leEq_One	600
coq-corn.8.16.0	CoRN.reals.fast.Interval.InfiniteIntervalLocated	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpRename.NNRSimpRename.nfree.nnrs_imp_stmt_rename_nin	600
coq-corn.8.16.0	CoRN.model.metric2.LinfMetricMonad.SupMetric.StepFSupBall_closed	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection10.CoreTheory.GenericCores.MbetaJ	600
coq-corn.8.16.0	CoRN.reals.fast.CRcos.rational_cos_correct	600
coq-corn.8.16.0	CoRN.metrics.CMetricSpaces.Zeroff.Metric_d_nneg	600
coq-corn.8.16.0	CoRN.metrics.CMetricSpaces.Limitt.d_wd	600	23.2.0.0.1.0	synth with cache (only 1: intros X; only 1: intros x; only 1: intros y; only 1: intros b; only 1: intros H; only 1: algebra).	0.120988	32
coq-corn.8.16.0	CoRN.reals.iso_CReals.Concrete_iso_between_Creals.g21_pres_mult	600
coq-corn.8.16.0	CoRN.complex.NRootCC.NRootCC_1.NRootCC_1_ap_real.nrootCC_1_upper	600
coq-qcert.2.2.0	Qcert.Translation.Typing.TcNNRCtoCAMP.TcNNRCtoCAMP.nnrc_to_camp_ns_let_top_type_preserve	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.normedTI_prTIset	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpUnflatten.NNRSimpUnflatten.unflatten.free_vars.nnrs_imp_expr_unflatten_read_free_vars	600
coq-corn.8.16.0	CoRN.reals.faster.ARbigD.SemiRing_Morphism_instance_2	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpRewrite.NNRSimpRewrite.rename_for_eq	600
coq-corn.8.16.0	CoRN.ode.AbstractIntegration.riemann_sum_plus	600
coq-corn.8.16.0	CoRN.ode.AbstractIntegration.RingFacts.plus_right_cancel	600	0.0.0.0.5.0.6.16.1.0	synth with cache (only 1: split; only 1: intros A; only 1: apply (left_cancellation plus z); only 1: rewrite commutativity; only 1: rewrite A; only 1: rewrite commutativity; only 1: easy; only 1: intros A; only 1: rewrite A; only 1: easy).	0.748061	38
coq-corn.8.16.0	CoRN.ftc.Continuity.Definitions_and_Basic_Results.lub_prop	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection14.Section14.ell_sigma_support	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.InducedIrrs.SeqIndD.seqInd_conjC_subset1	600
coq-corn.8.16.0	CoRN.reals.faster.ARabs.ARabs.ARabs_neg	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.cycW2	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection9.Nine.sH0H	600
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompDriverConfig.driver_of_rev_path_app	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.Computations.w_gt1	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tappenv_over_env_r_fun_correctness	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_2_3_5_to_9.scohS0	600
coq-qcert.2.2.0	Qcert.NNRS.Typing.TNNRS.TNNRS.nnrs_stmt_must_assign_assigns	600
coq-corn.8.16.0	CoRN.transc.InvTrigonom.Inverses.ArcTan_Range.b5	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.FTtypeClassification.norm_mmax_Fcore	600
coq-corn.8.16.0	CoRN.coq_reals.Rreals_iso.R_infsum_as_IR_convergent	600
coq-corn.8.16.0	CoRN.reals.fast.MultivariatePolynomials.MVP_correct.MVP_uc_fun_sub_Q	600
coq-corn.8.16.0	CoRN.reals.faster.ARroot.ARsqrt.AQsqrt_correct	600
coq-corn.8.16.0	CoRN.reals.fast.CRroot.rational_sqrt_big_bounded_correct_aux	600
coq-corn.8.16.0	CoRN.reals.Series.Operations.conv_series_mult_scal	600
coq-corn.8.16.0	CoRN.complex.CComplex.Complex_Numbers.cc_mult_strext	600
coq-corn.8.16.0	CoRN.reals.NRootIR.Square_root.sqrt_less	600
coq-corn.8.16.0	CoRN.fta.KeyLemma.Key_Lemma.third_less_one	600
coq-corn.8.16.0	CoRN.reals.faster.ARArith.ARarith.OrderEmbedding_instance_0	600
coq-corn.8.16.0	CoRN.ftc.FunctSums.FSum_first	600
coq-corn.8.16.0	CoRN.ftc.PartFunEquality.Nth_Power.FNth_zero	600
coq-corn.8.16.0	CoRN.ftc.PartFunEquality.Strong_Nth_Power.FNth_zero'	600	17.2.1.72	synth with cache (only 1: elim CReals_is_CReals; only 1: intros H1; only 1: intros incG; only 1: FEQ).	0.389915	96
coq-qcert.2.2.0	Qcert.Driver.CompCorrectness.CompCorrectness.eval_preserved.correct_driver_succeeds_nnrc_core	600
coq-corn.8.16.0	CoRN.model.metric2.L1metric.Integral_opp	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection12.PFTwelve.Twelve2.FTtype1_irr_isometry	600
coq-qcert.2.2.0	Qcert.Driver.CompCorrectness.CompCorrectness.eval_preserved.correct_driver_succeeds_dnnrc	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.1.0.3.0.2.1.1.0.0.1.0.0.3.1.0.0.0.1.0.1.0.1.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.1.1.1.1.1.0.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.3.5.3.0.0.1.1.0.1.1.1.1.1.0.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.1.0.0.3.5.3.0.0.1.0.3.4.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.3.0.0.3.0.0.2.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3.0.0.0.0.1.3.0.3.0.3.0.3.0.3.0.3.0.3.0.3.0.3.0.3.0.3.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite Forall_forall; only 1: intros; only 1: simpl in H0; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: elim H0; only 1: intros; only 1: clear H0; only 1: rewrite <- H1; only 1: simpl; only 1: trivial; only 1: clear H0; only 1: intros; only 1: destruct dv; only 1: simpl in *; only 1: contradiction; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H0; only 1: elim H; only 1: simpl in *; only 1: intros; only 1: elim H; only 1: intros; only 1: contradiction; only 1: clear H0; only 1: intros; only 1: destruct dv; only 1: simpl in *; only 1: contradiction; only 1: clear H0; only 1: elim H; only 1: simpl in *; only 1: intros; only 1: contradiction; only 1: clear H0; only 1: intros; only 1: destruct dv; only 1: simpl in *; only 1: contradiction; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H0; only 1: elim H; only 1: intros; only 1: elim H; only 1: intuition; only 1: clear H0; only 1: elim H1; only 1: intros; only 1: subst; only 1: clear H0; only 1: simpl; only 1: trivial; only 1: clear H0; only 1: intros; only 1: subst; only 1: simpl; only 1: destruct dv; only 1: simpl in *; only 1: trivial; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H0; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: trivial; only 1: clear H0; only 1: intros; only 1: subst; only 1: simpl; only 1: destruct dv; only 1: simpl in *; only 1: trivial; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H0; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: trivial; only 1: clear H0; only 1: destruct dv; only 1: intros; only 1: simpl in *; only 1: contradiction; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H0; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: rewrite <- H1; only 1: simpl; only 1: trivial; only 1: clear H0; only 1: intros; only 1: destruct dv; only 1: simpl in *; only 1: clear H0; only 1: subst; only 1: simpl; only 1: trivial; only 1: clear H0; only 1: elim H; only 1: subst; only 1: simpl; only 1: eauto; only 1: clear H0; only 1: intros; only 1: destruct dv; only 1: simpl in *; only 1: rewrite <- H1; only 1: simpl; only 1: trivial; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H0; only 1: elim H; only 1: rewrite <- H1; only 1: simpl; only 1: trivial; only 1: clear H0; only 1: intros; only 1: destruct dv; only 1: simpl in *; only 1: intuition; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H0; only 1: contradiction).	27.496662	669
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection10.Ten.OneMaximal.ntW2	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection11.Section11.exceptional_TIsigmaJ	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection14.Fourteen.NonconjType1.coherent_FTtype1_core_ltr	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection7.Seven.DisjointDadeOrtho.odd_Dade_context	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Eval_substs.eval_substs_app	600
coq-corn.8.16.0	CoRN.reals.IVT.IVT_Op.intervals_small	600
coq-corn.8.16.0	CoRN.reals.fast.CRpower.CRpower_N.Qpower_N_uc_prf	600
coq-corn.8.16.0	CoRN.reals.Bridges_iso.bridges_axioms_imply_ours.proofs_in_TCS.Every_Cauchy_Sequence_is_bounded.Psup_unfolded1	600
coq-corn.8.16.0	CoRN.reals.fast.CRabs.CRabs_triangle	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.TNRAEnvRewrite.TNRAEnvRewrite.tmapconcat_over_singleton	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TUtil.TUtil.tuneither	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TUtil.TUtil.trecConcatRight	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct τ₁; only 1: destruct x; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: destruct τ₂; only 1: destruct x; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: generalize (from_Rec₀ srl e); only 1: intros; only 1: generalize (from_Rec₀ srl0 e0); only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: destruct k; only 1: destruct k0; only 1: exact None; only 1: exact None; only 1: destruct k0; only 1: exact None; only 1: generalize (rec_concat_sort x x0); only 1: intros; only 1: exact (RecMaybe Closed H); only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None; only 1: exact None).	1.069513	43
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TUtil.TUtil.Nat_canon	600	0.0.0.0.0	synth with cache (only 1: destruct τ₁; only 1: simpl; only 1: intros; only 1: subst; only 1: apply rtype_ext).	0.164585	5
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TUtil.TUtil.Float_canon	600	0.0.0.0.0	synth with cache (only 1: destruct τ₁; only 1: simpl; only 1: intros; only 1: subst; only 1: apply rtype_ext).	0.169243	5
coq-corn.8.16.0	CoRN.transc.Exponential.Continuous_Log	600
coq-corn.8.16.0	CoRN.transc.Exponential.Log_domain	600	2.0.1	synth with cache (only 1: intros beta; only 1: intros H; only 1: auto).	0.083273	6
coq-corn.8.16.0	CoRN.model.metric2.LinfMetricMonad.SupMetric.StepFSupBall_nonneg	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection10.CoreTheory.MaxCores.norm_sigma_Sylow	600
coq-mathcomp-odd-order.1.14.0	odd_order.stripped_odd_order_theorem.InternalSkepticOddOrderProof.main	600
coq-corn.8.16.0	CoRN.metrics.CMetricSpaces.Limitt.unique_MSseqLim	600
coq-corn.8.16.0	CoRN.complex.NRootCC.NRootCC_4.NRootCC_4_ap_real.NRootCC_4_equations.nrCC4_a2	600
coq-corn.8.16.0	CoRN.complex.NRootCC.NRootCC_4.NRootCC_4_ap_real.NRootCC_4_equations.nrCC4_a3	600	5.0.0	synth with cache (only 1: apply plus_resp_nonneg_pos; only 1: apply sqr_nonneg; only 1: apply pos_one).	0.066465	8
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TSortBy.TSortBy.sortable_type_dec	600
coq-qcert.2.2.0	Qcert.Translation.Lang.cNNRCtoCAMP.cNNRCtoCAMP.gather_successes_le	600
coq-corn.8.16.0	CoRN.metric2.DistanceMetricSpace.from_alt.ball_closed	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.NirrW2	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpUnflatten.NNRSimpUnflatten.unflatten.free_vars.nnrs_imp_expr_unflatten_write_free_vars	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.primeTIdIirr_key	600	22.6.5.6.5.6.6.7	synth with cache (only 1: have [[_ _ cW12 _] [_ _ nKW1 tiKW1]] := (dprodP defW, sdprodP defL); only 1: have nV2W: W \subset 'N(W :\: W2) by rewrite sub_abelian_norm ?subsetDl; only 1: have piW1_W: {in W1 & W2, forall x y, (x * y).`_\pi(W1) = x}; only 1: move  =>x y W1x W2y /=; only 1: rewrite consttM /commute ?(centsP cW12 y) //; only 1: rewrite constt_p_elt ?(mem_p_elt _ W1x) ?pgroup_pi // (constt1P _) ?mulg1 //; only 1: by rewrite /p_elt -coprime_pi' // (coprimegS _ coW12) ?cycle_subG; only 1: split => [|_ /zchar_tuple_expansion [z Zz ->]]).	0.676014	71
coq-corn.8.16.0	CoRN.liouville.QX_extract_roots.Z_Q.QX_deg_mult	600
coq-corn.8.16.0	CoRN.ode.AbstractIntegration.range_le	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Maximum.MAX_strext	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.aec_substs_Plug	600
coq-corn.8.16.0	CoRN.ftc.Continuity.Other.Sums.Continuous_I_Sum0	600
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.MirrorGlue	600	2.0.0	synth with cache (only 1: intros b; only 1: intros; only 1: reflexivity).	0.030394	5
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.coUq	600
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtocNNRC.NNRCtocNNRC.Top.nnrc_to_nnrc_core_top_correct	600	1.0	synth with cache (only 1: intros; only 1: eauto).	0.033913	3
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.Five.SubCoherentProperties.bridge_coherent	600
coq-qcert.2.2.0	Qcert.Data.ModelTyping.TData.TData.opt.dtsome_inv	600
coq-corn.8.16.0	CoRN.reals.Q_dense.COrdField_extra.AbsSmall_pos_reflexive	600
coq-corn.8.16.0	CoRN.model.setoids.CRsetoid.CRisCSetoid	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRC.NNRC.Semantics.nnrc_to_nnrc_base_is_core	600	0.5.2.0.1.2.3.6.0.1.0.1.13.0.1.0.0.0.0.0.7	synth with cache (only 1: induction e; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: intuition; only 1: simpl in *; only 1: intuition; only 1: trivial; only 1: simpl in *; only 1: intuition; only 1: econstructor; only 1: trivial; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).	0.441711	63
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompDriverConfig.driver_of_rev_path_completeness	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tselect_over_either_nil_fun_correctness	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.FTtypeClassification.norm_FTcore	600
coq-qcert.2.2.0	Qcert.NNRS.Typing.TNNRS.TNNRS.unused.remove.nnrs_stmt_type_unused_remove_env	600
coq-corn.8.16.0	CoRN.coq_reals.Rreals_iso.R_tan_as_IR	600
coq-qcert.2.2.0	Qcert.Translation.Lang.ImpDatatoImpEJson.ImpDatatoImpEJson.Correctness.eval_ejson_to_expr_sort_criteria_correct	600	22.1.49	synth with cache (only 1: intuition try discriminate; only 1: simpl; only 1: match_destr).	0.084945	75
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.cross_shadow_free_disjointness.nnrs_stmt_cross_shadow_free_under_free_cons	600
coq-corn.8.16.0	CoRN.reals.fast.MultivariatePolynomials.MVP_correct.n_Function_ball01_mult_C	600
coq-corn.8.16.0	CoRN.reals.fast.CRArith.CRmult_1_r	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_2_3_5_to_9.cover_G0	600
coq-corn.8.16.0	CoRN.reals.fast.CRroot.rational_sqrt_pos	600
coq-corn.8.16.0	CoRN.reals.Series.Convergence_Criteria.abs_imp_conv	600
coq-corn.8.16.0	CoRN.complex.CComplex.Complex_Numbers.cc_csg_associative	600
coq-corn.8.16.0	CoRN.reals.NRootIR.Part_Function_NRoot.Included.included_FNRoot	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpEq.NNRSimpEq.proper.NNRSimpSeq_proper	600
coq-corn.8.16.0	CoRN.ftc.FunctSums.inv_FSum	600
coq-corn.8.16.0	CoRN.reals.faster.ARArith.ARarith.StrongSemiRing_Morphism_instance_1	600
coq-qcert.2.2.0	Qcert.NNRCMR.Lang.NNRCMR.NNRCMR.Semantics.mr_eval_ignores_env	600	0.0	synth with cache (only 1: intros HconstNorm; only 1: intuition).	0.029571	2
coq-qcert.2.2.0	Qcert.Translation.Lang.LambdaNRAtoNRAEnv.LambdaNRAtoNRAEnv.lambda_nra_to_nraenv_unop_eq	600	0	synth with cache (only 1: reflexivity).	0.043166	1
coq-qcert.2.2.0	Qcert.Translation.Lang.LambdaNRAtoNRAEnv.LambdaNRAtoNRAEnv.lambda_nra_to_nraenv_map_eq	600	0	synth with cache (only 1: reflexivity).	0.042846	1
coq-corn.8.16.0	CoRN.model.metric2.L1metric.Abs_Integral_Norm	600
coq-corn.8.16.0	CoRN.reals.fast.CRcorrect.CR_eq_as_Cauchy_IR_eq	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpUsage.NNRSimpUsage.vars.nnrs_imp_expr_may_use_free_vars_eq	600
coq-qcert.2.2.0	Qcert.Driver.CompCorrectness.CompCorrectness.eval_preserved.query_preserves_eval_trans	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection14.Fourteen.defQV	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCShadow.NNRCShadow.nnrc_no_free_vars_eval_equiv_env	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCShadow.NNRCShadow.nnrc_eval_single_context_var_uncons	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply nnrc_core_eval_equiv_env; only 1: intros x; only 1: case (string_eqdec x v); only 1: Case "x = v"%string; only 1: intros Hx; only 1: rewrite Hx in *; only 1: clear Hx; only 1: rewrite H; only 1: simpl; only 1: match_destr; only 1: congruence; only 1: Case "x <> v"%string; only 1: intros Hx; only 1: simpl; only 1: match_destr; only 1: congruence).	0.369680	17
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection7.Seven.CoherentFrobeniusPartition.no_coherent_Frobenius_partition	600
coq-corn.8.16.0	CoRN.reals.Q_in_CReals.Rational_sequence_prelogue.inj_Q_minus	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCStratify.Stratify.Core.stratify_aux_preserves_core	600
coq-corn.8.16.0	CoRN.reals.fast.CRpower.Cmap_wd_bounded	600
coq-corn.8.16.0	CoRN.reals.fast.CRabs.CRdistance_triangle	600
coq-corn.8.16.0	CoRN.reals.Bridges_iso.bridges_axioms_imply_ours.proofs_in_TCS.Every_Cauchy_Sequence_is_bounded.Pinf_unfolded2	600
coq-corn.8.16.0	CoRN.metric2.StepFunctionMonad.StFReturn	600
coq-corn.8.16.0	CoRN.transc.Exponential.Log_cancel_less	600
coq-corn.8.16.0	CoRN.model.metric2.LinfMetricMonad.SupMetric.StepFSupPrelengthSpace	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection12.PFTwelve.Twelve_8_to_16.frobL	600
coq-corn.8.16.0	CoRN.reals.CauchySeq.Equiv_Cauchy.Cauchy_prop2_prop	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection10.Ten.OneSylow.mFT_Sylow_der1	600
coq-corn.8.16.0	CoRN.complex.NRootCC.NRootCC_4.NRootCC_4_ap_real.NRootCC_4_equations.nrCC4_a5	600
coq-qcert.2.2.0	Qcert.Data.OperatorsTyping.TSortBy.TSortBy.order_by_has_sortable_type_sdd	600
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.ac_substs_MapProduct	600	0.0.0.1.0.3.0.0.0.0	synth with cache (only 1: revert c1 c2; only 1: induction ps; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: destruct a; only 1: simpl; only 1: auto).	0.106855	14
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.ac_substs_Product	600	0.0.0.1.0.0.0.0.0	synth with cache (only 1: revert c1 c2; only 1: induction ps; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: destruct a; only 1: simpl; only 1: auto).	0.156982	10
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection9.Nine.noncyclic_normed_sub_Uniqueness	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.V2ew	600
coq-qcert.2.2.0	Qcert.NNRSimp.Optim.NNRSimpUnflatten.NNRSimpUnflatten.unflatten.usage.nnrs_imp_stmt_unflatten_var_usage_sub	600
coq-corn.8.16.0	CoRN.reals.Cauchy_CReals.R_CReals.ing_n	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCEq.NNRCEq.proper_NNRCBinop	600
coq-qcert.2.2.0	Qcert.Translation.Lang.NRAtocNNRC.NRAtocNNRC.Top.nra_to_nnrc_core_top_correct	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpEval.NNRSimpEval.eval_eqs.swap.nnrs_imp_expr_eval_swap	600
coq-corn.8.16.0	CoRN.ode.AbstractIntegration.IntegralTotal.integral_additive'	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Maximum.properties_of_Max.leEq_imp_Max_is_rht	600
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompPaths.exists_path_from_source_target_completeness_java	600	0.0.0	synth with cache (only 1: intros until dv; only 1: destruct dv; only 1: reflexivity).	7.852494	3
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.aec_substs_Binop	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.aec_simplify_holes_mapconcat	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (aec_simplify_holes_preserved c1); only 1: intros pres1; only 1: generalize (aec_simplify_holes_preserved c2); only 1: intros pres2; only 1: simpl; only 1: match_destr; only 1: match_destr; only 1: simpl in *; only 1: rewrite <- pres1 in H; only 1: rewrite <- pres2 in H; only 1: simpl in H; only 1: intuition).	0.309200	13
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.ApGlue	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.solH	600
coq-qcert.2.2.0	Qcert.Data.ModelTyping.TData.TData.dtbrand_inv	600
coq-corn.8.16.0	CoRN.reals.Q_dense.COrdField_extra.AbsSmall_neg_reflexive	600
coq-qcert.2.2.0	Qcert.Translation.Lang.cNNRCtoCAMP.cNNRCtoCAMP.trans_let.nnrcToCamp_ns_let_size	600
coq-qcert.2.2.0	Qcert.Data.ModelTyping.ForeignDataTyping.ForeignDataTyping.foreign_data_typing_infer_complete	600
coq-tlc.20200328	TLC.LibStream.Bisimilar.bisimilar_mod_upto_zero	600	52.2	synth with cache (only 1: intros; only 1: constructor).	0.168672	56
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.Five.DadeAut.Dade_irr_sub_conjC	600
coq-corn.8.16.0	CoRN.coq_reals.Rreals.Rlt_strext	600
coq-corn.8.16.0	CoRN.algebra.Cauchy_COF.Structure.Group_Structure.R_plus_assoc	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tselect_over_flatten_fun_correctness	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.tappenv_over_const_fun_correctness	600	0.0.2.2.0.1.1.8.9.2.4.1.0.0.0.0.0.0.0.0.0.0.2.2.2.7.0	synth with cache (only 1: tprove_correctness p; only 1: case_eq (nraenv_ignores_id_fun p2); only 1: intros; only 1: rewrite lift_tnraenv_eq_to_tnraenv_core_eq; only 1: simpl; only 1: rewrite <- nraenv_ignores_id_eq in H; only 1: unfold tnraenv_core_rewrites_to; only 1: intros; only 1: simpl; only 1: nraenv_core_inferer; only 1: econstructor; only 1: qeauto; only 1: intros; only 1: input_well_typed; only 1: reflexivity; only 1: intros; only 1: rewrite lift_tnraenv_eq_to_tnraenv_core_eq; only 1: simpl; only 1: inversion H; only 1: split; only 1: nraenv_core_inferer; only 1: intros; only 1: simpl; only 1: rewrite H in *; only 1: nraenv_core_inferer; only 1: input_well_typed; only 1: reflexivity).	1.145899	70
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.FTsuppJ	600
coq-corn.8.16.0	CoRN.metric2.StepFunction.StepFunction.SplitLGlue	600
coq-corn.8.16.0	CoRN.reals.fast.CRArith.CRplus_eq_l	600
coq-corn.8.16.0	CoRN.complex.CComplex.Complex_Numbers.cc_cg_proof	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_4_10_to_16.defPU	600
coq-corn.8.16.0	CoRN.reals.Series.Alternate_Series.alternate_series_conv	600
coq-corn.8.16.0	CoRN.ftc.FunctSums.FSumx_pred'	600
coq-qcert.2.2.0	Qcert.Translation.Lang.OQLtoNRAEnv.OQLtoNRAEnv.correct.nraenv_of_select_expr_correct	600
coq-qcert.2.2.0	Qcert.NNRCMR.Lang.NNRCMR.NNRCMR.SemanticsLazy.mr_chain_lazy_eval_progress	600
coq-qcert.2.2.0	Qcert.LambdaNRA.Lang.LambdaNRA.LambdaNRA.Semantics.lambda_nra_eval_unop_eq	600	0	synth with cache (only 1: intuition discriminate).	0.022415	1
coq-qcert.2.2.0	Qcert.LambdaNRA.Lang.LambdaNRA.LambdaNRA.Semantics.lambda_nra_eval_product_eq	600	0	synth with cache (only 1: reflexivity).	0.022301	1
coq-qcert.2.2.0	Qcert.Translation.Lang.LambdaNRAtoNRAEnv.LambdaNRAtoNRAEnv.Translation.nraenv_of_lnra_lambda_correct	600
coq-corn.8.16.0	CoRN.reals.faster.ARArith.ARarith.ARinvT_irrelevant	600
coq-qcert.2.2.0	Qcert.TypeSystem.TBrandModel.TBrandModel.brand_model_prop.brand_model_domain	600
coq-corn.8.16.0	CoRN.liouville.QX_root_loc.QX_root.Sum0_ring_hom	600
coq-corn.8.16.0	CoRN.model.metric2.L1metric.L1Norm_nonneg	600
coq-corn.8.16.0	CoRN.reals.fast.CRcorrect.AbsSmall_Qabs	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpUsage.NNRSimpUsage.sub.var_usage_sub_pre	600
coq-qcert.2.2.0	Qcert.Driver.CompCorrectness.CompCorrectness.eval_preserved.camp_to_nra_preserves_eval	600
coq-corn.8.16.0	CoRN.reals.R_morphism.morphism.map_pres_ap_zero	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection14.Fourteen.galT	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCShadow.NNRCShadow.nnrc_eval_single_context_var_cons_keepone	600
coq-tlc.20200328	TLC.LibFun.Combinators.compose_id_r	600	2.0	synth with cache (only 1: intros; only 1: auto).	0.013824	4
coq-tlc.20200328	TLC.LibFun.Combinators.compose_eq_r	600	0.0	synth with cache (only 1: intros; only 1: subst ~).	0.012396	2
coq-tlc.20200328	TLC.LibFix.pfun_equiv_equiv	600	13.7.15.0.0.1.1.3.1.0.0.2.0.2.0.0	synth with cache (only 1: intros m; only 1: introv [Tr To]; only 1: split; only 1: unfolds * refl; only 1: intros H3; only 1: intros P'; only 1: RelationClasses.reduce; only 1: auto; only 1: intros H3; only 1: intros x; only 1: intros z; only 1: intros M1; only 1: intros _tmp_tactician2; only 1: intros y; only 1: intros Hxz; only 1: eauto).	0.534580	61
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCEq.cNNRCEq.proper_cNNRCGetConstant	600	0	synth with cache (only 1: solve_proper).	0.055039	1
coq-qcert.2.2.0	Qcert.Translation.Model.EJsonToEJsonMut.EJsonToEJsonMut.ModelRoundTrip.key_encode_not_coll	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: match_destr; only 1: match_destr).	0.187213	13
coq-corn.8.16.0	CoRN.reals.fast.CRpower.CRpower_N_bounded_N_power	600
coq-corn.8.16.0	CoRN.reals.Bridges_iso.bridges_axioms_imply_ours.proofs_in_TCS.Psup_unfolded2_informative	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_zero_ap_lin	600	1.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.036906	4
coq-corn.8.16.0	CoRN.algebra.COrdFields.default_greater	600	2	synth with cache (only 1: algebra).	0.015809	3
coq-corn.8.16.0	CoRN.algebra.Expon.More_Nexp.nexp_distr_div	600
coq-corn.8.16.0	CoRN.transc.Exponential.Log_resp_less	600
coq-corn.8.16.0	CoRN.metric2.StepFunctionMonad.JoinGlue	600
coq-corn.8.16.0	CoRN.reals.fast.CRFieldOps.CR_b_pos	600
coq-corn.8.16.0	CoRN.model.metric2.LinfMetricMonad.UniformlyContinuousFunctions.Map_uc	600
coq-qcert.2.2.0	Qcert.NNRC.Lang.NNRCShadow.NNRCShadow.unshadow_id_idempotent	600	0.0.0	synth with cache (only 1: apply shadow_free_unshadow_id; only 1: apply unshadow_shadow_free; only 1: apply unshadow_avoid).	0.043304	3
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection12.PFTwelve.Twelve_8_to_16.Ltype1	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection10.Ten.AnotherMaximal.max_normed_2Elem_signaliser	600
coq-qcert.2.2.0	Qcert.TypeSystem.RConsistentSubtype.RConsistentSubtype.rtype_join_meet.consistent_rtype_join2	600
coq-corn.8.16.0	CoRN.complex.NRootCC.NRootCC_4.NRootCC_4_ap_real.NRootCC_4_equations.nrCC4_a9	600
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.ac_subst_nholes	600
coq-corn.8.16.0	CoRN.reals.Cauchy_CReals.R_CReals.expand_Q_R_2	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.prTIirr1_mod	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Minimum.equiv_imp_eq_min	600
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompPaths.exists_path_from_source_target_completeness_camp	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.equivs.aec_substs_subst_swap_simpl	600
coq-corn.8.16.0	CoRN.algebra.CPoly_ApZero.interpolation.Proper_instance_1	600
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.SplitRMap	600
coq-corn.8.16.0	CoRN.algebra.CPoly_Degree.Degree_props.degree_le_c_	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.defHC	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCShadow.cNNRCShadow.core.unshadow_preserve_core	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.RTypeMeetJoin.rtype_meet_compatible_records_domain_eq_l	600
coq-qcert.2.2.0	Qcert.NRA.Optim.NRAExtRewrite.NRAExtRewrite.eand_comm	600
coq-qcert.2.2.0	Qcert.Data.ModelTyping.TData.TData.data_type_Recs_closed_domain	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection7.Seven.SCN_normed_constrained	600
coq-corn.8.16.0	CoRN.reals.Q_dense.Rational_sequence.l_less_r	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.arith.minimum_spec_nat	600
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.StepFfoldProp_mor_Proper	600	0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until x; only 1: induction x; only 1: intros until y; only 1: induction y; only 1: auto with *; only 1: unfold StepF_eq; only 1: simpl; only 1: unfold StepFfoldProp; only 1: simpl; only 1: intuition; only 1: intros y; only 1: intros H0; only 1: unfold StepF_eq in H0; only 1: rewrite MapGlue in H0; only 1: rewrite ApGlue in H0; only 1: destruct H0 as [H0l H0r]; only 1: change (StepFfoldProp x1 /\ StepFfoldProp x2 <-> StepFfoldProp y); only 1: rewrite (IHx1 (SplitL y o)); only 1: rewrite (IHx2 (SplitR y o)); only 1: apply : StepFfoldPropglue; only 1: auto with *; only 1: auto with *).	0.359315	24
coq-tlc.20200328	TLC.LibListExec.app_eq	600
coq-corn.8.16.0	CoRN.coq_reals.Rreals.R_is_OrdField	600
coq-corn.8.16.0	CoRN.reals.Q_dense.Rational_sequence.trichotomy	600	5.2.0	synth with cache (only 1: intros; only 1: simpl; only 1: assumption).	0.085546	10
coq-corn.8.16.0	CoRN.algebra.Cauchy_COF.Structure.Field_Structure.R_recip_strext	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCVars.cNNRCVars.really_fresh_from_avoid	600
coq-qcert.2.2.0	Qcert.NRA.Optim.NRARewrite.NRARewrite.map_singleton	600
coq-tlc.20200328	TLC.LibListExec.fold_right_eq	600	6.4.1.0.0	synth with cache (only 1: intros until l; only 1: induction ~ l; only 1: simpl; only 1: rewrite <- app_cons_one_r; only 1: rewrite ~ IHl).	0.138220	16
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.trproject_nil_fun_correctness	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.FTsupp0_sub	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.ops_for_s.AnnOfS.recD1	600
coq-corn.8.16.0	CoRN.metric2.StepFunction.StepFunction.StepF_Qeq_sym	600
coq-corn.8.16.0	CoRN.complex.CComplex.Complex_Numbers.cc_cr_mult_mon	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_4_10_to_16.notStype5	600
coq-corn.8.16.0	CoRN.reals.fast.CRArith.CRAbsSmall_ball	600
coq-corn.8.16.0	CoRN.ftc.FunctSums.FSum_FSum0'	600
coq-qcert.2.2.0	Qcert.NNRCMR.Lang.NNRCMR.NNRCMR.SemanticsLazy.mr_chain_lazy_eval_correct	600
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRS.NNRS.Core.ext.nnrs_core_fequal	600
coq-corn.8.16.0	CoRN.model.metric2.L1metric.L1Norm_Zero	600
coq-corn.8.16.0	CoRN.reals.fast.CRcorrect.Cauchy_IR_ap_as_CR_ap_1	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpUsage.NNRSimpUsage.sub.stmt_var_usage_sub_restricted_Forall_dec	600
coq-qcert.2.2.0	Qcert.Driver.CompCorrectness.CompCorrectness.eval_preserved.nra_to_nraenv_core_preserves_eval	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimp.NNRSimp.Core.dec.nnrs_imp_core_eqdec	600
coq-tlc.20200328	TLC.LibOtherDemos.SubtermIndDemos.tree_induct_forall	600
coq-qcert.2.2.0	Qcert.CAMP.Lang.CAMPUtil.CAMPUtil.Debug.gather_successes_presult_same	600
coq-qcert.2.2.0	Qcert.Imp.Lang.ImpData.ImpData.dec.imp_data_expr_eqdec	600
coq-qcert.2.2.0	Qcert.NNRCMR.Lang.NNRCMR.NNRCMR.mr_library.coll_function_no_free_vars	600	0.0.2.9.1.0.0.0	synth with cache (only 1: split; only 1: reflexivity; only 1: intros x; only 1: intros H; only 1: simpl; only 1: destruct H; only 1: congruence; only 1: contradiction).	0.087076	20
coq-tlc.20200328	TLC.LibListSub.Prefix.prove_prefix_snoc	600
coq-corn.8.16.0	CoRN.tactics.FieldReflection.Field_Interpretation_Function.refl_interpF	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection6.Six.OneType.Plength1Prod.coKS	600
coq-corn.8.16.0	CoRN.reals.R_morphism.morphism.map_pres_inv_unfolded	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection14.Fourteen.nsKM	600
coq-tlc.20200328	TLC.LibFun.fupdate_eq	600
coq-tlc.20200328	TLC.LibFix.Inhab_partial	600
coq-tlc.20200328	TLC.LibListZ.Update.read_update_same	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.z3seq_props.z3seqE	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.initial_conds.b1_eq	600
coq-qcert.2.2.0	Qcert.NRA.Lang.NRA.NRA.Semantics.EvalCorrect.nra_eval_map_correct	600
coq-qcert.2.2.0	Qcert.CAMP.Lang.CAMP.CAMP.camp_eqdec	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRC.cNNRC.Syntax.nnrc_eqdec	600
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCEq.cNNRCEq.proper_cNNRCLet	600
coq-corn.8.16.0	CoRN.reals.fast.CRpower.CRpower_N_correct'	600
coq-qcert.2.2.0	Qcert.OQL.Lang.OQL.OQL.oql_order_by_expr_eqdec	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.s_props.s_maj	600
coq-corn.8.16.0	CoRN.metric2.Graph.Graph.CompactGraph_graph	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_ap_zero_plus	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.OrdField_basics.ap_imp_less	600
coq-corn.8.16.0	CoRN.algebra.CPoly_NthCoeff.NthCoeff_def.nth_coeff_strext	600
coq-corn.8.16.0	CoRN.algebra.CPoly_NthCoeff.NthCoeff_props.coeff_Sm_lin	600	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: algebra).	0.035495	3
coq-tlc.20200328	TLC.LibFset.FsetImpl.Operations.inter_finite	600	1.15.6.1.0.0.0	synth with cache (only 1: introv [L1 E1] [L2 E2]; only 1: exists (L1 ++ L2); only 1: intros x; only 1: rewrite mem_app_eq; only 1: intuition eauto using (foreach_union (A:=A)); only 1: destruct H; only 1: auto).	0.102158	30
coq-tlc.20200328	TLC.LibFset.FsetImpl.Properties.in_union	600	0.0.0.4.0	synth with cache (only 1: intros; only 1: applys prop_ext; only 1: split; only 1: auto using (List.in_app_or (A:=A)), (List.in_or_app (A:=A)); only 1: auto using (List.in_app_or (A:=A)), (List.in_or_app (A:=A))).	0.038423	9
coq-tlc.20200328	TLC.LibFset.Properties.notin_empty	600	1.0.1	synth with cache (only 1: intros R; only 1: intros _tmp_tactician0; only 1: false * in_empty_inv).	0.020565	5
coq-corn.8.16.0	CoRN.algebra.COrdFields2.PosP_properties.odd_power_cancel_pos	600
coq-tlc.20200328	TLC.LibEnv.Properties.map_keys_single	600
coq-corn.8.16.0	CoRN.algebra.Expon.More_Nexp.nexp_resp_leEq_neg_odd	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.tac_twp_value	600
coq-corn.8.16.0	CoRN.reals.faster.ApproximateRationals.order_embedding_iff	600	0.0.1.0.0.0.7	synth with cache (only 1: split; only 1: intros ?; only 1: apply (order_preserving f); only 1: easy; only 1: intros E; only 1: apply (order_reflecting _) in E; only 1: easy).	0.059998	15
coq-corn.8.16.0	CoRN.reals.faster.ApproximateRationals.approximate_rationals_more.aq_shift_opp_2	600	0.0	synth with cache (only 1: rewrite aq_shift_correct; only 1: easy).	0.049816	2
coq-corn.8.16.0	CoRN.metric2.ProductMetric.ProductMetric.ProductMS_decidable	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection3.BGsection3.FrobeniusQuotient.Frobenius_quotient	600
coq-qcert.2.2.0	Qcert.Data.Operators.GroupBy.GroupBy.normalized.group_by_nested_eval_normalized	600
coq-corn.8.16.0	CoRN.reals.fast.CRFieldOps.CR_b_upperBound	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection3.CyclicTIisoReflexion.Interpretation.tr_Lmodel_subproof	600
coq-corn.8.16.0	CoRN.model.Zmod.Zm.zm.zm_group.Zm_plus_strext	600
coq-qcert.2.2.0	Qcert.TypeSystem.RConsistentSubtype.RConsistentSubtype.rtype_join_meet.consistent_rtype_meet	600
coq-corn.8.16.0	CoRN.complex.NRootCC.NRootCC_4.NRootCC_4_ap_real.nrootCC_4_ap_real	600
coq-qcert.2.2.0	Qcert.TypeSystem.RSubtype.RSubtype.SRec_open	600
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.equivs.ac_subst_swap_neq	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.equivs.nraenv_core_ctxt_equiv_strict_equiv1	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.RTypeMeetJoin.mj.rtype_join₀_wf	600
coq-qcert.2.2.0	Qcert.Driver.CompCorrectness.CompCorrectness.eval_preserved.correct_driver_preserves_eval_dnnrc_typed	600	0.0.1.0.0.0.1.0.1.0.0.3.1.0.1.0.1.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Forall_forall; only 1: intros; only 1: simpl in H; only 1: destruct dv; only 1: simpl in *; only 1: elim H0; only 1: intros; only 1: rewrite <- H1; only 1: clear H0; only 1: trivial_same_query; only 1: intros; only 1: contradiction; only 1: simpl in *; only 1: elim H; only 1: intros; only 1: contradiction; only 1: simpl in *; only 1: elim H; only 1: intros; only 1: contradiction).	2.331192	31
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.SplitL_wd_Proper	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Minimum.Min_leEq_Max	600
coq-corn.8.16.0	CoRN.reals.Q_dense.Rational_sequence.G_m_n_lower	600
coq-tlc.20200328	TLC.LibListExec.combine_eq	600
coq-corn.8.16.0	CoRN.algebra.CPoly_Degree.Degree_props.degree_c_	600
coq-corn.8.16.0	CoRN.liouville.Zlcm.Zlcm_spec	600
coq-smtcoq.2.0+8.11	SMTCoq.Trace.Sat_Checker.resolution_checker_correct	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.array_cons_frame	600
coq-qcert.2.2.0	Qcert.Data.ModelTyping.TData.subtype.lookup_diff_sublist	600
coq-corn.8.16.0	CoRN.algebra.Cauchy_COF.Structure.Order.Rlt_strict	600
coq-corn.8.16.0	CoRN.transc.Exponential.Log_less_Zero	600
coq-corn.8.16.0	CoRN.reals.faster.AQmetric.AQmetric.ARtoCR_approx	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixAB.AppendixA.A5.nsCG	600
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompPaths.exists_path_from_source_target_completeness_nnrc	600	0	synth with cache (only 1: apply exists_path_from_source_target_completeness_cnd).	2.677974	1
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.cfdot_prTIirr_red	600
coq-qcert.2.2.0	Qcert.Driver.CompDriver.CompDriver.CompPaths.exists_path_from_source_target_completeness_tech_rule	600	1.0.0.1	synth with cache (only 1: intros until dv; only 1: destruct dv; only 1: reflexivity; only 1: prove_exists_path_complete).	10.662482	6
coq-qcert.2.2.0	Qcert.Data.Operators.Iterators.Iterators.MapProductUtils.omap_product_cons_none_first	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection10.Ten.AnotherMaximal.sigma'_not_uniq	600
coq-corn.8.16.0	CoRN.complex.CComplex.I_properties.Re_wd	600
coq-corn.8.16.0	CoRN.complex.CComplex.I_properties.Im_wd	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros c; only 1: intros c'; only 1: elim c; only 1: intros x; only 1: intros y; only 1: elim c'; only 1: intros x'; only 1: intros y'; only 1: simpl; only 1: unfold cc_eq; only 1: simpl; only 1: intros; only 1: elim H; only 1: auto).	0.202335	14
coq-corn.8.16.0	CoRN.algebra.CFields.Field_axioms.CField_is_CField	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.def_t_form	600
coq-tlc.20200328	TLC.LibMap.empty_inst	600	0.67.2.8.3	synth with cache (only 1: intros; only 1: constructors ~; only 1: intros ?; only 1: apply (LibSet.empty_impl (A:=A)); only 1: assumption).	2.567885	3313
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_4_10_to_16.pgt2	600	0	synth with cache (only 1: by rewrite odd_gt2 ?mFT_odd ?cardG_gt1).	0.428964	1
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.MmaxFTsupp.FTsupp1_sub	600
coq-corn.8.16.0	CoRN.metric2.StepFunction.StepFunction.SplitR_resp_Qeq	600
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvOptimizer.NRAEnvOptimizer.trproject_over_rec_fun_correctness	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.ops_for_s.AnnOfS.recD4	600
coq-tlc.20200328	TLC.LibOtherDemos.LibVarDemos.LibVarDemo.test_notin_solve_2	600
coq-tlc.20200328	TLC.LibOtherDemos.LibVarDemos.LibVarDemo.test_notin_solve_3	600	8.0	synth with cache (only 1: intros; only 1: auto).	0.039143	10
coq-tlc.20200328	TLC.LibOtherDemos.LibVarDemos.LibVarDemo.test_neq_solve	600	0.0	synth with cache (only 1: intros; only 1: eauto).	0.041521	2
coq-tlc.20200328	TLC.LibOtherDemos.LibVarDemos.LibVarDemo.test_fresh_solve_2	600	1.0	synth with cache (only 1: intros; only 1: fresh_solve).	0.138792	3
coq-tlc.20200328	TLC.LibOtherDemos.LibVarDemos.LibVarDemo.test_fresh_solve_4	600	1.0	synth with cache (only 1: intros; only 1: fresh_solve).	0.133563	3
coq-tlc.20200328	TLC.LibListSub.PrefixClosed.prefix_closure_is_prefix_closed	600
coq-corn.8.16.0	CoRN.metric2.Compact.Compact.CompactCompleteSubset	600
coq-corn.8.16.0	CoRN.reals.R_morphism.simplification.with_plus.f_pres_minus	600
coq-tlc.20200328	TLC.LibFun.fupdate_same	600
coq-tlc.20200328	TLC.LibFix.Another.inclusion_optimal_gonthier	600
coq-corn.8.16.0	CoRN.reals.fast.CRArith.lower_CRapproximation	600
coq-tlc.20200328	TLC.LibListZ.UpdateNoInhab.update_update_neq	600
coq-tlc.20200328	TLC.LibListZ.Map.length_map	600	3.0.0.0.0.3.5.0	synth with cache (only 1: intros; only 1: induction l; only 1: rew_listx; only 1: auto; only 1: rewrite (map_cons (A:=A) (B:=B)); only 1: rewrite LibList.length_cons; only 1: rewrite LibList.length_cons; only 1: firstorder).	0.293020	19
coq-tlc.20200328	TLC.LibVar.fresh_single_notin	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpUsage.NNRSimpUsage.sub.stmt_var_usage_sub_seq_proper	600
coq-corn.8.16.0	CoRN.reals.fast.CRcorrect.Cauchy_IR_inv_as_CRinv_pos	600
coq-tlc.20200328	TLC.LibGraph.weight_nil	600	6	synth with cache (only 1: trivial).	0.076182	7
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_plus_op_wd	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.infinity_of_cordfields.nring_ap_zero_imp	600
coq-corn.8.16.0	CoRN.algebra.CPoly_NthCoeff.NthCoeff_props.coeff_Sm_mult_x_	600
coq-corn.8.16.0	CoRN.algebra.COrdFields2.One_div_succ_properties.one_div_succ_resp_less	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeNorm.RTypeNorm.normalize_rtype₀_wf	600
coq-corn.8.16.0	CoRN.algebra.CRings.CRing_axioms.mult_assoc	600
coq-corn.8.16.0	CoRN.algebra.CRings.CRing_axioms.mult_commutes	600	0.0	synth with cache (only 1: elim CRing_is_CRing; only 1: auto).	0.032199	2
coq-tlc.20200328	TLC.LibEnv.StructProperties.empty_push_inv	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.heap.tac_wp_cmpxchg_fail	600
coq-corn.8.16.0	CoRN.reals.faster.ApproximateRationals.approximate_rationals_more.aq_approx_dlog2	600
coq-qcert.2.2.0	Qcert.TypeSystem.RType.RType.well_formed_rtypes.rtype_rect	600
coq-corn.8.16.0	CoRN.reals.fast.CRstreams.mult_Streams_zl	600
coq-qcert.2.2.0	Qcert.Data.Model.DDataNorm.DDataNorm.dnormalize_normalized_eq	600
coq-corn.8.16.0	CoRN.reals.fast.CRpower.NatPowSpec_instance_0	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection3.CyclicTIisoReflexion.Interpretation.unsat_match	600
coq-tlc.20200328	TLC.LibMultiset.single_inst	600	2.0	synth with cache (only 1: constructor; only 1: constructor).	0.013528	4
coq-corn.8.16.0	CoRN.model.Zmod.Zm.zm.zp_def.zp_nonzero.Zp_nonz_relprime	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixC.AppendixC.ExpandHypotheses.nz_psi	600
coq-qcert.2.2.0	Qcert.TypeSystem.RSubtype.RSubtype.subtype_both_dec	600
coq-corn.8.16.0	CoRN.algebra.CGroups.CGroup_basics.cg_minus_unfolded	600	5.0.1.0.2.0.0.0.0	synth with cache (only 1: intros x; only 1: elim (cg_inverse G x); only 1: intros a; only 1: intros nx; only 1: intros y; only 1: elim (cg_inverse G x); only 1: intros H1; only 1: intros H4; only 1: algebra).	0.080727	17
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.sHC_HU	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_arith.DefinitionOfA.a4	600	4	synth with cache (only 1: easy).	0.080855	5
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.sS20	600	0	synth with cache (only 1: by apply : seqInd_conjC_subset1 ; rewrite /= ?defMs).	0.394991	1
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.GlueAp	600
coq-qcert.2.2.0	Qcert.TypeSystem.RConsistentSubtype.RConsistentSubtype.rtype_join_meet.rtype_meet_most	600
coq-corn.8.16.0	CoRN.algebra.CPoly_Degree.Degree_props.degree_le_Sum	600
coq-corn.8.16.0	CoRN.algebra.Expon.More_Nexp.nexp_resp_le'	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Minimum.Min_leEq_Max'	600
coq-smtcoq.2.0+8.11	SMTCoq.Trace.Euf_Checker.Checker.euf_checker_correct	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.mapsto_seq_array	600
coq-corn.8.16.0	CoRN.algebra.Cauchy_COF.Structure.Auxiliary.Eq_alt_1	600
coq-corn.8.16.0	CoRN.transc.Exponential.Log_recip'	600
coq-corn.8.16.0	CoRN.reals.faster.AQmetric.AQmetric.Proper_instance_1	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection14.Fourteen.indexMK	600
coq-qcert.2.2.0	Qcert.Data.Operators.Iterators.Iterators.ProductUtils.oproduct_cons	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_3_to_5.prTIsign0	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection10.Ten.beta_noncyclic_uniq	600
coq-corn.8.16.0	CoRN.complex.CComplex.cc_IR_properties.cc_IR_nring	600
coq-corn.8.16.0	CoRN.algebra.CFields.Field_multiplication.mult_cancel_lft	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.inj_iff	600
coq-corn.8.16.0	CoRN.algebra.CFields.Div_properties.x_mult_y_div_z	600	6.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros m; only 1: intros Hz; only 1: apply mult_assoc).	0.248854	11
coq-corn.8.16.0	CoRN.util.Qsums.Σ_Qball_pos_bounds	600
coq-qcert.2.2.0	Qcert.cNRAEnv.Context.cNRAEnvContext.cNRAEnvContext.equivs.CcNRAEnvPlug_proper	600
coq-corn.8.16.0	CoRN.reals.fast.CRFieldOps.CRmult_uncurry_eq	600
coq-tlc.20200328	TLC.LibMap.Properties.indom_of_indom_update_at_indom	600
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.equivs.nra_ctxt_equiv_strict_equiv1	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.MmaxFTsupp.FTsupp1_neq0	600
coq-qcert.2.2.0	Qcert.Utils.Encode.Encode.in_map_key_encode	600	1.0.5	synth with cache (only 1: intros; only 1: apply in_map_iff; only 1: eauto).	0.096003	9
coq-tlc.20200328	TLC.LibOtherDemos.inter_union_disjoint_right	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.RTypeMeetJoin.mj.map_rtype_join₀_domain_sublist	600
coq-corn.8.16.0	CoRN.metric2.StepFunction.StepFunction.SplitRSplitR	600
coq-corn.8.16.0	CoRN.metric2.Compact.Compact.CompactTotallyBounded.CompactImproveApproxCauchy1	600
coq-corn.8.16.0	CoRN.reals.R_morphism.simplification.with_plus.f_pres_min	600
coq-tlc.20200328	TLC.LibFun.FunctionImage.image_covariant	600
coq-tlc.20200328	TLC.LibFix.complete_of_locally_and_globally_complete	600
coq-tlc.20200328	TLC.LibListZ.Map.map_update	600
coq-qcert.2.2.0	Qcert.NNRSimp.Lang.NNRSimpUsage.NNRSimpUsage.sub.stmt_var_usage_sub_if_proper	600
coq-corn.8.16.0	CoRN.reals.fast.CRArith.Qle_CRle_r	600
coq-qcert.2.2.0	Qcert.Data.Model.DataNorm.DataNorm.data_normalized_dcoll_Forall	600
coq-qcert.2.2.0	Qcert.Data.Model.DataLift.DataLift.unsdstring_is_string	600
coq-qcert.2.2.0	Qcert.Data.Model.DataLift.DataLift.ondcoll_dcoll	600	0	synth with cache (only 1: reflexivity).	0.050766	1
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_inv_op_strext	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.infinity_of_cordfields.up_to_four.less_plusOne	600
coq-corn.8.16.0	CoRN.algebra.CSums.Sums.Sum_big_shift	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_17_to_19.defS	600
coq-qcert.2.2.0	Qcert.Imp.Lang.ImpEq.NNRSimpEq.proper.ImpStmtAssign	600
coq-corn.8.16.0	CoRN.algebra.CRings.Ring_basics.cring_mult_ap_zero_op	600
coq-tlc.20200328	TLC.LibEnv.MoreProperties.get_push	600
coq-tlc.20200328	TLC.LibEnv.OkProperties.ok_push_inv_ok	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: inverts H as H1 H2; only 1: false (empty_push_inv H1); only 1: destructs 3 (eq_push_inv H); only 1: subst ~).	0.080570	5
coq-corn.8.16.0	CoRN.reals.faster.ApproximateRationals.approximate_rationals_more.aq_div_above	600
coq-corn.8.16.0	CoRN.metric2.FinEnum.Finite.FinEnum_ball_eq	600
coq-qcert.2.2.0	Qcert.TypeSystem.RType.RType.lookup_map_some'	600
coq-corn.8.16.0	CoRN.reals.fast.CRstreams.StreamGenerators.iterate_stop_indep	600
coq-qcert.2.2.0	Qcert.TypeSystem.RType.other.Float_canon	600	0.0.0	synth with cache (only 1: apply rtype_fequal; only 1: simpl; only 1: trivial).	0.039719	3
coq-corn.8.16.0	CoRN.model.metric2.Qmetric.Qball_opp	600
coq-corn.8.16.0	CoRN.model.metric2.Qmetric.gball_Qabs	600	2.2.0.2.0.0.0.5.12.0.6	synth with cache (only 1: destruct a; only 1: rewrite Qabs_Qle_condition; only 1: simpl; only 1: split; only 1: intros H; only 1: unfold Qminus; only 1: exact H; only 1: unfold Qminus; only 1: intros; only 1: destruct e; only 1: assumption).	0.140410	40
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.sub_brand.sub_brand_in_trans	600
coq-smtcoq.2.0+8.11	SMTCoq.spl.Arithmetic.Arith.Valid.valid_check_spl_arith	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection3.Three.cfCycTI_E	600
coq-corn.8.16.0	CoRN.algebra.CAbGroups.Nice_Char.inv_inv'	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection3.Three.tiV	600	0	synth with cache (only 1: by case : ctiW ).	0.051710	1
coq-tlc.20200328	TLC.LibMultiset.Instances.in_single_eq_inst	600
coq-hott.8.11	HoTTBookExercises.Book_1_1_refl	600	1.7.0.5.0	synth with cache (only 1: intros; only 1: revert f; only 1: intros y; only 1: cbn; only 1: reflexivity).	0.134423	18
coq-iris-heap-lang.3.4.0	iris.heap_lang.primitive_laws.lifting.twp_fork	600
coq-qcert.2.2.0	Qcert.NRA.Context.NRAContext.NRAContext.equivs.nra_ctxt_equiv_sym	600	2.33.0.0.0.0.4	synth with cache (only 1: red; only 1: unfold nra_ctxt_equiv; only 1: intros; only 1: specialize (H ps); only 1: match_destr; only 1: match_destr_in H; only 1: intuition).	0.358066	46
coq-smtcoq.2.0+8.11	SMTCoq.lia.Lia.certif.Proof.wf_t_atom	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.erased_head_step_head_step_NewProph	600
coq-qcert.2.2.0	Qcert.EJson.Model.EJsonNorm.EJsonNorm.ejson_normalize_idem	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection2.Two.piCL	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixC.AppendixC.ExpandHypotheses.odd_p	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.Resolve_3_vals_head_stuck	600	76.3.3.1.2.18.0	synth with cache (only 1: inversion_clear 1; only 1: absurd (1 < 0)%Z; only 1: intros H2; only 1: absurd (false = true); only 1: intuition congruence; only 1: easy; only 1: easy).	0.418984	110
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.head_step_erased_prim_step_store	600	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hw; only 1: eexists; only 1: eexists; only 1: eexists; only 1: apply head_prim_step; only 1: econstructor; only 1: rewrite /erase_state /state_upd_heap /= lookup_erase_heap; only 1: by destruct lookup; simplify_eq).	0.221981	8
coq-corn.8.16.0	CoRN.algebra.CGroups.cgroups_apartness.cg_add_ap_zero	600
coq-corn.8.16.0	CoRN.algebra.CGroups.CGroup_Ops.included_FInv	600	2.0	synth with cache (only 1: intros H; only 1: assumption).	0.017936	4
coq-hott.8.11	HoTT.Classes.theory.rationals.contents.Qpos_mult	600	0.0	synth with cache (only 1: exists 1; only 1: apply lt_0_1).	0.034551	2
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_arith.BoundsOnA.hanson_5	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.harmonic_numbers.ghn_small	600
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.StepFfoldPropForall_Map2	600
coq-corn.8.16.0	CoRN.algebra.CPoly_Degree.Degree_props.degree_plus_rht	600
coq-qcert.2.2.0	Qcert.EJson.Model.EJson.EJson.ejsonInd2	600
coq-corn.8.16.0	CoRN.algebra.Expon.Zexp_properties.zexp_nexp	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Absolute.ABSIR_wd	600
coq-corn.8.16.0	CoRN.algebra.CMonoids.CMonoid_basics.is_CMonoid_proof_irr	600
coq-smtcoq.2.0+8.11	SMTCoq.Trace.Euf_Checker.Checker.add_roots_correct	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_load_offset	600
coq-corn.8.16.0	CoRN.algebra.CMonoids.FS_id	600
coq-corn.8.16.0	CoRN.algebra.CMonoids.id_is_rht_unit	600	2.1.1.1.1.0	synth with cache (only 1: intros env; only 1: unfold FS_as_CSetoid; only 1: intros assf; only 1: simpl; only 1: intros mult; only 1: apply eq_reflexive).	0.061164	12
coq-tlc.20200328	TLC.LibList.App.app_cons_r	600	5.5.0.0.2.15.1	synth with cache (only 1: intros l; only 1: intros; only 1: induction l1; only 1: rewrite_all ~ app_nil_l; only 1: rewrite_all ~ app_cons_l; only 1: f_equal; only 1: auto with arith).	0.060695	35
coq-tlc.20200328	TLC.LibList.FoldLeft.fold_left_cons	600	4.1.0	synth with cache (only 1: intros; only 1: simpl; only 1: split).	0.020292	8
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.correctness.nnrs_uncross_shadow_eval	600
coq-corn.8.16.0	CoRN.transc.Exponential.Log_div'	600
coq-corn.8.16.0	CoRN.reals.faster.AQmetric.AQmetric.AQball_opp	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection14.Fourteen.LM_cases	600
coq-qcert.2.2.0	Qcert.Data.Operators.Iterators.Iterators.FlattenUtils.oflatten_map_dcoll_id	600
coq-tlc.20200328	TLC.LibSet.empty_inst	600
coq-tlc.20200328	TLC.LibSet.single_inst	600	0.0.0	synth with cache (only 1: constructor; only 1: intros x; only 1: apply (empty_impl (A:=A))).	0.037588	3
coq-tlc.20200328	TLC.LibSet.Instances.in_extens_inst	600	0.0.3	synth with cache (only 1: constructor; only 1: intros; only 1: rewrite ~ set_ext_eq).	0.049098	6
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_6_t0_10.coKW1	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection2.BGsection2.QuasiRegularCyclic.rank_proj_eigenspace_cycle	600
coq-corn.8.16.0	CoRN.algebra.CFields.Div_properties.div_wd	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.valid_check_bbDiseq	600
coq-tlc.20200328	TLC.LibMap.Properties.indom_update_of_indom	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.MmaxFTsupp.Fcore_sub_FTsupp1	600
coq-corn.8.16.0	CoRN.reals.fast.CRFieldOps.Qmult_uncurry_assoc	600
coq-qcert.2.2.0	Qcert.Utils.Encode.Encode.match_one_dollar_character	600
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.in_inter_of_in_inter_eq	600
coq-corn.8.16.0	CoRN.metric2.Prelength.Prelength_Space.trail	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.RTypeMeetJoin.mj.NoDup_domain_lookups_Permutation	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.check_symopp_bvor_length	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: revert bs1 bs2 N H; only 1: induction bsres as [| r rbsres]; only 1: intros; only 1: destruct bs1 in *; only 1: simpl in H; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: easy; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: easy; only 1: intros; only 1: destruct bs1 in *; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: easy; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: set (n' := Datatypes.length rbsres); only 1: fold n' in n, IHrbsres, H; only 1: simpl in IHrbsres; only 1: simpl in H; only 1: destruct (Lit.is_pos r) in H; only 1: destruct (t_form .[ Lit.blit r]) in H; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct (PArray.length a == 2) in H; only 1: destruct ((a .[ 0] == i) && (a .[ 1] == i0) || (a .[ 0] == i0) && (a .[ 1] == i)) in H; only 1: specialize (IHrbsres bs1 bs2 (N - 1)%N H); only 1: simpl; only 1: simpl in n; only 1: fold n' in n; only 1: unfold n; only 1: split; only 1: apply f_equal; only 1: easy; only 1: apply f_equal; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	3.934054	56
coq-qcert.2.2.0	Qcert.Utils.SortingDesc.LexicographicDataOrder.compare_spec	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.check_symopp_bvxor_length2	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: revert bs1 bs2 N H; only 1: induction bsres as [| r rbsres]; only 1: intros; only 1: destruct bs1 in *; only 1: simpl in H; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: easy; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: easy; only 1: intros; only 1: destruct bs1 in *; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: easy; only 1: destruct bs2 in *; only 1: simpl in *; only 1: easy; only 1: set (n' := Datatypes.length rbsres); only 1: fold n' in n, IHrbsres, H; only 1: simpl in IHrbsres; only 1: simpl in H; only 1: destruct (Lit.is_pos r) in H; only 1: destruct (t_form .[ Lit.blit r]) in H; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: destruct ((i1 == i) && (i2 == i0) || (i1 == i0) && (i2 == i)) in H; only 1: specialize (IHrbsres bs1 bs2 (N - 1)%N H); only 1: simpl; only 1: simpl in n; only 1: fold n' in n; only 1: unfold n; only 1: split; only 1: apply f_equal; only 1: easy; only 1: apply f_equal; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	5.182604	54
coq-corn.8.16.0	CoRN.reals.R_morphism.simplification.with_plus_less.f_pres_ap_zero	600
coq-corn.8.16.0	CoRN.metric2.Compact.Compact.CompactTotallyBounded.Qpower_inc	600
coq-tlc.20200328	TLC.LibFun.applyn_fix	600
coq-corn.8.16.0	CoRN.metric2.StepFunction.ApplicativeFunctor.Ap_composition_Qeq	600
coq-tlc.20200328	TLC.LibFix.rec_cofe	600
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.extension_approximation.extension_approximation_diff_bound	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.rounded_plus	600
coq-tlc.20200328	TLC.LibListZ.Remove.length_remove	600
coq-qcert.2.2.0	Qcert.Data.Model.DataNorm.DataNorm.normalize_data_forall_ndbool	600
coq-bits.1.1.0	Bits.spec.operations.properties.liftUnOpCons	600	3.45	synth with cache (only 1: apply val_inj; only 1: by trivial).	0.093090	50
coq-corn.8.16.0	CoRN.reals.fast.CRArith.CRmult_le_0_compat	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_cag_proof	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.infinity_of_cordfields.up_to_four.pos_two	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_17_to_19.coPUq	600
coq-corn.8.16.0	CoRN.metric2.Limit.LazyExists_proper	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_join_re.rtype_join_Bottom_r	600	0	synth with cache (only 1: prover1 τ).	0.028246	1
coq-corn.8.16.0	CoRN.algebra.CRings.int_injection.zring_diff	600
coq-corn.8.16.0	CoRN.algebra.CRings.NExp_properties.nexp_wd	600	2.0.0.1.0	synth with cache (only 1: intros y; only 1: intros g; only 1: intros H; only 1: intros z; only 1: algebra).	0.051271	8
coq-corn.8.16.0	CoRN.algebra.CRings.NExp_properties.nexp_two	600	20.0.0	synth with cache (only 1: intros x; only 1: simpl; only 1: algebra).	0.419111	23
coq-corn.8.16.0	CoRN.algebra.CRings.CRing_Ops.included_FNth	600	1.0	synth with cache (only 1: intros; only 1: assumption).	0.029365	3
coq-tlc.20200328	TLC.LibEnv.OkProperties.ok_concat_inv_l	600
coq-qcert.2.2.0	Qcert.JSON.Model.JSONNorm.JSONNorm.normalized_json_dec	600
coq-corn.8.16.0	CoRN.reals.faster.ApproximateRationals.approximate_rationals_more.aq_lt_mid	600
coq-corn.8.16.0	CoRN.metric2.FinEnum.Finite.Strong.HemiMetricStrongAlmostDecidableBody	600
coq-qcert.2.2.0	Qcert.TypeSystem.RType.other.some_lift_Rec₀	600
coq-smtcoq.2.0+8.11	SMTCoq.spl.Operators.Operators.check_distinct_spec	600
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.sub_brand.incl_sub_brands	600
coq-bbv.1.3	bbv.HexNotationWord.Unnamed_thm1	600	0	synth with cache (only 1: reflexivity).	0.037271	1
coq-tlc.20200328	TLC.LibMin.mmin_spec	600
coq-corn.8.16.0	CoRN.algebra.CAbGroups.Nice_Char.Build_CGroup'	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection3.Three.cycW1	600
coq-tlc.20200328	TLC.LibMultiset.Instances.union_comm_eq_inst	600
coq-hott.8.11	HoTTBookExercises.Book_2_1_Proofs_Are_Equal.Book_2_1_concatenation1_eq_Book_2_1_concatenation2	600
coq-hott.8.11	HoTTBookExercises.Book_3_6_solution_1	600	0.0.0.0.2	synth with cache (only 1: intros isHSet_A; only 1: refine (ishprop_sum _ _ _); only 1: intros a; only 1: intros na; only 1: exact (na a)).	0.041437	7
coq-mathcomp-apery.1.0.1	mathcomp.apery.binomialz.Pascal_z	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.rec_field_lt_dec	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.primitive_laws.lifting.wp_allocN_seq	600
coq-qcert.2.2.0	Qcert.EJson.Model.EJsonNorm.EJsonNorm.ejnobject_sort_content	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection2.Two.Dade_set_sdprod	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixC.AppendixC.ExpandHypotheses.pP	600
coq-smtcoq.2.0+8.11	SMTCoq.lia.Lia.certif.Proof.get_not_le_interp	600
coq-smtcoq.2.0+8.11	SMTCoq.cnf.Cnf.CHECKER.valid_check_True	600
coq-hott.8.11	HoTT.Classes.theory.rationals.contents.Q_dense	600
coq-hott.8.11	HoTT.Classes.theory.rationals.contents.enumerable.Qpos_enumerator	600	0.3.0	synth with cache (only 1: intros r; only 1: exists 1; only 1: apply lt_0_1).	0.085775	6
coq-smtcoq.2.0+8.11	SMTCoq.euf.Euf.certif.Proof.tunicity	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_arith.BoundsOnA.Observation_compare_a_a	600
coq-qcert.2.2.0	Qcert.Utils.Sublist.Sublist.sublist.sublist_trans	600	2.37.1	synth with cache (only 1: intros; only 1: rewrite H0 in H; only 1: auto).	0.075323	43
coq-topology.10.0.1	Topology.UrysohnsLemma.dr_total_order	600
coq-qcert.2.2.0	Qcert.Utils.Interleaved.interleaving.is_interleaved_map	600
coq-hott.8.11	HoTT.Classes.theory.int_abs.contents.int_abs_unique	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Absolute.AbsIRz_isz	600
coq-corn.8.16.0	CoRN.algebra.Expon.Zexp_properties.inv_zexp_odd	600
coq-corn.8.16.0	CoRN.metric2.Complete.RegularFunction.Cunit_fun_prf	600
coq-corn.8.16.0	CoRN.algebra.CMonoids.Th15.op_pres_Dbrack	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_cmpxchg_suc_offset_vec	600
coq-tlc.20200328	TLC.LibList.AppInversion.length_pos_inv_cons	600
coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.core.nnrs_stmt_uncross_shadow_under_preserves_core_b	600
coq-hott.8.11	HoTT.Spaces.BAut.Bool.AssumeUnivalence.nontrivial_negb_center_baut_bool	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection14.no_minSimple_odd_group	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_6_t0_10.W1lin	600
coq-tlc.20200328	TLC.LibSet.fold_eq_fold_list_repr	600
coq-corn.8.16.0	CoRN.model.Zmod.ZMod.zmod.Zmod_minus_intro	600
coq-corn.8.16.0	CoRN.algebra.CFields.CField_Ops.included_FDiv''	600
coq-corn.8.16.0	CoRN.model.Zmod.ZMod.zmod.Zmod_opp_zero	600	0.0.0	synth with cache (only 1: intros; only 1: apply Z_mod_zero_opp_full; only 1: auto with zarith).	0.030068	3
coq-qcert.2.2.0	Qcert.Utils.GroupByDomain.groupbydomain.concat_list_unnest_lookup_none	600
coq-tlc.20200328	TLC.LibMap.Properties.binds_of_indom_read	600
coq-hott.8.11	HoTT.Classes.implementations.field_of_fractions.Frac.contents.ml	600	0.0.0	synth with cache (only 1: intros q; only 1: intros r; only 1: refine {| num := num q * den r + num r * den q; den := den q * den r; den_ne_0 := _ |}).	0.053990	3
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection2.BGsection2.regular_abelem2_on_abelem2	600
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.single_incl_r_eq_of_in_single_eq_and_and_incl_in_eq	600
coq-corn.8.16.0	CoRN.metric2.Prelength.CompletePL	600
coq-qcert.2.2.0	Qcert.Utils.SortingDesc.LexicographicDataOrder.lt_compat	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Section16.FTtypeP	600
coq-corn.8.16.0	CoRN.metric2.Compact.Compact.CompactTotallyBounded.CompactTotallyBoundedIndexLemma	600
coq-bbv.1.3	bbv.Word.word0	600	0.0	synth with cache (only 1: intros a; only 1: apply (shatter_word a)).	0.041004	2
coq-tlc.20200328	TLC.LibFix.FixFun2_fix_partial	600
coq-tlc.20200328	TLC.LibListZ.TakeAndDrop.length_drop	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.compositions.uniform_compose	600
coq-topology.10.0.1	Topology.TietzeExtension.open_bounded_Tietze_extension_theorem	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Divz.divzN	600
coq-tlc.20200328	TLC.LibInt.Z_of_nat_O	600	0	synth with cache (only 1: reflexivity).	0.029052	1
coq-tlc.20200328	TLC.LibInt.mult_2_eq_plus	600	2.4.0.0	synth with cache (only 1: intros; only 1: change 2 with (1 + 1); only 1: Z.nzsimpl; only 1: trivial).	0.237793	10
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.list_beq_spec	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.pgcd.pp_lt_wf	600
coq-bits.1.1.0	Bits.spec.operations.properties.lift_right_id	600
coq-hott.8.11	HoTT.Spaces.No.Addition.Addition.plus_negate	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.infinity_of_cordfields.More_than_four.pos_twelve	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_mult_cr_one	600
coq-corn.8.16.0	CoRN.reals.fast.CRArith.CRmult_eq_0_reg_l	600
coq-poltac.0.8.11	PolTac.Nex.pols_test1	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection13.Thirteen.Thirteen_17_to_19.NirrW1	600
coq-corn.8.16.0	CoRN.metric2.Limit.LazyExists_tl	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.extract_interp_zero	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_join_re.map_rtype_join_sublist_l	600
coq-tlc.20200328	TLC.LibEnv.BindsProperties.binds_functional	600
coq-corn.8.16.0	CoRN.reals.faster.ApproximateRationals.approximate_rationals_more.MeetSemiLattice_Morphism_instance_0	600
coq-tlc.20200328	TLC.LibMonoid.MonoidInst.Monoid_of_Comm_monoid	600
coq-corn.8.16.0	CoRN.metric2.FinEnum.Finite.Strong.FinEnum_located	600
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.sub_brand.equiv_brands_eqdec	600
coq-corn.8.16.0	CoRN.algebra.CAbGroups.Group_Extras.nmult_plus	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection3.Three.nirrW1	600
coq-tlc.20200328	TLC.LibMultiset.Instances.union_assoc_eq_inst	600
coq-hott.8.11	HoTT.Classes.orders.naturals.naturals_order.nat_ne_0_ge_1	600
coq-hott.8.11	HoTTBookExercises.Book_3_13.naive_LEM_implies_AC	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.binomialz.binz_Znat_gt0	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.field_less_is_neq	600
coq-bits.1.1.0	Bits.spec.operations.properties.xorB0	600	1	synth with cache (only 1: by rewrite fromNat0; apply lift_right_id; do !elim).	0.106872	2
coq-iris-heap-lang.3.4.0	iris.heap_lang.metatheory.is_closed_weaken	600
coq-smtcoq.2.0+8.11	SMTCoq.classes.SMT_classes_instances.Z.gt_Z_B2P'	600
coq-smtcoq.2.0+8.11	SMTCoq.ReflectFacts.ReflectFacts.implyP	600
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.sub_brand.sub_brands_part	600	16.1	synth with cache (only 1: intros x; only 1: easy).	0.036104	19
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixC.AppendixC.ExpandHypotheses.E_1	600
coq-hott.8.11	HoTT.Classes.orders.nat_int.Univ.nat_int_order.le_iff_lt_S	600
coq-smtcoq.2.0+8.11	SMTCoq.lia.Lia.certif.Proof.valid_check_micromega	600
coq-corn.8.16.0	CoRN.model.structures.QposInf.Proper_instance_3	600
coq-hott.8.11	HoTT.Classes.implementations.binary_naturals.naturals.for_another_semiring.f_preserves_mult	600
coq-smtcoq.2.0+8.11	SMTCoq.cnf.Cnf.CHECKER.valid_check_ImmBuildDef	600
coq-tlc.20200328	TLC.LibWf.wf_measure2	600
coq-hott.8.11	HoTT.Pointed.pSusp.conn_map_loop_susp_unit	600
coq-qcert.2.2.0	Qcert.Utils.Sublist.Sublist.forallb_ordpairs_refl_sublist	600
coq-topology.10.0.1	Topology.UrysohnsLemma.Urysohns_Lemma_construction.U_dyadic_open	600
coq-qcert.2.2.0	Qcert.Utils.Interleaved.interleaving.is_interleaved_cons_nil	600
coq-hott.8.11	HoTT.Classes.theory.naturals.to_semiring_unique	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Absolute.AbsIR_resp_ap_zero	600
coq-corn.8.16.0	CoRN.algebra.Expon.Root_Unique.root_unique	600
coq-corn.8.16.0	CoRN.metric2.Complete.Monad_Laws.MonadLaw1	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.twp_faa_offset_vec	600
coq-tlc.20200328	TLC.LibList.AppInversion.length_pos_inv_last	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Absolute.AbsIR_eq_AbsSmall	600	0.0.21.0	synth with cache (only 1: intros; only 1: split; only 1: assumption; only 1: assumption).	0.085764	25
coq-hott.8.11	HoTT.Spaces.BAut.Bool.AssumeUnivalence.negb_baut_bool_bool_negb	600
coq-hott.8.11	HoTT.Classes.tactics.ring_tac.ring_almostring	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_6_t0_10.prDade_irr_on	600
coq-tlc.20200328	TLC.LibSet.fold_congruence	600
coq-hott.8.11	HoTT.Classes.implementations.peano_naturals.nat_lift.mul_S_r	600
coq-tlc.20200328	TLC.LibMap.Properties.index_of_binds	600
coq-hott.8.11	HoTT.Classes.implementations.peano_naturals.nat_lift.S_nat_1_plus	600	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: reflexivity).	1.338952	254
coq-hott.8.11	HoTT.Classes.implementations.field_of_fractions.FracField.contents.F_ring	600
coq-hott.8.11	HoTT.Spaces.Torus.TorusEquivCircles.TorusEquivCircle.t2c2t	600
coq-hott.8.11	HoTT.Classes.theory.ua_third_isomorphism.cong_quotient.equivalence_relation_quotient	600
coq-hott.8.11	HoTT.Spaces.Finite.decidable_fin	600
coq-bbv.1.3	bbv.Word.wordToNat_natToWord'	600
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.union_incl_inv_of_union_incl_eq	600
coq-topology.10.0.1	Topology.Completeness.closed_subset_of_complete.complete_subset_is_closed	600
coq-hott.8.11	HoTT.Spaces.No.Core.Surreals.OptionSort.NoInd.No_ind	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.compositions.continuous_compose	600
coq-hott.8.11	HoTT.Classes.orders.semirings.semiring_order.nonneg_mult_le_r	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.rho_computations.parametric.refines_h_iter	600
coq-hott.8.11	HoTT.Algebra.AbelianGroup.Abel.Abel_ind_hprop	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Divz.modz_ge0	600
coq-tlc.20200328	TLC.LibInt.plus_nat_eq_plus_int	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.pgcd.p_gcd_coeff_b_rec_zero	600
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Atom.Typing_Interp.Interp_Aux.compute_interp_spec	600
coq-tlc.20200328	TLC.LibFix.FixFun2_fix	600
coq-corn.8.16.0	CoRN.reals.fast.CRArith.CRsquare_pos	600
coq-hott.8.11	HoTT.Idempotents.split_preidem_set	600
coq-corn.8.16.0	CoRN.metric2.Limit.TakeUntil.takeUntil_elim	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_join_re.rtype_join_Brand_eq	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.length_nshl_lit_be	600
coq-tlc.20200328	TLC.LibListZ.Count.count_eq_length_filter	600
coq-corn.8.16.0	CoRN.metric2.Compact.Compact.CompactTotallyBounded.MapInFinEnumC	600
coq-corn.8.16.0	CoRN.metric2.FinEnum.FinEnum_eq_rev	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.infinity_of_cordfields.More_than_four.sixteen_ap_zero	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_cr_non_triv	600
coq-tlc.20200328	TLC.LibEnv.BindsProperties.binds_not_middle_inv	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.binomialz.binzSn	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.rec_sort_sorted	600
coq-hott.8.11	HoTT.Classes.orders.naturals.naturals_order.another_ring.between_to_ring	600
coq-bits.1.1.0	Bits.spec.operations.properties.bitsEq_decomp	600
coq-corn.8.16.0	CoRN.reals.faster.ApproximateRationals.approximate_rationals_more.JoinSemiLattice_Morphism_instance_0	600
coq-tlc.20200328	TLC.LibMultiset.Instances.card_empty_inst	600
coq-tlc.20200328	TLC.LibMultiset.ForeachProp.foreach_empty	600	2.2.17.0	synth with cache (only 1: intros_all; only 1: inversion H; only 1: false; only 1: typeclass).	0.075618	25
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.brand_ops.parents_and_self_In	600
coq-hott.8.11	HoTT.Classes.orders.nat_int.Univ.nat_int_order.another_semiring.nat_morphism_order_embedding	600
coq-hott.8.11	HoTT.Classes.implementations.binary_naturals.naturals.binnat_naturals	600
coq-tlc.20200328	TLC.LibWf.wf_prod3_of_wf_3	600
coq-hott.8.11	HoTTBookExercises.Book_4_6_i.QInv_Univalence_implies_FunextNondep	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_meet_re.rtype_meet_Either_neq_l	600	0.0.0.0.0.0	synth with cache (only 1: let rec prover1 := let rec prover_simpler := repeat match goal with | H:(?A <> ?B)%type |- _ => apply rtype_nequal in H; simpl in H | H:?A = ?B -> False |- _ => apply rtype_nequal in H; simpl in H | H:(?x <> ?x)%type |- _ => elim H; trivial | H:?x = ?x -> False |- _ => elim H; trivial end in fun τ => intros; apply rtype_fequal; unfold rtype_join; simpl; (let tt := fresh "τ'" in let tpf := fresh "pf'" in destruct τ as [tt tpf]; destruct tt; simpl; prover_simpler; trivial) in prover1 τ; only 1: destruct (Either₀_wf_inv pf') as [pfl pfr]; only 1: elim (H0 (exist _ _ pfl) (exist _ _ pfr)); only 1: apply rtype_fequal; only 1: simpl; only 1: trivial).	0.117039	6
coq-iris-heap-lang.3.4.0	iris.heap_lang.metatheory.subst_map_binder_insert	600
coq-smtcoq.2.0+8.11	SMTCoq.classes.SMT_classes_instances.FArray.FArray_ord	600
coq-smtcoq.2.0+8.11	SMTCoq.classes.SMT_classes_instances.FArray.FArray_eqbtype	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection3.Three.cycTI_NC_sign	600
coq-hott.8.11	HoTT.Algebra.AbelianGroup.Abel.Abel_rec_hprop	600	2.0.0.0	synth with cache (only 1: srapply (Abel_ind _ a); only 1: intros; only 1: apply dp_const; only 1: apply path_ishprop).	0.060764	6
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Absolute.zero_less_AbsIR_plus_one	600
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Inclusion.included_FMin	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: apply included_conj; only 1: assumption; only 1: assumption).	0.063286	5
coq-corn.8.16.0	CoRN.reals.Max_AbsIR.Inclusion.included_FMin'	600	0.0.0.0	synth with cache (only 1: intros H; only 1: simpl in H; only 1: eapply included_conj_lft; only 1: apply H).	0.053152	4
coq-tlc.20200328	TLC.LibSet.fold_empty	600
coq-tlc.20200328	TLC.LibSet.ForeachProp.foreach_of_pred_incl	600	12.9.5.1.0	synth with cache (only 1: introv; only 1: introv H L; only 1: sets m : (card E); only 1: introv Ex; only 1: firstorder).	0.230974	32
coq-tlc.20200328	TLC.LibMap.Properties.union_read_r	600
coq-hott.8.11	HoTT.Classes.implementations.peano_naturals.nat_lift.lt_le	600
coq-hott.8.11	HoTT.Classes.implementations.field_of_fractions.FracField.Lift.morphisms.lift_sr_morphism	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixC.AppendixC.ExpandHypotheses.AppendixC3.splitH	600
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.incl_inter_inv_of_incl_inter_eq	600
coq-hott.8.11	HoTT.Spaces.No.Core.OptionSort.No_ind_hprop	600
coq-hott.8.11	HoTT.Classes.orders.semirings.strict_semiring_order.pos_plus_lt_compat_l	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.rationals.Qclose_alt	600
coq-hott.8.11	HoTT.Spaces.No.Core.NoCodes.No_decode_le_lt	600	64	synth with cache (only 1: exact match No_Empty_admitted as x with end).	0.326085	65
coq-tlc.20200328	TLC.LibInt.to_nat_minus	600
coq-topology.10.0.1	Topology.UrysohnsLemma.UrysohnsLemma	600
coq-tlc.20200328	TLC.LibListZ.Count.count_pos_eq_exists_mem	600
coq-corn.8.16.0	CoRN.metric2.Compact.Compact.CompactTotallyBounded.CompactTotalBoundNotFar	600
coq-tlc.20200328	TLC.LibFix.corec_ind	600
coq-smtcoq.2.0+8.11	SMTCoq.QInst.impl_split221	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: destruct a; only 1: destruct b1; only 1: destruct b2; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct b2; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct b1; only 1: destruct b2; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct b2; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c1; only 1: destruct c2; only 1: trivial; only 1: trivial; only 1: destruct c2; only 1: trivial; only 1: trivial).	0.691777	64
coq-qcert.2.2.0	Qcert.Utils.Interleaved.interleaving.is_interleaved_singleton_inv	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.addition.minus_resp_less_rht	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.CPoly_CRing.cpoly_mult_fast_op_strext	600
coq-qcert.2.2.0	Qcert.Utils.Compat.Compat.compatible_nil_l	600	1.8	synth with cache (only 1: simpl; only 1: eauto).	0.026805	11
coq-bits.1.1.0	Bits.spec.operations.properties.nonZeroIsSucc	600
coq-tlc.20200328	TLC.LibMultiset.for_multiset_union_empty_l	600
coq-tlc.20200328	TLC.LibList.AppInversion.list_neq_nil_inv_last	600
coq-hott.8.11	HoTT.Spaces.BAut.Bool.AssumeUnivalence.isminusoneconnected_baut_bool	600
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.brand_ops.explode_brands_properequiv	600
coq-hott.8.11	HoTT.Classes.implementations.binary_naturals.decidable.ineq_bzero_double1	600
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Atom.Typing_Interp.Interp_Aux.check_aux_interp_aux_aux	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.rec_sort_rec_sort_app	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Divz.mulKz	600
coq-hott.8.11	HoTTBookExercises.EquivFunctorFunextType.ft_isequiv_functor_forall	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_meet_re.rtype_meet_Brand_eq	600
coq-qcert.2.2.0	Qcert.TypeSystem.RTypeMeetJoin.rtype_meet_re.rtype_meet_Foreign_eq	600	1	synth with cache (only 1: let rec prover0 := apply rtype_fequal; unfold rtype_join; simpl; trivial in prover0).	0.024219	2
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zgcd_Zopp_r	600
coq-hott.8.11	HoTT.Classes.theory.ua_quotient_algebra.ump_quotient_algebra.quotient_algebra_mapout.compute_quotient_algebra_mapout	600	71.21.9.6.0	synth with cache (only 1: intros u; only 1: intros b; only 1: simpl in *; only 1: apply R; only 1: reflexivity).	0.419380	112
coq-corn.8.16.0	CoRN.model.structures.QposInf.QposInf_min_lb_l	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_6_t0_10.prDade_Ind_irr_on	600
coq-hott.8.11	HoTT.Classes.theory.naturals.retract_is_nat.retract_is_nat	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.shl_interp	600
coq-hott.8.11	HoTT.Spaces.Finite.fin_empty	600
coq-bbv.1.3	bbv.Word.wordToNat_natToWord	600
coq-hott.8.11	HoTT.Idempotents.Splitting.path_split_idem	600
coq-hott.8.11	HoTT.Algebra.AbelianGroup.AbelGroup.abel_sgop_associative	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAW2BITVECTOR.bv_slt_not_eq	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.of_bits_size	600	1.0.0.0.1.0	synth with cache (only 1: unfold size; only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.106392	8
coq-hott.8.11	HoTT.HIT.V.AssumingUA.reflexive_bisimulation	600
coq-hott.8.11	HoTT.Homotopy.BlakersMassey.GBM.CodeLeft.CodeGlue.equiv_Ocodeleft2plus	600
coq-hott.8.11	HoTT.Classes.theory.ua_first_isomorphism.in_image_hom.is_closed_under_ops_in_image_hom	600
coq-hott.8.11	HoTT.Classes.orders.lattices.join_semilattice_order.join_ub_3_assoc_l	600
coq-hott.8.11	HoTT.Classes.implementations.peano_naturals.nat_lift.nat_le_total	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection1.BGsection1.HallLemma.nG'G	600
coq-hott.8.11	HoTT.Classes.implementations.field_of_fractions.FracField.Lift.morphisms.lift_injective	600
coq-hott.8.11	HoTT.Homotopy.BlakersMassey.GBM.CodeLeft.CodeGlue.Ocodeleft02b	600	7	synth with cache (only 1: make_equiv_contr_basedpaths).	0.260884	8
coq-hott.8.11	HoTT.Classes.orders.semirings.strict_semiring_order.decompose_lt	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.rationals.Qclose_separating_not_lt	600
coq-hott.8.11	HoTT.Spaces.No.Core.NoCodes.lt_le_trans	600
coq-tlc.20200328	TLC.LibMap.Properties.eq_union_restrict_remove	600
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.union_comm_assoc_of_union_comm_and_union_assoc	600
coq-tlc.20200328	TLC.LibListZ.card_inst	600
coq-corn.8.16.0	CoRN.metric2.Compact.Compact.Isomorphism.BishopCompact_Compact_BishopCompact2	600
coq-qcert.2.2.0	Qcert.Utils.Interleaved.close_enough.close_enough_lists_cons_invs	600
coq-hott.8.11	HoTT.Classes.tactics.ring_pol.content.eval_0'	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.addition.shift_less_plus	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.Poly_properties.mult_apply	600
coq-hott.8.11	HoTT.Classes.theory.fields.field_properties.apart_0_proper	600
coq-hott.8.11	HoTT.Classes.theory.fields.field_properties.StrongRightCancellation_instance_1	600	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros z; only 1: intros Ez; only 1: intros x; only 1: intros y; only 1: intros E; only 1: red in Ez; only 1: apply (strong_extensionality (fun y => y // (z; Ez : (fun y => y ≶ 0) z))); only 1: rewrite <- simple_associativity; only 1: rewrite <- simple_associativity; only 1: rewrite reciperse_alt; only 1: rewrite mult_1_r; only 1: rewrite mult_1_r; only 1: trivial).	0.202341	13
coq-bits.1.1.0	Bits.spec.operations.properties.adcBC	600
coq-tlc.20200328	TLC.LibMultiset.for_multiset_empty_incl	600
coq-bits.1.1.0	Bits.spec.operations.properties.incBneq	600	0.0	synth with cache (only 1: case /tupleP =>b p'; only 1: by elim b).	0.096552	2
coq-tlc.20200328	TLC.LibList.AppInversion.list_middle_inv	600
coq-tlc.20200328	TLC.LibList.Mem.mem_cons_l	600	0.0	synth with cache (only 1: intros until l; only 1: subst *).	0.013821	2
coq-tlc.20200328	TLC.LibList.Mem.mem_app_r	600	0.0	synth with cache (only 1: intros; only 1: applys * mem_app).	0.013133	2
coq-tlc.20200328	TLC.LibList.Nth.Nth_inv_neq_nil	600	1.2.4.1.0	synth with cache (only 1: intros l'; only 1: introv N; only 1: induction l as [| a tail]; only 1: easy; only 1: discriminate).	0.041065	13
coq-hott.8.11	HoTT.Spaces.BAut.Bool.AssumeUnivalence.isequiv_equiv_inhab_baut_bool_bool	600
coq-hott.8.11	HoTT.Classes.theory.groups.compose_mor.id_sg_morphism	600	5.3.1	synth with cache (only 1: intros ?; only 1: intros y; only 1: apply reflexivity).	0.146751	12
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.rec_concat_sort_nil_r	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Divz.divzz	600
coq-hott.8.11	HoTTBookExercises.Book_6_9.centralAllExOthBool	600
coq-hott.8.11	HoTT.Classes.implementations.binary_naturals.minus.pred_succ_minus	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zgcd_nat_sym	600
coq-hott.8.11	HoTT.Classes.theory.ua_subalgebra.subalgebra.trunc_subalgebra	600
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.brand_ops.is_canon_brands_singleton	600
coq-hott.8.11	HoTT.Classes.theory.naturals.contents.borrowed_from_nat.RightCancellation_instance_0	600
coq-hott.8.11	HoTT.Classes.orders.orders.partial_order.eq_le_flip	600	0.0.0	synth with cache (only 1: intros E; only 1: rewrite E; only 1: apply reflexivity).	0.023536	3
coq-hott.8.11	HoTT.Classes.orders.maps.strict_order_preserving_ops.strictly_order_preserving_pos	600	0	synth with cache (only 1: apply E).	0.011025	1
coq-hott.8.11	HoTT.Classes.orders.maps.id_order_preserving	600	7.1.3.0	synth with cache (only 1: intros E; only 1: intros y; only 1: intros E2; only 1: trivial).	0.026525	15
coq-hott.8.11	HoTT.Spaces.Finite.isembedding_fsucc	600
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection4.Four_6_t0_10.prDade_sub_TIirr	600
coq-bbv.1.3	bbv.Word.weqb_true_iff	600
coq-hott.8.11	HoTT.Idempotents.Splitting.sect_path_split_idem	600
coq-hott.8.11	HoTT.Algebra.AbelianGroup.homotopic_isabelianization	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.map2_and_idem1	600
coq-hott.8.11	HoTT.Categories.LaxComma.CoreParts.LaxCommaCategoryParts.lax_comma_category_parts.ap_a_path_object	600	12.1.1.1	synth with cache (only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: Tactics.path_induction_hammer).	0.118930	19
coq-hott.8.11	HoTT.Categories.Comma.Core.CommaCategory.comma_category_parts.ap_b_path_object'	600	0.0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: destruct y; only 1: simpl in *; only 1: destruct Ha; only 1: destruct Hb; only 1: destruct Hf; only 1: simpl in *; only 1: reflexivity).	0.065871	8
coq-hott.8.11	HoTT.Categories.Functor.Prod.Functorial.functorial.functor_composition_of	600	1.0	synth with cache (only 1: path_natural_transformation; only 1: let rec idtoiso_t := path_induction; simpl; autorewrite with morphism; reflexivity in idtoiso_t).	0.046181	3
coq-hott.8.11	HoTT.Pointed.pMap.pmap_precompose_idmap	600	3.0.0.0.0.0.4	synth with cache (only 1: pointed_reduce; only 1: simple refine {| pointed_htpy := _; point_htpy := _ |}; only 1: cbn; only 1: intros x; only 1: reflexivity; only 1: cbn; only 1: exact 1).	0.045980	14
coq-hott.8.11	HoTT.Categories.Functor.Composition.Laws.composition_lemmas.associativity	600	1	synth with cache (only 1: by path_functor).	0.016567	2
coq-hott.8.11	HoTT.Diagrams.ConstantDiagram.ConstantDiagram.diagram_const_functor_comp	600	14.2.6.0	synth with cache (only 1: revert f; only 1: intros h_comm; only 1: simpl in *; only 1: reflexivity).	0.064211	26
coq-hott.8.11	HoTT.HIT.V.AssumingUA.monic_set_present	600
coq-hott.8.11	HoTT.HIT.V.AssumingUA.V_succ	600	27.1	synth with cache (only 1: intros p; only 1: assumption).	0.073009	30
coq-tlc.20200328	TLC.LibOrder.order_inverse	600	2.15.1.3.5.1.2.4.0.0	synth with cache (only 1: hint trans_inverse; only 1: introv [Re Tr]; only 1: split; only 1: intros y; only 1: unfolds inverse; only 1: subst *; only 1: subst *; only 1: unfolds inverse; only 1: introv M1; only 1: auto).	0.240946	43
coq-tlc.20200328	TLC.LibReflect.false_of_False	600	0.1	synth with cache (only 1: intros IN; only 1: contradiction).	0.026541	3
coq-tlc.20200328	TLC.LibBool.eqb_false_l	600	0	synth with cache (only 1: reflexivity).	0.023587	1
coq-tlc.20200328	TLC.LibBool.and_assoc	600	0	synth with cache (only 1: tautob).	0.032411	1
coq-tlc.20200328	TLC.LibRelation.Rsclosure.not_rsclosure_inv	600	3.5.1.6.1.2.0	synth with cache (only 1: introv M; only 1: constructor; only 1: subst *; only 1: constructor 1; only 1: subst *; only 1: intros H; only 1: subst *).	0.240527	25
coq-qcert.2.2.0	Qcert.Utils.Digits.prelude.le_uniqueness_proof	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros m; only 1: intros n; only 1: generalize eq_refl; only 1: generalize n at - 1; only 1: induction (S n) as [| n0 IHn0]; only 1: discriminate; only 1: clear n; only 1: intros n; only 1: intros _tmp_tactician0; only 1: injection _tmp_tactician0 as _tmp_tactician2; only 1: intropattern subst <- _tmp_tactician2; only 1: intros le_mn1; only 1: intros le_mn2; only 1: pose (def_n2 := eq_refl); only 1: transitivity (eq_ind _ _ le_mn2 _ def_n2); only 1: generalize def_n2; only 1: revert le_mn1 le_mn2; only 1: generalize n0 at 1 4 5 7; only 1: intros n1; only 1: intros le_mn1; only 1: destruct le_mn1; only 1: intros le_mn2; only 1: destruct le_mn2; only 1: intros def_n0; only 1: rewrite (UIP_nat _ _ def_n0 eq_refl); only 1: easy; only 1: intros def_n0; generalize le_mn2; rewrite <- def_n0; intros le_mn0; only 1: destruct (Nat.nle_succ_diag_l _ le_mn0); only 1: intros le_mn2; only 1: destruct le_mn2; only 1: intros def_n0; only 1: generalize le_mn1; only 1: rewrite def_n0; only 1: intros le_mn0; only 1: destruct (Nat.nle_succ_diag_l _ le_mn0); only 1: intros def_n0; only 1: injection def_n0 as _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: rewrite (UIP_nat _ _ def_n0 eq_refl); only 1: simpl; only 1: assert (H : le_mn1 = le_mn2); only 1: apply IHn0; only 1: easy; only 1: rewrite H; only 1: easy; only 1: reflexivity).	0.358238	46
coq-corn.8.16.0	CoRN.logic.CLogic.Natural_Numbers.plus_pred_pred_plus	600	3.0.1.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: lia).	0.069737	8
coq-corn.8.16.0	CoRN.model.structures.Qsec.Qdec_sign_obligation_2	600	0.0.0.0	synth with cache (only 1: unfold Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: assumption).	0.166775	4
coq-corn.8.16.0	CoRN.order.PartialOrder.Default.MonotoneAntitone.antitone_def	600	0	synth with cache (only 1: firstorder).	0.023316	1
coq-hott.8.11	HoTT.Classes.theory.ua_first_isomorphism.first_isomorphism.def_first_isomorphism	600
coq-hott.8.11	HoTT.Categories.NaturalTransformation.Paths.path_natural_transformation.path.eisretr_path_natural_transformation	600	5.2.10	synth with cache (only 1: intros g; only 1: apply path_forall; only 1: refine (center _)).	0.217895	20
coq-hott.8.11	HoTT.Cubical.PathSquare.sq_tr_refl_v	600	0	synth with cache (only 1: by destruct p).	0.032398	1
coq-hott.8.11	HoTT.Classes.implementations.peano_naturals.nat_lift.nat_trivial_apart	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection1.BGsection1.CoprimeQuotientPgroup.coprime_cent_quotient_pgroup	600
coq-hott.8.11	HoTT.Homotopy.BlakersMassey.GBM.code_beta_glue	600
coq-hott.8.11	HoTT.Classes.orders.lattices.bounded_join_semilattice.above_bottom	600
coq-hott.8.11	HoTT.Classes.orders.semirings.strict_semiring_order.mult_lt_compat	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.shr_interp	600
coq-tlc.20200328	TLC.LibMap.Instances.map_union_assoc	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.rationals.Q_premetric	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.rationals.Qneg_nonexpanding	600	0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros q; only 1: intros x; only 1: intros y; only 1: intros E; only 1: apply Qclose_alt in E; only 1: apply Qclose_alt; only 1: rewrite <- negate_plus_distr; only 1: rewrite Qabs_neg; only 1: trivial).	0.126626	11
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.union_empty_inv_of_in_union_eq	600
coq-hott.8.11	HoTT.Classes.implementations.ne_list.ne_list.with_type.two_level_rect	600
coq-hott.8.11	HoTT.Classes.implementations.ne_list.ne_list.with_type.tl_length	600	0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: split).	0.030931	5
coq-hott.8.11	HoTT.Classes.implementations.ne_list.ne_list.list_map	600	2.0.0.0.4.18	synth with cache (only 1: etransitivity; only 1: constructor; only 1: induction l as [| x l IHl]; only 1: auto; only 1: simpl; only 1: by path_induction).	0.061929	30
coq-corn.8.16.0	CoRN.metric2.Compact.CompactImageBind.CompactImage_b_correct1	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.addition.shift_plus_less	600
coq-hott.8.11	HoTT.Classes.theory.apartness.morphisms.strong_binary_setoid_morphism_both_coordinates	600
coq-hott.8.11	HoTT.Diagrams.DDiagram.diagram_sigma	600	58	synth with cache (only 1: auto).	0.019270	59
coq-hott.8.11	HoTT.Modalities.CoreflectiveSubuniverse.CoOpen.coopen_isequiv_open	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.Poly_properties.Sum_cpoly_ap	600
coq-corn.8.16.0	CoRN.algebra.CPolynomials.Derivative.diff_x	600	0.8	synth with cache (only 1: simpl; only 1: algebra).	0.182546	10
coq-hott.8.11	HoTT.Classes.theory.fields.field_properties.field_div_0_l	600
coq-bits.1.1.0	Bits.spec.operations.properties.leB_ltB_trans	600
coq-tlc.20200328	TLC.LibMultiset.DemoSetUnion.demo_multiset_union_permut_simpl_3	600
coq-tlc.20200328	TLC.LibMultiset.InUnionGet.in_union_get_4	600	0.0.0.0	synth with cache (only 1: intros; only 1: apply in_union_r; only 1: apply in_union_r; only 1: apply ~ in_union_get_2).	0.048684	4
coq-tlc.20200328	TLC.LibList.NthDef.nth_default_gt_length	600
coq-tlc.20200328	TLC.LibList.NthFunc.nth_lt_length	600	4.3.6.2	synth with cache (only 1: intros until l; only 1: destruct l; only 1: rew_list *; only 1: split).	0.034994	19
coq-hott.8.11	HoTT.HIT.quotient.Equiv.quotient_rec	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Divz.ltz_mod	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.drec_sort_perm_eq	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.In_equivlist_proper	600	0.0.0.0.0.0	synth with cache (only 1: unfold Proper; only 1: unfold respectful; only 1: unfold equivlist; only 1: intros; only 1: subst; only 1: firstorder).	0.046634	6
coq-hott.8.11	HoTT.Pointed.pTrunc.ptr_functor_pmap_idmap	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zdiv_gcd_elim_lft	600
coq-hott.8.11	HoTT.Classes.theory.ua_subalgebra.hom_inc_subalgebra.oppreserving_inc_subalgebra	600
coq-tlc.20200328	TLC.LibNat.measure_induction	600
coq-qcert.2.2.0	Qcert.Brands.BrandRelation.brand_meet.brand_meet_canon_r	600
coq-hott.8.11	HoTT.Classes.theory.naturals.contents.borrowed_from_nat.ZeroProduct_instance_0	600
coq-hott.8.11	HoTT.Algebra.Group.inverse_unique	600
coq-hott.8.11	HoTT.Classes.orders.orders.strict_order.lt_antisym	600
coq-hott.8.11	HoTT.Classes.theory.lattices.bounded_sl_mor_is_sl_mor	600
coq-hott.8.11	HoTT.Classes.tactics.ring_quote.Quoting.contents.eq_quote	600
coq-hott.8.11	HoTT.Classes.theory.rings.ring_props.flip_negate	600
coq-hott.8.11	HoTT.Classes.implementations.hprop_lattice.contents.associative_hor	600
coq-hott.8.11	HoTT.Cubical.DPath.istrunc_dp	600	21.0.0.0.2.2.2.1.5.4.1.0.0.1.1.0.0.3.16	synth with cache (only 1: destruct p; only 1: generalize dependent A; only 1: unfold IsTrunc; only 1: intros ?; only 1: simpl; only 1: intros _tmp_tactician2; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: path_induction; only 1: apply H; only 1: simpl; only 1: intros ac; only 1: intros P; only 1: intros ?; only 1: intros AH2; only 1: intros x; only 1: intros v; only 1: apply H).	0.337346	78
coq-hott.8.11	HoTT.Cubical.DPath.DGroupoid.dp_concat_1p	600	5.6.19.33.0	synth with cache (only 1: destruct p; only 1: symmetry; only 1: rewrite concat_1p; only 1: apply dp_path_transport; only 1: reflexivity).	0.289115	68
coq-hott.8.11	HoTT.Cubical.DPath.dp_paths_lFFr	600	0.0.0.0.1	synth with cache (only 1: srefine (equiv_composeR' _ {| equiv_fun := dp_path_transport; equiv_isequiv := _ |}); only 1: apply equiv_concat_l; only 1: destruct p; only 1: simpl; only 1: exact ((concat_1p q)^ @ (concat_p1 (1 @ q))^)).	0.155164	6
coq-hott.8.11	HoTT.Cubical.DPath.ap_pr1_path_sigma_dp	600	1.1.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.028702	5
coq-hott.8.11	HoTT.Classes.interfaces.abstract_algebra.jections.isinjective_ne	600
coq-tlc.20200328	TLC.LibOperation.OpProperties.idempotent_inv	600	0.3.3.0	synth with cache (only 1: intros; only 1: subst; only 1: rewrite H; only 1: easy).	0.025967	10
coq-corn.8.16.0	CoRN.model.semigroups.Npossemigroup.Nposmult_is_CSemiGroup	600
coq-hott.8.11	HoTT.HSet.AssumeFunext.axiomK_isprop	600	4.0.0.3.0.0.0.0.0.0.0.0.2.0.0.2.0.0.4.0.1	synth with cache (only 1: apply hprop_inhabited_contr; only 1: intros d; only 1: assert (IsHSet A); only 1: intros x; only 1: intros y; only 1: apply hprop_allpath; only 1: intros p; only 1: intros q; only 1: by induction p; only 1: exists d; only 1: intros d'; only 1: apply path_forall; only 1: intros x; only 1: apply path_forall; only 1: intros y; only 1: generalize (d x y); only 1: clear d; only 1: generalize (d' x y); only 1: intros p; only 1: intros q; only 1: eapply path_contr).	0.208567	37
coq-corn.8.16.0	CoRN.classes.Qclasses.Qmax_coincides	600
coq-hott.8.11	HoTT.Types.Universe.equiv_path_V	600	0.0	synth with cache (only 1: apply path_equiv; only 1: reflexivity).	0.015260	2
coq-hott.8.11	HoTT.Types.Universe.Univalence.ap_prod_l_path_universe	600	4.0.0.0.0.0.0.0.0	synth with cache (only 1: revert f; only 1: equiv_intro (equiv_path B C) ltac:(f); only 1: rewrite (eissect (equiv_path B C) f : path_universe (equiv_path B C f) = f); only 1: destruct f; only 1: simpl; only 1: apply path_equiv; only 1: apply path_forall; only 1: intros g; only 1: reflexivity).	0.049338	13
coq-topology.10.0.1	Topology.ProductTopology.product_topology2.prod2_conv2_cont	600
coq-hott.8.11	HoTT.Types.Sum.inl_un_inl	600	30.28.2.6.2.2	synth with cache (only 1: destruct z as [a| b]; only 1: apply ap; only 1: cbn; only 1: reflexivity; only 1: simpl; only 1: by path_induction).	0.060452	76
coq-hott.8.11	HoTT.Spaces.Finite.fin_transpose_last_with_invol	600
coq-bbv.1.3	bbv.Word.split2_combine	600
coq-topology.10.0.1	Topology.MetricSpaces.metric_open_ball_In	600
coq-hott.8.11	HoTT.Idempotents.Splitting.split_idem_issect	600
coq-hott.8.11	HoTT.Colimits.Quotient.Equiv.issurj_class_of	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.map2_and_idem2	600
coq-hott.8.11	HoTT.PropResizing.Nat.AssumeStuff.Graph_Succ_Equiv.graph_unsucc_equiv_edge	600
coq-hott.8.11	HoTT.Categories.Comma.Functorial.functorial.single_source.identity_of.functorial_identity_of_helper	600
coq-hott.8.11	HoTT.Categories.Pseudofunctor.RewriteLaws.lemmas.p_composition_of_coherent_iso_for_rewrite	600
coq-hott.8.11	HoTT.Categories.Adjoint.Pointwise.AdjointPointwise.l.unit_l	600
coq-hott.8.11	HoTT.Colimits.Colimit_Pushout_Flattening.POCase.POCase_P	600
coq-hott.8.11	HoTT.Categories.FunctorCategory.Morphisms.isisomorphism_components_of	600
coq-hott.8.11	HoTT.Categories.Adjoint.Composition.Core.compose.compose_counit	600
coq-hott.8.11	HoTT.Categories.Adjoint.UnitCounitCoercions.equivalences.to_unit_counit.from_unit.counit_natural_transformation__of__adjunction_unit_helper	600
coq-hott.8.11	HoTT.Categories.InitialTerminalCategory.Functors.unique.trunc_initial_category_function	600
coq-hott.8.11	HoTT.Pointed.pEquiv.issig_pequiv'	600
coq-hott.8.11	HoTT.Categories.HomFunctor.hom_functor.hom_functor	600
coq-hott.8.11	HoTT.Categories.LaxComma.CoreParts.LaxCommaCategoryParts.lax_comma_category_parts.path_morphism'_helper	600
coq-hott.8.11	HoTT.Categories.ExponentialLaws.Law4.Functors.law4.inverse.object_of.inverse_object_of	600
coq-hott.8.11	HoTT.Categories.Functor.Prod.Universal.universal.universal.unique.unique_helper2	600
coq-hott.8.11	HoTT.Limits.Limit.FunctorialityLimit.functor_limit_eissect	600
coq-hott.8.11	HoTT.Categories.Structure.IdentityPrinciple.sip.sip_isotoid_refl	600
coq-hott.8.11	HoTT.HIT.unique_choice.atmost	600
coq-hott.8.11	HoTT.Categories.Category.Paths.path_category.equiv_path_precategory_uncurried'__eissect	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.Reflective_Subuniverse.Types.OPushout.O_inverts_functor_pushout	600
coq-hott.8.11	HoTT.Categories.Category.Pi.isstrict_category_pi	600	1	synth with cache (only 1: exact _).	0.013354	2
coq-hott.8.11	HoTT.Categories.Category.Sigma.OnMorphisms.sigT_mor.sigT_mor_eq	600
coq-hott.8.11	HoTT.DProp.dhand_false_l	600
coq-hott.8.11	HoTT.Pointed.Loops.loops_functor_compose	600
coq-hott.8.11	HoTT.Types.Paths.transport_paths_FFlr	600	0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: exact ((concat_1p q)^ @ (concat_p1 (1 @ q))^)).	0.021362	3
coq-hott.8.11	HoTT.Types.Paths.isequiv_paths_ind_r	600	0.0.0.0.0.0.0.0.0.60.2.28	synth with cache (only 1: srapply isequiv_adjointify; only 1: intros u; only 1: auto with typeclass_instances; only 1: intros u; only 1: apply path_forall; only 1: intros x; only 1: apply path_forall; only 1: intros p; only 1: destruct p; only 1: reflexivity; only 1: intros u; only 1: reflexivity).	0.075747	102
coq-hott.8.11	HoTT.Spaces.Int.Core.int_negation_negation	600	2.0.2.0.0.0.1.2.0.0.2.0.0.0.0	synth with cache (only 1: destruct n; only 1: induction p; only 1: trivial; only 1: cbn; only 1: apply ap; only 1: trivial; only 1: cbn; only 1: by apply ap; only 1: trivial; only 1: induction p; only 1: trivial; only 1: cbn; only 1: by apply ap; only 1: cbn; only 1: by apply ap).	0.059113	24
coq-hott.8.11	HoTT.Categories.Functor.Paths.path_functor.path_functor_uncurried	600
coq-hott.8.11	HoTT.Spaces.Pos.Spec.pos_succ_pred_double	600	0.2.2.2.0.1	synth with cache (only 1: induction n as [| n| n nH]; only 1: trivial; only 1: cbn; only 1: apply ap; only 1: trivial; only 1: trivial).	0.028703	13
coq-hott.8.11	HoTT.HIT.V.AssumingUA.not_mem_Vempty	600
coq-tlc.20200328	TLC.LibOrder.total_order_inverse	600
coq-tlc.20200328	TLC.LibReflect.isTrue_eq_true	600
coq-tlc.20200328	TLC.LibRelation.Tclosure.tclosure_eq_of_trans	600
coq-topology.10.0.1	Topology.SumTopology.sum_topology_closed_full_set_component	600
coq-tlc.20200328	TLC.LibRelation.Rtclosure.refl_rtclosure	600	0	synth with cache (only 1: unfolds * refl).	0.023544	1
coq-hott.8.11	HoTT.Categories.NaturalTransformation.Composition.Laws.functor_identity.left.left_identity_isomorphism	600
coq-hott.8.11	HoTT.Tactics.BinderApply.basic	600
coq-hott.8.11	HoTT.Tactics.EvalIn.rewrite_refl_example	600	0	synth with cache (only 1: reflexivity).	0.009367	1
coq-topology.10.0.1	Topology.NeighborhoodBases.build_from_open_neighborhood_bases.Build_TopologicalSpace_from_open_neighborhood_bases	600
coq-tlc.20200328	TLC.LibEqual.EqualityProp.eq_trans_lr	600	3.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intros H1; only 1: intros H2; only 1: destruct ~ H2).	0.023849	9
coq-tlc.20200328	TLC.LibEqual.EqualityProp.eq_trans_rr	600	2.0.2.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intros H1; only 1: intros H2; only 1: rewrite <- H1; only 1: rewrite <- H2; only 1: destruct ~ H2).	0.031129	12
coq-tlc.20200328	TLC.LibEqual.EqInductionSym.eq_rect_r	600	0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim Logic.eq_sym with (1 := H0); only 1: assumption).	0.030945	6
coq-tlc.20200328	TLC.LibEqual.FuncExtDep.fun_eta_dep_3	600	10.0	synth with cache (only 1: intros; only 1: solve [ auto ]).	0.108572	12
coq-haskell.1.0.0	Hask.Data.Functor.Yoneda.YonedaLaws.Yoneda_ApplicativeLaws_obligation_5	600
coq-haskell.1.0.0	Hask.Data.Functor.Yoneda.CoyonedaLaws.coyo_to	600	0.0.2.0	synth with cache (only 1: intros; only 1: simpl in *; only 1: rewrite FunctorLaws.fmap_id; only 1: reflexivity).	0.040755	6
coq-haskell.1.0.0	Hask.Control.Monad.Indexed.imonad_law_1_x	600
coq-haskell.1.0.0	Hask.Control.Applicative.ApplicativeLaws.fmap_pure_x	600
coq-qcert.2.2.0	Qcert.Utils.Digits.Digits.natexplosion.digit_pf_irrel	600
coq-gaia-stern.1.15	gaia.stern.fibm.pythagore_mod4	600
coq-topology.10.0.1	Topology.Compactness.compact_Hausdorff_impl_T3_sep	600
coq-corn.8.16.0	CoRN.logic.CLogic.Predicates_to_CProp.nat_complete_double_induction	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Forallb_ordpairs.forallb_ordpairs_refl_conj	600
coq-topology.10.0.1	Topology.FiltersAndNets.filter_to_net.filter_to_net_DS	600
coq-corn.8.16.0	CoRN.logic.CLogic.Predicates_to_Prop.four_ind	600	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_wf_rect; only 1: intros m; only 1: case m; only 1: auto; only 1: clear m; only 1: intros m; only 1: case m; only 1: auto; only 1: clear m; only 1: intros m; only 1: case m; only 1: auto; only 1: clear m; only 1: intros m; only 1: case m; only 1: auto with arith; only 1: auto with arith).	0.195329	18
coq-corn.8.16.0	CoRN.logic.CLogic.toCProp_Zlt	600	2.0	synth with cache (only 1: intros; only 1: trivial).	0.017464	4
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Defn.update_first_update_first_neq_swap	600
coq-smtcoq.2.0+8.11	SMTCoq.Conversion_tactics.pos_convert_type.t2z_add_morph	600	6.0	synth with cache (only 1: intros; only 1: trivial).	0.033199	8
coq-qcert.2.2.0	Qcert.Utils.CoqLibAdd.CoqLibAdd.In.In_app_iff	600	0.0.0.0.40	synth with cache (only 1: split; only 1: apply Permutation_in; only 1: apply Permutation_app_comm; only 1: apply Permutation_in; only 1: apply Permutation_app_comm).	0.166716	45
coq-bits.1.1.0	Bits.spec.spec.properties.toNat_droplsb	600
coq-bbv.1.3	bbv.NatLib.strong.strong	600	0.0.1	synth with cache (only 1: intros p; only 1: elim (lt_wf p); only 1: auto with arith).	0.054820	4
coq-hott.8.11	HoTT.Categories.NaturalTransformation.Paths.path_natural_transformation.path.equiv_path_natural_transformation	600
coq-hott.8.11	HoTT.Cubical.PathSquare.MovePaths.sq_move_13	600
coq-hott.8.11	Coq.Init.Peano.pred_Sn	600	0.0	synth with cache (only 1: intros H; only 1: trivial).	0.006484	2
coq-smtcoq.2.0+8.11	SMTCoq.Misc.afold_left_andb_true	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.locations.loc_infinite_obligation_1	600	0.0	synth with cache (only 1: intros i; only 1: naive_solver lia).	0.053333	2
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.lit_is_unboxed_dec	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.to_of_val	600	1	synth with cache (only 1: reflexivity).	0.018192	2
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.un_op_eq_dec	600	1	synth with cache (only 1: solve_decision).	0.019830	2
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.base_lit_countable	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.expr_countable	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_cauchyreals.ExtraCreals.ler_lecr	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.shift.int.shift.zshiftP	600
coq-hott.8.11	Coq.Init.Logic_Type.identity_ind_r	600	0.8.4	synth with cache (only 1: intros H'; only 1: destruct 2; only 1: trivial).	0.009100	29
coq-topology.10.0.1	Topology.Homeomorphisms.homeomorphism_id	600
coq-hott.8.11	HoTT.Classes.implementations.peano_naturals.nat_lift.nat_cut_minus_spec	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_mathcomp.ExtraGeom.Gseqgt1	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection1.BGsection1.Maschke_abelem	600
coq-hott.8.11	HoTT.Classes.orders.lattices.bounded_join_semilattice.below_bottom	600
coq-topology.10.0.1	Topology.Nets.neighborhood_net.neighborhood_net_DS	600
coq-hott.8.11	HoTT.Classes.orders.semirings.pseudo_semiring_order.pos_mult_rev_l	600
coq-hott.8.11	HoTT.Classes.orders.semirings.pseudo_semiring_order.lt_0_4	600	0	synth with cache (only 1: apply _).	0.027318	1
coq-hott.8.11	HoTT.Diagrams.ParallelPair.Build_parallel_pair_cocone	600
coq-hott.8.11	HoTT.Classes.theory.premetric.contents.rationals.Qplus_nonexpanding_l	600
coq-poltac.0.8.11	PolTac.NAux.Nge_ge_rev	600
coq-smtcoq.2.0+8.11	SMTCoq.classes.SMT_classes.EqbTypeProp.eqb_spec_false	600	0.0.1	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite eqb_spec; only 1: easy).	0.021260	4
coq-haskell.1.0.0	Hask.Ltac.comp_assoc	600	6.0.0.0.6	synth with cache (only 1: intros lpe; only 1: intros Sym2; only 1: intros A; only 1: intros; only 1: auto).	0.111916	17
coq-hott.8.11	HoTT.Diagrams.Cocone.Cocone.cocone_postcompose	600
coq-hott.8.11	HoTT.Categories.GroupoidCategory.Core.isgroupoid_groupoid_category	600
coq-topology.10.0.1	Topology.FilterLimits.neighborhood_filter_obligation_4	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.multiplication.mult_resp_less_lft	600
coq-bbv.1.3	bbv.Word.wtl_eq_rect_mul	600	0.4.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros; only 1: generalize Heq; only 1: intros; only 1: erewrite WS_eq_rect; only 1: destruct Heq; only 1: reflexivity).	0.063803	12
coq-hott.8.11	HoTT.Functorish.Functorish.isequiv_fmap	600
coq-hott.8.11	HoTT.Diagrams.Diagram.Diagram.diagram_inv_is_retraction	600
coq-hott.8.11	HoTT.Categories.Category.Morphisms.iso_contr.path_isomorphic	600
coq-hott.8.11	HoTT.Classes.theory.fields.field_properties.recip_distr_alt	600
coq-hott.8.11	HoTT.Categories.Category.Morphisms.iso_lemmas.idtoiso_comp	600	3.0	synth with cache (only 1: path_induction; only 1: let rec epi_mono_sect_t := let t := solve [ autorewrite with morphism; reflexivity | rewrite_hyp; autorewrite with morphism; reflexivity ] in first [ rewrite ?associativity; t | rewrite <- ?associativity; t ] in epi_mono_sect_t).	0.026586	5
coq-tlc.20200328	TLC.LibMultiset.InUnionInv.in_single_inv	600
coq-bits.1.1.0	Bits.spec.operations.properties.toNat_shlBaux	600
coq-tlc.20200328	TLC.LibList.NthFunc.nth_of_Nth	600
coq-hott.8.11	HoTT.Fibrations.equiv_fibration_replacement	600
coq-tlc.20200328	TLC.LibList.Make.make_pos	600	0.1.0.0.0.0.0.0.1	synth with cache (only 1: intros until n; only 1: intros l; only 1: introv E; only 1: destruct n; only 1: math; only 1: simpl; only 1: fequals; only 1: f_equal; only 1: math).	0.074399	11
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Floorq.Sn_neg	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.ContinuedFractions.SCF_rec	600	22.13	synth with cache (only 1: rewrite /intmul //=; only 1: by elim : l  => // a s /= ->).	0.117821	37
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zgcd_div_mult_rht	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.sublist.rec_concat_sort_sublist	600
coq-hott.8.11	HoTT.Tactics.EquivalenceInduction.ap.equiv_ap_respects_equivalenceL	600
coq-hott.8.11	HoTT.Tactics.EquivalenceInduction.ap.equiv_ap_inv_respects_equivalenceL	600	0.0.0.0.0	synth with cache (only 1: simple refine (fun B e => _; fun _ => _); only 1: refine (equiv_ap' _ _ _ oE _); only 1: simpl; only 1: refine (respects_equivalenceL.1 B e); only 1: t).	0.104277	5
coq-tlc.20200328	TLC.LibNat.beq_eq	600
coq-corn.8.16.0	CoRN.logic.CornBasics.min_convert_is_NEG	600
coq-hott.8.11	HoTT.Classes.theory.naturals.contents.with_a_ring.to_ring_zero_sum	600
coq-hott.8.11	HoTT.Algebra.Group.grp_iso_inverse	600
coq-hott.8.11	HoTT.Classes.orders.orders.full_partial_order.le_lt_trans	600
coq-hott.8.11	HoTT.Classes.implementations.hprop_lattice.contents.idempotent_hand	600
coq-hott.8.11	HoTT.Categories.Structure.Core.istrunc_homomorphism_standard_notion_of_structure	600
coq-hott.8.11	HoTT.Cubical.DPath.dp_forall	600
coq-hott.8.11	HoTT.Classes.interfaces.abstract_algebra.extras.ishprop_ismonoidpreserving	600
coq-tlc.20200328	TLC.LibOperation.OpProperties.neutral_r_of_comm_neutral_l	600
coq-topology.10.0.1	Topology.StrongTopology.StrongTopology.strong_topology_makes_continuous_funcs	600
coq-hott.8.11	HoTT.Metatheory.FunextVarieties.WeakFunext_implies_Funext	600
coq-hott.8.11	HoTT.Types.Universe.Univalence.PathEquivSimplNever.path2_universe_precompose_idmap	600
coq-hott.8.11	HoTT.Types.Sum.unfunctor_sum_eta	600
coq-hott.8.11	HoTT.Types.Sum.unfunctor_sum_l_beta	600	0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold unfunctor_sum_l; only 1: apply inl_un_inl).	0.020422	3
coq-hott.8.11	HoTT.Spaces.Finite.fcard_equiv	600
coq-bbv.1.3	bbv.Word.combine_assoc	600
coq-topology.10.0.1	Topology.Continuity.continuity.continuous_closed	600
coq-hott.8.11	HoTT.Idempotents.RetractOfRetracts.splitting_retractof_isqidem	600
coq-tlc.20200328	TLC.LibLogic.Ifthenelse.If_l	600
coq-tlc.20200328	TLC.LibLogic.SimplConjDisj.or_False_l_eq	600	0	synth with cache (only 1: tautop).	0.034781	1
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.length_mk_list_true_full	600
coq-hott.8.11	HoTT.PropResizing.Nat.AssumeStuff.succ_inj	600
coq-hott.8.11	HoTT.Categories.InitialTerminalCategory.Functors.unique.trunc_initial_category	600
coq-hott.8.11	HoTT.Types.Wtype.trunc_wtype	600
coq-hott.8.11	HoTT.Types.Bool.EquivBoolEquiv.equiv_bool_aut_bool	600
coq-hott.8.11	HoTT.Types.Equiv.AssumeFunext.isequiv_contr_map	600
coq-hott.8.11	HoTT.WildCat.Induced.Induced_category.induced_hasequivs	600
coq-hott.8.11	HoTT.WildCat.EquivGpd.is0functor_equiv0gpd_inv	600
coq-hott.8.11	HoTT.Types.Sigma.equiv_sigma_assoc'	600
coq-hott.8.11	HoTT.Categories.Structure.IdentityPrinciple.sip.structure_identity_principle	600
coq-hott.8.11	HoTT.WildCat.Equiv.cate_isretr	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.Reflective_Subuniverse.Monad.O_monad_mult_assoc	600
coq-hott.8.11	HoTT.Types.Forall.AssumeFunext.path_forall_V	600
coq-hott.8.11	HoTT.Spaces.Int.Spec.int_pos_sub_succ_l	600
coq-hott.8.11	HoTT.Spaces.Int.Spec.int_pos_sub_succ_r	600	0.0.1.0.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: trivial; only 1: cbn; only 1: apply ap; only 1: apply pos_pred_double_succ).	0.019723	7
coq-hott.8.11	HoTT.Pointed.Loops.unfold_iterated_loops'	600
coq-hott.8.11	HoTT.Types.Prod.equiv_functor_prod	600
coq-hott.8.11	HoTT.Basics.Decidable.wconst_through_hprop	600
coq-hott.8.11	HoTT.Basics.Trunc.contr_inhabited_hprop	600
coq-tlc.20200328	TLC.LibOrder.TotalOrderProp.total_order_le_is_rclosure_lt	600
coq-tlc.20200328	TLC.LibOrder.le_is_inverse_ge	600	3.2.0.2.0.0.1	synth with cache (only 1: extens; only 1: intros x; only 1: rew_to_le; only 1: intros y; only 1: iff M; only 1: induction * H; only 1: subst *).	0.106272	15
coq-tlc.20200328	TLC.LibOrder.Instances.Le_preorder_of_Le_order	600	1.2	synth with cache (only 1: inversion 1; only 1: autos *).	0.048531	5
coq-tlc.20200328	TLC.LibReflect.isTrue_and	600
coq-tlc.20200328	TLC.LibReflect.true_eq_bool_eq	600	0.1	synth with cache (only 1: extens; only 1: tautob).	0.045222	3
coq-tlc.20200328	TLC.LibRelation.Rtclosure.Ind.rtclosure_eq_rtclosure'r	600
coq-tlc.20200328	TLC.LibRelation.Rstclosure.total_rstclosure	600	6.0	synth with cache (only 1: intros_all; only 1: destruct * (H x y)).	0.060944	8
coq-hott.8.11	HoTT.Basics.Equivalences.contr_basedhomotopy'	600
coq-tlc.20200328	TLC.LibLogic.NeqProp.prop_neq_of_iff_r	600	0	synth with cache (only 1: tautop).	0.057914	1
coq-tlc.20200328	TLC.LibEqual.fun_ext_nondep_4	600
coq-tlc.20200328	TLC.LibEqual.ArgsEq.args_eq_5	600	0.0	synth with cache (only 1: intros; only 1: subst ~).	0.016156	2
coq-haskell.1.0.0	Hask.Data.Functor.Yoneda.CoyonedaLaws.coyo_lift_naturality	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.moveL_transport_p	600	0.0	synth with cache (only 1: destruct p; only 1: exact idmap).	0.018002	2
coq-hott.8.11	HoTT.Basics.PathGroupoids.apD10_ap_precompose	600	0.10.2	synth with cache (only 1: simpl; only 1: destruct p; only 1: reflexivity).	0.023323	15
coq-haskell.1.0.0	Hask.Control.Monad.Indexed.IState_IMonad_obligation_1	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.transport_p_pp	600	1.10.8.1.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: rewrite concat_p1; only 1: destruct r; only 1: reflexivity).	0.122107	27
coq-hott.8.11	HoTT.Basics.PathGroupoids.transport_VpV	600	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.016870	2
coq-hott.8.11	HoTT.Basics.PathGroupoids.transport2_p2p	600	15	synth with cache (only 1: by path_induction).	0.018701	16
coq-hott.8.11	HoTT.Basics.PathGroupoids.transport_pV_ap	600	1.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.017827	4
coq-hott.8.11	HoTT.Basics.PathGroupoids.transportD_compose	600	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.021543	2
coq-qcert.2.2.0	Qcert.Utils.Digits.Digits.natexplosion.digits_to_nat_aux_acc_inj_helper12	600
coq-topology.10.0.1	Topology.Compactness.compact_image_ens	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Defn.lookup_none_perm	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.moveR_M1	600
coq-corn.8.16.0	CoRN.logic.CLogic.Zsgn_5	600
coq-smtcoq.2.0+8.11	SMTCoq.Conversion_tactics.N_convert_type.t2z_leb_morph	600
coq-smtcoq.2.0+8.11	SMTCoq.Conversion_tactics.N_convert_type.t2z_eqb_morph	600	1.0.0.0.7.0.6.0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: destruct x; only 1: simpl; only 1: destruct y; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct y; only 1: simpl; only 1: trivial; only 1: trivial).	0.073768	112
coq-corn.8.16.0	CoRN.logic.CLogic.CForall_prop	600	0.5.3.11.25.9.28.0.8.10.6.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: intros _tmp_tactician0; only 1: intros; only 1: destruct H; only 1: destruct H; only 1: induction l; only 1: destruct _tmp_tactician0 as (E, _tmp_tactician2); only 1: easy; only 1: destruct _tmp_tactician0 as (E, _tmp_tactician2); only 1: auto with sets; only 1: induction l; only 1: simpl in *; only 1: auto; only 1: destruct _tmp_tactician0 as (Hn, Hn'); only 1: auto).	0.238900	127
coq-bits.1.1.0	Bits.spec.spec.properties.toZp_inj	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.whiskerR_pVR	600	0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct r; only 1: destruct q; only 1: reflexivity).	0.037193	4
coq-qcert.2.2.0	Qcert.Utils.CoqLibAdd.CoqLibAdd.In.forall_in_dec	600
coq-corn.8.16.0	CoRN.raster.Raster.nth_repeat	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Remove.remove_all_app	600
coq-gaia-stern.1.15	gaia.stern.fibm.rem_rcons1	600
coq-bbv.1.3	bbv.NatLib.drop_mod2	600
coq-smtcoq.2.0+8.11	SMTCoq.PArray.PArray.IntOrderedType.lt_trans	600
coq-qcert.2.2.0	Qcert.Utils.Lift.Lift.none_lift	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.Distinct.distinct_aux2_spec	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.locations.loc_add_inj	600
coq-corn.8.16.0	CoRN.stdlib_omissions.Z.N_of_Z_nonpos	600
coq-ceres.0.4.0	Ceres.CeresS.Decidable_eq_sexp	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.FArray.add_nodefault	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_cauchyreals.ExtraCreals.cst_crealM	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.alloc_fresh	600
coq-poltac.0.8.11	PolTac.NatAux.mult_ge_compat_rev_l	600
coq-tlc.20200328	TLC.LibList.Map.map_eq_nil_inv	600	5.3.1.5.1.1.1.0.0.1	synth with cache (only 1: intros until l; only 1: destruct l; only 1: intros; only 1: easy; only 1: destruct l; only 1: discriminate; only 1: intros H; only 1: generalize H; only 1: generalize H; only 1: easy).	0.169090	28
coq-topology.10.0.1	Topology.TopologicalSpaces.closed_union2	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_mathcomp.TelescopeProd.telescope_prod_nat	600
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection1.BGsection1.Plength1.p_elt_gen_normal	600
coq-bits.1.1.0	Bits.ssrextra.nat.half_subn1	600
coq-hott.8.11	HoTT.Classes.orders.lattices.meet_semilattice_order.meet_lb_3_r	600
coq-hott.8.11	HoTT.Classes.orders.semirings.pseudo_semiring_order.lt_1_4	600
coq-topology.10.0.1	Topology.Nets.net_limits_determine_topology	600
coq-corn.8.16.0	CoRN.liouville.RingClass.Properties.radd_assoc	600
coq-hott.8.11	HoTT.Categories.Category.Morphisms.iso_concat_lemmas.iso_compose_pp_V	600	0	synth with cache (only 1: iso_concat_t).	0.080770	1
coq-hott.8.11	HoTT.Categories.Category.Morphisms.iso_concat_lemmas.iso_inv_Vp	600	0	synth with cache (only 1: iso_concat_t).	0.008320	1
coq-hott.8.11	HoTT.Categories.Category.Morphisms.iso_concat_lemmas.iso_moveL_1M	600	0	synth with cache (only 1: iso_concat_t).	0.029211	1
coq-hott.8.11	HoTT.Categories.Category.Morphisms.associativity_composition.compose4associativity_helper	600	1.2.2	synth with cache (only 1: rewrite <- associativity in *; only 1: rewrite <- associativity in *; only 1: let rec idtoiso_t := path_induction; simpl; autorewrite with morphism; reflexivity in idtoiso_t).	0.035400	8
coq-hott.8.11	HoTT.Diagrams.Cocone.FunctorialityCocone.cocone_postcompose_equiv_universality	600
coq-tlc.20200328	TLC.LibList.NthFunc.Nth_nth	600
coq-tlc.20200328	TLC.LibList.Concat.concat_nil	600	0	synth with cache (only 1: easy).	0.010876	1
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_carry_ff	600	2.1.11.8	synth with cache (only 1: intros; only 1: induction a as [| a xs IHxs]; only 1: exact eq_refl; only 1: auto).	0.045535	26
coq-bbv.1.3	bbv.Word.eq_rect_split2_eq1	600
coq-topology.10.0.1	Topology.FilterLimits.closure_impl_filter_limit	600
coq-hott.8.11	HoTT.Categories.Category.Morphisms.iso_lemmas.idtoiso_functor	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Floorq.Sn_gt1	600
coq-gaia-stern.1.15	gaia.stern.fibm.lucas_smonotoneE	600
coq-bbv.1.3	bbv.Word.weqb_sound	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.multiplication.shift_less_mult'	600
coq-bits.1.1.0	Bits.spec.spec.properties.msb_zero	600	0	synth with cache (only 1: induction n => //).	0.016558	1
coq-tlc.20200328	TLC.LibList.NthFunc.nth_mem	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.bv_and_nth_bitOf	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_carry_neg_f_r	600	0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: case a; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.109207	6
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_list_ingr_r	600	0.1.0.1.0.0	synth with cache (only 1: intros a; only 1: induction a as [| a xs IHxs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.112095	8
coq-tlc.20200328	TLC.LibList.Make.length_make	600
coq-bits.1.1.0	Bits.spec.operations.properties.toNat_rorB	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.ContinuedFractions.SCF'_opp	600
coq-bbv.1.3	bbv.Word.weqb_ne	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zgcd_plus_elim_rl	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.rev.lookup_rev_rec_sort	600
coq-hott.8.11	HoTT.Tactics.EquivalenceInduction.ap.equiv_ap_respects_equivalenceR	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.moveR_transport_p	600
coq-hott.8.11	HoTT.Algebra.Group.grp_iso_prod	600
coq-hott.8.11	HoTT.Classes.implementations.hprop_lattice.contents.absorption_hand_hor	600
coq-hott.8.11	HoTT.Categories.Structure.Core.PreCategoryOfStructures.precategory.path_morphism	600
coq-hott.8.11	HoTT.Cubical.DPath.dp_arrow	600
coq-hott.8.11	HoTT.Cubical.DPath.dp_apD_path_transport	600	0	synth with cache (only 1: by destruct p).	0.036380	1
coq-gaia-stern.1.15	gaia.stern.stern.Stern.fusc1	600	0	synth with cache (only 1: by [  ]).	0.015507	1
coq-corn.8.16.0	CoRN.logic.CornBasics.surj_eq	600
coq-hott.8.11	HoTT.Types.Sum.trunc_sum	600
coq-hott.8.11	HoTT.Spaces.Finite.finite_forall	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.ConnectedTypes.isconnected_sigma	600
coq-gaia-stern.1.15	gaia.stern.fibm.lucas_powge2	600
coq-tlc.20200328	TLC.LibList.Update.update_nth_same	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.ContinuedFractions.continuant_fib	600
coq-bbv.1.3	bbv.Word.split1_bitwp_dist	600
coq-bbv.1.3	bbv.Word.wordToN_wzero'	600	10.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite wordToN_nat; only 1: induction sz; only 1: rewrite wordToNat_wzero; only 1: reflexivity; only 1: cbn; only 1: lia).	0.163601	19
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.bv_and_0_absorb	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Forall2_lookup_none	600
coq-tlc.20200328	TLC.LibEqual.eq_dep_sym	600	0.27.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.088291	30
coq-tlc.20200328	TLC.LibEqual.eq_dep_same_inv	600	0.12.0.0.0	synth with cache (only 1: introv H; only 1: inversions H; only 1: apply eq_dep_nd_same_inv; only 1: intuition; only 1: apply ~ eq_existT_inv).	0.061988	17
coq-tlc.20200328	TLC.LibEqual.JMeq_same_inv	600	0.0.0.0	synth with cache (only 1: intros B; only 1: intros; only 1: inversions H; only 1: trivial).	0.040522	4
coq-topology.10.0.1	Topology.Continuity.continuous_funext	600
coq-tlc.20200328	TLC.LibList.Take.take_succ	600	2.0.0	synth with cache (only 1: intros until l; only 1: intros H; only 1: fequals_rec).	0.042599	5
coq-hott.8.11	HoTT.Idempotents.CoherentIdempotents.equiv_idempotent_retractof	600
coq-tlc.20200328	TLC.LibList.ForallProp.Forall_app	600	1.7.0.0.3.7.7.1	synth with cache (only 1: intros; only 1: induction ~ l1; only 1: rew_list; only 1: constructors *; only 1: inversion H; only 1: inverts ~ H; only 1: inversion H; only 1: rew_logic *).	0.178226	34
coq-tlc.20200328	TLC.LibList.ForallProp.Forall_cons_inv	600	0.1.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.043687	4
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Disjoint.disjoint_equivs	600	0.0.0.0.0	synth with cache (only 1: unfold Proper; only 1: unfold respectful; only 1: red; only 1: intros; only 1: firstorder).	0.069333	5
coq-tlc.20200328	TLC.LibLogic.IffProp.iff_not_not_eq	600	0	synth with cache (only 1: tautop).	0.037838	1
coq-bbv.1.3	bbv.Word.word_neq	600
coq-tlc.20200328	TLC.LibLogic.ProjLemma.forall_conj_inv_1	600	45.1.49.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: firstorder; only 1: intros; only 1: firstorder).	0.153811	102
coq-tlc.20200328	TLC.LibLogic.ProjLemma.forall_conj_inv_3	600	0	synth with cache (only 1: prove_forall_conj_inv).	0.012615	1
coq-tlc.20200328	TLC.LibLogic.ProjLemma.forall_conj_inv_7	600	0	synth with cache (only 1: prove_forall_conj_inv).	0.014545	1
coq-tlc.20200328	TLC.LibLogic.SimplNotQuantifiers.not_forall_eq	600
coq-bbv.1.3	bbv.Word.wordToN_WS_0	600	2	synth with cache (only 1: reflexivity).	0.050754	3
coq-hott.8.11	HoTT.Categories.InitialTerminalCategory.Functors.unique.trunc_to_initial_category	600
coq-hott.8.11	HoTT.PropResizing.Nat.AssumeStuff.ishprop_graph_zero_or_succ	600
coq-hott.8.11	HoTT.Types.Sigma.path_sigma_hprop_pp	600
coq-hott.8.11	HoTT.WildCat.Equiv.isgraph_core	600
coq-hott.8.11	HoTT.WildCat.Equiv.isgraph_core_hom	600	0.1.1.6.0	synth with cache (only 1: compute; only 1: srapply Build_IsGraph; only 1: intros c; only 1: intros; only 1: exact (uncore a $<~> uncore b)).	0.029278	13
coq-hott.8.11	HoTT.Types.Forall.AssumeFunext.isequiv_functor_forall	600
coq-hott.8.11	HoTT.Spaces.Int.Spec.int_negation_pred_negation_red	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.ConnectedTypes.contr_trunc_conn	600
coq-hott.8.11	HoTT.Pointed.Loops.equiv_istrunc_istrunc_loops	600
coq-hott.8.11	HoTT.Basics.Decidable.hset_pathcoll	600
coq-hott.8.11	HoTT.Basics.Trunc.ishprop_istrunc	600
coq-hott.8.11	HoTT.Classes.orders.lattices.meet_semilattice_order.meet_lb_3_assoc_m	600
coq-tlc.20200328	TLC.LibOrder.Instances.gt_ge_trans_of_Le_order	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.ConnectedMaps.conn_map_O_functor	600	3	synth with cache (only 1: exact _).	0.027235	4
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.reflexive_O_leq	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.FArray.add_1	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.FArray.cardinal_1	600	4.0	synth with cache (only 1: intros m; only 1: auto).	0.016210	6
coq-tlc.20200328	TLC.LibRelation.MixedClosures.tclosure_of_rtclosure_r	600
coq-tlc.20200328	TLC.LibLogic.ClassicOr.or_inv_classic_l	600
coq-tlc.20200328	TLC.LibEqual.identity_proofs_unique	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.whiskerL_VpL	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.ap_transport_Vp_idmap	600	0.2.3.0	synth with cache (only 1: destruct r; only 1: simpl; only 1: destruct q; only 1: reflexivity).	0.039413	9
coq-qcert.2.2.0	Qcert.Utils.Digits.Digits.natexplosion.digits_to_nat_aux_acc_inj	600
coq-corn.8.16.0	CoRN.logic.CLogic.CNoDup_map	600
coq-bits.1.1.0	Bits.spec.spec.properties.toZp_eq	600
coq-hott.8.11	HoTT.Basics.PathGroupoids.ap02_pp	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.cut_down_to_lookup_some	600
coq-qcert.2.2.0	Qcert.Utils.CoqLibAdd.CoqLibAdd.Forallt.list_Forallt_eq_dec	600
coq-bits.1.1.0	Bits.spec.spec.properties.getBit_zero	600
coq-gaia-stern.1.15	gaia.stern.fibm.fib_is_even_mod3	600
coq-smtcoq.2.0+8.11	SMTCoq.PArray.PArray.IntOrderedType.lt_not_eq	600
coq-bbv.1.3	bbv.NatLib.lt_mul_mono	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.Inclusion.cut_down_to_in	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.bv_xor_assoc	600
coq-qcert.2.2.0	Qcert.Utils.Lift.Lift.some_lift2	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.Distinct.distinct_false_spec	600
coq-gaia-stern.1.15	gaia.stern.fibm.lucas_square_bound	600
coq-tlc.20200328	TLC.LibList.Map.map_update	600
coq-bbv.1.3	bbv.Word.wordToNat_natToWord_idempotent	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.ContinuedFractions.continuant_cat	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.FArray.add_2	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_cauchyreals.ExtraCreals.cst_crealB	600
coq-bbv.1.3	bbv.Word.wplus_cancel	600
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.irreducible_resolve	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.not_list_or_and	600
coq-poltac.0.8.11	PolTac.NatAux.gt_mult_rev_0_r	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zgcd_plus_elim_lr	600
coq-tlc.20200328	TLC.LibList.mem_map	600
coq-bits.1.1.0	Bits.spec.operations.properties.getBit_set_true	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.multiplication.pos_div_three	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zrelprime.Zrelprime_one_rht	600	0.1.0.0	synth with cache (only 1: intros a; only 1: unfold Zrelprime; only 1: rewrite Zgcd_symm; only 1: apply Zgcd_one_lft).	0.030516	5
coq-bbv.1.3	bbv.Word.wneg_idempotent	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.ContinuedFractions.continuant_gt0	600
coq-tlc.20200328	TLC.LibList.Exists.Nth_Exists	600	0.24.3.0.0	synth with cache (only 1: introv F N; only 1: rewrite * Exists_eq_exists_mem; only 1: exists * x; only 1: intuition; only 1: applys * Nth_mem).	0.342586	32
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection1.PuigBasics.Puig_at_sub	600
coq-bbv.1.3	bbv.Word.wlt_wf	600
coq-hott.8.11	HoTT.Classes.orders.lattices.meet_semilattice_order.meet_r	600
coq-hott.8.11	HoTT.Classes.orders.lattices.lattice_order.join_meet_distr_l_le	600	0.0.0.0.0.1.1.0.0.0.0	synth with cache (only 1: apply meet_le; only 1: apply join_le; only 1: apply join_ub_l; only 1: transitivity y; only 1: apply meet_lb_l; only 1: apply join_ub_r; only 1: apply join_le; only 1: apply join_ub_l; only 1: transitivity z; only 1: apply meet_lb_r; only 1: apply join_ub_r).	0.153813	13
coq-hott.8.11	HoTT.Classes.orders.semirings.full_pseudo_semiring_order.fullpseudosrorder_srorder	600
coq-hott.8.11	HoTT.Classes.orders.semirings.full_pseudo_semiring_order.le_1_4	600	0.2	synth with cache (only 1: apply nonneg_plus_le_compat_r; only 1: solve_propholds).	0.031131	4
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.rec_sort_cons_nin_inv	600
coq-hott.8.11	HoTT.Classes.orders.semirings.full_pseudo_semiring_order.nonneg_mult_rev_l	600
coq-gaia-stern.1.15	gaia.stern.fibm.lucas_fib_lucas_square	600
coq-tlc.20200328	TLC.LibList.Concat.concat_cons	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_carry_neg_f	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.plus_distr	600	0.3.0.3	synth with cache (only 1: intros n; only 1: intros; only 1: rewrite N2Nat.inj_add; only 1: easy).	0.041922	10
coq-bbv.1.3	bbv.Word.wordToNat_gt2	600	0.0.0.0.0	synth with cache (only 1: intros; only 1: pre_nomega; only 1: rewrite wordToN_to_nat; only 1: rewrite wordToN_to_nat; only 1: auto).	0.045169	5
coq-bbv.1.3	bbv.Word.wordToNat_le2	600	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold wlt; only 1: intros C; only 1: apply Nlt_out in C; only 1: rewrite wordToN_to_nat in *; only 1: rewrite wordToN_to_nat in *; only 1: lia).	0.061325	7
coq-bbv.1.3	bbv.Word.wrshift_gt	600
coq-bbv.1.3	bbv.Word.wmsb_0	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.ContinuedFractions.continuant_zeroB	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.multiplication.pos_div_eight	600
coq-bits.1.1.0	Bits.spec.spec.properties.joinmsbK	600
coq-bbv.1.3	bbv.Word.wmsb_1	600
coq-tlc.20200328	TLC.LibList.Filter.length_filter	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_list_carry_comm	600
coq-gaia-stern.1.15	gaia.stern.fibm.path_all_llen	600
coq-tlc.20200328	TLC.LibList.Noduplicates.noduplicates_app	600
coq-bits.1.1.0	Bits.spec.operations.properties.getBit_set_false	600
coq-gaia-stern.1.15	gaia.stern.fibm.Zeckv_nil	600
coq-bbv.1.3	bbv.Word.wmsb_0_natToWord	600
coq-hott.8.11	HoTT.Tactics.EquivalenceInduction.Unnamed_thm	600
coq-hott.8.11	HoTT.Spaces.Finite.finmult_const	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.fuscp_injective	600
coq-corn.8.16.0	CoRN.logic.CornBasics.Zlt_reg_mult_l	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternRat.Sba_m_snum	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zgcd_minus_elim_rr	600
coq-tlc.20200328	TLC.LibList.Noduplicates.noduplicates_length_eq	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.ModalMaps.mapinO_isequiv	600
coq-hott.8.11	HoTT.Classes.orders.lattices.meet_semilattice_order.OrderPreserving_instance_0	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zgcd.Zgcd_mod_rht	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.RecProject.rproject_remove_all	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternRat.Sba_j_snum	600
coq-tlc.20200328	TLC.LibList.nth_combine	600
coq-gaia-stern.1.15	gaia.stern.fibm.Zeckvp_cons	600
coq-bbv.1.3	bbv.Word.induct_word_S	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.assoc_lookupr_nodup_perm	600
coq-bbv.1.3	bbv.Word.wmsb_default	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.length_add_list_ge	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.ConnectedMaps.conn_map_elim	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Forall2_lookupr_some	600
coq-hott.8.11	HoTT.PropResizing.Nat.AssumeStuff.N_zero_or_succ	600
coq-tlc.20200328	TLC.LibList.TakeDropLast.take_drop_last_length	600
coq-tlc.20200328	TLC.LibList.ForallProp.Forall_nth_inv	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.distinctdom.bdistinct_domain_NoDup	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.alldisjoint.all_disjoint2_facts	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternRat.Stern_bij1_inj	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternRat.Stern_odd	600
coq-bbv.1.3	bbv.Word.wmsb_combine_WO	600
coq-bbv.1.3	bbv.Word.wordToZ_WS_1	600
coq-gaia-stern.1.15	gaia.stern.fibm.Zeck_li_prop2	600
coq-bbv.1.3	bbv.Word.wmsb_wnot	600
coq-bbv.1.3	bbv.Word.wmsb_wneg_false	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.FArray.add_3	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_cauchyreals.ExtraCreals.lecr_trans	600
coq-qcert.2.2.0	Qcert.Utils.CoqLibAdd.CoqLibAdd.Nutil.fold_left_arith_dist4	600
coq-hott.8.11	HoTT.PropResizing.Nat.AssumeStuff.graph_add_succ	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.ConnectedMaps.isequiv_O_rec_conn_map	600
coq-hott.8.11	HoTT.Classes.orders.lattices.meet_semilattice_order.meet_le_compat	600
coq-hott.8.11	HoTT.Basics.Decidable.ishprop_decpaths	600
coq-hott.8.11	HoTT.Classes.orders.lattices.lattice_order.Absorption_instance_0	600
coq-tlc.20200328	TLC.LibOrder.Instances.Case_le_gt_of_Le_total_order	600
coq-hott.8.11	HoTT.Modalities.ReflectiveSubuniverse.equiv_path_subuniverse	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.FArray.lt_farray_trans	600
coq-qcert.2.2.0	Qcert.Utils.Lift.Lift.mk_lazy_lift_prop_inv	600
coq-bits.1.1.0	Bits.spec.spec.properties.split4eta	600
coq-bits.1.1.0	Bits.spec.spec.properties.catB_inj	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.lookup_eq.lookup_swap_neq	600
coq-qcert.2.2.0	Qcert.Utils.CoqLibAdd.CoqLibAdd.Zutil.pos_succ_nat_inv	600
coq-bbv.1.3	bbv.NatLib.pow2_le	600
coq-bits.1.1.0	Bits.spec.spec.properties.zeroExtend_fromNat	600
coq-smtcoq.2.0+8.11	SMTCoq.PArray.PArray.get_set_same	600
coq-qcert.2.2.0	Qcert.Utils.ListAdd.ListAdd.alldisjoint.all_disjoint_has_same_eq	600
coq-smtcoq.2.0+8.11	SMTCoq.Misc.aexistsbi_false_spec	600
coq-gaia-stern.1.15	gaia.stern.fibm.fib_sum_odd_alt	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.ult_list_not_eqP	600
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.FArray.extensionality	600
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_cauchyreals.ExtraCreals.asympt_eq_creal	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.bin_mod2_prop3	600
coq-bbv.1.3	bbv.Word.combine_wplus_1	600
coq-gaia-stern.1.15	gaia.stern.fibm.fib_sum_even_alt2	600
coq-gaia-stern.1.15	gaia.stern.fibm.ZeckM_prop4	600
coq-tlc.20200328	TLC.LibList.Forall2.Forall2_take	600
coq-bbv.1.3	bbv.Word.existT_sext	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.bv_ult_B2P	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.misc.Sumx_resp_less	600
coq-gaia-stern.1.15	gaia.stern.fibm.card_max_rep_val	600
coq-bbv.1.3	bbv.Word.ZToWord_Npow2_add_k	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.FuscSum.fuscq_eq0	600
coq-bbv.1.3	bbv.Word.ZToWord_mult	600
coq-tlc.20200328	TLC.LibList.Exists.Exists_app_inv	600
coq-corn.8.16.0	CoRN.model.Zmod.ZGcd.zrelprime.Zrelprime_div_mult_elim	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.bv_ult_not_eqP	600
coq-tlc.20200328	TLC.LibList.Exists.Exists_last_inv	600
coq-tlc.20200328	TLC.LibList.Exists.Exists_take_inv	600
coq-tlc.20200328	TLC.LibList.Count.count_cons	600
coq-bbv.1.3	bbv.Word.sext_wplus_wordToZ_distr	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.bin_invert_p1	600
coq-bbv.1.3	bbv.Word.extz_pow2_wordToZ	600
coq-bbv.1.3	bbv.Word.wminus_wordToZ'	600
coq-gaia-stern.1.15	gaia.stern.fibm.Zeck_val_cv1	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.misc.positive_Sumx	600
coq-bits.1.1.0	Bits.spec.operations.properties.toNat_mulB	600
coq-hott.8.11	HoTT.Classes.orders.semirings.dec_semiring_order.dec_pseudo_srorder	600
coq-bbv.1.3	bbv.Word.word_ring_theory_Z	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.RecProject.rec_sort_rproject_remove_all_in	600
coq-bits.1.1.0	Bits.spec.operations.properties.mulBC	600
coq-qcert.2.2.0	Qcert.Utils.Bindings.RecRemove.nin_rremove	600
coq-hott.8.11	HoTT.Spaces.Finite.nat_fin_compl_compl	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.WeakBaseTwoRepresentation.wbase2_correct	600
coq-tlc.20200328	TLC.LibList.Count2.count_Forall	600
coq-bits.1.1.0	Bits.spec.operations.properties.mulBDl	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.rev_eq	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_neg_list_carry_neg_t	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.and_with_bool_len	600
coq-corn.8.16.0	CoRN.algebra.COrdFields.Properties_of_Ordering.misc.negative_Sumx	600
coq-gaia-stern.1.15	gaia.stern.fibm.GRr_big0	600
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.length_extract	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.WeakBaseTwoRepresentation.size_tuple_padl	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.WeakBaseTwoRepresentation.wbase2_exists	600
coq-bbv.1.3	bbv.Word.word_ring_morph_Z	600
coq-bbv.1.3	bbv.Word.wmsb_Zabs_neg	600
coq-tlc.20200328	TLC.LibList.Count2.count_pos_of_mem	600
coq-bbv.1.3	bbv.Word.mod_factor	600
coq-bbv.1.3	bbv.Word.wordToNat_wnot	600
coq-bbv.1.3	bbv.Word.move_wplus_wminus	600
coq-gaia-stern.1.15	gaia.stern.fibm.GAr_big0	600
coq-gaia-stern.1.15	gaia.stern.fibm.GRr_big	600
coq-bbv.1.3	bbv.Word.wordToNat_mod	600
coq-gaia-stern.1.15	gaia.stern.fibm.FA_small	600
coq-gaia-stern.1.15	gaia.stern.fibm.Zeck_fib4	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.split_sternD	600
coq-bbv.1.3	bbv.Word.wlshift_mul_Zpow2	600
coq-bbv.1.3	bbv.Word.wordToN_wordToZ	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Lookup_diff.lookup_diff_disjoint	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.sternD_nth_even	600
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Lookup_equiv_on.lookup_equiv_on_update_first	600
coq-bbv.1.3	bbv.Word.wmod_mul_does_not_hold	600
coq-tlc.20200328	TLC.LibList.ListSub.list_sub_wf	600
coq-gaia-stern.1.15	gaia.stern.fibm.FR_lucas2	600
coq-gaia-stern.1.15	gaia.stern.stern.Stern.nth_stern11_alt	600
