Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	10.681613	1
Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	11.712293	2
Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	12.571558	2
Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.540115	2
Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	1.916261	1
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	13.131681	2
Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	13.009354	2
Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	13.366628	2
Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	13.250510	2
Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	13.464494	5
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	14.160008	2
Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	1.617826	1
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	14.888097	3
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.2.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	16.701727	26
Coq.Init.Datatypes.eq_true_ind_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	18.222259	7
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	18.772153	16
Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	6.199230	3
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	19.464226	13
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	19.450262	16
Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	6.755202	3
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	20.109119	18
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	21.255600	20
Coq.Init.Peano.n_Sn	120	0.0.6.0	synth with cache (only 1: intros ?; only 1: elim n; only 1: auto; only 1: auto).	21.885869	31
Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	10.775771	7
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.5	synth with cache (only 1: destruct 1; only 1: reflexivity).	10.270949	20
Coq.Init.Logic.universal_quantification.inst	120	0.0	synth with cache (only 1: unfold all; only 1: auto).	5.031673	3
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	9.701846	6
Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	24.693460	6
Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	5.226163	7
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	4.787394	2
Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	26.060412	5
Coq.Init.Logic.universal_quantification.gen	120	1.1	synth with cache (only 1: unfold all; only 1: auto).	7.013283	12
Coq.Init.Logic.and_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	26.584767	30
Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	28.239914	29
Coq.Init.Datatypes.surjective_pairing	120	0.0.1	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	4.504703	5
Coq.Init.Datatypes.andb_true_intro	120	0.0.0.0.0.0.0.0.0.0.0.24	synth with cache (only 1: intros ?; only 1: destruct b1; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: assumption; only 1: simpl; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: assumption).	29.501954	100
Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	11.642085	6
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	6.094768	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	6.101845	3
Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).	15.757583	24
Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	32.460680	7
Coq.Init.Datatypes.rew_pair	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.554480	3
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	21.719597	34
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	1.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	8.863859	10
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.1.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	9.991063	9
Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	11.268618	3
Coq.Init.Specif.sigT.eq_existT_curried	120	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	25.095888	6
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	2.772367	3
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.301402	3
Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.1.0.0	synth with cache (only 1: destruct p'; only 1: destruct q; only 1: destruct q'; only 1: reflexivity).	27.422833	8
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.054005	3
Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	17.035829	8
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	7.249106	4
Coq.Init.Logic.and_cancel_r	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	42.254513	54
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.259394	4
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	17.045348	28
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	3.837127	5
Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	1.548821	1
Coq.Init.Logic.f_equal_compose	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.004158	3
Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	45.483562	58
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.483478	6
Coq.Init.Logic.eq_sym_involutive	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.766845	3
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Logic.eq_trans_refl_l	120	0.0.5	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	4.884410	19
Coq.Init.Logic.eq_trans_assoc	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	2.878619	3
Coq.Init.Logic.rew_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.061885	3
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.3	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	4.272161	12
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.3	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	4.416838	12
Coq.Init.Logic.map_subst	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.170322	3
Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	51.326860	69
Coq.Init.Logic.map_subst_map	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.025542	3
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	1.552136	1
Coq.Init.Logic.rew_swap	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	3.625456	4
Coq.Init.Logic.rew_compose	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H1; only 1: reflexivity).	3.668306	4
Coq.Init.Wf.Well_founded.Acc_inv	120	0.6	synth with cache (only 1: destruct 1; only 1: trivial).	53.918389	59
Coq.Init.Logic.eq_trans_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	3.167998	3
Coq.Init.Specif.sig.eq_exist_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	22.416249	8
Coq.Init.Logic.eq_sym_map_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.377850	3
Coq.Init.Wf.Well_founded.well_founded_induction_type	120	0.36.0.37.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: apply Acc_intro; only 1: trivial).	57.021381	1084
Coq.Init.Logic.eq_trans_sym_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	3.713106	4
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	4.428869	4
Coq.Init.Logic.rew_const	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.436455	3
Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	17.133787	8
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	46.337616	73
Coq.Init.Logic.eq_trans_map	120	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: destruct H2'; only 1: destruct H1'; only 1: destruct H1; only 1: reflexivity).	12.722105	27
Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	2.604882	2
Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H0; only 1: assumption).	42.244674	64
Coq.Init.Logic_Type.identity_ind_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	37.386730	24
Coq.Init.Peano.plus_n_O	120	0.0.6.0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	61.584250	140
Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	8.883653	3
Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	4.562952	4
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	7.577545	4
Coq.Init.Logic.inhabited_covariant	120	0.0.8.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply inhabits; only 1: apply X; only 1: assumption).	9.951437	28
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.17.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	42.342461	63
Coq.Init.Wf.Well_founded.well_founded_induction	120	76	synth with cache (only 1: exact well_founded_induction_type).	17.373667	168
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.21.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	42.371524	74
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	4.960287	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.19.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	43.367935	76
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	5.131740	3
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	7.052797	7
Coq.Init.Logic.or_cancel_r	120	0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: left; only 1: assumption; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_r).	66.769054	118
Coq.Init.Peano.nat_case	120	0.0.0.3	synth with cache (only 1: intros; only 1: destruct n; only 1: auto; only 1: auto).	12.731983	11
Coq.Init.Logic.equality_dep.f_equal_dep	120	77.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	48.160400	285
Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	20.712901	30
Coq.Init.Wf.Well_founded.well_founded_ind	120	0.48.1	synth with cache (only 1: intros; only 1: apply well_founded_induction; only 1: auto).	28.540075	194
Coq.Init.Logic.eq_stepl	120	0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	31.157243	25
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	27.794546	7
Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.0.3	synth with cache (only 1: intros; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	19.220738	14
Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	18.429542	4
Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	19.268337	3
Coq.Init.Specif.sigT.eq_sigT_uncurried	120	0.1.0.0.2.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: destruct pq; only 1: simpl in *; only 1: destruct x1; only 1: destruct e; only 1: reflexivity).	104.756598	111
Coq.Init.Logic.or_cancel_l	120	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: destruct H1; only 1: right; only 1: assumption; only 1: destruct H; only 1: assumption; only 1: assumption; only 1: assumption; only 1: intros; only 1: destruct H2; only 1: right; only 1: assumption; only 1: destruct H0; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply or_iff_compat_l).	100.220758	173
Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	16.525718	9
Coq.Init.Datatypes.andb_prop	120
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Logic.neg_false	120
Coq.Init.Tactics.decide_left	120
Coq.Init.Specif.exists_to_inhabited_sig	120
Coq.Init.Specif.sig.eq_sig_uncurried	120	0.56.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist_uncurried; only 1: exact pq).	83.522921	178
Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	44.812332	7
Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	11.138302	3
Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.252391	3
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Peano.mult_n_O	120
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	9.7.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct r; only 1: trivial).	79.512686	521
Coq.Init.Peano.le_S_n	120
Coq.Init.Peano.le_pred	120
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120	0.0.36.0	synth with cache (only 1: intros; only 1: apply Fix_F_2; only 1: auto; only 1: auto).	29.515904	92
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120	0.57.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_existT2_uncurried; only 1: exact pqr).	79.284245	172
Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	21.269643	7
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Peano.nat_rect_succ_r	120	0.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	24.129527	14
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Specif.Choice_lemmas.Choice	120
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Specif.sig2.eq_sig2_uncurried	120	0.55.0.0.0	synth with cache (only 1: destruct u; only 1: destruct v; only 1: simpl in *; only 1: apply @eq_exist2_uncurried; only 1: exact pqr).	82.073058	177
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Logic.unique_existence	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Peano.le_0_n	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Peano.max_l	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Datatypes.CompOpp_inj	120
Coq.Init.Peano.max_r	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Peano.min_r	120	0.0.0.0.1.0.0.4.1.0.1.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: inversion 1; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).	111.354345	214
Coq.Init.Peano.min_l	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
Coq.Init.Peano.nat_rect_plus	120
