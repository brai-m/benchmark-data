
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	15.15.6	synth with cache (only 1: intros n0; only 1: intros a b; only 1: CRelationClasses.simpl_crelation).	12.1285920143	7871
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	7.3.16.12	synth with cache (only 1: intros c; only 1: intros n0; only 1: intros y; only 1: firstorder).	9.08619499207	6018
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	29	synth with cache (only 1: CRelationClasses.simpl_crelation).	2.97012114525	1945
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	6.19	synth with cache (only 1: intros a b H; only 1: intuition).	2.87988781929	1309
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	29	synth with cache (only 1: firstorder  (subst; auto)).	1.71347904205	833
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0517539978027	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0526609420776	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.1.11	synth with cache (only 1: intros w; only 1: intro; only 1: ring).	0.302250862122	121
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.057119846344	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.052983045578	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	1.0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).	0.271312952042	50
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.4.3.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	3.16988396645	546
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0	synth with cache (only 1: intros n m p; only 1: intuition Z.order).	0.0157959461212	2
Coq.micromega.Ztac.elim_concl_eq	40	4	synth with cache (only 1: intuition Z.order).	0.0429899692535	21
Coq.micromega.Ztac.elim_concl_le	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.ge_le).	0.012274980545	6
Coq.micromega.Ztac.elim_concl_lt	40	5.0	synth with cache (only 1: intros x y H; only 1: now apply Z.nle_gt).	0.0291540622711	25
Coq.micromega.Ztac.Zlt_le_add_1	40	0.8.0.1	synth with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: Z.order).	0.925461053848	285
Coq.micromega.Ztac.add_le	40	2.1	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0353529453278	14
Coq.micromega.Ztac.mul_le	40	0.0.4.0	synth with cache (only 1: intros n m Hn Hm; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0202848911285	8
Coq.micromega.ZifyInst.eq_pos_inj	40	1.0.2.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: split; only 1: congruence; only 1: congruence).	0.0824320316315	28
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.0.0.0.0.0.0.0.2.0.9.11.1.33	synth with cache (only 1: revert x; only 1: intros n; only 1: unfold Z.max, Pos.max; only 1: rewrite Z.compare_sub; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: unfold Z.sub; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	22.6088759899	21683
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0123419761658	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0129089355469	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.013650894165	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0139219760895	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	synth with cache (only 1: exact (SORlt_wd sor)).	0.0138900279999	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0621569156647	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	5.3.2.35	synth with cache (only 1: split; only 1: exact (SORplus_wd sor); only 1: exact (SORtimes_wd sor); only 1: exact (SORopp_wd sor)).	2.98728609085	2447
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.1.0.0.4	synth with cache (only 1: intros a b; only 1: intro; only 1: intro; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	2.62737107277	1146
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.3.1	synth with cache (only 1: intros n0 H'; only 1: rewrite Rplus_comm; only 1: auto with real).	0.242484807968	89
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.2.3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: cut (1 + 0 * x = 1); only 1: auto with real; only 1: ring).	0.28523015976	96
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.3.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0437989234924	7
Coq.micromega.ZifySint63.to_Z_bounded	40
Coq.micromega.ZifySint63.ltb_lt	40
Coq.micromega.ZifySint63.leb_le	40
Coq.micromega.ZifySint63.eqb_eq	40
Coq.micromega.ZifySint63.eq_int_inj	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	0.0294930934906	5
Coq.micromega.ZifySint63.div_quots	40
Coq.micromega.ZifySint63.quots_spec	40
Coq.micromega.ZifySint63.is_zeroE	40	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: case Z.eqb_spec; only 1: intros h; only 1: apply (Uint63.to_Z_inj n 0) in h; only 1: subst n; only 1: reflexivity; only 1: generalize (proj1 (is_zero_spec n)); only 1: case is_zero; only 1: intros ->; only 1: destruct 1; only 1: easy; only 1: auto; only 1: auto).	3.46556520462	694
Coq.micromega.ZifyClasses.mkapp2	40	4.13	synth with cache (only 1: subst; only 1: trivial).	0.0781390666962	155
Coq.micromega.ZifyClasses.mkapp	40	9.35	synth with cache (only 1: subst; only 1: trivial).	0.323057174683	1081
Coq.micromega.ZifyClasses.mkrel	40	6.0	synth with cache (only 1: subst; only 1: auto).	0.0163230895996	8
Coq.micromega.ZifyClasses.and_morph	40	5.1.0.0.1.2.0.0.0.0.7	synth with cache (only 1: intro H; only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	7.0315258503	16352
Coq.micromega.ZifyClasses.or_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.120651006699	2
Coq.micromega.ZifyClasses.impl_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0293409824371	2
Coq.micromega.ZifyClasses.iff_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0495929718018	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0223278999329	2
Coq.micromega.ZifyClasses.eq_iff	40	0.0.1.2	synth with cache (only 1: intros A B []; only 1: split; only 1: auto; only 1: auto).	0.0264039039612	16
Coq.micromega.ZifyClasses.rew_iff	40	3	synth with cache (only 1: tauto).	0.0138471126556	4
Coq.micromega.ZifyClasses.rew_iff_rev	40	4	synth with cache (only 1: tauto).	0.0140690803528	5
Coq.micromega.ZifyUint63.to_Z_bounded	40	7.0	synth with cache (only 1: intro H; only 1: apply to_Z_rec_bounded).	0.0394380092621	11
Coq.micromega.ZifyUint63.ltb_lt	40
Coq.micromega.ZifyUint63.leb_le	40
Coq.micromega.ZifyUint63.eqb_eq	40
Coq.micromega.ZifyUint63.eq_int_inj	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	0.0294690132141	5
Coq.micromega.ZifyUint63.is_evenE	40
Coq.micromega.ZMicromega.eq_le_iff	40	5	synth with cache (only 1: intuition Z.order).	0.158728122711	45
Coq.micromega.ZMicromega.lt_le_iff	40	2.0.3.0	synth with cache (only 1: intro; only 1: split; only 1: now destruct x as [| [x| x| ]| ]; only 1: apply Z.lt_le_pred).	0.143077135086	37
Coq.micromega.ZMicromega.le_0_iff	40	0.0.3.2	synth with cache (only 1: intros a m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.0497088432312	30
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.pop2_bop2	40
Coq.micromega.ZMicromega.Zeval_op2_hold	40
Coq.micromega.ZMicromega.Zeval_formula_compat	40	0.0.2.8	synth with cache (only 1: intros H; only 1: intros Hn; only 1: fix even_spec 1; only 1: tauto).	0.54615187645	413
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40	4.20.16	synth with cache (only 1: intros H; only 1: fix even_spec 1; only 1: auto).	9.38958501816	17668
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.6.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0171549320221	9
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.2.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	0.123603105545	30
Coq.micromega.ZMicromega.isZ0_n0	40
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	0.0.0.0.2.0.0.0.14.3.0.11.1.1	synth with cache (only 1: intros; only 1: revert H; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros H; only 1: destruct p; only 1: now f_equal; only 1: destr_eq H; only 1: now destruct Hn || easy; only 1: intros; only 1: easy; only 1: intros; only 1: simpl; only 1: inv H).	35.0772411823	37030
Coq.micromega.ZMicromega.pos_le_add	40	0.0.2.0.0.2.17	synth with cache (only 1: intros g; only 1: fix sqrtrem_spec 1; only 1: intros y; only 1: destruct y as [y| y| ]; only 1: easy; only 1: now rewrite ?Pos.square_xO; only 1: trivial).	1.39675998688	2257
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.ltof_bdepth_split_l	40	7.15.2.2	synth with cache (only 1: intros env e; only 1: intros x; only 1: apply (proj1 (Nat.succ_le_mono _ _)); only 1: intuition).	10.0738730431	12487
Coq.micromega.ZMicromega.ltof_bdepth_split_r	40	10.0.0.0	synth with cache (only 1: intros; only 1: unfold ltof; only 1: simpl; only 1: auto with arith).	0.739792108536	453
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.2.0.1.0.8	synth with cache (only 1: intros z n H; only 1: apply Z.ge_le; only 1: rewrite ?eval_pol_sub; only 1: rewrite <- !eval_pol_norm; only 1: Z.nzsimpl; only 1: now destruct Hn || easy).	5.41929507256	2308
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.0324740409851	5
Coq.micromega.ZMicromega.eval_nformula_split	40
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.xorb_eq	40	23	synth with cache (only 1: destr_bool).	0.0784981250763	255
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.b2n_b2z	40
Coq.micromega.ZifyBool.b2z_spec	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40	0.2.5.1.1.0	synth with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: simpl; only 1: rewrite Pos.add_comm; only 1: simpl; only 1: auto).	0.252919912338	232
Coq.micromega.Env.S.jump_succ	40	3.2	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0406029224396	37
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	5.4.3.9	synth with cache (only 1: destruct p; only 1: easy'; only 1: now destruct p; only 1: auto).	0.531045913696	551
Coq.micromega.Env.S.nth_pred_double	40	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0162620544434	3
Coq.micromega.Tauto.S.EVAL.eval_f_rew	40	32.0.5	synth with cache (only 1: intro H; only 1: intro n; only 1: now destruct n).	19.3282339573	24613
Coq.micromega.Tauto.S.eiff_refl	40	0.0.264.140	synth with cache (only 1: red; only 1: induction k as [| k IHk]; only 1: reflexivity; only 1: trivial).	21.249765873	164545
Coq.micromega.Tauto.S.eiff_sym	40	0.1.0.1.5.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct 1; only 1: tauto).	0.429918050766	221
Coq.micromega.Tauto.S.eiff_trans	40	0.5.0.0.2.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intros; only 1: intuition; only 1: destruct 2; only 1: intuition).	0.639784812927	393
Coq.micromega.Tauto.S.hold_eiff	40
Coq.micromega.Tauto.S.eiff_eq	40	1.0.1.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0248281955719	7
Coq.micromega.Tauto.S.eAnd_morph_Proper	40	0.1.0.0.0.0	synth with cache (only 1: destruct k; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intros; only 1: intuition congruence).	0.0422718524933	7
Coq.micromega.Tauto.S.eOR_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.103480100632	6
Coq.micromega.Tauto.S.eIMPL_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.03928399086	6
Coq.micromega.Tauto.S.eIFF_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0555000305176	6
Coq.micromega.Tauto.S.eNOT_morph_Proper	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0615921020508	6
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.1.0.3	synth with cache (only 1: intros A t; only 1: intro l; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: reflexivity).	0.0325880050659	19
Coq.micromega.Tauto.S.is_bool_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	5	synth with cache (only 1: destr_bool).	0.106734991074	33
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.00780415534973	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.00803709030151	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	5.0.9.19	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: discriminate).	1.79998588562	3489
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	10.21	synth with cache (only 1: fix odd_spec 1; only 1: easy).	13.5332291126	14139
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.0.0.3.5	synth with cache (only 1: destruct f; only 1: reflexivity; only 1: unfold cnf_tt; only 1: simpl; only 1: congruence).	0.261449098587	155
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	0.0.26	synth with cache (only 1: fix even_spec 1; only 1: intros f; only 1: auto).	10.3242628574	12959
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	1.0.0.0.0.2.3.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: reflexivity).	1.0737221241	421
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff_r	40	1.0.1.0.1.1.23.5.24	synth with cache (only 1: destruct f; only 1: reflexivity; only 1: unfold cnf_ff; only 1: unfold and_cnf_opt; only 1: destruct (is_cnf_ff f) eqn:EQ1; only 1: rewrite orb_comm; only 1: reflexivity; only 1: rewrite orb_comm; only 1: reflexivity).	10.8671400547	19606
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite is_cnf_ff_cnf_ff; only 1: rewrite orb_comm; only 1: rewrite orb_comm; only 1: rewrite orb_comm; only 1: rewrite orb_comm; only 1: reflexivity).	0.0643470287323	12
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_tt	40	2.1.0.4.4.1.0.0	synth with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite orb_comm; only 1: simpl; only 1: destruct (is_cnf_ff f) eqn:EQ1; only 1: apply is_cnf_ff_inv in EQ1; only 1: congruence; only 1: reflexivity).	3.89813804626	2465
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_bool_abst_simpl	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_simpl_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.mk_iff_is_bool	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_iff_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_eq_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_and_xcnf	40
Coq.micromega.Tauto.S.rxcnf_or_xcnf	40
Coq.micromega.Tauto.S.rxcnf_impl_xcnf	40
Coq.micromega.Tauto.S.rxcnf_iff_xcnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	1.1.9.37.25.1	synth with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: simpl; only 1: tauto; only 1: tauto).	34.6554038525	78476
Coq.micromega.Tauto.S.eval_cnf_tt	40	1.0.0.0	synth with cache (only 1: clear; only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0208470821381	5
Coq.micromega.Tauto.S.eval_cnf_and_opt	40	1.0.4.3.1	synth with cache (only 1: clear; only 1: intro l; only 1: fix gcd_divide 1; only 1: intros r EVAL; only 1: auto).	1.14672589302	695
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	39.3	synth with cache (only 1: intros; only 1: eauto).	8.77931880951	10985
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	1.0.0.0.0.2.3.0.0.2.0	synth with cache (only 1: unfold eval_cnf; only 1: intros env t; only 1: simpl; only 1: set (F := fun (acc : list clause) (e : clause) => match or_clause t e with | Some cl => cl :: acc | None => acc end); only 1: induction f as [| a f IHf]; only 1: unfold eval_clause; only 1: simpl; only 1: tauto; only 1: unfold eval_clause; only 1: simpl; only 1: tauto).	28.7759549618	6202
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0702900886536	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.hold_eTT	40	0.2.1.4.0	synth with cache (only 1: clear; only 1: intro n; only 1: destruct n; only 1: firstorder; only 1: do 2 constructor).	0.13717508316	156
Coq.micromega.Tauto.S.hold_eFF	40	0.0.0.0.0.0	synth with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0578100681305	6
Coq.micromega.Tauto.S.hold_eAND	40	1.5.4.1.0.4.0.0.0	synth with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros k; only 1: clear; only 1: fix even_spec 1; only 1: tauto).	26.4677741528	11095
Coq.micromega.Tauto.S.hold_eOR	40
Coq.micromega.Tauto.S.hold_eNOT	40
Coq.micromega.Tauto.S.hold_eIMPL	40
Coq.micromega.Tauto.S.hold_eIFF	40
Coq.micromega.Tauto.S.xcnf_impl	40
Coq.micromega.Tauto.S.hold_eIFF_IMPL	40
Coq.micromega.Tauto.S.hold_eEQ	40	0.0.0.0.0.0.1.0.0	synth with cache (only 1: simpl; only 1: intros e1 e2; only 1: unfold is_true; only 1: rewrite eqb_true_iff; only 1: destruct e1, e2; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.181543827057	10
Coq.micromega.Tauto.S.xcnf_iff	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	28.13	synth with cache (only 1: intros; only 1: firstorder).	5.88962101936	3869
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	17.24	synth with cache (only 1: intros l n d ln dn Hlen; only 1: firstorder).	5.37266206741	3450
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	44	synth with cache (only 1: firstorder).	4.53462409973	3299
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	63	synth with cache (only 1: firstorder).	3.92770695686	3795
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	78	synth with cache (only 1: firstorder).	6.01187992096	6374
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	0.0.0.0.32	synth with cache (only 1: unfold tail; only 1: apply env_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal).	33.2501840591	14720
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	28.0071380138	2633
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.165755033493	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.183339118958	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	3.3.6.13	synth with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: rsimpl; only 1: now jump_simpl; only 1: now jump_simpl).	4.02009677887	1060
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0102229118347	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	synth with cache (only 1: exact (SORtimes_wd sor)).	0.00860619544983	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	1	synth with cache (only 1: exact (SORopp_wd sor)).	0.00880002975464	2
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	synth with cache (only 1: exact (SORle_wd sor)).	0.00981903076172	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	synth with cache (only 1: exact (SORlt_wd sor)).	0.0102210044861	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.4	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.046149969101	9
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40	4.3.123	synth with cache (only 1: clear; only 1: fix gcd_divide 1; only 1: auto).	36.069288969	76495
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	1.2.0.5.1	synth with cache (only 1: intros P Q l; only 1: induction l as [| a l' Hrec]; only 1: constructor; only 1: simpl; only 1: trivial).	0.475613117218	374
Coq.micromega.Refl.make_impl_map	40	2.1.0.0.2.2.3	synth with cache (only 1: intros op Hop; only 1: intros n d; only 1: induction l; only 1: intro l; only 1: firstorder; only 1: simpl in *; only 1: firstorder  (subst; auto)).	3.07974410057	1784
Coq.micromega.Refl.make_conj_cons	40	1.2.1.4.0	synth with cache (only 1: intros A eval l; only 1: intros []; only 1: simpl; only 1: intuition congruence; only 1: now simpl).	2.17437696457	1125
Coq.micromega.Refl.make_conj_impl	40	0.1.3.1.0.0.3.0.1.0	synth with cache (only 1: intros A eval l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros HF; only 1: tauto; only 1: intros; only 1: simpl; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	18.361787796	10641
Coq.micromega.Refl.make_conj_in	40	1.1.1.0.1.8	synth with cache (only 1: intros H a l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	1.93708586693	1553
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.0.0.3.0.1.2.2	synth with cache (only 1: simpl; only 1: intros A eval l; only 1: intros n m; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition).	7.03507113457	1700
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	synth with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0493068695068	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qlt_bool_iff	40	2.0.0.0.0.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: apply Z.ltb_lt).	0.632705926895	94
Coq.micromega.QMicromega.pop2_bop2	40
Coq.micromega.QMicromega.Qeval_op2_hold	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	synth with cache (only 1: exact RTheory).	0.0225019454956	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.0	synth with cache (only 1: intro; only 1: field).	0.0803110599518	17
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40	2.0.5.30.23	synth with cache (only 1: assert (H : forall a b : Q, (0 < a)%Q -> (0 < b)%Q -> / a - / b == (b - a) / (a * b)) by (intros; field; Lqa.lra); only 1: generalize (Rlt_irrefl 0); only 1: unfold Qopp, Qeq, Q2R; only 1: intros; only 1: auto with real).	2.9614379406	4059
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	1.5.0.0.1.1.0.0.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: now try Nat.order'; only 1: intros H; only 1: now destruct Hn || easy; only 1: congruence; only 1: simpl; only 1: Z.swap_greater; only 1: Lia.lia).	8.62116384506	3196
Coq.micromega.RMicromega.Q2R_m_Proper	40	0.3.0.1	synth with cache (only 1: intros x y H; only 1: apply Qeq_true; only 1: rewrite Qeq_bool_iff; only 1: assumption).	0.871490001678	139
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0630371570587	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.pop2_bop2	40
Coq.micromega.RMicromega.Reval_op2_hold	40
Coq.micromega.RMicromega.Reval_pop2_eval_op2	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.QReval_formula_compat	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: destruct f; only 1: simpl; only 1: rewrite Reval_op2_hold; only 1: apply Reval_pop2_eval_op2).	0.0713369846344	6
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40	7.19	synth with cache (only 1: fix even_spec 1; only 1: auto).	4.61841392517	4386
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40	1.3.9.0.0	synth with cache (only 1: intros m n v1; only 1: revert n; only 1: fix odd_spec 1; only 1: intros v; only 1: eauto).	11.2639119625	1298
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	13	synth with cache (only 1: congruence).	0.728924036026	358
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40	1.2.2.6.1.7.3	synth with cache (only 1: intro l'; only 1: intros n0 H x fxn; only 1: unfold nth_order; only 1: f_equal; only 1: f_equal; only 1: pose (def_n2 := eq_refl); only 1: apply Peano_dec.le_unique).	20.8109080791	18317
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	1.1.12	synth with cache (only 1: induction p as [| ? p]; only 1: now simpl; only 1: now simpl).	0.606016874313	420
Coq.Vectors.VectorSpec.map_id	40	7.0.0.0.2.6.4.20	synth with cache (only 1: intro l1; only 1: intro n; only 1: revert n; only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	6.44749808311	11051
Coq.Vectors.VectorSpec.map_map	40	0.2.0.2.2.0.0	synth with cache (only 1: intro l'; only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: auto).	0.496420860291	293
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.0.1.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).	0.0568709373474	27
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.take_O	40	2.1	synth with cache (only 1: intros n m H1 H2; only 1: auto).	0.0133588314056	5
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	0.0	synth with cache (only 1: intros; only 1: now simpl).	0.0125839710236	2
Coq.Vectors.VectorSpec.append_comm_cons	40	0	synth with cache (only 1: now simpl).	0.00962591171265	1
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40	4.4.2.1.1.6.2	synth with cache (only 1: intros P Q H l; only 1: firstorder  (subst; auto); only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: constructor; only 1: constructor; only 1: auto with arith; only 1: auto).	3.75818300247	5728
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40	0.2.5.1.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: cbn; only 1: apply f_equal; only 1: easy).	0.882292985916	597
Coq.Vectors.VectorSpec.length_to_list	40	13.1.1.0.1	synth with cache (only 1: induction v; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intuition).	3.5525560379	2437
Coq.Vectors.VectorSpec.of_list_to_list_opp	40
Coq.Vectors.VectorSpec.to_list_nil	40	1	synth with cache (only 1: auto).	0.00850605964661	2
Coq.Vectors.VectorSpec.to_list_cons	40	2	synth with cache (only 1: constructor).	0.0113790035248	3
Coq.Vectors.VectorSpec.to_list_hd	40	0.0.0.0.0	synth with cache (only 1: rewrite 2!(eta v); only 1: simpl; only 1: generalize dependent n; only 1: apply caseS; only 1: now simpl).	0.0271618366241	5
Coq.Vectors.VectorSpec.to_list_last	40	0.1.5.1.1.0.0.1	synth with cache (only 1: generalize dependent n; only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: simpl; only 1: intros n; only 1: refine (@caseS _ _ _); only 1: intros; only 1: auto).	3.65498590469	1425
Coq.Vectors.VectorSpec.to_list_const	40	0.3.0.0.39	synth with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: reflexivity; only 1: cbn; only 1: now f_equal).	0.440584182739	1136
Coq.Vectors.VectorSpec.to_list_nth_order	40
Coq.Vectors.VectorSpec.to_list_tl	40	0.1	synth with cache (only 1: apply (fun P IS => caseS P IS v); only 1: reflexivity).	0.0155920982361	3
Coq.Vectors.VectorSpec.to_list_append	40	1.1.7.2.1.9.0.0.7	synth with cache (only 1: revert n v1 v2; only 1: intro len1; only 1: intro l; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: intros; only 1: cbn; only 1: f_equal; only 1: firstorder).	38.4223439693	26533
Coq.Vectors.VectorSpec.to_list_rev_append_tail	40
Coq.Vectors.VectorSpec.to_list_rev_append	40
Coq.Vectors.VectorSpec.to_list_rev	40
Coq.Vectors.VectorSpec.to_list_map	40	0.1.0.0.5	synth with cache (only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite to_list_cons; f_equal).	0.530714988708	204
Coq.Vectors.VectorSpec.to_list_fold_left	40
Coq.Vectors.VectorSpec.to_list_fold_right	40	0.4.0.1.3	synth with cache (only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: cbn; only 1: rewrite IHv; only 1: auto).	0.338433027267	165
Coq.Vectors.VectorSpec.to_list_Forall	40
Coq.Vectors.VectorSpec.to_list_Exists	40
Coq.Vectors.VectorSpec.to_list_In	40
Coq.Vectors.VectorSpec.to_list_Forall2	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	14.4.2.96	synth with cache (only 1: induction n; only 1: PeanoNat.Nat.nzsimpl; only 1: now destruct (to_nat p); only 1: constructor).	4.99172687531	7954
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	1.1.3.12	synth with cache (only 1: intros x y; only 1: intro m; only 1: intros <-; only 1: exact y).	2.10547208786	1691
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.0.4.0.0.0.4.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: trivial).	3.88517093658	2035
Coq.rtauto.Bintree.map_app	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite map_app; only 1: auto).	0.0180940628052	4
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0.0	synth with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.032016992569	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	0	synth with cache (only 1: now intros []).	0.00998711585999	1
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	1.2.1.2	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0255792140961	13
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.0.16	synth with cache (only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	0.677510023117	540
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40	4.4.6.3.4.0	synth with cache (only 1: intro n; only 1: destr_bool; only 1: contradict H; only 1: revert q; only 1: fix odd_spec 1; only 1: congruence).	11.5251779556	8724
Coq.rtauto.Rtauto.with_env.compose0	40	6.0.5.1.6.10	synth with cache (only 1: intro e; only 1: induction F; only 1: destr_bool; only 1: intros; only 1: destruct S; only 1: eauto).	13.5311300755	10566
Coq.rtauto.Rtauto.with_env.compose1	40	12.1.2.1.3.12	synth with cache (only 1: intro e; only 1: induction F; only 1: intros A B f; only 1: auto; only 1: intros x y Hneq Hin; only 1: firstorder).	28.5630569458	26059
Coq.rtauto.Rtauto.with_env.compose2	40
Coq.rtauto.Rtauto.with_env.compose3	40	4.0.0.3.2.0	synth with cache (only 1: induction F; only 1: auto; only 1: intros HP HIS; only 1: intros A B C H; only 1: simpl; only 1: firstorder).	18.7820560932	742
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	8.10	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	4.65003681183	2880
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.101751089096	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0181419849396	2
Coq.Setoids.Setoid.Seq_trans	40	1.1.3.0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.145653009415	55
Coq.Setoids.Setoid.gen_st	40	3.9	synth with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.436352014542	439
Coq.Bool.IfProp.Iftrue_inv	40	0.2.1.2	synth with cache (only 1: destruct 1; only 1: auto; only 1: intuition; only 1: discriminate).	0.0210168361664	17
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0205368995667	7
Coq.Bool.IfProp.IfProp_true	40	0.41.3	synth with cache (only 1: intro b1; only 1: inversion 1; only 1: auto with bool).	13.156801939	62670
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0381591320038	11
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0209119319916	16
Coq.Bool.IfProp.IfProp_sum	40	0.0.6.0.0.5.12	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).	5.54775381088	8248
Coq.Bool.BoolOrder.le_refl	40	4	synth with cache (only 1: destr_bool).	0.00799608230591	5
Coq.Bool.BoolOrder.le_trans	40	8	synth with cache (only 1: destr_bool).	0.019052028656	20
Coq.Bool.BoolOrder.le_true	40	0	synth with cache (only 1: destr_bool).	0.00643396377563	1
Coq.Bool.BoolOrder.false_le	40	0	synth with cache (only 1: destr_bool).	0.00525188446045	1
Coq.Bool.BoolOrder.le_compat	40	2.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: reduce; only 1: subst; only 1: firstorder).	0.0261418819427	20
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0103449821472	2
Coq.Bool.BoolOrder.lt_trans	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0116829872131	2
Coq.Bool.BoolOrder.lt_compat	40	0	synth with cache (only 1: intuition).	0.0103099346161	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition; only 1: intuition).	0.0319209098816	6
Coq.Bool.BoolOrder.lt_total	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.0234069824219	5
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0102639198303	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).	0.0201292037964	4
Coq.Bool.BoolOrder.le_lteq	40	1.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.032644033432	9
Coq.Bool.BoolOrder.le_preorder	40	0.10.8.4.2	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: intro l; only 1: destr_bool).	1.97490000725	3567
Coq.Bool.BoolOrder.lt_strorder	40	0.2.0.1.2.3	synth with cache (only 1: split; only 1: compute; only 1: destr_bool; only 1: intros b1 b2 b3; only 1: destr_bool; only 1: auto).	0.138990163803	147
Coq.Bool.Zerob.zerob_true_intro	40	3.8	synth with cache (only 1: intros H; only 1: now subst).	0.10177397728	55
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: inversion 1).	0.030503988266	4
Coq.Bool.Zerob.zerob_false_intro	40	3.1.0.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: intros; only 1: auto).	0.0384650230408	10
Coq.Bool.Zerob.zerob_false_elim	40	5.1.3.1	synth with cache (only 1: destruct n; only 1: intuition; only 1: intro m; only 1: auto).	0.678736925125	330
Coq.Bool.DecBool.ifdec_left	40	0.2.0.2.19	synth with cache (only 1: intros h1 h2; only 1: intros; only 1: destruct H; only 1: auto; only 1: contradiction).	8.84096002579	21506
Coq.Bool.DecBool.ifdec_right	40	0.9.1.0.0	synth with cache (only 1: intros A B C H **; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	2.36645698547	2741
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.11.8	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.193661212921	444
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.0.3.4	synth with cache (only 1: intros b; only 1: intro H; only 1: destruct b; only 1: auto; only 1: auto).	0.202225923538	171
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	synth with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0158181190491	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0245079994202	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0180439949036	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	synth with cache (only 1: discriminate).	0.00738286972046	3
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00709700584412	1
Coq.Bool.Bool.eq_true_false_abs	40	1.1.8.5.0	synth with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.334568023682	723
Coq.Bool.Bool.not_true_is_false	40	2.7.3.4	synth with cache (only 1: intro z; only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.505789041519	1075
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0106999874115	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.8.1	synth with cache (only 1: intro H; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.373602151871	509
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0168797969818	3
Coq.Bool.Bool.le_implb	40	0.0.1.6	synth with cache (only 1: intros; only 1: destruct b1; only 1: intuition; only 1: intuition).	0.252569198608	206
Coq.Bool.Bool.compare_spec	40	2.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0198051929474	7
Coq.Bool.Bool.eqb_subst	40	1	synth with cache (only 1: destr_bool).	0.00990986824036	2
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.00935006141663	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.00828313827515	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.019238948822	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.101459026337	6
Coq.Bool.Bool.negb_orb	40	0	synth with cache (only 1: destr_bool).	0.00750494003296	1
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.00646305084229	1
Coq.Bool.Bool.negb_involutive	40	1.1.0.1	synth with cache (only 1: intro n; only 1: induction n; only 1: intuition; only 1: intuition).	0.0109050273895	7
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.00531601905823	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.00639891624451	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.00727105140686	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.00555300712585	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.00534200668335	1
Coq.Bool.Bool.if_negb	40	0	synth with cache (only 1: destr_bool).	0.00543093681335	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0118207931519	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0107882022858	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0203070640564	8
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0203430652618	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).	0.0130159854889	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.0	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0177011489868	6
Coq.Bool.Bool.orb_true_intro	40	1.0.0.0.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.0610809326172	51
Coq.Bool.Bool.orb_false_intro	40	1.1.3.0	synth with cache (only 1: intros; only 1: destruct b1; only 1: trivial; only 1: trivial).	0.0174100399017	9
Coq.Bool.Bool.orb_false_elim	40	0.0.3.0.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0350708961487	34
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.00717902183533	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00545382499695	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00540208816528	1
Coq.Bool.Bool.orb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00669598579407	1
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00613713264465	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00557208061218	1
Coq.Bool.Bool.orb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.00573706626892	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.00628995895386	1
Coq.Bool.Bool.orb_assoc	40	0	synth with cache (only 1: destr_bool).	0.0101270675659	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0193769931793	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0247049331665	5
Coq.Bool.Bool.andb_true_eq	40	0.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.11009311676	68
Coq.Bool.Bool.andb_false_intro1	40	0	synth with cache (only 1: destr_bool).	0.00644707679749	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00979614257812	3
Coq.Bool.Bool.andb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00614404678345	2
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00546312332153	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.00553011894226	1
Coq.Bool.Bool.andb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00558400154114	1
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00551104545593	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0587060451508	14
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00610089302063	1
Coq.Bool.Bool.andb_negb_l	40	0	synth with cache (only 1: destr_bool).	0.00543689727783	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.0063841342926	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.00823092460632	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.0477712154388	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.00880694389343	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.00861001014709	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.00877499580383	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.00704002380371	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.00586891174316	1
Coq.Bool.Bool.implb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0177781581879	5
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0218181610107	5
Coq.Bool.Bool.implb_orb	40	0	synth with cache (only 1: destr_bool).	0.00654101371765	1
Coq.Bool.Bool.implb_negb_orb	40	0	synth with cache (only 1: destr_bool).	0.00645709037781	1
Coq.Bool.Bool.implb_true_r	40	0	synth with cache (only 1: destr_bool).	0.0061149597168	1
Coq.Bool.Bool.implb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00543880462646	1
Coq.Bool.Bool.implb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00535202026367	1
Coq.Bool.Bool.implb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00582695007324	1
Coq.Bool.Bool.implb_same	40	0	synth with cache (only 1: destr_bool).	0.00659990310669	1
Coq.Bool.Bool.implb_contrapositive	40	0	synth with cache (only 1: destr_bool).	0.00603795051575	1
Coq.Bool.Bool.implb_negb	40	0	synth with cache (only 1: destr_bool).	0.00665497779846	1
Coq.Bool.Bool.implb_curry	40	0	synth with cache (only 1: destr_bool).	0.00860190391541	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.00846314430237	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.00807189941406	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.00882506370544	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00726008415222	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00724196434021	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00574898719788	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.00531697273254	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.00615692138672	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.00710606575012	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.00887107849121	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.00726294517517	1
Coq.Bool.Bool.xorb_move_l_r_1	40	6.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0161712169647	12
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.00953388214111	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.00939202308655	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.00957107543945	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.00677609443665	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	synth with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0162930488586	6
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.00678992271423	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0229918956757	5
Coq.Bool.Bool.eq_true_iff_eq	40	2.2.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0232241153717	22
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0097279548645	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00857782363892	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0113530158997	5
Coq.Bool.Bool.absurd_eq_true	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00785994529724	3
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.00952792167664	1
Coq.Bool.Bool.Is_true_eq_true	40	1.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.00879907608032	4
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.00615096092224	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00897693634033	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.00521802902222	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0112171173096	3
Coq.Bool.Bool.orb_prop_elim	40	2.0.4.0.1	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: auto; only 1: simpl; only 1: auto).	0.32034611702	385
Coq.Bool.Bool.orb_prop_intro	40	0.0.0.0.0.2	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.0241191387177	25
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0113880634308	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0146560668945	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0122010707855	3
Coq.Bool.Bool.eq_bool_prop_elim	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0123410224915	5
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.00928092002869	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00897407531738	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00813508033752	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.010458946228	3
Coq.Bool.Bool.andb_if	40	0.0	synth with cache (only 1: intro n; only 1: destr_bool).	0.00851202011108	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.00647687911987	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.0070629119873	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.00506091117859	1
Coq.Bool.Bool.reflect_iff	40	2.0.0.16.0.12	synth with cache (only 1: induction 1 as [| m _]; only 1: intuition; only 1: split; only 1: destr_bool; only 1: intuition; only 1: discriminate).	11.5074779987	21731
Coq.Bool.Bool.iff_reflect	40	2.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0233340263367	15
Coq.Bool.Bool.reflect_dec	40	0.2.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0124311447144	5
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0153949260712	5
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	2.5.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).	0.0201721191406	10
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	1.1.1.0.0.2.0.16.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: intuition; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: intros H; only 1: auto with datatypes; only 1: intros H; only 1: auto).	10.3865280151	15143
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	7.2.0.0.2.0.1.0	synth with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro; only 1: intuition).	28.7833619118	12807
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	0.0.0.0.3.0.2.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).	17.6738729477	7731
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	3.0.2	synth with cache (only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	0.10831618309	66
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	3.52147102356	1530
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40	0.0.1.1.0.0.7.1.0.7	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: elim (Aeq_dec b a0); only 1: tauto; only 1: tauto; only 1: simpl; only 1: tauto).	10.9742488861	5259
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.2.0.5.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	1.67591905594	777
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.106215000153	17
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	2.67289304733	800
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0521521568298	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	1.1.3.0	synth with cache (only 1: simple induction y; only 1: eauto with datatypes; only 1: intros; only 1: eauto with datatypes).	0.207983970642	26
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.0.0.0.1.0	synth with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	0.0472350120544	7
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.5	synth with cache (only 1: intros [x y]; only 1: auto).	0.0114169120789	7
Coq.Lists.Streams.Streams.tl_nth_tl	40	1.0.0.0.0.7.10	synth with cache (only 1: intro; only 1: induction n; only 1: intro x; only 1: case x; only 1: trivial; only 1: simpl; only 1: trivial).	8.0664961338	8657
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	7.3.14	synth with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	2.25112199783	4144
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	8.12.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.32694196701	632
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.110241889954	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.106730937958	4
Coq.Lists.Streams.Map.ForAll_map	40	0.7.7.0.5.9.9.16	synth with cache (only 1: intros h1 h2; only 1: split; only 1: intros [? ?]; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption; only 1: intros [? ?]; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption).	35.2300400734	39503
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	4.1.0.1.7	synth with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: intros m hypind; only 1: trivial).	1.64989495277	1254
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0240349769592	7
Coq.Lists.List.Facts.nil_cons	40	22	synth with cache (only 1: discriminate).	0.0596961975098	231
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.13.0.1.1	synth with cache (only 1: destruct l as [| x xs]; only 1: intro m; only 1: discriminate; only 1: red; only 1: easy).	1.96067786217	1578
Coq.Lists.List.Facts.length_zero_iff_nil	40	2.9.0	synth with cache (only 1: destruct l; only 1: intuition; only 1: easy).	0.857699871063	470
Coq.Lists.List.Facts.hd_error_nil	40	2	synth with cache (only 1: reflexivity).	0.00856423377991	3
Coq.Lists.List.Facts.hd_error_cons	40	0	synth with cache (only 1: easy).	0.00694298744202	1
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0	synth with cache (only 1: split).	0.00819492340088	1
Coq.Lists.List.Facts.app_nil_r	40
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0259459018707	7
Coq.Lists.List.Facts.app_assoc	40
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0277700424194	6
Coq.Lists.List.Facts.app_comm_cons	40	0.0	synth with cache (only 1: simpl; only 1: split).	0.0122029781342	2
Coq.Lists.List.Facts.app_eq_nil	40	17.0.5.4	synth with cache (only 1: induction l; only 1: simpl; only 1: now intros ->; only 1: easy).	28.8065640926	13810
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.elt_eq_unit	40
Coq.Lists.List.Facts.app_eq_app	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_inj_tail_iff	40
Coq.Lists.List.Facts.app_length	40	0.1.0.15.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: split; only 1: simpl; only 1: now Morphisms.f_equiv).	1.62561392784	962
Coq.Lists.List.Facts.last_length	40	1.1.0.0.0.1	synth with cache (only 1: intro l; only 1: induction l; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: auto).	0.0479829311371	9
Coq.Lists.List.Facts.app_inv_head_iff	40	5.0.11.3.0	synth with cache (only 1: intros n m p; only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	34.7030801773	18566
Coq.Lists.List.Facts.app_inv_head	40	0.0.1.5.1.0.1	synth with cache (only 1: induction l as [| ? l IHl]; only 1: intros; only 1: auto; only 1: intros; only 1: apply IHl; only 1: inversion H; only 1: auto).	1.85952186584	842
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Facts.app_inv_tail_iff	40	0.1.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: split; only 1: now rewrite !app_nil_r; only 1: now rewrite !app_nil_r; only 1: split; only 1: change (a :: l) with ([a] ++ l); only 1: rewrite !app_assoc; only 1: now intros [? ?]%app_inj_tail_iff%IHl; only 1: intros H; only 1: subst; only 1: auto).	6.5236928463	2790
Coq.Lists.List.Facts.in_eq	40	9.2	synth with cache (only 1: intros y Ryx; only 1: CRelationClasses.simpl_crelation).	0.145253896713	103
Coq.Lists.List.Facts.in_cons	40	0.0.3	synth with cache (only 1: intros l; only 1: simpl; only 1: auto).	0.0454571247101	17
Coq.Lists.List.Facts.not_in_cons	40	1.3.3.2.4	synth with cache (only 1: simpl in *; only 1: induction l; only 1: intuition; only 1: simpl; only 1: intuition Nat.order).	1.67212605476	626
Coq.Lists.List.Facts.in_nil	40	0.0	synth with cache (only 1: intro n; only 1: auto).	0.0244770050049	2
Coq.Lists.List.Facts.in_app_or	40	20.1.2	synth with cache (only 1: induction l as [| ? l IHl]; only 1: auto; only 1: firstorder).	20.2659571171	9172
Coq.Lists.List.Facts.in_or_app	40	0.0.0.0.0.0	synth with cache (only 1: intros l m a; only 1: induction l; only 1: cbn; only 1: tauto; only 1: cbn; only 1: tauto).	0.0650429725647	6
Coq.Lists.List.Facts.in_app_iff	40	0.0.0.0.0.0	synth with cache (only 1: intros l m a; only 1: induction l; only 1: cbn; only 1: tauto; only 1: cbn; only 1: tauto).	0.0930848121643	6
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_elt	40	1.1.1.7.2.0	synth with cache (only 1: intros x l; only 1: induction l; only 1: simpl; only 1: auto; only 1: cbn; only 1: auto).	0.665223121643	539
Coq.Lists.List.Facts.in_elt_inv	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0101599693298	1
Coq.Lists.List.Facts.in_dec	40	15.0.1.4.2	synth with cache (only 1: intros n m; only 1: intros; only 1: induction l as [| a tail]; only 1: now right; only 1: firstorder).	7.82051992416	4945
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	1.0.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: right; only 1: auto).	0.0181889533997	4
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.app_nth2_plus	40	0.1.3.0	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: simpl; only 1: apply IHl).	0.296770811081	57
Coq.Lists.List.Elts.nth_middle	40	0.0.0.1.3.3	synth with cache (only 1: intro l; only 1: intros d H; only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: simpl; only 1: auto).	1.46100902557	370
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_ext	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	0.0.2.4.4.0.1	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: inversion 1; only 1: intros [| n] d d'; only 1: reflexivity; only 1: apply IHl; only 1: now apply Nat.succ_lt_mono).	16.0404009819	6213
Coq.Lists.List.Elts.last_last	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.removelast_last	40
Coq.Lists.List.Elts.remove_cons	40
Coq.Lists.List.Elts.remove_app	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.notin_remove	40
Coq.Lists.List.Elts.in_remove	40
Coq.Lists.List.Elts.in_in_remove	40
Coq.Lists.List.Elts.remove_remove_comm	40
Coq.Lists.List.Elts.remove_remove_eq	40
Coq.Lists.List.Elts.remove_length_le	40
Coq.Lists.List.Elts.remove_length_lt	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	1	synth with cache (only 1: auto).	0.0101909637451	2
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	0.0.2.5	synth with cache (only 1: simpl; only 1: destruct (eq_dec x y); only 1: intuition apply Nat.lt_0_succ; only 1: intuition apply Nat.lt_0_succ).	0.0693018436432	32
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0215649604797	3
Coq.Lists.List.Elts.count_occ_app	40
Coq.Lists.List.Elts.count_occ_elt_eq	40	0.0.0.1.0.0.1.48	synth with cache (only 1: destruct 1; only 1: induction l1 as [| h l1 IHl1]; only 1: cbn; only 1: destruct (eq_dec x x); only 1: reflexivity; only 1: now exfalso; only 1: cbn; only 1: now destruct (eq_dec h x); [ rewrite IHl1 |  ]).	3.59615421295	5839
Coq.Lists.List.Elts.count_occ_elt_neq	40	1.0.0.2	synth with cache (only 1: rewrite ?count_occ_app; only 1: cbn; only 1: intros Hnin; only 1: now destruct (eq_dec x y)).	0.0773539543152	22
Coq.Lists.List.Elts.count_occ_bound	40
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	1.4.2.0.1.0.13	synth with cache (only 1: induction l as [| a l IHl]; only 1: intro n; only 1: auto; only 1: simpl; only 1: intro n; only 1: rewrite IHl; only 1: auto).	8.51610803604	5036
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.rev_eq_app	40
Coq.Lists.List.ListOps.rev_list_ind	40	14.3.1	synth with cache (only 1: induction l as [| ? l IHl]; only 1: easy; only 1: auto).	1.76541590691	1982
Coq.Lists.List.ListOps.rev_ind	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.concat_nil	40	1	synth with cache (only 1: reflexivity).	0.00802707672119	2
Coq.Lists.List.ListOps.concat_cons	40	1.0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: simpl; only 1: intro l; only 1: trivial; only 1: intros; only 1: firstorder).	0.153599977493	9
Coq.Lists.List.ListOps.concat_app	40	3.5.1.0.0.1.0.2.2	synth with cache (only 1: intro l; only 1: induction l; only 1: intros l2; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- app_assoc; only 1: f_equal; only 1: firstorder).	24.1024549007	15475
Coq.Lists.List.ListOps.in_concat	40
Coq.Lists.List.ListOps.list_eq_dec	40	22	synth with cache (only 1: decide equality).	4.35700702667	4894
Coq.Lists.List.Map.map_cons	40	0	synth with cache (only 1: reflexivity).	0.00968885421753	1
Coq.Lists.List.Map.in_map	40
Coq.Lists.List.Map.in_map_iff	40	0.1.1.0.0.6.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: intros H; only 1: split; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: intro n; only 1: firstorder  (subst; auto)).	3.0439209938	1921
Coq.Lists.List.Map.map_length	40	1.0.1.0.0.0	synth with cache (only 1: firstorder  (subst; auto); only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0323331356049	8
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.nth_error_map	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	5.0.3.1.0	synth with cache (only 1: intros x y; only 1: induction x as [| a l IHl]; only 1: reflexivity; only 1: cbn; only 1: now f_equal).	1.62186217308	890
Coq.Lists.List.Map.map_last	40	0.0.3.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: firstorder; only 1: rewrite IHl; only 1: auto).	0.0422849655151	10
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	2.0	synth with cache (only 1: intro l; only 1: now destruct l).	0.0245759487152	12
Coq.Lists.List.Map.map_eq_cons	40
Coq.Lists.List.Map.map_eq_app	40
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.FlatMap.flat_map_concat_map	40	0.5.0.0.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.477928876877	151
Coq.Lists.List.FlatMap.flat_map_app	40
Coq.Lists.List.FlatMap.in_flat_map	40
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	2.0.2.0.0.1.1.3	synth with cache (only 1: intro m; only 1: intros; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: f_equal; only 1: simpl map; only 1: f_equal; only 1: auto).	2.39809393883	1605
Coq.Lists.List.map_map	40	0.0.0.1.0.11.3	synth with cache (only 1: intros a b c ? ? ?; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	6.5590069294	4593
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.14	synth with cache (only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	18.8920190334	13751
Coq.Lists.List.map_ext	40	0.0.1	synth with cache (only 1: intros n IH a b Ha H; only 1: apply map_ext_in; only 1: auto).	0.0243730545044	13
Coq.Lists.List.flat_map_ext	40	0.1.5.0.6.0.0.10.2	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: destruct l; only 1: now f_equal; only 1: auto; only 1: auto).	19.8732769489	23200
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	1.2.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: intros l a; only 1: f_equal; only 1: intros; only 1: simpl; only 1: apply IHl).	0.0359210968018	10
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.1.2.0.0.0.1.4.3	synth with cache (only 1: intro k; only 1: intros x l1; only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: reflexivity; only 1: intros d n; only 1: simpl; only 1: f_equal; only 1: firstorder).	6.80209183693	4910
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40	5.0.5.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite IHl; only 1: now destruct (f a)).	21.621571064	11099
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro l1; only 1: induction l1 as [| a ? ?]; only 1: simpl; only 1: intros l2; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	2.80784916878	882
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40	2.1.0.1.15.0.1.8	synth with cache (only 1: induction l; only 1: reflexivity; only 1: cbn; only 1: case (f a); only 1: rewrite IHl; only 1: cbn; only 1: auto; only 1: auto).	13.0139920712	10695
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40	8.2.0.4.0.0.0.1	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct (f a) eqn:Ha; only 1: injection 1; only 1: intuition congruence; only 1: firstorder  (subst; auto)).	16.0126290321	9557
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0172669887543	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.2.1.8.0.0.0.0.10	synth with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).	13.4109120369	13757
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext	40	0.7.1	synth with cache (only 1: Bool.destr_bool; only 1: apply filter_ext_in; only 1: auto).	0.0690200328827	56
Coq.Lists.List.Filtering.remove_alt	40	0.0.0.9.0.0.0.11	synth with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: tauto; only 1: f_equal; only 1: tauto).	14.6197178364	12209
Coq.Lists.List.Filtering.count_occ_alt	40	0.2.1.1.0.0.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: cbn; only 1: destruct eq_dec as [->| Hneq]; only 1: simpl; only 1: auto; only 1: intuition).	2.11854314804	670
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| [? ?] l IHl]; only 1: easy; only 1: intros [? ?]; only 1: cbn; only 1: now intros [[=]| ?%IHl]; destruct (split l); [ left | right ]).	0.0325860977173	6
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0432209968567	9
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40	2.4.1.2.0.0.0.1.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: easy; only 1: simpl; only 1: destruct l' as [| a0 l']; only 1: auto; only 1: simpl; only 1: auto).	20.4749791622	10530
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	4.2.0.9	synth with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: trivial; only 1: firstorder  (subst; auto)).	1.131264925	1014
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	5.0.12.4	synth with cache (only 1: induction l; only 1: red; only 1: auto; only 1: left).	0.458907842636	574
Coq.Lists.List.length_order.lel_trans	40
Coq.Lists.List.length_order.lel_cons_cons	40	16.20.12	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: now apply Nat.succ_le_mono; only 1: now apply Nat.succ_lt_mono).	7.26916098595	8740
Coq.Lists.List.length_order.lel_cons	40	1.5.6.12.12.7	synth with cache (only 1: intros H; only 1: induction l; only 1: right; only 1: easy; only 1: right; only 1: assumption).	8.67168283463	12329
Coq.Lists.List.length_order.lel_tail	40	0	synth with cache (only 1: now intros ?%Nat.succ_le_mono).	0.00903391838074	1
Coq.Lists.List.length_order.lel_nil	40	4.0.25	synth with cache (only 1: intros [| ] ?; only 1: reflexivity; only 1: inversion H).	4.69904303551	5913
Coq.Lists.List.SetIncl.incl_nil_l	40	15.0	synth with cache (only 1: intros H; only 1: firstorder).	0.583057880402	633
Coq.Lists.List.SetIncl.incl_l_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: solve [ auto ]).	0.00899815559387	2
Coq.Lists.List.SetIncl.incl_tl	40	1.0.0	synth with cache (only 1: intros x y l1 l2 Hin; only 1: cbn; only 1: eauto).	0.0171329975128	4
Coq.Lists.List.SetIncl.incl_tran	40	1.0	synth with cache (only 1: intros l l1 l2 Heq; only 1: auto).	0.144227027893	3
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.011470079422	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0115439891815	1
Coq.Lists.List.SetIncl.incl_cons	40	1.1.4.8	synth with cache (only 1: intro n; only 1: intros [| x l] H; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	2.47603917122	1239
Coq.Lists.List.SetIncl.incl_cons_inv	40	1	synth with cache (only 1: auto with datatypes).	0.0134649276733	2
Coq.Lists.List.SetIncl.incl_app	40	2.0.1.5.4	synth with cache (only 1: intros l m a; only 1: induction l; only 1: intros H; only 1: auto; only 1: firstorder  (subst; auto)).	5.67093896866	1590
Coq.Lists.List.SetIncl.incl_app_app	40	1.4.2	synth with cache (only 1: intro l; only 1: intros l' H; only 1: auto).	1.23749804497	68
Coq.Lists.List.SetIncl.incl_app_inv	40	9.4.0	synth with cache (only 1: unfold incl; only 1: intro l; only 1: auto using in_app_or, in_or_app).	1.79427814484	1033
Coq.Lists.List.SetIncl.incl_filter	40
Coq.Lists.List.SetIncl.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.24	synth with cache (only 1: destruct n; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.36547088623	636
Coq.Lists.List.Cutting.firstn_cons	40	0	synth with cache (only 1: now simpl).	0.00953316688538	1
Coq.Lists.List.Cutting.firstn_all	40	0.0.1.1.4	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto).	0.196942090988	93
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: now simpl).	0.0102260112762	1
Coq.Lists.List.Cutting.firstn_le_length	40
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40	1.0.1.0.2.0.0.0.0.0.2	synth with cache (only 1: induction n as [| k iHk]; only 1: intros x y; only 1: cbn; only 1: reflexivity; only 1: cbn; only 1: intros [| x l] H; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: f_equal; only 1: apply iHk).	10.1717939377	4685
Coq.Lists.List.Cutting.firstn_app_2	40	2.0.0.0.0.0.0.3	synth with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: intros; only 1: now simpl; only 1: simpl; only 1: intros; only 1: f_equal; only 1: firstorder).	2.98474192619	1044
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: cbn; only 1: auto).	0.0261681079865	5
Coq.Lists.List.Cutting.skipn_nil	40	0.0.27	synth with cache (only 1: intros [| n]; only 1: now simpl; only 1: now simpl).	0.813745975494	1346
Coq.Lists.List.Cutting.skipn_cons	40	1.3	synth with cache (only 1: revert l; only 1: auto).	0.0435748100281	12
Coq.Lists.List.Cutting.skipn_all	40	1.0.0.0.2.1	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.0343141555786	10
Coq.Lists.List.Cutting.skipn_all2	40	0.0.0.0.2.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro l; only 1: now destruct l; only 1: simpl; only 1: intros [| a l] H; only 1: f_equal; only 1: apply iHk; only 1: now apply Nat.succ_le_mono).	0.153761863708	41
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40
Coq.Lists.List.Cutting.skipn_length	40	2.0.0.0.0.0.3.0	synth with cache (only 1: induction n; only 1: now intro l; induction l; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: exact (IHn l)).	8.41878986359	2598
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: reflexivity; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.0606021881104	9
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.removelast_firstn_len	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.CuttingMap.firstn_map	40
Coq.Lists.List.CuttingMap.skipn_map	40	0.0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: repeat split; only 1: intros []; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	5.18438315392	1863
Coq.Lists.List.Combining.combine_nil	40	1	synth with cache (only 1: now intros []).	0.0101709365845	2
Coq.Lists.List.Combining.combine_firstn_l	40
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.0.2.0.0.0.6.0.0.0	synth with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: now rewrite ?firstn_nil; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: simpl; only 1: auto; only 1: simpl; only 1: specialize IHl with l'; only 1: rewrite <- IHl; only 1: reflexivity).	20.7258050442	10430
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40	4.32.0.1.8.7.69.180	synth with cache (only 1: revert a; only 1: intro z; only 1: induction l1 as [| h l1 IHl1]; only 1: simpl; only 1: left; only 1: cbn; only 1: right; only 1: auto).	29.6286141872	123528
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40
Coq.Lists.List.Add.Add_length	40	0.0.1.1.0.11	synth with cache (only 1: rewrite <- Nat.add_0_r  at 1; only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: auto).	2.20817518234	1162
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.0	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0145509243011	2
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0376210212708	4
Coq.Lists.List.ReDun.NoDup_rev	40
Coq.Lists.List.ReDun.NoDup_filter	40
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.nodup_incl	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.ReDun.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.cons_seq	40	0.0.0	synth with cache (only 1: intros a n; only 1: simpl; only 1: reflexivity).	0.0181920528412	3
Coq.Lists.List.NatSeq.seq_length	40	2.0.0.0.0.2.6	synth with cache (only 1: intro l; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: intro l; only 1: simpl; only 1: auto).	1.49025297165	1069
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.NatSeq.seq_S	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.6.1.0	synth with cache (only 1: split; only 1: intro l; only 1: easy; only 1: inversion_clear 1).	0.0413718223572	37
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	0.0.0.1.1.4	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: intros H; only 1: firstorder).	0.15917301178	58
Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	2.0.0.0.0.0.0.1.2.1	synth with cache (only 1: induction l; only 1: simpl; only 1: abstract now rewrite Exists_nil; only 1: simpl; only 1: rewrite <- IHl; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	4.56394004822	2297
Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.0.2.7	synth with cache (only 1: intro n; only 1: intro l; only 1: inversion 1; only 1: auto).	0.238461017609	167
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.0.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0194549560547	3
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nil_iff	40	0.0.1.0.0	synth with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: constructor).	0.0240731239319	6
Coq.Lists.List.Exists_Forall.One_predicate.Forall_cons_iff	40	0.0.0.0.0.1	synth with cache (only 1: intros x l; only 1: split; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: auto).	0.0313639640808	7
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40	0.5.1.0.0.0.0.0.0.1.0	synth with cache (only 1: induction l1; only 1: easy; only 1: simpl; only 1: split; only 1: intros HE; only 1: inversion_clear HE; only 1: intuition; only 1: intros HE; only 1: intuition; only 1: inversion H; only 1: intuition).	21.9856109619	11221
Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	0.0611629486084	9
Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40
Coq.Lists.List.Exists_Forall.map_ext_Forall	40
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Exists_or	40
Coq.Lists.List.Exists_Forall.Exists_or_inv	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.0.0.8.0	synth with cache (only 1: intros P Q H l H0; only 1: apply Forall_forall; only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.270444869995	255
Coq.Lists.List.Exists_Forall.Forall_and	40
Coq.Lists.List.Exists_Forall.Forall_and_inv	40
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.0542662143707	10
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40
Coq.Lists.List.Exists_map	40
Coq.Lists.List.Exists_concat	40
Coq.Lists.List.Exists_flat_map	40
Coq.Lists.List.Forall_map	40
Coq.Lists.List.Forall_concat	40
Coq.Lists.List.Forall_flat_map	40
Coq.Lists.List.exists_Forall	40	0.0.4.2.0.1.1.2.0.3.9	synth with cache (only 1: intros m; only 1: induction l as [| a l IHl]; only 1: intros HE; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: inversion H; only 1: constructor; only 1: subst; only 1: inversion H; only 1: firstorder; only 1: firstorder).	25.392373085	32069
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2.Forall2_refl	40	3	synth with cache (only 1: constructor).	0.0129308700562	4
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.2.1.14.1.5	synth with cache (only 1: revert n; only 1: intro l; only 1: induction l as [| ? ? H]; only 1: easy; only 1: simpl; only 1: now f_equal).	1.62588596344	1657
Coq.Lists.List.Repeat.repeat_spec	40	3.2.0.0.2.1.33	synth with cache (only 1: induction n; only 1: CRelationClasses.simpl_crelation; only 1: simpl; only 1: destruct 1; only 1: subst; only 1: auto; only 1: auto).	1.51345014572	2394
Coq.Lists.List.Repeat.repeat_cons	40	1.0.1.0.14	synth with cache (only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: auto).	0.693295955658	605
Coq.Lists.List.Repeat.repeat_app	40	1.5.4.0	synth with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: simpl; only 1: now f_equal).	0.641315937042	365
Coq.Lists.List.Repeat.repeat_eq_app	40
Coq.Lists.List.Repeat.repeat_eq_cons	40
Coq.Lists.List.Repeat.repeat_eq_elt	40
Coq.Lists.List.Repeat.Forall_eq_repeat	40
Coq.Lists.List.Repeat.count_occ_repeat_eq	40
Coq.Lists.List.Repeat.count_occ_repeat_neq	40
Coq.Lists.List.Repeat.count_occ_unique	40
Coq.Lists.List.Repeat.count_occ_repeat_excl	40
Coq.Lists.List.Repeat.count_occ_sgt	40
Coq.Lists.List.Repeat.nth_repeat	40
Coq.Lists.List.Repeat.nth_error_repeat	40
Coq.Lists.List.repeat_to_concat	40	10.7.3.2.44	synth with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	7.91443490982	9472
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.0.1	synth with cache (only 1: repeat red; only 1: intros; only 1: auto).	0.0269439220428	5
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	2.0.1.1.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl in *; only 1: intuition; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	2.86401319504	118
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	0.1.3.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	0.0871980190277	8
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0242700576782	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	1.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').	0.051096200943	7
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0333099365234	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	3.0.3.0.1.5.1.1.2.2	synth with cache (only 1: induction l; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: inversion 1; only 1: auto; only 1: firstorder).	23.5166652203	15819
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.2.0.0.0.0.0	synth with cache (only 1: intros a l H; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.0501098632812	13
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.1.2	synth with cache (only 1: constructor; only 1: inversion 1; only 1: induction 1).	0.0376319885254	26
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.0.0.0.0.2.3	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.61293387413	379
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.0.0.11	synth with cache (only 1: destruct l; only 1: inversion 1; only 1: constructor; only 1: invlist InA).	0.106044054031	142
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.0.0.8.0.0.1	synth with cache (only 1: split; only 1: induction 1; only 1: easy; only 1: auto; only 1: induction 1; only 1: firstorder using Sorted_inv; only 1: auto).	1.91607189178	1230
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.1.1.2.0.0.3	synth with cache (only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros b [<-| Hbl]; only 1: constructor; only 1: auto; only 1: auto).	1.25190591812	438
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.10.2	synth with cache (only 1: compute; only 1: firstorder; only 1: invlist InA; only 1: auto).	1.33116889	325
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	2.2.0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: split; only 1: firstorder; only 1: firstorder  (subst; auto)).	0.106508970261	8
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	2.1.0.0	synth with cache (only 1: do 2 rewrite InA_alt; only 1: split; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.127267837524	7
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	2.0.10.0	synth with cache (only 1: constructor; only 1: intuition; only 1: inv; only 1: constructor).	0.158438920975	170
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.13	synth with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: tauto).	0.717387199402	206
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.1	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0458960533142	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.4	synth with cache (only 1: intros E; only 1: rewrite InA_app_iff; only 1: tauto).	0.0203659534454	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.0.0.0.0.0.18.3.2	synth with cache (only 1: intros s1; only 1: intros s2 x; only 1: intros y Hy; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	15.07771492	11354
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	8.0.1.1.0	synth with cache (only 1: intros l; only 1: intros x a0 **; only 1: induction l as [| a l IHl]; only 1: constructor; only 1: intuition).	3.81329202652	1682
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0.0	synth with cache (only 1: intros l; only 1: induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0455529689789	9
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.0.0.0.1.1.0	synth with cache (only 1: intros l; only 1: destruct l; only 1: intros x a **; only 1: eauto; only 1: constructor; only 1: inv; only 1: eauto).	0.117285966873	11
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0334858894348	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.0.0.0	synth with cache (only 1: intros x y ?; only 1: rewrite <- (app_nil_r (rev x)), <- (app_nil_r (rev y)); only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.0363919734955	5
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.2	synth with cache (only 1: decide equality; only 1: decide equality).	0.412497997284	128
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0201969146729	2
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.014044046402	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0389530658722	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	synth with cache (only 1: auto).	0.0135979652405	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0167407989502	2
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0121409893036	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0122680664062	1
Coq.NArith.BinNat.N.pos_pred_spec	40	1.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition PeanoNat.Nat.Private_Tac.order).	0.172889947891	8
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.6	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0288438796997	10
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0.2.1.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition PeanoNat.Nat.Private_Tac.order; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	29.8477978706	12137
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	3.07034611702	947
Coq.NArith.BinNat.N.pred_succ	40	0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0298011302948	4
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0284180641174	3
Coq.NArith.BinNat.N.succ_0_discr	40	1	synth with cache (only 1: now destruct n).	0.0671620368958	17
Coq.NArith.BinNat.N.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0176811218262	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.0155429840088	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.014280796051	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	5.5.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	5.07728409767	1706
Coq.NArith.BinNat.N.ltb_lt	40	2.2.1.0.4.1.0.1	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: fix even_spec 1; only 1: destruct m; only 1: now split; only 1: now split; only 1: fix even_spec 1; only 1: destr_bool).	23.9181959629	9519
Coq.NArith.BinNat.N.leb_le	40	4.3.0.2.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: now split).	10.1796860695	3136
Coq.NArith.BinNat.N.compare_eq_iff	40	2.10.3	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	13.7077929974	4478
Coq.NArith.BinNat.N.compare_lt_iff	40	1.0	synth with cache (only 1: unfold ltb, lt; only 1: apply iff_refl).	0.0227680206299	3
Coq.NArith.BinNat.N.compare_le_iff	40	0.2.1.1	synth with cache (only 1: revert m; only 1: intro m; only 1: unfold leb, le; only 1: apply iff_refl).	0.668980121613	105
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0380868911743	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.0807249546051	3
Coq.NArith.BinNat.N.succ_double_spec	40	2.2.7	synth with cache (only 1: rewrite add_comm; only 1: simpl; only 1: now destruct n as [| [p| p| ]]).	5.54926300049	552
Coq.NArith.BinNat.N.double_add	40	0.1.0.1.1.15	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: now nzsimpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: trivial).	17.8815760612	5294
Coq.NArith.BinNat.N.succ_double_add	40	0.1.0.0.1.0.1.3	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: trivial; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	4.43950200081	542
Coq.NArith.BinNat.N.double_mul	40	0.0.0.0.0.0.1.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0548188686371	9
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0314149856567	5
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.017676115036	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	16.0.0.1.4	synth with cache (only 1: nzinduct n m; only 1: intros H; only 1: false_hyp H lt_irrefl; only 1: intro n; only 1: now destruct n, m).	19.6717329025	7036
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0606698989868	9
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.2.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: order; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	1.00392889977	194
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0673370361328	9
Coq.NArith.BinNat.N.compare_0_r	40	0.0.14.12	synth with cache (only 1: intros H; only 1: apply PeanoNat.Nat.le_succ_l in H; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	6.29768514633	3158
Coq.NArith.BinNat.N.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.0148918628693	1
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	10.0	synth with cache (only 1: intro H; only 1: now destruct n).	0.557241916656	209
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.5.0	synth with cache (only 1: unfold div, modulo; only 1: intros _; only 1: generalize (div_eucl_spec a b); only 1: now destruct div_eucl).	0.0497150421143	15
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0197470188141	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| p], b as [| q]; only 1: rewrite <- ggcd_gcd; only 1: simpl; only 1: order; only 1: simpl; only 1: apply lt_le_incl, lt_0_1; only 1: easy; only 1: simpl; only 1: discriminate).	0.1294901371	16
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	0	synth with cache (only 1: now destruct a).	0.0160830020905	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	1.0.13	synth with cache (only 1: intro H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: now destruct a).	14.1423721313	4762
Coq.NArith.BinNat.N.testbit_neg_r	40	0.0.21.0	synth with cache (only 1: intros H; only 1: induction n as [| n IHn]; only 1: now destruct a; only 1: easy).	1.51118898392	1025
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0192220211029	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.4.0.1	synth with cache (only 1: intro H; only 1: apply lt_nge; only 1: intro H1; only 1: false_hyp H ltac:(H1)).	0.0914580821991	9
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0138030052185	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.128334999084	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.9.2.1.0.11	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now nzsimpl).	13.6265609264	7590
Coq.NArith.BinNat.N.iter_swap_gen	40
Coq.NArith.BinNat.N.iter_swap	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	0.0485088825226	11
Coq.NArith.BinNat.N.iter_succ	40	5.2.0.2.4.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.iter_succ).	10.3412258625	7299
Coq.NArith.BinNat.N.iter_succ_r	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: destruct n; only 1: intros; only 1: now rewrite Pos.iter_succ, Pos.iter_swap; only 1: intros; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	0.0595350265503	13
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.1.0.0	synth with cache (only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	0.0294301509857	5
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0197858810425	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0166640281677	1
Coq.NArith.Ndec.Neqb_complete	40
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	2.1.4.5	synth with cache (only 1: intros m H; only 1: apply eq_true_iff_eq; only 1: eqb2eq; only 1: easy').	2.53296494484	2114
Coq.NArith.Ndec.Ndiv2_eq	40	2.0.9	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now subst).	0.167016029358	70
Coq.NArith.Ndec.Ndiv2_neq	40	0.8.0.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: intros <-; only 1: now apply H).	0.579010009766	212
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	0.2.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intro LE; only 1: N.order).	0.0295269489288	5
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.0.8.0.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: destruct 1; only 1: rewrite !N2Nat.inj_succ_double; only 1: split).	8.13933300972	6864
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	1.1.5	synth with cache (only 1: elim (sumbool_of_bool (Nleb (N.succ_double a) (N.succ_double b))); only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false; only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.150674104691	58
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40	0.0.0.3.0.9.21	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: intros; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	6.88478302956	11275
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0318529605865	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	2.0.0.0	synth with cache (only 1: intros a; only 1: induction a as [| p]; only 1: now try N.order'; only 1: now try N.order').	0.0333511829376	17
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	12.1.3.1.56.1	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: simpl; only 1: split; only 1: simpl; only 1: Nat.solve_min).	22.9467339516	69557
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.1.1.0.19	synth with cache (only 1: simpl; only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	2.84173798561	2915
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.1.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0221390724182	7
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.01340508461	3
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.1	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0136399269104	4
Coq.NArith.Ndist.ni_le_refl	40	0.0.0.0.0.0.0.0.1.0.0.4	synth with cache (only 1: red; only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: intros; only 1: simpl; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	0.713768959045	688
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.0.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0288031101227	14
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	9.10.0.6	synth with cache (only 1: intros p n; only 1: intros; only 1: inversion H; only 1: Nat.solve_min).	2.67452311516	4225
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40	2.9.1.0.3.1	synth with cache (only 1: intros a n; only 1: Nat.cases ltac:(n); only 1: simpl; only 1: now destruct a; only 1: fix even_spec 1; only 1: trivial).	19.7210490704	8394
Coq.NArith.Ndigits.Ntestbit_Nbit	40	6.11.0	synth with cache (only 1: intro p; only 1: fix odd_spec 1; only 1: trivial).	7.56170201302	6202
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.1.3.0.0.0	synth with cache (only 1: intro a; only 1: destruct a; only 1: intros a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.736363887787	250
Coq.NArith.Ndigits.Nshiftr_nat_S	40	3.0	synth with cache (only 1: intros n m; only 1: now N.nzsimpl).	0.0587561130524	5
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.02015209198	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	4.0	synth with cache (only 1: intros; only 1: reflexivity).	0.161245107651	33
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0223679542542	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40	3.4.3.1.0.0.0.0.7	synth with cache (only 1: intros a n; only 1: induction n as [| n IHn]; only 1: unfold N.shiftl_nat; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: simpl; only 1: now simpl).	27.6284680367	14795
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.0.1.0.0.1.0.0.5	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	5.05578184128	2216
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).	0.526504993439	104
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.0.1.2.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	0.728423118591	273
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.0.3.2.2.5	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: split).	2.28197789192	1497
Coq.NArith.Ndigits.Ndouble_bit0	40	11.2	synth with cache (only 1: intros m; only 1: now destruct m).	0.73872590065	344
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.1	synth with cache (only 1: intros n; only 1: now destruct n).	0.0317299365997	3
Coq.NArith.Ndigits.Ndiv2_double	40	1.1.0.0.1.1.0	synth with cache (only 1: intros a; only 1: intros H; only 1: destruct a as [| p]; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: now destruct p).	0.405720949173	85
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.1.1.2.6.2.1	synth with cache (only 1: intros; only 1: destruct n; only 1: now N.nzsimpl; only 1: destruct p; only 1: reflexivity; only 1: vm_compute in H; only 1: discriminate; only 1: reflexivity).	9.88138914108	3737
Coq.NArith.Ndigits.Ndiv2_correct	40	6.0.0.0.4.6	synth with cache (only 1: intros n m; only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct p).	38.7249040604	15066
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.4	synth with cache (only 1: destr_bool; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.143010139465	69
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros a a' H H0; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	17.3526530266	7373
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	4.03672289848	1267
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.21.3.31.0	synth with cache (only 1: intro m; only 1: destruct m; only 1: intros; only 1: easy'; only 1: exists p; only 1: f_equal).	18.5631740093	23069
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40	2.1.3	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: auto).	0.0893859863281	19
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.0.0.0.4.0	synth with cache (only 1: destruct a as [| p]; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	0.940001964569	471
Coq.NArith.NArith.TestOrder.test	40	1	synth with cache (only 1: N.order).	0.0187301635742	11
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	4.2.1.0.0.0.4	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intros EQ; only 1: rewrite EQ; only 1: now rewrite ?Ha).	1.74701905251	1466
Coq.NArith.Nnat.N2Nat.inj_0	40	4	synth with cache (only 1: now subst).	0.00863814353943	5
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_div	40
Coq.NArith.Nnat.N2Nat.inj_mod	40
Coq.NArith.Nnat.N2Nat.inj_pow	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0216429233551	5
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.0327999591827	8
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0825889110565	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0190300941467	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	synth with cache (only 1: nat2N).	0.0184810161591	1
Coq.NArith.Nnat.Nat2N.inj_add	40	2.0.2.26	synth with cache (only 1: induction n; only 1: simpl; only 1: now subst; only 1: nat2N).	1.43755102158	810
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.0197510719299	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0195059776306	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0172929763794	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_div	40	0	synth with cache (only 1: nat2N).	0.0193741321564	1
Coq.NArith.Nnat.Nat2N.inj_mod	40	0	synth with cache (only 1: nat2N).	0.0235140323639	1
Coq.NArith.Nnat.Nat2N.inj_pow	40	0	synth with cache (only 1: nat2N).	0.0200519561768	1
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0201981067657	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0197579860687	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	0.13.2	synth with cache (only 1: destruct x; only 1: apply Nat.eqb_eq; only 1: destr_bool).	1.20422506332	667
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).	0.0196850299835	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.024463891983	3
Coq.Strings.Ascii.ascii_N_embedding	40	1.6	synth with cache (only 1: fix even_spec 1; only 1: easy).	0.461226940155	86
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40	3.46	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	4.59000897408	7980
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.compare_antisym	40
Coq.Strings.Ascii.compare_eq_iff	40
Coq.Strings.Ascii.leb_antisym	40
Coq.Strings.Ascii.leb_total	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	0.21.32	synth with cache (only 1: induction x; only 1: simpl in *; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	27.1471049786	4094
Coq.Strings.Ascii.byte_of_ascii_of_byte	40	0.226	synth with cache (only 1: compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	34.2496030331	70487
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40	4.1.0.0.0	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.360447883606	66
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).	0.0264890193939	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.0400769710541	3
Coq.Strings.String.compare_antisym	40
Coq.Strings.String.compare_eq_iff	40
Coq.Strings.String.leb_antisym	40
Coq.Strings.String.leb_total	40	0.0.0.5.0.0.0.2.3.1.26.0	synth with cache (only 1: apply orb_true_iff; only 1: apply eq_true_iff_eq; only 1: revert s2; only 1: intro q; only 1: t_eqb; only 1: apply orb_true_iff; only 1: unfold leb; only 1: rewrite Ascii.compare_antisym; only 1: destruct compare; only 1: intuition; only 1: intuition; only 1: intuition).	25.5142631531	8419
Coq.Strings.String.get_correct	40	4.2.15	synth with cache (only 1: fix odd_spec 1; only 1: intros Hneq; only 1: auto).	9.87946677208	9992
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40	9.4.1	synth with cache (only 1: intros s1; only 1: fix even_spec 1; only 1: auto).	4.09135985374	2536
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.3.0.0.35.66	synth with cache (only 1: compute; only 1: elim s; only 1: reflexivity; only 1: intros; only 1: f_equal; only 1: easy).	1.52182292938	7039
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40	0.0.1.226	synth with cache (only 1: induction x as [| x IHx]; only 1: reflexivity; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	16.4169869423	35345
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	8	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0691440105438	16
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	13	synth with cache (only 1: trivial).	0.222831010818	105
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	16	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.239712953568	123
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1b	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1	40	0.1.2.1.0	synth with cache (only 1: intros x y H; only 1: assert (0 == - (0 : R)); only 1: let rec norm := gen_rewrite in norm; only 1: rewrite H; only 1: cring).	0.285631895065	22
Coq.nsatz.NsatzTactic.nsatz1.nsatzR_diff	40
Coq.nsatz.NsatzTactic.nsatz1.P0Z_correct	40	2	synth with cache (only 1: trivial).	0.180981874466	37
Coq.nsatz.NsatzTactic.nsatz1.Rext	40
Coq.nsatz.NsatzTactic.nsatz1.Rset	40	1.1.1.0	synth with cache (only 1: constructor; only 1: apply ring_setoid; only 1: apply ring_setoid; only 1: apply ring_setoid).	0.04057097435	7
Coq.nsatz.NsatzTactic.nsatz1.Rtheory	40
Coq.nsatz.NsatzTactic.nsatz1.PolZadd_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZmul_correct	40
Coq.nsatz.NsatzTactic.nsatz1.R_power_theory	40
Coq.nsatz.NsatzTactic.nsatz1.norm_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZeq_correct	40
Coq.nsatz.NsatzTactic.nsatz1.mult_l_correct	40
Coq.nsatz.NsatzTactic.nsatz1.compute_list_correct	40
Coq.nsatz.NsatzTactic.nsatz1.check_correct	40
Coq.nsatz.NsatzTactic.Qri	40
Coq.nsatz.NsatzTactic.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.010596036911	1
Coq.nsatz.NsatzTactic.Qcri	40	0.1.5.6.0.0.21	synth with cache (only 1: unfold Qeq; only 1: intro; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	16.2126529217	3508
Coq.nsatz.NsatzTactic.Qdi	40
Coq.nsatz.NsatzTactic.Z_one_zero	40	2	synth with cache (only 1: discriminate).	0.0115561485291	3
Coq.nsatz.NsatzTactic.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0154449939728	2
Coq.nsatz.NsatzTactic.Zdi	40
Coq.nsatz.Nsatz.Rsth	40	0.0.0.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.0748550891876	10
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0169789791107	1
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	157	synth with cache (only 1: constructor).	1.30686402321	12516
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	2.11.11.0.1	synth with cache (only 1: intros; only 1: simpl; only 1: pose proof (sin2_bound x); only 1: rewrite Rmult_1_r; only 1: apply Rle_0_sqr).	29.1310551167	16953
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	19.37	synth with cache (only 1: intro; only 1: lra).	29.0544888973	17249
Coq.Reals.Ratan.pos_opp_lt	40	0.0	synth with cache (only 1: intros eps Heps; only 1: lra).	0.0220069885254	2
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.tan_atan	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_eq0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.atan_tan	40
Coq.Reals.Ratan.atan_inv	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.7.9	synth with cache (only 1: intros H0 eps H1; only 1: apply pow_lt; only 1: auto).	16.5592420101	6477
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Ratan.sin_atan	40
Coq.Reals.Ratan.cos_atan	40
Coq.Reals.Ratan.asin_atan	40
Coq.Reals.Ratan.asin_0	40
Coq.Reals.Ratan.asin_1	40
Coq.Reals.Ratan.asin_inv_sqrt2	40
Coq.Reals.Ratan.asin_opp	40
Coq.Reals.Ratan.asin_bound	40
Coq.Reals.Ratan.asin_bound_lt	40
Coq.Reals.Ratan.sin_asin	40
Coq.Reals.Ratan.asin_sin	40
Coq.Reals.Ratan.cos_asin	40
Coq.Reals.Ratan.tan_asin	40
Coq.Reals.Ratan.derivable_pt_asin	40
Coq.Reals.Ratan.derive_pt_asin	40
Coq.Reals.Ratan.acos_atan	40
Coq.Reals.Ratan.acos_asin	40	3.1.0.7	synth with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: intros x; only 1: intros [a1 a2]; only 1: shelve).	7.42614507675	1435
Coq.Reals.Ratan.asin_acos	40
Coq.Reals.Ratan.acos_0	40
Coq.Reals.Ratan.acos_1	40	4.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold acos; only 1: repeat case Rle_dec; only 1: lra; only 1: intros x; only 1: intro; only 1: reflexivity; only 1: intros; only 1: pose proof sqrt2_neq_0 as SH; only 1: lra).	2.19507408142	546
Coq.Reals.Ratan.acos_opp	40
Coq.Reals.Ratan.acos_inv_sqrt2	40
Coq.Reals.Ratan.acos_bound	40
Coq.Reals.Ratan.acos_bound_lt	40
Coq.Reals.Ratan.cos_acos	40
Coq.Reals.Ratan.acos_cos	40
Coq.Reals.Ratan.sin_acos	40
Coq.Reals.Ratan.tan_acos	40
Coq.Reals.Ratan.derivable_pt_acos	40
Coq.Reals.Ratan.derive_pt_acos	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40	6.2.0	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: inversion 1; only 1: firstorder  (subst; auto)).	0.679211854935	216
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	1.1.0.2	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: easy; only 1: intro; only 1: reflexivity).	0.311932086945	81
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.1.4.0.0.0.2.0	synth with cache (only 1: intro; only 1: symmetry; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: destruct l; only 1: now auto; only 1: auto).	1.86410498619	727
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.0.0.0.0.6	synth with cache (only 1: intros; only 1: induction l; only 1: cbn; only 1: auto; only 1: cbn; only 1: auto).	2.49384689331	1097
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.0.0.0	synth with cache (only 1: intros ? ?; only 1: intros a1; only 1: f_equal; only 1: auto).	0.0505549907684	4
Coq.Reals.RList.RList_P22	40	0.6.1.0.0	synth with cache (only 1: intro l; only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: now simpl; only 1: reflexivity).	0.572371006012	224
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40	1.22	synth with cache (only 1: fix gcd_greatest 1; only 1: easy).	29.2131710052	19808
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.095517873764	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	0.3.0.0.0.0.2	synth with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.260655879974	113
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: auto with real).	0.0742170810699	9
Coq.Reals.Rbasic_fun.Rmin_left	40	0.4.0.2.1.4	synth with cache (only 1: unfold Rle; only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intuition N.Private_Tac.order; only 1: intuition).	6.33129000664	1675
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0607309341431	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.122596979141	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.2.0.0.3.6	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: intro; only 1: assumption).	30.3909959793	9363
Coq.Reals.Rbasic_fun.Rmin_glb	40	1.0.0.2.6	synth with cache (only 1: intros r1 r2 H H0; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: intuition).	19.6086349487	1476
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: auto; only 1: intro; only 1: assumption).	0.0812320709229	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.182205915451	24
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0886549949646	7
Coq.Reals.Rbasic_fun.Rmax_left	40	1.0.0.0.1.0.0.1.2.6.1.3	synth with cache (only 1: intros r1 r2 H; only 1: elim H; only 1: unfold Rmax; only 1: rewrite Rlt_def; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real; only 1: intro; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: assumption; only 1: auto with real).	18.8860480785	6954
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.060252904892	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0774521827698	6
Coq.Reals.Rbasic_fun.RmaxRmult	40	1.0.0.2.2.0.0.9	synth with cache (only 1: unfold IZR, IPR; only 1: intros x y; only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: auto with real).	13.1874248981	4776
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0848519802094	8
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0795900821686	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.0.12	synth with cache (only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	32.6759800911	11109
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intros E1; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	0.82140994072	136
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	0.0.0.1.0.0.0.7.1	synth with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: ring; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).	3.07510304451	1112
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40	0.1.0.2.1.0.0.2.3.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intro; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intro; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: reflexivity).	3.0629928112	1255
Coq.Reals.Rbasic_fun.Ropp_Rmin	40	1.2.0.3.2.0.0.3.3.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intro H1; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: reflexivity).	23.6175508499	8591
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.3.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	2.14447903633	186
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	8	synth with cache (only 1: auto with *).	0.396980047226	72
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	2.0.0.3.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: auto with real; only 1: auto).	0.201427936554	29
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.7.20.5	synth with cache (only 1: intros p H; only 1: induction p; only 1: easy; only 1: simpl; only 1: auto with real).	13.4969539642	8876
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.8.15	synth with cache (only 1: intros x; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	16.0007510185	7575
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.6.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.677504062653	190
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.0.1	synth with cache (only 1: intros y H8; only 1: intros x; only 1: split).	0.0905101299286	13
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40	1.22	synth with cache (only 1: intros c c_encad; only 1: shelve).	11.4789910316	4211
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40	12.7	synth with cache (only 1: intros xxh; only 1: shelve).	5.31567811966	2073
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	11	synth with cache (only 1: intuition congruence).	0.776837110519	267
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	11.27.25	synth with cache (only 1: intro n; only 1: fix even_equiv 1; only 1: now Nat.nzsimpl).	11.2208249569	20246
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	0.2.3.6	synth with cache (only 1: intros m n p; only 1: destruct (lt_eq_lt_dec n m); only 1: intuition; only 1: now left).	3.06611514091	503
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.1.0	synth with cache (only 1: intro m; only 1: simpl; only 1: now Nat.nzsimpl).	0.136642932892	4
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.2	synth with cache (only 1: intros a; only 1: auto with real).	0.0187799930573	4
Coq.Reals.Rfunctions.pow_1	40	6.0	synth with cache (only 1: intros; only 1: ring).	0.023962020874	8
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.127687931061	8
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0.0.0	synth with cache (only 1: intro; only 1: simpl; only 1: intros; only 1: auto with real).	0.0386049747467	11
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.0.1.4	synth with cache (only 1: intros m' p; only 1: intro; only 1: repeat rewrite S_INR; only 1: ring).	0.384680986404	84
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	0.0.2.0.0.0.0.3.20	synth with cache (only 1: intro n; only 1: Nat.cases ltac:(n); only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: intros a Ha; only 1: simpl; only 1: auto with real).	13.6385560036	10010
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	1.12398290634	348
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.0.0.2.2.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 1 with (1 * 1); only 1: auto with real; only 1: auto with real).	1.73120594025	614
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	1.2.0.2.0.0.20	synth with cache (only 1: unfold IZR, IPR; only 1: simple induction n; only 1: reflexivity; only 1: intros v w; only 1: simpl; only 1: rewrite Rmult_1_l; only 1: auto with real).	23.332034111	13304
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: ring_Rsqr).	0.0268828868866	3
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	4.3.0	synth with cache (only 1: unfold IZR at 1; only 1: intros q; only 1: trivial).	0.0512042045593	28
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	2.4.0	synth with cache (only 1: intro; only 1: simpl; only 1: ring).	0.0607972145081	12
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0884788036346	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40	0.0.0.0.0.0.0.12.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: apply Rmult_le_pos; only 1: apply HrecN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply H; only 1: apply le_n).	22.7353730202	14907
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	1.1.1.0	synth with cache (only 1: simpl; only 1: intro m; only 1: Nat.nzsimpl; only 1: apply Nat.le_add_r).	0.114690065384	18
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.2.0.2.0	synth with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: Nat.order'; only 1: simpl; only 1: auto with arith).	0.153614044189	15
Coq.Reals.Rprod.C_maj	40	2.11.1.4	synth with cache (only 1: simpl; only 1: intro RS'; only 1: fix le_div2 1; only 1: trivial).	10.5229480267	3851
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.0	synth with cache (only 1: intros; only 1: apply Nat.div2_double).	0.0200970172882	3
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.0192899703979	3
Coq.Reals.Exp_prop.div2_not_R0	40	2.18.6.4	synth with cache (only 1: simple induction 1; only 1: Nat.order_nz; only 1: fix le_div2 1; only 1: trivial).	19.6446738243	11980
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40	2.0.3.9.10.2	synth with cache (only 1: intros x y H; only 1: destruct H; only 1: destruct (total_order_T x y); only 1: intuition; only 1: exfalso; only 1: auto).	15.3134200573	5109
Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveReals.Rring	40
Coq.Reals.ClassicalConstructiveReals.RringExt	40
Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40
Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40
Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveReals.plus_IQR	40
Coq.Reals.ClassicalConstructiveReals.mult_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_lt	40
Coq.Reals.ClassicalConstructiveReals.lt_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40
Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40
Coq.Reals.ClassicalConstructiveReals.RabsLUB	40
Coq.Reals.ClassicalConstructiveReals.Rcomplete	40
Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40
Coq.Reals.Rpower.P_Rmin	40	1.3.1.0.0.31	synth with cache (only 1: unfold Rmin; only 1: intros; only 1: case (Rle_dec x y); only 1: auto; only 1: intro; only 1: assumption).	3.19091200829	5189
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_neq_0	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.exp_ineq1_le	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_neq_0	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_pow	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_nonzero	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_Rlog	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_Rpower	40	0.2.1.5.0.0	synth with cache (only 1: intros; only 1: apply exp_inv; only 1: unfold Rpower; only 1: repeat rewrite exp_ln || rewrite exp_Ropp; only 1: trivial; only 1: apply exp_pos).	1.07024407387	405
Coq.Reals.Rpower.Rlog_pow	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.2	synth with cache (only 1: intros a b Ha Hb; only 1: field; only 1: auto).	0.0912971496582	15
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	5.4.6	synth with cache (only 1: intros r r1 r2; only 1: intros; only 1: firstorder).	14.0378880501	5204
Coq.Reals.Rpower.D_in_ext	40	0.3.0.5.1.0.0.2	synth with cache (only 1: intros; only 1: generalize H, H0; only 1: unfold D_in; only 1: intro; only 1: elim H1; only 1: intro; only 1: unfold limit1_in; only 1: assumption).	9.11160898209	3746
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.RIneq.Rle_refl	40	4.9	synth with cache (only 1: right; only 1: now try rewrite H).	0.176007986069	280
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0159170627594	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0184540748596	4
Coq.Reals.RIneq.Rlt_not_eq	40	5.0.0.0.3.16	synth with cache (only 1: intros z z0; only 1: intros LE EQ; only 1: subst; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	3.30115604401	3922
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	2.3.1	synth with cache (only 1: intros p q H; only 1: left; only 1: auto with real).	0.0375590324402	26
Coq.Reals.RIneq.Rgt_ge	40	0	synth with cache (only 1: firstorder).	0.00864386558533	1
Coq.Reals.RIneq.Rle_ge	40	2.8.0.0.0.5	synth with cache (only 1: induction 1 as [| x y z]; only 1: red; only 1: tauto; only 1: generalize (total_order_T r1 r2); only 1: right; only 1: auto).	5.88029408455	5539
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0266120433807	5
Coq.Reals.RIneq.Rlt_gt	40	1.0.0	synth with cache (only 1: intros; only 1: red; only 1: trivial).	0.0165650844574	4
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.00814294815063	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0268490314484	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0185520648956	3
Coq.Reals.RIneq.Rnot_lt_le	40	8.3.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intros; only 1: intuition).	1.71028089523	1079
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.0625178813934	24
Coq.Reals.RIneq.Rnot_gt_ge	40	14.3.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	6.72506713867	5631
Coq.Reals.RIneq.Rnot_lt_ge	40	1.0.0.0.0.0	synth with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0361771583557	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0295820236206	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.023707151413	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0252149105072	4
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.5.0	synth with cache (only 1: intros r1 r2; only 1: intros r H; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.165117025375	73
Coq.Reals.RIneq.Rle_not_gt	40	0.0.1.2.2	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto using Rnot_lt_le with rorders).	0.105679035187	44
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.1.1.0	synth with cache (only 1: do 2 intro; only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0296490192413	8
Coq.Reals.RIneq.Req_le	40	0.0	synth with cache (only 1: destruct 1; only 1: auto with rorders).	0.0124530792236	2
Coq.Reals.RIneq.Req_ge	40	0.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0178978443146	4
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0182838439941	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0156779289246	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.2.0.2.0	synth with cache (only 1: do 2 intro; only 1: intro abs; only 1: red; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0310900211334	10
Coq.Reals.RIneq.Rle_antisym	40	0.4.0.0.0.3	synth with cache (only 1: intros * []; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3; only 1: auto with real).	0.60148692131	242
Coq.Reals.RIneq.Rge_antisym	40	9.0	synth with cache (only 1: intros r1 r2; only 1: intuition).	0.0853300094604	66
Coq.Reals.RIneq.Rle_le_eq	40	0.0.0.3.2	synth with cache (only 1: intros n m; only 1: unfold Rle; only 1: split; only 1: intuition; only 1: intuition).	0.252213954926	82
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0133202075958	1
Coq.Reals.RIneq.Rlt_eq_compat	40	12.0	synth with cache (only 1: intros; only 1: intuition congruence).	0.245203018188	176
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.2.0	synth with cache (only 1: intros x x' y y'; only 1: intros H1 H2 H3; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0321800708771	14
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0534329414368	30
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0202400684357	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.109151124954	3
Coq.Reals.RIneq.Rgt_dec	40
Coq.Reals.RIneq.Rge_dec	40	1.0.10	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.732067108154	445
Coq.Reals.RIneq.Rlt_le_dec	40
Coq.Reals.RIneq.Rgt_ge_dec	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0297889709473	4
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0346391201019	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.0819079875946	33
Coq.Reals.RIneq.Rlt_or_le	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0284829139709	4
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rle_lt_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.0372469425201	14
Coq.Reals.RIneq.Rle_or_lt	40	0.0.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0953691005707	35
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.102306842804	37
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	1.1.13.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	6.74289393425	2578
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.3.0.0.2	synth with cache (only 1: intros a0; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.839370012283	58
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.1.0	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	0.370471954346	21
Coq.Reals.RIneq.Rplus_opp_l	40	0.3.0.0.1	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.29358005524	16
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	0.4.0.0	synth with cache (only 1: intros x y H; only 1: intros; only 1: subst; only 1: auto with real).	0.0526139736176	21
Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.4.0.1	synth with cache (only 1: intros x y H; only 1: intros; only 1: subst; only 1: auto with real).	0.0632681846619	33
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.10.0.0.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.969661951065	429
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	1.3.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_mult_comm, CReal_inv_l; only 1: reflexivity).	9.79703783989	297
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.806947946548	33
Coq.Reals.RIneq.Rinv_r_sym	40	0.1.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.781682014465	33
Coq.Reals.RIneq.Rmult_0_r	40	4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: field).	0.13450884819	34
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0175750255585	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.3.2	synth with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.747589826584	64
Coq.Reals.RIneq.Rmult_1_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.377877950668	18
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0123119354248	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	4.1	synth with cache (only 1: intros r r1 r2; only 1: congruence).	0.091010093689	16
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0	synth with cache (only 1: intros x y H; only 1: auto with real).	0.0162389278412	2
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0100619792938	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	2.1.1.1	synth with cache (only 1: intros a b; only 1: split; only 1: auto with real; only 1: auto with real).	0.0862991809845	40
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	2.0	synth with cache (only 1: intros n m p; only 1: auto with real).	0.0483050346375	18
Coq.Reals.RIneq.Rmult_plus_distr_r	40	5.2.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	0.635983943939	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0.1	synth with cache (only 1: intros r r1 r2; only 1: auto with real).	0.0118019580841	3
Coq.Reals.RIneq.Ropp_0	40	2	synth with cache (only 1: ring).	0.695131063461	29
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.3.2.5	synth with cache (only 1: intros w; only 1: intros; only 1: rewrite H; only 1: auto with real).	0.448198080063	294
Coq.Reals.RIneq.Ropp_involutive	40	1.1	synth with cache (only 1: intro n; only 1: ring).	0.0232858657837	11
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.13	synth with cache (only 1: intros l x; only 1: ring).	4.47082781792	845
Coq.Reals.RIneq.Ropp_mult_distr_l	40	7.1	synth with cache (only 1: intros; only 1: ring).	0.0742919445038	26
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0193419456482	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0201189517975	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0216038227081	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.021488904953	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.0794279575348	22
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.017028093338	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.5.0	synth with cache (only 1: intro; only 1: intros; only 1: ring).	0.0278680324554	8
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0246019363403	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.2.1	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: ring).	0.33482503891	93
Coq.Reals.RIneq.Rminus_eq_0	40	0	synth with cache (only 1: ring).	0.0138320922852	1
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0182840824127	2
Coq.Reals.RIneq.Rminus_eq_contra	40	3.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0355248451233	6
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0233409404755	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0272397994995	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	5.1.0	synth with cache (only 1: intros n m p; only 1: symmetry; only 1: ring).	0.0408139228821	18
Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0210049152374	2
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.17.3	synth with cache (only 1: intros a Ha; only 1: field; only 1: trivial).	10.2735989094	4643
Coq.Reals.RIneq.Rinv_mult_distr	40	0.2.11	synth with cache (only 1: intros Eqf Lef x y; only 1: field; only 1: auto).	1.72330307961	848
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0277578830719	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: auto with real).	0.0396962165833	7
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.0815541744232	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.224230051041	54
Coq.Reals.RIneq.Rinv_mult_simpl	40	0.10.0.3.8	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: field; only 1: trivial).	8.7233850956	4816
Coq.Reals.RIneq.Rplus_gt_compat_l	40	4.3.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0915360450745	17
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	1.3.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0288491249084	11
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.2.0.0.3	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2; only 1: auto with real; only 1: auto with real).	0.180571079254	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40	2.7.0.1.0.9.0	synth with cache (only 1: do 3 intro; only 1: red; only 1: intro; only 1: elim H; only 1: intro; only 1: auto with real; only 1: eauto with real).	12.6217429638	6843
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.3.0.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.320767879486	123
Coq.Reals.RIneq.Rplus_ge_compat_r	40	1.3.0.3	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.134241819382	65
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0227401256561	5
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40	0.7.0.0.0.9	synth with cache (only 1: firstorder; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	13.8210229874	6039
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.0.14.6	synth with cache (only 1: intros r1 r2; only 1: unfold Rgt; only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	11.6166381836	5983
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.5	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	0.169785022736	74
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	1	synth with cache (only 1: intuition).	0.0454840660095	22
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.7	synth with cache (only 1: intros a b Hab; only 1: eauto with rorders).	0.0618760585785	47
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0469119548798	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	6.1.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.568430900574	52
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.4.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0897810459137	31
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0	synth with cache (only 1: unfold Rge; only 1: auto using Rnot_lt_le with real).	0.0182628631592	2
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	0.061460018158	17
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: auto with real; only 1: auto with real).	0.0362610816956	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0203008651733	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0205600261688	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0214290618896	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0143649578094	3
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0201239585876	3
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0196039676666	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0198719501495	4
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40	6.3.0	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	13.0796151161	594
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1.0.7	synth with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.43475985527	200
Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.0.8	synth with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.403722047806	204
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40	4.5.3.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: auto with real).	23.6289310455	8649
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40	18.3.1.1	synth with cache (only 1: intros r r1 r2 H H0; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: eauto using Rmult_le_compat_l with rorders).	19.7774310112	15696
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	4.7.10	synth with cache (only 1: intros a b c ? ? ?; only 1: intros Hab; only 1: intuition).	3.7721581459	3079
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.0.0	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0319051742554	7
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.3.1.7.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	1.78350400925	1191
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	1.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0658130645752	14
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0666408538818	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.2.14.1	synth with cache (only 1: intros a b; only 1: unfold Rle; only 1: intros [H| H]; only 1: auto with real; only 1: auto with real).	34.431030035	15527
Coq.Reals.RIneq.Rge_minus	40	0.0.0.0.2.0.4	synth with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: auto with real).	1.09297513962	400
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.11.0.0.0.0	synth with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: red; only 1: auto with real; only 1: auto with real; only 1: ring).	16.2840759754	8746
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.1.0.0	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.0433781147003	8
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.0	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0186870098114	3
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0320358276367	15
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	2.8039419651	819
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.4.0.0	synth with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.0787031650543	35
Coq.Reals.RIneq.Rlt_plus_1	40	3.9	synth with cache (only 1: intros p; only 1: apply Rlt_n_Sn).	2.69813489914	1374
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	0.3.1.3.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: reflexivity).	0.853245019913	279
Coq.Reals.RIneq.S_O_plus_INR	40	0.1.12.1.0	synth with cache (only 1: intros m; only 1: simpl; only 1: destruct m; only 1: auto with real; only 1: auto with real).	2.92159891129	810
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	3.5.8.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: intro H1; only 1: left; only 1: intuition).	5.2913608551	3090
Coq.Reals.RIneq.INR_not_0	40	1.1.2.9.0	synth with cache (only 1: intros; only 1: induction n; only 1: intro; only 1: auto with real; only 1: auto with real).	4.38473200798	2121
Coq.Reals.RIneq.not_0_INR	40	3.0.0.2.2.1.0.3	synth with cache (only 1: intro n; only 1: Nat.cases ltac:(n); only 1: now destruct 1; only 1: intros; only 1: simpl; only 1: destruct n; only 1: exact R1_neq_R0; only 1: auto with real).	12.7113118172	3240
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.IZR_NEG	40	0	synth with cache (only 1: auto with real).	0.0149857997894	1
Coq.Reals.RIneq.IZR_POS_xO	40	1.3.10.0	synth with cache (only 1: induction p as [p| p| ]; only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.14655017853	553
Coq.Reals.RIneq.IZR_POS_xI	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	0.2.2.0.1.4.4	synth with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR, IPR; only 1: ring).	1.09847807884	512
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.0.0.1.0	synth with cache (only 1: red; only 1: intros z1 z2 H; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	0.104492902756	7
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.40429186821	124
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.Ropp_div_den	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0334868431091	4
Coq.Reals.RIneq.double	40	5.5	synth with cache (only 1: intros a; only 1: ring).	0.173902988434	119
Coq.Reals.RIneq.double_var	40	9.2	synth with cache (only 1: intros; only 1: field).	3.8711938858	198
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.129976987839	38
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	5.1.0.2.5	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intros x y H H0; only 1: intros; only 1: apply Rmult_lt_0_compat with (1 := H1); only 1: auto with real).	20.1710519791	9554
Coq.Reals.RIneq.Rdiv_plus_distr	40	6.6.0.2	synth with cache (only 1: intros x n; only 1: unfold Rdiv; only 1: intro p; only 1: ring).	0.987205982208	876
Coq.Reals.RIneq.Rdiv_minus_distr	40
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0326209068298	4
Coq.Reals.RIneq.pos_half_prf	40	0	synth with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.00857901573181	1
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_eq_natpow_inv	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_invneg_le_pow	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_le_one	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40	45.31	synth with cache (only 1: simpl; only 1: eauto with *).	10.06082201	10778
Coq.Reals.ClassicalDedekindReals.DRealAbstr_aux	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealQlimExp2	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_cauchy	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_max_prec_1	40	2.1.0.1.9	synth with cache (only 1: intros a b; only 1: destruct b as [| b| b]; only 1: trivial; only 1: easy; only 1: easy).	1.58814907074	648
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_bound	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_bound	40	0.0.12	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.565297842026	437
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse'	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse''	40	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: intros x q n H; only 1: unfold DRealAbstr, proj1_sig in H; only 1: match type of H with | context [ if ?a then _ else _ ] => destruct a as [H'| H'] end; only 1: discriminate; only 1: destruct (Z_le_gt_dec n 0) as [Hdec| Hdec]; only 1: specialize (H' (Z.to_nat (- n))); only 1: rewrite (Z2Nat.id (- n) _), Z.opp_involutive in H'; only 1: pose proof (Qpower_0_lt 2 n); only 1: lra; only 1: specialize (H' (Z.to_nat 0)); only 1: cbn in H'; only 1: pose proof (cauchy x n 0%Z n _ _) as Hxbnd; only 1: apply Qabs_Qlt_condition in Hxbnd; only 1: pose proof (Qpower_1_le 2 n _ _); only 1: lra).	11.0471138954	3724
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	10.3	synth with cache (only 1: intros a b Hb; only 1: intuition).	2.07759213448	538
Coq.Reals.ArithProp.le_minusni_n	40	20.1	synth with cache (only 1: intros; only 1: intuition).	4.0835340023	1976
Coq.Reals.ArithProp.lt_minus_O_lt	40	22	synth with cache (only 1: intuition).	14.1947028637	4560
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	2.7	synth with cache (only 1: intros n H; only 1: auto with arith).	0.803153991699	145
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40	2.13	synth with cache (only 1: intros f1; only 1: eauto with real).	0.447699785233	433
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.1.0.2.2	synth with cache (only 1: intro; only 1: apply Rinv_0_lt_compat; only 1: apply Rplus_le_lt_0_compat; only 1: apply pos_INR; only 1: apply Rlt_0_1).	0.856607913971	180
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	8.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl).	0.121611833572	11
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40	0.1.3.1.6.33	synth with cache (only 1: intro n; only 1: intros eps Heps; only 1: intros A R1 Sym B R2 f Hf; only 1: generalize (Rplus_lt_compat_l 1 0 1 Rlt_0_1); only 1: rewrite <- (Rmult_0_r (/ 2)); only 1: Lra.lra).	21.2765460014	27254
Coq.Reals.Ranalysis2.quadruple	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0249400138855	2
Coq.Reals.Ranalysis2.quadruple_var	40	7.1	synth with cache (only 1: intro; only 1: field).	0.0408680438995	10
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: assumption).	0.0213379859924	11
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	0.8.1	synth with cache (only 1: intros f D l x0 H H0; only 1: intro; only 1: auto).	0.122299909592	108
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	1.8.7.14.2	synth with cache (only 1: intros H1; only 1: intro H; only 1: destruct H as [alp [Halp H]]; only 1: apply H; only 1: assumption).	2.99394392967	7088
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	13.14	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: firstorder).	2.06333398819	3649
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.9.0.4.28	synth with cache (only 1: intros h1 h2; only 1: absurd (1 <= 0); only 1: auto with real; only 1: exfalso; only 1: contradiction).	1.14721798897	1467
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40	2.0.13.12.9	synth with cache (only 1: intros LE p Hp1 Hp2; only 1: intro; only 1: simpl; only 1: intros HF; only 1: firstorder).	36.1259360313	34040
Coq.Reals.Rtopology.open_set_P6	40	9.3.0.0	synth with cache (only 1: unfold open_set; only 1: intros; only 1: elim H0; only 1: firstorder).	2.20149493217	1624
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	31.1	synth with cache (only 1: intros; only 1: firstorder).	6.29581093788	8075
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40
Coq.Reals.Rseries.Un_growing_shift	40	0.11.2	synth with cache (only 1: intros; only 1: intro; only 1: now Nat.nzsimpl).	0.744122982025	389
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy.ConstructiveExtra.Pos_pred_double_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_id	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.constructive_indefinite_ground_description_Z	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qlt_trans_swap_hyp	40	0.0.0.0.0	synth with cache (only 1: intros x y z ? ?; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.0485420227051	5
Coq.Reals.Cauchy.ConstructiveRcomplete.Qle_trans_swap_hyp	40	0.0.1.0.6	synth with cache (only 1: intros n m p; only 1: intros; only 1: eapply Qle_trans; only 1: eauto; only 1: intuition subst; auto with qarith).	2.12159705162	789
Coq.Reals.Cauchy.ConstructiveRcomplete.Qpower_2powneg_le_inv	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pospow_lin_le_2pow	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self'	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cm_mono	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cauchy	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_upper_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_seq	40	8.0.2	synth with cache (only 1: intros; only 1: unfold CReal_abs, CReal_abs_seq, CReal_abs_scale; only 1: split).	0.521052122116	235
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_diff	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_RQ_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos2Z_pos_is_pos	40	0.5	synth with cache (only 1: intros; only 1: now destruct p).	0.0907788276672	19
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Qgt_condition	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_seq_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_le_iff_lt	40	0.0.1.1	synth with cache (only 1: intros; only 1: split; only 1: apply Z.nle_gt; only 1: apply Z.lt_nge).	0.0620768070221	6
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_lt_iff_le	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: split; only 1: apply Z.nlt_ge; only 1: apply Z.le_ngt).	0.0516531467438	4
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerAddExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerRemSubExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerFac	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_red_scale	40	1.0	synth with cache (only 1: intros a n H H'; only 1: auto).	0.0193500518799	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_scale_sep0_limit	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	16.339329958	322
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0.22	synth with cache (only 1: intros x l1; only 1: apply (Ropp_ext CReal_isRingExt)).	15.4314169884	292
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.0.0.1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros r; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold inject_Q, CReal_mult, CReal_mult_seq, CReal_mult_scale; only 1: do 2 rewrite CReal_red_seq; only 1: do 1 rewrite CReal_red_scale; only 1: change (Qbound_ltabs_ZExp2 1) with 1%Z; only 1: do 1 simplify_seq_idx; only 1: simplify_Qabs; only 1: pose proof (cauchy r n (n - 2)%Z n _ _) as Hrbnd; only 1: apply Qabs_Qlt_condition in Hrbnd; only 1: apply Qabs_Qle_condition; only 1: lra).	19.4854359627	2766
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBoundSpec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBound_lt_scale	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0179870128632	6
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0164520740509	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40	0.5.2.3.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply (CReal_mult_lt_compat_l x) in abs; only 1: apply H0; only 1: rewrite <- (CReal_mult_comm x), <- (CReal_mult_comm x); only 1: assumption; only 1: exact H).	26.1653780937	1082
Coq.Reals.Cauchy.PosExtra.Pos_pow_1_r	40	0.3.0.2.4.1	synth with cache (only 1: unfold Pos.pow; only 1: intros; only 1: apply Pos.iter_invariant; only 1: intros m H; only 1: now rewrite ?Pos.square_xO; only 1: trivial).	0.71461391449	585
Coq.Reals.Cauchy.PosExtra.Pos_le_multiple	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_le_mono_r	40
Coq.Reals.Cauchy.QExtra.Pos_log2floor_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Pos_log2ceil_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_le_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_leabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_1	40	13	synth with cache (only 1: reflexivity).	0.0989830493927	60
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_2	40	0	synth with cache (only 1: reflexivity).	0.00915098190308	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_3	40	0	synth with cache (only 1: reflexivity).	0.00952696800232	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_4	40	0	synth with cache (only 1: reflexivity).	0.00923299789429	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_inv	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_opp	40
Coq.Reals.Cauchy.QExtra.Qlowbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qopp_mult_mone	40	0.0	synth with cache (only 1: intro n; only 1: reflexivity).	0.0230460166931	2
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qabs_involutive	40	3.1.14	synth with cache (only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	3.58130717278	2376
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLt_RQ_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLe_0R_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40	4.3.1	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: auto).	4.75462198257	179
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40	17.15.9	synth with cache (only 1: intro n; only 1: intros; only 1: firstorder).	17.5641171932	25406
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig'	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.0.0.22	synth with cache (only 1: constructor; only 1: intro abs; only 1: pose proof (CRealLt_asym x x abs); only 1: contradiction; only 1: intro abs; only 1: pose proof (CRealLt_asym x x abs); only 1: contradiction).	30.6712012291	4002
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	4.2.6	synth with cache (only 1: intro n; only 1: intros m [H3 H4]; only 1: now subst).	0.716720104218	543
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	1.11.12.0.15	synth with cache (only 1: intros p n; only 1: intros; only 1: revert H; only 1: intros <-; only 1: assumption).	27.2673761845	26811
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	3.24.3.3.9	synth with cache (only 1: intros; only 1: apply (CReal_lt_le_trans _ x); only 1: assumption; only 1: pose proof (CRealLe_not_lt y x) as [_ Hyx']; only 1: apply H).	32.438398838	38774
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	1.1.7.0.0	synth with cache (only 1: intros x y z Hxley Hylez contra; only 1: apply Hylez; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	0.512017965317	479
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	1.0.9.1.7.0	synth with cache (only 1: intros x y z Hxeqy Hxlez; only 1: intro contra; only 1: apply Hxlez; only 1: apply (CRealLt_morph x y Hxeqy z z); only 1: apply CRealEq_refl; only 1: assumption).	12.7431662083	3830
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	0.1.0.0.0.1.0.0.0.0.3	synth with cache (only 1: intros x; only 1: intros q Hq; only 1: split; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra).	1.95757389069	1192
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40	2.0.0.18	synth with cache (only 1: intros z; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	16.5320739746	4358
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_cauchy	40	0.5.11	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	1.51854586601	762
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_red_seq	40	8.0	synth with cache (only 1: intros; only 1: trivial).	0.0180470943451	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.0908069610596	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z Hlt; only 1: apply CRealLt_above in Hlt; only 1: destruct Hlt as [n Hapart]; only 1: exists n; only 1: unfold CReal_plus, CReal_plus_seq in Hapart |- *; only 1: do 2 rewrite CReal_red_seq; only 1: do 2 rewrite Qred_correct; only 1: specialize (Hapart (n - 1)%Z _); only 1: lra).	0.0709640979767	9
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.0.0.5.0	synth with cache (only 1: intros x y z Hlt contra; only 1: rewrite (CReal_plus_comm y), (CReal_plus_comm z) in Hlt; only 1: apply Hlt; only 1: apply CReal_plus_lt_compat_l; only 1: exact contra).	0.27565908432	19
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	1.2.3	synth with cache (only 1: intros x y z Hle Hlt; only 1: apply CReal_plus_lt_reg_l in Hlt; only 1: contradiction).	0.349187850952	45
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 3 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.0812978744507	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	0.0413279533386	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40	116	synth with cache (only 1: now f_equiv).	11.1192080975	17382
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	1.0.0	synth with cache (only 1: fix le_div2 1; only 1: intros x; only 1: trivial).	0.015673160553	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	3	synth with cache (only 1: reflexivity).	0.00875496864319	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40	0.1.7.3.12	synth with cache (only 1: intros q Hqgt0; only 1: intros [n nmaj]; only 1: cbn in nmaj; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra).	8.01776194572	5888
Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	0.1.0.0.2	synth with cache (only 1: intros x y Hxy; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_0_lt; lra); only 1: lra).	0.105495929718	62
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	3.0.2.12.3	synth with cache (only 1: intros; only 1: intro; only 1: intros; only 1: unfold opp_fct, limit1_in, limit_in, dist; only 1: auto with real).	1.21089696884	1231
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	5.2.2.0	synth with cache (only 1: unfold continuity_pt, opp_fct; only 1: intros l H9; only 1: intros H0 H1 env; only 1: auto with real).	0.482467889786	251
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	2.0	synth with cache (only 1: intros; only 1: auto).	0.0172789096832	4
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	6.0.4.0.0.0.1.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: auto; only 1: unfold limit1_in in H; only 1: auto).	6.3373799324	3384
Coq.Reals.Ranalysis1.continuity_mult	40	0.0.0.13.0	synth with cache (only 1: unfold continuity; only 1: intros n m p H1 H2; only 1: apply continuity_pt_mult; only 1: auto; only 1: auto).	11.5507571697	6420
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	0.0.0.3.3.0.0.3.2	synth with cache (only 1: intros; only 1: intro; only 1: intro; only 1: simpl; only 1: intros; only 1: apply limit_inv; only 1: apply H; only 1: auto; only 1: auto).	31.4079499245	14101
Coq.Reals.Ranalysis1.continuity_div	40	1.2.1.3.0.0.14.0	synth with cache (only 1: intros; only 1: intro; only 1: rewrite (div_eq_inv f1 f2); only 1: apply continuity_pt_mult; only 1: auto with real; only 1: apply continuity_pt_inv; only 1: auto with real; only 1: auto with real).	13.0750389099	9065
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.195186853409	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.150090932846	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	29.0.7	synth with cache (only 1: intros n v; only 1: intro; only 1: eauto).	11.0259552002	13259
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_xeq	40	3.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition congruence).	0.0613269805908	38
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_mirr	40
Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_opp_rev; only 1: apply derivable_pt_lim_opp; only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: exact H).	3.17714905739	1524
Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).	0.0561130046844	9
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_mirr	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.7.0	synth with cache (only 1: intro; only 1: intro H; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.238657951355	127
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0260698795319	5
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1.derive_pt_mirr	40
Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	1.0.27	synth with cache (only 1: intros x n; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	17.8116049767	10176
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.2.12	synth with cache (only 1: intros H'1; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	3.27042794228	1701
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0299210548401	5
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.3.2.1.2.0.2.3.22	synth with cache (only 1: intros a a' p H; only 1: inversion H; only 1: elim H; only 1: clear H0; only 1: intros; only 1: clear H; only 1: simpl in *; only 1: apply derive_pt_eq_0; only 1: assumption).	30.1189410686	27502
Coq.Reals.Ranalysis1.pr_nu_xeq	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	8.0.0.4.0.0.1.3.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists x; only 1: elim H; only 1: unfold is_upper_bound; only 1: intro; only 1: unfold is_upper_bound in H0; only 1: intros; only 1: firstorder).	19.6025371552	13609
Coq.Reals.SeqProp.Wn_decreasing	40	3.3.0.14.0.21	synth with cache (only 1: intro; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: intros H; only 1: unfold has_ub in H; only 1: fix le_div2 1; only 1: auto).	27.7785749435	26338
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	4.10.7	synth with cache (only 1: intro k; only 1: fix gcd_divide 1; only 1: tauto).	13.1566689014	6227
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	synth with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0294070243835	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40	0.4.1.2	synth with cache (only 1: intros P n v; only 1: intros HE; only 1: fix ind_0_1_SS 1; only 1: assumption).	0.234070062637	112
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40	0.4.1.2	synth with cache (only 1: intros P n v; only 1: intros HE; only 1: fix ind_0_1_SS 1; only 1: assumption).	1.95664691925	580
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40	0.0.0.0.1.5.1.1.0	synth with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI; only 1: rewrite cos_PI2; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	7.7158870697	1636
Coq.Reals.Rtrigo_calc.tan_2PI	40	15.24.7	synth with cache (only 1: unfold tan; only 1: rewrite sin_2PI; only 1: apply Rmult_0_l).	22.7314491272	14067
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.158133029938	17
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0724120140076	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40	0.0.0.0.1.12.2.27	synth with cache (only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: prove_sup; only 1: now apply (IZR_le 0 2); only 1: auto with real; only 1: apply sqrt_positivity; only 1: now apply (IZR_le 0 2)).	5.08718514442	3867
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0964250564575	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	1.0.0.0.0.2	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.150603055954	12
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0.0.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: change 2 with (INR 2); only 1: apply lt_0_INR; only 1: Nat.order'; only 1: apply PI_RGT_0).	0.0876009464264	5
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40	0.0.0	synth with cache (only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: apply pr_nu).	0.0565450191498	3
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	1.71522188187	357
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40
Coq.Reals.Ranalysis4.derivable_cosh	40
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.1	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.135612010956	6
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.0.2	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.244519948959	21
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	1.00980687141	89
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.1.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0399129390717	8
Coq.Reals.DiscrR.IZR_eq	40	4.0	synth with cache (only 1: intros x y H; only 1: now f_equal).	0.0343160629272	6
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40	8.2.12.1	synth with cache (only 1: intros x y; only 1: elim archimed with x; only 1: intros; only 1: ring_Rsqr).	4.75028300285	3200
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0530571937561	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.14	synth with cache (only 1: intros a Ha; only 1: ring_Rsqr).	0.643382072449	433
Coq.Reals.R_sqr.Rsqr_1	40	0.0	synth with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0353701114655	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	8.0	synth with cache (only 1: intros; only 1: auto with real).	0.192028045654	28
Coq.Reals.R_sqr.Rsqr_div	40	0.0.4.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: assumption).	0.148692846298	8
Coq.Reals.R_sqr.Rsqr_eq_0	40	4.2.4.0	synth with cache (only 1: unfold Rsqr; only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).	1.46179389954	557
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.100573062897	2
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.048201084137	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	3.6.12	synth with cache (only 1: intros a b c; only 1: unfold Rsqr; only 1: auto with real).	29.4644169807	14113
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqr.Rsqr_bounds_le	40
Coq.Reals.R_sqr.Rsqr_bounds_lt	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.0.1.5.2.2.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: intros; only 1: ring_Rsqr; only 1: intros; only 1: ring_Rsqr; only 1: trivial).	12.9386520386	4765
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	17.0.0.0	synth with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).	28.080671072	9990
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.2.3.0.11	synth with cache (only 1: intros Lt0; only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	14.6977579594	6564
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.2.0.0.2	synth with cache (only 1: intro; only 1: intros; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).	0.154447078705	9
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.3.0	synth with cache (only 1: intro X1; only 1: intros; only 1: apply derivable_pt_id).	0.0683100223541	14
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	9.4	synth with cache (only 1: intros f g a x a0 q cf eps ep; only 1: intuition).	0.806354999542	265
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.0.0.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).	0.21160697937	5
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	0.0.0.0.0.0.5.0.0	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: apply g_wf; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition).	12.198184967	1506
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	1.1.0	synth with cache (only 1: unfold Rdiv; only 1: intros; only 1: lra).	0.126667976379	16
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	4.1.2.1.3.15.0	synth with cache (only 1: intro n; only 1: apply Rlt_le; only 1: apply Rinv_0_lt_compat; only 1: simpl; only 1: apply lt_0_INR; only 1: Nat.nzsimpl'; only 1: apply Peano.le_n_S, Peano.le_0_n).	24.4391009808	23588
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0514121055603	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0524020195007	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0502760410309	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0533061027527	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	1.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 H; only 1: elim H; only 1: auto with real; only 1: auto with real).	0.301858186722	18
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.1.1	synth with cache (only 1: intros a b c; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.356604814529	19
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0607979297638	6
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0576729774475	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.060213804245	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.2.15.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	1.37733793259	631
Coq.Reals.Rlimit.eps2	40	6.1.0	synth with cache (only 1: intro; only 1: symmetry; only 1: field).	0.151206970215	19
Coq.Reals.Rlimit.eps4	40	0.0	synth with cache (only 1: intros n; only 1: field).	0.100795984268	2
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.1	synth with cache (only 1: intros; only 1: lra).	0.0649280548096	3
Coq.Reals.Rlimit.Rlt_eps4_eps	40	1.5	synth with cache (only 1: intro; only 1: lra).	0.34744977951	59
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0587959289551	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0419371128082	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.16.0.2	synth with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	11.1630260944	4712
Coq.Reals.R_sqrt.pow2_sqrt	40	0.1.1.13	synth with cache (only 1: simpl; only 1: rewrite Rmult_1_r; only 1: intros; only 1: apply (sqrt_sqrt x H)).	3.96525716782	1668
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.043096780777	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.1.0.0.4	synth with cache (only 1: intros a b; only 1: intro; only 1: intro; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	3.75193405151	949
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.3.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.187772035599	7
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply (sqrt_positivity x H); only 1: apply sqrt_pos).	4.98463392258	1080
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_neg_0	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.inv_sqrt	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	0.315687894821	67
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0645530223846	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0775809288025	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40	0.0.20.2	synth with cache (only 1: red; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	16.9786560535	5114
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40	4.0.0.11.0.0.0.7.0	synth with cache (only 1: intros; only 1: symmetry in  |- *; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: unfold Rsqr; only 1: rewrite cos_plus; only 1: ring).	35.7850382328	12896
Coq.Reals.Rtrigo1.cos_2a_sin	40
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).	0.131780862808	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).	0.109368085861	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.11.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	2.26304507256	560
Coq.Reals.Rtrigo1.PI2_RGT_0	40
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	1.0.0.0.0.12	synth with cache (only 1: rewrite <- Ropp_0; only 1: apply Ropp_lt_gt_contravar; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	9.80706787109	3477
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.1.0.0.1	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: destruct pi2_int; only 1: lra).	0.0645871162415	7
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	6.04547905922	1234
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.sin_inj	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.cos_inj	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	1.4.0.0	synth with cache (only 1: simpl; only 1: intro m; only 1: intro p; only 1: trivial).	0.0753898620605	23
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0	synth with cache (only 1: auto with zarith).	0.0230338573456	1
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.4.0.3.0.0.2	synth with cache (only 1: unfold Rminus; only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite Rplus_assoc; only 1: rewrite HrecN; only 1: ring).	2.47628998756	1094
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	10.5.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: simpl; only 1: auto with real).	2.91900801659	1315
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	1.18074703217	325
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rtrigo_facts.sin2_bound	40
Coq.Reals.Rtrigo_facts.cos2_bound	40	0.4.0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- Rsqr_1; only 1: apply Rsqr_bounds_le; only 1: rewrite <- sin_shift; only 1: apply SIN_bound).	0.175499916077	9
Coq.Reals.Rtrigo_facts.cos_sin	40
Coq.Reals.Rtrigo_facts.cos_sin_opp	40
Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40
Coq.Reals.Rtrigo_facts.sin_cos	40
Coq.Reals.Rtrigo_facts.sin_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40
Coq.Reals.Rtrigo_facts.tan_sin	40
Coq.Reals.Rtrigo_facts.tan_sin_opp	40
Coq.Reals.Rtrigo_facts.tan_cos	40
Coq.Reals.Rtrigo_facts.tan_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_tan	40
Coq.Reals.Rtrigo_facts.cos_tan	40
Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.258778810501	5
Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.177738904953	5
Coq.Reals.Rtrigo_facts.cos_pi_minus	40
Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.0.0.0.0	synth with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.170944929123	5
Coq.Reals.Rtrigo_facts.tan_pi_minus	40
Coq.Reals.Rtrigo_facts.tan_pi_plus	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0627000331879	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSum.sum_const	40
Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40	8.17.7	synth with cache (only 1: fix gcd_greatest 1; only 1: intros Base Step n; only 1: trivial).	12.2557449341	11959
Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSum.sum_opp	40
Coq.Reals.Abstract.ConstructiveSum.sum_scale	40
Coq.Reals.Abstract.ConstructiveSum.sum_plus	40
Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40	6.3.0.8	synth with cache (only 1: fix gcd_greatest 1; only 1: induction n; only 1: reflexivity; only 1: auto with arith).	2.72872185707	1794
Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSum.splitSum	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	0.0.1	synth with cache (only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: assumption).	0.0423328876495	4
Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40	7.9	synth with cache (only 1: fix gcd_greatest 1; only 1: auto with sets).	15.8158500195	3853
Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	0.0.0	synth with cache (only 1: split; only 1: apply CRmorph_rat; only 1: apply CRmorph_rat).	0.0463411808014	3
Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40	1.25	synth with cache (only 1: fix gcd_divide 1; only 1: auto with arith).	2.68102502823	5111
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40	10.5	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	1.19862794876	860
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40	1.0.0.6.1	synth with cache (only 1: intros; only 1: apply CRmult_morph; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	1.02903699875	252
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.0.2.0.0.0.1	synth with cache (only 1: intros R x y exy z t ezt; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite exy, ezt; only 1: reflexivity; only 1: reflexivity).	0.261131048203	83
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.0.0.0.0.0.0	synth with cache (only 1: intros R x y H z t H0; only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	0.058650970459	7
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros R p q r H; only 1: unfold CRmin, CRmax; only 1: setoid_replace (r * q - r * p) with (r * (q - p)); only 1: rewrite CRabs_mult; only 1: rewrite (CRabs_right r); only 1: rewrite <- CRmult_assoc; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: do 2 rewrite <- CRmult_plus_distr_l; only 1: reflexivity; only 1: reflexivity; only 1: exact H; only 1: unfold CRminus; only 1: rewrite CRmult_plus_distr_l, CRopp_mult_distr_r; only 1: reflexivity).	16.71230793	4080
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40	2.1	synth with cache (only 1: fix gcd_greatest 1; only 1: destr_bool).	0.0274119377136	21
Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	6.0.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: assumption).	0.259322166443	219
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40	6.0.11.2.0	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: assumption).	3.03055095673	4254
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.4.0.4.2	synth with cache (only 1: split; only 1: red; only 1: apply CRmorph_rat; only 1: red; only 1: apply CRmorph_rat).	0.539278030396	392
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.0	synth with cache (only 1: intros a n Hn; only 1: apply CRmorph_rat).	0.012060880661	2
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePower.CRpow_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePower.CR_double	40
Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40	6.11.16.0.13	synth with cache (only 1: intros; only 1: destruct (CRltLinear R); only 1: intuition; only 1: red; only 1: eauto).	28.8326380253	9464
Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: constructor 1; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	0.0703761577606	27
Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	2.2.0.3.2	synth with cache (only 1: intros * []; only 1: destruct (CRltLinear R); only 1: split; only 1: assumption; only 1: assumption).	0.802917003632	364
Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40
Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	1.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).	0.178948879242	23
Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	5.4.5.4.0.4.0	synth with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: split; only 1: destruct (CRisRing R); only 1: apply Radd_assoc; only 1: destruct (CRisRing R); only 1: apply Radd_assoc).	12.4076020718	7987
Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	0.4.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: destruct (CRisRing R); only 1: apply Radd_comm).	0.203403949738	25
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	0	synth with cache (only 1: apply (CRisRingExt R)).	0.0199539661407	1
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	4.4.0.1.1.3.7.2.3	synth with cache (only 1: intros; only 1: intro He; only 1: intros n (m, H); only 1: intro abs; only 1: apply (CRisRingExt R); only 1: destruct (CRltLinear R), p; only 1: split; only 1: assumption; only 1: assumption).	32.8572862148	15459
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	2.2.0.1.1.0.9.0.4	synth with cache (only 1: intros; only 1: CRelationClasses.reduce; only 1: apply (CRisRingExt R); only 1: assumption; only 1: destruct H, H0; only 1: destruct (CRltLinear R); only 1: split; only 1: assumption; only 1: assumption).	28.3723180294	8618
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros H0 H1; only 1: intros; only 1: destruct H; only 1: apply H0; only 1: split; only 1: intro abs; only 1: contradiction; only 1: intro abs; only 1: contradiction).	0.131358146667	9
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	0.0.2.0.0.0.0.2.0.0.3	synth with cache (only 1: split; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: apply CRplus_morph; only 1: reflexivity; only 1: reflexivity; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: apply CRplus_morph; only 1: reflexivity; only 1: reflexivity).	6.94977092743	2429
Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	3.1.1.0	synth with cache (only 1: intros; only 1: apply CReq_sym; only 1: apply CReq_sym; only 1: apply CRisRing).	0.305280923843	36
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40	6.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply CRisRing).	0.549973011017	43
Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	0.17	synth with cache (only 1: intros m Hm; only 1: apply CRisRing).	2.6525387764	1065
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	1.1.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: transitivity (r2 * r1 + r3 * r1); only 1: apply Rdistr_l; only 1: destruct (CRisRingExt R); only 1: apply CReq_refl).	1.03309297562	82
Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40	1.14.0.0	synth with cache (only 1: intros; only 1: rewrite <- (CRplus_opp_r x); only 1: apply CRplus_lt_compat_r; only 1: exact H).	7.25825810432	691
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	0.0816390514374	25
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40
Coq.Reals.Abstract.ConstructiveReals.CRfloor	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.0.0	synth with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1, CRle_refl).	0.0259199142456	3
Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	72.42	synth with cache (only 1: intuition; only 1: firstorder).	23.5597250462	55145
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.3.0	synth with cache (only 1: split; only 1: auto with real; only 1: auto with real).	0.0292501449585	6
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.4.2.1.0.0.0.14.0	synth with cache (only 1: intro; only 1: generalize (Rlt_irrefl 0); only 1: intro; only 1: generalize (Rlt_irrefl 0); only 1: case n; only 1: auto with real; only 1: intros; only 1: apply pow_nonzero; only 1: discrR).	12.0309650898	3275
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.4.0.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: cbn; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	1.91302704811	668
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Array.PArray.default_copy	40
Coq.Array.PArray.default_make	40
Coq.Array.PArray.get_set_same_default	40
Coq.Array.PArray.get_not_default_lt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	4.0	synth with cache (only 1: intros; only 1: intuition).	0.0239908695221	6
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0	synth with cache (only 1: eauto with ordered_type).	0.0105600357056	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.3.0	synth with cache (only 1: intros; only 1: unfold create; only 1: auto).	0.0187480449677	6
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.00917482376099	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	2.0.0.5.2	synth with cache (only 1: intros; only 1: induction m; only 1: auto; only 1: simpl; only 1: auto).	0.246011972427	162
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0285089015961	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40	0.1.15.4.1.1	synth with cache (only 1: intros m x; only 1: case m; only 1: intros m1 m2; only 1: fix even_spec 1; only 1: intros; only 1: auto).	11.313657999	13853
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	24.38	synth with cache (only 1: intros e1 e2 EQ; only 1: now apply N.lt_irrefl with 0%N).	0.974701881409	4355
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40	7.3.17	synth with cache (only 1: fix odd_spec 1; only 1: intros H l; only 1: intuition).	30.3339350224	26747
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	0.0.9.1.25	synth with cache (only 1: intros m1 m2; only 1: intros e' eqfind; only 1: apply L.find_2; only 1: inversion eqfind; only 1: split).	5.02819108963	9564
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	1.0.0.41	synth with cache (only 1: intros n m p; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	4.5809109211	8636
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	0.1.0.0.1.0.6.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: simpl; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	3.48823404312	2273
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.1.3.0	synth with cache (only 1: split; only 1: auto; only 1: intro n; only 1: intuition).	0.0305790901184	17
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	3.0	synth with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.024955034256	13
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	4.2.1.7.13	synth with cache (only 1: intros p q q'; only 1: induction 1; only 1: auto; only 1: now constructor; only 1: auto).	18.0506899357	19748
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.1.4.2.2.13	synth with cache (only 1: intro l; only 1: intros f' Hlc; only 1: intro Dec; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	3.4634449482	4474
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	1.3	synth with cache (only 1: intuition; only 1: intuition_in).	0.0578989982605	6
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	1	synth with cache (only 1: inversion 1).	0.0111169815063	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.2.4	synth with cache (only 1: intro p; only 1: intros sorted hyp; only 1: intuition_in).	0.0366859436035	23
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	3.0.0.1.7.14	synth with cache (only 1: intros; only 1: inversion 1; only 1: L.MX.order; only 1: apply H; only 1: auto; only 1: auto).	15.763520956	2527
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	1.0	synth with cache (only 1: intros; only 1: eauto with ordered_type).	0.0188329219818	3
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0136771202087	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0133240222931	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0121409893036	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.020959854126	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0218658447266	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0206348896027	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0	synth with cache (only 1: eauto with ordered_type).	0.0104320049286	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	6.21	synth with cache (only 1: intro Pdec; only 1: inversion 1).	0.911476135254	861
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	2.2.0.8.34	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: now try N.order'; only 1: discriminate).	34.6243150234	40159
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.0.0.2.0.0	synth with cache (only 1: intros m x; only 1: functional induction find x m; only 1: easy'; only 1: auto; only 1: auto; only 1: auto).	0.0734310150146	8
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	1.0.0.0.10.2.2.0	synth with cache (only 1: unfold gt_tree in *; only 1: intros m x; only 1: intros y0 z D H0 H1; only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	8.36066102982	4471
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.0	synth with cache (only 1: unfold create; only 1: intuition_in).	0.0497329235077	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.0.2.0.10	synth with cache (only 1: intros m x y e e'; only 1: intuition; only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	2.49982905388	1591
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40	17.4.65	synth with cache (only 1: repeat red; only 1: simpl; only 1: now intro l; induction l).	37.7182610035	27131
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	0.2.1.2.15	synth with cache (only 1: intros l x e r; only 1: simpl; only 1: intros sorted belong1; only 1: inversion_clear 1; only 1: constructor 1).	19.040323019	6018
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	5.14	synth with cache (only 1: fix even_spec 1; only 1: intuition_in).	6.95168185234	4780
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	1.0.0.0.3	synth with cache (only 1: induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0796151161194	24
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	8.1.0.2.0.0.2	synth with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: intuition_in).	3.73298406601	2080
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0565180778503	7
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	0.3.6.7	synth with cache (only 1: intros P; only 1: intro H; only 1: intuition; only 1: inversion H0).	1.31150102615	749
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40	8.0.16	synth with cache (only 1: fix odd_spec 1; only 1: intros H; only 1: eauto).	1.21794199944	1140
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40	3.18.0.14.0.10.0	synth with cache (only 1: intros m x; only 1: red; only 1: simpl; only 1: intros s1; only 1: induction m; only 1: intros a Ha; only 1: auto using find_1, add_1 with ordered_type).	38.2836580276	51805
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	1.9.4.0.0	synth with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: intros; only 1: CRelationClasses.simpl_crelation; only 1: eauto using add_2, add_3).	2.76831507683	2327
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.5.5.49	synth with cache (only 1: intros a b **; only 1: compute; only 1: rewrite <- elements_mapsto; only 1: intuition).	27.7574210167	40531
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	0.0.0.0.0.0.21.0.0.1	synth with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros [y H]; only 1: unfold Raw.elements; only 1: simpl in *; only 1: apply PX.Sort_NoDupA; only 1: apply elements_aux_sort; only 1: auto; only 1: auto; only 1: intros; only 1: inversion H0).	2.03545093536	3567
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40	5.17.0.0.5	synth with cache (only 1: intros f' Hlc; only 1: intros m; only 1: unfold Equivb, Equiv, Raw.Proofs.Equivb, In; only 1: fix odd_spec 1; only 1: auto).	6.75908899307	5046
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.29.0.5.0.24	synth with cache (only 1: intro l; only 1: destruct l as [| x l]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.9810628891	15280
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0152168273926	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.2.1.0.1	synth with cache (only 1: split; only 1: destruct m2; only 1: intros H'; only 1: intuition; only 1: now Z.swap_greater).	0.0334649085999	9
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	7	synth with cache (only 1: intuition).	0.0854051113129	59
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	19.2.3.10	synth with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: intuition).	33.9859819412	31928
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	3	synth with cache (only 1: intuition).	0.0347111225128	19
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	11	synth with cache (only 1: intuition).	0.265737056732	246
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.0117270946503	2
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.4	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0405418872833	25
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	6	synth with cache (only 1: intuition).	0.114305019379	72
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	0	synth with cache (only 1: intuition).	0.0189459323883	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	39	synth with cache (only 1: intuition).	3.80919003487	7077
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	10.5.4.0	synth with cache (only 1: split; only 1: intuition; only 1: intros; only 1: intuition).	2.02873802185	2017
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	5.8.55.3.16.96	synth with cache (only 1: split; only 1: intuition; only 1: auto; only 1: intro n; only 1: intros a b Ha; only 1: eauto).	38.3681809902	87532
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	13.4.0.8	synth with cache (only 1: intros x x'; only 1: unfold Empty; only 1: intros; only 1: firstorder).	2.46901202202	3463
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	17.1.8.0	synth with cache (only 1: unfold Equal; only 1: repeat red; only 1: intros; only 1: firstorder).	13.6536660194	11668
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3	synth with cache (only 1: congruence).	0.0190980434418	20
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.15	synth with cache (only 1: intros l1 l2 l1' l2' H H0; only 1: auto).	0.4496281147	455
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	29	synth with cache (only 1: firstorder).	2.39673089981	3733
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.1.22.17	synth with cache (only 1: intros; only 1: intro; only 1: do 2 rewrite union_iff; only 1: intuition).	16.1828980446	26239
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.0.2.28.13	synth with cache (only 1: intros a b H; only 1: red; only 1: intro y0; only 1: intros; only 1: eauto with set).	16.7528939247	28530
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	7.0.2.2.27	synth with cache (only 1: intros l2 l' H; only 1: intuition; only 1: intro a; only 1: do 2 rewrite diff_iff; only 1: firstorder).	13.4372391701	17648
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	2.3.0.26	synth with cache (only 1: intros a b q r ? ?; only 1: do 2 (rewrite filter_iff; auto); only 1: intros; only 1: intuition).	26.7557389736	24491
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.1.1.5	synth with cache (only 1: intro i; only 1: inversion 1; only 1: destruct H; only 1: now subst).	0.240108013153	169
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	14.7	synth with cache (only 1: intros P; only 1: firstorder).	0.526943922043	1334
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	0.2	synth with cache (only 1: intros n m; only 1: now BinInt.Z.swap_greater).	0.0294330120087	21
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	8.11.8.0.2.13	synth with cache (only 1: intros n; only 1: intro l; only 1: unfold eq, Equal; only 1: intros H; only 1: intros a b Ha; only 1: firstorder  (subst; auto)).	31.3664619923	44244
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	7.0	synth with cache (only 1: intros; only 1: trivial).	0.0254039764404	18
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0	synth with cache (only 1: trivial).	0.00712203979492	1
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.6.0	synth with cache (only 1: intros n; only 1: simpl; only 1: trivial).	0.0445959568024	32
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0.0.7.25	synth with cache (only 1: intros l1 l2; only 1: absurd (false = true); only 1: discriminate; only 1: tauto).	0.236276865005	776
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	10.0	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.357761859894	255
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	10.10	synth with cache (only 1: fix odd_spec 1; only 1: assumption).	0.239672899246	370
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	24	synth with cache (only 1: now f_equiv).	0.715546131134	1568
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	2.12	synth with cache (only 1: fix odd_spec 1; only 1: destr_bool).	1.38986086845	1220
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	3.4.7	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: easy).	6.71981906891	4959
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	1.8.0.5.4.11	synth with cache (only 1: intro H; only 1: intros; only 1: left; only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	7.01390695572	7785
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	4.1.1.1.11.10.11	synth with cache (only 1: intros a b c Hb Hc; only 1: intro H; only 1: subst; only 1: destruct c; only 1: trivial; only 1: reflexivity; only 1: reflexivity || destruct H).	35.4079470634	49911
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	11	synth with cache (only 1: destr_bool).	0.148770093918	129
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	1.0.1.0.1.6	synth with cache (only 1: intros; only 1: case u; only 1: intuition; only 1: easy'; only 1: intuition; only 1: now subst).	1.84393596649	1109
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	11.3.0.4	synth with cache (only 1: split; only 1: intuition; only 1: destr_bool; only 1: destr_bool).	1.07214808464	880
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40	2.5.0.0.0.0.0.0.1.0.1	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: intro m; only 1: destruct m; only 1: now split; only 1: case is_empty; only 1: now split; only 1: now split; only 1: simpl; only 1: fix odd_spec 1; only 1: intuition discriminate).	17.6843070984	7679
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0149991512299	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0158748626709	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0193870067596	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	6.0.0.0.0.0.0.6.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: intuition).	2.42217993736	3426
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.1.1	synth with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: clear IHl IHr; only 1: trivial).	0.0346691608429	21
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40	1.17.22	synth with cache (only 1: intros Hbeq; only 1: fix even_spec 1; only 1: trivial).	8.74404907227	13509
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.0148890018463	3
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.1.4.13	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	4.67995595932	2045
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	1.1.22	synth with cache (only 1: intros a b H; only 1: rewrite remove_spec; only 1: tauto).	1.33909201622	2279
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.1	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: left; only 1: assumption).	0.106098890305	69
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	7.1.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).	0.174360990524	104
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0168769359589	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.10	synth with cache (only 1: intros A A_wd A0 AS; only 1: rewrite inter_spec; only 1: tauto).	0.885047912598	730
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0172941684723	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	3.4.0.1	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: intros n m; only 1: tauto).	0.263200044632	163
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40	0.0.5	synth with cache (only 1: fix even_spec 1; only 1: intro l'; only 1: now subst).	0.0238139629364	17
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	0.6.5.13	synth with cache (only 1: intros Ha Eq; only 1: intro; only 1: fix even_spec 1; only 1: tauto).	23.5135648251	13126
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.3.0.0.0	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: intros m Hm; only 1: auto).	0.037880897522	13
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	2.1.0.8.0.0.1.5.13	synth with cache (only 1: intros x; only 1: destruct x; only 1: intro H; only 1: easy; only 1: unfold for_all; only 1: intro H; only 1: rewrite xforall_spec; only 1: simpl; only 1: tauto).	29.9548652172	33375
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	3.0.0.18.16	synth with cache (only 1: intros x; only 1: intro H; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: intuition congruence).	12.4069149494	25141
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0132961273193	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40	1.19.13.6	synth with cache (only 1: intros a H1; only 1: revert a; only 1: fix sqrtrem_spec 1; only 1: eauto).	16.478520155	26351
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0317151546478	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.63	synth with cache (only 1: fix even_spec 1; only 1: easy).	4.15137505531	16804
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0334770679474	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	2.0.0.0.2.7.2	synth with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto).	0.811537981033	604
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: intro H; only 1: destruct o; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	12.0092067719	4605
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	1.0.0.0.2.0	synth with cache (only 1: induction i; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.188948154449	45
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40	0.2.23	synth with cache (only 1: fix even_spec 1; only 1: intros x y H; only 1: intuition).	12.5573279858	5104
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40	1.36.2	synth with cache (only 1: intros ? v2; only 1: fix even_spec 1; only 1: trivial).	18.4238379002	30131
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	3.2	synth with cache (only 1: intros L H; only 1: congruence).	0.0143799781799	7
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	4	synth with cache (only 1: auto).	0.0291218757629	21
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	2	synth with cache (only 1: auto).	0.0238418579102	17
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	8.274518013	4407
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0506031513214	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.7.0.4.0.1	synth with cache (only 1: intros z n; only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	1.07548189163	1220
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	13.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.747128009796	542
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	1.0.0	synth with cache (only 1: intros s1; only 1: intros s2; only 1: intuition).	0.0434029102325	4
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	1.0.6.1	synth with cache (only 1: split; only 1: destruct 1; only 1: apply (empty_1 H); only 1: intuition).	0.601953029633	234
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.1	synth with cache (only 1: intros; only 1: intuition).	0.0670049190521	19
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.14.0.0.1.2.1	synth with cache (only 1: split; only 1: intros; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros H0; only 1: apply add_2; only 1: auto; only 1: auto).	9.82694005966	7656
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.4	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.221791028976	38
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.3.0.0.1.1.6.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_2; only 1: auto; only 1: auto).	6.15143084526	4443
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.0.3	synth with cache (only 1: intros A n p; only 1: intros; only 1: auto with map).	0.0549590587616	16
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	0.0.0.0.0.0.8.10.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_2; only 1: auto).	5.21205496788	3768
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	3.3.3.31	synth with cache (only 1: intuition; only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: auto with map).	13.3538050652	17941
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.194560050964	37
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.123443841934	11
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2.0	synth with cache (only 1: intros z Base Step; only 1: auto).	0.0685119628906	22
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.9.4	synth with cache (only 1: intros a b; only 1: intros m w le; only 1: auto with map).	0.606056928635	587
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	10.1	synth with cache (only 1: intros a b q ? ? ?; only 1: congruence).	0.506695985794	294
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	2.4	synth with cache (only 1: intros n; only 1: auto).	0.13894701004	32
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.1.1.3.0.0	synth with cache (only 1: unfold Equal; only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	0.729048967361	248
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40	1.0.10.0.1.2.0.1.0.8.1	synth with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff, of_list_1; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: intuition; only 1: unfold eq_key; only 1: apply elements_3w).	9.91578602791	9338
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	3.0.1.0.0.18	synth with cache (only 1: intros Hnd; only 1: intros; only 1: apply fold_rec; only 1: eauto; only 1: intros k e a m' m'' H ? ? ?; only 1: intuition).	6.06755614281	7213
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	7.0.6	synth with cache (only 1: intro m; only 1: rewrite cardinal_1, elements_Empty; only 1: apply length_zero_iff_nil).	1.07539701462	478
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.1.1.13	synth with cache (only 1: intros a; only 1: rewrite <- cardinal_Empty; only 1: intros; only 1: auto).	2.58239102364	2372
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	0.0.0.0.0.0.0.10.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: dintuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	4.71789693832	3123
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	13.3.6.2.1.8.0.4	synth with cache (only 1: intros n m; only 1: split; only 1: compute; only 1: intros l1 l1' l2 l2' H H'; only 1: eauto; only 1: compute; only 1: intro y0; only 1: firstorder).	24.2810549736	32324
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	18.9	synth with cache (only 1: intros x y H; only 1: firstorder).	3.60797119141	4089
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	17.5	synth with cache (only 1: intros Az RS; only 1: firstorder  (subst; auto)).	14.5834729671	6626
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40	0.0.0.1.11.0	synth with cache (only 1: intros m m' k e; only 1: rewrite mem_in_iff; only 1: apply filter_iff; only 1: intros ? ? Hk _ _ _; only 1: rewrite Hk; only 1: auto).	0.890045166016	567
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.5	synth with cache (only 1: intros n m p; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.721096038818	375
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	2.25	synth with cache (only 1: intro n; only 1: inversion 1).	0.0819020271301	393
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.7	synth with cache (only 1: unfold Empty, empty; only 1: intuition).	0.00954079627991	9
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	2.17	synth with cache (only 1: fix odd_spec 1; only 1: auto).	3.64668703079	1089
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	0.18.21	synth with cache (only 1: intros l2; only 1: fix odd_spec 1; only 1: easy).	22.2393500805	10274
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	0.0.6	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto using eqke_equiv).	0.158442020416	62
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	0.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	4.99812817574	1585
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.2.2.0.1.0.0.0.1.0	synth with cache (only 1: intros m Hm x y; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: intro H2; only 1: inversion_clear 1; only 1: auto; only 1: auto).	7.01169109344	2520
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	1.0.0.0.0	synth with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: auto).	0.0247700214386	6
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.00697422027588	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intuition).	0.0173208713531	4
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40	1.31	synth with cache (only 1: fix even_spec 1; only 1: intuition).	25.8727478981	25712
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	16.9379010201	6543
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	25	synth with cache (only 1: inversion_clear 1).	0.0590898990631	306
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40	2.38.2.0	synth with cache (only 1: intros m; only 1: case m; only 1: fix odd_spec 1; only 1: auto).	31.7524158955	31300
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40	0.17.9	synth with cache (only 1: intros H; only 1: fix even_spec 1; only 1: easy).	2.84347105026	3664
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	6.0	synth with cache (only 1: intros m; only 1: auto).	0.0112609863281	8
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0114178657532	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	1.20	synth with cache (only 1: intros (e, abs); only 1: auto).	0.157680988312	455
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	6.0	synth with cache (only 1: intros m; only 1: reflexivity).	0.0115039348602	8
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.2.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: auto with fset; only 1: intros; only 1: auto with fset).	0.0391738414764	9
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	4.2.0.0	synth with cache (only 1: intros until s; only 1: intros; only 1: generalize (union_inter_cardinal s s'); only 1: solve_proper).	0.200032949448	26
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.7.0.4.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intros; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	4.09279108047	4196
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	6.15.0.2.4.13.14.11	synth with cache (only 1: intros l; only 1: split; only 1: intuition; only 1: intro H2; only 1: revert l; only 1: unfold Same_set, Included, mkEns, In; only 1: intros z Hin; only 1: intuition).	26.7205500603	34552
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.0.0.0.2.0.1.5.0.0.0.1	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	12.6774091721	7001
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.15632891655	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	4.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).	0.587218999863	118
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0108020305634	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	4.1.1	synth with cache (only 1: apply mem_1; only 1: apply add_1; only 1: auto).	0.0224270820618	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.0779418945312	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0134179592133	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.0773179531097	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	4	synth with cache (only 1: intuition).	0.0243940353394	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.0.10	synth with cache (only 1: intro H; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	2.46901798248	644
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.7.2	synth with cache (only 1: rewrite mem_iff; only 1: intuition; only 1: congruence).	0.464648008347	208
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	0	synth with cache (only 1: auto with set).	0.00998210906982	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	5.1.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0308618545532	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0161800384521	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.00893807411194	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	4.0	synth with cache (only 1: intros; only 1: auto with set).	0.0222280025482	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	2.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0200178623199	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	1.1	synth with cache (only 1: intros; only 1: auto with set).	0.015839099884	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.00954604148865	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	2.8	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.440279006958	128
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	2.0.0.6	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.640038013458	165
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0	synth with cache (only 1: auto with set).	0.00939202308655	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0385420322418	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.00969314575195	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.012727022171	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0101771354675	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0100708007812	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0105159282684	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0527188777924	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.00858187675476	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.00904703140259	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.00978708267212	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0539071559906	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.00998210906982	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.010537147522	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0101320743561	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0111749172211	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.00995206832886	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.00887989997864	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.00917291641235	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.164717197418	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.373566150665	77
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.00923109054565	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.00962090492249	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0289070606232	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0092670917511	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0106830596924	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.00877499580383	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0108041763306	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.00881505012512	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0148501396179	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	2.0.0.0.1.8	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	3.46632504463	1475
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	2.2.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.04113292694	994
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.00953197479248	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0391569137573	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0393309593201	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	6.6.0.1.16	synth with cache (only 1: intro l; only 1: intro m; only 1: rewrite <- not_mem_iff; only 1: intros; only 1: intuition).	11.702340126	9797
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	13.9	synth with cache (only 1: intro l; only 1: intuition).	1.11380410194	1282
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0	synth with cache (only 1: solve_proper).	0.0369579792023	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	2.3.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: red; only 1: intuition).	0.226242780685	66
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0122029781342	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold Add, MP.Add; only 1: red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	5.37998986244	1284
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	0.0.5.2.0.0.1.0	synth with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: do 2 (rewrite filter_iff; auto); only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: tauto; only 1: auto).	4.64726614952	1664
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	1.0.4.6	synth with cache (only 1: intro n; only 1: intros m H; only 1: f_equal; only 1: intuition).	0.242094039917	153
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40	101.78	synth with cache (only 1: eexists; only 1: eauto with *).	5.32674217224	45428
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.3.0.1	synth with cache (only 1: intros l; only 1: intros; only 1: simpl; only 1: eauto with set).	0.207012891769	148
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.23.0.14	synth with cache (only 1: intro m; only 1: intro s; only 1: fix odd_spec 1; only 1: intuition).	13.2923090458	23576
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.1.0.1.1.0.0.2.6	synth with cache (only 1: intros ? ?; only 1: unfold subset; only 1: case (M.equal s s'); only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	3.43910598755	3678
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	1.1.1.0.1.11.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: case (M.choose s); only 1: intros A l; only 1: destruct l; only 1: intros; only 1: discriminate H; only 1: auto; only 1: auto).	4.50856208801	5930
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.1	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0427329540253	17
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	4.0	synth with cache (only 1: intro H; only 1: auto with ordered_type).	0.0165278911591	14
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.3.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.729382991791	230
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	2.79290795326	858
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.391751050949	129
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0227620601654	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.0.0.3.1.5.1	synth with cache (only 1: intros s x y; only 1: case (M.add x s); only 1: case (M.add x s); only 1: case (M.is_empty s); only 1: unfold add; only 1: case (M.add x s); only 1: firstorder; only 1: unfold add; only 1: case (M.add x s); only 1: firstorder).	14.3761970997	6663
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0.0.1.0	synth with cache (only 1: intros s x y; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0348999500275	8
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0178880691528	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.1.2.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: firstorder; only 1: case (M.union s s'); only 1: firstorder).	0.401452064514	67
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0196669101715	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0194818973541	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0.3.1.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: firstorder; only 1: case (M.elements s); only 1: intros; only 1: case (M.elements s); only 1: firstorder; only 1: case (M.inter s s'); only 1: firstorder).	5.14285206795	1246
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0202040672302	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.1.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0798308849335	20
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0108869075775	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	4.33.0.4	synth with cache (only 1: intros; only 1: intros x l; only 1: destruct 2; only 1: intuition).	31.6466608047	29357
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.0793640613556	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.115709066391	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	7	synth with cache (only 1: solve_proper).	0.194407939911	66
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.7	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.228913068771	63
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	1	synth with cache (only 1: intuition).	0.0138781070709	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	3	synth with cache (only 1: fsetdec).	0.113476037979	4
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	21.5.0.5	synth with cache (only 1: intros n0 H2 H3; only 1: split; only 1: fsetdec; only 1: fsetdec).	7.40926504135	6698
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0119769573212	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0247559547424	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0.13	synth with cache (only 1: intro H'; only 1: fsetdec).	0.0645160675049	75
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0214848518372	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0166268348694	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0.0	synth with cache (only 1: intros; only 1: fsetdec).	0.048877954483	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.3.1	synth with cache (only 1: revert s2; only 1: intros; only 1: fsetdec).	0.0330898761749	7
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0408198833466	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0225141048431	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0200250148773	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.2.1	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.127758026123	14
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0313501358032	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0237100124359	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	2	synth with cache (only 1: intuition fsetdec).	0.0393319129944	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.0764589309692	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.0713770389557	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	1.0.0.1.0.0.0	synth with cache (only 1: split; only 1: do 2 rewrite F.remove_iff; only 1: rewrite H; only 1: intuition; only 1: do 2 rewrite F.remove_iff; only 1: rewrite H; only 1: intuition).	0.0592379570007	9
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.0631189346313	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.0909140110016	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0400359630585	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.133939981461	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0741860866547	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0398180484772	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0557949542999	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0520360469818	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.0885479450226	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0435359477997	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.0841209888458	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.153350114822	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.130509138107	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0178480148315	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0187029838562	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.037024974823	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0309929847717	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0296010971069	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0366768836975	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0554399490356	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	2.2.0.0.0.0	synth with cache (only 1: generalize (F.mem_iff (union s s') x), (F.mem_iff s x), (F.mem_iff s' x), (F.union_iff s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition).	0.6127409935	60
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0395970344543	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0386261940002	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0486099720001	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0483138561249	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.0816059112549	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0958170890808	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.105234146118	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.0827820301056	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.0772728919983	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0286731719971	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0239329338074	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0178940296173	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0169939994812	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0335869789124	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.030956029892	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.038213968277	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0200369358063	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0764520168304	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0476400852203	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.0800380706787	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.0855989456177	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	4.7.6.2	synth with cache (only 1: generalize (F.mem_iff s x); only 1: split; only 1: fsetdec; only 1: fsetdec).	12.7023439407	5568
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.0.3	synth with cache (only 1: intro; only 1: expAdd; only 1: fsetdec).	0.0822179317474	6
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.130565166473	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.201989889145	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.167318105698	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.158052921295	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.0.3.6.0.0.1.16	synth with cache (only 1: intros a b q r Hr EQ; only 1: intuition; only 1: apply fold_rec; only 1: intro x; only 1: trivial; only 1: intros s Hsame; only 1: intros; only 1: intuition).	10.8318338394	12416
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	2.1.0.0.0.4.2	synth with cache (only 1: intros op Hop; only 1: intros x y Hxy Hyz Hy; only 1: apply fold_rec_bis; only 1: intros; only 1: eauto; only 1: intuition; only 1: fsetdec).	3.05690717697	885
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.6.1	synth with cache (only 1: intros i s; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.01763987541	708
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0161440372467	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0	synth with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0106410980225	2
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	3.0.10.5	synth with cache (only 1: intro n; only 1: intros Hab; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.813992977142	806
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	0.0.0.2.3	synth with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0740640163422	39
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.1.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: expAdd; only 1: fsetdec).	0.149062156677	46
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	1	synth with cache (only 1: auto with set fset).	0.0350639820099	23
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0153300762177	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0150189399719	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.267663955688	2
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.417774915695	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.1	synth with cache (only 1: split; only 1: split; only 1: intuition).	0.013041973114	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	3.2.5.24.0	synth with cache (only 1: intros b s2' Rec n m s1; only 1: revert m; only 1: intros H2 H3; only 1: intros; only 1: fsetdec).	12.6496908665	13951
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	1.1	synth with cache (only 1: intro n; only 1: intuition).	0.0135629177094	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	3.17.0	synth with cache (only 1: intros l1; only 1: intro H; only 1: fsetdec).	2.77802109718	3312
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	16.11.7	synth with cache (only 1: intro m; only 1: intros; only 1: fsetdec).	9.27973198891	18181
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0.32.15	synth with cache (only 1: intros s1; only 1: intros H; only 1: fsetdec).	20.1624009609	25918
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	7.2.4	synth with cache (only 1: intro r; only 1: intros ? ? IH p1 p2; only 1: fsetdec).	1.87094902992	475
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.0708599090576	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	2.17	synth with cache (only 1: intro n; only 1: fsetdec).	3.50473880768	2167
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0.0	synth with cache (only 1: red; only 1: fsetdec).	0.093612909317	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.144926071167	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	1.0.2	synth with cache (only 1: unfold Subset; only 1: intros a b c Hc Ha Hb; only 1: intuition).	0.0573179721832	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0.8.1	synth with cache (only 1: intros s; only 1: intros l2; only 1: fsetdec).	0.0730571746826	50
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0.7	synth with cache (only 1: intros l1; only 1: fsetdec).	0.0554370880127	16
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0337650775909	1
Coq.FSets.FMapList.Raw.Elt.empty_1	40	4.15	synth with cache (only 1: repeat red; only 1: inversion 1).	0.810137987137	203
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	3	synth with cache (only 1: constructor).	0.0178699493408	4
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	1.0	synth with cache (only 1: intros m; only 1: auto with ordered_type).	0.0306630134583	3
Coq.FSets.FMapList.Raw.Elt.elements_2	40	6.0	synth with cache (only 1: intros m x; only 1: auto).	0.0324900150299	8
Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.0.1.0.0.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: inversion_clear 1; only 1: destruct a as (x', e'); only 1: constructor; only 1: auto; only 1: auto).	0.0880379676819	9
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	1.3.0.0.2.14	synth with cache (only 1: intros l d; only 1: induction l as [| x xs Hl]; only 1: intuition; only 1: intro n; only 1: simpl; only 1: intuition).	25.0538759232	9846
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.0.1.2.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intuition; only 1: simpl; only 1: inversion_clear H; only 1: intuition).	0.441220998764	49
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	8.0.0.0.0.0.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear Hm; only 1: eauto with ordered_type).	11.0637111664	2748
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.0.0.1.0.1.1.1	synth with cache (only 1: induction m; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.34904909134	246
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	2.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.130033016205	13
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	0.21	synth with cache (only 1: intros H; only 1: inversion_clear 1).	0.451015949249	517
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0.0	synth with cache (only 1: intros m; only 1: intuition).	0.0288660526276	2
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0280389785767	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	4.5	synth with cache (only 1: intros [y H]; only 1: auto).	0.0889761447906	62
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	5.0	synth with cache (only 1: intros m; only 1: constructor 1).	0.0297341346741	7
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40	1.32	synth with cache (only 1: fix odd_spec 1; only 1: auto).	21.7645020485	7539
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	1.5	synth with cache (only 1: fix odd_spec 1; only 1: assumption).	0.272794008255	90
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	2.17.22.11.0	synth with cache (only 1: intro x; only 1: intro z; only 1: apply Acc_rect; only 1: split; only 1: auto).	15.4123189449	57363
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.7	synth with cache (only 1: split; only 1: auto with sets).	0.0257201194763	12
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.1.2.2.8	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.448333978653	650
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfSimple_Lexicographic_Product.wf_slexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.15	synth with cache (only 1: left; only 1: assumption).	0.228655815125	233
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.3.16	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.85894203186	1362
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.1.1	synth with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.0170331001282	5
Coq.Numbers.DecimalR.of_IQmake_to_decimal	40
Coq.Numbers.DecimalR.of_to	40
Coq.Numbers.DecimalR.to_of	40
Coq.Numbers.DecimalR.to_decimal_inj	40
Coq.Numbers.DecimalR.to_decimal_surj	40
Coq.Numbers.DecimalR.of_decimal_dnorm	40
Coq.Numbers.DecimalR.of_inj	40
Coq.Numbers.DecimalR.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !to_of, H; only 1: intros E; only 1: rewrite <- DecimalQ.of_decimal_dnorm, E; only 1: apply DecimalQ.of_decimal_dnorm).	0.167165994644	14
Coq.Numbers.DecimalFacts.of_list_to_list	40
Coq.Numbers.DecimalFacts.to_list_of_list	40
Coq.Numbers.DecimalFacts.to_list_inj	40
Coq.Numbers.DecimalFacts.of_list_inj	40
Coq.Numbers.DecimalFacts.nb_digits_spec	40
Coq.Numbers.DecimalFacts.nzhead_spec	40
Coq.Numbers.DecimalFacts.unorm_spec	40
Coq.Numbers.DecimalFacts.revapp_spec	40
Coq.Numbers.DecimalFacts.rev_spec	40
Coq.Numbers.DecimalFacts.app_spec	40
Coq.Numbers.DecimalFacts.nztail_spec	40
Coq.Numbers.DecimalFacts.del_head_spec_0	40	10	synth with cache (only 1: auto with arith).	0.0395970344543	28
Coq.Numbers.DecimalFacts.del_head_spec_small	40
Coq.Numbers.DecimalFacts.del_head_spec_large	40
Coq.Numbers.DecimalFacts.nb_digits_0	40
Coq.Numbers.DecimalFacts.nb_digits_n0	40	0.28.3.6.1.0	synth with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d); only 1: intros H; only 1: pose proof H as H'; only 1: intro H1; only 1: rewrite H1 in H; only 1: Nat.auto').	6.18609786034	8044
Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	0.0.0.3.0.2.1.3	synth with cache (only 1: nzinduct n; only 1: trivial; only 1: intro n; only 1: Nat.nzsimpl; only 1: split; only 1: simpl; only 1: auto; only 1: now injection 1).	4.93862605095	967
Coq.Numbers.DecimalFacts.length_lnzhead	40
Coq.Numbers.DecimalFacts.nb_digits_nzhead	40
Coq.Numbers.DecimalFacts.unorm_nzhead	40
Coq.Numbers.DecimalFacts.nb_digits_unorm	40
Coq.Numbers.DecimalFacts.nb_digits_rev	40
Coq.Numbers.DecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.DecimalFacts.unorm_D0	40	10	synth with cache (only 1: reflexivity).	0.0404579639435	40
Coq.Numbers.DecimalFacts.app_nil_l	40	0	synth with cache (only 1: now simpl).	0.0211288928986	1
Coq.Numbers.DecimalFacts.app_nil_r	40
Coq.Numbers.DecimalFacts.abs_app_int	40
Coq.Numbers.DecimalFacts.abs_norm	40
Coq.Numbers.DecimalFacts.iter_D0_nzhead	40
Coq.Numbers.DecimalFacts.iter_D0_unorm	40
Coq.Numbers.DecimalFacts.nzhead_app_l	40
Coq.Numbers.DecimalFacts.nzhead_app_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.DecimalFacts.unorm_app_zero	40
Coq.Numbers.DecimalFacts.app_int_nil_r	40
Coq.Numbers.DecimalFacts.unorm_app_l	40
Coq.Numbers.DecimalFacts.unorm_app_r	40
Coq.Numbers.DecimalFacts.norm_app_int	40
Coq.Numbers.DecimalFacts.del_head_nb_digits	40
Coq.Numbers.DecimalFacts.del_tail_nb_digits	40
Coq.Numbers.DecimalFacts.del_head_app	40
Coq.Numbers.DecimalFacts.del_tail_app	40
Coq.Numbers.DecimalFacts.del_tail_app_int	40
Coq.Numbers.DecimalFacts.app_del_tail_head	40
Coq.Numbers.DecimalFacts.app_int_del_tail_head	40
Coq.Numbers.DecimalFacts.del_head_app_int_exact	40
Coq.Numbers.DecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.nzhead_D0	40	4	synth with cache (only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.0230000019073	5
Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0	synth with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).	0.0212121009827	1
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0	synth with cache (only 1: now induction n).	0.0206768512726	1
Coq.Numbers.DecimalFacts.del_head_nonnil	40
Coq.Numbers.DecimalFacts.del_tail_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_involutive	40
Coq.Numbers.DecimalFacts.nztail_involutive	40
Coq.Numbers.DecimalFacts.unorm_involutive	40	0	synth with cache (only 1: now induction d).	0.0260801315308	1
Coq.Numbers.DecimalFacts.norm_involutive	40
Coq.Numbers.DecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.DecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.DecimalFacts.unorm_app_unorm	40
Coq.Numbers.DecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalFacts.unorm_app_l_nil	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0	synth with cache (only 1: now destruct n).	0.0119907855988	1
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	2.4.0.8.11	synth with cache (only 1: simpl; only 1: case (uint_eq_dec d Nil); only 1: intros; only 1: easy; only 1: now case d; [ idtac | intros u _.. ]).	6.5257871151	5505
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: simpl; only 1: trivial; only 1: simpl; only 1: split; only 1: reflexivity || ring; only 1: split; only 1: simpl; only 1: trivial; only 1: easy; only 1: reflexivity || ring; only 1: split; only 1: simpl; only 1: reflexivity || ring; only 1: easy).	11.0870070457	3280
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: firstorder).	0.0185298919678	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	7.0	synth with cache (only 1: simpl; only 1: trivial).	0.0117180347443	9
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0221300125122	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	6.1	synth with cache (only 1: simpl in *; only 1: reflexivity).	0.0797741413116	27
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40	0.4.3.0.7	synth with cache (only 1: Nat.cases ltac:(n); only 1: easy; only 1: simpl; only 1: fix odd_spec 1; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	1.00277018547	450
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	4	synth with cache (only 1: now induction d).	0.089949131012	22
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0145540237427	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	6	synth with cache (only 1: apply Unsigned.of_inj).	0.498133897781	152
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	1	synth with cache (only 1: now simpl).	0.0096800327301	2
Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40	6	synth with cache (only 1: now induction d).	0.0410621166229	22
Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNat.Signed.of_to	40
Coq.Numbers.HexadecimalNat.Signed.to_of	40
Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	3.1.1.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: symmetry; only 1: split).	0.18492603302	13
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	4.4.1.0.5.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: intro n; only 1: intros a m; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.70002794266	1778
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.0.14.0	synth with cache (only 1: unfold Reflexive, Z.eq; only 1: induction n; only 1: simpl; only 1: now rewrite add_succ_r, add_succ_l).	2.27839708328	1012
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.199260950089	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	2.7.338	synth with cache (only 1: compute; only 1: nzsimpl; only 1: now nzsimpl).	10.969835043	61438
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0997149944305	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	1.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now apply add_cancel_l).	0.0285840034485	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	2.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: now nzsimpl).	0.166942119598	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.5.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: intros n; only 1: now nzsimpl).	0.26841711998	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	1.0.0.3.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intros n IH; only 1: unfold snd; only 1: simpl in *; only 1: nzsimpl; only 1: now f_equiv).	0.377978801727	10
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.172181129456	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.3.0.0	synth with cache (only 1: intro n; only 1: unfold Transitive, Z.eq; only 1: intros; only 1: simpl in *; only 1: now nzsimpl).	0.342899084091	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.5.0	synth with cache (only 1: unfold Reflexive, Z.eq; only 1: intros; only 1: simpl; only 1: now nzsimpl).	0.1876308918	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	1.6.3	synth with cache (only 1: intro H; only 1: apply PeanoNat.Nat.le_ngt; only 1: now nzsimpl).	0.261004209518	217
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	2.0.7.12	synth with cache (only 1: intro; only 1: fix sqrtrem_spec 1; only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: assumption).	12.0072059631	8955
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	10.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	2.31556606293	308
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0252768993378	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0974237918854	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0185041427612	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0183579921722	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.5.18	synth with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	34.8526639938	14498
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.70	synth with cache (only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	20.5078809261	24084
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.5.2.13	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	36.1114070415	12875
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.2.1.14	synth with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	12.2374219894	4546
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.9.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	2.5047018528	750
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.3.1.4.0.0	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	16.7085869312	7800
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.12.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.682657957077	320
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.0.0	synth with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.278502225876	53
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	0.0.0.0.0.4.0.6	synth with cache (only 1: intro a; only 1: rewrite <- (mul_0_r a); only 1: rewrite nlt_ge; only 1: destruct (le_gt_cases a 0); only 1: now apply mul_le_mono_nonpos_l; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: order).	1.32892608643	1840
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	8.44322299957	2851
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	3.72072696686	1222
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0289549827576	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.0.2.0.0.0.0.22	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: order_pos; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order_pos; only 1: order').	2.84658813477	2437
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.4	synth with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.0813481807709	21
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.7.6	synth with cache (only 1: intros x; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: f_equiv).	6.62988495827	3822
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	5.10.9	synth with cache (only 1: simpl_relation; only 1: rewrite H; only 1: trivial).	7.70705509186	3074
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.0.0.2.13.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	22.8593549728	8322
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.215171098709	46
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.14618897438	35
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.169283151627	35
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0334692001343	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	4.2.5	synth with cache (only 1: intros x; only 1: bitwise; only 1: split).	1.14699697495	547
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0354239940643	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	3.22.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	4.44323611259	4839
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	12.6.0.1	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	10.5679190159	4979
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0628681182861	19
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0384728908539	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.16.0	synth with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	7.46773386002	2692
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.17	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	6.26979613304	2220
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	0.1.0.13.18.0	synth with cache (only 1: intros x x' Hx; only 1: rewrite <- succ_inj_wd; only 1: generalize (CRelationClasses.partial_order_equivalence x x'); only 1: compute; only 1: rewrite Hx in *; only 1: intuition).	34.4047019482	21820
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40	0.0.20.11.0.8	synth with cache (only 1: intros m; only 1: bitwise; only 1: apply andb_false_iff; only 1: right; only 1: apply negb_false_iff; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	39.1869790554	38117
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.3.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0577480792999	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.3.0.1.0	synth with cache (only 1: intros a; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0676319599152	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	1.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0417878627777	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.3.0	synth with cache (only 1: intro n; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0607731342316	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.2.1.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	0.276152133942	157
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	0.0.0.0.0.0.0.0.12.0	synth with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).	11.6404190063	7755
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0648250579834	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.4.2.0.1.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	32.140545845	19573
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.0.0.0.6.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	2.05298304558	1043
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.1.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	4.08921909332	1885
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.107315778732	23
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	1.0.1.7.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	1.60923099518	720
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.8.0.3	synth with cache (only 1: intros a; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1).	1.30131483078	965
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0194270610809	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl'; only 1: apply divide_refl; only 1: trivial).	0.0349788665771	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0262041091919	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0245349407196	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.10.1.0.5.2	synth with cache (only 1: intros a b **; only 1: apply lcm_unique; only 1: intuition; only 1: trivial; only 1: f_equiv; only 1: trivial using divide_refl).	33.5785861015	18176
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0259728431702	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	2.79300808907	1593
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	3.0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.964653015137	432
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.1.0.1.5.0.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: apply divide_refl; only 1: reflexivity; only 1: trivial using divide_refl).	8.12277793884	3944
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.8.0.0	synth with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	1.15272402763	261
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: order).	0.0893688201904	19
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	1.27669906616	433
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	10.0166289806	3574
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.84421110153	931
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.5.1.0.1.6.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	9.98263502121	5417
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.9.1.0.0.8.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	14.9159808159	8744
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	10.8649418354	4748
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.0.0.4.1.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	11.8397638798	4729
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.2.0.0.1.1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	19.8885369301	8891
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40	0.5.6.0.5.5.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: apply max_l; only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: apply max_r; only 1: now apply mul_le_mono_nonpos_l).	34.6494100094	15739
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	10.823579073	3785
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	8.89993715286	2819
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.0.16.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	1.38338112831	1147
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.2	synth with cache (only 1: intro H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.120792150497	14
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	7.12.22	synth with cache (only 1: intro a; only 1: apply le_succ_l; only 1: now rewrite succ_pred).	3.30811595917	6549
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.5.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.115882873535	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	0.1.9.3.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	7.18538188934	4628
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	1.5.6	synth with cache (only 1: intro RS'; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	0.738989830017	858
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	4.11.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	11.1376059055	5328
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.2.3	synth with cache (only 1: intros z n H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: assumption).	0.246362924576	134
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.0.0.5.4	synth with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	1.14724206924	1002
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: symmetry; only 1: symmetry; only 1: apply le_succ_l).	0.0327868461609	12
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0560121536255	15
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.3.2.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.367170810699	141
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.3.7.2	synth with cache (only 1: intros n1 n2; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	3.03895401955	1572
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.2.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.0183689594269	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0305659770966	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0288300514221	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	2.18.0.0.10	synth with cache (only 1: intros m H; only 1: rewrite abs_neq; only 1: auto with relations; only 1: rewrite <- (opp_nonneg_nonpos m); only 1: auto).	17.1878349781	23088
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	5.7.0	synth with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.166148900986	171
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	0.2.6.18.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).	9.03776693344	5699
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	0.20.8.0.1.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: apply eq_opp_r; only 1: reflexivity).	5.2885529995	8374
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.0.0.0.8.0.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	1.00351595879	1064
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0242629051208	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto with relations; only 1: auto with relations).	0.0162918567657	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.0888040065765	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: order; only 1: trivial).	0.175342082977	45
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.4.0.0.5	synth with cache (only 1: intros a b n ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	3.17862391472	2496
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0312149524689	5
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	16.0.3.3	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	29.4049561024	11241
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.2.0.0.0.1.0.2.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	3.57022690773	1735
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0197448730469	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.4.1.0.2.1.0.0.2.0	synth with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	6.22924590111	4308
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0206229686737	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.0.3.5.0.1.0.4.0	synth with cache (only 1: intros a b **; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: auto; only 1: right; only 1: apply mod_neg_bound; only 1: order).	23.0082728863	16064
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a b ?; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.114513874054	29
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.125863075256	32
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: auto using eq_refl, le_refl; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.272855997086	144
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0196220874786	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0186021327972	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.1.0.1.0.0.2.3.0	synth with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	16.210174799	7353
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	6.0.2.0.0.0.2.1.4	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: now nzsimpl).	8.84497594833	4954
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.0.0	synth with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: order; only 1: trivial).	0.0208230018616	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	2.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.404721975327	71
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.256285905838	83
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.3	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: trivial).	0.191780805588	64
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0417680740356	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0254418849945	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.1	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: order).	0.0364091396332	16
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.1.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.0246469974518	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.0.0.0.0	synth with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0292809009552	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	16.463039875	6562
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.5.1.0.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	5.51938295364	2602
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	synth with cache (only 1: intros a b c **; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0424149036407	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.0.25.0	synth with cache (only 1: intros a b c **; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	18.9417629242	14169
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.2.4.0	synth with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.64130306244	400
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	4.0.1.0	synth with cache (only 1: intros a b c **; only 1: pose proof (add_mul_mod_distr_l a b c 0) as E; only 1: rewrite ?add_0_r in E; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).	0.142084121704	26
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.416458845139	93
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.0.0.2	synth with cache (only 1: intros a b c **; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.51278090477	105
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.0.1.2	synth with cache (only 1: intros a b c **; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.587649106979	147
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.46583390236	602
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.0.1.0.0.0.1	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.107370853424	17
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mul_mod_distr_l	40	0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros a b c d ? ? [? ?]; only 1: assert (0 <= a * c) by (apply mul_nonneg_nonneg; order); only 1: assert (0 <= a * c + d) by (apply add_nonneg_nonneg; order); only 1: rewrite (mul_comm c a), mod_mul_r, Private_NZDiv.add_mod, Private_NZDiv.mod_mul, Private_NZDiv.div_add_l; only 1: now rewrite ?add_0_l, Private_NZDiv.div_small, add_0_r, ?(Private_NZDiv.mod_small d c), (add_comm d); only 1: order; only 1: order; only 1: order; only 1: order; only 1: order; only 1: order).	2.25677704811	461
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mul_mod_distr_r	40	0.0	synth with cache (only 1: intros a b c d ? ? ?; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.add_mul_mod_distr_l).	0.0222640037537	2
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0462050437927	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	1.9.8	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	33.9585540295	8526
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0253481864929	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.2.0.0.0.2.15.1.2	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: split; only 1: nzsimpl; only 1: intro m; only 1: rewrite sub_succ_l; only 1: now nzsimpl'; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	39.6221289635	12312
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.3.2	synth with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.23281407356	244
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.1.7	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.6956939697	2679
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	7.0.0.0.0.4	synth with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: now f_equiv).	2.79554820061	1000
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1	synth with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.102216959	48
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0305118560791	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.1.2.1	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.0523920059204	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.1.6	synth with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.359683990479	88
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0	synth with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0203680992126	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	1.1.0	synth with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).	0.0308511257172	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	2.23	synth with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	0.771408081055	501
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.2	synth with cache (only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.107429981232	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.4.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.647207975388	166
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.4	synth with cache (only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.448312997818	89
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	0.0.5.14	synth with cache (only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	31.5054960251	8139
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	5.0.0.3	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.584257125854	149
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0	synth with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0186700820923	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.0.3.0.0.1.1.1.4.2	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: rewrite opp_succ, opp_pred; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.69853186607	2046
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	1.12	synth with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.970470905304	305
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	0.1.5.4.6.4	synth with cache (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_move_l; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	14.8954348564	5034
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.12	synth with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.602421045303	175
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	17.0.7.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a b)  at 1 by order; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	39.7847309113	19455
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.181787014008	41
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	synth with cache (only 1: intros a b ?; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.514446973801	110
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: auto using mod_small).	0.282766103745	71
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.184905052185	31
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	1.38712120056	455
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0342140197754	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0326991081238	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	2.0.0.3.11.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: rewrite abs_pos; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).	25.6252429485	12699
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.561145782471	111
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.0.0.1.5	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	4.67886090279	1525
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	2.0.3.0	synth with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.828525781631	73
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.2.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.661134958267	107
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	7.0.1.4.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	5.16389703751	1342
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0360698699951	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.4.0.0.0.0.3	synth with cache (only 1: intros a b ? ?; only 1: intros Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	2.20244503021	567
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	0.401183843613	86
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.12230682373	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	26.234295845	6484
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.1.0.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.410463094711	102
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.0.0.0.0.0.0.1.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	20.7662470341	4115
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	2.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: apply add_cancel_l; only 1: now rewrite !(mul_comm _ c), Private_NZDiv.mul_mod_distr_l).	0.109451055527	15
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	1.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	1.06889796257	150
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.0.2.2	synth with cache (only 1: intros a b c; only 1: symmetry; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.683393001556	96
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	2.1.3.6.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite <- add_assoc, add_comm, mul_comm; only 1: rewrite mod_add by trivial; only 1: reflexivity).	27.4703419209	8489
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	2.3.2	synth with cache (only 1: intros a b c; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l).	1.43698596954	234
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	1.1.5.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	2.14601206779	520
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.202178001404	18
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0673069953918	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1	synth with cache (only 1: BinInt.Z.order).	0.0144610404968	11
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	2	synth with cache (only 1: firstorder).	0.0272619724274	3
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	2.6.9	synth with cache (only 1: destruct x; only 1: fix odd_spec 1; only 1: auto).	19.2880880833	1924
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.0.0.0.3.0.0.2.12	synth with cache (only 1: intros x; only 1: unfold eqb31; only 1: unfold compare31; only 1: intros; only 1: revert H; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	6.79648709297	4949
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	15.4.3	synth with cache (only 1: intro p; only 1: intro q; only 1: ring).	25.8065540791	9139
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	1.6.4.24.8	synth with cache (only 1: intros; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: eapply Z.Private_Tac.lt_irrefl; only 1: right; only 1: now Nat.nzsimpl').	14.5656278133	9108
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	7.16.0	synth with cache (only 1: intros; only 1: destruct x; only 1: split).	1.25539278984	1322
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0.3.0	synth with cache (only 1: intro; only 1: destruct x; only 1: simpl; only 1: auto).	0.025475025177	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	1	synth with cache (only 1: reflexivity).	0.0536878108978	18
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.1.1	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0206320285797	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: induction n as [| n IHn]; only 1: destruct x; only 1: simpl in *; only 1: auto; only 1: intro l; only 1: simpl; only 1: trivial).	0.0439918041229	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	1.0.0.0.0.3	synth with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: split; only 1: simpl; only 1: rewrite <- ?IHn; only 1: auto).	0.0736811161041	19
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0318360328674	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0217580795288	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl in *; only 1: now try rewrite H).	0.0217759609222	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0457580089569	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40	3.27.1.12	synth with cache (only 1: intros H H0 H1; only 1: intro m; only 1: fix le_div2 1; only 1: tauto).	14.7199718952	29636
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	0.10.0.8	synth with cache (only 1: simpl; only 1: intros a m H; only 1: rewrite H; only 1: now constructor).	2.84712696075	1574
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.1.1	synth with cache (only 1: split; only 1: now intros ->; only 1: now intros ->).	0.0872719287872	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	1.1.4.16	synth with cache (only 1: destruct x; only 1: fix le_div2 1; only 1: simpl in *; only 1: auto).	10.9692969322	8337
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	4.0	synth with cache (only 1: intros; only 1: auto).	0.0152730941772	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	1.3.11	synth with cache (only 1: intro z; only 1: destruct z; only 1: auto).	0.97606086731	728
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	2.1	synth with cache (only 1: intros; only 1: now destruct x).	1.0167298317	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.0.1.0	synth with cache (only 1: intros l1 l2; only 1: induction l1; only 1: simpl in *; only 1: auto).	0.0408520698547	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.00949788093567	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	14	synth with cache (only 1: auto with zarith).	0.160512924194	172
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	2	synth with cache (only 1: constructor).	0.0107619762421	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0	synth with cache (only 1: auto).	0.00779104232788	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	5	synth with cache (only 1: trivial).	0.00915384292603	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	3.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0286231040955	12
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1.1.1	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: reflexivity).	0.0317280292511	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	7.0.2.0	synth with cache (only 1: intros; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: split).	4.72214007378	1049
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0132420063019	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0129518508911	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0153110027313	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0362310409546	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0142509937286	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0426239967346	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	4	synth with cache (only 1: auto with zarith).	0.176286935806	18
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	37.23	synth with cache (only 1: Z.swap_greater; only 1: Z.order_pos).	8.28228402138	3403
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0905649662018	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.089427947998	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.0.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.131036043167	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	0.0.3.0.0.0.9.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize digits_ne_1; only 1: intros; only 1: split; only 1: discriminate; only 1: apply Z.pow_gt_1; only 1: lia; only 1: auto with zarith).	12.3356440067	4308
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.1.0.1.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.161534786224	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0	synth with cache (only 1: auto).	0.046434879303	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.4.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.099916934967	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	2.3.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0986471176147	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	7.0.0	synth with cache (only 1: intros; only 1: unfold sub, to_Z; only 1: auto).	0.143435001373	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Uint63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Uint63.pow2_pos	40
Coq.Numbers.Cyclic.Int63.Uint63.pow2_nz	40	0.0	synth with cache (only 1: intros h; only 1: Z.order_nz).	0.0239851474762	2
Coq.Numbers.Cyclic.Int63.Uint63.wB_diff_0	40	2	synth with cache (only 1: now apply Z_lt_neq).	0.0229599475861	3
Coq.Numbers.Cyclic.Int63.Uint63.wB_pos	40	11.5	synth with cache (only 1: apply Z.gt_lt; only 1: now try split).	0.228895902634	237
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_0	40	1	synth with cache (only 1: trivial).	0.00985097885132	2
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_1	40	7	synth with cache (only 1: auto).	0.0100162029266	8
Coq.Numbers.Cyclic.Int63.Uint63.can_inj	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.eqb_false_complete	40	0.7.0	synth with cache (only 1: intros n m ?; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0248680114746	10
Coq.Numbers.Cyclic.Int63.Uint63.eqb_false_correct	40	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.021155834198	3
Coq.Numbers.Cyclic.Int63.Uint63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Uint63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Uint63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Uint63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Uint63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Uint63.eqbP	40
Coq.Numbers.Cyclic.Int63.Uint63.ltbP	40
Coq.Numbers.Cyclic.Int63.Uint63.lebP	40
Coq.Numbers.Cyclic.Int63.Uint63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_zero_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.oppc_spec	40	0	synth with cache (only 1: apply subc_spec).	0.0101289749146	1
Coq.Numbers.Cyclic.Int63.Uint63.opp_spec	40	0	synth with cache (only 1: apply sub_spec).	0.0116009712219	1
Coq.Numbers.Cyclic.Int63.Uint63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Uint63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0115211009979	1
Coq.Numbers.Cyclic.Int63.Uint63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Uint63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Uint63.eqmE	40
Coq.Numbers.Cyclic.Int63.Uint63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Uint63.int_eqm	40	0.7.5	synth with cache (only 1: symmetry; only 1: subst; only 1: trivial).	0.223106861115	137
Coq.Numbers.Cyclic.Int63.Uint63.eqmI	40
Coq.Numbers.Cyclic.Int63.Uint63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Uint63.add_comm	40
Coq.Numbers.Cyclic.Int63.Uint63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Uint63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Uint63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0400929450989	7
Coq.Numbers.Cyclic.Int63.Uint63.lsr0	40
Coq.Numbers.Cyclic.Int63.Uint63.lsr_0_r	40	4.7.0.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.bitwise; only 1: Z.nzsimpl; only 1: trivial).	1.09455990791	523
Coq.Numbers.Cyclic.Int63.Uint63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Uint63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Uint63.lsl0	40
Coq.Numbers.Cyclic.Int63.Uint63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Uint63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Uint63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_split	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_1	40	0.0.0.0.0.0.2.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: simpl; only 1: case eqbP; only 1: simpl b2i; only 1: intros h; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0896589756012	53
Coq.Numbers.Cyclic.Int63.Uint63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_M	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_half	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Uint63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Uint63.lor_le	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_0	40
Coq.Numbers.Cyclic.Int63.Uint63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Uint63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Uint63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_even_0	40	1	synth with cache (only 1: split).	0.00944805145264	2
Coq.Numbers.Cyclic.Int63.Uint63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Uint63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_test_false	40	3.0.12.5.1.1	synth with cache (only 1: intros H; only 1: intros; only 1: change 2 with (1 + 1); only 1: apply Zdiv_lt_upper_bound; only 1: auto with zarith; only 1: auto with zarith).	1.81806492805	1632
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Uint63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Uint63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Uint63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.is_int	40
Coq.Numbers.Cyclic.Int63.Uint63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Uint63.Z_oddE	40	0.1	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0187180042267	3
Coq.Numbers.Cyclic.Int63.Uint63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0173788070679	2
Coq.Numbers.Cyclic.Int63.Uint63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Uint63.bitE	40
Coq.Numbers.Cyclic.Int63.Uint63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Uint63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Uint63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Uint63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Uint63.landC	40
Coq.Numbers.Cyclic.Int63.Uint63.landA	40
Coq.Numbers.Cyclic.Int63.Uint63.land0	40
Coq.Numbers.Cyclic.Int63.Uint63.land0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.025995016098	6
Coq.Numbers.Cyclic.Int63.Uint63.lorC	40
Coq.Numbers.Cyclic.Int63.Uint63.lorA	40
Coq.Numbers.Cyclic.Int63.Uint63.lor0	40
Coq.Numbers.Cyclic.Int63.Uint63.lor0_r	40	5.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.0318479537964	11
Coq.Numbers.Cyclic.Int63.Uint63.lxorC	40
Coq.Numbers.Cyclic.Int63.Uint63.lxorA	40
Coq.Numbers.Cyclic.Int63.Uint63.lxor0	40
Coq.Numbers.Cyclic.Int63.Uint63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Uint63.opp_to_Z_opp	40
Coq.Numbers.Cyclic.Int63.Uint63.Deprecated.Z_lt_div2	40	2.2.0.0.0	synth with cache (only 1: elim_div; only 1: intros a b [h [hb| ]]; only 1: Z.order_nz; only 1: lia; only 1: lia).	0.0549929141998	9
Coq.Numbers.Cyclic.Int63.Uint63.Deprecated.negbE	40	6.3.1.4.4	synth with cache (only 1: destruct a, b; only 1: destr_bool; only 1: auto; only 1: trivial; only 1: destr_bool).	3.64288115501	3052
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	5.1	synth with cache (only 1: intros; only 1: auto).	0.0174798965454	13
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	11.5347590446	3254
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_0	40	0	synth with cache (only 1: reflexivity).	0.0120759010315	1
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_min	40	0	synth with cache (only 1: auto with zarith).	0.0231189727783	1
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_max	40	0	synth with cache (only 1: auto with zarith).	0.0297911167145	1
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Sint63.of_to_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_mod_Uint63to_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.cmod_mod	40
Coq.Numbers.Cyclic.Int63.Sint63.cmod_small	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_cmodwB	40
Coq.Numbers.Cyclic.Int63.Sint63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.of_Z_cmod	40
Coq.Numbers.Cyclic.Int63.Sint63.is_int	40
Coq.Numbers.Cyclic.Int63.Sint63.of_pos_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.add_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.sub_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.mul_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.succ_spec	40	0	synth with cache (only 1: apply Uint63.add_spec).	0.0132818222046	1
Coq.Numbers.Cyclic.Int63.Sint63.pred_spec	40	1.3.0.3.22.42	synth with cache (only 1: bitwise as m Hm; only 1: generalize (Uint63.of_to_Z x); only 1: intros H; only 1: destruct (Uint63.to_Z_bounded x) as [hx hx']; only 1: f_equal; only 1: apply Uint63.sub_spec).	16.1205058098	7651
Coq.Numbers.Cyclic.Int63.Sint63.opp_spec	40	1.2	synth with cache (only 1: unfold opp; only 1: apply Uint63.sub_spec).	0.259556055069	60
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_add	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_sub	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_mul	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_succ	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_pred	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_opp	40
Coq.Numbers.Cyclic.Int63.Sint63.add_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.sub_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.mul_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.succ_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.pred_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.opp_of_Z	40	3.1.3.23.3	synth with cache (only 1: apply Uint63.to_Z_inj; only 1: rewrite Uint63.opp_spec; only 1: rewrite <- of_Z_spec; only 1: unfold to_Z; only 1: ring).	27.1610510349	11357
Coq.Numbers.Cyclic.Int63.Sint63.eqbP	40
Coq.Numbers.Cyclic.Int63.Sint63.ltbP	40	1.0.26	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: apply Uint63.ltb_spec).	3.04150104523	3227
Coq.Numbers.Cyclic.Int63.Sint63.lebP	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: apply iff_reflect; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Uint63.leb_spec).	0.0948300361633	11
Coq.Numbers.Cyclic.Int63.Sint63.abs_spec	40
Coq.Numbers.Cyclic.Int63.Sint63.to_Z_abs	40
Coq.Numbers.Cyclic.Int63.Sint63.abs_min_int	40	8.0	synth with cache (only 1: apply bit_ext; only 1: trivial).	0.0300559997559	20
Coq.Numbers.Cyclic.Int63.Sint63.abs_of_Z	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_0	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_0_r	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_neg_r	40
Coq.Numbers.Cyclic.Int63.Sint63.asr_1	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	2	synth with cache (only 1: firstorder).	0.0388610363007	3
Coq.Numbers.Cyclic.Int63.Ring63.Uint63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.1	synth with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.0294871330261	17
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.2.0.8.1	synth with cache (only 1: zify; only 1: intros H; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.785547971725	699
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	23.0.1	synth with cache (only 1: intro n; only 1: intro e'; only 1: now apply Nat.eqb_eq).	1.95552706718	2774
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	1.0	synth with cache (only 1: unfold base; only 1: auto with zarith).	0.0252878665924	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40	1.30	synth with cache (only 1: fix odd_spec 1; only 1: now Z.nzsimpl').	16.6485738754	3719
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	1.0	synth with cache (only 1: zify; only 1: auto with zarith).	0.0822758674622	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	18	synth with cache (only 1: trivial).	0.126526832581	145
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	9.0.4	synth with cache (only 1: intros; only 1: zify; only 1: auto).	1.04955720901	547
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	2.2	synth with cache (only 1: simpl in *; only 1: auto).	0.017982006073	14
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: auto).	0.00949788093567	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.00943493843079	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal'	40
Coq.Numbers.HexadecimalQ.of_to	40
Coq.Numbers.HexadecimalQ.dnorm_spec_i	40
Coq.Numbers.HexadecimalQ.dnorm_spec_f	40
Coq.Numbers.HexadecimalQ.dnorm_spec_e	40
Coq.Numbers.HexadecimalQ.dnorm_involutive	40
Coq.Numbers.HexadecimalQ.IZ_to_Z_IZ_of_Z	40	1.0.5.1.3	synth with cache (only 1: destruct z; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.740671157837	270
Coq.Numbers.HexadecimalQ.dnorm_i_exact	40
Coq.Numbers.HexadecimalQ.dnorm_i_exact'	40
Coq.Numbers.HexadecimalQ.to_of	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQ.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalQ.of_inj	40
Coq.Numbers.HexadecimalQ.of_iff	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	10	synth with cache (only 1: parity_binop).	0.575788021088	345
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	1.2.0.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: split; only 1: now rewrite <- PeanoNat.Nat.odd_spec; only 1: now exists 0; only 1: elim IHn; only 1: parity_binop).	0.0926280021667	18
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	14.6.8	synth with cache (only 1: intro m; only 1: rewrite nlt_ge; only 1: apply le_0_l).	27.7875540257	20800
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	1.0.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0126059055328	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.0.2.4.1	synth with cache (only 1: intro n; only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.600594043732	374
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0241129398346	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.0.3.0.0.0.2	synth with cache (only 1: intro n; only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.720538854599	447
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	8.0.4.2.0.0.0.0.0.0.0.1	synth with cache (only 1: intro n; only 1: induct n; only 1: intros m H; only 1: rewrite pred_0; only 1: assumption; only 1: intros n IH m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: apply le_succ_diag_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).	31.2706120014	27742
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	1.0.3.1	synth with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.198369979858	73
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.1.0.0.11.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	3.05596590042	3011
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	0.4.2.0.0.6.0.1	synth with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros H; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	9.40219211578	8293
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.1.0.0.0.2.0.3	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	1.74819993973	1055
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.5.0.7	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	4.45113396645	1991
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	1.4.2.1.2	synth with cache (only 1: intros n IH; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl').	5.64415407181	3825
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.0590929985046	19
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0410768985748	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: auto').	0.0708839893341	23
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0193989276886	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.021656036377	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.1.0.2.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_succ_0; only 1: now nzsimpl).	0.834678888321	426
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.198387861252	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0197849273682	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0160841941833	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.0.0.2.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	0.842963933945	251
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.194470882416	44
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.02956199646	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.495116949081	126
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	4.4.0.0.1.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	14.5838720798	7900
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.8.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.84853720665	290
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0582659244537	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0365540981293	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.16.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	15.5952429771	10248
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	1.0.17.1.0.6.0	synth with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	32.3403480053	21284
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	6.0.0.1.1.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite (mul_comm c)).	24.3551039696	7074
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	0.368223190308	84
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.1.1.0.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.0354390144348	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.1.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.130311965942	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.5.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.041179895401	14
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.114196062088	37
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.034588098526	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.0.1.0.3.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).	0.572499036789	237
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.5.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0869901180267	34
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro H1; only 1: now apply H).	0.0367648601532	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.0.1.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro H1; only 1: now apply H; only 1: intro H1; only 1: now apply H).	0.61190199852	261
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	1.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.133882045746	18
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.1.0.0.2	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.636746168137	202
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	0.92264509201	323
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.034499168396	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.0.0.2	synth with cache (only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.0267550945282	9
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	3.0.0.1.2.9	synth with cache (only 1: intro x; only 1: intro m; only 1: intro H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: firstorder).	5.14443612099	2475
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	1.10.28.4	synth with cache (only 1: intro a; only 1: unfold def_mul; only 1: apply succ_inj_wd; only 1: now rewrite recursion_0).	16.4581389427	9784
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.1.2.1.0.11	synth with cache (only 1: intros a0; only 1: unfold even; only 1: rewrite recursion_succ; only 1: destr_bool; only 1: split; only 1: f_equiv').	2.29969215393	1266
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.2.0.17.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l; only 1: assumption).	18.3391418457	8394
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0405249595642	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.1.0.0	synth with cache (only 1: intros x x' EQ; only 1: destruct (le_gt_cases x 0); only 1: now f_equiv; only 1: now f_equiv).	0.0546109676361	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	2.18233108521	796
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	3.3.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0395030975342	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.2.0.0.11	synth with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: apply lt_1_2; only 1: apply Private_NZDiv.div_small; only 1: order').	0.58442902565	550
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.4	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.10306596756	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0584552288055	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0195250511169	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.0.17	synth with cache (only 1: intro p; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	3.76761007309	2351
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0402140617371	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.188191175461	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.4	synth with cache (only 1: intros n m; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.669713973999	196
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0595161914825	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0588920116425	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.1.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.114013910294	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0320808887482	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.1	synth with cache (only 1: intros; only 1: bitwise; only 1: now destruct (even a)).	0.114337921143	31
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0318908691406	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	4.0.0.21	synth with cache (only 1: intros x y; only 1: intros a; only 1: bitwise; only 1: intuition).	38.2127678394	12532
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.11.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now destruct (even n), (even m)).	0.61501288414	478
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	3.1.0.8	synth with cache (only 1: intro m; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	2.45871090889	1345
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.4.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.0665280818939	22
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0313439369202	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40	1.1.2.0.18.4	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *).	17.6566159725	6751
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.0.0.1.0.0.0.0.0.0.1.4.0	synth with cache (only 1: intros; only 1: apply testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: assumption; only 1: order_nz).	7.87196803093	3540
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0339469909668	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	2.0.3.2.0	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: rewrite !ones_equiv; only 1: bitwise; only 1: now destruct a.[m]).	1.84304404259	576
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.4.5	synth with cache (only 1: intros a n H; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	3.05854606628	1318
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.0.3.0.0.1	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.251346826553	296
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.2.5	synth with cache (only 1: intros EQ; only 1: apply sqrt_square; only 1: apply le_0_l).	0.141785860062	42
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.1.6.5	synth with cache (only 1: intros z n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.41043996811	3971
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	1.0.2.0.0.0.0.1	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: now nzsimpl).	1.08970594406	249
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	7.7.0.0.1.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	33.1435029507	11835
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases n; only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0411720275879	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.31885504723	576
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.3.5	synth with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	7.50434613228	2380
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	2.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	0.453043937683	82
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.2.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.362277984619	68
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.289175987244	22
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0430471897125	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	6.0.5.2	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	1.36872911453	456
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.78312897682	842
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	1.6.2.3.0.5	synth with cache (only 1: intros a b; only 1: intros H; only 1: apply neq_0_lt_0; only 1: apply pow_pos_nonneg; only 1: auto'; only 1: auto').	6.44604682922	4524
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.0.0.0.0.0.0.6.0.3.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H).	37.6422379017	8597
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.3.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: auto'; only 1: order').	0.0638608932495	11
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.0.0.2.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.759667158127	248
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.1.0.2.0.3.2.11	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: assert (b ^ c <= a ^ c) by (apply Private_NZPow.pow_le_mono_l; try split; order); only 1: order; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	37.3334190845	25573
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.0.0.2.0.1	synth with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.0542349815369	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.2.0.0.1.0.0.6	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	19.6343920231	7791
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: assumption; only 1: now apply add_le_mono_r).	2.02198290825	751
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r).	0.923439979553	319
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.0.0.6.1.0.0.0.0.6.0.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	27.2630710602	15667
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.2.0.0.1.0.0.2.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	12.0739610195	5770
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_l).	0.785911083221	256
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	2.0.0.1.2.0.0.0.1	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	3.64104676247	1799
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.6.1.0.0.5.0	synth with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply sub_le_mono_r).	8.48643112183	5289
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	5.1	synth with cache (only 1: intros; only 1: auto).	0.469072818756	8
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	37.145581007	483
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0811519622803	15
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	1.1	synth with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.04944896698	17
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	4.0.11	synth with cache (only 1: intro a; only 1: unfold lcm; only 1: now nzsimpl).	4.09523200989	2639
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0280499458313	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.9.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.53343892097	729
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.8.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	1.08880805969	518
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.2.3.5	synth with cache (only 1: intro H; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_l).	1.01794505119	733
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	4.0.5.0	synth with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	2.13223290443	773
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	0.2.0.0.0.1.0.0.1.0.0.3.0.3	synth with cache (only 1: intros n m; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	31.7911829948	15830
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.HexadecimalZ.of_to	40
Coq.Numbers.HexadecimalZ.to_of	40
Coq.Numbers.HexadecimalZ.to_int_inj	40
Coq.Numbers.HexadecimalZ.to_int_surj	40
Coq.Numbers.HexadecimalZ.of_int_norm	40
Coq.Numbers.HexadecimalZ.of_inj	40
Coq.Numbers.HexadecimalZ.of_iff	40
Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZ.double_norm	40
Coq.Numbers.HexadecimalZ.of_hex_int_double	40
Coq.Numbers.HexadecimalZ.double_to_hex_int	40
Coq.Numbers.HexadecimalZ.nztail_to_hex_uint_pow16	40
Coq.Numbers.HexadecimalN.Unsigned.of_to	40
Coq.Numbers.HexadecimalN.Unsigned.to_of	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0198218822479	1
Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0278811454773	3
Coq.Numbers.HexadecimalN.Unsigned.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- HexadecimalPos.Unsigned.of_uint_norm, E; only 1: apply HexadecimalPos.Unsigned.of_uint_norm).	0.0537779331207	13
Coq.Numbers.HexadecimalN.Signed.of_to	40
Coq.Numbers.HexadecimalN.Signed.to_of	40
Coq.Numbers.HexadecimalN.Signed.to_int_inj	40
Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalN.Signed.of_int_norm	40
Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalFacts.of_list_to_list	40
Coq.Numbers.HexadecimalFacts.to_list_of_list	40
Coq.Numbers.HexadecimalFacts.to_list_inj	40
Coq.Numbers.HexadecimalFacts.of_list_inj	40
Coq.Numbers.HexadecimalFacts.nb_digits_spec	40
Coq.Numbers.HexadecimalFacts.nzhead_spec	40
Coq.Numbers.HexadecimalFacts.unorm_spec	40
Coq.Numbers.HexadecimalFacts.revapp_spec	40
Coq.Numbers.HexadecimalFacts.rev_spec	40
Coq.Numbers.HexadecimalFacts.app_spec	40
Coq.Numbers.HexadecimalFacts.nztail_spec	40
Coq.Numbers.HexadecimalFacts.del_head_spec_0	40	0	synth with cache (only 1: trivial).	0.032585144043	1
Coq.Numbers.HexadecimalFacts.del_head_spec_small	40
Coq.Numbers.HexadecimalFacts.del_head_spec_large	40
Coq.Numbers.HexadecimalFacts.nb_digits_0	40
Coq.Numbers.HexadecimalFacts.nb_digits_n0	40
Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40
Coq.Numbers.HexadecimalFacts.length_lnzhead	40	2.3.27	synth with cache (only 1: revert l; only 1: fix le_div2 1; only 1: now f_equal).	14.9667990208	14367
Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_nzhead	40	0.23.15	synth with cache (only 1: intuition; only 1: symmetry; only 1: now induction u; [ idtac | simpl; rewrite IHu | .. ]).	3.44684410095	5446
Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40
Coq.Numbers.HexadecimalFacts.nb_digits_rev	40
Coq.Numbers.HexadecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.HexadecimalFacts.unorm_D0	40	5.0.0.1	synth with cache (only 1: case (uint_eq_dec (nzhead u) Nil); only 1: unfold unorm; only 1: now simpl; only 1: trivial).	0.17492389679	32
Coq.Numbers.HexadecimalFacts.app_nil_l	40	0	synth with cache (only 1: now simpl).	0.0327980518341	1
Coq.Numbers.HexadecimalFacts.app_nil_r	40
Coq.Numbers.HexadecimalFacts.abs_app_int	40
Coq.Numbers.HexadecimalFacts.abs_norm	40
Coq.Numbers.HexadecimalFacts.iter_D0_nzhead	40
Coq.Numbers.HexadecimalFacts.iter_D0_unorm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_l	40
Coq.Numbers.HexadecimalFacts.nzhead_app_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intro Hl; only 1: apply to_list_inj; only 1: revert Hl; only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: rewrite <- List.app_comm_cons; only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply le_not_lt, le_plus_r.. ]).	0.129911899567	9
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_zero	40
Coq.Numbers.HexadecimalFacts.app_int_nil_r	40
Coq.Numbers.HexadecimalFacts.unorm_app_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_r	40
Coq.Numbers.HexadecimalFacts.norm_app_int	40
Coq.Numbers.HexadecimalFacts.del_head_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_tail_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_head_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int	40
Coq.Numbers.HexadecimalFacts.app_del_tail_head	40
Coq.Numbers.HexadecimalFacts.app_int_del_tail_head	40
Coq.Numbers.HexadecimalFacts.del_head_app_int_exact	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp	40
Coq.Numbers.HexadecimalFacts.nzhead_rev	40
Coq.Numbers.HexadecimalFacts.rev_rev	40
Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_D0	40	0	synth with cache (only 1: reflexivity).	0.0325310230255	1
Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	3.0.4.0.28	synth with cache (only 1: nzinduct n; only 1: set (f := fix aux d_rev := match d_rev with | D0 d_rev => let (r, n) := aux d_rev in (r, S n) | _ => (d_rev, 0) end); only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: intro n; only 1: intuition).	4.11104607582	2570
Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40
Coq.Numbers.HexadecimalFacts.unorm_0	40
Coq.Numbers.HexadecimalFacts.unorm_nonnil	40
Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0	synth with cache (only 1: now induction n).	0.0256698131561	1
Coq.Numbers.HexadecimalFacts.del_head_nonnil	40
Coq.Numbers.HexadecimalFacts.del_tail_nonnil	40
Coq.Numbers.HexadecimalFacts.nzhead_involutive	40
Coq.Numbers.HexadecimalFacts.nztail_involutive	40
Coq.Numbers.HexadecimalFacts.unorm_involutive	40	0	synth with cache (only 1: now induction d).	0.0299761295319	1
Coq.Numbers.HexadecimalFacts.norm_involutive	40
Coq.Numbers.HexadecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.HexadecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.HexadecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40
Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	0.14.0.0.2.2	synth with cache (only 1: revert d'; only 1: intros d' H; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: f_equal; only 1: inversion H; only 1: Z.order).	5.48740005493	4981
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalZ.of_uint_iter_D0	40
Coq.Numbers.DecimalZ.of_int_iter_D0	40
Coq.Numbers.DecimalZ.nztail_to_uint_pow10	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.0.8.1	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).	0.642606019974	158
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	2.0.2.0.0.0.4.1.1.2.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_r; only 1: rewrite <- succ_le_mono; only 1: now apply le_le_succ_r).	22.4971129894	6335
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.2.0	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.136129140854	8
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.1.1.0.0.0.2	synth with cache (only 1: intro n; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.316041946411	194
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.1.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: symmetry; only 1: now rewrite ?Hx; only 1: order; only 1: order).	0.0261669158936	7
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.1.23.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: nzsimpl'; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn by now apply lt_succ_r, mul_nonneg_nonneg; only 1: now rewrite pred_succ, sqrt_square).	5.93735790253	4465
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.601732969284	210
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.1.0.0.7.8	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	0.678102970123	491
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.208172798157	49
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.4.1.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	4.69684290886	2095
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.1.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	1.08281707764	535
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.2.0.0.0	synth with cache (only 1: intros a ?; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.119548082352	44
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.1.0.0.9.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: order; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	27.0885000229	14197
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.0.0.0.1.2.0.0	synth with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.374292850494	101
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.093300819397	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0940580368042	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0216810703278	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.180675983429	41
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0716211795807	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.58860087395	670
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.5.0.4.0	synth with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.14147019386	1636
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.1.5.6.3	synth with cache (only 1: intros z Base Step; only 1: intro n; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.3110320568	5155
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0812158584595	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0261759757996	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	23.0.1	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	1.46488785744	1593
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.21.2.0	synth with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: left; only 1: rewrite lt_succ_r; only 1: apply le_refl).	4.87216687202	4939
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	2.1.7.3.28.0.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl n); only 1: setoid_rewrite H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: rewrite <- H  at 2; only 1: now right).	31.7866549492	47302
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	12.0.1.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	3.97306203842	1047
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0372970104218	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	5.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0371561050415	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.3.0	synth with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.141535997391	61
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	synth with cache (only 1: order).	0.0179278850555	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0	synth with cache (only 1: order).	0.0175578594208	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	synth with cache (only 1: order).	0.0182809829712	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0	synth with cache (only 1: order).	0.0214669704437	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0	synth with cache (only 1: order).	0.0174880027771	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.0.0.2.0	synth with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (lt_irrefl x); only 1: transitivity y; only 1: auto; only 1: auto).	0.421586990356	33
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.1.3	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.114457845688	55
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	0.2.0.4.0.0.2.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n m; only 1: intro H; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r; only 1: intro n; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: tauto).	7.13970088959	3361
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.4.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0705978870392	26
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	4.2.1.6.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	20.3022320271	8667
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.2.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0350208282471	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0457260608673	12
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.3.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0445711612701	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	0.1.13.6.0	synth with cache (only 1: intros n m; only 1: rewrite one_succ; only 1: rewrite <- le_succ_l; only 1: intros LE EQ; only 1: order).	15.7451310158	13102
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.190032958984	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.166751146317	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.0.1	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.49363899231	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.5.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0985569953918	15
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1	synth with cache (only 1: intuition order).	0.475947856903	91
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0233631134033	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.2.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0495429039001	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	3.0.2.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	0.387095928192	59
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0236089229584	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0235559940338	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.4.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0712110996246	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.3.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.491573095322	57
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.1.0.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: rewrite lt_succ_r; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	1.80132699013	652
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	1.1.17.1	synth with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).	8.84561705589	8710
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	7.1.8.7.8	synth with cache (only 1: intros x y EQ WF; only 1: intuition; only 1: induction n; only 1: auto; only 1: eauto).	3.19701695442	1876
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	28.16	synth with cache (only 1: simpl; only 1: now PeanoNat.Nat.nzsimpl).	0.39044213295	1463
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	3.0	synth with cache (only 1: intros a; only 1: now PeanoNat.Nat.nzsimpl').	0.0167279243469	5
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.5.1.0.0	synth with cache (only 1: intro n; only 1: PeanoNat.Nat.cases n; only 1: now unfold ofnat; only 1: Bool.destr_bool; only 1: now rewrite PeanoNat.Nat.pred_succ).	0.835419893265	283
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.1.0.3.1.3.2	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite lt_succ_r; only 1: PeanoNat.Nat.cases ltac:(n); only 1: reflexivity; only 1: fix le_div2 1; only 1: auto).	2.10632109642	848
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	1.1.17	synth with cache (only 1: fix le_div2 1; only 1: intro; only 1: auto).	6.9387319088	5672
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	3.4.2.1	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	34.3995649815	1547
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40	3.2.5.8	synth with cache (only 1: intros n; only 1: fix odd_spec 1; only 1: intro m; only 1: auto).	14.7344241142	7344
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0500340461731	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.4.0.6	synth with cache (only 1: unfold divide; only 1: intro n; only 1: exists n; only 1: now nzsimpl').	0.797000169754	420
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.13.0	synth with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	2.30800700188	1223
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.8.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	6.50080084801	3291
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.17.4	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	2.7788028717	1312
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.17.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	1.03912186623	571
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	4.0.0.1.0.1.0.19	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	5.35218691826	3843
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0273549556732	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.0350141525269	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0357339382172	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0263271331787	6
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	0.9.0.2.2.0	synth with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	20.3495550156	8781
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.0.0.0.0.2	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.0296189785004	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.177885055542	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	3.04993700981	710
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.5.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.143900871277	20
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.080864906311	17
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.4.0.0	synth with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.035952091217	9
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	8.0.4.4.5.0	synth with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: apply even_spec in Hm; only 1: now destruct (even n), (even m)).	17.2137169838	10106
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0710480213165	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.06977891922	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.1.1.0.0.1.0.4.4	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	3.48804402351	1557
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	0.1.1.0.0.1.0.5.6	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	10.5911538601	5477
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0630929470062	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0219850540161	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.0937950611115	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.103221178055	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.2.0.0	synth with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0990171432495	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0420908927917	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.2.0.7.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	11.2682259083	2780
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.1.1.1.4.27	synth with cache (only 1: rewrite one_succ; only 1: apply log2_unique' with 0; only 1: order; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl).	2.04482698441	1347
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.0.2.1.1.0.1.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	0.529313802719	206
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.1.12.0	synth with cache (only 1: intros a Ha; only 1: assert (Ha' : 0 < a) by order'; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.52771115303	468
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.2.2.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	0.210488080978	67
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	0.302765130997	151
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.00927805900574	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0.0.3	synth with cache (only 1: intros x x0; only 1: firstorder; only 1: intuition; only 1: intuition).	0.125416040421	68
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	6.0	synth with cache (only 1: intros; only 1: simpl_relation).	0.0306470394135	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.6	synth with cache (only 1: intros x y z H1 H2; only 1: rewrite <- H2; only 1: auto).	0.0465171337128	22
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.3.0.0.0.4.0	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: revert m; only 1: intros; only 1: now f_equiv).	0.861718177795	452
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	6.27738881111	1999
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.5.0.4	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	5.30037689209	2199
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.0.0.6.0.0	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	2.70364809036	1018
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0195679664612	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0179839134216	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	3.9.5	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	11.8457889557	9129
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0213949680328	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	8.5.7.2.9.0	synth with cache (only 1: intros n m H1 H2; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: now apply mul_lt_mono_nonneg).	14.2845239639	14213
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.0212090015411	7
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.HexadecimalR.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalR.of_to	40
Coq.Numbers.HexadecimalR.to_of	40
Coq.Numbers.HexadecimalR.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalR.to_hexadecimal_surj	40	0.15.1.0	synth with cache (only 1: exists (QArith_base.of_hexadecimal d); only 1: unfold of_hexadecimal; only 1: simpl; only 1: apply HexadecimalQ.to_of).	34.8879330158	8758
Coq.Numbers.HexadecimalR.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalR.of_inj	40	0.0.1	synth with cache (only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !HexadecimalQ.to_of, H).	0.0273818969727	4
Coq.Numbers.HexadecimalR.of_iff	40
Coq.Numbers.HexadecimalString.uint_of_char_spec	40
Coq.Numbers.HexadecimalString.NilEmpty.usu	40
Coq.Numbers.HexadecimalString.NilEmpty.sus	40
Coq.Numbers.HexadecimalString.NilEmpty.isi	40
Coq.Numbers.HexadecimalString.NilEmpty.sis	40
Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalString.NilZero.sus	40
Coq.Numbers.HexadecimalString.NilZero.usu	40
Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	2.2	synth with cache (only 1: simpl; only 1: auto).	0.0314500331879	6
Coq.Numbers.HexadecimalString.NilZero.usu_gen	40
Coq.Numbers.HexadecimalString.NilZero.isi	40
Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	3	synth with cache (only 1: reflexivity).	0.0187640190125	4
Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0193719863892	1
Coq.Numbers.HexadecimalString.NilZero.sis	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal	40
Coq.Numbers.DecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal'	40
Coq.Numbers.DecimalQ.of_to	40
Coq.Numbers.DecimalQ.dnorm_spec_i	40
Coq.Numbers.DecimalQ.dnorm_spec_f	40
Coq.Numbers.DecimalQ.dnorm_spec_e	40
Coq.Numbers.DecimalQ.dnorm_involutive	40
Coq.Numbers.DecimalQ.IZ_to_Z_IZ_of_Z	40	1.0.5.1.2	synth with cache (only 1: destruct z; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.489080905914	238
Coq.Numbers.DecimalQ.dnorm_i_exact	40
Coq.Numbers.DecimalQ.dnorm_i_exact'	40
Coq.Numbers.DecimalQ.to_of	40
Coq.Numbers.DecimalQ.to_decimal_inj	40
Coq.Numbers.DecimalQ.to_decimal_surj	40
Coq.Numbers.DecimalQ.of_decimal_dnorm	40
Coq.Numbers.DecimalQ.of_inj	40
Coq.Numbers.DecimalQ.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40	0.1	synth with cache (only 1: simpl; only 1: now destruct n).	0.0320730209351	3
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_to	40
Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40	5	synth with cache (only 1: now case d).	0.017550945282	6
Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: firstorder).	0.0219988822937	3
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	7.0	synth with cache (only 1: simpl; only 1: trivial).	0.0151710510254	9
Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0208470821381	3
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPos.Signed.of_to	40
Coq.Numbers.HexadecimalPos.Signed.to_of	40
Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0106551647186	3
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	13.0	synth with cache (only 1: firstorder; only 1: intuition).	0.0934159755707	205
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0095911026001	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0100131034851	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.2.0	synth with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.325987100601	240
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.0	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.0231449604034	4
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	0.11.17	synth with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: auto).	0.994916915894	1856
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	synth with cache (only 1: intuition).	0.160387039185	64
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	2.0.12.13	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intro p; only 1: intuition).	1.72237992287	3060
Coq.Structures.OrdersEx.Ascii_as_OT.lt_compat	40	0	synth with cache (only 1: <Coq.Strings.Ascii.t_eqb>).	0.0123100280762	1
Coq.Structures.OrdersEx.Ascii_as_OT.lt_strorder	40
Coq.Structures.OrdersEx.Ascii_as_OT.compare_spec	40
Coq.Structures.OrdersEx.String_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0466511249542	3
Coq.Structures.OrdersEx.String_as_OT.compare_spec	40
Coq.Structures.OrdersEx.String_as_OT.lt_strorder	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	1	synth with cache (only 1: Nat.order).	0.109481811523	17
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	8.3	synth with cache (only 1: intros n m H1 H2; only 1: Nat.order').	0.955363035202	343
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0.0	synth with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.0508251190186	3
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.0324788093567	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	30.9	synth with cache (only 1: intros l' x H; only 1: Pos.Private_Tac.order).	26.0462179184	17137
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	13.0	synth with cache (only 1: intros n; only 1: easy).	0.380172014236	208
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	7.8.2.22	synth with cache (only 1: intro n; only 1: firstorder; only 1: intuition; only 1: intuition).	16.6443881989	13128
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	15.19	synth with cache (only 1: fix gcd_divide 1; only 1: auto with sets).	33.2546238899	22468
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	4.25	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	10.5755720139	5583
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40	4.17.3.0	synth with cache (only 1: intro n; only 1: induction n; only 1: fix even_spec 1; only 1: auto).	16.5594639778	6964
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	6.1.1.22.2	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: auto; only 1: auto).	7.43708086014	6926
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	2.1.9.7	synth with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: easy).	8.7870619297	5936
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0510649681091	1
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40	1.20	synth with cache (only 1: rewrite <- (ascii_N_embedding a); only 1: apply N.compare_antisym).	5.12140417099	2597
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	29.4.0.5.1	synth with cache (only 1: intros; only 1: red; only 1: inversion H; only 1: auto with bool; only 1: Nat.order_pos).	31.5815649033	22279
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	3.0	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity).	0.0197441577911	13
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	1.0.1	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0218529701233	14
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	16.7.8	synth with cache (only 1: intros b1 b2; only 1: intro n; only 1: firstorder).	8.71670889854	12787
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	0.31.1.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x' x'' Hx' Hx''; only 1: eauto).	18.7037348747	36063
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.3.5.15	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).	0.696861028671	610
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	3.0.0.9	synth with cache (only 1: split; only 1: intro EQ; only 1: auto; only 1: auto).	0.463488101959	274
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.00907802581787	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: order).	0.00899696350098	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.00967621803284	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	1.4.12	synth with cache (only 1: intro y0; only 1: intros; only 1: order).	2.61341190338	2249
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.14	synth with cache (only 1: intro H; only 1: order).	0.239104986191	166
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	1	synth with cache (only 1: order).	0.00971603393555	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.00833201408386	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.00973701477051	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.00772285461426	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.0091450214386	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.00869917869568	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.00813007354736	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.00762701034546	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.00823092460632	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.1.0.0.0.0.4.0	synth with cache (only 1: intros x y H; only 1: destruct (eq_dec x y); only 1: exfalso; only 1: order; only 1: case (compare x y); only 1: intros H'; only 1: intuition; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	8.55460882187	6805
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.939965963364	413
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	synth with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0303599834442	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	3.0.1.0.0.1.14	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: auto with ordered_type).	2.24492311478	2009
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	3.0.1.0.1.0.0.5.6	synth with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: intros x y H; only 1: auto with ordered_type; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: right; only 1: rewrite H; only 1: auto).	20.1629641056	7533
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.4.4	synth with cache (only 1: intros l; only 1: intros x y H; only 1: now rewrite H).	0.141024827957	98
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.0.0.0.0.3.3	synth with cache (only 1: intros l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.400125026703	224
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	1.1.6	synth with cache (only 1: intros l; only 1: apply InA_InfA; only 1: auto with *).	0.0376698970795	26
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	7	synth with cache (only 1: firstorder).	0.032299041748	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	1.1.0	synth with cache (only 1: intro l; only 1: intros n x y; only 1: auto).	0.0271329879761	18
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0076630115509	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0	synth with cache (only 1: intuition).	0.0102620124817	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.00715398788452	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0133321285248	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	1.5.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros l1 l2 Heq; only 1: intuition).	0.0589520931244	27
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	0.11.1.5	synth with cache (only 1: intro l; only 1: unfold eqk, eqke; only 1: intros x y; only 1: order).	1.1438999176	1308
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.0130760669708	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0126550197601	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	2.1.15.0.1.0.67	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: intros x; only 1: auto with ordered_type; only 1: intros Heq; only 1: unfold eqk, eqke; only 1: eauto with ordered_type).	3.41601014137	7739
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0282690525055	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	1.7.26.11.1.4	synth with cache (only 1: unfold eqke, ltk; only 1: split; only 1: intros n d; only 1: order; only 1: compute; only 1: eauto with ordered_type).	6.64699888229	13714
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0116209983826	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.00920391082764	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.00957298278809	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.3.2.21	synth with cache (only 1: intros A l; only 1: rewrite InA_alt; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder).	19.522108078	6475
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	0.2.2.2.0.5.0.2	synth with cache (only 1: intros l; only 1: intros [y H]; only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros x a0 **; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	6.30199599266	3841
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	4.3.0.1.3.5	synth with cache (only 1: unfold eqke, ltk; only 1: induction l; only 1: auto with ordered_type; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	7.04435396194	3666
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.4.2.4.1.0.6	synth with cache (only 1: unfold eqke, ltk; only 1: intros l k e H H0; only 1: eapply Sort_Inf_In; only 1: inversion H; only 1: eauto with ordered_type; only 1: inversion H; only 1: auto; only 1: eauto with *).	8.2768008709	4062
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40	1.1.3.5.13	synth with cache (only 1: induction 1; only 1: inversion H; only 1: firstorder; only 1: subst; only 1: eauto with *).	19.4583058357	8067
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	27	synth with cache (only 1: abstract now inversion 1).	5.15016889572	2676
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.1.2.0.5	synth with cache (only 1: intro l; only 1: unfold eqke; only 1: inversion_clear 1 as [| ? ? H0 H1]; only 1: intuition; only 1: intuition).	0.668883085251	240
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0292489528656	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.1.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	5.60454082489	5033
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.0	synth with cache (only 1: autorewrite with order; only 1: easy).	0.00953507423401	2
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	7.3	synth with cache (only 1: intro H; only 1: order).	0.124412059784	134
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	5.12	synth with cache (only 1: unfold not; only 1: iorder).	0.821672916412	916
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.00877904891968	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.0.0.0	synth with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.210738897324	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.0	synth with cache (only 1: intros x y; only 1: iorder).	0.0123810768127	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	6.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0508661270142	19
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.01398396492	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.0.2.3.0	synth with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	0.0242660045624	10
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0152518749237	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0149791240692	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	4.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.43081617355	6
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.0062370300293	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.00850296020508	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.00886487960815	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	1.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0161190032959	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	3.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0182931423187	5
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.00609302520752	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	synth with cache (only 1: order).	0.143859148026	70
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.00679993629456	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	synth with cache (only 1: order).	0.00772094726562	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0.0	synth with cache (only 1: intro H; only 1: rewrite H; only 1: apply irreflexivity).	0.0827939510345	3
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0716390609741	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.00622010231018	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.00629711151123	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.00764608383179	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	14.4.4.3	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	28.8338711262	32047
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.7.11	synth with cache (only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: unfold lt; only 1: auto with *).	30.7705779076	19252
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00839614868164	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.0.0.1.24.9	synth with cache (only 1: apply CompOpp_inj; only 1: CRelationClasses.simpl_crelation; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: apply compare_eq_iff; only 1: reflexivity).	0.528236150742	1480
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00860500335693	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0110771656036	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.1.2.6	synth with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1; only 1: constructor; only 1: trivial; only 1: trivial).	4.18615102768	2011
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.1.0.5.0.5	synth with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: trivial).	2.77178096771	1196
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.9	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.56950211525	225
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.2.3.4.0.10	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	6.69778108597	6156
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.2.27.10	synth with cache (only 1: apply eq_true_iff_eq; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	7.3865749836	10014
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	2.5.0	synth with cache (only 1: intros l x y H H'; only 1: destruct H; only 1: auto).	0.105891942978	22
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	6.0.0.0.1	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: eauto with *).	0.77458691597	242
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.2.1.1.3.0.1.0.3	synth with cache (only 1: induction l; only 1: intros l'; only 1: intros H H0 H1; only 1: constructor; only 1: intros HF; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	12.8577179909	5364
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	4.2	synth with cache (only 1: intros n m p; only 1: now intros ->).	0.0941851139069	25
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.6	synth with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: intuition).	0.0671699047089	18
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	0.3.0.5	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: intuition).	0.177228927612	95
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0	synth with cache (only 1: solve_proper).	0.0429701805115	1
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	7.0	synth with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	2.0892431736	13
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2.0	synth with cache (only 1: intros x y H y0 y1 e; only 1: intuition).	0.0366108417511	4
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.048211812973	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0393400192261	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	0.0.0.4.0.0.0.0.16	synth with cache (only 1: intros H; only 1: apply SortA_InfA_InA; only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: inversion H; only 1: eauto; only 1: inversion H; only 1: eauto).	23.4076659679	9784
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	synth with cache (only 1: firstorder).	0.0184640884399	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	3	synth with cache (only 1: tauto).	0.0206208229065	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	1	synth with cache (only 1: split).	0.0161979198456	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.1.1	synth with cache (only 1: intro H; only 1: inversion H; only 1: trivial).	0.0257217884064	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	synth with cache (only 1: now destruct 1).	0.0186429023743	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	synth with cache (only 1: reflexivity).	0.0159060955048	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	4	synth with cache (only 1: trivial).	0.0180699825287	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	8	synth with cache (only 1: auto).	0.0271809101105	18
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.0.2	synth with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: exists y; only 1: firstorder).	0.109388828278	20
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.0.6.7.0.14	synth with cache (only 1: intros H0; only 1: induction 1; only 1: left; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder).	6.07880520821	5108
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.0.0	synth with cache (only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.0848648548126	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0267009735107	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.0.18.8	synth with cache (only 1: firstorder  auto with crelations; only 1: inversion H; only 1: firstorder; only 1: eauto).	38.6577589512	4648
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.12.1	synth with cache (only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder  auto with crelations; only 1: eauto).	1.32053685188	726
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	3.0.21.5.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	19.8892290592	32817
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	9.1	synth with cache (only 1: intros x y H; only 1: firstorder).	0.0886058807373	56
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	4.0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto).	0.0269861221313	7
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0157461166382	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0290491580963	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.0.1.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros (EQ, LE); only 1: simpl; only 1: intuition).	0.0448632240295	5
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	3.16	synth with cache (only 1: intros; only 1: eauto).	1.27484202385	670
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.0.2.11.0.0.3.0.5	synth with cache (only 1: split; only 1: unfold eqk, eqke; only 1: red; only 1: auto; only 1: auto; only 1: intro l'; only 1: unfold eqk, eqke; only 1: intuition; only 1: eauto).	9.16218209267	8932
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0486209392548	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	2.0.3.19.7	synth with cache (only 1: intros x y H; only 1: elim H; only 1: unfold eqke; only 1: intuition; only 1: intuition).	36.4022741318	13060
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	1.3.1.9	synth with cache (only 1: intro l; only 1: intros; only 1: rewrite <- H; only 1: eauto).	0.802891016006	485
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	1.3.2.6	synth with cache (only 1: intros x H; only 1: inversion 1; only 1: firstorder; only 1: intuition).	0.991824150085	628
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.0.0.3.1	synth with cache (only 1: unfold eqk, eqke; only 1: intros l x y H H'; only 1: invlist InA; only 1: intuition; only 1: intuition).	0.181849002838	59
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	24	synth with cache (only 1: intuition).	0.0861377716064	280
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.1	synth with cache (only 1: unfold eq; only 1: decide equality).	0.0200779438019	3
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	36.6357581615	12504
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0286569595337	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	1.12881398201	673
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	0.2.0.2.16.0.8	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: intuition order; only 1: order; only 1: intuition; only 1: order; only 1: order).	13.2625620365	7943
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	2.10.8.0.0.0.0.12.0.1.40.26	synth with cache (only 1: revert m; only 1: intro p; only 1: destruct (max_spec n p) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: apply max_unicity; only 1: right; only 1: intuition; only 1: order; only 1: rewrite E; only 1: symmetry; only 1: apply max_r; only 1: order).	36.5567269325	45348
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	1.2.1.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.365999937057	200
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0107171535492	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	8	synth with cache (only 1: solve_max).	0.119512081146	36
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.0160109996796	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	0.12.0.9.0.0	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: right; only 1: order; only 1: left; only 1: order).	37.9840121269	18592
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	6.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	33.848484993	12498
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0426568984985	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0231821537018	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0119791030884	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.0.1.4	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.123827934265	31
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.3.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.120290994644	26
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0110371112823	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0814719200134	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0238480567932	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0407710075378	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	5.44278478622	2597
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.0.0.0.0.1.12	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	17.9035899639	10549
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.0.0.3.3.217	synth with cache (only 1: symmetry; only 1: apply min_unicity; only 1: right; only 1: split; only 1: order; only 1: order).	6.66458201408	51059
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.1.0.0.9.8	synth with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).	0.593225002289	653
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0109879970551	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	6	synth with cache (only 1: solve_min).	0.0496561527252	34
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0153338909149	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.1.6	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.323138952255	165
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.1.1.0.0.1.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	6.5013988018	3169
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.45580911636	600
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0704798698425	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0107870101929	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.1.0.1.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0233199596405	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.6.0	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0834021568298	33
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0113790035248	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.042820930481	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0196490287781	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.0.4.0.0	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: apply min_glb_iff; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: solve_min).	0.0416939258575	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.3	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0202569961548	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.7	synth with cache (only 1: apply min_l; only 1: solve_max).	0.0513188838959	28
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.07311081886	939
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.1.0.1.0.0.0.1.0.1.0.0.1.0.0.1.1	synth with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	30.2818858624	19821
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.0.12	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	4.00473880768	3264
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.21	synth with cache (only 1: apply max_mono; only 1: eauto with *).	0.678431987762	914
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	2.4.1.2.10	synth with cache (only 1: intros x y z; only 1: apply max_case_strong; only 1: intros; only 1: destruct H; only 1: auto with sets).	19.9627101421	13976
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0145499706268	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.5	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.014720916748	9
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.8.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	0.313280820847	217
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0149819850922	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.0.7	synth with cache (only 1: intro b1; only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0603280067444	65
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.0.12.6.4.1	synth with cache (only 1: intro x; only 1: intro l; only 1: unfold eq; only 1: intro H; only 1: rewrite H; only 1: discriminate).	38.5914008617	32022
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	1.1	synth with cache (only 1: unfold eq, lt; only 1: decide equality).	0.0622539520264	25
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0212771892548	5
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0216839313507	5
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: trivial).	0.00840306282043	1
Coq.ZArith.Znat.positive_N_nat	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.00859498977661	3
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0279040336609	9
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: trivial; only 1: trivial).	0.0246379375458	6
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.00894999504089	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.1.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.328212976456	163
Coq.ZArith.Znat.N2Z.id	40	0.0.0.1.1	synth with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: trivial).	0.0293200016022	7
Coq.ZArith.Znat.N2Z.inj	40	1.0.0.1.0.1.0.0.16	synth with cache (only 1: destruct n, m; only 1: intros; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	4.27989792824	3687
Coq.ZArith.Znat.N2Z.inj_iff	40	2.1.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now subst).	34.3986620903	14055
Coq.ZArith.Znat.N2Z.is_nonneg	40	1	synth with cache (only 1: now destruct n).	0.021956205368	11
Coq.ZArith.Znat.N2Z.inj_0	40	7	synth with cache (only 1: split).	0.00998115539551	8
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0077109336853	1
Coq.ZArith.Znat.N2Z.inj_compare	40	3.0.0.1.4.1	synth with cache (only 1: destruct n, m; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.697916030884	426
Coq.ZArith.Znat.N2Z.inj_le	40
Coq.ZArith.Znat.N2Z.inj_lt	40	1.10	synth with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite inj_compare).	3.86426401138	1116
Coq.ZArith.Znat.N2Z.inj_ge	40	0.1.0.1.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: easy; only 1: intros H; only 1: easy; only 1: now destruct n, m).	0.933703899384	455
Coq.ZArith.Znat.N2Z.inj_gt	40	3.2.2.3.3	synth with cache (only 1: destruct n, m; only 1: intuition; only 1: now destruct p; only 1: now destruct p; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	5.76509308815	2851
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	2	synth with cache (only 1: now destruct n, m).	0.00993204116821	3
Coq.ZArith.Znat.N2Z.inj_mul	40
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0214729309082	6
Coq.ZArith.Znat.N2Z.inj_pred_max	40	29.0.3.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p).	5.20994305611	6602
Coq.ZArith.Znat.N2Z.inj_pred	40	3.6.9	synth with cache (only 1: intro H; only 1: unfold Z.succ, Z.pred; only 1: now destruct n as [| [p| p| ]]).	4.25487995148	1744
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.2.1.3.1	synth with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.287129163742	206
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0144340991974	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0423140525818	10
Coq.ZArith.Znat.Z2N.id	40	0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0279731750488	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	4.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: intros; only 1: now subst).	0.855928897858	394
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: now N.nzsimpl).	0.0201082229614	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now N.nzsimpl).	0.0353219509125	7
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0104448795319	2
Coq.ZArith.Znat.Z2N.inj_add	40	0.0.0.1.2.2.1.1.0.7	synth with cache (only 1: destruct n as [| p| p]; only 1: intros; only 1: now N.nzsimpl; only 1: simpl; only 1: intro Hn; only 1: destruct m as [| m| m]; only 1: trivial; only 1: trivial; only 1: easy || now destruct Hm; only 1: easy || now destruct y).	8.40444111824	4237
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	1.22743082047	320
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.1.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros Hn; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: easy).	0.842494010925	366
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.1.1.1.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.0673248767853	43
Coq.ZArith.Znat.Z2N.inj_compare	40	0.0.0.0.0.0.1.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: now destruct 1 || now destruct 2).	1.03208017349	370
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40	0.12.0	synth with cache (only 1: intros Hn Hm; only 1: unfold N.ltb, N.lt; only 1: now rewrite <- N2Z.inj_compare, !id).	0.963624000549	614
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0100891590118	2
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0211679935455	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	0.0.6.1.0.2.0.0.0.2.3.0	synth with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct Hn).	24.5327570438	17407
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.0232858657837	5
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0180711746216	6
Coq.ZArith.Znat.Zabs2N.id_abs	40	6	synth with cache (only 1: now destruct n).	0.0214610099792	7
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.00899481773376	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	synth with cache (only 1: trivial).	0.00732493400574	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0304470062256	7
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.00975203514099	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	2	synth with cache (only 1: now destruct n).	0.0119061470032	3
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.4.0.0.2.0	synth with cache (only 1: unfold Z.succ; only 1: destruct n as [| n| n]; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct n; only 1: now destruct 1 || intros _).	0.757730007172	317
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.0532221794128	10
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.1.1.1.3.0.5	synth with cache (only 1: destruct n; only 1: easy; only 1: generalize (Pos.sqrtrem_spec p); only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).	1.85282278061	739
Coq.ZArith.Znat.Zabs2N.inj_compare	40	0.1.0.0.0.0.0.0.0.2.2	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: trivial; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: now destruct 1; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear).	2.80860590935	1262
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0163581371307	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0171689987183	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: assert (forall p q, Z.abs_N (Z.rem (Z.pos p) (Z.pos q)) = (N.pos p mod N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_rem; only 1: now apply Z.rem_nonneg; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	6.09375405312	2980
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0114221572876	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0076539516449	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	6.10.1.1.1.3	synth with cache (only 1: revert n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: now rewrite Pos.add_1_r).	33.5054700375	10677
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.0.9.8	synth with cache (only 1: Nat.cases ltac:(n); only 1: easy; only 1: intros n; only 1: now destruct n).	1.12684106827	597
Coq.ZArith.Znat.Nat2Z.id	40	0.0.0.0.0.1.3	synth with cache (only 1: Nat.cases ltac:(n); only 1: simpl; only 1: Nat.order_nz; only 1: intro n; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.223103046417	46
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.0234241485596	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	10.5.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: auto).	37.5056481361	21719
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Nat2Z.inj_div	40
Coq.ZArith.Znat.Nat2Z.inj_mod	40
Coq.ZArith.Znat.Nat2Z.inj_pow	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.5.5.6.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: intros; only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	30.5101079941	23192
Coq.ZArith.Znat.Z2Nat.inj	40	8.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: auto).	0.252173900604	142
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0242669582367	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	5	synth with cache (only 1: trivial).	0.00778698921204	6
Coq.ZArith.Znat.Z2Nat.inj_pos	40	1	synth with cache (only 1: trivial).	0.00793290138245	2
Coq.ZArith.Znat.Z2Nat.inj_neg	40	1	synth with cache (only 1: reflexivity).	0.00906085968018	2
Coq.ZArith.Znat.Z2Nat.inj_add	40	0.0.0.0.1.1.1.0.0.0.0.1.7	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n], m as [| m| m]; only 1: now Z.nzsimpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros _; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || intros _; only 1: trivial; only 1: now destruct 1 || intros _; only 1: now destruct 1 || intros _).	9.73046708107	4114
Coq.ZArith.Znat.Z2Nat.inj_mul	40	0.0.0.0.1.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	18.4560689926	6632
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Z2Nat.inj_div	40
Coq.ZArith.Znat.Z2Nat.inj_mod	40
Coq.ZArith.Znat.Z2Nat.inj_pow	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0090000629425	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0160341262817	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	2.6723279953	1703
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0202610492706	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	5	synth with cache (only 1: split).	0.00829482078552	6
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.00779104232788	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.00764393806458	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40	2.0.0.0.1.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	22.8469781876	9105
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.020366191864	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0200529098511	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0199110507965	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	1.0.0.0.1.3.1.0.0	synth with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).	3.59545898438	1922
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.0.0.0.1.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	5.82083010674	3460
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0151147842407	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	13.2795951366	5928
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	1.0.0.0.3.22	synth with cache (only 1: intros n Hn; only 1: case Z.compare_spec; only 1: unfold Z.le, Z.max; only 1: intuition; only 1: intuition; only 1: intuition Z.order).	5.73799490929	4569
Coq.ZArith.Zcompare.Zlt_compare	40	0.1.1.4.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: intro H1; only 1: trivial; only 1: Z.order).	0.500796079636	143
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0597870349884	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0619029998779	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	14	synth with cache (only 1: now destruct a).	0.19545507431	175
Coq.ZArith.Zquot.Zrem_0_l	40	2	synth with cache (only 1: now destruct a).	0.0100729465485	3
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.00966691970825	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	29.4478778839	8798
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.3.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	1.41390895844	106
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.18407201767	18
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.083416223526	24
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.0723659992218	24
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0339088439941	5
Coq.ZArith.Zquot.Z_quot_pos	40	3.0.0.0.0.1.25.1.0	synth with cache (only 1: destruct b; only 1: now destruct a; only 1: induction a as [a IHa| a IHa| ]; only 1: trivial; only 1: intros; only 1: now apply Z.quot_pos; only 1: now destruct 1 || now destruct 2; only 1: intros; only 1: now destruct Hn || easy).	26.1742069721	21098
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.0.1.1.3.0	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.mod_divide; only 1: rewrite Z.rem_divide; only 1: intuition; only 1: trivial; only 1: trivial).	0.55259680748	190
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	65.7	synth with cache (only 1: intro n; only 1: now constructor).	19.2037930489	46723
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	4.5	synth with cache (only 1: intros m Hm; only 1: exact 0%Z).	0.0704300403595	45
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0433950424194	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	8.0	synth with cache (only 1: simpl; only 1: trivial).	0.0540878772736	12
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	4.0.1.0	synth with cache (only 1: unfold Bcons; only 1: intros; only 1: simpl; only 1: trivial).	0.164924860001	24
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	0.2.6.0.3.0.29	synth with cache (only 1: intro n; only 1: Z.swap_greater; only 1: destruct n as [| p| p]; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: trivial).	11.5737581253	10284
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0	synth with cache (only 1: auto).	0.0304310321808	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	0.0.0.0.0.7	synth with cache (only 1: intros n; only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: now try Z.order').	1.32301902771	416
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40	0.1.17.18	synth with cache (only 1: intros m Hm; only 1: fix le_div2 1; only 1: intro q; only 1: trivial).	9.1187620163	6887
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.9	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.140053987503	34
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.3.1.10.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	2.06376600266	2469
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.023768901825	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	synth with cache (only 1: now destruct n).	0.02299284935	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.18.38	synth with cache (only 1: revert n; only 1: induction n; only 1: apply add_0_r; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	3.59630393982	3858
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	1.0.0.16	synth with cache (only 1: destruct m; only 1: now destruct n; only 1: now destruct n; only 1: now destruct n).	0.299843072891	201
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.4	synth with cache (only 1: simpl; only 1: trivial).	0.0227291584015	6
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0161650180817	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0182271003723	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0198578834534	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0234811306	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0186190605164	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.023157119751	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	10.3.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	20.1018180847	6114
Coq.ZArith.BinInt.Z.ltb_lt	40	12.2.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	3.17283606529	1218
Coq.ZArith.BinInt.Z.leb_le	40	10.0.2.5	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: now destruct (N.even n)).	10.7023980618	4134
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0	synth with cache (only 1: unfold ltb, lt; only 1: apply iff_refl).	0.0251860618591	2
Coq.ZArith.BinInt.Z.compare_le_iff	40	1	synth with cache (only 1: reflexivity).	0.236428022385	33
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.1.0.1.1.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: intuition).	0.222758054733	56
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	6.0	synth with cache (only 1: unfold le, max; only 1: now destruct n).	0.119682073593	23
Coq.ZArith.BinInt.Z.abs_neq	40	0.0.0.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial; only 1: trivial).	0.851071119308	224
Coq.ZArith.BinInt.Z.sgn_null	40	0.4.0	synth with cache (only 1: intros; only 1: now rewrite Pos.sub_xI_xI || now rewrite Pos.sub_xO_xO || now rewrite Pos.sub_xO_xI || now rewrite Pos.sub_xI_xO || subst; only 1: reflexivity).	0.0316021442413	7
Coq.ZArith.BinInt.Z.sgn_pos	40	0.0.0.2.6.0	synth with cache (only 1: destruct n; only 1: intros q; only 1: now subst; only 1: trivial; only 1: intros H; only 1: destr_eq H).	0.682377099991	321
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0264108181	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: now destruct n).	0.0199630260468	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	1.0	synth with cache (only 1: simpl; only 1: now rewrite <- ?add_le_mono_l).	0.0244030952454	3
Coq.ZArith.BinInt.Z.square_spec	40	1.0.2.1.0.1.0.0.9	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	3.37674689293	959
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	synth with cache (only 1: now destruct n).	0.0209078788757	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	1.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: intros; only 1: now split).	0.0416121482849	8
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	4.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0224161148071	6
Coq.ZArith.BinInt.Z.succ_double_spec	40	4	synth with cache (only 1: now destruct n).	1.92896914482	176
Coq.ZArith.BinInt.Z.pred_double_spec	40	5.0	synth with cache (only 1: simpl; only 1: now destruct n).	0.249361991882	19
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	1.93	synth with cache (only 1: fix even_spec 1; only 1: now repeat split).	36.4614710808	49778
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.189246892929	17
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40	11.0.0.9.0.0.0	synth with cache (only 1: split; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m; only 1: intros (m, H); only 1: exists (- m); only 1: now destruct n, m).	7.18146705627	5888
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.1.1.0.0.1.0.0.0.6	synth with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: easy; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: easy).	16.7593619823	11022
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0454790592194	7
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0541169643402	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	3	synth with cache (only 1: now destruct n).	0.124834060669	42
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0.0	synth with cache (only 1: intro Hn; only 1: now destruct n).	0.0262489318848	2
Coq.ZArith.BinInt.Z.testbit_odd_0	40	1.6.2.1.2.32	synth with cache (only 1: destruct a as [| a| a]; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	14.4714889526	9132
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	synth with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0186231136322	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.mod_bound_pos_le	40	0.0.1.0.0.0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order; only 1: apply Private_NZDiv.mod_le; only 1: order; only 1: trivial).	1.70980095863	393
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0.13.1.0	synth with cache (only 1: intro H; only 1: apply le_succ_l; only 1: destruct (le_gt_cases n m); only 1: now apply le_succ_l; only 1: now apply le_succ_l).	1.2220761776	685
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0148799419403	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	2	synth with cache (only 1: apply N.ge_le_iff).	0.414345979691	115
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0152599811554	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40	12.3.6.11.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite Pos.leb_le, <- Pos.compare_le_iff; only 1: revert m; only 1: fix even_spec 1; only 1: easy || now destruct 1).	26.1585168839	13452
Coq.ZArith.BinInt.Z.gtb_lt	40	8.3.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	6.84963297844	2717
Coq.ZArith.BinInt.Z.geb_le	40	11.2.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: tauto).	9.96613121033	3574
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	2	synth with cache (only 1: apply add_cancel_l).	0.242608070374	24
Coq.ZArith.BinInt.Z.mul_reg_l	40	0	synth with cache (only 1: apply mul_cancel_l).	0.0187149047852	1
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.2	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0271821022034	4
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	1.0.0	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.131623029709	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.3.0.0.0.0.0.0	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.19582390785	360
Coq.ZArith.BinInt.Pos2Z.id	40	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0554740428925	7
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: congruence).	0.0214860439301	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0385031700134	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	9	synth with cache (only 1: now destruct p).	0.0310571193695	10
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	30	synth with cache (only 1: easy).	0.55529499054	906
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: easy).	0.0175058841705	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	5	synth with cache (only 1: trivial).	0.131062984467	6
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0272500514984	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	2	synth with cache (only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0272099971771	3
Coq.ZArith.BinInt.Pos2Z.inj_add	40	2.1.1	synth with cache (only 1: revert q; only 1: intros q; only 1: reflexivity).	0.390677928925	78
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	6	synth with cache (only 1: now destruct p).	0.0695080757141	35
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0298261642456	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	1.0.3.26.0.9	synth with cache (only 1: destruct q; only 1: now apply Pos.iter_swap_gen; only 1: revert q; only 1: intros H; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	15.4788150787	10738
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0219368934631	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0288310050964	2
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: reflexivity).	0.0174329280853	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.0405440330505	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	synth with cache (only 1: reflexivity).	0.0306129455566	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	2.1.2.0	synth with cache (only 1: revert q; only 1: simpl; only 1: intros a; only 1: trivial).	0.440328836441	114
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	1.1	synth with cache (only 1: simpl; only 1: trivial).	0.0231199264526	4
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	0.0.0.0	synth with cache (only 1: generalize (Pos.ggcd_gcd p q); only 1: simpl; only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: congruence).	0.0414900779724	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.5.1.1.0.4	synth with cache (only 1: destruct n; only 1: intro Hn; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: now destruct 1 || intros _).	0.815984964371	587
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: congruence).	0.0202128887177	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0358610153198	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.0216989517212	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0425930023193	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	2	synth with cache (only 1: easy).	0.0368428230286	11
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	3	synth with cache (only 1: now destruct p).	0.0451350212097	11
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0199608802795	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0252981185913	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	1	synth with cache (only 1: now f_equal).	0.0270900726318	2
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0185618400574	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.3	synth with cache (only 1: unfold Pos.le; only 1: easy').	0.0392081737518	8
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0	synth with cache (only 1: easy).	0.0163359642029	1
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0204820632935	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0273950099945	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0196559429169	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.020831823349	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.1	synth with cache (only 1: simpl; only 1: trivial).	0.0288200378418	3
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0169830322266	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.0178239345551	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2.2.3	synth with cache (only 1: revert q; only 1: intro n; only 1: trivial).	0.293409824371	56
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0175487995148	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0203928947449	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.1.0.0.1.2.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: apply negb_sym; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.661123991013	253
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.0217568874359	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: reflexivity).	0.0192899703979	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0	synth with cache (only 1: now destruct x).	0.0284287929535	1
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0249512195587	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	2.0.3.1.0.0.0.4	synth with cache (only 1: intros Hab; only 1: destruct x; only 1: apply Pos2Nat.inj; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: now destruct p; only 1: easy).	1.86380910873	1166
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	1.0.0.0.0.5.10.3.10.14	synth with cache (only 1: unfold Z.lt; only 1: symmetry; only 1: destruct x; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: reflexivity; only 1: easy).	11.8121099472	17075
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.3.0.1.0.1.0.1	synth with cache (only 1: destruct y; only 1: easy || now destruct y; only 1: destruct x; only 1: easy || now destruct y; only 1: simpl; only 1: intros H; only 1: congruence; only 1: easy || now destruct y; only 1: easy || now destruct y).	2.89808297157	1076
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.0.2	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: simpl; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.13462305069	15
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0706629753113	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0686149597168	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0690400600433	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.289615154266	73
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	3.1	synth with cache (only 1: intros x y H; only 1: now f_equal).	0.0255949497223	6
Coq.ZArith.BinInt.ZL0	40	2	synth with cache (only 1: auto).	0.0196080207825	3
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5	synth with cache (only 1: now Z.nzsimpl').	0.42763710022	41
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.0418479442596	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	7	synth with cache (only 1: now destruct n).	0.151937961578	8
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	1.0	synth with cache (only 1: unfold Zlength; only 1: split).	0.0430510044098	3
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.47	synth with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	28.9327158928	19814
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.2.1.0.0.0.2.1.0.1.6	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: split; only 1: simpl; only 1: destruct n as [| n| n]; only 1: now split; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct n as [| n| n]; only 1: now split; only 1: trivial; only 1: trivial).	3.92785000801	3202
Coq.ZArith.Zeven.Zeven_odd_bool	40	39	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	2.55204892159	6313
Coq.ZArith.Zeven.Zeven_odd_dec	40	6.8.4.0.0.31.51	synth with cache (only 1: left; only 1: nzinduct n; only 1: simpl; only 1: auto; only 1: fix even_spec 1; only 1: intros; only 1: now Z.nzsimpl).	5.12126493454	10538
Coq.ZArith.Zeven.Zeven_dec	40	1.0.0.7.1.1.0.0.7.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: now right; only 1: now left || now right; only 1: tauto).	9.1501531601	9687
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.25	synth with cache (only 1: destruct n; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	5.54033398628	3452
Coq.ZArith.Zeven.Zeven_not_Zodd	40	0.5.3.0.0.21.8	synth with cache (only 1: intros H; only 1: destruct n; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	1.90532183647	3542
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0299849510193	5
Coq.ZArith.Zeven.Zeven_Sn	40	26	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.859554052353	727
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40	0.4.0.0.0.0.0.2.4.8	synth with cache (only 1: destruct n as [| p| p]; only 1: easy || now destruct y; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: now destruct p; only 1: intros H; only 1: tauto; only 1: simpl; only 1: now destruct p).	10.8742008209	9583
Coq.ZArith.Zeven.Zeven_div2	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0137219429016	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: now try Z.order'; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now try Z.order'; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: now destruct 1 || intros _; only 1: intros a; only 1: simpl; only 1: easy).	22.1995429993	5538
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	9.20	synth with cache (only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).	3.06116890907	798
Coq.ZArith.Zeven.Zeven_quot2	40	2.1.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.364343881607	15
Coq.ZArith.Zeven.Zodd_quot2	40	0.4.0	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.243010044098	16
Coq.ZArith.Zeven.Zodd_quot2_neg	40	3.0.0.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: now destruct n).	0.296581029892	34
Coq.ZArith.Zeven.Zquot2_opp	40	0.0.1.5.1.0.0.0.5.2.1.29	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: auto with relations; only 1: reflexivity; only 1: reflexivity).	15.5113010406	14754
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	2.0.1	synth with cache (only 1: intros H; only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.0251660346985	11
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: exists (Z.div2 n); only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	7.34661197662	1868
Coq.ZArith.Zeven.Zeven_2p	40
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	5.1.0.0.1.37	synth with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: now destruct p).	9.59479784966	4517
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.15962600708	14
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0405130386353	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0394661426544	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0221390724182	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	synth with cache (only 1: apply Z.divide_opp_l).	0.0221037864685	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	synth with cache (only 1: apply Z.divide_abs_l).	0.0216100215912	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.0.5.13	synth with cache (only 1: intros x y H; only 1: rewrite Z.mod_divide; only 1: intro H0; only 1: assumption; only 1: trivial).	8.84173703194	4993
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	14.0	synth with cache (only 1: intro H; only 1: Z.order).	3.55152392387	1532
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.1.0.0.0.0.1	synth with cache (only 1: split; only 1: exists 1; only 1: Z.nzsimpl; only 1: Z.order; only 1: exists 0; only 1: now Z.nzsimpl; only 1: trivial).	0.267060995102	44
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.2.0.2.14.11	synth with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl'; only 1: easy; only 1: trivial).	2.7747130394	1844
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.4	synth with cache (only 1: split; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0428688526154	8
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.10333108902	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.116266965866	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0633959770203	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.1.0.15.5.15	synth with cache (only 1: intros a b; only 1: simple induction 1; only 1: split; only 1: auto with zarith; only 1: intuition; only 1: intuition).	18.1733601093	11797
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.2.0.5	synth with cache (only 1: split; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: trivial).	0.556436061859	202
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	44	synth with cache (only 1: now destruct 1).	0.852859020233	1227
Coq.ZArith.Znumtheory.not_prime_1	40
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40	1.6.19	synth with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	11.2892858982	8888
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq_full	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.0	synth with cache (only 1: intros Hb; only 1: now destruct (Z.eq_dec b 0) as [->| ?]; [ destruct a | apply Z.div_mod ]).	0.0132620334625	2
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	5	synth with cache (only 1: Bool.destr_bool).	0.427556991577	129
Coq.ZArith.Zdiv.Zmod_0_r	40	0.1.1.0.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: reflexivity).	0.0216639041901	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	3.0	synth with cache (only 1: intros; only 1: auto).	0.010185956955	5
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0.0	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0213260650635	8
Coq.ZArith.Zdiv.Zmod_1_r	40	0.8.1	synth with cache (only 1: intro n; only 1: Z.nzsimpl; only 1: Z.order_nz).	0.335565090179	270
Coq.ZArith.Zdiv.Zdiv_1_r	40	5.1.1	synth with cache (only 1: intro n; only 1: symmetry; only 1: now Z.nzsimpl').	0.0988841056824	41
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.0.5.6	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: Z.order; only 1: trivial).	1.69729495049	1119
Coq.ZArith.Zdiv.Z_div_nonneg_nonneg	40
Coq.ZArith.Zdiv.Z_mod_nonneg_nonneg	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0184490680695	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.4	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0678169727325	41
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0559659004211	13
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40	0.0.26.2	synth with cache (only 1: intros n m p; only 1: unfold Z.sub, Z.succ, Z.pred; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	10.0028600693	11416
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0175199508667	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0684959888458	19
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	6	synth with cache (only 1: split).	0.0204749107361	16
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	0.6	synth with cache (only 1: intros n m Hm; only 1: now rewrite <- ?Z.add_le_mono_l).	0.0359010696411	23
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	14.2.4.22	synth with cache (only 1: intros n m; only 1: unfold eqm; only 1: intros; only 1: Z.order).	27.943983078	35437
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	5.2.25	synth with cache (only 1: intro m; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	24.9346411228	17900
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.4.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.0994758605957	33
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	2.0.3.0	synth with cache (only 1: intros a b c **; only 1: zero_or_not c; only 1: now Z.nzsimpl; only 1: now apply Z.mod_add).	0.358552932739	72
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.3	synth with cache (only 1: intros a b ?; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: easy).	0.0426471233368	32
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.2.5.0.1	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: intros EQ; only 1: rewrite Z.div_exact; only 1: auto; only 1: Z.order).	1.30649590492	700
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.6.3.6	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros H; only 1: now zero_or_not b; [ intros; subst | apply Z.mod_opp_l_z ]).	2.40312600136	2621
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.5	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.032989025116	22
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	1	synth with cache (only 1: congruence).	0.0152060985565	11
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	10.3.0.26.7.2.0	synth with cache (only 1: intros a n Hn; only 1: Z.destruct_max n; only 1: intros Hab; only 1: Z.swap_greater; only 1: auto; only 1: intros EQ; only 1: auto with relations).	26.4620099068	47919
Coq.ZArith.Zabs.Zabs_intro	40	21.3	synth with cache (only 1: intros n m p; only 1: now destruct m).	2.50885009766	3939
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0172090530396	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	2	synth with cache (only 1: trivial).	0.0182719230652	3
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.017982006073	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.0206019878387	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0158231258392	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	10	synth with cache (only 1: reflexivity).	0.966925144196	74
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	5	synth with cache (only 1: trivial).	0.215667963028	34
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	9	synth with cache (only 1: trivial).	0.0194160938263	10
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0160911083221	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0163149833679	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: reflexivity).	0.0202281475067	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0160901546478	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0193569660187	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0102291107178	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	synth with cache (only 1: trivial).	0.0101420879364	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	83	synth with cache (only 1: apply Pos2Nat.inj_iter).	9.51249814034	7605
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.2.0.0.0.2	synth with cache (only 1: destruct n as [| n| n]; only 1: now destruct 1 || intros _; only 1: trivial; only 1: now destruct 1 || intros _; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1 || intros _).	0.0811941623688	25
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0.0.7	synth with cache (only 1: destruct n; only 1: trivial; only 1: auto with arith).	0.0241439342499	10
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	2	synth with cache (only 1: trivial).	0.0114758014679	3
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40	0.1.0.2.0.0.0.1.2	synth with cache (only 1: destruct n; only 1: now destruct 1 || intros _; only 1: reflexivity; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: trivial; only 1: now destruct 1 || intros _).	5.38725805283	1725
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	6.0.0.0.26.30.15	synth with cache (only 1: simpl; only 1: N.nzsimpl'; only 1: revert p; only 1: unfold Z.pow_pos; only 1: intros; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: now destruct Hn || easy).	37.4215638638	25380
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	0.1	synth with cache (only 1: apply Zeven_div2; only 1: split).	0.0304977893829	17
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	1.0.3.0.0.0.5.6.0.0.0	synth with cache (only 1: Nat.induct n; only 1: simpl; only 1: trivial; only 1: induction n as [| n IHn]; only 1: destruct 1; only 1: simpl; only 1: auto; only 1: intros H; only 1: Nat.nzsimpl; only 1: simpl; only 1: now f_equal).	18.7953441143	7492
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0113010406494	1
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	0.1.6.0.1.0.34.0	synth with cache (only 1: Z.swap_greater; only 1: destruct x; only 1: now destruct 1 || intros _; only 1: split; only 1: now destruct 1 || intros _; only 1: easy; only 1: simpl; only 1: now destruct 1 || trivial).	11.0530769825	11800
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.0197100639343	2
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0194170475006	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.0207118988037	2
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0949881076813	34
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.182526826859	65
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0397839546204	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.037957906723	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.3.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros; only 1: now case Z.compare_spec).	0.0323920249939	6
Coq.ZArith.Zmax.Zpos_max_1	40	1.0.0.34.10	synth with cache (only 1: bitwise as m ?; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial).	4.02458906174	4548
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	2.0.3.8	synth with cache (only 1: destruct p; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: now Z.nzsimpl').	0.683526039124	226
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	3.2.5.35	synth with cache (only 1: destruct a; only 1: auto; only 1: trivial; only 1: reflexivity).	13.1259410381	7701
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	1.0.0.1.2.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: intro r; only 1: auto; only 1: left; only 1: auto; only 1: tauto).	0.90059709549	356
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	11	synth with cache (only 1: intuition Z.order).	0.610918045044	226
Coq.ZArith.Zorder.Zlt_not_le	40	1	synth with cache (only 1: intuition Z.order).	0.0107140541077	2
Coq.ZArith.Zorder.Zle_not_gt	40	2.5	synth with cache (only 1: unfold Z.le, Z.max; only 1: easy').	0.0741481781006	41
Coq.ZArith.Zorder.Zgt_not_le	40	8	synth with cache (only 1: auto).	0.0194420814514	16
Coq.ZArith.Zorder.Znot_ge_lt	40	0.11	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.117801904678	49
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0159389972687	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.00775194168091	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0167570114136	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	2.1.1	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.167064905167	29
Coq.ZArith.Zorder.Zgt_irrefl	40	3	synth with cache (only 1: now Z.nzsimpl').	0.0906510353088	13
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0944969654083	3
Coq.ZArith.Zorder.Zle_gt_trans	40	8.0	synth with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.0965120792389	25
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0211989879608	2
Coq.ZArith.Zorder.Zge_trans	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0266959667206	3
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0190300941467	2
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.6	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0534257888794	34
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0095100402832	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.00685214996338	1
Coq.ZArith.Zorder.Zgt_succ	40	1.3	synth with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.010134935379	6
Coq.ZArith.Zorder.Znot_le_succ	40	1.18	synth with cache (only 1: apply Z.lt_nge; only 1: apply Z.lt_succ_diag_r).	0.315410852432	482
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.00711011886597	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.00719094276428	1
Coq.ZArith.Zorder.Zgt_succ_le	40
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.00728297233582	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0186288356781	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.00907015800476	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	2.1.3.1.1.1.4	synth with cache (only 1: destruct n as [| [p| p| ]| ]; only 1: apply Z.le_succ_l; only 1: easy; only 1: now destruct 1; only 1: now destruct 1; only 1: intros H; only 1: easy).	3.03527808189	2350
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.9	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.140964031219	91
Coq.ZArith.Zorder.Zle_neg_pos	40	1.1	synth with cache (only 1: intros a; only 1: easy).	0.0188519954681	4
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0.2.3.0	synth with cache (only 1: intros n; only 1: symmetry; only 1: rewrite Z.compare_sub; only 1: simpl; only 1: trivial).	0.0212650299072	10
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.0126440525055	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0.1	synth with cache (only 1: intros a; only 1: reflexivity).	0.0106070041656	3
Coq.ZArith.Zorder.Zle_0_nat	40	3.3.8.1.1	synth with cache (only 1: intros n; only 1: Nat.induct ltac:(n); only 1: easy; only 1: intros Hn Hm; only 1: easy).	1.14354991913	1219
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	1	synth with cache (only 1: apply Z.add_lt_mono_l).	0.00888419151306	2
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0	synth with cache (only 1: apply Z.add_lt_mono_r).	0.00866293907166	1
Coq.ZArith.Zorder.Zplus_le_reg_l	40	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.0079460144043	1
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.00922012329102	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	3	synth with cache (only 1: apply Z.add_lt_mono_l).	0.00981998443604	4
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	synth with cache (only 1: apply Z.add_lt_mono_r).	0.00989007949829	4
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0206618309021	3
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0213639736176	2
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0284779071808	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0191259384155	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.009281873703	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.00814485549927	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0245759487152	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	7.0.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.260341882706	101
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	2.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0322549343109	5
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0204157829285	13
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0167841911316	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00867009162903	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0177731513977	3
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00906801223755	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0321519374847	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0292649269104	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	14	synth with cache (only 1: now destruct n, m).	3.58572602272	952
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	1.0.0.10.0	synth with cache (only 1: Z.swap_greater; only 1: destruct n as [| p| p]; only 1: easy || now destruct y; only 1: apply Z.mul_le_mono_pos_r; only 1: easy).	0.362351179123	298
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	2.1.4.1.0.3.3.0.1.1.19.7	synth with cache (only 1: intro H; only 1: destruct n, m; only 1: easy; only 1: now Z.nzsimpl; only 1: discriminate; only 1: trivial; only 1: split; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now Z.nzsimpl; only 1: trivial).	34.7264778614	29082
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0147840976715	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0751490592957	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.00903296470642	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40	0.0.0.0.3.1.5	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: unfold Z.geb, Z.leb; only 1: unfold Z.le, Z.ge; only 1: destruct (n ?= m); only 1: discriminate; only 1: trivial; only 1: discriminate).	1.07590007782	513
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	3.0	synth with cache (only 1: unfold Z.le, Z.min; only 1: apply Z.leb_le).	0.0116019248962	5
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	24	synth with cache (only 1: now Z.nzsimpl).	0.569329023361	524
Coq.ZArith.Zbool.Zone_min_pos	40	3.1.8	synth with cache (only 1: intros; only 1: unfold Z.geb, Z.leb; only 1: now destruct n as [| [| | ]| [| | ]]).	0.536636829376	288
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.0.9.1	synth with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.572900056839	299
Coq.ZArith.Zbool.Zge_is_le_bool	40	7.2.13	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	4.52141594887	3702
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	1.1.2.2.6	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro q; only 1: rewrite even_spec; only 1: now split).	1.1023170948	688
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	3.2.0.3.7.3	synth with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: easy).	10.3725550175	7560
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0153269767761	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	0.0.0.0.1.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: congruence; only 1: congruence; only 1: congruence).	0.0342979431152	7
Coq.ZArith.Zbool.Zeq_bool_neq	40	0.0.3.0.6.0.1	synth with cache (only 1: unfold Zeq_bool; only 1: intro H1; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: discriminate; only 1: discriminate; only 1: discriminate).	1.08398509026	892
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0.1	synth with cache (only 1: intro r; only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.104507923126	6
Coq.ZArith.ZArith_dec.Zcompare_rect	40	3.0.3.0.10.3.1.2	synth with cache (only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: generalize (Z.compare_eq n m); only 1: intro H; only 1: destruct (n ?= m); only 1: auto; only 1: intuition; only 1: intuition).	4.40313100815	2409
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0635669231415	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	0.0.0.0.17	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.38425898552	543
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	4.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.834556102753	209
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.1.0.0.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).	0.0593400001526	13
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.0.6	synth with cache (only 1: fix gcd_divide 1; only 1: intros n m; only 1: auto with arith).	1.0414659977	48
Coq.ZArith.ZArith_dec.Z_dec'	40	1.0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros x y; only 1: case (Z_lt_ge_dec x y); only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intro H; only 1: generalize (Z.ge_le _ _ H); only 1: intro H0; only 1: case (Z_le_lt_eq_dec y x H0); only 1: intro H1; only 1: left; only 1: right; only 1: assumption; only 1: intro; only 1: right; only 1: symmetry; only 1: assumption).	21.1779069901	11257
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.0	synth with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0466289520264	4
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.00876498222351	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.3.1.0	synth with cache (only 1: destruct b as [| p| p]; only 1: Z.order; only 1: easy || now destruct y; only 1: easy).	0.0255498886108	8
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	synth with cache (only 1: now Z.nzsimpl').	0.0363049507141	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.3.0	synth with cache (only 1: change 2 with (1 + 1); only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0137438774109	8
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	4.4	synth with cache (only 1: Z.nzsimpl'; only 1: now Z.nzsimpl).	0.923817873001	75
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	10	synth with cache (only 1: now Z.nzsimpl).	0.0582509040833	24
Coq.omega.OmegaLemmas.Zred_factor6	40	1.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.176963806152	6
Coq.omega.OmegaLemmas.new_var	40	0.12.75	synth with cache (only 1: intros n; only 1: exists n; only 1: reflexivity).	18.0834438801	51028
Coq.omega.OmegaLemmas.OMEGA1	40	1.1.12	synth with cache (only 1: intro; only 1: intros; only 1: Z.order).	0.0988202095032	115
Coq.omega.OmegaLemmas.OMEGA2	40	18.9	synth with cache (only 1: intros; only 1: Z.order_pos).	3.94856500626	1156
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.1	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.052570104599	4
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0251450538635	4
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0409169197083	2
Coq.omega.OmegaLemmas.OMEGA18	40	20.2.27.31	synth with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: auto).	7.00133991241	12494
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0458080768585	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.2.0.2	synth with cache (only 1: intros ->; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0575799942017	18
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.1.1.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).	0.0743398666382	8
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.4.4.0	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: destruct r using Acc_inv_dep; only 1: auto).	0.251734972	106
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.10.8.0.4	synth with cache (only 1: intros; only 1: destruct r using Acc_inv_dep; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	9.85926198959	9688
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0354890823364	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0166790485382	2
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.9.6.1	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	1.63841509819	1261
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.0.0	synth with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.0267770290375	6
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	0.1.0.3.6	synth with cache (only 1: intros n P IH0 IHS; only 1: intro H; only 1: destruct H; only 1: destruct e; only 1: auto).	0.306663990021	317
Coq.Program.Equality.JMeq_eq_refl	40	2	synth with cache (only 1: apply UIP_refl).	0.0181510448456	3
Coq.Program.Equality.UIP_refl_refl	40	4	synth with cache (only 1: apply UIP).	0.106589078903	61
Coq.Program.Equality.inj_pairT2_refl	40	19	synth with cache (only 1: apply UIP_refl).	0.108151912689	165
Coq.Program.Equality.solution_left	40	0.0.7	synth with cache (only 1: intros y H; only 1: destruct 1; only 1: exact y).	0.0323889255524	10
Coq.Program.Equality.solution_right	40	1.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0299460887909	4
Coq.Program.Equality.deletion	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.0218257904053	3
Coq.Program.Equality.simplification_heq	40	5.10.13	synth with cache (only 1: intros; only 1: subst; only 1: auto).	0.499873876572	651
Coq.Program.Equality.simplification_existT2	40	0.0.0.6.1	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.27437210083	85
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0266759395599	3
Coq.Program.Combinators.compose_id_left	40	0.0	synth with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0166599750519	2
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0187530517578	2
Coq.Program.Combinators.compose_assoc	40	1.0.1	synth with cache (only 1: intros A B f g H x; only 1: intro a; only 1: reflexivity).	0.0195341110229	5
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0136971473694	2
Coq.Program.Combinators.curry_uncurry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0159709453583	2
Coq.Program.Combinators.uncurry_curry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0464470386505	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	2.0.23.1	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intros; only 1: auto).	8.08114504814	7450
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.2.1.1.0.0.0.0.3.2.0.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: intros; only 1: destruct H; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: apply IHstack).	9.98000216484	7956
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	7.2.7.4	synth with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: auto).	1.02618598938	944
Coq.Sorting.Permutation.Permutation.Permutation_refl'	40	2.6.2.1.0.3.0	synth with cache (only 1: intros l2; only 1: intro l; only 1: intros H; only 1: subst; only 1: induction l as [| ? l IHl]; only 1: firstorder  (subst; auto); only 1: now repeat constructor).	3.64976191521	2355
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	4	synth with cache (only 1: simpl_relation).	0.427015066147	52
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	2.0.0.4.0.0.1	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto); only 1: cbn; only 1: intuition; only 1: auto).	6.11001801491	2151
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.0.0.2.0.4	synth with cache (only 1: intro l1; only 1: intros l l' Hperm; only 1: induction l1; only 1: trivial; only 1: simpl; only 1: auto).	0.456367015839	160
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	4.0	synth with cache (only 1: intros ? ?; only 1: auto).	0.0802187919617	6
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.2.12	synth with cache (only 1: intros f Hf; only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	1.50928688049	694
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_count_occ	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_image	40
Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	1.9	synth with cache (only 1: intros x y; only 1: auto with datatypes).	0.163769960403	88
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	3.2	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0127820968628	7
Coq.Sorting.PermutSetoid.Permut.permut_trans	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	2.0.7.0	synth with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.918544054031	446
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	0.0.17.1.0.0	synth with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: trivial; only 1: trivial).	24.5516049862	10434
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	8.8.0.0.2	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl; only 1: auto with arith).	12.1202070713	5370
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.0.0.0.0.1.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	0.0842370986938	9
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	1.1.0.0.0.1.0.1	synth with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: revert H; only 1: lia).	2.63941597939	534
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	27.0.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	3.82161092758	6842
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.0.5.0	synth with cache (only 1: intro l'; only 1: intros x l; only 1: inversion 1; only 1: auto).	0.0287039279938	13
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.2.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0231258869171	5
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.2.0.0	synth with cache (only 1: intros l x; only 1: intros Hr; only 1: inversion_clear Hr; only 1: eauto).	0.0231149196625	6
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0.0	synth with cache (only 1: intros P ? ? l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0814580917358	4
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.6	synth with cache (only 1: simpl; only 1: auto).	0.0430500507355	8
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0405340194702	2
Coq.Sorting.Heap.defs.invert_heap	40	0.2.48	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).	3.48755407333	3245
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.2.0.0.0.0.1.0.0.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	1.76949596405	512
Coq.Sorting.Heap.defs.low_trans	40
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	2.3.1.1.8.3	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	1.69277000427	954
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	2.7	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.218186855316	76
Coq.Sorting.Heap.defs.list_to_heap	40	2.1.2	synth with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.0670909881592	16
Coq.Sorting.Heap.defs.heap_to_list	40	3.13	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.84449505806	571
Coq.Sorting.Heap.defs.treesort	40	9.2	synth with cache (only 1: fix merge 1; only 1: auto with *).	0.246881961823	129
Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40	5.10.9	synth with cache (only 1: intro l'; only 1: rewrite <- app_nil_r  at 1; only 1: easy).	1.73543190956	2497
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	3.0.6.26	synth with cache (only 1: intro l; only 1: intro l'; only 1: induction 1; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	11.1960949898	19528
Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	3.0.0	synth with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: split).	0.0290701389313	18
Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	1.3	synth with cache (only 1: intros; only 1: eauto using Add_head, Add_app).	0.048654794693	33
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	0.0.0.0.0.1.2	synth with cache (only 1: intros l1 l2; only 1: destruct l2 as [| b]; only 1: simpl; only 1: rewrite app_nil_r; only 1: trivial; only 1: replace (l1 ++ b :: l2) with ((l1 ++ [b]) ++ l2) by now rewrite <- app_assoc, <- app_comm_cons; only 1: now rewrite <- app_assoc).	0.0356318950653	10
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	0.0	synth with cache (only 1: intros l1 l2 l3; only 1: now rewrite (app_assoc l2)).	0.0140731334686	2
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	2	synth with cache (only 1: now intros ->).	0.0311779975891	3
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0800800323486	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0653190612793	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.107886075974	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0739269256592	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	0.0.0.1.10.0	synth with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: case Pos.compare_spec; only 1: intros n; only 1: now split; only 1: easy'; only 1: easy').	1.89312601089	503
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	10.0.1.1.1.13.3	synth with cache (only 1: destruct p; only 1: destr_bool; only 1: easy'; only 1: intuition; only 1: split; only 1: first [ congruence | intuition ]; only 1: easy).	24.4635810852	8521
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.115422010422	9
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.0.11	synth with cache (only 1: intros p; only 1: inversion 1; only 1: trivial).	0.526082038879	236
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40	3.0.45	synth with cache (only 1: fix odd_spec 1; only 1: intros EQ; only 1: auto).	1.59067797661	6163
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0131230354309	2
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.Init.Wf.Well_founded.Acc_inv	40	1.6.1	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.0628969669342	55
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.017874956131	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0185971260071	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.019336938858	6
Coq.Init.Peano.pred_Sn	40	3.0.1.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: trivial; only 1: simpl; only 1: split).	0.0281589031219	11
Coq.Init.Peano.not_eq_S	40	2.3.0	synth with cache (only 1: red; only 1: intro A; only 1: auto).	0.0545930862427	40
Coq.Init.Peano.O_S	40	6.2	synth with cache (only 1: intro n; only 1: discriminate).	0.0288619995117	21
Coq.Init.Peano.n_Sn	40	5.0.0.5.1	synth with cache (only 1: intro n; only 1: unfold not; only 1: induction n; only 1: discriminate; only 1: auto).	0.491690158844	622
Coq.Init.Peano.plus_n_O	40	0.2.0.0.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0454041957855	15
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0244071483612	6
Coq.Init.Peano.plus_n_Sm	40	1.0.1.4.2	synth with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.302012205124	147
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0208008289337	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0224361419678	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.2.2.1	synth with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0158059597015	9
Coq.Init.Peano.le_n_S	40	1.1.0.0.1	synth with cache (only 1: induction 1 as [| m _]; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0367820262909	28
Coq.Init.Peano.nat_case	40	1.2.5.3	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.177414894104	262
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.0.0.0.1.0.0.0.2.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	10.3438940048	5423
Coq.Init.Peano.min_r	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	13.5398008823	8103
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	0.1.1.1.1.0.1	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.25720715523	758
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	1.110.3	synth with cache (only 1: destruct 1; only 1: subst; only 1: repeat split).	8.67402005196	90769
Coq.Init.Datatypes.eq_true_ind_r	40	0.34	synth with cache (only 1: destruct 2; only 1: assumption).	0.328111886978	2027
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00939702987671	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00926899909973	3
Coq.Init.Datatypes.surjective_pairing	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.00963592529297	2
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0.0	synth with cache (only 1: destruct H; only 1: simpl; only 1: reflexivity).	0.0149238109589	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.1.1.1.0.1.1.1.0.5.2	synth with cache (only 1: intro H; only 1: destruct c, c'; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H).	19.2492921352	37895
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00285983085632	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	2.2.0.0.2	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00957083702087	41
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00419211387634	12
Coq.Init.Logic.and_iff_compat_l	40	2.0.0.0.2.0.1.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0781660079956	766
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0581660270691	285
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.460008144379	2239
Coq.Init.Logic.imp_iff_compat_l	40	9.9.2.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.11881685257	866
Coq.Init.Logic.imp_iff_compat_r	40	2.1.2.0.2.1.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.262433052063	1298
Coq.Init.Logic.not_iff_compat	40	1.1.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00715398788452	6
Coq.Init.Logic.neg_false	40	1.1.11.0.1.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.214534044266	1212
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).	38.1939799786	74096
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0773379802704	91
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.29444694519	645
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00759601593018	3
Coq.Init.Logic.iff_to_and	40	1.0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).	0.119287014008	191
Coq.Init.Logic.universal_quantification.inst	40	9	synth with cache (only 1: auto).	0.0106410980225	17
Coq.Init.Logic.universal_quantification.gen	40	0.0	synth with cache (only 1: unfold all; only 1: auto).	0.0064799785614	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.2.1	synth with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.100616931915	312
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.3	synth with cache (only 1: destruct 1; only 1: split).	0.00859904289246	6
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00952410697937	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00824213027954	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00822901725769	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	29.1	synth with cache (only 1: destruct 2; only 1: auto).	0.320489168167	1508
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.1.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0093560218811	8
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00860619544983	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00899004936218	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00985908508301	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.1.0	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0141382217407	4
Coq.Init.Logic.rew_opp_r	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00945997238159	2
Coq.Init.Logic.rew_opp_l	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00937294960022	2
Coq.Init.Logic.f_equal2	40	1.2.0.0.0	synth with cache (only 1: intros A B C Hl Hr; only 1: intros H ?; only 1: destruct 2; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.0150058269501	8
Coq.Init.Logic.f_equal3	40	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0128591060638	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0157279968262	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0210180282593	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00913596153259	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00933313369751	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00954699516296	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00984501838684	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0100040435791	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0123870372772	3
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0112030506134	2
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0106549263	2
Coq.Init.Logic.rew_swap	40	0.0	synth with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0122029781342	2
Coq.Init.Logic.rew_compose	40	2.0	synth with cache (only 1: destruct H2; only 1: reflexivity).	0.0121409893036	4
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	synth with cache (only 1: reflexivity).	0.00729012489319	1
Coq.Init.Logic.eq_trans_map_distr	40	1.5.5.1	synth with cache (only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.264106035233	317
Coq.Init.Logic.eq_sym_map_distr	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0110499858856	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0	synth with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0120060443878	4
Coq.Init.Logic.eq_trans_rew_distr	40	0.2	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0132358074188	4
Coq.Init.Logic.rew_const	40	0.2	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00968790054321	4
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.4.8.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: split; only 1: trivial).	0.27645611763	684
Coq.Init.Logic.inhabited_covariant	40	0.0.6	synth with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.118226051331	24
Coq.Init.Logic.eq_stepl	40	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.122937917709	16
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.117791175842	4
Coq.Init.Logic.ex_eta	40
Coq.Init.Logic.ex2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.00947785377502	3
Coq.Init.Logic.ex.eq_ex_intro_uncurried	40
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.eq_ex_eta	40	0.0.5.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	0.0230588912964	13
Coq.Init.Logic.ex.eq_ex_uncurried_iff	40
Coq.Init.Logic.ex.rew_ex	40	0.0.10.0	synth with cache (only 1: destruct H; only 1: apply eq_ex_uncurried; only 1: exists eq_refl; only 1: reflexivity).	0.144571065903	144
Coq.Init.Logic.ex2.eq_ex_intro2_uncurried	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.0.2.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0812220573425	29
Coq.Init.Logic.ex2.eq_ex2_uncurried_iff	40	3.0.1.0.0.3.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_ex_intro2_uncurried).	1.45894193649	1366
Coq.Init.Logic.ex2.eq_ex2_eta	40	0.1	synth with cache (only 1: destruct p, u; only 1: reflexivity).	0.0190150737762	12
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0153570175171	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0128440856934	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.0131421089172	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0127949714661	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0213360786438	5
Coq.Init.Logic_Type.identity_ind_r	40	1.8.3	synth with cache (only 1: intros A x y z H1 H2; only 1: destruct H2; only 1: auto).	0.13523888588	246
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0139100551605	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0135698318481	3
Coq.Init.Specif.sigT_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0128169059753	2
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0128240585327	2
Coq.Init.Specif.sigT2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0143721103668	2
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0138709545135	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.11.5	synth with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.227505922318	592
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.84.49	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	4.03954386711	45070
Coq.Init.Specif.ProdSigT.sigT_prod_sigT	40	1.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0110509395599	3
Coq.Init.Specif.ProdSigT.prod_sigT_prod	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0235512256622	5
Coq.Init.Specif.sigT.eq_sigT_uncurried	40	0.1.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0348980426788	7
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0198068618774	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.5.2	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0330488681793	12
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.28.0	synth with cache (only 1: destruct p, q; only 1: subst; only 1: reflexivity).	1.02444291115	1707
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.12.14.0.23	synth with cache (only 1: intro; only 1: destruct p', q'; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	14.1039378643	26167
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	10.6.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_existT_uncurried).	3.61253619194	4373
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0169191360474	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0262780189514	5
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0387809276581	7
Coq.Init.Specif.sig.eq_exist_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0210258960724	4
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	11.7.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	5.45305299759	6387
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0168528556824	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0224330425262	4
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0386970043182	6
Coq.Init.Specif.sigT2.eq_existT2_curried	40	0.0.0	synth with cache (only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0182089805603	3
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	1.2.7.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	3.46266198158	2459
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0207970142365	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.1.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0266449451447	5
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0384938716888	6
Coq.Init.Specif.sig2.eq_exist2_curried	40	0.0.0	synth with cache (only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0213580131531	3
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	3.4.8.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	8.38769292831	6331
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0908579826355	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0111398696899	3
Coq.funind.Recdef.le_lt_SS	40	28	synth with cache (only 1: intuition).	1.57527399063	1686
Coq.funind.Recdef.Splus_lt	40	21	synth with cache (only 1: auto with arith).	0.074038028717	208
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.0.0.16.2.0.33.0.1	synth with cache (only 1: split; only 1: red; only 1: intro H1; only 1: apply Z.lt_irrefl; only 1: intro n; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	8.28963804245	12524
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0353360176086	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40	3.1.0.5.18	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: easy).	26.7167007923	22913
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	0.5.19.2.0	synth with cache (only 1: split; only 1: now rewrite !Qred_correct; only 1: revert q; only 1: intros m Hm; only 1: now rewrite !Qred_correct).	7.04082512856	8426
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_decomp_positive	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_0_r	40	0.0.0	synth with cache (only 1: intros n; only 1: simpl; only 1: reflexivity).	0.0292439460754	3
Coq.QArith.Qpower.Qpower_1_r	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0230400562286	2
Coq.QArith.Qpower.Qpower_not_0	40
Coq.QArith.Qpower.Qpower_0_le	40
Coq.QArith.Qpower.Qpower_0_lt	40
Coq.QArith.Qpower.Qpower_1_lt_pos	40
Coq.QArith.Qpower.Qpower_1_lt	40
Coq.QArith.Qpower.Qpower_1_le_pos	40
Coq.QArith.Qpower.Qpower_1_le	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus	40
Coq.QArith.Qpower.Qpower_minus_pos	40
Coq.QArith.Qpower.Qpower_minus_neg	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Qpower_decomp_pos	40
Coq.QArith.Qpower.Qpower_decomp_neg_pos	40
Coq.QArith.Qpower.Qpower_decomp_neg_neg	40
Coq.QArith.Qpower.Qpower_lt_compat_l	40
Coq.QArith.Qpower.Qpower_le_compat_l	40
Coq.QArith.Qpower.Qpower_lt_compat_l_inv	40
Coq.QArith.Qpower.Qpower_le_compat_l_inv	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qarchimedean_power2_pos	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.0.6	synth with cache (only 1: split; only 1: intros; only 1: now destruct n).	0.0467371940613	11
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.0213189125061	1
Coq.QArith.Qfield.Examples.ex2	40	0.1.0.2.9.7	synth with cache (only 1: intro z_ne_0; only 1: intros a; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	6.26803016663	2994
Coq.QArith.Qfield.Examples.ex3	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0761702060699	2
Coq.QArith.Qfield.Examples.ex4	40	1	synth with cache (only 1: split).	0.0190119743347	2
Coq.QArith.Qfield.Examples.ex5	40	1.0	synth with cache (only 1: unfold Qeq; only 1: now Z.nzsimpl').	0.123059988022	3
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0312509536743	1
Coq.QArith.Qfield.Examples.ex7	40	1	synth with cache (only 1: exact Qplus_opp_r).	0.0535359382629	13
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0348517894745	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0335931777954	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.1	synth with cache (only 1: intros (x1, x2); only 1: intro n; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.0735998153687	7
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0445239543915	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	4.1	synth with cache (only 1: intro n; only 1: easy').	0.0730681419373	27
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0.0.0.0.2	synth with cache (only 1: simpl; only 1: unfold Qccompare; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.135928869247	32
Coq.QArith.Qcanon.Qcle_alt	40	1.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0150640010834	3
Coq.QArith.Qcanon.Qcge_alt	40	1.2.7.0	synth with cache (only 1: intros n m; only 1: simpl; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.588506937027	284
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	3	synth with cache (only 1: now Z.nzsimpl).	0.103674173355	4
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	1.0.4.7.9.1	synth with cache (only 1: intros; only 1: destruct x; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	3.84677815437	3486
Coq.QArith.Qcanon.Qcplus_0_r	40	0.0.1.23.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: auto with zarith).	35.6025910378	24077
Coq.QArith.Qcanon.Qcplus_comm	40	6.0.9.30	synth with cache (only 1: intro n; only 1: intros (q, Hq); only 1: qc; only 1: ring).	31.653785944	33464
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40	0.1.0.3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	0.0668139457703	10
Coq.QArith.Qcanon.Qcmult_0_l	40	4.0	synth with cache (only 1: intro H; only 1: auto with qarith).	0.0287599563599	6
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0534491539001	10
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	1.2.3.0.4.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.48681306839	846
Coq.QArith.Qcanon.Qcmult_comm	40	14.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	2.38956189156	887
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	0.8.0.5.0.0	synth with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	2.95705485344	1301
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	1.7.2.4.0.8.0	synth with cache (only 1: intros; only 1: destruct y; only 1: qc; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: ring).	18.5710299015	9996
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	4.8.0.19.0.0	synth with cache (only 1: intros l' H; only 1: qc; only 1: Z.nzsimpl'; only 1: apply Qmult_inv_r; only 1: unfold Qeq, Qplus; only 1: auto).	19.239178896	13914
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.30.0.0	synth with cache (only 1: intros; only 1: qc; only 1: Z.nzsimpl'; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	13.7864730358	13129
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	1.2.21	synth with cache (only 1: red; only 1: intros; only 1: auto with *).	0.717432022095	1642
Coq.QArith.Qcanon.Qcle_antisym	40	21.0	synth with cache (only 1: intros x y; only 1: CRelationClasses.simpl_crelation).	1.8378868103	1520
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	12.9	synth with cache (only 1: intros b1 b2; only 1: congruence).	0.869863033295	1335
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.0.1.1.29	synth with cache (only 1: intro i; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: auto).	15.2018551826	16955
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	5.0.2.0.0.0.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: eapply Qle_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: apply Qle_refl).	1.36057114601	1148
Coq.QArith.Qcanon.Qcnot_lt_le	40	6.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.202109098434	21
Coq.QArith.Qcanon.Qcnot_le_lt	40	2.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: Z.order).	0.0265500545502	19
Coq.QArith.Qcanon.Qclt_not_le	40	1.3.12.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros H0 H1; only 1: unfold Qle, Qlt, Qeq; only 1: apply Z.lt_nge).	3.13987112045	2455
Coq.QArith.Qcanon.Qcle_not_lt	40	10.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.467345952988	309
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40	4.0.10.0.0.1.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl; only 1: apply Qmult_le_r).	15.5999948978	6061
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.3.0.0.2.3	synth with cache (only 1: induction n as [| n IHn]; only 1: intro H; only 1: qc; only 1: now elim H; only 1: intro m; only 1: simpl; only 1: auto with qarith).	1.29195713997	594
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.3.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.0337998867035	10
Coq.QArith.Qreals.IZR_nz	40	0	synth with cache (only 1: auto with real).	0.0122590065002	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.Qden_cancel	40
Coq.QArith.QArith_base.Qnum_cancel	40
Coq.QArith.QArith_base.inject_Z_injective	40	1.0.0.0.0	synth with cache (only 1: split; only 1: unfold Qeq; only 1: apply Z.mul_cancel_r, not_eq_sym, Z.lt_neq, Pos2Z.is_pos; only 1: intros EQ; only 1: now rewrite EQ).	0.0296010971069	6
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0380170345306	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	2.0.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0490570068359	13
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	10	synth with cache (only 1: firstorder).	0.010703086853	21
Coq.QArith.QArith_base.Qeq_sym	40	11	synth with cache (only 1: intuition).	0.275907993317	115
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40
Coq.QArith.QArith_base.Qeq_eq_bool	40
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	synth with cache (only 1: apply Zle_is_le_bool).	0.00913882255554	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.1	synth with cache (only 1: intro HF; only 1: intuition).	0.0886008739471	3
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	synth with cache (only 1: apply Zeq_is_eq_bool; only 1: trivial).	0.0101070404053	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.6.33	synth with cache (only 1: intros n; only 1: destruct n; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	3.11000490189	5537
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.2	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0431299209595	8
Coq.QArith.QArith_base.Qmake_Qdiv	40	12.8.6	synth with cache (only 1: bitwise as m ?; only 1: simpl; only 1: now Z.nzsimpl).	1.1585278511	1046
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0	synth with cache (only 1: now Z.nzsimpl').	0.0371680259705	1
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	3.6.0.49	synth with cache (only 1: intros l2; only 1: unfold Qeq; only 1: simpl; only 1: now Z.nzsimpl').	20.3256270885	24376
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.2.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl'; only 1: rewrite ?Pos.mul_1_r; only 1: auto with relations).	0.0758619308472	8
Coq.QArith.QArith_base.Qplus_comm	40	3.0.1.19.4	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	3.84117913246	2979
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.6.2	synth with cache (only 1: intros a0; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).	0.18048787117	109
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0267491340637	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	7.0.0	synth with cache (only 1: red; only 1: intros; only 1: trivial).	0.0674700737	10
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.1.1	synth with cache (only 1: red; only 1: simpl; only 1: intros Hn; only 1: now Z.nzsimpl).	0.196188211441	30
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.2.0.0.2	synth with cache (only 1: intro q; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.47073507309	172
Coq.QArith.QArith_base.Qmult_comm	40	0.1.0.0.9.0	synth with cache (only 1: intros (x1, x2); only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.04753088951	535
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0867691040039	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult; only 1: f_equal).	0.0162498950958	3
Coq.QArith.QArith_base.inject_Z_opp	40	0	synth with cache (only 1: now destruct x).	0.00876092910767	1
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qinv_pos	40	0.0.0.1	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl in *; only 1: trivial).	0.0154030323029	5
Coq.QArith.QArith_base.Qinv_neg	40	0.0	synth with cache (only 1: intros a b; only 1: reflexivity).	0.0122559070587	2
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qreduce_l	40
Coq.QArith.QArith_base.Qreduce_r	40	0.0.0.0	synth with cache (only 1: intros a b z; only 1: unfold Qeq, Qnum, Qden; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.028559923172	4
Coq.QArith.QArith_base.Qreduce_num_l	40	0.0.1.0	synth with cache (only 1: intros x; only 1: red; only 1: simpl; only 1: congruence).	0.0184259414673	5
Coq.QArith.QArith_base.Qreduce_num_r	40	0.0.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0249860286713	4
Coq.QArith.QArith_base.Qreduce_den_l	40	0.0.1	synth with cache (only 1: intros; only 1: unfold Qeq, Qnum, Qden; only 1: ring).	0.182939052582	19
Coq.QArith.QArith_base.Qreduce_den_r	40	0.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden; only 1: ring).	0.0196709632874	3
Coq.QArith.QArith_base.Qreduce_den_inject_Z_l	40
Coq.QArith.QArith_base.Qreduce_den_inject_Z_r	40	0.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden, inject_Z; only 1: ring).	0.0207760334015	3
Coq.QArith.QArith_base.Qreduce_zero	40	0.0.1	synth with cache (only 1: intros n; only 1: compute; only 1: trivial).	0.0152628421783	4
Coq.QArith.QArith_base.Qmult_inject_Z_l	40	1.0.1.0	synth with cache (only 1: intros a b z; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0346629619598	14
Coq.QArith.QArith_base.Qmult_inject_Z_r	40	5.0.0.0	synth with cache (only 1: intros a b z; only 1: unfold Qeq; only 1: cbn; only 1: now rewrite Pos.mul_1_r).	0.115105867386	14
Coq.QArith.QArith_base.Qmult_frac_l	40	1.1.1.6.0.0.0.1.5	synth with cache (only 1: assert (H : (1 + 1)%Z = 2%Z) by now Z.nzsimpl'; only 1: intros a b; only 1: intro n; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: induction a as [a IHa| a IHa| ]; only 1: ring; only 1: trivial; only 1: ring).	8.73898506165	5686
Coq.QArith.QArith_base.Qmult_frac_r	40	2.0.0.0	synth with cache (only 1: intros a b c; only 1: unfold Qeq, Qnum, Qden; only 1: cbn; only 1: ring).	0.0296530723572	12
Coq.QArith.QArith_base.Qle_refl	40	6.2	synth with cache (only 1: red; only 1: reflexivity).	0.0112688541412	10
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	10	synth with cache (only 1: apply Z.lt_irrefl).	0.0253298282623	32
Coq.QArith.QArith_base.Qlt_not_eq	40	1.7.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intuition; only 1: Z.order').	0.193772792816	56
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_leneq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	15.5.37	synth with cache (only 1: destruct y; only 1: destruct x; only 1: congruence).	17.8332850933	26067
Coq.QArith.QArith_base.Qgt_lt	40	2.1.3.0	synth with cache (only 1: intros (x1, x2); only 1: intros m Hm; only 1: red; only 1: trivial).	0.0254809856415	13
Coq.QArith.QArith_base.Qlt_gt	40	0.0	synth with cache (only 1: intros p q H; only 1: assumption).	0.00951385498047	2
Coq.QArith.QArith_base.Qge_le	40	0	synth with cache (only 1: eauto with qarith).	0.00780296325684	1
Coq.QArith.QArith_base.Qle_ge	40	0.0	synth with cache (only 1: intros p q H; only 1: assumption).	0.00904512405396	2
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	26.7	synth with cache (only 1: intro; only 1: now apply Z.ge_le).	2.34207892418	1516
Coq.QArith.QArith_base.Qnot_le_lt	40	7.1.20	synth with cache (only 1: intuition; only 1: rewrite Qlt_alt; only 1: Z.order).	30.4140298367	2707
Coq.QArith.QArith_base.Qlt_not_le	40	9.0.7.14	synth with cache (only 1: intuition; only 1: contradict H; only 1: apply Z.nlt_ge; only 1: auto).	3.32318687439	4156
Coq.QArith.QArith_base.Qle_not_lt	40	1	synth with cache (only 1: apply Z.nlt_ge).	0.0073070526123	2
Coq.QArith.QArith_base.Qle_lt_or_eq	40	1.1.0	synth with cache (only 1: assert (R : forall n, 0%Z = n <-> n = 0%Z) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: apply Z.lt_eq_cases).	0.109903812408	29
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qopp_lt_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	5.38789606094	1451
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	7.20040297508	1559
Coq.QArith.QArith_base.Qplus_lt_compat	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.2	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.2686419487	62
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qmult_lt_0_compat	40
Coq.QArith.QArith_base.Qmult_le_1_compat	40
Coq.QArith.QArith_base.Qmult_lt_1_compat	40
Coq.QArith.QArith_base.Qmult_lt_compat_nonneg	40
Coq.QArith.QArith_base.Qmult_le_lt_compat_pos	40
Coq.QArith.QArith_base.Qmult_le_compat_nonneg	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0181751251221	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.1.3.1	synth with cache (only 1: intros n m p; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	1.11827111244	351
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.1.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.894384145737	255
Coq.QArith.Qround.Qfloor_Z	40	4.1.1.0	synth with cache (only 1: destr_bool; only 1: symmetry; only 1: symmetry; only 1: apply Z.div_1_r).	0.0373411178589	14
Coq.QArith.Qround.Qceiling_Z	40	3.12.0.0.3	synth with cache (only 1: intros n; only 1: nzinduct n; only 1: trivial; only 1: fix even_spec 1; only 1: now Z.nzsimpl').	19.7331850529	7367
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	3	synth with cache (only 1: eauto with qarith).	0.0404961109161	22
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.1.2.1.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.856800794601	310
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0396199226379	9
Coq.QArith.Qabs.Qabs_nonneg	40	2.0.0.13.3.11	synth with cache (only 1: intro q; only 1: destruct q; only 1: red; only 1: simpl in *; only 1: Z.nzsimpl; only 1: Z.order_pos').	16.5073878765	11034
Coq.QArith.Qabs.Zabs_Qabs	40	1.0.0	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qnum, Qden; only 1: auto).	0.0138981342316	4
Coq.QArith.Qabs.Qabs_opp	40	0.0.1.7.1.1.5	synth with cache (only 1: simpl; only 1: intros [[| n| n] d]; only 1: intuition try easy; only 1: repeat split; only 1: red; only 1: simpl; only 1: reflexivity).	12.3869988918	8579
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40	11.0.8	synth with cache (only 1: unfold Qeq in *; only 1: intros (n, d); only 1: now destruct n).	20.8672289848	2572
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_Qlt_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qlt_condition	40
Coq.QArith.Qabs.Qabs_ge	40
Coq.QArith.Qabs.Qabs_gt	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: reflexivity).	0.0115520954132	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0109250545502	1
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.0129950046539	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	4.3.3.2.9	synth with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: red; only 1: auto).	1.62775611877	1220
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.0178730487823	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0175590515137	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.0135610103607	1
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	2	synth with cache (only 1: firstorder).	0.0198080539703	3
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	2	synth with cache (only 1: simpl_crelation).	0.0226600170135	3
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0287179946899	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	4.1	synth with cache (only 1: intro; only 1: firstorder).	0.220748901367	27
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.195276975632	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.0152139663696	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0161809921265	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.014023065567	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	4.3.3.2	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: intros x y H'; only 1: simpl_crelation; only 1: firstorder).	1.59375786781	447
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	1.3.1	synth with cache (only 1: red; only 1: red; only 1: firstorder).	0.132323980331	21
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	2	synth with cache (only 1: firstorder).	0.0380339622498	3
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	1.3.2.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: transitivity x0; only 1: assumption; only 1: assumption).	1.50840115547	389
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	7.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	1.694658041	411
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	8.0	synth with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	1.68498706818	358
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	5.3	synth with cache (only 1: intros A B []; only 1: firstorder).	0.321810007095	33
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	1.6	synth with cache (only 1: intros; only 1: firstorder).	6.3148829937	644
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0351359844208	4
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	1.2	synth with cache (only 1: intros R ? ? ? n; only 1: firstorder).	0.066309928894	23
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	3	synth with cache (only 1: simpl_crelation).	0.030216217041	4
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	6	synth with cache (only 1: firstorder).	0.0192799568176	7
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.0.0	synth with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).	0.058874130249	3
Coq.Classes.CMorphisms.GenericInstances.flip1	40	1.0	synth with cache (only 1: reduce; only 1: auto).	0.0346899032593	3
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0159051418304	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	2.1	synth with cache (only 1: hnf; only 1: simpl_crelation).	0.055184841156	18
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0168809890747	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.017501115799	1
Coq.Classes.CMorphisms.proper_proper	40	7.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0356650352478	10
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	5	synth with cache (only 1: firstorder).	0.0199580192566	6
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0186290740967	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1	synth with cache (only 1: simpl_crelation).	0.0381767749786	2
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.0.1.7.1	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros; only 1: intros x x' Hxx'; only 1: auto).	8.64324903488	806
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0494151115417	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0773470401764	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	4.4.0.1.0	synth with cache (only 1: intros A R H x x0 y X; only 1: simpl_crelation; only 1: transitivity x0; only 1: auto; only 1: auto).	15.8513870239	8676
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_crelation).	0.0100898742676	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00766587257385	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00978207588196	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.185709953308	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: auto).	0.00795888900757	1
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.00817799568176	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.0	synth with cache (only 1: hnf; only 1: firstorder).	0.00814414024353	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	8	synth with cache (only 1: firstorder).	0.0336937904358	36
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	3	synth with cache (only 1: firstorder).	0.0210821628571	4
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.0167050361633	1
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.105179071426	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0239980220795	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0062689781189	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00687193870544	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.1.0.1.3.5	synth with cache (only 1: intro n; only 1: split; only 1: intro H1; only 1: trivial; only 1: intro H1; only 1: trivial).	0.0648529529572	161
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00677895545959	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.00838494300842	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2	synth with cache (only 1: firstorder).	0.00977301597595	3
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0183961391449	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0450370311737	3
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	3.0.0.0.3	synth with cache (only 1: intros R H x x0 y H0 H1; only 1: intros; only 1: transitivity y; only 1: intuition; only 1: auto).	0.504025936127	299
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: simpl_relation).	0.00901484489441	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00658297538757	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00752282142639	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.154366016388	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	24.21.53	synth with cache (only 1: CRelationClasses.simpl_crelation; only 1: destruct y; only 1: now destruct x).	5.96713685989	10201
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	3	synth with cache (only 1: reflexivity).	0.00764608383179	4
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.00970196723938	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0126099586487	4
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	8	synth with cache (only 1: firstorder).	0.0405769348145	46
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	synth with cache (only 1: firstorder).	0.0257937908173	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.0207009315491	1
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.111090183258	1
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0256989002228	1
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.00673604011536	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00562906265259	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	2.0.4.9.1	synth with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro n; only 1: reflexivity || destruct H; only 1: firstorder).	0.881773948669	1551
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0180571079254	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0149879455566	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.1.0.0.0	synth with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.302258968353	7
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	2	synth with cache (only 1: firstorder).	0.00778198242188	3
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0163590908051	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	synth with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.0604159832001	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.0	synth with cache (only 1: intro z; only 1: firstorder).	0.0131440162659	2
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: repeat split).	0.00880694389343	1
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00866794586182	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00733590126038	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	0.1.0.13.11	synth with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: red; only 1: auto).	0.496010065079	777
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	1.2	synth with cache (only 1: reduce; only 1: firstorder).	0.010782957077	5
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0164649486542	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	1.0.0	synth with cache (only 1: unfold subrelation in *; only 1: intros x y H0; only 1: assumption).	0.0139608383179	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00798296928406	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.0.3.0	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).	0.0371677875519	8
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	1.3	synth with cache (only 1: reduce; only 1: firstorder).	0.0115230083466	6
Coq.Classes.Morphisms.Relations.forall_subrelation	40	1	synth with cache (only 1: firstorder).	0.0131371021271	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	synth with cache (only 1: reduce; only 1: firstorder).	0.0104551315308	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.0.0.0	synth with cache (only 1: hnf; only 1: intros x y H0; only 1: red in H0; only 1: firstorder).	0.0163400173187	4
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	2.2.14.9.0.15	synth with cache (only 1: intros x y H a; only 1: red; only 1: reduce; only 1: apply mor; only 1: intuition; only 1: intuition).	10.4029328823	13722
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	4.0.2	synth with cache (only 1: reduce; only 1: red in H0; only 1: firstorder).	0.0531210899353	9
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	2.6	synth with cache (only 1: intros; only 1: firstorder).	0.0423729419708	10
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	8	synth with cache (only 1: firstorder).	0.689097166061	409
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	4.0	synth with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	0.596050977707	334
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	0.8	synth with cache (only 1: intros; only 1: firstorder).	0.932281017303	418
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.297137022018	146
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	0.781108856201	121
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	2.5.0	synth with cache (only 1: hnf; only 1: intuition; only 1: firstorder).	0.0320119857788	22
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	7.0	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).	0.0117168426514	9
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.0.2	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0116138458252	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	8.0.0.4.0.1.13	synth with cache (only 1: split; only 1: reduce; only 1: apply H0; only 1: firstorder; only 1: reduce; only 1: apply H0; only 1: firstorder).	27.2203071117	9133
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.10	synth with cache (only 1: apply H; only 1: auto).	0.0287499427795	33
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	2.1.0.0.0.0	synth with cache (only 1: split; only 1: reduce; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.0369629859924	9
Coq.Classes.Morphisms.GenericInstances.flip1	40	1	synth with cache (only 1: apply H).	0.00603103637695	2
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00610685348511	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0117058753967	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00564479827881	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.00558280944824	1
Coq.Classes.Morphisms.proper_proper	40	2.0.4.0	synth with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.139371871948	60
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	7	synth with cache (only 1: firstorder).	0.0197470188141	8
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.00658392906189	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.0	synth with cache (only 1: intros R H x y H0 x0 y0 H1 H2; only 1: simpl_relation).	0.0661671161652	2
Coq.Classes.Morphisms.proper_sym_flip_2	40	6.3.1.4.0	synth with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold respectful; only 1: intros x x' Hxx'; only 1: unfold flip in *; only 1: firstorder).	3.40265703201	2364
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.3.0.3.4.0.8.4.3	synth with cache (only 1: intros C decide H P H0; only 1: simpl_relation; only 1: red in H0; only 1: red in H0; only 1: split; only 1: apply H0; only 1: intuition; only 1: apply H0; only 1: intuition).	23.1816759109	18261
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	0.0.4.0.0.3.6.1	synth with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: split; only 1: apply H; only 1: auto; only 1: auto; only 1: apply H; only 1: auto; only 1: auto).	4.29417490959	2561
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	4	synth with cache (only 1: firstorder).	0.00822186470032	5
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00681185722351	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0249300003052	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.00729012489319	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.4.6	synth with cache (only 1: split; only 1: reflexivity; only 1: CRelationClasses.simpl_crelation).	0.0573348999023	58
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0170328617096	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.190635919571	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.0.0.4	synth with cache (only 1: split; only 1: intros; only 1: firstorder; only 1: firstorder).	0.0186920166016	8
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.4	synth with cache (only 1: unfold relation_equivalence in *; only 1: firstorder).	0.0337409973145	26
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.00859999656677	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.00874400138855	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0	synth with cache (only 1: firstorder).	0.00934791564941	1
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.00755715370178	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0	synth with cache (only 1: firstorder).	0.00879502296448	1
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	2.3.15.9	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: compute in *; only 1: eauto).	3.20140790939	3246
Coq.Classes.DecidableClass.Decidable_sound	40	0.38.2.14	synth with cache (only 1: intro m; only 1: intros; only 1: apply H; only 1: assumption).	14.2173979282	50814
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_not_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.30	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	4.84867787361	5894
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	3.3.13	synth with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: apply Nat.eqb_eq).	1.31473398209	1150
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	5.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.0765850543976	25
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	4.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.eqb_eq).	0.063029050827	24
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	4.60	synth with cache (only 1: destruct x; only 1: now destruct y).	1.57592582703	3752
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	4	synth with cache (only 1: apply _).	0.0106649398804	5
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0100729465485	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.00991892814636	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	21.4.9	synth with cache (only 1: intros P H0 HS n; only 1: intros HP; only 1: now intros ->).	10.4249620438	16607
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	8.1	synth with cache (only 1: intros R R' EQ a a' Ha WF; only 1: firstorder).	0.810109853745	155
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.0620329380035	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	2.3	synth with cache (only 1: repeat red; only 1: firstorder).	0.209084033966	35
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.1.2.0	synth with cache (only 1: do 2 red; only 1: induction l; only 1: firstorder; only 1: auto).	0.0320410728455	7
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.0	synth with cache (only 1: do 2 red; only 1: now symmetry).	0.0257179737091	2
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	4.0	synth with cache (only 1: intro; only 1: auto).	0.038654088974	13
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.0.0.0	synth with cache (only 1: split; only 1: reduce; only 1: firstorder; only 1: auto).	0.0302639007568	4
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	synth with cache (only 1: trivial).	0.0214688777924	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: f_equal; only 1: auto).	0.0534970760345	7
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40	4.7.0.6.0.0.0	synth with cache (only 1: induction p as [| p IHp] using peano_ind; only 1: trivial; only 1: rewrite inj_succ; only 1: simpl; only 1: rewrite iter_succ; only 1: rewrite ?IHp; only 1: auto).	4.62976121902	3399
Coq.PArith.Pnat.Pos2Nat.inj_pow	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.0.0.0.8.0.2.1.10	synth with cache (only 1: simpl; only 1: destruct n; only 1: trivial; only 1: simpl Pos.of_nat; only 1: induction n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: now rewrite IHn).	4.11024212837	3260
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_0	40	0	synth with cache (only 1: trivial).	0.0189590454102	1
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0330381393433	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Nat2Pos.inj_pow	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	3.1.0.0.0.19	synth with cache (only 1: Nat.induct ltac:(n); only 1: trivial; only 1: intros n IH; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	1.30499196053	689
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	1.0.0.2.0.1.1	synth with cache (only 1: revert m; only 1: intro q; only 1: split; only 1: apply Pos2Nat.inj; only 1: intro H; only 1: f_equal; only 1: assumption).	2.8609790802	896
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.1	synth with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0358829498291	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40	1.0.22	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: trivial).	29.0141339302	16500
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	5.0.0.0	synth with cache (only 1: intros a; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl').	0.178791046143	9
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	6.2.12	synth with cache (only 1: fix gcd_divide 1; only 1: intro m; only 1: trivial).	9.58905720711	7142
Coq.PArith.BinPos.Pos.eq_dec	40	2	synth with cache (only 1: decide equality).	0.289066076279	47
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.10	synth with cache (only 1: simpl; only 1: reflexivity).	0.0872240066528	46
Coq.PArith.BinPos.Pos.succ_discr	40	12.7.22.7.76	synth with cache (only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: intro H1; only 1: discriminate).	11.7174379826	36232
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0162818431854	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	5.0.0.0.0.7.0.3.0.16	synth with cache (only 1: destruct p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: auto with relations; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	2.37310314178	3450
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0267190933228	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1	synth with cache (only 1: now destruct p).	0.0413150787354	2
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0385370254517	1
Coq.PArith.BinPos.Pos.pred_succ	40	1.0.0.0.0.0.0.0.0.0.46	synth with cache (only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	1.58989906311	2001
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	3.1.0.0.0.2.2	synth with cache (only 1: intro H; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	1.05628800392	426
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.0.9.0.3	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.72117614746	1185
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0196192264557	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0162191390991	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.3.1.1.3.0	synth with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: intros H; only 1: f_equal; only 1: auto using add_carry_add).	2.08044195175	958
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	4.0.0.0.0.0	synth with cache (only 1: revert q; only 1: intro q; only 1: revert q; only 1: intro q; only 1: revert q; only 1: split).	0.125051021576	34
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	synth with cache (only 1: revert P a f; only 1: trivial).	0.0206022262573	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	synth with cache (only 1: now destruct p).	0.0162210464478	1
Coq.PArith.BinPos.Pos.mul_1_r	40	0.2.1.4.0.4	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	0.549947977066	323
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.0250191688538	4
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.0.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0295119285583	5
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.1.2.1.1.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p as [p| p| ]; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: now f_equal; only 1: intros H; only 1: intros; only 1: now f_equal).	3.44488716125	1414
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.035089969635	1
Coq.PArith.BinPos.Pos.square_xO	40	4.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0260620117188	7
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	1.4.0.4.0.1.0.7	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite IHp; only 1: Bool.destr_bool).	3.8219139576	3572
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40	1.65.4	synth with cache (only 1: intros HP HIS; only 1: fix le_div2 1; only 1: trivial).	27.5767490864	56344
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.6.3.0.0.0.3.28	synth with cache (only 1: apply succ_inj; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: auto).	18.5175931454	23803
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0439238548279	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	0.0.0.0.0.0.1.6.1.0.0	synth with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: apply add_cancel_l in H; only 1: now f_equal).	7.5947239399	3966
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	3.0.3.21	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: easy).	25.9876458645	26279
Coq.PArith.BinPos.Pos.ltb_lt	40	7.0.3.6	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: easy).	2.56528997421	1449
Coq.PArith.BinPos.Pos.leb_le	40	0.0.0.4.1.4.10.1	synth with cache (only 1: symmetry; only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: split; only 1: congruence; only 1: congruence).	23.728760004	14609
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	0.6.13.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: revert q; only 1: fix odd_spec 1; only 1: trivial).	11.086618185	6376
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0594620704651	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: easy').	0.056333065033	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now split).	0.0578401088715	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0615170001984	7
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.5.0.0	synth with cache (only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: rewrite compare_cont_spec; only 1: now destruct (compare_cont Eq p q)).	0.0865349769592	20
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0139541625977	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	1.0.2.5.1.2	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	2.92913889885	2030
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.0.4.2.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.329837083817	143
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	1.1.2.2.1.2	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.61196398735	489
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0344951152802	5
Coq.PArith.BinPos.Pos.compare_le_iff	40	1.0.0.0.1	synth with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: now split).	0.0351111888885	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40	4.0	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.362063884735	74
Coq.PArith.BinPos.Pos.gt_lt	40	0.8.3.0	synth with cache (only 1: unfold gt, le, compare; only 1: intros H; only 1: rewrite PeanoNat.Nat.compare_antisym, CompOpp_iff in H; only 1: now apply compare_lt_iff).	2.61149191856	1340
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0139379501343	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	0.1.2	synth with cache (only 1: unfold leb, le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0432679653168	6
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0264389514923	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.015692949295	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40	2.11.7	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	31.1186239719	10753
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	4	synth with cache (only 1: now destruct p).	0.0308969020844	5
Coq.PArith.BinPos.Pos.nlt_1_r	40	6	synth with cache (only 1: now destruct p).	0.0776600837708	27
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	synth with cache (only 1: now destruct p).	0.0624279975891	28
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0245411396027	2
Coq.PArith.BinPos.Pos.lt_nle	40	0.5	synth with cache (only 1: unfold lt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.52276301384	94
Coq.PArith.BinPos.Pos.lt_le_incl	40	2.4	synth with cache (only 1: unfold lt, le; only 1: now do 2 destruct compare).	0.152281999588	35
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40	0.1.4.4	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	0.836961984634	375
Coq.PArith.BinPos.Pos.succ_le_mono	40	1.7.10.0.1.4	synth with cache (only 1: revert m; only 1: intro q; only 1: unfold lt, le; only 1: revert q; only 1: intro H; only 1: now rewrite compare_succ_succ).	33.1083269119	17804
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	3.3.1	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).	0.0576791763306	22
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0179018974304	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.5.17	synth with cache (only 1: intro H2; only 1: intros; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	6.17762613297	3122
Coq.PArith.BinPos.Pos.le_trans	40	0.0.1.0.7.0.0.4.0.0.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply le_lteq; only 1: apply le_lteq in H; only 1: destruct H; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: destruct H; only 1: now left; only 1: now subst).	9.95386099815	7113
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.2.1.2.2.0.4.2	synth with cache (only 1: revert q r; only 1: intros n m; only 1: unfold le; only 1: induction p using peano_ind; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	5.26556181908	2400
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.0.4	synth with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.193485021591	45
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.156373023987	42
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0248818397522	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0255131721497	7
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0192530155182	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1	synth with cache (only 1: now destruct p).	0.0154938697815	2
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0154550075531	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.0.3.0.14	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: exists r; only 1: trivial).	6.77316403389	4366
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0333330631256	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0357789993286	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.1	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0799810886383	4
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.090175151825	20
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.0.0.0.0.0.2.1.6.0.0	synth with cache (only 1: unfold le, min; only 1: intros x y; only 1: rewrite compare_gt_iff; only 1: intros H; only 1: apply le_nlt in H; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	9.57215189934	6354
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0424449443817	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.1	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.019376039505	3
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.123939990997	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.0.4.0	synth with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	0.211452960968	48
Coq.PArith.BinPos.Pos.add_max_distr_l	40	0.12.0.0	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros a a' Ha; only 1: now apply add_le_mono_l).	3.18002200127	1377
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.0.4.0.2.2.4.1	synth with cache (only 1: destruct (min_spec n m); only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l; only 1: rewrite 3!(add_comm _ p); only 1: intuition; only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	8.16399288177	3846
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	2.10.0	synth with cache (only 1: apply max_monotone; only 1: intros x x' Hx; only 1: now apply mul_le_mono_l).	0.997824907303	532
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.5	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0286211967468	8
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.2	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0321619510651	6
Coq.PArith.BinPos.Pos.iter_op_succ	40	2.2.1.2.0.3.11	synth with cache (only 1: intro q; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial; only 1: auto).	10.7784190178	10374
Coq.PArith.BinPos.Pos.of_nat_succ	40	1.2.0.0.5	synth with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: split; only 1: simpl; only 1: intros a Ha; only 1: now f_equal).	0.415568113327	161
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	2.0.0.10.0.0.1.1	synth with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: easy'; only 1: intros; only 1: simpl; only 1: induction n as [| n IHn]; only 1: f_equal; only 1: f_equal; only 1: auto using add_1_r).	32.9923110008	21726
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40	12.11	synth with cache (only 1: rewrite PeanoNat.Nat.mul_comm; only 1: apply PeanoNat.Nat.divide_mul_l).	6.8837659359	4227
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	6.31.18.0	synth with cache (only 1: intros q r; only 1: revert q; only 1: fix le_div2 1; only 1: auto).	32.5177071095	40356
Coq.PArith.BinPos.Pos.gcd_divide_r	40	4.0.3.9	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro q; only 1: auto).	5.27657985687	4532
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	9.43	synth with cache (only 1: fix odd_spec 1; only 1: auto).	4.7474861145	8065
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0	synth with cache (only 1: unfold Pos.gt; only 1: apply iff_refl).	0.022686958313	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	2.48	synth with cache (only 1: fix sqrtrem_spec 1; only 1: easy).	10.1745100021	9499
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: now subst).	0.0378839969635	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	7.2	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.454336166382	234
Coq.Arith.Even.odd_equiv	40	6.4.3.1.0.4.6.0	synth with cache (only 1: intro n; only 1: Nat.cases ltac:(n); only 1: split; only 1: now exists 0; only 1: now intros ([| ], H); only 1: fix odd_spec 1; only 1: intro m; only 1: auto).	23.2751870155	37465
Coq.Arith.Even.even_or_odd	40	11.2.23.5	synth with cache (only 1: Nat.cases n; only 1: intuition; only 1: fix even_equiv 1; only 1: intuition).	4.08502793312	8201
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n as [| n IHn]; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0340969562531	5
Coq.Arith.Even.not_even_and_odd	40	13.3.1.15.6.1	synth with cache (only 1: induction n as [| n IHn]; only 1: intro H; only 1: now Nat.nzsimpl; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion 1; only 1: tauto).	15.1293840408	32422
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.131968021393	1
Coq.Arith.Even.even_even_plus	40	1	synth with cache (only 1: parity_binop).	0.0707228183746	2
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0758190155029	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.0803790092468	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0725939273834	1
Coq.Arith.Even.even_plus_aux	40	0.0.1	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).	0.249817848206	4
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0823640823364	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0747680664062	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0745100975037	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.129461050034	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0751628875732	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0771279335022	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0714042186737	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0748410224915	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.164343833923	1
Coq.Arith.Even.even_mult_l	40	2	synth with cache (only 1: parity_binop).	0.0645129680634	11
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0492260456085	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0707468986511	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.166642904282	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0731148719788	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0495209693909	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.048063993454	1
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.010381937027	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.081818819046	1
Coq.Arith.Minus.minus_diag_reverse	40	1.0.5.0	synth with cache (only 1: Nat.induct ltac:(n); only 1: now Nat.nzsimpl; only 1: intros n IH; only 1: now rewrite IH).	0.119166851044	27
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.0.6	synth with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: auto).	0.442842960358	114
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	23	synth with cache (only 1: now apply Nat.add_sub_eq_l).	0.429244041443	416
Coq.Arith.Minus.le_plus_minus_r	40	0.0.0.0.0.0.0.3.0.1	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: now Nat.nzsimpl; only 1: intros m H; only 1: destruct m; only 1: inversion H; only 1: simpl; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	2.2516720295	1038
Coq.Arith.Minus.le_plus_minus	40	0.0.0.0.0.0.0.3.0.3	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: now Nat.nzsimpl; only 1: intros m H; only 1: destruct m; only 1: inversion H; only 1: simpl; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	4.51898694038	2365
Coq.Arith.Minus.lt_O_minus_lt	40	12.0.5.0.7.0.8	synth with cache (only 1: Nat.double_induct n m; only 1: intros a Ha; only 1: now Nat.nzsimpl'; only 1: intros n H; only 1: Nat.order'; only 1: intros; only 1: intuition).	19.6353259087	24976
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	4.1.5.13	synth with cache (only 1: intro RS'; only 1: intros a Ha; only 1: rewrite Ha; only 1: now left).	2.28488206863	2652
Coq.Arith.Between.Between.between_le	40	2.0.5.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: apply PeanoNat.Nat.le_refl; only 1: auto).	0.963094949722	274
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40
Coq.Arith.Between.Between.exists_le_S	40	2.1.2.2	synth with cache (only 1: intros n m; only 1: induction 1; only 1: auto; only 1: auto with arith).	0.132360935211	86
Coq.Arith.Between.Between.exists_S_le	40	1.9.5	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	2.69064307213	2240
Coq.Arith.Between.Between.in_int_intro	40	5.0.0.1.1	synth with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: destruct r as [| r]; only 1: auto; only 1: auto).	0.352908849716	161
Coq.Arith.Between.Between.in_int_lt	40	9.2	synth with cache (only 1: intros n m p (q, Hq); only 1: PeanoNat.Nat.Private_Tac.order).	0.431148052216	310
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0218498706818	2
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0.0.0.0	synth with cache (only 1: intros * []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0449509620667	5
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.3.12.0	synth with cache (only 1: intro k; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	3.02849888802	2368
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40	14.30	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	24.4799389839	28530
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	2.2.41.15.17	synth with cache (only 1: intros * []; only 1: PeanoNat.Nat.le_elim H; only 1: now PeanoNat.Nat.nzsimpl; only 1: destruct H; only 1: assumption).	5.24926877022	24514
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40	0.2.0.4.4.0.0.9	synth with cache (only 1: revert n m; only 1: nzord_induct p; only 1: Nat.order; only 1: intros n m p Hp Hn Hm H; only 1: auto with arith; only 1: intros p Hp IH n m _; only 1: intros H; only 1: Nat.order).	5.83642506599	4736
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40
Coq.Arith.Div2.odd_S2n	40	5.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0150249004364	8
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.105210065842	57
Coq.Arith.Div2.div2_double_plus_one	40	1.10	synth with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.order).	0.688636064529	449
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40	19.2.2.8	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: simpl; only 1: intuition).	39.1315321922	25675
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	2	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0449569225311	12
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	3	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0301380157471	13
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	synth with cache (only 1: apply Nat.add_le_mono).	0.0174520015717	2
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	9.0.0.0.6	synth with cache (only 1: Nat.induct n; only 1: split; only 1: auto; only 1: auto; only 1: now Nat.nzsimpl).	3.2538049221	1687
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	0.0.2.1	synth with cache (only 1: Nat.cases m; only 1: Nat.order; only 1: intros m IH; only 1: Nat.order).	0.0411560535431	14
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.00732398033142	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.016077041626	5
Coq.Arith.Lt.le_not_lt	40	0.0.1.0.4	synth with cache (only 1: Nat.cases m; only 1: intro H; only 1: Nat.order; only 1: intros m IH; only 1: Nat.order).	0.23224401474	65
Coq.Arith.Lt.lt_not_le	40	1.0.0.0.3	synth with cache (only 1: Nat.cases m; only 1: intro H; only 1: Nat.order; only 1: intros m IH; only 1: Nat.order).	0.211102962494	74
Coq.Arith.Lt.neq_0_lt	40	0.1	synth with cache (only 1: intro H; only 1: Nat.auto').	0.257811069489	129
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.018257856369	4
Coq.Arith.Lt.lt_n_S	40	1	synth with cache (only 1: apply le_n_S).	0.0199949741364	11
Coq.Arith.Lt.lt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.00751709938049	1
Coq.Arith.Lt.S_pred	40	1.0.1.6	synth with cache (only 1: Nat.cases n; only 1: easy; only 1: intros n H; only 1: auto).	0.819352149963	489
Coq.Arith.Lt.S_pred_pos	40	6.0.0.0	synth with cache (only 1: Nat.cases n; only 1: Nat.order; only 1: intros a Ha; only 1: easy).	0.0280890464783	10
Coq.Arith.Lt.lt_pred	40	7.0.17.0	synth with cache (only 1: Nat.cases m; only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: now apply le_S_n).	2.92078018188	4380
Coq.Arith.Lt.lt_pred_n_n	40	5.0.4.0.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: trivial; only 1: intros _; only 1: now constructor).	0.52861905098	570
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	14.4655559063	8236
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.516780138016	157
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0120520591736	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0132391452789	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0143229961395	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0137851238251	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0145711898804	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.0	synth with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.0355849266052	4
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact lt_wf_rect).	0.015153169632	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.0494410991669	7
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.0482370853424	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	13.1.8.0.33	synth with cache (only 1: nzinduct n; only 1: Nat.order'; only 1: fix even_spec 1; only 1: intro m; only 1: easy).	31.8326449394	20225
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	5.0.0.2	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	0.224204063416	58
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.3.1.0.0.0.0.3.0.0	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: left; only 1: now right; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct (IHn m); only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	9.0610499382	3709
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	0.1.0.0.0.2.0.25.17.12	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	13.433314085	17363
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.784835100174	195
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	1.01492404938	253
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	1.0.0.3.0.0.0.0.1.3.0.8	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: left; only 1: auto with arith; only 1: intro m; only 1: destruct m as [| m]; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	14.3926849365	8912
Coq.Arith.Compare_dec.lt_dec	40	5.1.0.5.2.0.1.0.0.3	synth with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: easy; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	19.0754752159	11159
Coq.Arith.Compare_dec.gt_dec	40	0.1.10.17	synth with cache (only 1: revert n m; only 1: intro m; only 1: intro; only 1: apply le_dec).	31.930232048	21953
Coq.Arith.Compare_dec.ge_dec	40	1	synth with cache (only 1: apply le_dec).	0.017569065094	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	3	synth with cache (only 1: apply Nat.lt_decidable).	0.0183172225952	4
Coq.Arith.Compare_dec.dec_ge	40	1	synth with cache (only 1: apply Nat.le_decidable).	0.0165610313416	2
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0201501846313	1
Coq.Arith.Compare_dec.not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.0192320346832	2
Coq.Arith.Compare_dec.not_gt	40	2	synth with cache (only 1: apply Nat.le_ngt).	0.0227041244507	3
Coq.Arith.Compare_dec.not_ge	40	14	synth with cache (only 1: Nat.order).	0.31628704071	178
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.0220038890839	2
Coq.Arith.Compare_dec.nat_compare_lt	40	5.8.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	17.9522137642	6895
Coq.Arith.Compare_dec.nat_compare_gt	40	3.8.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	4.63721704483	1814
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.0.1.0.1.1.1.0.1.1	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: intros H; only 1: constructor; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	7.57465291023	3590
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	3.1.1.1	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: apply Nat.compare_lt_iff).	0.183288812637	54
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2	synth with cache (only 1: apply Nat.compare_gt_iff).	0.019758939743	3
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	8.4.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	18.217692852	5906
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	synth with cache (only 1: apply Nat.leb_le).	0.0188431739807	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0.7.1	synth with cache (only 1: revert m; only 1: intros a Ha; only 1: rewrite Nat.leb_nle; only 1: Nat.order).	1.1579220295	329
Coq.Arith.Compare_dec.leb_complete_conv	40	1	synth with cache (only 1: apply leb_iff_conv).	0.0233988761902	2
Coq.Arith.Compare_dec.leb_compare	40	9.3.1	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	11.342730999	4790
Coq.Arith.EqNat.eq_nat_refl	40	3.0.16	synth with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: now rewrite <- ?Nat.succ_le_mono).	0.870640039444	469
Coq.Arith.EqNat.eq_nat_is_eq	40	0.0.6.10	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	6.68717813492	3728
Coq.Arith.EqNat.eq_eq_nat	40	0.0	synth with cache (only 1: intros <-; only 1: apply eq_nat_refl).	0.02015209198	2
Coq.Arith.EqNat.eq_nat_eq	40	1.1.0.1.0	synth with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: apply eq_nat_is_eq).	0.804821968079	135
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	2.0.0.4.1.0.1.0.0.1.0.2.2	synth with cache (only 1: intros; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m as [| m]; only 1: now left; only 1: simpl; only 1: auto; only 1: intro m; only 1: simpl; only 1: destruct m as [| m]; only 1: now right; only 1: auto).	31.0506799221	24504
Coq.Arith.EqNat.beq_nat_refl	40	3.0.1.1.46	synth with cache (only 1: induction n; only 1: simpl; only 1: split; only 1: rewrite ?IHn; only 1: now Nat.nzsimpl).	1.0578110218	2332
Coq.Arith.EqNat.beq_nat_true	40	3.1.1.1.0.0.0.0.0.0.0.3	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intro m; only 1: destruct m; only 1: easy; only 1: contradiction || auto).	20.0632240772	9903
Coq.Arith.EqNat.beq_nat_false	40	6.0.1.0.0.0.0.0.3.2.0.2	synth with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: simpl; only 1: intros; only 1: intro H1; only 1: subst; only 1: discriminate; only 1: simpl; only 1: intro m; only 1: destruct m; only 1: easy; only 1: contradiction || auto).	13.4047849178	8861
Coq.Arith.EqNat.beq_nat_eq	40	3.1.1.1.0.0.0.1.1.0.0.5.3	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intro m; only 1: destruct m; only 1: easy; only 1: contradiction || auto).	23.6769840717	17375
Coq.Arith.Cantor.cancel_of_to	40
Coq.Arith.Cantor.to_nat_inj	40
Coq.Arith.Cantor.cancel_to_of	40
Coq.Arith.Cantor.of_nat_inj	40
Coq.Arith.Cantor.to_nat_spec	40
Coq.Arith.Cantor.to_nat_spec2	40
Coq.Arith.Cantor.to_nat_non_decreasing	40
Coq.Arith.Euclid.eucl_dev	40	1.47.15	synth with cache (only 1: intros Hq _; only 1: fix le_div2 1; only 1: auto).	39.2715089321	77412
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	19.1.1.2	synth with cache (only 1: intros R ? ? ? n; only 1: induction n; only 1: auto; only 1: firstorder).	19.6729559898	3572
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.00814318656921	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.1.8.3.22.0	synth with cache (only 1: intros A B f r H; only 1: unfold Basics.flip, respectful; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	35.2408521175	55461
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0135219097137	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.00745296478271	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: auto).	0.00585198402405	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.00615406036377	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0158340930939	5
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0189030170441	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0170040130615	5
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0168578624725	6
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0123970508575	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	1	synth with cache (only 1: split).	0.00733399391174	2
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	21.7211461067	13672
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.0.0.1.0.0.0.1.1.0.3	synth with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	21.7591629028	11655
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.0.0.1.0.0.0.0.1.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	22.747633934	15464
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	32.1340429783	23185
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	4	synth with cache (only 1: inversion 1).	0.0204658508301	21
Coq.Arith.PeanoNat.Nat.pow_0_r	40	1	synth with cache (only 1: split).	0.00785994529724	2
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	7.0	synth with cache (only 1: simpl; only 1: now nzsimpl).	0.0326228141785	14
Coq.Arith.PeanoNat.Nat.square_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0106790065765	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.3.35.19.16	synth with cache (only 1: inversion 1; only 1: apply (neq_succ_0 0); only 1: induction x; only 1: auto; only 1: easy).	14.1667439938	48648
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.div_mod_eq	40	0.0.0.0.0.0.0.5.0	synth with cache (only 1: destruct y as [| y]; only 1: simpl in *; only 1: reflexivity; only 1: unfold div, modulo; only 1: generalize (divmod_spec x y 0 y (le_n y)); only 1: destruct divmod as (q, u); only 1: intros (U, V); only 1: simpl in *; only 1: now rewrite mul_0_r, sub_diag, !add_0_r in U).	0.778794050217	451
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0108389854431	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.2	synth with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0381879806519	34
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	1.9	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	0.258820056915	146
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0103008747101	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	13	synth with cache (only 1: apply le_0_l).	0.0585970878601	80
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.0.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0335419178009	11
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.0.1.0.2.2.6	synth with cache (only 1: destruct n; only 1: fix le_div2 1; only 1: trivial; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	1.1804318428	1311
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0200960636139	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.0.8.1	synth with cache (only 1: destr_bool; only 1: nzinduct n; only 1: trivial; only 1: intros; only 1: intuition).	0.358272075653	278
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	0.3.22.2.2.39.2	synth with cache (only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: rewrite odd_spec; only 1: fix odd_spec 1; only 1: easy; only 1: discriminate).	26.1200809479	43205
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	3.5.2.4	synth with cache (only 1: intros x y; only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	3.85535407066	2875
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	5.0.0.6	synth with cache (only 1: intros p n m; only 1: unfold odd; only 1: fix even_spec 1; only 1: easy).	4.16620898247	2148
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0133969783783	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.6.8.0.2	synth with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: solve_max; only 1: rewrite max_le_iff; only 1: auto).	6.87746596336	5995
Coq.Arith.PeanoNat.Nat.div2_spec	40	2	synth with cache (only 1: trivial).	0.00768399238586	3
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.00800013542175	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	7.0	synth with cache (only 1: intros x y; only 1: Nat.order).	0.0148499011993	9
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0307829380035	1
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0282518863678	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0249741077423	2
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.0239968299866	1
Coq.Arith.Gt.gt_not_le	40	1	synth with cache (only 1: apply Nat.lt_nge).	0.0277049541473	2
Coq.Arith.Gt.le_S_gt	40	1.6.5	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.581624984741	132
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Nat.lt_succ_r).	0.0261759757996	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.102833032608	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.succ_le_mono).	0.101819992065	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	1	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0237100124359	2
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.026172876358	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	1.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0101819038391	3
Coq.Logic.JMeq.JMeq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0125689506531	3
Coq.Logic.JMeq.JMeq_eq	40
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.012274980545	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.012531042099	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0142078399658	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0140240192413	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0166041851044	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.1.1	synth with cache (only 1: intros A B x y H; only 1: destruct H; only 1: auto).	0.0150761604309	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0117728710175	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0116469860077	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.12.2	synth with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: trivial).	1.21749711037	1406
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.12.6.0	synth with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).	1.70053386688	4111
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	0.11.3.6.1.0.1.11	synth with cache (only 1: split; only 1: simpl; only 1: reflexivity; only 1: intro n; only 1: induction n; only 1: simpl in *; only 1: subst; only 1: reflexivity).	18.5773670673	47945
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0173900127411	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	5.12	synth with cache (only 1: intros a Ha; only 1: tauto).	0.151083946228	342
Coq.Logic.Classical_Prop.not_imply_elim	40	12.4	synth with cache (only 1: intros; only 1: tauto).	0.247295856476	601
Coq.Logic.Classical_Prop.not_imply_elim2	40	0	synth with cache (only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym).	0.00873899459839	1
Coq.Logic.Classical_Prop.imply_to_or	40	12.0.4	synth with cache (only 1: intros Ext A Ha; only 1: intuition; only 1: tauto).	0.715504169464	1028
Coq.Logic.Classical_Prop.imply_to_and	40	5.1.1	synth with cache (only 1: intros; only 1: apply NNPP; only 1: tauto).	0.0686359405518	42
Coq.Logic.Classical_Prop.or_to_imply	40	0	synth with cache (only 1: tauto).	0.00897598266602	1
Coq.Logic.Classical_Prop.not_and_or	40	0.13	synth with cache (only 1: intros n m; only 1: tauto).	0.394210100174	332
Coq.Logic.Classical_Prop.or_not_and	40	2	synth with cache (only 1: tauto).	0.0756721496582	58
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.00983095169067	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.010381937027	1
Coq.Logic.Classical_Prop.imply_and_or	40	0.0.8.1	synth with cache (only 1: intros a n m H; only 1: elim H; only 1: auto with arith; only 1: auto with arith).	0.166994810104	202
Coq.Logic.Classical_Prop.imply_and_or2	40	0	synth with cache (only 1: tauto).	0.0120129585266	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.22.12	synth with cache (only 1: intro m; only 1: destruct m; only 1: eauto).	0.681560993195	1979
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	1.54	synth with cache (only 1: red; only 1: eauto).	0.257875919342	1609
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	1.1.0.0.0.1.0.0.0.5.0.0	synth with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: exact p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: cbn; only 1: auto; only 1: auto; only 1: auto).	1.79896783829	1702
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.26.3	synth with cache (only 1: intro n; only 1: subst; only 1: auto).	0.508352041245	1744
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.38	synth with cache (only 1: subst; only 1: reflexivity).	0.250690937042	1038
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_conform	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_conform_alt	40	0.0.0.0	synth with cache (only 1: revert start b; only 1: refine (fix loop start b := match P_dec start with | left yes => exist _ start _ | right no => let (n, r) := loop (S start) (inv_before_witness start b no) in exist _ n _ end); only 1: apply (Rstop yes); only 1: apply (Rnext no r)).	0.0204601287842	4
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.rel_ls_post	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.rel_ls_lower_bound	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.constructive_indefinite_ground_description_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_rel	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_from_0_rel	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.constructive_indefinite_ground_description_nat_direct	40	0.0.0.0	synth with cache (only 1: intro e; only 1: destruct (linear_search_from_0_conform e) as [found r]; only 1: exists found; only 1: apply (rel_ls_post r)).	0.0230269432068	4
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest_direct	40	0.0.0.0.0.0.0	synth with cache (only 1: intro e; only 1: destruct (linear_search_from_0_conform e) as [found r]; only 1: exists found; only 1: split; only 1: apply (rel_ls_post r); only 1: intros k pk; only 1: apply (rel_ls_lower_bound r pk), Nat.le_0_l).	0.12713098526	7
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	48.44	synth with cache (only 1: intros q; only 1: eauto with bool).	17.3626859188	63026
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.0.4.3.2.0.2.13.2.2.2	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	8.3002140522	13989
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0287120342255	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.5.0.4.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.201795101166	206
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	15.2	synth with cache (only 1: intros; only 1: apply H).	0.867702007294	1113
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	10.3.8	synth with cache (only 1: intros; only 1: intro x; only 1: apply H).	3.02772307396	2754
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	14.0803329945	9671
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.3.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0174670219421	7
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	3.0.0.1	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.113522052765	26
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.6.0.0.0.0	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	0.53085899353	354
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	4.16.11.23	synth with cache (only 1: destruct a, b; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).	1.82871890068	4961
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	6.6.0.60.1	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	8.1882519722	57491
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	9.15.0.14.1	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	1.57652592659	7420
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	1.3.17.4	synth with cache (only 1: red; only 1: intro A; only 1: intro p; only 1: eauto).	4.45938301086	7279
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	20.7.3.2.1.0	synth with cache (only 1: unfold not; only 1: intros P notall; only 1: intro all; only 1: apply NNPP; only 1: apply NNPP; only 1: eauto).	38.5809159279	79766
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	0.0.0.10.6	synth with cache (only 1: intros; only 1: destruct H as [m H]; only 1: intro K; only 1: apply H; only 1: trivial).	1.40594601631	1980
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.1	synth with cache (only 1: intros U P x y p q H; only 1: rewrite (M.proof_irrelevance _ q (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0381510257721	16
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	12.375193119	6626
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0168778896332	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0816311836243	42
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	synth with cache (only 1: intros A B f g H x; only 1: rewrite H; only 1: auto).	0.0321190357208	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0300970077515	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0327568054199	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	2.10.0.0	synth with cache (only 1: apply (fun P k => forall_eq_rect _ P k _ H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.521748065948	357
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: reflexivity).	0.0235891342163	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	synth with cache (only 1: reflexivity).	0.0171871185303	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	synth with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0356569290161	4
Coq.Logic.HLevels.false_hprop	40	0.8	synth with cache (only 1: intros H H'; only 1: destruct H).	0.0511889457703	18
Coq.Logic.HLevels.true_hprop	40	4.2.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity || destruct H).	0.041491985321	9
Coq.Logic.HLevels.not_hprop	40	0.0.1.0.0	synth with cache (only 1: intros p q; only 1: intro H; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).	0.0413339138031	6
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	1.5.2.7.9.1	synth with cache (only 1: intros A B f g <- H; only 1: destruct H; only 1: simpl; only 1: intro H'; only 1: rewrite eq_trans_refl_l; only 1: trivial).	10.6222500801	13013
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	2.5.0.3.3	synth with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.242468118668	341
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0	synth with cache (only 1: destruct 1; only 1: auto).	0.0151689052582	2
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.85.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: auto).	18.533698082	95608
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.28.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.994790077209	2958
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	7.37.0	synth with cache (only 1: intros C decide H P H0; only 1: inversion 1; only 1: apply eq_dep_intro).	4.73991298676	14773
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	2.11	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.338230133057	295
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.10.0.0.10.13	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.36326098442	5184
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	synth with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0216219425201	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0276091098785	14
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.11.0.0.10.0	synth with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.33418798447	2003
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.0.6.10.1.4.6.5.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	7.98215579987	15981
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.2.1	synth with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.143467903137	19
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.1.5	synth with cache (only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.19167804718	74
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	45.1.0.6	synth with cache (only 1: intros r s; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	9.57995295525	22677
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	0.25.13.35.8.7	synth with cache (only 1: red; only 1: destruct p1; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: apply eq_dep_intro).	33.7133190632	131290
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	10.3.1	synth with cache (only 1: intros p2; only 1: intro eq_rect_eq; only 1: auto).	0.305555820465	462
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	0.8.0.0.5.4	synth with cache (only 1: red; only 1: intro; only 1: intro eq_dep_eq; only 1: intros p2; only 1: rewrite H; only 1: apply eq_dep_eq).	2.62313699722	4841
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	3.21.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	1.6627831459	2150
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0536971092224	25
Coq.Logic.EqdepFacts.f_eq_dep	40	1.5.1	synth with cache (only 1: intros * H; only 1: destruct H; only 1: reflexivity).	0.0333521366119	10
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0211880207062	2
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.0197219848633	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6.0.0	synth with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.014909029007	9
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0383818149567	34
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	1.21.21	synth with cache (only 1: intro p; only 1: destruct p; only 1: assumption).	1.74840784073	3944
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	14.2.8.4.0.0	synth with cache (only 1: unfold not; only 1: intro m; only 1: intros; only 1: destruct H; only 1: trivial; only 1: contradiction).	11.7191491127	49627
Coq.Logic.Decidable.dec_True	40	0.0.0	synth with cache (only 1: unfold decidable; only 1: unfold not; only 1: tauto).	0.0105321407318	3
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00915694236755	2
Coq.Logic.Decidable.dec_or	40	2.10.1.9	synth with cache (only 1: intro x; only 1: intro; only 1: unfold decidable; only 1: tauto).	2.3282790184	6069
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.021537065506	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0125248432159	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0149080753326	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0922420024872	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00828385353088	2
Coq.Logic.Decidable.not_or	40	1	synth with cache (only 1: tauto).	0.0210070610046	28
Coq.Logic.Decidable.not_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0110371112823	2
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0136368274689	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00946879386902	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0297689437866	2
Coq.Logic.Decidable.not_true_iff	40	17	synth with cache (only 1: tauto).	0.0757150650024	357
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.00549507141113	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00898313522339	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0125660896301	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0132369995117	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0133020877838	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0209169387817	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0141289234161	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0151610374451	2
Coq.Logic.Decidable.not_or_iff	40	0	synth with cache (only 1: tauto).	0.00945687294006	1
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.00891208648682	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0180938243866	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0175569057465	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.033744096756	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	2	synth with cache (only 1: discriminate).	0.0257821083069	3
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	17	synth with cache (only 1: trivial).	0.106773138046	126
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0202901363373	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	56.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder).	13.3989920616	11206
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	4.5.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite ring_morphism0; only 1: Esimpl).	0.98827791214	221
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.05971693993	43
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.0750069618225	10
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0168988704681	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0110371112823	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00937604904175	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00870394706726	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0134491920471	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	34	synth with cache (only 1: auto).	2.73235607147	2618
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	7	synth with cache (only 1: eauto).	0.0464148521423	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	15	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	14.2565610409	232
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	27	synth with cache (only 1: eauto).	4.66752290726	1107
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	3.2.3.2.3.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	27.2007608414	816
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.741915941238	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.763381004333	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	5.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.942397117615	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	1.04706096649	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	5.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.682157993317	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	synth with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	10.4902920723	20
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	2.0.0.0.0.0	synth with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: destruct 1; only 1: trivial; only 1: now destruct 1).	7.82163310051	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	3.1	synth with cache (only 1: intros; only 1: now destruct 1).	3.67850804329	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0099139213562	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0101909637451	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0104410648346	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	1.2.1.5.0	synth with cache (only 1: intros x; only 1: induction x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.0638730526	388
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.0.0.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.0728731155396	10
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	19.36.3.4	synth with cache (only 1: intros x H; only 1: unfold equality; only 1: rewrite <- (Rmult_comm x); only 1: split).	33.1364970207	22913
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.01726603508	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	5	synth with cache (only 1: reflexivity).	0.00982117652893	6
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0	synth with cache (only 1: now rewrite ?H, ?IHp).	0.0172410011292	1
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	8	synth with cache (only 1: easy).	0.0203530788422	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	10	synth with cache (only 1: intuition).	0.0255742073059	21
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	7.6.20	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	1.0161690712	1163
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.17	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: congruence).	0.249368190765	201
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	5.4	synth with cache (only 1: intros a b c d ? ?; only 1: firstorder).	0.119328022003	54
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	2.0.10	synth with cache (only 1: intros z Hz; only 1: intro H; only 1: firstorder).	0.189841985703	202
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	1.3	synth with cache (only 1: intros; only 1: apply H).	0.0140960216522	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	2	synth with cache (only 1: firstorder).	0.0474050045013	24
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	9	synth with cache (only 1: firstorder).	0.0256650447845	11
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.00911998748779	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0100700855255	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	19	synth with cache (only 1: firstorder).	0.175268888474	186
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	21	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.672981977463	561
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	4.28	synth with cache (only 1: intro H1; only 1: firstorder).	0.691473007202	1315
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	8.1.19	synth with cache (only 1: intros z Hz; only 1: intro H; only 1: firstorder).	1.22540807724	1316
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	17.10	synth with cache (only 1: intro n; only 1: firstorder).	1.36872982979	1977
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	26.13	synth with cache (only 1: intros; only 1: firstorder).	1.48313212395	1727
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	20.18	synth with cache (only 1: intros; only 1: firstorder).	1.1157310009	1440
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	25.10	synth with cache (only 1: intros x y H; only 1: firstorder).	1.81417989731	1887
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	17	synth with cache (only 1: intuition).	0.140129089355	180
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	15	synth with cache (only 1: firstorder).	0.0465960502625	91
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	5.2	synth with cache (only 1: elim ARth; only 1: firstorder).	0.0574607849121	18
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0127720832825	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0142209529877	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00887703895569	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00753712654114	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.00891900062561	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.2	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0318500995636	4
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0113341808319	1
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.5.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0236918926239	8
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0	synth with cache (only 1: exact (SRadd_ext SReqe)).	0.00978398323059	1
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	1	synth with cache (only 1: exact (SRmul_ext SReqe)).	0.0104949474335	2
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0100798606873	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.00893402099609	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0106828212738	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0125827789307	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).	3.33666992188	686
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	4.4.0.1.2	synth with cache (only 1: intros w; only 1: induction w as [| a w IHw]; only 1: simpl; only 1: norm; only 1: let rec rrefl := gen_reflexivity Rsth in rrefl).	0.712786197662	455
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0162920951843	3
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	2	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0160250663757	3
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	59	synth with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?Ring_polynom.Pmul_ok).	5.73168683052	1785
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.00884604454041	1
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	10	synth with cache (only 1: firstorder).	0.0653810501099	25
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	17.10	synth with cache (only 1: intro b1; only 1: firstorder  (subst; auto)).	1.79481983185	1503
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	19	synth with cache (only 1: firstorder).	37.5164101124	4725
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	19.3	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	8.0569961071	3830
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	17.2	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	2.58418488503	901
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	52	synth with cache (only 1: firstorder).	4.70277190208	2818
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	55	synth with cache (only 1: firstorder).	6.03875207901	3907
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	18.6105949879	2673
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.1.0.1.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	18.544303894	1159
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	synth with cache (only 1: reflexivity).	0.021980047226	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	15.14.1	synth with cache (only 1: intros x; only 1: intros Base Step n; only 1: firstorder).	5.82432603836	3654
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.1.0.2	synth with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0790758132935	7
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	0.5.6.9	synth with cache (only 1: intros a b n; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	2.09933996201	1072
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	1.0.0.9.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.714036941528	195
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	0.1.5.11.2.4.1	synth with cache (only 1: unfold Qeq, Qplus; only 1: red; only 1: intuition; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	3.86443305016	1597
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0102579593658	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	4	synth with cache (only 1: simpl_relation).	0.025988817215	20
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	0.0.3.0.0.3.1.10.0	synth with cache (only 1: induct s x; only 1: reflexivity; only 1: intuition_in; only 1: split; only 1: intuition_in; only 1: intuition_in; only 1: split; only 1: intuition_in; only 1: intuition_in).	15.0147519112	5646
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0470931529999	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	6.6.0.2	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: now auto; only 1: simpl; only 1: intuition_in).	1.68284702301	579
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0276408195496	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.724693059921	587
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.00680208206177	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0098979473114	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0634250640869	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.0.1.0.0.1.0.0.1.1.0	synth with cache (only 1: induct s x; only 1: ok; only 1: descolor; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: descolor; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: descolor; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	1.87055397034	391
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.00987410545349	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	7	synth with cache (only 1: ok).	0.0664539337158	21
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2.0.8	synth with cache (only 1: split; only 1: now simpl; only 1: auto).	0.0610799789429	56
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.2.2.92	synth with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: easy; only 1: easy).	5.2976500988	9066
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0115067958832	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	7.35.2	synth with cache (only 1: intros; only 1: elim H; only 1: now simpl).	5.96028399467	8185
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.2.1.1.0.0.1	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: apply fold_add_spec; only 1: rewrite fold_add_spec; only 1: tauto).	1.33244013786	383
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0710809230804	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.1.2.0.3.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: intros; only 1: invrb; only 1: intuition_in).	0.514663934708	406
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0337128639221	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.10.0.0.0	synth with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.1318321228	748
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.8.0.8.0.3.0	synth with cache (only 1: destruct s; only 1: right; only 1: assumption; only 1: intuition; only 1: descolor; only 1: auto; only 1: ok).	7.77288794518	9262
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	5.0	synth with cache (only 1: intros; only 1: auto).	0.0293960571289	7
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	12	synth with cache (only 1: now rewrite ?Ha).	0.0547020435333	61
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	4.5.1.0	synth with cache (only 1: intros [| x acc]; only 1: easy; only 1: simpl; only 1: auto).	1.48325896263	738
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.9.1.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.863305091858	545
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.2.0	synth with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0321609973907	13
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip; only 1: intros HE; only 1: auto_tc).	0.0424139499664	10
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0398330688477	9
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.1.0.0.0.2	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.257043123245	99
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0295040607452	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	3	synth with cache (only 1: solve_proper).	0.0827920436859	46
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	4.4	synth with cache (only 1: intro n; only 1: easy).	0.0940909385681	65
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	2.0	synth with cache (only 1: intro n; only 1: trivial).	0.0104207992554	4
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	2.11.22	synth with cache (only 1: intro n; only 1: intro H1; only 1: discriminate).	0.164983034134	804
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	0.0.1.1.0.3	synth with cache (only 1: fix odd_spec 1; only 1: intro n; only 1: rewrite odd_spec; only 1: split; only 1: trivial; only 1: trivial).	0.252575874329	170
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	9.1	synth with cache (only 1: intros; only 1: now BinNat.N.nzsimpl').	0.0934371948242	86
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	0.3.8	synth with cache (only 1: fix even_spec 1; only 1: intro H; only 1: destr_bool).	0.867125034332	461
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	14.27.55	synth with cache (only 1: intros l2; only 1: fix odd_spec 1; only 1: now try PeanoNat.Nat.order').	23.646476984	46280
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	2.13	synth with cache (only 1: fix odd_spec 1; only 1: trivial).	2.652520895	1872
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	11	synth with cache (only 1: destr_bool).	0.193868875504	68
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	1.0.0.0.1.5	synth with cache (only 1: intros; only 1: case u; only 1: intuition; only 1: easy'; only 1: intuition; only 1: now subst).	1.04491686821	476
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	8.5.3.9	synth with cache (only 1: intros x l; only 1: split; only 1: destr_bool; only 1: destr_bool).	8.21924901009	5233
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40	1.0.2.6	synth with cache (only 1: intro m; only 1: fix odd_spec 1; only 1: intro q; only 1: auto).	1.69002914429	737
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0170891284943	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0153992176056	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0157821178436	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	1.0.15	synth with cache (only 1: fix even_spec 1; only 1: symmetry; only 1: auto).	0.383565187454	371
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40	5.15.16	synth with cache (only 1: intros H0; only 1: fix odd_spec 1; only 1: auto).	2.1474840641	3631
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40	0.15.2	synth with cache (only 1: intro; only 1: fix odd_spec 1; only 1: trivial).	1.93991088867	2345
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	2.4.7.0.0.0	synth with cache (only 1: unfold In; only 1: intros s s' x; only 1: revert x s s'; only 1: intros n m; only 1: fix odd_spec 1; only 1: intuition).	21.7893638611	9960
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	6.3.0.15.7	synth with cache (only 1: destruct s; only 1: intuition; only 1: intuition discriminate; only 1: fix even_spec 1; only 1: intuition congruence).	7.60954904556	9512
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	6.8.4.1	synth with cache (only 1: intro f; only 1: intros s1; only 1: fix odd_spec 1; only 1: intuition congruence).	2.61777496338	2232
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	6.0.3	synth with cache (only 1: intros x y Hin; only 1: rewrite partition_filter; only 1: reflexivity).	0.21707701683	196
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	8.11.0	synth with cache (only 1: unfold In; only 1: fix even_spec 1; only 1: auto).	7.44848704338	5686
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	1.1.16	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: assumption).	0.173886060715	238
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0138981342316	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.0.2	synth with cache (only 1: intros; only 1: rewrite remove_spec; only 1: auto with relations).	0.0199310779572	6
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	synth with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0160439014435	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	0.2.0	synth with cache (only 1: rewrite union_spec; only 1: intros; only 1: auto).	0.0175039768219	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0476520061493	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	3.0.0	synth with cache (only 1: rewrite inter_spec; only 1: intros; only 1: intuition).	0.0557630062103	25
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.1.3.20	synth with cache (only 1: intros H; only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.331166982651	385
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1.1	synth with cache (only 1: intuition; only 1: rewrite diff_spec; only 1: auto).	0.019700050354	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.1.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0274460315704	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0326311588287	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.0.0	synth with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0168268680573	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	4.2	synth with cache (only 1: symmetry; only 1: intuition).	0.114505052567	13
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	15	synth with cache (only 1: intuition).	0.230651140213	173
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0.0.0.1.11	synth with cache (only 1: split; only 1: intuition; only 1: intros; only 1: apply -> subset_spec; only 1: auto).	0.955869197845	651
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0	synth with cache (only 1: intuition).	0.0138311386108	1
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	0.0.0.0.5	synth with cache (only 1: split; only 1: rewrite singleton_spec; only 1: auto with relations; only 1: rewrite singleton_spec; only 1: auto with relations).	0.0715050697327	34
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	0.4.2.21.1.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: apply -> Forall_forall; only 1: intuition; only 1: simpl; only 1: intuition).	34.3394198418	30560
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	1.2.1	synth with cache (only 1: intros E; only 1: rewrite remove_spec; only 1: intuition).	0.0324079990387	14
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0208239555359	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0207591056824	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	5	synth with cache (only 1: intuition).	0.0116560459137	6
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.0.7.2	synth with cache (only 1: intuition; only 1: apply BinPos.Pos.eqb_eq; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	6.43325209618	2789
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	0.0.0.0.0.0.1.1	synth with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.46822810173	284
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	14.0.5	synth with cache (only 1: intros x x'; only 1: intros; only 1: firstorder).	1.18901991844	1232
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	15.7	synth with cache (only 1: repeat red; only 1: firstorder).	6.88150691986	4149
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.0.1.7.0.0.1	synth with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: intros P; only 1: rewrite mem_iff; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intuition).	12.8063831329	678
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	4.2	synth with cache (only 1: intros x x' Hx; only 1: firstorder).	0.0192959308624	17
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0365390777588	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0329909324646	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.059671163559	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0458719730377	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	6	synth with cache (only 1: intuition).	0.0126271247864	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: intuition).	0.012088060379	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0.3	synth with cache (only 1: intros m'; only 1: fsetdec).	0.0509819984436	14
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0160050392151	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	1.5.4.4	synth with cache (only 1: intros n'; only 1: intros; only 1: intros H3; only 1: intuition).	0.240830183029	254
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.2.3	synth with cache (only 1: intros H0; only 1: intros; only 1: fsetdec).	0.0384259223938	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0269229412079	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.018373966217	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0314228534698	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	12.37	synth with cache (only 1: intros HP HIS; only 1: fsetdec).	2.19528412819	5468
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0.6	synth with cache (only 1: intros; only 1: fsetdec).	0.047623872757	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0255291461945	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0484850406647	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.2.2.2.0	synth with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.927495956421	187
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0321640968323	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0264430046082	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.044588804245	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.0952298641205	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.0580689907074	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.0698220729828	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.0674679279327	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.086266040802	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	19.0.1	synth with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	4.70761299133	3751
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.151749134064	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0466551780701	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0425980091095	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0592350959778	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0556659698486	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.09383893013	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0475838184357	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.0859739780426	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.15669298172	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.136225938797	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: fsetdec).	0.0231609344482	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0207850933075	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.038162946701	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0339369773865	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0325100421906	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0578219890594	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0426139831543	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0	synth with cache (only 1: fsetdec).	0.0351288318634	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0435581207275	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0390799045563	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0512521266937	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0670747756958	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.0678091049194	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0929138660431	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.108330011368	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.0880529880524	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.0803868770599	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0313110351562	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0279660224915	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0207991600037	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0217838287354	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0349960327148	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0320861339569	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0414850711823	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0504829883575	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0602149963379	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0504260063171	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.0811288356781	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.0841820240021	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	1.9.0.26	synth with cache (only 1: constructor; only 1: intuition; only 1: fsetdec; only 1: fsetdec).	0.892129898071	986
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.0	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	0.0731081962585	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.0.3	synth with cache (only 1: intros g_eq; only 1: expAdd; only 1: fsetdec).	0.282627105713	18
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.157351970673	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	1.3	synth with cache (only 1: fix le_div2 1; only 1: auto).	0.0981380939484	56
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	1.1.1.1.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: auto with sets; only 1: auto with relations).	0.232784032822	132
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40	0.8.3.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: destruct (fold_0 s i f) as (l, (Hl, (Hl1, Hl2))); only 1: eauto with *; only 1: auto with set).	16.1934151649	7325
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0201051235199	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0.1	synth with cache (only 1: rewrite cardinal_spec; only 1: PeanoNat.Nat.order_nz; only 1: auto with set).	0.0391161441803	15
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0304090976715	7
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	1.0.1.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto).	0.0616359710693	32
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0	synth with cache (only 1: auto with set).	0.00889801979065	1
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0181539058685	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0162990093231	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0	synth with cache (only 1: intuition_in).	0.0112419128418	1
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.1.1.0.16	synth with cache (only 1: right; only 1: now auto; only 1: now auto; only 1: now auto; only 1: intuition_in).	0.330639123917	390
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0154399871826	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0331189632416	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.154181003571	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	4.1.0	synth with cache (only 1: intros; only 1: apply <- mem_spec; only 1: auto with *).	0.0266928672791	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0135309696198	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	3.0.19	synth with cache (only 1: apply eq_true_iff_eq; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	1.10049200058	493
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.102766036987	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.0321021080017	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.103229999542	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.0092978477478	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	3.2.0.2	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	2.73625802994	465
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	2.3.0.5	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	3.10975289345	561
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	3	synth with cache (only 1: auto with set).	0.0104429721832	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0254340171814	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	7.0	synth with cache (only 1: intros; only 1: intuition).	0.278020143509	84
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1.1.0	synth with cache (only 1: apply subset_1; only 1: intros E; only 1: intuition).	0.0142459869385	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	1.0	synth with cache (only 1: intros; only 1: auto with set).	0.0248999595642	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	4.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0281071662903	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	1.0	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.0295829772949	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0126738548279	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	3.4.10.0.1	synth with cache (only 1: intros; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	16.0264589787	4480
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0	synth with cache (only 1: auto with set relations).	0.0112957954407	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0375828742981	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	1.1	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.0322978496552	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.00971698760986	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0144579410553	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0107510089874	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0111169815063	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0109460353851	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	1	synth with cache (only 1: auto with set relations).	0.0235481262207	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.00897717475891	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: auto with set).	0.0100440979004	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.00919198989868	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0556151866913	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0100910663605	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0115988254547	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0103249549866	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.010213136673	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.00981783866882	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.00957202911377	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0100769996643	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0.0	synth with cache (only 1: intros; only 1: auto with set).	0.0145709514618	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.00960683822632	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.00927901268005	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0316250324249	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0143489837646	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0113320350647	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0.0	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.120888948441	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0105941295624	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.00994992256165	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0222380161285	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	1.2.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set relations).	5.87763810158	1576
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.00913500785828	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	2.0.0.1.0	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.152186870575	47
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	2.0.0.0.0.0.0.30	synth with cache (only 1: inversion 1; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: intuition).	32.0291488171	33736
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.9.1.11	synth with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- not_mem_iff; only 1: auto with set).	3.54672122002	2970
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	1.0.0.0.1.1.2.0.0.0.6	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	2.85910391808	1917
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	5.0	synth with cache (only 1: intros; only 1: auto with set).	0.0567691326141	21
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	16	synth with cache (only 1: solve_proper).	0.23615193367	111
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	10.0	synth with cache (only 1: intros; only 1: auto with set).	0.0694270133972	79
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0130798816681	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.1.7	synth with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	23.85328722	7532
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	9.2.0.0.0.3	synth with cache (only 1: intro H; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	1.15110111237	1169
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.10.3.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	0.412259101868	369
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0256960391998	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.272289991379	2
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0	synth with cache (only 1: intros s' s x **; only 1: tauto).	0.42271399498	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	2	synth with cache (only 1: intuition).	0.0113470554352	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	1.26.6	synth with cache (only 1: intros n; only 1: intros P ? ? l; only 1: fsetdec).	28.7296869755	25000
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	synth with cache (only 1: fsetdec).	0.14222407341	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.3	synth with cache (only 1: intros; only 1: intuition).	0.011871099472	5
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1.14	synth with cache (only 1: intros m Hm; only 1: fsetdec).	0.709537029266	772
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	1.2.13	synth with cache (only 1: intros y H; only 1: red; only 1: fsetdec).	0.755261898041	909
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	18.15	synth with cache (only 1: intros a b c; only 1: fsetdec).	5.30473017693	5821
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0.4	synth with cache (only 1: intros n0 H2 H3; only 1: fsetdec).	0.0998010635376	15
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.0788540840149	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	5.8	synth with cache (only 1: intros a b; only 1: fsetdec).	0.40604186058	262
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	1.13.4	synth with cache (only 1: intros s1; only 1: intro; only 1: fsetdec).	2.8100669384	2315
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0.3	synth with cache (only 1: intros b s2' Rec n m s1; only 1: fsetdec).	0.230175971985	36
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	3.2.5	synth with cache (only 1: intros H i j ? E; only 1: rewrite singleton_spec; only 1: intuition).	0.244649887085	109
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	19.3	synth with cache (only 1: intros a b c d ? ? ?; only 1: fsetdec).	1.36664295197	1969
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.2	synth with cache (only 1: intros l1; only 1: fsetdec).	0.116229772568	46
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	9.10	synth with cache (only 1: intros P z H H0 x; only 1: fsetdec).	2.93529105186	2187
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	13.1.2.2	synth with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	4.34735894203	3999
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	6.3.1.0	synth with cache (only 1: fix even_spec 1; only 1: intro q; only 1: rewrite even_spec; only 1: intuition).	0.744642019272	680
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40	5.3	synth with cache (only 1: fix gcd_greatest 1; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0678329467773	47
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	3.0.0.4	synth with cache (only 1: split; only 1: intro; only 1: intuition_in; only 1: intuition).	0.177706003189	40
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	4	synth with cache (only 1: intuition_in).	0.0434401035309	37
Coq.MSets.MSetGenTree.Props.lt_leaf	40	4.0.0	synth with cache (only 1: intuition_in; only 1: red; only 1: easy).	0.029305934906	14
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0124289989471	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.2.5.15	synth with cache (only 1: intro n; only 1: red; only 1: intros x y H; only 1: intuition_in; only 1: order).	7.8098180294	5675
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.3.3	synth with cache (only 1: intros; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0896708965302	34
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	1.1.2.1.9	synth with cache (only 1: intros l' x H; only 1: contradict H; only 1: intros H1; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.556480169296	896
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.0.1.3	synth with cache (only 1: intros Base Step n; only 1: intro H; only 1: intros; only 1: eauto).	0.0220470428467	8
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0129170417786	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0084400177002	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	2.1.3.1.6.0.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: elim_compare x y; only 1: order; only 1: eauto; only 1: order).	15.4537398815	9754
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	2.0.0.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0242528915405	9
Coq.MSets.MSetGenTree.Props.empty_spec	40	2.39	synth with cache (only 1: intro n; only 1: auto).	0.110918045044	908
Coq.MSets.MSetGenTree.Props.empty_ok	40	3	synth with cache (only 1: auto with bool).	0.00598001480103	4
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	5.0.0	synth with cache (only 1: fix even_spec 1; only 1: intro m; only 1: trivial).	0.0321741104126	21
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40	1.0.0.5.0.2.1.0.0.3	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: simpl; only 1: intros; only 1: f_equal; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: simpl; only 1: unfold elements; only 1: now rewrite elements_node, app_assoc_reverse).	11.1040117741	6406
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	9.6	synth with cache (only 1: fix even_spec 1; only 1: trivial).	3.01320791245	2090
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	2.5.0.21.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: compute in *; only 1: setoid_rewrite Hy; only 1: rewrite Hx; only 1: auto with *).	8.31654191017	9203
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1	synth with cache (only 1: firstorder).	0.0474669933319	34
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	3.12.0.0	synth with cache (only 1: intro n; only 1: induction n; only 1: fix le_div2 1; only 1: auto).	1.70988416672	1942
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	10	synth with cache (only 1: firstorder).	0.265215873718	196
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	3.10	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha).	3.04850101471	460
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	16.20	synth with cache (only 1: intro l; only 1: firstorder).	7.86037421227	13223
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	0.14.7	synth with cache (only 1: intros l1 l2 Heq; only 1: intros H; only 1: now intros -> ->).	12.9295239449	9196
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite elements_iff; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply elements_iff).	0.0549249649048	12
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: compute; only 1: eauto).	0.0125441551208	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	10	synth with cache (only 1: firstorder  (subst; auto)).	0.1710729599	87
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.4.0.1.0.4.10	synth with cache (only 1: intro n; only 1: split; only 1: unfold Same_set, Included, mkEns, In; only 1: Dec.fsetdec; only 1: unfold Same_set, Included, mkEns, In; only 1: inversion 1; only 1: eauto with set relations).	3.26022005081	2917
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	3.0.0.0.1.0.1.3.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intros (Hb, Ha); only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with *).	6.79648709297	3640
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	1.3.9.10	synth with cache (only 1: intros l; only 1: simpl_relation; only 1: rewrite <- H; only 1: tauto).	21.017635107	2024
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	9.6	synth with cache (only 1: fix even_spec 1; only 1: auto).	4.38395094872	2046
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	6.8	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.33889985085	706
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.1.4	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	2.91439199448	959
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	1.1	synth with cache (only 1: intros; only 1: intuition).	0.0315611362457	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	0.0.0.0.1.6	synth with cache (only 1: unfold singleton; only 1: constructors; only 1: intros; only 1: inv; only 1: auto; only 1: auto).	9.80925798416	265
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	1.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).	0.033411026001	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.102607011795	35
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	1.1	synth with cache (only 1: intros; only 1: intuition).	0.484931945801	101
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	3.1.1.0.0	synth with cache (only 1: induction s; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).	0.116811990738	13
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: constructors).	0.0307459831238	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	0.0.0.1.2.0.3.1	synth with cache (only 1: destruct s; only 1: unfold Empty, empty; only 1: intros; only 1: intro; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	3.1735959053	1046
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0346868038177	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	1.1.12	synth with cache (only 1: fix even_spec 1; only 1: intro H; only 1: eauto).	5.01982498169	1526
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	1.4	synth with cache (only 1: revert H; only 1: trivial).	0.0112819671631	7
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	6.2.5.6	synth with cache (only 1: intro n; only 1: intro m; only 1: fix odd_spec 1; only 1: easy).	7.59664106369	5711
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.0.0.0.4.0.1.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intuition; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	14.2902929783	5859
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	8	synth with cache (only 1: split).	0.00788807868958	9
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.3.5.12	synth with cache (only 1: intros x H; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	2.65246796608	2609
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	0.0.0.0.0.0.0.13.0	synth with cache (only 1: induction2; only 1: eauto; only 1: apply Hrec'; only 1: auto; only 1: auto; only 1: auto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	18.8401310444	6802
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0558440685272	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	3.5	synth with cache (only 1: fix even_spec 1; only 1: intuition).	0.509927988052	145
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	0.3.3.4	synth with cache (only 1: intro n; only 1: intro l; only 1: fix odd_spec 1; only 1: intuition).	8.22831892967	3369
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	2	synth with cache (only 1: auto).	0.0086510181427	3
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	6.25	synth with cache (only 1: intro n; only 1: inversion 1).	0.32713508606	561
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	12.1.0.0	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: easy).	7.46827411652	4676
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	3.0	synth with cache (only 1: intros; only 1: intuition).	0.0126278400421	5
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	1.1.0.0	synth with cache (only 1: intro l; only 1: intro H; only 1: inv; only 1: auto).	0.0203409194946	6
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	3.1.0.2	synth with cache (only 1: intro m; only 1: intro H; only 1: inv; only 1: intuition).	0.0292620658875	19
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	0.0.3.0.1.0.7.1	synth with cache (only 1: intros l; only 1: intro n; only 1: induction l as [| a l IH]; only 1: intros; only 1: discriminate; only 1: inversion_clear 1; only 1: rewrite InA_cons; only 1: auto).	10.2324359417	5726
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.0.0.0.0.7	synth with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: inversion 1).	0.355810165405	208
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.0	synth with cache (only 1: intro s; only 1: auto).	0.0121150016785	3
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	4.1.0	synth with cache (only 1: intros n H; only 1: inv; only 1: intuition).	0.0701129436493	8
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4.0.0	synth with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: inversion_clear Hll'; only 1: now f_equiv).	0.0488879680634	17
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: now Z.nzsimpl).	0.0262479782104	1
Coq.Floats.FloatLemmas.Z_frexp_spec	40
Coq.Floats.FloatLemmas.Z_ldexp_spec	40
Coq.Relations.Relation_Operators.Simple_Lexicographic_Product.slexprod_lexprod	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.8.0	synth with cache (only 1: red; only 1: induction 1 as [| m _]; only 1: auto with sets; only 1: auto with sets).	0.10431098938	53
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.2.0.0.0.15	synth with cache (only 1: induction 1 as [? ?| ]; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	2.01827001572	1126
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.8.1.4	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.490386962891	304
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	2.0.8.1.6	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).	0.735865831375	835
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.4.0.3	synth with cache (only 1: induction 1 as [x y H| x y z H H0 IH0]; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.586776971817	344
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.2.0.0.4	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.981657028198	453
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.0.0.1.2.2.0.0.4	synth with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	17.6215779781	7177
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.4.0.0.3.1.2	synth with cache (only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.396566867828	497
Coq.ssr.ssreflect.master_key	40	13	synth with cache (only 1: tauto).	0.0343110561371	60
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	1.2.27	synth with cache (only 1: unfold not; only 1: unlock; only 1: intuition).	1.18473410606	1757
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	synth with cache (only 1: by case : k ).	0.0200870037079	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	2.15	synth with cache (only 1: destruct 1; only 1: auto).	0.383645057678	327
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	synth with cache (only 1: intuition).	0.0209379196167	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.0205330848694	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2.1.1	synth with cache (only 1: red; only 1: intros h1 h2; only 1: intuition).	0.225176095963	7
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.022155046463	1
Coq.ssr.ssreflect.abstract_context	40	1.146.132	synth with cache (only 1: intro H; only 1: apply H; only 1: split).	27.3313999176	228835
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.01700091362	1
Coq.ssr.ssrbool.is_true_true	40	17	synth with cache (only 1: reflexivity).	0.0389420986176	126
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: intuition).	0.0122609138489	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.0157821178436	2
Coq.ssr.ssrbool.negbT	40	0.2.2	synth with cache (only 1: intuition; only 1: subst; only 1: by [  ]).	0.0204548835754	7
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.0148870944977	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.0151998996735	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.0152931213379	1
Coq.ssr.ssrbool.negbK	40	3.23	synth with cache (only 1: intro n; only 1: Bool.destr_bool).	0.217149972916	367
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.0136182308197	1
Coq.ssr.ssrbool.negb_inj	40	0.27	synth with cache (only 1: intro n; only 1: Bool.destr_bool).	0.251283884048	390
Coq.ssr.ssrbool.negbLR	40	4	synth with cache (only 1: Bool.destr_bool).	0.0194389820099	5
Coq.ssr.ssrbool.negbRL	40	5	synth with cache (only 1: Bool.destr_bool).	0.0212190151215	6
Coq.ssr.ssrbool.contra	40	0.0.16	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.374387979507	319
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.125682830811	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.018767118454	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.019345998764	1
Coq.ssr.ssrbool.contraT	40	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0523331165314	23
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.0169868469238	1
Coq.ssr.ssrbool.contraFT	40	1.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.115875959396	34
Coq.ssr.ssrbool.contraFN	40	1.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.148844003677	61
Coq.ssr.ssrbool.contraTF	40	2.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0782618522644	23
Coq.ssr.ssrbool.contraNF	40	2.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.117151021957	36
Coq.ssr.ssrbool.contraFF	40	1.2.18	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).	0.610245943069	469
Coq.ssr.ssrbool.contra_not	40	3.7	synth with cache (only 1: intro; only 1: auto).	0.0420091152191	39
Coq.ssr.ssrbool.contraPnot	40	0	synth with cache (only 1: by auto).	0.0132079124451	1
Coq.ssr.ssrbool.contraTnot	40	0.5	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0360448360443	7
Coq.ssr.ssrbool.contraNnot	40	0	synth with cache (only 1: by case : b ; auto).	0.0153040885925	1
Coq.ssr.ssrbool.contraPT	40	0.9.12	synth with cache (only 1: Bool.destr_bool; only 1: red; only 1: intuition).	2.09011912346	1881
Coq.ssr.ssrbool.contra_notT	40	1.8.13	synth with cache (only 1: Bool.destr_bool; only 1: red; only 1: intuition).	2.12107610703	1548
Coq.ssr.ssrbool.contra_notN	40	1	synth with cache (only 1: by case : b  => //= /(_ isT) HP /(_ HP)).	0.0230598449707	2
Coq.ssr.ssrbool.contraPN	40	2.1.1.1.0	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: by case : b  => //= /(_ isT) nP /nP).	0.0430040359497	11
Coq.ssr.ssrbool.contraFnot	40	1.0.0.0.0.0.2	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: rewrite -{+1}[b]negbK; only 1: by case : b ; auto).	0.0525097846985	11
Coq.ssr.ssrbool.contraPF	40	1	synth with cache (only 1: by case : b  => //=; move /(_ isT) =>HP /HP).	0.0255229473114	2
Coq.ssr.ssrbool.contra_notF	40	0	synth with cache (only 1: by case : b  => // /(_ isT)).	0.0202128887177	1
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0159800052643	1
Coq.ssr.ssrbool.BoolIf.ifT	40	2	synth with cache (only 1: by case : b ).	0.0219521522522	3
Coq.ssr.ssrbool.BoolIf.ifF	40	1	synth with cache (only 1: by case : b ).	0.0182278156281	2
Coq.ssr.ssrbool.BoolIf.ifN	40	2	synth with cache (only 1: by case : b ).	0.0209300518036	3
Coq.ssr.ssrbool.BoolIf.if_same	40	1	synth with cache (only 1: by case  def_b: b ; constructor).	0.0145881175995	2
Coq.ssr.ssrbool.BoolIf.if_neg	40	0	synth with cache (only 1: by case b).	0.0155701637268	1
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.0146510601044	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.0144910812378	1
Coq.ssr.ssrbool.BoolIf.ifE	40	11	synth with cache (only 1: trivial).	0.0446569919586	33
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0189318656921	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.018030166626	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.0128788948059	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	1.1.43	synth with cache (only 1: intros [?| ?]; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.28472709656	1291
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	0.25	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	0.70964384079	433
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.23	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).	0.632641077042	371
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	0.29	synth with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case Hb => [? _ H ?|? H _]; case : H ).	0.619605064392	593
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.30	synth with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.422049999237	483
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40	18	synth with cache (only 1: by case : Pb ; constructor; auto).	0.126551866531	145
Coq.ssr.ssrbool.Reflect.rwP	40	14	synth with cache (only 1: by case Pb).	0.0695829391479	75
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	14.12.3.17	synth with cache (only 1: intro H; only 1: intro p; only 1: destruct H; only 1: intuition).	0.862372159958	2861
Coq.ssr.ssrbool.impliesPn	40	0.29.1.23	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: destruct H; only 1: tauto).	3.01719093323	6739
Coq.ssr.ssrbool.unlessL	40	10.29.3	synth with cache (only 1: split; only 1: intros r s; only 1: auto).	1.06807494164	4073
Coq.ssr.ssrbool.unlessR	40	0.45.9	synth with cache (only 1: split; only 1: intros H ?; only 1: intuition).	0.665143013	2713
Coq.ssr.ssrbool.unless_sym	40	2.1.5.2.70.3	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	2.01595020294	9865
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.14	synth with cache (only 1: red; only 1: by move  =>b b' ->).	0.0661239624023	91
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	0.37.2.0.0.2.1	synth with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	6.21181106567	25326
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0178918838501	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0216498374939	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0229299068451	1
Coq.ssr.ssrbool.pair_andP	40	5	synth with cache (only 1: intuition).	0.0341260433197	19
Coq.ssr.ssrbool.ReflectConnectives.idP	40	2.1.5	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).	0.0438339710236	27
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.0127279758453	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.013277053833	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.0148718357086	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0130460262299	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.0140960216522	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0207099914551	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0222020149231	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0144989490509	1
Coq.ssr.ssrbool.ReflectCombinators.negPP	40
Coq.ssr.ssrbool.ReflectCombinators.andPP	40
Coq.ssr.ssrbool.ReflectCombinators.orPP	40
Coq.ssr.ssrbool.ReflectCombinators.implyPP	40
Coq.ssr.ssrbool.andTb	40	6	synth with cache (only 1: constructor).	0.0154769420624	7
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.0128719806671	1
Coq.ssr.ssrbool.andbT	40	1.2.5.12	synth with cache (only 1: intro b1; only 1: destruct b1; only 1: intuition; only 1: repeat split).	0.243486881256	322
Coq.ssr.ssrbool.andbF	40	4.12	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.111513137817	136
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.0131571292877	1
Coq.ssr.ssrbool.andbC	40	0.6	synth with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0280420780182	8
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.0134310722351	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.0165469646454	1
Coq.ssr.ssrbool.andbAC	40	0	synth with cache (only 1: by do 3!case).	0.0197401046753	1
Coq.ssr.ssrbool.andbACA	40	0.42	synth with cache (only 1: intro n; only 1: Bool.destr_bool).	0.591650009155	945
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: Bool.destr_bool).	0.0132510662079	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.0130739212036	1
Coq.ssr.ssrbool.orbT	40	1	synth with cache (only 1: Bool.destr_bool).	0.0161581039429	2
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.0137438774109	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0136499404907	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.0160899162292	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.019837141037	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.0607481002808	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0193181037903	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0278511047363	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.0151119232178	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.0151751041412	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0156540870667	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.0159628391266	1
Coq.ssr.ssrbool.andb_orl	40	3	synth with cache (only 1: by do 3!case).	0.0255088806152	4
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by case).	0.013365983963	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.020082950592	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0203511714935	1
Coq.ssr.ssrbool.andb_idl	40	8.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.436363935471	222
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0215971469879	1
Coq.ssr.ssrbool.andb_id2l	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0238060951233	1
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0297229290009	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0203230381012	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.019819021225	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0282230377197	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0280900001526	1
Coq.ssr.ssrbool.negb_and	40	1	synth with cache (only 1: Bool.destr_bool).	0.0168271064758	2
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.016863822937	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0161747932434	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.016294002533	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0164248943329	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0557329654694	1
Coq.ssr.ssrbool.implybT	40	1	synth with cache (only 1: by case : b ).	0.0138700008392	2
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: by case : b ).	0.0132269859314	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0140340328217	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.0141909122467	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.0128509998322	1
Coq.ssr.ssrbool.negb_imply	40	0	synth with cache (only 1: by case : a ; case : b ).	0.015839099884	1
Coq.ssr.ssrbool.implybE	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0155098438263	1
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0157570838928	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0176041126251	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0180311203003	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0199298858643	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0218448638916	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0286059379578	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.0115189552307	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0132298469543	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.0150918960571	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.0148110389709	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0189590454102	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.0199289321899	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.0191900730133	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0263428688049	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0188620090485	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.018926858902	1
Coq.ssr.ssrbool.addKb	40	3	synth with cache (only 1: by do 2!case).	0.0206389427185	4
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0145301818848	1
Coq.ssr.ssrbool.addIb	40	0	synth with cache (only 1: by do 3!case).	0.0206639766693	1
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	0.0203080177307	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.0131108760834	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.0148680210114	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0173761844635	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0162210464478	1
Coq.ssr.ssrbool.addbP	40	1.0.0.0.11	synth with cache (only 1: destruct a, b; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	0.243088006973	128
Coq.ssr.ssrbool.subrelUl	40	36.23.34	synth with cache (only 1: intros H x0; only 1: simpl; only 1: by move ->).	10.5038299561	34703
Coq.ssr.ssrbool.subrelUr	40	15.33.8.35	synth with cache (only 1: intro n; only 1: simpl; only 1: red; only 1: intuition).	27.7109689713	90557
Coq.ssr.ssrbool.sub_refl	40	3.18	synth with cache (only 1: red; only 1: auto).	0.0962920188904	237
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.015457868576	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.0161628723145	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	10	synth with cache (only 1: intuition).	0.0265641212463	22
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0	synth with cache (only 1: by [  ]).	0.0152959823608	1
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	synth with cache (only 1: by [  ]).	0.0140149593353	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	synth with cache (only 1: reflexivity).	0.0116529464722	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.8	synth with cache (only 1: intro; only 1: by [  ]).	0.0249080657959	10
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0141708850861	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0159862041473	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	6	synth with cache (only 1: auto).	0.0214791297913	7
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0190110206604	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0161859989166	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0146200656891	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0175080299377	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0182590484619	2
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.0151009559631	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0152990818024	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0158998966217	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0194039344788	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0199530124664	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0170538425446	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0202548503876	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0168211460114	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.0239968299866	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0219309329987	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.01828789711	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0196080207825	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0202829837799	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0248210430145	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0246341228485	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.14	synth with cache (only 1: intro n; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.162563800812	91
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0255041122437	1
Coq.ssr.ssrbool.LocalGlobal.in_on1P	40
Coq.ssr.ssrbool.LocalGlobal.in_on1lP	40	0.0	synth with cache (only 1: split => allf x; have  := allf x; rewrite inE => Q1f ; first  by case /andP ; only 1: by move  =>? ?; apply : Q1f ; apply /andP ).	0.049332857132	2
Coq.ssr.ssrbool.LocalGlobal.in_on2P	40
Coq.ssr.ssrbool.LocalGlobal.on1W_in	40	4	synth with cache (only 1: by move  =>? ?; auto).	0.0227439403534	5
Coq.ssr.ssrbool.LocalGlobal.on1lW_in	40	0	synth with cache (only 1: by move  =>D1f ? /D1f).	0.0200181007385	1
Coq.ssr.ssrbool.LocalGlobal.on2W_in	40	5	synth with cache (only 1: by move  =>? ?; auto).	0.023579120636	6
Coq.ssr.ssrbool.LocalGlobal.in_on1W	40	7	synth with cache (only 1: by move  =>? ?).	0.0215759277344	8
Coq.ssr.ssrbool.LocalGlobal.in_on1lW	40	1	synth with cache (only 1: by move  =>allf ? ? ?; apply : allf ).	0.0197920799255	2
Coq.ssr.ssrbool.LocalGlobal.in_on2W	40	0	synth with cache (only 1: by move  =>D1f ? ? ? ? ? ?; apply : D1f ).	0.0196681022644	1
Coq.ssr.ssrbool.LocalGlobal.on1S	40	46	synth with cache (only 1: by move  =>fK injf' x; apply : injf' ).	1.05376386642	1104
Coq.ssr.ssrbool.LocalGlobal.on1lS	40	0	synth with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.020015001297	1
Coq.ssr.ssrbool.LocalGlobal.on2S	40	6.44	synth with cache (only 1: Bool.destr_bool; only 1: by move  =>? ?; auto).	1.24768304825	1399
Coq.ssr.ssrbool.LocalGlobal.on1S_in	40	9.26	synth with cache (only 1: intro n; only 1: by move  =>? ?; auto).	0.959208965302	703
Coq.ssr.ssrbool.LocalGlobal.on1lS_in	40	0	synth with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0257380008698	1
Coq.ssr.ssrbool.LocalGlobal.on2S_in	40	9.37	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.52821707726	1219
Coq.ssr.ssrbool.LocalGlobal.in_on1S	40	1	synth with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0224409103394	2
Coq.ssr.ssrbool.LocalGlobal.in_on1lS	40	0	synth with cache (only 1: by move  =>fD2 fD1 ?; apply : fD1 ).	0.022735118866	1
Coq.ssr.ssrbool.LocalGlobal.in_on2S	40	4	synth with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0272381305695	5
Coq.ssr.ssrbool.in_sig.in1_sig	40	56.29	synth with cache (only 1: intro H; only 1: case  =>// undecP).	4.82266497612	12259
Coq.ssr.ssrbool.in_sig.in2_sig	40
Coq.ssr.ssrbool.in_sig.in3_sig	40
Coq.ssr.ssrbool.sub_in2	40	5.1.2	synth with cache (only 1: intros; only 1: intro; only 1: auto).	0.0392251014709	33
Coq.ssr.ssrbool.sub_in3	40	14.2.11	synth with cache (only 1: Bool.destr_bool; only 1: intro p; only 1: auto).	0.863390922546	1018
Coq.ssr.ssrbool.sub_in12	40	1.40	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.08552193642	1003
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0167670249939	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	5	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0195250511169	6
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0149919986725	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0176470279694	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	9.9.12.19.5.39	synth with cache (only 1: intro; only 1: move  =>mf mg x y; only 1: rewrite H; only 1: trivial; only 1: by [  ]; only 1: by [  ]).	23.9625458717	41488
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	1	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0179159641266	2
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.0335290431976	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym	40	0	synth with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0156970024109	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym	40	1	synth with cache (only 1: by move  =>fR y x; apply : fR ).	0.0159549713135	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in	40	0	synth with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0183110237122	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in	40	0	synth with cache (only 1: by move  =>mf x y hx hy; rewrite -mf ?mem_g // !fgK ?mem_g).	0.0189599990845	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0177099704742	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in11	40	0	synth with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0171499252319	1
Coq.ssr.ssrbool.CancelOn.onW_can	40	1	synth with cache (only 1: by move  =>? ?).	0.0161430835724	2
Coq.ssr.ssrbool.CancelOn.onW_can_in	40	1	synth with cache (only 1: by move  =>hf x hx ax; rewrite hf).	0.0179188251495	2
Coq.ssr.ssrbool.CancelOn.in_onW_can	40	0	synth with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.0166108608246	1
Coq.ssr.ssrbool.CancelOn.onS_can	40	34.32.25	synth with cache (only 1: Bool.destr_bool; only 1: intro m; only 1: auto).	3.05004882812	10194
Coq.ssr.ssrbool.CancelOn.onS_can_in	40	1	synth with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0224471092224	2
Coq.ssr.ssrbool.CancelOn.in_onS_can	40	2	synth with cache (only 1: by move  =>fD2 fD1 ?; apply : fD1 ).	0.0189480781555	3
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	synth with cache (only 1: auto).	0.0063750743866	2
Coq.ssr.ssrfun.unitE	40	1.2.14	synth with cache (only 1: intro n; only 1: induction n; only 1: Bool.destr_bool).	0.160981893539	176
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	2	synth with cache (only 1: split).	0.00901794433594	3
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.5	synth with cache (only 1: intros; only 1: by [  ]).	0.0180428028107	7
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	2.38.23.8.32	synth with cache (only 1: intros H; only 1: red; only 1: intros n m; only 1: rewrite H; only 1: trivial).	11.2241151333	63569
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	6.0	synth with cache (only 1: intros H ?; only 1: trivial).	0.0108530521393	8
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	5.6.9.5.6.6.143.40	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro p; only 1: destruct H; only 1: assumption; only 1: intro p; only 1: destruct H; only 1: assumption).	31.592236042	245846
Coq.ssr.ssrfun.Sig.svalP	40	2	synth with cache (only 1: apply proj2_sig).	0.00961899757385	3
Coq.ssr.ssrfun.Sig.s2valP	40
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.00894403457642	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0130350589752	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0158889293671	1
Coq.ssr.ssrfun.Injections.can_pcan	40	0.44.1.8.10	synth with cache (only 1: intros; only 1: red; only 1: intro n; only 1: rewrite H; only 1: constructor).	6.37293815613	34161
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0109670162201	2
Coq.ssr.ssrfun.Injections.canLR	40	7.15.3	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.382365942001	1112
Coq.ssr.ssrfun.Injections.canRL	40	10.2	synth with cache (only 1: destruct 2; only 1: auto).	0.0936779975891	149
Coq.ssr.ssrfun.Some_inj	40	0.1.10.10	synth with cache (only 1: intro m; only 1: inversion 1; only 1: destruct H; only 1: reflexivity).	0.360360145569	502
Coq.ssr.ssrfun.of_voidK	40	0.1	synth with cache (only 1: intro n; only 1: induction n).	0.0108850002289	3
Coq.ssr.ssrfun.esymK	40	0.14.9.2	synth with cache (only 1: red; only 1: Bool.destr_bool; only 1: subst; only 1: reflexivity).	0.329301834106	1049
Coq.ssr.ssrfun.etrans_id	40	1.9	synth with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.027440071106	34
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	28	synth with cache (only 1: by move  =>eq_fg x).	0.0956170558929	390
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	1.53	synth with cache (only 1: red; only 1: auto).	0.573763847351	2015
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	24.10.10	synth with cache (only 1: intros Hfst Hsnd; only 1: intros H ?; only 1: auto).	0.997058868408	3040
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.00906014442444	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	1	synth with cache (only 1: auto).	0.00775408744812	2
Coq.ssr.ssrunder.Under_rel.over_rel	40	1	synth with cache (only 1: now trivial).	0.0077748298645	2
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.008868932724	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.00786113739014	1
Coq.Sets.Uniset.defs.le_refl	40	0	synth with cache (only 1: destr_bool).	0.0142500400543	1
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0190169811249	4
Coq.Sets.Uniset.defs.seq_refl	40	4	synth with cache (only 1: auto).	0.0110070705414	5
Coq.Sets.Uniset.defs.seq_trans	40	1.0.2.0.7.5	synth with cache (only 1: destruct x; only 1: intro; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.02798914909	1292
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0178821086884	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0179400444031	3
Coq.Sets.Uniset.defs.union_empty_right	40	18.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	2.5817220211	3409
Coq.Sets.Uniset.defs.union_comm	40	13.1.4.2	synth with cache (only 1: unfold seq; only 1: simpl; only 1: destruct y; only 1: intuition).	7.88965296745	10138
Coq.Sets.Uniset.defs.union_ass	40	0.0.0.0.1.0.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: auto with bool).	0.130566120148	18
Coq.Sets.Uniset.defs.seq_left	40	1.0.3.1.0.0	synth with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.55529499054	264
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0385620594025	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	2.1.1.2.1.0.0.0.0.0.1	synth with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	31.9045450687	17411
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0	synth with cache (only 1: firstorder).	0.020742893219	1
Coq.Sets.Multiset.multiset_defs.meq_trans	40	5.0.8.1	synth with cache (only 1: unfold meq; only 1: compute; only 1: destruct x; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).	15.794344902	1872
Coq.Sets.Multiset.multiset_defs.meq_sym	40	5.0.0.0.0	synth with cache (only 1: destruct y; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: now f_equal).	0.0517978668213	11
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0277559757233	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0375928878784	4
Coq.Sets.Multiset.multiset_defs.munion_comm	40
Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.1.0.1.0.2.2	synth with cache (only 1: destruct x; only 1: unfold munion; only 1: unfold meq; only 1: destruct y; only 1: destruct z; only 1: unfold multiplicity; only 1: auto with arith).	3.41569018364	1326
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.2.3.0.0	synth with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct z; only 1: auto).	0.228765010834	31
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.169939994812	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	0.0.2.1.4	synth with cache (only 1: intros; only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	1.38508296013	502
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	15	synth with cache (only 1: auto with sets).	0.0446310043335	91
Coq.Sets.Integers.Integers_sect.le_antisym	40	1.2	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0286238193512	11
Coq.Sets.Integers.Integers_sect.le_trans	40	4	synth with cache (only 1: exact PeanoNat.Nat.le_trans).	0.0132961273193	5
Coq.Sets.Integers.Integers_sect.le_Order	40	2.0.2.0.1.0.0	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: PeanoNat.Nat.order; only 1: red; only 1: PeanoNat.Nat.order).	0.675354003906	301
Coq.Sets.Integers.Integers_sect.triv_nat	40	13.4	synth with cache (only 1: intros; only 1: split).	0.366883993149	298
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.6.1.0	synth with cache (only 1: intros; only 1: intro p; only 1: red; only 1: auto).	0.0469410419464	37
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.1.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.312492847443	67
Coq.Sets.Relations_1_facts.contains_is_preorder	40	2.1.0.3	synth with cache (only 1: intro n; only 1: constructor; only 1: auto  10 with sets; only 1: auto  10 with sets).	0.031946182251	21
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	2.2.0.0.2.1.0.0.5.2.0.7	synth with cache (only 1: intro n; only 1: constructor; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [Hl Hr]; only 1: destruct 1; only 1: auto  10 with sets; only 1: red; only 1: intros A B [H1 H2]; only 1: split; only 1: trivial; only 1: trivial).	18.2696239948	29968
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.0199069976807	3
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.019641160965	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	3.0.1.0.0	synth with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: intros; only 1: auto with sets).	0.0563130378723	20
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.2	synth with cache (only 1: intros U R H'; only 1: auto  10 with sets).	0.0216100215912	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.0190439224243	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.0.5.1.3.3.1.1.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: generalize Rstar_contains_R; only 1: auto with sets; only 1: intros; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	31.9235179424	33358
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.1.0.0.0.2.1.0.0.0.3.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	5.05307412148	3522
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.7.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	34.2739729881	17227
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0546500682831	17
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0236661434174	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	2.1.2.1.3.0.1.1	synth with cache (only 1: intro H'5; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: destruct 1; only 1: intuition).	2.5799779892	2211
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	0.0.0.0.5.1.2.2	synth with cache (only 1: intros H'6 H'7; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros x H'; only 1: elim H'0; only 1: intros; only 1: exists x; only 1: auto with sets).	1.37284803391	1144
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	12.5.2	synth with cache (only 1: intro n; only 1: intros H'7 H'8; only 1: contradiction).	0.52157998085	1362
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	1.4.0.0.2.72.36	synth with cache (only 1: intro p; only 1: exists p; only 1: split; only 1: red; only 1: intros x H'; only 1: red; only 1: trivial).	3.16799688339	34883
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.10	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.166625022888	64
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.00928211212158	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	4	synth with cache (only 1: intuition).	0.00820112228394	5
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.0.3.0.0.0.0.0.0.7	synth with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	18.4696128368	3757
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	1.5.1.6.2.7.0	synth with cache (only 1: intro X; only 1: split; only 1: red; only 1: split; only 1: auto with sets; only 1: simpl; only 1: auto with sets).	7.11991906166	8765
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	2.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0199189186096	11
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	synth with cache (only 1: auto with sets).	0.00945496559143	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.00857090950012	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.3	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.120660066605	20
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0192461013794	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.4.3.2.0.1	synth with cache (only 1: red; only 1: intros A x y H'; only 1: red; only 1: red; only 1: intro; only 1: auto with sets).	1.78593492508	1119
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	1.1.0.2.0	synth with cache (only 1: unfold Subtract at 1; only 1: unfold Setminus at 1; only 1: intros A x y H'; only 1: elim H'; only 1: auto with sets).	0.0376920700073	9
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40	8.1.5.1.3.0	synth with cache (only 1: intro X; only 1: intro H'; only 1: intros; only 1: apply NNPP; only 1: red; only 1: intuition).	6.11163902283	4183
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.10.0	synth with cache (only 1: intro X; only 1: destruct 1; only 1: auto with sets).	0.456023931503	396
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.5.2	synth with cache (only 1: intros U R; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	0.43354511261	327
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.1.3.0.2.0.1.1.0.0.0	synth with cache (only 1: intros U R; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: red; only 1: intros z1 H'5; only 1: elim H'5; only 1: intros H'8 H'10; only 1: clear H'5; only 1: exists z1; only 1: auto with sets).	17.2658269405	14318
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.065906047821	7
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.5.1.0.0	synth with cache (only 1: intros A B x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.2845389843	178
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	0.0.0.0.1.0.0.1.1.2.0	synth with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	16.2065281868	4965
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	1.23964810371	227
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	24.8	synth with cache (only 1: intro n; only 1: auto  6 with sets).	1.26810884476	2719
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.0112547874451	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.11	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.176501989365	112
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0105009078979	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.0118629932404	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	13.8	synth with cache (only 1: intros a b; only 1: auto  10 with sets).	1.30806899071	1033
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.00818085670471	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	3	synth with cache (only 1: auto  9 with sets).	0.0139291286469	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.1.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	4.7294781208	2930
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	27.7367560863	14669
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.1.0.0.1.0.4.5	synth with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.27659296989	820
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.3.3.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	37.3332018852	20111
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	2.0.1.5	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.458026885986	229
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	1.1.0.0.0.0.0.4.2.1.1.3	synth with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	6.4335129261	4463
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.2.1.1	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.115865945816	69
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.5	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.111958026886	52
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.0	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0369019508362	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	6.0	synth with cache (only 1: intros A a b H' H'0; only 1: auto with sets).	0.0248510837555	8
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0119421482086	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0148591995239	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.0.2.2.1.0.3	synth with cache (only 1: unfold Setminus at 1; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: tauto; only 1: auto with sets).	1.44411802292	1213
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.046236038208	12
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.0.2.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).	0.849642038345	401
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	7.1.0	synth with cache (only 1: intro A; only 1: unfold not; only 1: destruct 1).	0.0425109863281	76
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0	synth with cache (only 1: destruct 1).	0.00862288475037	1
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.8.3	synth with cache (only 1: intros n P IH0 IHS; only 1: constructor; only 1: auto with sets).	0.831414222717	1203
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0117530822754	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.11.4.2.0	synth with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	0.990952014923	2244
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	1.16.1.6.1.0.13	synth with cache (only 1: intro n; only 1: red; only 1: destruct 1; only 1: intro m; only 1: elim (Noone_in_empty x); only 1: destruct m; only 1: auto with sets).	26.4206659794	98473
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.22.4.6.0.2	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	26.1438500881	84867
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.4.2.0	synth with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.396888971329	442
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	synth with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0154550075531	6
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.5.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets).	0.0153708457947	8
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.5	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto using Noone_in_empty with sets).	0.177839994431	95
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	1.9.0.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	1.72737908363	1693
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0176520347595	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	1.1.1.0.0.1	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.320449113846	157
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0111410617828	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0113658905029	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	2.6.6	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.268867015839	546
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.0.1	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0153050422668	4
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.0.1.33.4	synth with cache (only 1: Bool.destr_bool; only 1: generalize Inclusion_is_transitive; only 1: rewrite <- (Empty_set_zero' U x); only 1: intro H'2; only 1: auto with sets).	1.77077794075	6647
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.0.0.10.12.1	synth with cache (only 1: intros n H'0; only 1: generalize H'0; only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	37.5322601795	21639
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.1.0	synth with cache (only 1: induction 1; only 1: auto; only 1: exists x; only 1: auto using Noone_in_empty with sets).	0.0214700698853	9