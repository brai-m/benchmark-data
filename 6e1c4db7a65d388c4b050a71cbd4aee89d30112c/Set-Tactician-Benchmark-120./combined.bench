Coq.Init.Datatypes.andb_prop	120
Coq.Init.Peano.plus_n_O	120
Coq.Init.Logic.Conjunction.proj1	120
Coq.Init.Logic.Equivalence.iff_refl	120
Coq.Init.Peano.O_S	120	0	synth with cache (only 1: discriminate).	11.145050	1
Coq.Init.Peano.pred_Sn	120	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	11.461203	2
Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	11.798866	2
Coq.Init.Peano.not_eq_S	120	0.0	synth with cache (only 1: red; only 1: auto).	11.799568	2
Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.347064	2
Coq.Init.Peano.plus_O_n	120	0	synth with cache (only 1: reflexivity).	2.116807	1
Coq.Init.Specif.sigT2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.469809	2
Coq.Init.Specif.sig2_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	12.484183	2
Coq.Init.Logic.not_iff_compat	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply imp_iff_compat_r; only 1: assumption).	12.532424	5
Coq.Init.Peano.mult_n_O	120
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	13.280196	2
Coq.Init.Peano.plus_Sn_m	120	0	synth with cache (only 1: reflexivity).	1.861755	1
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	13.372814	2
Coq.Init.Logic.Equivalence.iff_sym	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	14.213467	7
Coq.Init.Peano.n_Sn	120	0.0.1.1	synth with cache (only 1: intros ?; only 1: elim n; only 1: auto; only 1: auto).	14.683212	10
Coq.Init.Logic.Equivalence.iff_trans	120	0.0.0.2.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	14.894591	15
Coq.Init.Datatypes.eq_true_ind_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	14.772386	6
Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	15.131147	4
Coq.Init.Peano.le_0_n	120
Coq.Init.Datatypes.andb_true_intro	120
Coq.Init.Specif.sigT.eq_existT_curried	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	5.539945	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	4.948724	2
Coq.Init.Logic.imp_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	18.047459	16
Coq.Init.Peano.plus_n_Sm	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	7.052850	7
Coq.Init.Wf.Well_founded.Acc_inv	120
Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	5.784698	3
Coq.Init.Logic.imp_iff_compat_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	18.456701	16
Coq.Init.Datatypes.eq_true_rec_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0 in H; only 1: assumption).	18.427429	6
Coq.Init.Peano.nat_case	120
Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	19.592744	2
Coq.Init.Datatypes.surjective_pairing	120
Coq.Init.Logic.and_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption).	20.082461	18
Coq.Init.Peano.nat_double_ind	120
Coq.Init.Logic.or_iff_compat_r	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H; only 1: assumption; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H1; only 1: left; only 1: apply H0; only 1: assumption; only 1: right; only 1: assumption).	20.896056	20
Coq.Init.Specif.inhabited_sig_to_exists	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct H; only 1: destruct X; only 1: exists x; only 1: exact p).	21.488928	5
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	8.708384	6
Coq.Init.Datatypes.eq_true_rect_r	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H in X; only 1: assumption).	12.772122	6
Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	9.206330	13
Coq.Init.Datatypes.rew_pair	120
Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: assumption).	5.439721	7
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	4.763223	2
Coq.Init.Logic.and_comm	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: split; only 1: assumption; only 1: assumption).	26.607446	29
Coq.Init.Peano.le_n_S	120	0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	11.097107	4
Coq.Init.Logic.universal_quantification.gen	120	3.0	synth with cache (only 1: unfold all; only 1: auto).	8.404827	16
Coq.Init.Wf.Well_founded.well_founded_induction	120	39	synth with cache (only 1: exact well_founded_induction_type).	9.817854	85
Coq.Init.Datatypes.CompOpp_involutive	120
Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.0	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).	13.453683	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	5.638252	3
Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.0.0	synth with cache (only 1: destruct p'; only 1: destruct q'; only 1: reflexivity).	16.652891	3
Coq.Init.Logic.universal_quantification.inst	120	2.0	synth with cache (only 1: unfold all; only 1: auto).	12.004394	32
Coq.Init.Specif.sigT.rew_sigT	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.796858	3
Coq.Init.Specif.sig.eq_exist_uncurried	120	0.1.0.0	synth with cache (only 1: destruct pq; only 1: destruct e; only 1: destruct x; only 1: reflexivity).	9.341298	8
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	5.778947	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	5.864313	2
Coq.Init.Logic.iff_to_and	120	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	19.013815	29
Coq.Init.Logic.or_comm	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	22.482077	34
Coq.Init.Logic_Type.identity_ind_r	120	0.1.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim identity_sym with (1 := H0); only 1: trivial).	18.359836	16
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: red; only 1: intros ?; only 1: apply H; only 1: destruct H0; only 1: trivial).	10.052923	9
Coq.Init.Wf.Well_founded.well_founded_ind	120	37	synth with cache (only 1: exact well_founded_induction).	10.219574	69
Coq.Init.Logic_Type.identity_rec_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H0); only 1: trivial).	16.806024	8
Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	0.2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: exact H).	12.871908	17
Coq.Init.Specif.sig.rew_sig	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	8.872293	3
Coq.Init.Logic.rew_opp_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.903925	3
Coq.Init.Logic.rew_opp_l	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.506984	3
Coq.Init.Logic.f_equal2	120	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	2.913313	3
Coq.Init.Logic.and_cancel_l	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: apply H; only 1: assumption; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: apply H0; only 1: assumption; only 1: assumption; only 1: apply and_iff_compat_l).	42.774823	58
Coq.Init.Logic.and_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: split; only 1: assumption; only 1: split; only 1: assumption; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: destruct H0; only 1: split; only 1: split; only 1: assumption; only 1: assumption; only 1: assumption).	43.749884	58
Coq.Init.Logic.and_cancel_r	120	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: intros; only 1: apply H1; only 1: split; only 1: assumption; only 1: apply H; only 1: assumption; only 1: intros; only 1: apply H2; only 1: split; only 1: assumption; only 1: apply H0; only 1: assumption; only 1: apply and_iff_compat_r).	44.410036	61
Coq.Init.Logic.f_equal4	120	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.382974	5
Coq.Init.Logic.and_iff_compat_l	120	2.0.0.0.0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	44.961615	80
Coq.Init.Logic.eq_trans_refl_r	120	0	synth with cache (only 1: reflexivity).	1.618321	1
Coq.Init.Logic.eq_trans_refl_l	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	3.353393	5
Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	4.637994	6
Coq.Init.Logic.eq_trans_sym_inv_l	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.987996	4
Coq.Init.Logic.eq_trans_sym_inv_r	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	2.970889	3
Coq.Init.Logic.f_equal_compose	120	0.0.2	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.735086	9
Coq.Init.Logic.eq_trans_assoc	120	0.0.1	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	2.989211	4
Coq.Init.Logic.eq_sym_involutive	120	0.0.0.1	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct e; only 1: reflexivity).	5.222107	7
Coq.Init.Logic.rew_map	120	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	3.508537	5
Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	11.565001	7
Coq.Init.Logic.rew_compose	120	0.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	3.086206	3
Coq.Init.Logic.f_equal3	120	0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	12.016594	4
Coq.Init.Logic.map_subst	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct H; only 1: reflexivity).	5.007417	5
Coq.Init.Logic.equality_dep.f_equal_dep	120	6.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).	21.274113	59
Coq.Init.Logic_Type.identity_rect_r	120	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: case identity_sym with (1 := H); only 1: trivial).	16.518292	8
Coq.Init.Logic.eq_refl_map_distr	120	0	synth with cache (only 1: reflexivity).	1.447047	1
Coq.Init.Logic.map_subst_map	120	0.0.1.0	synth with cache (only 1: intros ?; only 1: intros; only 1: destruct H; only 1: reflexivity).	5.803978	7
Coq.Init.Logic.rew_swap	120	0.1.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: destruct H0; only 1: reflexivity).	6.346043	7
Coq.Init.Logic.eq_trans_rew_distr	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	3.659198	3
Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.0.0.9	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	25.834556	66
Coq.Init.Logic.or_assoc	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: left; only 1: assumption; only 1: right; only 1: left; only 1: assumption; only 1: right; only 1: right; only 1: assumption; only 1: intros ?; only 1: destruct H; only 1: left; only 1: left; only 1: assumption; only 1: destruct H; only 1: left; only 1: right; only 1: assumption; only 1: right; only 1: assumption).	47.718556	73
Coq.Init.Logic.eq_trans_map_distr	120
Coq.Init.Logic.eq_trans_sym_distr	120
Coq.Init.Logic.exists_inhabited	120	0.0	synth with cache (only 1: destruct 1; only 1: auto).	2.287601	2
Coq.Init.Logic.rew_const	120	0.0.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	9.666793	3
Coq.Init.Logic.inhabited_covariant	120	2.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	5.949909	10
Coq.Init.Logic.eq_trans_map	120	0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct H2'; only 1: destruct H1'; only 1: destruct H2; only 1: reflexivity).	20.174423	79
Coq.Init.Logic.ex.eq_ex_uncurried	120	0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H; only 1: destruct x; only 1: reflexivity).	4.417148	4
Coq.Init.Logic.ex.rew_ex	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	4.523147	3
Coq.Init.Logic.eq_sym_map_distr	120
Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	0.0.0.0.5.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim ex_intro with (1 := H0); only 1: destruct H0; only 1: intros ?; only 1: intros ?; only 1: assumption).	43.448770	48
Coq.Init.Logic.ex2.rew_ex2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	4.460280	3
Coq.Init.Logic.iff_stepl	120	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: intros ?; only 1: destruct H1; only 1: split; only 1: auto; only 1: auto).	11.374264	10
Coq.Init.Datatypes.CompOpp_inj	120	0.0.0.0.0.0.0.0.0.0.0.0.0.0.23.1.0	synth with cache (only 1: intros ?; only 1: intros; only 1: rewrite <- CompOpp_involutive; only 1: destruct H; only 1: destruct c'; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	46.469917	48
Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pq; only 1: destruct H0; only 1: destruct H; only 1: destruct x; only 1: simpl in *; only 1: reflexivity).	7.707611	7
Coq.Init.Logic.eq_stepl	120	1.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: rewrite <- H0; only 1: exact H).	17.725956	23
Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	0.55.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H0); only 1: assumption).	53.026427	158
Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	0.56.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim eq_sym with (1 := H); only 1: assumption).	54.018345	160
Coq.Init.Datatypes.CompOpp_iff	120	0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto; only 1: intros; only 1: apply CompOpp_inj; only 1: rewrite CompOpp_involutive; only 1: auto).	14.957852	9
Coq.Init.Specif.sigT2.rew_sigT2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	18.176502	3
Coq.Init.Tactics.decide_right	120	0.0.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	17.834040	4
Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.0.0.0.0	synth with cache (only 1: destruct pqr; only 1: destruct e0; only 1: destruct e; only 1: destruct x; only 1: simpl; only 1: reflexivity).	20.416494	7
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	1.1.1	synth with cache (only 1: intros; only 1: destruct r; only 1: reflexivity).	68.752969	59
Coq.Init.Logic.or_iff_compat_l	120
Coq.Init.Wf.Well_founded.well_founded_induction_type	120
Coq.Init.Logic.neg_false	120
Coq.Init.Specif.sigT.eq_sigT_uncurried	120
Coq.Init.Tactics.decide_left	120
Coq.Init.Specif.exists_to_inhabited_sig	120
Coq.Init.Byte.of_bits_to_bits	120
Coq.Init.Logic.or_cancel_l	120
Coq.Init.Logic.or_cancel_r	120
Coq.Init.Specif.sig2.rew_sig2	120	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).	10.582038	3
Coq.Init.Peano.mult_n_Sm	120
Coq.Init.Peano.le_pred	120
Coq.Init.Peano.le_S_n	120
Coq.Init.Datatypes.injective_projections	120
Coq.Init.Specif.absurd_set	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply False_rec; only 1: apply H0; only 1: assumption).	6.888671	7
Coq.Init.Specif.sigT.eq_sigT_rect	120
Coq.Init.Datatypes.pair_equal_spec	120
Coq.Init.Peano.max_l	120
Coq.Init.Datatypes.CompSpec2Type	120	0.0.0	synth with cache (only 1: intros; only 1: apply CompareSpec2Type; only 1: assumption).	15.869380	3
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
Coq.Init.Datatypes.comparison_eq_stable	120
Coq.Init.Peano.max_r	120
Coq.Init.Specif.sig.eq_sig_uncurried	120
Coq.Init.Specif.sig.eq_sig_rect	120
Coq.Init.Peano.nat_rect_succ_r	120	0.1.1.0.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	27.000006	23
Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
Coq.Init.Logic.eq_id_comm_r	120
Coq.Init.Logic.eq_id_comm_l	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
Coq.Init.Logic.unique_existence	120
Coq.Init.Logic.forall_exists_unique_domain_coincide	120
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
Coq.Init.Logic.forall_exists_coincide_unique_domain	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
Coq.Init.Peano.nat_rect_plus	120	3.0.0.0.0.6.0	synth with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite IHn; only 1: auto).	61.767588	68
Coq.Init.Specif.sigT2.eq_sigT2_rect	120
Coq.Init.Byte.to_bits_of_bits	120
Coq.Init.Peano.min_l	120
Coq.Init.Specif.sig2.eq_sig2_uncurried	120
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
Coq.Init.Datatypes.CompareSpec2Type	120
Coq.Init.Specif.sig2.eq_sig2_rect	120
Coq.Init.Peano.min_r	120
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
Coq.Init.Specif.Choice_lemmas.bool_choice	120
Coq.Init.Specif.Choice_lemmas.Choice2	120
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
Coq.Init.Specif.Choice_lemmas.Choice	120
