coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.cross_shadow_free_disjointness.nnrs_stmt_cross_shadow_free_under_free_mcenv_mdenv	300
coq-corn.8.16.0	CoRN.transc.InvTrigonom.ArcTan_domain	300	15.553312	2965	54	1.0.26	synth with cache (only 1: simpl; only 1: intros; only 1: intuition).
coq-qcert.2.2.0	Qcert.Translation.Typing.TNNRStoNNRSimp.TNNRStoNNRSimp.core.tnnrs_core_to_nnrs_imp_core_top_correct_f	300
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection15.FittingCore.Fcore_sub_Fitting	300	1.091054	395	7
coq-corn.8.16.0	CoRN.transc.SinCos.Basic_Properties.Tan_strext	300	300.434786	38561	1963
coq-corn.8.16.0	CoRN.ftc.MoreIntegrals.Properties_of_Integral.Integral_strext	300	88.939064	17851	117
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Definitions.FTtype_range	300	300.794772	51842	2196
coq-mathcomp-apery.1.0.1	mathcomp.apery.a_props.rho_incr	300	300.132115	22385	2249
coq-mathcomp-apery.1.0.1	mathcomp.apery.reduce_order.ReduceBToOrder2.b_Sn2_at_1	300	300.364079	59669	1586
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.nsHC_HU	300	302.081756	68998	1004
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.cfdotS1	300	0.723017	11	3
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection8.Eight.FTypeP_Remarks.compl_of_typeIV	300	301.058346	18541	2256
coq-corn.8.16.0	CoRN.fta.FTAreg.Seq_is_CC_CAuchy.zlt_nrtq	300	1.859538	326	7	162	synth with cache (only 1: apply NRoot_nonneg).
coq-corn.8.16.0	CoRN.ftc.DerivativeOps.Lemmas.bnd_away_zero_square	300	2.433973	444	7
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRCMR.NNRCtoNNRCMR.nnrc_to_nnrcmr_chain_ns_aux_func_obligation_1	300	2.230234	9	7	0.4	synth with cache (only 1: simpl; only 1: lia).
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.A'.a'_ge0	300	1.182395	578	7
coq-qcert.2.2.0	Qcert.Translation.Lang.cNNRCtoCAMP.cNNRCtoCAMP.trans_let.fresh_bindings_nil	300	0.578964	8	10	1	synth with cache (only 1: firstorder).
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.InducedIrrs.cfAut_seqIndT	300	1.840517	326	12
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection13.Section13.OneComplement.Msigma_setI_mmax_central	300	300.185047	42561	2060
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.appenv_over_env_merge_l	300	300.225803	9222	4530
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection11.Section11.exceptional_sigma_nil	300	1.503506	619	6
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.t2_rat	300	49.278999	12615	105
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.SplitLAp	300	300.620758	17422	2179
coq-corn.8.16.0	CoRN.algebra.COrdCauchy.Monotonous_functions.local_mon'_imp_mon'_lt	300	300.231332	21709	4296
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.Five.SubsetCoherent.subgen_coherent	300	300.141149	51483	2163
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.is_lock_persistent	300	1.426713	121	13	34.0	synth with cache (only 1: rewrite /@Persistent; only 1: auto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.twp_array_clone	300	300.082163	28286	3886
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.contrib_spec.read_contrib_spec	300	300.109320	69795	3383
coq-corn.8.16.0	CoRN.metric2.Classified.uc_functions.Setoid_instance_1	300	300.341836	34990	2065
coq-qcert.2.2.0	Qcert.NRA.Optim.NRARewrite.NRARewrite.dot_from_duplicate_l	300	300.421432	18126	4407
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.heap.tac_wp_cmpxchg	300	300.087025	34033	2825
coq-tlc.20200328	TLC.LibGraph.is_path_in_nodes_r	300	300.092912	25592	5052
coq-tlc.20200328	TLC.LibFix.Fix_prop_to_gc	300	300.096926	14695	4722
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCEq.cNNRCEq.proper_cNNRCFor	300	300.130275	12002	5242
coq-tlc.20200328	TLC.LibEnv.SinglesProperties.map_keys_singles	300	300.072153	34765	5255
coq-tlc.20200328	TLC.LibEnv.BindsProperties.binds_single_eq_inv	300
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.wf_t_atom	300	14.031435	3886	189	18.31.36	synth with cache (only 1: unfold wf; only 1: apply check_atom_correct; only 1: trivial).
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_faa_offset	300	300.164303	65117	3831
coq-qcert.2.2.0	Qcert.TypeSystem.RSubtypeProp.RSubtypeProp.subtype_pre	300	300.628870	13523	4798
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.empty_incl_inv_of_incl_in_eq_and_in_empty_eq	300	300.134100	22444	4643
coq-iris-heap-lang.3.4.0	iris.heap_lang.primitive_laws.lifting.wp_allocN_seq	300	300.132220	47082	3410
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.rho_interp	300	300.159380	15229	4427
coq-mathcomp-apery.1.0.1	mathcomp.apery.initial_conds.a1_eq	300	300.380223	39176	2624
coq-hott.8.11	HoTT.Homotopy.EMSpace.LicataFinsterLemma.merid_mu	300	300.078311	24028	5600
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.erase_expr_subst'	300	300.091235	13830	3716
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.erase_val_subst'	300	0.176232	1	2	0	synth with cache (only 1: done).
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_analysis.RationalPower.exp_quo_gt0	300	300.167173	98505	1990
coq-hott.8.11	HoTT.Homotopy.ClassifyingSpace.EncodeDecode.codes_transport	300	300.669591	25887	6099
coq-hott.8.11	HoTT.Classes.orders.rings.from_strict_ring_order.from_strict_ring_order	300	300.174840	42990	6589
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Rle_R1_pow	300	300.088699	7651	5036
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.valid_check_bbExtract	300	300.530452	26404	4899
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixC.AppendixC.ExpandHypotheses.inj_psi	300	0.737169	23	3
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.pure_step_tp_safe	300	300.080183	16242	3781
coq-corn.8.16.0	CoRN.metric2.Complete.lift_eq_complete_2	300	300.776413	19535	4513
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.drec_sort_perm_eq	300	300.069713	10699	4963
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Tietze_extension_func	300	300.094732	25311	4671
coq-topology.10.0.1	Topology.RFuncContinuity.continuous_iff_continuity	300	300.114188	14392	4480
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Divz.modz_ge0	300	1.321609	750	8
coq-corn.8.16.0	CoRN.model.Zmod.ZMod.zmodeq.Zmodeq_modeq	300	3.716437	94	49	43.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: auto with zarith).
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_arith.MajorationOfTheSumOfInversesOfA.sum_aV_leqn	300	300.246690	169049	2161
coq-bits.1.1.0	Bits.extraction.axioms8.implies_lsl	300	4.631173	333	38	24.2	synth with cache (only 1: intros; only 1: exact lsl_valid).
coq-smtcoq.2.0+8.11	SMTCoq.euf.Euf.certif.Proof.interp_binop_eqb_sym	300	301.482700	62321	3907
coq-poltac.0.8.11	PolTac.ReplaceTest.Unnamed_thm22	300	1.690265	25	25	6.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: Lia.lia).
coq-poltac.0.8.11	PolTac.ReplaceTest.Unnamed_thm27	300	0.872330	9	11	1.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_comm; only 1: Lia.lia).
coq-bits.1.1.0	Bits.extraction.axioms16.neg_repr	300	301.742155	57633	3559
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Tietze_extension_func_bound	300	301.257929	47145	4135
coq-hott.8.11	HoTT.Categories.Comma.Core.CommaCategory.comma_category_parts.path_morphism	300
coq-poltac.0.8.11	PolTac.Rex.pols_test1	300	5.850075	5	7	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rplus_lt_compat_r; only 1: easy).
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternMax.FM_e_value	300	300.149436	27330	3363
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Atom.Typing_Interp.Typ_Aux.check_args_dec	300	300.187695	12298	5118
coq-poltac.0.8.11	PolTac.Natex.polr_test1	300	0.514959	7	7	3	synth with cache (only 1: Lia.lia).
coq-mathcomp-apery.1.0.1	mathcomp.apery.bigopz.TelescopeSum.telescopez	300	0.414196	7	3
coq-mathcomp-apery.1.0.1	mathcomp.apery.lia_tactics.Z_of_intmorphN	300	1.252304	52	9	19	synth with cache (only 1: by elim).
coq-hott.8.11	HoTT.Extensions.extension_functor_sigma	300	300.074190	42111	7232
coq-hott.8.11	HoTT.Limits.Limit.unicone_limit	300	300.104068	76501	7557
coq-ceres.0.4.0	Ceres.CeresRoundtrip.DeBindField.sound_bind_field	300	300.108621	21732	5878
coq-hott.8.11	HoTT.Categories.Functor.Prod.Universal.universal.universal.unique.unique_helper2	300	300.060408	44572	7192
coq-bits.1.1.0	Bits.spec.operations.properties.andB1	300
coq-gaia-stern.1.15	gaia.stern.stern.Stern.bin_invert_correctB	300	300.192723	30223	3683
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Lookup_equiv_on.lookup_equiv_on_incl_prop	300	1.794009	26	28	1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: intros ?; only 1: intros ?; only 1: auto).
coq-hott.8.11	HoTT.Fibrations.equiv_fibration_replacement	300	300.121326	37207	7865
coq-tlc.20200328	TLC.LibRelation.Sym.sym_inv_eq	300	8.686490	470	127	1.35.0	synth with cache (only 1: intros; only 1: apply prop_ext; only 1: intuition).
coq-tlc.20200328	TLC.LibRelation.Eq.refl_eq	300	0.184758	2	3	0.0	synth with cache (only 1: intros ?; only 1: reflexivity).
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.list_sexp_tokens_singleton	300	300.173613	13744	5493
coq-ceres.0.4.0	Ceres.CeresRoundtrip.SoundClass_sum	300	300.098712	51124	4454
coq-topology.10.0.1	Topology.ProductTopology.continuous_composition_at_2arg	300	300.159340	8492	4418
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.is_atom_singleton	300	56.829659	1133	867	0.0.3.0.1.2	synth with cache (only 1: intros ?; only 1: split; only 1: discriminate; only 1: simpl; only 1: intropattern subst -> H; only 1: reflexivity).
coq-ceres.0.4.0	Ceres.CeresRoundtrip.CompleteClass_list	300	17.597978	3493	256	0.72.0.0.1	synth with cache (only 1: intros ?; only 1: red; only 1: intros; only 1: apply @complete_class_list; only 1: exact H1).
coq-bits.1.1.0	Bits.spec.operations.properties.sub0B	300	300.054902	15003	2002
coq-topology.10.0.1	Topology.QuotientTopology.quotient_connected	300	300.115943	7882	4715
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternBrocot.add_near_g	300	300.113262	32760	3311
coq-topology.10.0.1	Topology.OrderTopology.OrderTopology.if_total_order.upper_closed_interval_closed	300	300.122214	24997	3889
coq-hott.8.11	HoTT.Basics.PathGroupoids.ap011D	300	18.079294	5768	457	24.23.6	synth with cache (only 1: induction p; only 1: apply @ap; only 1: apply q).
coq-bbv.1.3	bbv.Word.eq_rect_word_match	300	3.235116	84	57	7	synth with cache (only 1: trivial).
coq-bbv.1.3	bbv.Word.wordToN_WS_0	300	0.525148	6	8	0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: easy).
coq-tlc.20200328	TLC.LibRelation.Tclosure.Ind.tclosure_ind_r	300	300.086328	13285	4723
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.to_of_val	300	0.155426	1	2	0	synth with cache (only 1: reflexivity).
coq-hott.8.11	HoTT.WildCat.Equiv.cate_issect	300	300.071340	41021	6645
coq-haskell.1.0.0	Hask.Control.Monad.State.StateLaws.State_Monad_obligation_3	300	2.381231	194	34	69	synth with cache (only 1: apply @State_Applicative).
coq-topology.10.0.1	Topology.SubspaceTopology.Subspace.subspace_closed_char	300	27.423867	633	450	65.0	synth with cache (only 1: intros ?; only 1: apply weak_topology1_topology_closed).
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.str_token_string_newline	300	300.141619	6030	1180
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_list_assoc	300	300.125571	11719	5183
coq-bits.1.1.0	Bits.spec.operations.properties.toZp_shlBaux	300	300.080349	23882	3399
coq-tlc.20200328	TLC.LibBool.PropertiesIf.if_then_false_else_true	300	2.218497	62	31	10	synth with cache (only 1: trivial).
coq-haskell.1.0.0	Hask.Control.Category.Morphisms.id_involutive	300	1.324326	72	20	33.0	synth with cache (only 1: intros ?; only 1: firstorder).
coq-haskell.1.0.0	Hask.Data.List.olast_last	300	20.499317	666	301	0.0.0.15.0.0.0.3	synth with cache (only 1: intros; only 1: unfold olast; only 1: induction us; only 1: auto; only 1: simpl; only 1: destruct us; only 1: auto; only 1: auto).
coq-haskell.1.0.0	Hask.Control.Category.Groupoid_obligation_1	300
coq-smtcoq.2.0+8.11	SMTCoq.Misc.not_ltb_refl	300	3.746687	210	57	58.0	synth with cache (only 1: intros ?; only 1: apply Map.Raw.Proofs.L.PX.MO.lt_antirefl).
coq-bbv.1.3	bbv.Word.wmult_wmultZ	300	300.093736	18861	4603
coq-bbv.1.3	bbv.Word.wordToNat_lt1	300	3.670897	53	50	0.4.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply wlt_lt; only 1: assumption).
coq-haskell.1.0.0	Hask.Data.Maybe.Equivalence_Maybe_obligation_1	300	1.128142	35	20	0.0.4.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: red; only 1: reflexivity; only 1: constructor).
coq-bbv.1.3	bbv.Word.word_le_ge_eq	300	112.317842	5979	1659	0.0.29.0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply wordNotNot; only 1: intros ?; only 1: apply H; only 1: apply le_neq_lt; only 1: assumption; only 1: auto).
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.new_sexp_List_sound	300	300.086730	23448	4061
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.string_reverse_cons'	300	2.513971	54	30	0.10.0.0	synth with cache (only 1: intros ?; only 1: intropattern subst -> H; only 1: rewrite string_reverse_cons; only 1: reflexivity).
coq-haskell.1.0.0	Hask.Data.Maybe.bind_endo_just	300	45.589764	838	706	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct m; only 1: split; only 1: intros ?; only 1: exists c0; only 1: split; only 1: simpl in *; only 1: destruct f; only 1: auto; only 1: discriminate; only 1: auto; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: inversion H0; only 1: subst; only 1: clear H0; only 1: simpl; only 1: rewrite H; only 1: reflexivity; only 1: simpl; only 1: split; only 1: intros ?; only 1: exists x; only 1: discriminate; only 1: intros ?; only 1: destruct H; only 1: destruct H; only 1: discriminate).
coq-bits.1.1.0	Bits.spec.operations.properties.toZpCons	300	300.145612	28268	2808
coq-haskell.1.0.0	Hask.Data.Functor.Yoneda.YonedaLaws.Yoneda_MonadLaws_obligation_3	300	300.054984	26291	4254
coq-gaia-stern.1.15	gaia.stern.fibm.pow2_mod3'	300	300.135227	27412	3083
coq-gaia-stern.1.15	gaia.stern.fibm.irreflexive_llen	300	1.753927	183	16	67	synth with cache (only 1: by elim).
coq-gaia-stern.1.15	gaia.stern.fibm.Zeckv_nil	300	2.693011	389	26	1.11	synth with cache (only 1: rewrite /Zeck_val; only 1: by rewrite big_nil).
coq-haskell.1.0.0	Hask.Control.Category.Monic_Retraction_Iso_obligation_2	300	300.062157	11080	4509
coq-haskell.1.0.0	Hask.Control.Category.unop	300	1.363374	44	21	0.12.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: red; only 1: assumption).
coq-smtcoq.2.0+8.11	SMTCoq.Misc.afold_left_andb_false_inv	300	300.859764	15342	3465
coq-poltac.0.8.11	PolTac.PolAux.plus_neg_compat_l	300	3.035181	42	40	2.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: Lia.lia).
coq-bbv.1.3	bbv.Word.wzero_wplus	300	228.457637	13878	3454	169.0.0.12	synth with cache (only 1: assert nat; only 1: exact 0; only 1: intros; only 1: apply wplus_unit).
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.Sort_NoDupA	300	67.872107	4076	1096	0.0.1.0.101.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: eapply SortA_NoDupA; only 1: auto with *; only 1: eauto with *; only 1: auto with *; only 1: auto).
coq-haskell.1.0.0	Hask.Control.Monad.MonadLaws.join_fmap_join_x	300	300.252954	13907	4390
coq-bbv.1.3	bbv.NatLib.pow2_N	300	84.688715	2883	1235	6.0.1.0.3.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: unfold Npow2; only 1: fold Npow2; only 1: rewrite pow2_S; only 1: rewrite IHn; only 1: lia).
coq-bbv.1.3	bbv.NatLib.Npow2_pos	300	7.524288	188	125	0.0.3.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction a; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct Npow2; only 1: easy; only 1: constructor).
coq-poltac.0.8.11	PolTac.NatSignTac.Test.hyp_test	300	3.811403	47	47	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply plus_reg_l with 0; only 1: destruct d; only 1: easy; only 1: easy).
coq-bits.1.1.0	Bits.spec.operations.properties.shlB_mul2exp	300	300.060448	15694	3337
coq-tlc.20200328	TLC.LibEqual.PropExt.Extensionality_pred_6	300	0.517701	4	3	2	synth with cache (only 1: intuition).
coq-gaia-stern.1.15	gaia.stern.fibm.Zeck_S	300	300.149826	27952	3339
coq-printf.2.0.0	Printf.FormatParser.Test.roundtrip_test	300	0.977227	41	13	17	synth with cache (only 1: reflexivity).
coq-poltac.0.8.11	PolTac.RAux.Rlt_sign_pos_pos	300	0.671531	7	9	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmult_lt_0_compat; only 1: easy; only 1: easy).
coq-poltac.0.8.11	PolTac.NatAux.gt_mult_rev_0_r	300	5.126753	152	86	27.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply lt_mult_rev_0_r).
coq-bbv.1.3	bbv.ZLib.pow2_nonneg	300	1.852295	29	28	0.2.0	synth with cache (only 1: intros ?; only 1: apply Z.pow_nonneg; only 1: lia).
coq-poltac.0.8.11	PolTac.RAux.Rge_sign_pos_neg	300	48.692459	2388	722	109	synth with cache (only 1: eauto using Rle_sign_pos_neg with rorders).
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_cauchyreals.ExtraCreals.lecr_lt_add	300	300.211661	49509	2383
coq-topology.10.0.1	Topology.InteriorsClosures.interior_closure.closure_closed	300	3.095076	227	52	0.0.0.29	synth with cache (only 1: apply @closed_family_intersection; only 1: intros; only 1: destruct H; only 1: apply H).
coq-bbv.1.3	bbv.ZLib.pow2_times2	300	98.965420	4341	1631	0.0.0.1.0.16.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite <- two_p_equiv; only 1: rewrite <- two_p_equiv; only 1: rewrite <- two_p_S; only 1: f_equal; only 1: lia; only 1: lia).
coq-ceres.0.4.0	Ceres.CeresUtils.app_cons_assoc	300	0.173678	8	4	0.4	synth with cache (only 1: rewrite app_assoc_reverse; only 1: easy).
coq-poltac.0.8.11	PolTac.NGroundTac.Eq_diff_Gt	300	0.121916	2	2	1	synth with cache (only 1: congruence).
coq-printf.2.0.0	Printf.Justify.take_spec	300	1.611969	29	26	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence).
coq-printf.2.0.0	Printf.Justify.left_justify_padding'	300	6.368821	168	105	17.1	synth with cache (only 1: intros; only 1: apply drop_spec).
coq-bits.1.1.0	Bits.spec.spec.properties.toNat_mod	300	300.084787	38584	3458
coq-bits.1.1.0	Bits.spec.spec.properties.toZp_eq	300	26.046145	3076	316	8.0.72	synth with cache (only 1: rewrite (inj_eq); only 1: by [  ]; only 1: exact : toZp_inj ).
coq-gaia-stern.1.15	gaia.stern.fibm.ZeckM2	300	300.317206	4591	375
coq-printf.2.0.0	Printf.Justify.distribute_length	300	5.102644	105	76	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.to_N_inj	300
coq-topology.10.0.1	Topology.OpenBases.OpenBasis.coverable_by_open_basis_impl_open	300	300.051235	14343	5536
coq-smtcoq.2.0+8.11	SMTCoq.PArray.PArray.IntOrderedType.lt_not_eq	300	300.086815	11799	5347
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_refl	300	36.429255	707	590	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.2	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: unfold byte_cmp; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_sym	300	27.030799	734	422	0.0.1.0.0.1.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: unfold byte_cmp; only 1: intros ?; only 1: rewrite N.compare_eq_iff; only 1: apply N.compare_eq_iff in H; only 1: congruence).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_trans	300	24.533676	527	369	0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: unfold eq; only 1: unfold byte_cmp; only 1: intros; only 1: apply N.compare_eq_iff in H; only 1: rewrite H; only 1: assumption).
coq-bytestring.0.9.0	bedrock.bytestring.byte_cmp_refl	300	29.922938	550	533	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros ?; only 1: unfold byte_cmp; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_refl	300	0.252553	3	4	0.1	synth with cache (only 1: unfold eq; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_sym	300	0.198762	2	3	0.0	synth with cache (only 1: unfold eq; only 1: auto with *).
coq-ceres.0.4.0	Ceres.CeresString.not_string_elem_app	300	300.094211	11683	4944
coq-printf.2.0.0	Printf.Justify.left_justify_padding	300	300.073843	10295	5006
coq-printf.2.0.0	Printf.Justify.left_padding	300	13.343805	424	219	41.0	synth with cache (only 1: intros; only 1: apply take_replicate).
coq-printf.2.0.0	Printf.Justify.drop_replicate	300	0.611430	8	9	0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-printf.2.0.0	Printf.Justify.right_padding	300	1.933797	49	27	21.0	synth with cache (only 1: intros; only 1: apply drop_replicate).
coq-bits.1.1.0	Bits.spec.spec.properties.split4eta'	300	300.087276	5885	2445
coq-bytestring.0.9.0	bedrock.bytestring.Bytestring.print_parse_inv	300	300.052701	5134	4215
coq-gaia-stern.1.15	gaia.stern.fibm.GARr_e	300	300.130502	29085	3457
coq-printf.2.0.0	Printf.Justify.left_justify_length	300	300.073358	10882	5219
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.lt_trans	300
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.lt_not_eq	300	300.088653	14052	6474
coq-printf.2.0.0	Printf.Justify.right_justify_padding	300	300.068515	11972	6646
