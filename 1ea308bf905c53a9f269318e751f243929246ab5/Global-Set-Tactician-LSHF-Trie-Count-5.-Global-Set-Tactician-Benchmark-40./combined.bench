
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0124368667603	2
Coq.micromega.OrderedRing.Rtimes_0_r	40
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0970530509949	6
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0114450454712	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0143699645996	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.1.3.1	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.0250248908997	21
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	1.1.0	search with cache (only 1: intros n m; only 1: intuition; only 1: now subst).	0.0186290740967	5
Coq.micromega.Ztac.elim_concl_eq	40	14.4.0	search with cache (only 1: intros n m; only 1: intuition; only 1: Z.Private_Tac.order).	1.36079406738	1595
Coq.micromega.Ztac.elim_concl_le	40	1.0	search with cache (only 1: intros a b; only 1: Z.order).	0.0125830173492	3
Coq.micromega.Ztac.elim_concl_lt	40	1.1	search with cache (only 1: intros a b; only 1: Z.order).	0.520094871521	251
Coq.micromega.Ztac.Zlt_le_add_1	40	1.0.0.6	search with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: now Z.swap_greater).	0.408772945404	60
Coq.micromega.Ztac.add_le	40	9.3	search with cache (only 1: intros n m H; only 1: now apply Z.add_nonneg_nonneg).	0.571907043457	262
Coq.micromega.Ztac.mul_le	40	11.23	search with cache (only 1: intros a m; only 1: apply Z.mul_nonneg_nonneg).	12.7114710808	10969
Coq.micromega.ZifyInst.PropAnd	40	2.2.17	search with cache (only 1: split; only 1: intros; only 1: tauto).	0.233879089355	293
Coq.micromega.ZifyInst.PropOr	40	1.0	search with cache (only 1: constructor; only 1: tauto).	0.0215950012207	3
Coq.micromega.ZifyInst.PropArrow	40	0.37	search with cache (only 1: split; only 1: tauto).	0.118600130081	735
Coq.micromega.ZifyInst.PropIff	40	0.11	search with cache (only 1: split; only 1: tauto).	0.200595140457	46
Coq.micromega.ZifyInst.PropNot	40	0.1.28	search with cache (only 1: constructor; only 1: intro A; only 1: apply imp_iff_compat_r).	0.201225996017	489
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40	14.0	search with cache (only 1: intros; only 1: Z.solve_max).	0.932518005371	521
Coq.micromega.ZifyInst.z_min_spec	40	7.1	search with cache (only 1: intros a Ha; only 1: Z.solve_min).	0.552375078201	98
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.00982308387756	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0101029872894	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0104157924652	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	1	search with cache (only 1: exact (SORle_wd sor)).	0.11905002594	42
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.00953888893127	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1.0.0.0.1	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.224885940552	24
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	3.9.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H))).	0.151860952377	207
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.7.1.0.5.2	search with cache (only 1: pattern 1 at 1; only 1: unfold Rle; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: auto with real).	16.957695961	19524
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.0.4	search with cache (only 1: intros r r1 r2 H; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real).	0.138729095459	55
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	3.2	search with cache (only 1: intros; only 1: intuition Z.Private_Tac.order).	0.0197620391846	7
Coq.micromega.ZMicromega.lt_le_iff	40	16.5.2	search with cache (only 1: intros a; only 1: Z.nzsimpl; only 1: apply Z.lt_le_pred).	1.94461607933	957
Coq.micromega.ZMicromega.le_0_iff	40	0.6.0.6.0.1.6	search with cache (only 1: intro n; only 1: intros; only 1: split; only 1: unfold Z.sub, Z.succ, Z.pred; only 1: apply Z.le_0_sub; only 1: unfold Z.sub, Z.succ, Z.pred; only 1: apply Z.le_0_sub).	23.3679049015	15134
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.4.0	search with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0144159793854	7
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.48.0	search with cache (only 1: intros; only 1: destruct x; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	38.8564839363	43829
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy'; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0378170013428	6
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	0.0.18.8.44.2.0.0	search with cache (only 1: induction p; only 1: constructor; only 1: intuition; only 1: constructor; only 1: trivial; only 1: constructor; only 1: easy; only 1: easy).	25.6116888523	41383
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0416657924652	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40	5.4.0.12.3	search with cache (only 1: intros n m; only 1: unfold Z.sub; only 1: unfold Z.geb, Z.leb; only 1: rewrite Z.compare_sub; only 1: now destruct n).	1.19335079193	1556
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.00967216491699	5
Coq.micromega.Env.nth_pred_double	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0104320049286	5
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	2.2.0.11	search with cache (only 1: intros y Ryx; only 1: induction l; only 1: auto; only 1: auto).	0.29048204422	343
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	2	search with cache (only 1: destr_bool).	0.0107691287994	11
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: trivial).	0.00678992271423	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00409412384033	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	1.2.0.1.28.24	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destr_bool).	7.57723593712	19293
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.3.3.3	search with cache (only 1: intros; only 1: destruct f; only 1: trivial; only 1: simpl; only 1: congruence).	0.181719064713	235
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.1.12.2.1.0.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: simpl; only 1: firstorder; only 1: induction f; only 1: easy; only 1: reflexivity).	0.752614974976	2093
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40	2.24.11	search with cache (only 1: intros a0; only 1: fix le_div2 1; only 1: auto).	23.093734026	75763
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	27.15.0	search with cache (only 1: unfold eval_cnf; only 1: simpl; only 1: firstorder).	3.45200419426	11476
Coq.micromega.Tauto.eval_cnf_tt	40	2.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0108630657196	5
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40	11.12.4.8.0.1	search with cache (only 1: unfold cnf_tt, eval_cnf, eval_clause; only 1: simpl; only 1: clear; only 1: induction t; only 1: fix odd_spec 1; only 1: trivial).	8.08388113976	16111
Coq.micromega.Tauto.no_middle_eval_tt	40	67	search with cache (only 1: firstorder).	3.5872130394	7649
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.1.1.0.0.19	search with cache (only 1: clear; only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: rewrite !make_conj_cons in *; only 1: tauto).	1.3044731617	991
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0321021080017	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40
Coq.micromega.EnvRing.rmul_ext_Proper	40
Coq.micromega.EnvRing.ropp_ext_Proper	40
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0437400341034	4
Coq.micromega.EnvRing.Mjump_add	40	0.1.0.1.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0474860668182	10
Coq.micromega.EnvRing.mkZmon_ok	40	3.0.5.0.2.0.2	search with cache (only 1: induction M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	1.23452305794	839
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.00748491287231	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.00866913795471	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	2	search with cache (only 1: exact (SORopp_wd sor)).	0.00930905342102	3
Coq.micromega.RingMicromega.rle_morph_Proper	40	4	search with cache (only 1: exact (SORle_wd sor)).	0.178876876831	27
Coq.micromega.RingMicromega.rlt_morph_Proper	40	4	search with cache (only 1: exact (SORlt_wd sor)).	0.0114040374756	5
Coq.micromega.RingMicromega.rminus_morph_Proper	40	1.0.0.0.6	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	1.03557682037	85
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	2.1.0.4	search with cache (only 1: induction l as [| a l' Hrec]; only 1: easy; only 1: simpl; only 1: trivial).	0.0203328132629	42
Coq.micromega.Refl.make_impl_map	40	2.5.5.7	search with cache (only 1: repeat red; only 1: induction l; only 1: auto; only 1: firstorder).	1.3738090992	4010
Coq.micromega.Refl.make_conj_cons	40	7.0.3.14.1.6	search with cache (only 1: simpl; only 1: intros A P H; only 1: induction l; only 1: simpl in *; only 1: tauto; only 1: firstorder).	6.22207093239	26557
Coq.micromega.Refl.make_conj_impl	40	0.3.5.0.0.3.3.4.7	search with cache (only 1: Bool.destr_bool; only 1: induction l; only 1: simpl; only 1: intuition; only 1: destruct l; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: tauto).	17.7820868492	52153
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40	13.24.6.3	search with cache (only 1: intros A B f l; only 1: revert l; only 1: fix le_div2 1; only 1: firstorder).	13.1055018902	58696
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0118398666382	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.3	search with cache (only 1: intro H1; only 1: field).	0.0290141105652	16
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	0.0.0.0.1.0.0.2.16.8.0.0	search with cache (only 1: destruct z; only 1: simpl; only 1: Z.swap_greater; only 1: destruct z; only 1: discriminate; only 1: discriminate; only 1: now destruct Hn || easy; only 1: destruct n; only 1: simpl; only 1: now destruct Hn || easy; only 1: simpl; only 1: easy).	29.0555870533	21753
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0223069190979	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.4.9.1.4.1	search with cache (only 1: induction p; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: simpl; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: trivial).	3.20622491837	4495
Coq.rtauto.Bintree.map_app	40	2.0.1.0.3.0	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.267142057419	278
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0180611610413	15
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	2.0.0.2.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: now f_equal; only 1: trivial).	0.0132939815521	10
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	2.0.3.0.34	search with cache (only 1: firstorder; only 1: destruct i; only 1: reflexivity || congruence; only 1: auto; only 1: reflexivity || congruence).	0.293226957321	1235
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40	3.31.4.3	search with cache (only 1: intros x x' Hxx'; only 1: revert x; only 1: fix even_spec 1; only 1: auto).	3.84326910973	9880
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40	9.17	search with cache (only 1: fix even_spec 1; only 1: auto).	0.455754995346	876
Coq.rtauto.Rtauto.form_eq_refl	40	4.8.78	search with cache (only 1: intro z; only 1: fix even_spec 1; only 1: auto).	38.9079380035	208031
Coq.rtauto.Rtauto.compose0	40	5.1.0.0.3.0.5.35	search with cache (only 1: intro; only 1: intro n; only 1: induction n; only 1: unfold push, empty; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto).	2.31516098976	16329
Coq.rtauto.Rtauto.compose1	40	17.0.1.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros A H; only 1: firstorder).	3.37708497047	17142
Coq.rtauto.Rtauto.compose2	40	1.0.4.0.1.1.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: simpl; only 1: auto; only 1: intros A H; only 1: simpl; only 1: intros x y; only 1: apply IHF; only 1: auto).	1.54329609871	5841
Coq.rtauto.Rtauto.compose3	40	1.0.4.0.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intros x y; only 1: apply IHF; only 1: auto).	0.594016075134	1633
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40	9.11.20	search with cache (only 1: intros m H; only 1: fix even_spec 1; only 1: trivial).	1.72879505157	9332
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	2.2.0.0.1	search with cache (only 1: intros x y H; only 1: setoid_replace x with x - y + y; only 1: setoid_rewrite H; only 1: cring; only 1: cring).	0.231990098953	12
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	2	search with cache (only 1: trivial).	0.00923800468445	3
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40	7	search with cache (only 1: apply ring_setoid).	0.0132820606232	8
Coq.nsatz.Nsatz.Rtheory	40	1.2.0.1.0.1.1.0.0.0.19	search with cache (only 1: constructor; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: cring; only 1: apply ring_mul_assoc; only 1: cring; only 1: cring; only 1: intros; only 1: cring).	13.9614181519	2032
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.2.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intuition eauto  3; only 1: congruence).	0.0659561157227	38
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	6	search with cache (only 1: exact R1_neq_R0).	0.0165560245514	7
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	search with cache (only 1: discriminate).	0.00966882705688	3
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.6	search with cache (only 1: intro EQ; only 1: discriminate).	0.0419030189514	8
Coq.nsatz.Nsatz.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0176451206207	3
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0337650775909	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.1.1.1	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.154293060303	43
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	16	search with cache (only 1: now Z.nzsimpl).	16.8392679691	6590
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	1	search with cache (only 1: now Z.nzsimpl).	0.035609960556	2
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0629508495331	1
Coq.omega.OmegaLemmas.new_var	40	32.9	search with cache (only 1: intros a; only 1: eauto using Z.Private_OrderTac.Tac.eq_trans, Z.Private_OrderTac.Tac.eq_sym).	0.908658027649	2277
Coq.omega.OmegaLemmas.OMEGA1	40	1	search with cache (only 1: Z.order).	0.0103478431702	2
Coq.omega.OmegaLemmas.OMEGA2	40
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.78.30	search with cache (only 1: symmetry; only 1: subst; only 1: trivial).	22.889138937	42788
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	2.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0135371685028	6
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0758950710297	13
Coq.omega.OmegaLemmas.OMEGA15	40	1.2.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0187251567841	8
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0326678752899	2
Coq.omega.OmegaLemmas.OMEGA18	40	10.5.5	search with cache (only 1: intro; only 1: intro; only 1: now intros ->).	0.707551956177	562
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.1.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.043310880661	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	1.0.3.9	search with cache (only 1: intros LT; only 1: intro H; only 1: simpl in *; only 1: apply -> Decidable_spec).	0.340793132782	518
Coq.btauto.Algebra.Decidable_complete	40	0.3.4.10	search with cache (only 1: intros LT; only 1: intro H; only 1: simpl in *; only 1: apply <- Decidable_spec).	0.668444871902	971
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.1.4	search with cache (only 1: simpl; only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0740039348602	50
Coq.btauto.Algebra.Decidable_complete_alt	40	1.6.0	search with cache (only 1: intros P [wit spec] Hd; only 1: destr_bool; only 1: intuition).	0.0956778526306	32
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.1.14	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.316723108292	362
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40	0.7.78.1	search with cache (only 1: intros a b; only 1: fix odd_spec 1; only 1: intros H; only 1: trivial).	17.3723750114	49855
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40	4.22	search with cache (only 1: fix even_spec 1; only 1: auto).	0.349334001541	593
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	9	search with cache (only 1: auto).	0.0425908565521	13
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	0.0.0.0.0.4.7.5	search with cache (only 1: intros; only 1: induction n using Pos.peano_rect; only 1: trivial; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ; only 1: apply IHn).	4.89829301834	7362
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	21	search with cache (only 1: auto with *).	0.0368039608002	208
Coq.funind.Recdef.Splus_lt	40	8	search with cache (only 1: auto with arith).	0.00981688499451	9
Coq.funind.Recdef.SSplus_lt	40	18	search with cache (only 1: auto with arith).	1.90976405144	2663
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0097119808197	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	17	search with cache (only 1: Z.order').	1.67583203316	765
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	12	search with cache (only 1: now f_equal).	0.0270910263062	46
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.00710606575012	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	5.5.21	search with cache (only 1: Esimpl; only 1: intros; only 1: Esimpl2).	4.65129113197	784
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	15.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	7.79096889496	543
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.1.2.0.2.0.0.1.0.50	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.898537874222	2907
Coq.setoid_ring.Ring.bool_eq_ok	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	8.8.24	search with cache (only 1: intro n; only 1: intros; only 1: firstorder).	3.0921330452	2384
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	11	search with cache (only 1: auto).	0.12549495697	39
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	6	search with cache (only 1: eauto).	0.281871080399	11
Coq.setoid_ring.Field_theory.rsub_0_r	40	15	search with cache (only 1: let rec rsimpl := gen_srewrite Rsth Reqe ARth in rsimpl).	17.6072070599	298
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	25	search with cache (only 1: eauto).	2.36730790138	598
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	1.1.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	0.671794891357	11
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.485030889511	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.483414888382	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.709314823151	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	8.0	search with cache (only 1: intros l; only 1: eauto).	1.74441814423	32
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.581102848053	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1).	12.5425140858	30
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	3.6	search with cache (only 1: destruct 1; only 1: trivial).	4.50285506248	25
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00811004638672	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00691485404968	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00652599334717	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0	search with cache (only 1: exact eq_equivalence).	0.0045919418335	1
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.2.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intuition eauto  3; only 1: congruence).	0.0656290054321	38
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	7.8.18.1.4.39	search with cache (only 1: red; only 1: unfold equality; only 1: symmetry; only 1: pose proof PI2_RGT_0 as t; only 1: unfold eq_notation in *; only 1: intuition).	31.0933179855	30011
Coq.setoid_ring.Rings_R.R_one_zero	40	6	search with cache (only 1: exact R1_neq_R0).	0.0165538787842	7
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.00673508644104	1
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	6	search with cache (only 1: easy).	0.0109300613403	7
Coq.setoid_ring.Ring_theory.IDmorph	40	80	search with cache (only 1: easy').	1.72856211662	7082
Coq.setoid_ring.Ring_theory.Eqsth	40
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	1.1.38	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	0.265282154083	918
Coq.setoid_ring.Ring_theory.Eq_ext	40	93	search with cache (only 1: easy').	0.742156982422	4745
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	1.5	search with cache (only 1: intros n m H1 H2; only 1: firstorder).	0.032341003418	16
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	2.6	search with cache (only 1: intros n m H1 H2; only 1: firstorder).	0.0328989028931	17
Coq.setoid_ring.Ring_theory.SRopp_ext	40	5.1	search with cache (only 1: intros a b; only 1: auto).	0.00622296333313	8
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.7.8.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	1.05110406876	1591
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	6.10	search with cache (only 1: intros a n; only 1: reflexivity).	0.0376269817352	154
Coq.setoid_ring.Ring_theory.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.00598382949829	2
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.00644493103027	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	6.1.1.2.2.3.2.18	search with cache (only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.467823028564	1950
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	85	search with cache (only 1: CRelationClasses.simpl_crelation).	7.98832416534	10136
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	2.34	search with cache (only 1: intro; only 1: firstorder).	2.01239013672	4081
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	8.32	search with cache (only 1: intro; only 1: firstorder).	2.57523989677	5135
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	3.27	search with cache (only 1: intros a b n; only 1: firstorder).	0.726238012314	1424
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	4	search with cache (only 1: firstorder).	0.0199110507965	5
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	4.9	search with cache (only 1: intros; only 1: firstorder).	0.259294033051	112
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	11.5.44	search with cache (only 1: intro H; only 1: intros x y; only 1: firstorder).	5.37887620926	11421
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	2.12	search with cache (only 1: intro H; only 1: firstorder).	0.0597598552704	94
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	28	search with cache (only 1: CRelationClasses.simpl_crelation).	0.519307851791	975
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	3	search with cache (only 1: mrewrite).	0.0691158771515	4
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0150690078735	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00624895095825	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00670313835144	2
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00658392906189	3
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.10.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	1.09468007088	542
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	7.5.7	search with cache (only 1: intros l l'; only 1: intros x y H; only 1: firstorder).	27.2508351803	770
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	8.6.8	search with cache (only 1: intros l l'; only 1: intros x y H; only 1: firstorder).	0.703189849854	953
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00567102432251	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00559902191162	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00527381896973	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.00831699371338	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.692501068115	201
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.4.1	search with cache (only 1: intros; only 1: induction x; only 1: norm; only 1: norm).	0.0221920013428	9
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.022066116333	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0227918624878	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0220019817352	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0164310932159	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	76	search with cache (only 1: easy).	9.46235179901	2985
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	68.11.4	search with cache (only 1: intros m H; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	14.8628518581	15255
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	11.6	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	5.08898115158	1693
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	16.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	4.9318959713	1543
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.010666847229	3
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40	41.19	search with cache (only 1: intros n m H; only 1: firstorder).	34.5816061497	34008
Coq.setoid_ring.Ncring.ring_add_0_r	40	2.6.2.18	search with cache (only 1: intros Hb; only 1: rewrite ring_add_comm; only 1: rewrite ring_add_0_l; only 1: reflexivity).	1.18572497368	807
Coq.setoid_ring.Ncring.ring_add_assoc1	40	8.5.7.10	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: mrewrite).	5.58473992348	1611
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.2.1.8.2	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.920632839203	245
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.6.5	search with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: now destruct Zeq_bool).	0.102290153503	82
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.00734400749207	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	12	search with cache (only 1: intuition).	0.0101790428162	46
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.0	search with cache (only 1: unlock; only 1: discriminate).	0.00994682312012	2
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0.23	search with cache (only 1: simpl; only 1: by case : {}k {}).	0.0371391773224	280
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.1.2	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.0103189945221	6
Coq.ssr.ssreflect.iffLR	40	22	search with cache (only 1: tauto).	0.0241820812225	267
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00813794136047	1
Coq.ssr.ssreflect.iffLRn	40	2.8.8	search with cache (only 1: intro; only 1: intro; only 1: tauto).	0.246270895004	321
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.00838422775269	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	1.0	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0117609500885	3
Coq.ssr.ssrbool.is_true_true	40	2	search with cache (only 1: reflexivity).	0.00620889663696	3
Coq.ssr.ssrbool.not_false_is_true	40	2	search with cache (only 1: intuition).	0.0061469078064	3
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00814986228943	2
Coq.ssr.ssrbool.negbT	40	1	search with cache (only 1: Bool.destr_bool).	0.00836205482483	2
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.008220911026	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00843691825867	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00880980491638	1
Coq.ssr.ssrbool.negbK	40	0.7	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.00953316688538	9
Coq.ssr.ssrbool.negbNE	40	3	search with cache (only 1: Bool.destr_bool).	0.0112280845642	4
Coq.ssr.ssrbool.negb_inj	40	0.8	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0137300491333	10
Coq.ssr.ssrbool.negbLR	40	6	search with cache (only 1: Bool.destr_bool).	0.0137059688568	7
Coq.ssr.ssrbool.negbRL	40	7	search with cache (only 1: Bool.destr_bool).	0.0143451690674	8
Coq.ssr.ssrbool.contra	40	5.4	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0275771617889	29
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0118310451508	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0111508369446	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0116958618164	1
Coq.ssr.ssrbool.contraT	40	5.9	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.16861987114	106
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0114500522614	2
Coq.ssr.ssrbool.contraFT	40	3.5	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0311379432678	10
Coq.ssr.ssrbool.contraFN	40	3.6	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0547559261322	25
Coq.ssr.ssrbool.contraTF	40	4.12	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.190173864365	209
Coq.ssr.ssrbool.contraNF	40	2.13	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.193079948425	154
Coq.ssr.ssrbool.contraFF	40	2.24.44	search with cache (only 1: symmetry; only 1: Bool.destr_bool; only 1: intuition).	3.68733906746	14830
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40
Coq.ssr.ssrbool.ifT	40	5	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0141241550446	6
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move {+}->).	0.00796103477478	2
Coq.ssr.ssrbool.ifN	40	2	search with cache (only 1: by case : {}b {}).	0.0113940238953	3
Coq.ssr.ssrbool.if_same	40	1	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.00786185264587	2
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.00789713859558	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.00733494758606	1
Coq.ssr.ssrbool.if_arg	40	6	search with cache (only 1: by case b).	0.00772500038147	7
Coq.ssr.ssrbool.ifE	40	5	search with cache (only 1: reflexivity).	0.0118720531464	6
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0121788978577	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0112788677216	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.011547088623	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	1.13	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.148873806	92
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	11	search with cache (only 1: by case Pb).	0.115498065948	33
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	31	search with cache (only 1: by case).	0.0954730510712	486
Coq.ssr.ssrbool.impliesPn	40	33.27.19	search with cache (only 1: intro p; only 1: destruct p; only 1: auto).	4.14975190163	20256
Coq.ssr.ssrbool.unlessL	40	2.0.23.14.12	search with cache (only 1: split; only 1: intros H ?; only 1: intros; only 1: apply H0; only 1: by [  ]).	0.739255905151	7169
Coq.ssr.ssrbool.unlessR	40	10.35.6.5	search with cache (only 1: repeat split; only 1: intros; only 1: intro p; only 1: auto).	1.27559709549	14767
Coq.ssr.ssrbool.unless_sym	40	2.11.10.7.16.14	search with cache (only 1: split; only 1: intros H ?; only 1: intros; only 1: apply H; only 1: auto; only 1: apply H0).	1.24144601822	12743
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40	16.24.7.16.24.7.13	search with cache (only 1: Bool.destr_bool; only 1: repeat split; only 1: intros P b H H0; only 1: intuition; only 1: repeat split; only 1: intros P b H H0; only 1: intuition).	29.1796901226	134726
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.00950193405151	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0104479789734	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.012748003006	1
Coq.ssr.ssrbool.pair_andP	40	19	search with cache (only 1: tauto).	0.0402309894562	276
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00425601005554	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.0046820640564	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.00686597824097	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00513601303101	1
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0117609500885	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00649380683899	1
Coq.ssr.ssrbool.andTb	40	0.29	search with cache (only 1: intro H; only 1: repeat split).	0.0985021591187	451
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: repeat split).	0.00385499000549	1
Coq.ssr.ssrbool.andbT	40	23	search with cache (only 1: by case  {}=>// undecP; apply /undecP {}; <ssreflect_plugin::ssrtclintros@0> right =>notP; apply /notF/undecP {}; left).	0.0557699203491	255
Coq.ssr.ssrbool.andbF	40	2.57	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.43462395668	1849
Coq.ssr.ssrbool.andbb	40
Coq.ssr.ssrbool.andbC	40	2.45	search with cache (only 1: red; only 1: Bool.destr_bool).	0.350566148758	1183
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00544285774231	1
Coq.ssr.ssrbool.andbCA	40	0.34	search with cache (only 1: intros H ?; only 1: Bool.destr_bool).	0.114995956421	621
Coq.ssr.ssrbool.andbAC	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0137000083923	3
Coq.ssr.ssrbool.andbACA	40	0.3	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0178649425507	5
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00468301773071	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00425291061401	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.00701498985291	3
Coq.ssr.ssrbool.orbF	40	3.14	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0697691440582	151
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00517010688782	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00559711456299	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00836181640625	1
Coq.ssr.ssrbool.orbCA	40	1.1.55	search with cache (only 1: move  {}=>iPQ [] // notPQ; only 1: simpl; only 1: Bool.destr_bool).	0.560262918472	1792
Coq.ssr.ssrbool.orbAC	40	0.28	search with cache (only 1: intro H1; only 1: Bool.destr_bool).	0.197536945343	420
Coq.ssr.ssrbool.orbACA	40	0.13	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.05149102211	75
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.00681185722351	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00525784492493	1
Coq.ssr.ssrbool.orbN	40	2	search with cache (only 1: Bool.destr_bool).	0.00641798973083	3
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.0056300163269	1
Coq.ssr.ssrbool.andb_orl	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0089750289917	3
Coq.ssr.ssrbool.andb_orr	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00658202171326	3
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00844287872314	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00885391235352	1
Coq.ssr.ssrbool.andb_idl	40	1.22	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.21831202507	292
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0100069046021	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0110671520233	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.014063835144	1
Coq.ssr.ssrbool.orb_idl	40
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0100169181824	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0114870071411	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0548009872437	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.00786185264587	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: Bool.destr_bool).	0.00791692733765	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00673317909241	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00677895545959	1
Coq.ssr.ssrbool.orbK	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00672197341919	2
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0059380531311	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: Bool.destr_bool).	0.00677704811096	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case b; constructor; auto).	0.00485110282898	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.0051851272583	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00482797622681	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.00700402259827	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00622797012329	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00661087036133	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00680899620056	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00684905052185	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00650095939636	1
Coq.ssr.ssrbool.implyb_idl	40
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0100049972534	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0115270614624	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00480914115906	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00529193878174	1
Coq.ssr.ssrbool.addbb	40	14	search with cache (only 1: by case).	0.033411026001	75
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00573492050171	1
Coq.ssr.ssrbool.addbA	40	8.0	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0166919231415	14
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00838184356689	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00822591781616	1
Coq.ssr.ssrbool.addbACA	40	7.33	search with cache (only 1: intro H1; only 1: Bool.destr_bool).	0.327615976334	901
Coq.ssr.ssrbool.andb_addl	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.014237165451	3
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.087718963623	1
Coq.ssr.ssrbool.addKb	40	5	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0126261711121	6
Coq.ssr.ssrbool.addbK	40	30.45	search with cache (only 1: intros H ?; only 1: Bool.destr_bool).	0.608513116837	3072
Coq.ssr.ssrbool.addIb	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0117118358612	4
Coq.ssr.ssrbool.addbI	40	1.0.5.24	search with cache (only 1: red; only 1: Bool.destr_bool; only 1: exact : {}can_inj {}negbK {}; only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.370486021042	1009
Coq.ssr.ssrbool.addTb	40	7	search with cache (only 1: by case : {}b {}).	0.0096480846405	8
Coq.ssr.ssrbool.addbT	40	8	search with cache (only 1: by case : {}b {}).	0.010379076004	9
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0104389190674	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00689697265625	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.37	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: now constructor; only 1: intuition).	0.936914205551	869
Coq.ssr.ssrbool.subrelUl	40	27.7.44.21	search with cache (only 1: intros Hfst Hsnd; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	4.65199303627	17784
Coq.ssr.ssrbool.subrelUr	40	8.18.36.17	search with cache (only 1: inversion 1; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	2.69937491417	11304
Coq.ssr.ssrbool.sub_refl	40	6.2	search with cache (only 1: intro H; only 1: by [  ]).	0.00809693336487	10
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : {}pT {}pp {}).	0.00605988502502	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40
Coq.ssr.ssrbool.unfold_in	40	3	search with cache (only 1: by rewrite -mem_topred).	0.00684905052185	4
Coq.ssr.ssrbool.simpl_predE	40	1	search with cache (only 1: by [  ]).	0.00498485565186	2
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.0055239200592	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	search with cache (only 1: by [  ]).	0.00568985939026	1
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	8	search with cache (only 1: auto).	0.00933313369751	12
Coq.ssr.ssrbool.in1W	40	0.27.7	search with cache (only 1: intros; only 1: intro p; only 1: by [  ]).	0.295002937317	1608
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00676989555359	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00611901283264	1
Coq.ssr.ssrbool.in1T	40	5.14	search with cache (only 1: intros n m; only 1: auto).	0.191733837128	229
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0128021240234	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0141780376434	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0121610164642	2
Coq.ssr.ssrbool.sub_in11	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.0063099861145	1
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0145380496979	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00594806671143	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.00517797470093	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00578212738037	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0122110843658	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0127799510956	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0137469768524	2
Coq.ssr.ssrbool.subon1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00609517097473	1
Coq.ssr.ssrbool.subon1l	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0955131053925	2
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0104749202728	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	21.36.33	search with cache (only 1: Bool.destr_bool; only 1: subst; only 1: auto).	8.0080280304	25485
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.0117049217224	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.00725388526917	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.00741600990295	3
Coq.ssr.ssrbool.inW_bij	40	6.4.31.45.24	search with cache (only 1: simpl in *; only 1: intros [x y]; only 1: exists x; only 1: by move  {}=>? ?; auto; only 1: by move  {}=>? ?).	19.2938258648	76405
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.00765609741211	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0111601352692	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0112719535828	1
Coq.ssr.ssrbool.sub_in_bij	40	0.41	search with cache (only 1: intro z; only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.472930908203	1082
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.0190751552582	6
Coq.ssr.ssrbool.sub_in2	40	8.54	search with cache (only 1: Bool.destr_bool; only 1: by move  {}=>? ?; auto).	1.12613892555	3377
Coq.ssr.ssrbool.sub_in3	40	5.15	search with cache (only 1: red; only 1: by move  {}=>? ?; auto).	0.197629928589	223
Coq.ssr.ssrbool.sub_in12	40	1.22	search with cache (only 1: intro; only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	0.306272029877	281
Coq.ssr.ssrbool.sub_in21	40	6.38	search with cache (only 1: Bool.destr_bool; only 1: by move  {}=>? ?; auto).	0.891871213913	1392
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	24.15.48.39.15	search with cache (only 1: intros; only 1: intros n m; only 1: symmetry; only 1: destruct m; only 1: by [  ]).	38.1783459187	216106
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.00569105148315	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.00810694694519	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.007483959198	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0129430294037	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.2	search with cache (only 1: intros; only 1: tauto).	0.00634908676147	4
Coq.ssr.ssrfun.unitE	40	5.1.5	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.0220119953156	96
Coq.ssr.ssrfun.frefl	40	25	search with cache (only 1: split).	0.0266790390015	306
Coq.ssr.ssrfun.fsym	40	0.7	search with cache (only 1: intros; only 1: by [  ]).	0.0158689022064	9
Coq.ssr.ssrfun.ftrans	40	1.17.29.11	search with cache (only 1: intros Hfst Hsnd; only 1: intro z; only 1: rewrite Hfst; only 1: by [  ]).	1.49916315079	7703
Coq.ssr.ssrfun.rrefl	40	11	search with cache (only 1: split).	0.00949382781982	33
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.0081160068512	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.00782203674316	1
Coq.ssr.ssrfun.all_sig	40
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.0184359550476	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.0106630325317	2
Coq.ssr.ssrfun.canLR	40	2.30.23	search with cache (only 1: intro H; only 1: inversion 1; only 1: trivial).	0.966120004654	6446
Coq.ssr.ssrfun.canRL	40	16.5.21	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.359817028046	1857
Coq.ssr.ssrfun.Some_inj	40	1.6.13	search with cache (only 1: intros n m; only 1: inversion 1; only 1: trivial).	0.229371070862	553
Coq.ssr.ssrfun.of_voidK	40	0.3.5	search with cache (only 1: intro H; only 1: simpl; only 1: destruct H, u).	0.0148150920868	25
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	0	search with cache (only 1: by [  ]).	0.00748300552368	1
Coq.ssr.ssrfun.inj_can_sym	40	17.18	search with cache (only 1: red; only 1: auto).	0.332254171371	1346
Coq.ssr.ssrfun.inj_comp	40	11.15.7	search with cache (only 1: intros; only 1: intro H1; only 1: auto).	0.535772800446	1589
Coq.ssr.ssrfun.inj_compr	40	2.15.13.24.10.42.9	search with cache (only 1: intros; only 1: intro; only 1: symmetry; only 1: apply H; only 1: simpl; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).	11.970468998	76211
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0	search with cache (only 1: trivial).	0.00637793540955	1
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.00573992729187	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0064959526062	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00586199760437	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00656390190125	1
Coq.Vectors.VectorEq.eqb_nat_eq	40	4.5	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0561101436615	94
Coq.Vectors.VectorEq.eqb_eq	40	5.15	search with cache (only 1: fix even_spec 1; only 1: eauto).	13.8306159973	2360
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	7.8.5	search with cache (only 1: intros n m p Hp; only 1: intros <-; only 1: trivial).	1.1189930439	2360
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40	3.1.4.0.1.2.29.80	search with cache (only 1: induction n; only 1: now PeanoNat.Nat.nzsimpl; only 1: generalize dependent n; only 1: refine (@Fin.rectS _ _ _); only 1: now split; only 1: intros; only 1: simpl in *; only 1: auto).	3.62143516541	13631
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0.0	search with cache (only 1: simpl; only 1: intros b Hb IH Hc; only 1: Morphisms.solve_proper).	0.00720596313477	3
Coq.Vectors.VectorSpec.take_idem	40	2.15.0.1	search with cache (only 1: induction p as [| p f]; only 1: reflexivity; only 1: fix le_div2 1; only 1: trivial).	3.47270107269	7458
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.0.0.1.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.580461978912	399
Coq.Vectors.VectorSpec.uncons_cons	40	4.3	search with cache (only 1: intros; only 1: reflexivity).	0.00624585151672	9
Coq.Vectors.VectorSpec.append_comm_cons	40	1.0.0	search with cache (only 1: intros; only 1: simpl; only 1: now simpl).	0.00817894935608	4
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	4.5.0	search with cache (only 1: intros a n H H'; only 1: fix even_spec 1; only 1: trivial).	0.142187833786	230
Coq.Vectors.Fin.eqb_eq	40	1.4.3	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: Bool.destr_bool).	0.151164054871	138
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.29.9	search with cache (only 1: intros x y z; only 1: destruct 1; only 1: trivial).	1.62301015854	10394
Coq.Setoids.Setoid.Seq_refl	40	12.1	search with cache (only 1: intros; only 1: firstorder).	0.0686089992523	165
Coq.Setoids.Setoid.Seq_sym	40	2.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: intuition).	0.00968194007874	5
Coq.Setoids.Setoid.Seq_trans	40	1.1.6.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.135393857956	428
Coq.Setoids.Setoid.gen_st	40	11.4	search with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.0598261356354	387
Coq.Bool.IfProp.Iftrue_inv	40	2.0.1	search with cache (only 1: destruct 1; only 1: tauto; only 1: discriminate).	0.0123929977417	33
Coq.Bool.IfProp.Iffalse_inv	40	2.2.1.0.16	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.35453414917	1589
Coq.Bool.IfProp.IfProp_true	40	1.9.27	search with cache (only 1: intros n m; only 1: inversion 1; only 1: trivial).	1.68621301651	12551
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0172319412231	20
Coq.Bool.IfProp.IfProp_or	40	0.6.0.3.0	search with cache (only 1: destruct 1; only 1: left; only 1: exact H; only 1: right; only 1: trivial).	0.212233066559	545
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.1.0.14	search with cache (only 1: destruct n as [| [| n]]; only 1: easy; only 1: now try Nat.order'; only 1: easy).	0.233935117722	471
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0116021633148	3
Coq.Bool.Zerob.zerob_false_intro	40	1.3.1.0	search with cache (only 1: destruct n; only 1: intros; only 1: now try Nat.order'; only 1: easy).	0.0164070129395	9
Coq.Bool.Zerob.zerob_false_elim	40	1.1.4.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: inversion 1; only 1: inversion 1).	0.0423939228058	41
Coq.Bool.DecBool.ifdec_left	40	9.4.6.3.3.31	search with cache (only 1: intros Hfst Hsnd; only 1: destruct H; only 1: trivial; only 1: intros; only 1: destruct H; only 1: auto).	10.4840521812	121329
Coq.Bool.DecBool.ifdec_right	40	0.14.0.10.0.0	search with cache (only 1: intros; only 1: case H; only 1: transitivity x; only 1: auto; only 1: contradiction; only 1: auto).	10.9230320454	50478
Coq.Bool.Sumbool.sumbool_of_bool	40	4.4.8.35	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.223428964615	2907
Coq.Bool.Sumbool.bool_eq_rec	40	1.2.1.2.2	search with cache (only 1: destruct b; only 1: intro z; only 1: auto; only 1: intro z; only 1: auto).	0.044399023056	291
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00836992263794	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	2.2.1.2.0	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	1.61777806282	3843
Coq.Bool.Sumbool.sumbool_not	40	2.2.0	search with cache (only 1: case H1; only 1: auto; only 1: auto).	0.148755073547	368
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	17	search with cache (only 1: discriminate).	0.0250759124756	353
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00585699081421	1
Coq.Bool.Bool.eq_true_false_abs	40	3.3.20.0	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate).	0.134415864944	1918
Coq.Bool.Bool.not_true_is_false	40	0.20.3	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: repeat split).	0.239011049271	1774
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0078489780426	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.010232925415	5
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0100522041321	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.012717962265	5
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.0084080696106	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00686407089233	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00805902481079	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0115299224854	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0143439769745	5
Coq.Bool.Bool.negb_orb	40	3.9	search with cache (only 1: intros; only 1: destr_bool).	0.0170619487762	66
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00787019729614	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00680208206177	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00643491744995	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00858521461487	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00701999664307	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00667595863342	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00672292709351	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00692915916443	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00889301300049	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00882005691528	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0148210525513	5
Coq.Bool.Bool.orb_false_iff	40	0.0.2.7	search with cache (only 1: intuition; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.20351099968	360
Coq.Bool.Bool.orb_true_elim	40	1.1.5.0	search with cache (only 1: destr_bool; only 1: auto; only 1: intuition; only 1: intuition).	0.0216209888458	46
Coq.Bool.Bool.orb_prop	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0107448101044	4
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: intuition).	0.00999283790588	4
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00776100158691	1
Coq.Bool.Bool.orb_false_elim	40	2.0	search with cache (only 1: destr_bool; only 1: repeat split).	0.00890302658081	4
Coq.Bool.Bool.orb_diag	40	2.0	search with cache (only 1: intros; only 1: destr_bool).	0.00836205482483	4
Coq.Bool.Bool.orb_true_r	40	2.1.0.1.1	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: intuition).	0.0124268531799	12
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00684595108032	1
Coq.Bool.Bool.orb_false_r	40	3.1	search with cache (only 1: intros; only 1: destr_bool).	0.00901508331299	6
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00677013397217	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00691914558411	1
Coq.Bool.Bool.orb_comm	40	2	search with cache (only 1: destr_bool).	0.00813007354736	12
Coq.Bool.Bool.orb_assoc	40	5.0	search with cache (only 1: intros; only 1: destr_bool).	0.0121078491211	7
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.185115098953	240
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.103006124496	25
Coq.Bool.Bool.andb_true_eq	40	0.2	search with cache (only 1: destr_bool; only 1: repeat split).	0.117832899094	120
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.00800895690918	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00735807418823	3
Coq.Bool.Bool.andb_false_r	40	5.1	search with cache (only 1: intros; only 1: destr_bool).	0.0074200630188	8
Coq.Bool.Bool.andb_false_l	40	1	search with cache (only 1: destr_bool).	0.0831289291382	2
Coq.Bool.Bool.andb_diag	40	2	search with cache (only 1: destr_bool).	0.00385808944702	3
Coq.Bool.Bool.andb_true_r	40	2	search with cache (only 1: destr_bool).	0.0042130947113	3
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.00417304039001	2
Coq.Bool.Bool.andb_false_elim	40	0.0.0.2	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0140719413757	18
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00448107719421	1
Coq.Bool.Bool.andb_comm	40	3	search with cache (only 1: destr_bool).	0.00804018974304	16
Coq.Bool.Bool.andb_assoc	40	1.2.2	search with cache (only 1: destruct b2; only 1: destr_bool; only 1: destr_bool).	0.00809192657471	8
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0072660446167	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00770902633667	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00712895393372	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00728607177734	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00539517402649	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00558090209961	1
Coq.Bool.Bool.xorb_false_r	40	3	search with cache (only 1: destr_bool).	0.00434494018555	4
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.0042290687561	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00381803512573	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00296497344971	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00447010993958	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.00612187385559	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.00766801834106	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00576400756836	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.00739502906799	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.00810217857361	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0081889629364	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00818395614624	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.00577211380005	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00548505783081	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00632405281067	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0160689353943	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00947499275208	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00614094734192	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00578212738037	3
Coq.Bool.Bool.absurd_eq_bool	40	3.3.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0075409412384	9
Coq.Bool.Bool.absurd_eq_true	40	3.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00484895706177	5
Coq.Bool.Bool.trans_eq_bool	40	3	search with cache (only 1: destr_bool).	0.00801801681519	4
Coq.Bool.Bool.Is_true_eq_true	40	3.1	search with cache (only 1: destr_bool; only 1: intuition).	0.00535893440247	6
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00448799133301	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00442695617676	3
Coq.Bool.Bool.eqb_refl	40	1	search with cache (only 1: destr_bool).	0.00408411026001	2
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00662088394165	3
Coq.Bool.Bool.orb_prop_elim	40	0.2.2.2.1.14	search with cache (only 1: intros n m; only 1: induction n as [| p H]; only 1: revert m; only 1: simpl; only 1: intuition; only 1: auto with bool).	0.327499866486	1741
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00605297088623	2
Coq.Bool.Bool.andb_prop_intro	40	1.0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00748300552368	6
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.00850796699524	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0103080272675	13
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00748205184937	3
Coq.Bool.Bool.negb_prop_elim	40	1.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00578212738037	4
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00583481788635	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00495600700378	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00510120391846	3
Coq.Bool.Bool.andb_if	40	3	search with cache (only 1: destr_bool).	0.00662612915039	4
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00433993339539	1
Coq.Bool.Bool.andb_lazy_alt	40	2.0	search with cache (only 1: intros; only 1: trivial).	0.00413513183594	4
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.003338098526	2
Coq.Bool.Bool.reflect_iff	40	1.0.0.20.3	search with cache (only 1: intros; only 1: destruct H; only 1: intuition; only 1: intuition; only 1: destr_bool).	1.01477408409	3829
Coq.Bool.Bool.iff_reflect	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0139291286469	13
Coq.Bool.Bool.reflect_dec	40	0.0.12	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition).	0.215097904205	268
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.14	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0330700874329	155
Coq.Bool.BoolEq.beq_eq_true	40	3.2	search with cache (only 1: destruct 1; only 1: destr_bool).	0.00792503356934	16
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40	12.31.1	search with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	2.4241399765	12354
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	6.0.0.0.0.1.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	2.52419304848	1586
Coq.Lists.ListSet.set_mem_correct1	40
Coq.Lists.ListSet.set_mem_correct2	40	9.0.0.0.0.1.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	5.49847817421	5507
Coq.Lists.ListSet.set_mem_complete1	40	0.0.1.3.0.3.0.0.1.0.1	search with cache (only 1: red; only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: intro Ha; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	7.2388548851	12052
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	1.1.1.0.4.3.0.1.0.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec b a0); only 1: intro eq; only 1: rewrite eq; only 1: left; only 1: auto with datatypes; only 1: right; only 1: auto with datatypes).	4.72428798676	11434
Coq.Lists.ListSet.set_add_intro	40	5	search with cache (only 1: intuition).	0.0693509578705	84
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.0.0.1.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.512309074402	825
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.6.0.9.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	1.76848101616	3526
Coq.Lists.ListSet.set_union_intro	40	0.0.1.1.0.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.0889849662781	26
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.1.4.2.0.0.0.0.18	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	2.42023897171	3817
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.0640571117401	40
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	5.2.0.1.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: eauto with datatypes).	0.421692848206	439
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	5.0.0.0.0.2	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: unfold decidable; only 1: tauto; only 1: simpl; only 1: intuition).	0.49715590477	252
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	6.46	search with cache (only 1: intros [Hl Hr]; only 1: reflexivity).	0.258279085159	3193
Coq.Lists.Streams.tl_nth_tl	40	1.6.0.2	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0854580402374	361
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	3.5.3.7.0	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto).	0.646629810333	2915
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40	5.5.0.0.2.1.2.3.1	search with cache (only 1: unfold Str_nth; only 1: simple induction n; only 1: intros; only 1: case H; only 1: trivial with datatypes; only 1: simpl; only 1: intros; only 1: case H0; only 1: auto with datatypes).	28.5079090595	118249
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	0.8.0	search with cache (only 1: intros; only 1: coinduction ltac:(EqSt_reflex); only 1: auto with datatypes).	0.0156390666962	39
Coq.Lists.Streams.Str_nth_tl_map	40	2.0.2.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0188031196594	33
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.2.3.1.1	search with cache (only 1: intros n; only 1: unfold Str_nth; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.0743570327759	379
Coq.Lists.Streams.ForAll_map	40	3.1.1.5.0.5.1.6.0.10	search with cache (only 1: split; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: case H; only 1: auto; only 1: assumption; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: case H; only 1: simpl; only 1: auto; only 1: assumption).	4.42880296707	10785
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	5.0.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: auto).	0.0107591152191	10
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.1.0.0.2.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl in *; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.0559470653534	139
Coq.Lists.List.nil_cons	40	3.2	search with cache (only 1: intros h1 h2; only 1: discriminate).	0.00892782211304	33
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	23.0.16	search with cache (only 1: intro H; only 1: intros; only 1: RelationClasses.simpl_relation).	3.85018610954	12160
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	5	search with cache (only 1: reflexivity).	0.00479292869568	6
Coq.Lists.List.hd_error_cons	40	0.0.0.0	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: reflexivity; only 1: reflexivity).	0.00729012489319	4
Coq.Lists.List.in_eq	40	4.1.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.00741410255432	8
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00431513786316	2
Coq.Lists.List.not_in_cons	40	0.0.0.9	search with cache (only 1: simpl; only 1: split; only 1: intuition; only 1: intuition).	0.0711879730225	68
Coq.Lists.List.in_nil	40	0	search with cache (only 1: intuition Nat.order).	0.00479698181152	1
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00484013557434	2
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40	2.11.0.0.1.24.25	search with cache (only 1: intro H; only 1: destruct H; only 1: simpl; only 1: intros; only 1: now discriminate; only 1: intros; only 1: discriminate).	7.87763118744	34832
Coq.Lists.List.app_nil_l	40	0	search with cache (only 1: auto).	0.00549793243408	1
Coq.Lists.List.app_nil_r	40	0.2.6.0.6	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.0504009723663	320
Coq.Lists.List.app_nil_end	40	1.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.00863599777222	8
Coq.Lists.List.app_assoc	40	1.0.1.29.0.0.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros n; only 1: intros; only 1: f_equal; only 1: auto).	8.48231101036	48645
Coq.Lists.List.app_assoc_reverse	40	1.0.0.0.0.2.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0180649757385	30
Coq.Lists.List.app_comm_cons	40	3.4	search with cache (only 1: simpl; only 1: auto using app_assoc).	0.0158710479736	52
Coq.Lists.List.app_eq_nil	40	4.0.3.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: now discriminate).	0.0701789855957	249
Coq.Lists.List.app_eq_unit	40	2.1.2.4.12.3.1.1.1.1.1	search with cache (only 1: destruct x as [| a l]; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros H; only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: intuition Nat.Private_Tac.order; only 1: simpl; only 1: inversion 1).	28.8802108765	119535
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	1.1.2.0.5	search with cache (only 1: induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.139769792557	165
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	8.0.14.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: firstorder; only 1: simpl; only 1: tauto).	2.28765392303	10654
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0.1.0.0	search with cache (only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00930905342102	13
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40
Coq.Lists.List.app_nth1	40	3.0.2.0.1.2.0.2	search with cache (only 1: unfold lt; only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	4.37406206131	7888
Coq.Lists.List.app_nth2	40	0.0.2.0.2.3.0.1.2.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: trivial; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: intros; only 1: inversion H; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).	3.12706398964	8347
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.0.3.2.0	search with cache (only 1: revert n; only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	0.579978942871	740
Coq.Lists.List.nth_error_app2	40
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	1.0	search with cache (only 1: simpl; only 1: intuition).	0.00617384910583	3
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	0.0.0.5.2.0.0.2.0.0.8.0.5	search with cache (only 1: simpl; only 1: intuition; only 1: destruct l; only 1: destruct eq_dec as [->| Hneq]; only 1: reflexivity; only 1: simpl; only 1: intuition; only 1: destruct eq_dec as [_| NEQ]; only 1: trivial; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	12.1621551514	25888
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.00946688652039	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.1.3.3.0.10	search with cache (only 1: induction l; only 1: trivial; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	0.175148010254	484
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	4.7.10.0	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: auto).	0.302769899368	1716
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	2	search with cache (only 1: trivial).	0.00582695007324	3
Coq.Lists.List.concat_cons	40	4.0.0	search with cache (only 1: induction x as [| x l IHl]; only 1: auto; only 1: auto).	0.00798988342285	7
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	8.1	search with cache (only 1: simpl in *; only 1: auto).	0.0132110118866	47
Coq.Lists.List.in_map	40	3.5.0.6.1.4	search with cache (only 1: induction l as [| y l]; only 1: auto; only 1: intro; only 1: simpl; only 1: intuition; only 1: CRelationClasses.simpl_crelation).	3.65312290192	10501
Coq.Lists.List.in_map_iff	40	0.0.6.2.0.0.2.0	search with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: firstorder  (subst; auto); only 1: induction l as [| a l IH]; only 1: intros (b, (Hb, H)); only 1: auto; only 1: firstorder  (subst; auto)).	1.14351511002	2244
Coq.Lists.List.map_length	40	0.0.11.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto with arith).	0.143430948257	453
Coq.Lists.List.map_nth	40	1.3.0.3.0.0.2.0	search with cache (only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl in *; only 1: induction n; only 1: reflexivity; only 1: auto).	0.731760025024	2223
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	0.0.1	search with cache (only 1: induction l as [| x l]; only 1: auto; only 1: discriminate).	0.00705599784851	4
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	3.0.1.2.4	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.306473016739	687
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	1.6.2.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.177565097809	352
Coq.Lists.List.map_map	40	11.0.0.1.15	search with cache (only 1: intros a Ha; only 1: induction l as [| x l IH]; only 1: firstorder  (subst; auto); only 1: simpl; only 1: CRelationClasses.simpl_crelation).	1.79276299477	5283
Coq.Lists.List.map_ext_in	40	0.0.1.6.0.3.0.1.0.4	search with cache (only 1: intros l1; only 1: induction l; only 1: firstorder; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: rewrite H; only 1: auto; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	13.0582680702	22259
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	3.0.1.1.0.1.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.186570167542	383
Coq.Lists.List.fold_left_app	40	3.2.2	search with cache (only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto)).	0.101156949997	55
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	2.0.0.4.2.0.5	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros l1; only 1: intros; only 1: rewrite IHl; only 1: auto).	1.81142401695	3416
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.21	search with cache (only 1: fix even_spec 1; only 1: congruence).	0.182600975037	486
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0073778629303	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	0.1.1.1.7.6	search with cache (only 1: intros; only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.947025060654	2139
Coq.Lists.List.filter_ext	40	6.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0523540973663	98
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.0.1.0.2.2	search with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.102906942368	110
Coq.Lists.List.split_length_r	40	0.0.0.1.0.3.0	search with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto with arith).	0.0624539852142	89
Coq.Lists.List.split_combine	40	0.5.4.0.2.1.2.11.0	search with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: destruct a; only 1: simpl in *; only 1: destruct (split l); only 1: simpl; only 1: apply f_equal; only 1: auto).	13.2552649975	26442
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	5.0.2.0.5.0.2.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.11871409416	4804
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	2.2.1.1.4.0.1.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl in *; only 1: intros; only 1: destruct H; only 1: destruct H; only 1: auto; only 1: auto).	1.32190489769	3019
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.00519514083862	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.00516414642334	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0.2.2	search with cache (only 1: destruct l; only 1: now simpl; only 1: firstorder  (subst; auto)).	0.0194849967957	28
Coq.Lists.List.incl_tl	40	2.10	search with cache (only 1: right; only 1: intuition).	0.0473301410675	135
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto with datatypes).	0.00615310668945	1
Coq.Lists.List.incl_appl	40	8.7	search with cache (only 1: intros l2; only 1: intuition).	0.602843046188	975
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0102570056915	1
Coq.Lists.List.incl_cons	40	2.5	search with cache (only 1: intros; only 1: firstorder  (subst; auto)).	0.0111629962921	18
Coq.Lists.List.incl_app	40	10.6.0.3.2.1	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: simpl; only 1: generalize (rev_involutive (A:=l)); only 1: firstorder  (subst; auto)).	6.45313405991	8117
Coq.Lists.List.firstn_nil	40	3.4.121	search with cache (only 1: induction n; only 1: intuition; only 1: reflexivity).	1.60925316811	9725
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: auto).	0.0042769908905	1
Coq.Lists.List.firstn_all	40	0.1.0.0.6	search with cache (only 1: induction l as [| a l' Hrec]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: auto).	0.0757250785828	49
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.0057418346405	2
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40	0.0.0.2.1.0.2.0.0.3	search with cache (only 1: induction n as [| n IH]; only 1: intros [| a l] H; only 1: auto; only 1: auto; only 1: simpl; only 1: intros [| x l] H; only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: now f_equal).	1.07969903946	2594
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	1.3.0	search with cache (only 1: induction l as [| x l]; only 1: trivial; only 1: auto).	0.00735116004944	7
Coq.Lists.List.skipn_nil	40	2.0.2.5	search with cache (only 1: intro l'; only 1: elim l'; only 1: reflexivity; only 1: firstorder).	0.029855966568	72
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00503611564636	1
Coq.Lists.List.skipn_none	40	4.1.7	search with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: auto).	0.131623029709	162
Coq.Lists.List.skipn_all2	40	1.1.1.4.0.7	search with cache (only 1: induction n; only 1: now induction l; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: auto with arith).	0.768687963486	530
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40	7.0.2.1.1.0.2	search with cache (only 1: intro; only 1: induction n as [| k iHk]; only 1: now simpl; only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: simpl; only 1: auto).	5.79164814949	8998
Coq.Lists.List.skipn_length	40	0.0.0.0.1.16	search with cache (only 1: Nat.induct n; only 1: auto with arith; only 1: induction l; only 1: auto; only 1: simpl in *; only 1: auto).	10.5997850895	6120
Coq.Lists.List.skipn_all	40	0	search with cache (only 1: now induction l).	0.00556778907776	1
Coq.Lists.List.skipn_app	40	1.1.5.2.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: destruct l1 as [| x xs]; only 1: auto; only 1: simpl in *; only 1: apply iHk).	1.05013108253	1853
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	1.0.0.4	search with cache (only 1: destruct l; only 1: trivial; only 1: simpl; only 1: auto).	0.00764393806458	9
Coq.Lists.List.combine_firstn_l	40	7.0.0.1.0.0.0.1.2	search with cache (only 1: induction l; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: apply length_zero_iff_nil; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	3.37124800682	4896
Coq.Lists.List.combine_firstn_r	40	0.1.0.0.0.0.1.0.1.7.0.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: destruct l'; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	1.15002202988	2671
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40	0.1.2.3	search with cache (only 1: induction 1; only 1: trivial; only 1: simpl in *; only 1: auto).	0.16298699379	22
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0067458152771	2
Coq.Lists.List.NoDup_cons_iff	40	0.1.1.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now constructor; only 1: now constructor).	0.0244538784027	12
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40	1.40.18	search with cache (only 1: revert l; only 1: fix even_spec 1; only 1: trivial).	11.7958250046	81609
Coq.Lists.List.Exists_nil	40
Coq.Lists.List.Exists_cons	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_inv	40	3.22.0.5	search with cache (only 1: intros a r; only 1: firstorder; only 1: inversion_clear H; only 1: auto).	0.881358146667	3425
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.3.4	search with cache (only 1: intros a b l H; only 1: inversion H; only 1: trivial).	0.0202231407166	53
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40	2.2.4.1.1.0.3.0.0.1.0.1	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: left; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	35.5016999245	40136
Coq.Lists.List.Forall_impl	40	0.0.5.27.19.3.1	search with cache (only 1: intro y; only 1: induction l as [| a l IHl]; only 1: constructor 1; only 1: inversion_clear 1; only 1: right; only 1: firstorder; only 1: firstorder).	13.9777522087	99121
Coq.Lists.List.Forall2_refl	40	7	search with cache (only 1: left).	0.00629019737244	8
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	3.4.1.2.12.1.3.1.3.5	search with cache (only 1: induction l1; only 1: induction l1'; only 1: auto; only 1: intros; only 1: inversion H; only 1: intros l'; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto).	15.4688129425	61270
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	0.8.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	0.319906949997	924
Coq.Lists.List.repeat_spec	40	10.11.0.33	search with cache (only 1: revert n; only 1: induction n as [| k Hrec]; only 1: contradiction; only 1: firstorder).	1.85329508781	7325
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	3.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.00900602340698	6
Coq.Lists.SetoidPermutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0146071910858	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	4.2.0	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0108358860016	9
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	0.0.13.8	search with cache (only 1: intuition; only 1: inversion H; only 1: auto; only 1: auto).	1.25361514091	1863
Coq.Lists.SetoidList.InA_nil	40	6.1	search with cache (only 1: intros; only 1: easy).	0.0239880084991	15
Coq.Lists.SetoidList.InA_alt	40	1.0.0.0.3.0.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.502548933029	891
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	11	search with cache (only 1: now f_equal).	0.0461411476135	86
Coq.Lists.SetoidList.eqlistA_altdef	40	1.4.40	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	7.56039404869	23105
Coq.Lists.SetoidList.equivlist_equiv	40	1	search with cache (only 1: firstorder).	0.0157420635223	2
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40
Coq.Lists.SetoidList.In_InA	40	0.0.0.15	search with cache (only 1: induction l; only 1: intros a H; only 1: firstorder; only 1: firstorder  (subst; auto)).	8.8590130806	2744
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40	10.0.5.1.3.5.1	search with cache (only 1: intros l m a; only 1: firstorder  (subst; auto); only 1: induction l; only 1: auto; only 1: inversion H; only 1: auto; only 1: firstorder).	26.0920259953	13051
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40
Coq.Lists.SetoidList.InA_double_head	40	1.1.1.0.17	search with cache (only 1: firstorder; only 1: invlist InA; only 1: auto; only 1: auto; only 1: auto).	1.97458004951	952
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0409219264984	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.23.22	search with cache (only 1: constructor; only 1: inversion_clear 1; only 1: auto).	0.60675406456	1707
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.0	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: intuition).	0.0643367767334	3
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.1.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0768489837646	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.15	search with cache (only 1: intros H; only 1: rewrite InA_app_iff; only 1: tauto).	0.0775270462036	136
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.1.0.2.1.1.0.16.3.0.6	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	4.33370995522	13518
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	3.5.4.6.22.2.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: destruct IHl; only 1: auto).	22.3192150593	37099
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	8.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: intuition; only 1: intuition).	2.65966105461	612
Coq.Lists.SetoidList.InA_InfA	40	2.1.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: eauto).	0.0226449966431	11
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	3.1.1.31	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: now constructor).	4.50493907928	4554
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40	5.3.0.0.0.1.1.1.9	search with cache (only 1: intro; only 1: induction 1; only 1: simpl in *; only 1: induction 1; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto; only 1: eauto).	8.53414487839	3493
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.1.2.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: induction 1; only 1: constructor; only 1: auto; only 1: simpl; only 1: auto).	0.0151028633118	10
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	12.0	search with cache (only 1: intros; only 1: now rewrite H).	0.215060949326	363
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: reflexivity).	0.00395894050598	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00423908233643	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.16.2.56	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.569477081299	3987
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	3	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0128898620605	4
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.00447988510132	1
Coq.NArith.BinNat.N.two_succ	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.00460410118103	2
Coq.NArith.BinNat.N.pred_0	40	12	search with cache (only 1: trivial).	0.00584602355957	46
Coq.NArith.BinNat.N.pos_pred_spec	40	3	search with cache (only 1: trivial).	0.00428581237793	4
Coq.NArith.BinNat.N.succ_pos_spec	40
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.3.1.0.0.12.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	3.40643191338	7189
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40
Coq.NArith.BinNat.N.pred_sub	40
Coq.NArith.BinNat.N.succ_0_discr	40	7.59.2.7	search with cache (only 1: intro H; only 1: destruct n; only 1: inversion H; only 1: now f_equal).	1.59682703018	12132
Coq.NArith.BinNat.N.add_0_l	40	2	search with cache (only 1: trivial).	0.00387001037598	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1.12.3	search with cache (only 1: induction n; only 1: trivial; only 1: auto).	0.0247709751129	236
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	1.1.0	search with cache (only 1: destruct n; only 1: auto; only 1: auto).	0.00569701194763	5
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.1.0.1	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0473690032959	101
Coq.NArith.BinNat.N.compare_le_iff	40	2	search with cache (only 1: apply iff_refl).	0.0170650482178	15
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.00992393493652	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	5	search with cache (only 1: trivial).	0.00502991676331	12
Coq.NArith.BinNat.N.succ_double_spec	40	1.0.0.0.4.11	search with cache (only 1: nzinduct n; only 1: now nzsimpl'; only 1: intro n; only 1: simpl; only 1: nzsimpl; only 1: now destruct n).	3.27902007103	1073
Coq.NArith.BinNat.N.double_add	40	0.1.0.0.0.1.3.1.0.4.1	search with cache (only 1: induct n; only 1: now nzsimpl; only 1: intro n; only 1: destruct n, m; only 1: now rewrite add_0_l; only 1: simpl; only 1: reflexivity; only 1: unfold succ, add; only 1: easy'; only 1: simpl; only 1: trivial).	18.8521718979	6159
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.00613188743591	1
Coq.NArith.BinNat.N.double_mul	40
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.0.25	search with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: trivial).	0.0980458259583	394
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0051600933075	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	3.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0136399269104	12
Coq.NArith.BinNat.N.double_le_mono	40	3.9.8	search with cache (only 1: intro H; only 1: intro H1; only 1: now destruct n, m).	3.57541394234	3215
Coq.NArith.BinNat.N.succ_double_lt_mono	40	2.1.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: easy).	0.0125460624695	25
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.9.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: now nzsimpl; only 1: easy; only 1: easy; only 1: easy).	0.145984888077	161
Coq.NArith.BinNat.N.compare_0_r	40	24.14	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	15.2914681435	39490
Coq.NArith.BinNat.N.pow_0_r	40	1.0	search with cache (only 1: rewrite one_succ; only 1: now rewrite <- one_succ).	0.00735092163086	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	9.2.11.65	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: now destruct p).	23.3943600655	55459
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.6.1.4.3.0.1.3.1	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: apply succ_inj_wd; only 1: now rewrite <- one_succ; only 1: discriminate; only 1: trivial).	2.63160300255	7739
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40	0.17.0.17.14	search with cache (only 1: split; only 1: fix even_spec 1; only 1: easy'; only 1: fix even_spec 1; only 1: easy').	3.33167695999	5766
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.00869703292847	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.00659394264221	3
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	8	search with cache (only 1: apply le_0_l).	0.0723650455475	72
Coq.NArith.BinNat.N.testbit_even_0	40	0.0.26.13.1	search with cache (only 1: rewrite two_succ; only 1: destr_bool; only 1: induction a; only 1: easy'; only 1: easy || now destruct Hb).	5.88089799881	6610
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.00497913360596	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.14.1.2	search with cache (only 1: rewrite two_succ; only 1: intros H; only 1: destruct (le_exists_sub _ _ H) as (d, (EQ, Hd)); only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	9.95238900185	14677
Coq.NArith.BinNat.N.testbit_neg_r	40	1	search with cache (only 1: now destruct n).	0.0130589008331	2
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.00603890419006	3
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40	1.6.1.6.9.10	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: fix odd_spec 1; only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	15.7268600464	32016
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00892996788025	2
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00469398498535	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.510891914368	98
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00521993637085	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	2.1.2.1.0.31	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.455015897751	1535
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40	0.1	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0197551250458	3
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.014750957489	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0155529975891	1
Coq.NArith.Ndec.Neqb_complete	40
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	7.2.6.6.10.10.0	search with cache (only 1: intros; only 1: rewrite <- ?negb_true_iff, ?N.negb_even, ?N.odd_spec, ?N.even_spec; only 1: apply eq_true_iff_eq; only 1: split; only 1: reflexivity; only 1: fix odd_spec 1; only 1: trivial).	5.69581198692	15391
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40
Coq.NArith.Ndec.Ndiv2_neq	40	0.3.1.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0228040218353	8
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.1	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.0868990421295	28
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0104248523712	1
Coq.NArith.Ndec.Nleb_antisym	40	6.1.1	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order).	0.181329965591	48
Coq.NArith.Ndec.Nleb_trans	40	4.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.order).	0.029149055481	6
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0167551040649	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	47	search with cache (only 1: now destruct a).	3.93003797531	4824
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.19.43	search with cache (only 1: intro H1; only 1: destruct H1 as [H1| H1]; only 1: trivial; only 1: trivial).	29.5045950413	127387
Coq.NArith.Ndist.ni_min_O_r	40	1.1.1.3.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: intros; only 1: rewrite Nat.min_0_r; only 1: trivial).	0.0617761611938	145
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.00589108467102	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.00989699363708	5
Coq.NArith.Ndist.ni_le_refl	40	0.16.0.0.5.17.1	search with cache (only 1: intro n; only 1: repeat red; only 1: case n; only 1: trivial; only 1: unfold ni_min; only 1: fix odd_spec 1; only 1: trivial).	4.26611185074	8382
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	2.1.3.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).	0.279906988144	270
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	1.16.3.21	search with cache (only 1: assert (leS : forall n m, n <= m -> S n <= S m) by (induction 1; auto); only 1: intros a Ha; only 1: fix le_div2 1; only 1: trivial).	18.496380806	38369
Coq.NArith.Ndist.ni_le_le	40	1.16.4.22	search with cache (only 1: assert (leS : forall n m, n <= m -> S n <= S m) by (induction 1; auto); only 1: intros a Ha; only 1: fix le_div2 1; only 1: trivial).	12.7092912197	23749
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40	4.15	search with cache (only 1: fix even_spec 1; only 1: trivial).	14.8845398426	12141
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0.4	search with cache (only 1: intros; only 1: now destruct n).	0.00958609580994	6
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1	search with cache (only 1: reflexivity).	0.00607490539551	2
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1.2	search with cache (only 1: intros; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max).	0.00835609436035	5
Coq.NArith.Ndigits.Pshiftl_nat_S	40	2.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00812196731567	4
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.1.6.1.0.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?orb_false_r; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.300430059433	339
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.2.3.0.7.0.23.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: destruct n; only 1: now constructor; only 1: destruct p; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).	2.84129714966	4197
Coq.NArith.Ndigits.Ndouble_bit0	40	19	search with cache (only 1: now destruct n).	0.0847191810608	329
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.1.0.5.2	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.0825610160828	168
Coq.NArith.Ndigits.Ndiv2_double	40	12.1.0.1.4.9.0.0.4	search with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: destr_eq H; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	25.9326601028	55526
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40	1.0.0.0.0.4.4.1.9	search with cache (only 1: destruct a; only 1: trivial; only 1: intros m; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	2.02578687668	2929
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	8.48	search with cache (only 1: fix even_spec 1; only 1: intuition).	7.45781302452	16882
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0124318599701	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40	6.59	search with cache (only 1: fix even_spec 1; only 1: easy).	24.6613888741	70774
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	4.86919188499	5943
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40
Coq.NArith.Ndigits.Nless_def_3	40	1.1.0.0.0.0.0.0.1.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: trivial; only 1: easy).	0.602791070938	491
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.14	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.0719530582428	216
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40	0.22.9	search with cache (only 1: intros m Hm; only 1: fix even_spec 1; only 1: trivial).	4.01250314713	4908
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.test	40	8.0	search with cache (only 1: intros; only 1: intuition N.Private_Tac.order).	0.0128269195557	10
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.1.0.2.1.4.1	search with cache (only 1: rewrite <- (id a), <- (id a'); only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	1.27389097214	640
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.0.0.0.0	search with cache (only 1: destruct a as [| p]; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0141320228577	8
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	1.0.0.42	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.412973880768	2354
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.8.1.0.0.1.0.9	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: rewrite H; only 1: now f_equal).	2.47807383537	2865
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0192048549652	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.0147318840027	1
Coq.NArith.Nnat.Nat2N.inj_pred	40
Coq.NArith.Nnat.Nat2N.inj_add	40
Coq.NArith.Nnat.Nat2N.inj_sub	40	1	search with cache (only 1: nat2N).	0.0149211883545	2
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0152299404144	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	4	search with cache (only 1: nat2N).	0.0146751403809	5
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	4	search with cache (only 1: nat2N).	0.0725409984589	5
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0160439014435	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.00933599472046	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.00966596603394	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.00887084007263	1
Coq.Strings.Ascii.eqb_compat	40	0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: t_eqb).	0.0071280002594	2
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40	46.4.21	search with cache (only 1: intro n; only 1: induction n; only 1: destr_bool).	4.76315188408	10707
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.11.6	search with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: decide equality; only 1: decide equality; only 1: decide equality).	3.18332386017	2279
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0117540359497	1
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0111169815063	1
Coq.Strings.String.eqb_compat	40	0.5	search with cache (only 1: intros m Hm; only 1: t_eqb).	0.00823402404785	7
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.3.0.11	search with cache (only 1: destruct x; only 1: reflexivity; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.539495944977	208
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	4	search with cache (only 1: trivial).	0.00656008720398	5
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	19	search with cache (only 1: trivial).	4.97479486465	4215
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	2	search with cache (only 1: auto).	0.00698399543762	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0314960479736	3
Coq.Reals.Ratan.pos_half_prf	40	0	search with cache (only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	0.0103061199188	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	8.7	search with cache (only 1: intuition; only 1: lra).	1.30066800117	636
Coq.Reals.Ratan.pos_opp_lt	40
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.5.6.0	search with cache (only 1: induction l as [| r0 l Hrecl0]; only 1: intros m H; only 1: easy; only 1: reflexivity).	0.178844213486	291
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	4.0.0.2.8.3	search with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: apply INR_eq; only 1: reflexivity; only 1: simpl; only 1: auto).	0.413283824921	625
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	3.10	search with cache (only 1: intros n m Hn; only 1: now subst).	0.349869966507	540
Coq.Reals.RList.RList_P22	40
Coq.Reals.RList.RList_P23	40	2.11.0.0.1.45.0	search with cache (only 1: intro n; only 1: revert n; only 1: induction n; only 1: intros; only 1: tauto; only 1: simpl; only 1: auto).	17.6301620007	24910
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	8.6.0.8.2	search with cache (only 1: simple induction l1; only 1: Morphisms.solve_proper; only 1: intros; only 1: simpl; only 1: congruence).	1.53153681755	3097
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40	2.42	search with cache (only 1: fix le_div2 1; only 1: auto with real).	17.6608500481	13653
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0571489334106	16
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	0.3.1.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.187030076981	70
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.0.0.2.10.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: unfold Rgt; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition eauto  4 with real; only 1: intuition eauto  4 with real).	6.34303212166	8715
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40	1.1.0.2.0.0.0	search with cache (only 1: unfold Rmin; only 1: intros r1 r2; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: red; only 1: intuition; only 1: red; only 1: intuition eauto  4 with real).	0.732326030731	281
Coq.Reals.Rbasic_fun.Rmin_r	40	2.5.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto with real).	1.16051101685	597
Coq.Reals.Rbasic_fun.Rmin_left	40	2.0.0.0.2	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: auto with real).	0.562068939209	81
Coq.Reals.Rbasic_fun.Rmin_right	40	1.1.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0173649787903	6
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0195908546448	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	1.1.0.1.1.0.0.1	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.83317899704	473
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	6.0.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto).	0.0128479003906	15
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.1.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	1.54030895233	101
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.7.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro; only 1: assumption).	0.546869039536	730
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	3.1.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.178335905075	75
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	1.1.0.2.0.0.2	search with cache (only 1: intros r1 r2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: red; only 1: auto with zarith real; only 1: red; only 1: intuition eauto  4 with real).	2.23510098457	1727
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0195651054382	8
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0184848308563	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	2.1.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0500569343567	27
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	2.1.3.2.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	7.46065187454	10557
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	1.1.0.2.0.3.0.2	search with cache (only 1: intros r1 r2; only 1: unfold Rmax; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: red; only 1: intuition; only 1: red; only 1: intuition eauto  4 with real).	7.43381905556	3761
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.1.1.0.0.1.1.3.0.0	search with cache (only 1: intros; only 1: intuition eauto  4 with real; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H); only 1: intuition eauto  4 with real; only 1: right; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H)).	30.033162117	2687
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	3.2.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).	0.0147020816803	8
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	6.11.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	2.9730758667	2496
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	14.3.8.0	search with cache (only 1: intros; only 1: rewrite pow_ne_zero; only 1: auto; only 1: Nat.order).	1.63999199867	2087
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.2.0	search with cache (only 1: intros; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.421779155731	115
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.3.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.42569899559	96
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.2	search with cache (only 1: intros; only 1: reflexivity).	0.0129630565643	4
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40	1.6.0.4.7.6.0.9.6.1	search with cache (only 1: intros m n p; only 1: intros E1; only 1: intros H1 H2; only 1: intro H; only 1: case H2; only 1: case H2; only 1: destruct H; only 1: simpl; only 1: intros a b c H; only 1: ring).	26.1631131172	21740
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	21.55	search with cache (only 1: fix le_div2 1; only 1: auto).	4.16238093376	14290
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40	6.9.14.0	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: intros x y z; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	4.4293820858	12867
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1.4.0	search with cache (only 1: intro n; only 1: simpl; only 1: trivial).	0.12042593956	22
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0	search with cache (only 1: auto with real).	0.00860691070557	1
Coq.Reals.Rfunctions.pow_1	40	1.0.14	search with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.079421043396	238
Coq.Reals.Rfunctions.pow_add	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0260860919952	10
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0	search with cache (only 1: simpl; only 1: auto with real).	0.0106868743896	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.0.6	search with cache (only 1: intros n m; only 1: intros; only 1: repeat rewrite S_INR; only 1: ring).	0.0465500354767	26
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	12.1.4.4.0.3	search with cache (only 1: simple induction n; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intros; only 1: auto with real).	8.52624607086	11378
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.4.0.0.0.0.0.2.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: trivial; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: ring; only 1: ring).	5.24405908585	2005
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.6.1	search with cache (only 1: intros; only 1: rewrite Rsqr_neg; only 1: ring_Rsqr).	0.0945019721985	108
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	2.6	search with cache (only 1: unfold IZR, IPR; only 1: trivial).	0.0259029865265	21
Coq.Reals.Rfunctions.powerRZ_1	40	2.3.4.1	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: trivial).	0.121930122375	159
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40
Coq.Reals.Rfunctions.powerRZ_le	40	4.2.0	search with cache (only 1: intros x z; only 1: red; only 1: auto with real).	0.295946121216	97
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	1.0.4.5.30	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto with real).	1.4495370388	2286
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	6.11.1.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	4.56471800804	4605
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.1.0.0.5.0	search with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.52263212204	355
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	19.0.1.0.45.3	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intro; only 1: apply (not_0_INR (fact n) (fact_neq_0 n)); only 1: auto with real).	16.2764439583	49899
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.0102980136871	2
Coq.Reals.Exp_prop.div2_S_double	40	3	search with cache (only 1: apply Nat.div2_succ_double).	0.0118548870087	4
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	1.1.1.1.2	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with sets; only 1: auto with sets).	0.232520103455	163
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40	1.0.0.0.0.0.5.0.12	search with cache (only 1: intros; only 1: unfold Rpower; only 1: rewrite Rmult_1_l; only 1: unfold ln; only 1: decide Rlt_dec 0 x with H; only 1: unfold Rln; only 1: destruct (ln_exists {| pos := x; cond_pos := H |} (cond_pos {| pos := x; cond_pos := H |})) as (?, Hex); only 1: symmetry; only 1: apply Hex).	24.1075310707	5865
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	3.4.0.3.0	search with cache (only 1: intros; only 1: intro b; only 1: simpl; only 1: elim H; only 1: auto).	9.00743508339	2293
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	2.0.1.0	search with cache (only 1: intros; only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.0145950317383	15
Coq.Reals.RIneq.Rge_refl	40	2.0.0.0	search with cache (only 1: intro; only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.00936603546143	6
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.5.20.1.0.16	search with cache (only 1: red; only 1: intros; only 1: apply (Rlt_irrefl r1); only 1: destruct H0, H; only 1: trivial; only 1: auto with real).	36.14615798	46017
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.0.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0402359962463	3
Coq.Reals.RIneq.Rlt_le	40	3.7	search with cache (only 1: left; only 1: auto with real).	0.120766162872	162
Coq.Reals.RIneq.Rgt_ge	40	4.6.1	search with cache (only 1: intro y; only 1: left; only 1: exact H).	0.649944067001	268
Coq.Reals.RIneq.Rle_ge	40	16.0.0.0.2.14	search with cache (only 1: induction 1; only 1: left; only 1: generalize (total_order_T r1 r2); only 1: tauto; only 1: red; only 1: auto).	5.29238605499	8784
Coq.Reals.RIneq.Rge_le	40	3.2.1.0.5	search with cache (only 1: intro n; only 1: destruct 1; only 1: auto with real; only 1: red; only 1: now right).	0.693812847137	932
Coq.Reals.RIneq.Rlt_gt	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.00985097885132	3
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.00433802604675	1
Coq.Reals.RIneq.Rnot_le_lt	40	1.3.0.2	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0217931270599	19
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	3.1.0.5.6	search with cache (only 1: intros; only 1: intuition eauto  3; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: auto with real).	0.3493039608	512
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0115919113159	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.1.1.0.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: unfold not; only 1: intuition eauto  3).	0.0981299877167	10
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0222308635712	6
Coq.Reals.RIneq.Rnot_gt_ge	40	2.3.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0400841236115	9
Coq.Reals.RIneq.Rnot_lt_ge	40	0.1.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0248539447784	6
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0118050575256	12
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	2.5	search with cache (only 1: intros LT; only 1: auto with real).	0.0433170795441	76
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.2	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.144435882568	73
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0141761302948	6
Coq.Reals.RIneq.Rle_not_gt	40	0.0.6.4	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	1.91368508339	506
Coq.Reals.RIneq.Rge_not_gt	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.0117218494415	8
Coq.Reals.RIneq.Req_le	40	0.0	search with cache (only 1: right; only 1: trivial).	0.00778102874756	2
Coq.Reals.RIneq.Req_ge	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.00913405418396	3
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0117599964142	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.0125269889832	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.1.2	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: intuition).	0.190862894058	8
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.2.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.027352809906	18
Coq.Reals.RIneq.Rle_le_eq	40	1.2.1	search with cache (only 1: unfold Rle; only 1: intros; only 1: intuition).	0.0503721237183	18
Coq.Reals.RIneq.Rge_ge_eq	40	18.9	search with cache (only 1: intro n; only 1: intuition).	4.48357510567	5038
Coq.Reals.RIneq.Rlt_eq_compat	40	9	search with cache (only 1: RelationClasses.simpl_relation).	0.0241680145264	23
Coq.Reals.RIneq.Rgt_eq_compat	40	2.0.9.1	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: red; only 1: exact H0).	0.400392055511	388
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.4	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.41532087326	165
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.302269935608	95
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.3.4.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.46467590332	60
Coq.Reals.RIneq.Rle_dec	40	0.0.5.1.3.2.0	search with cache (only 1: intros; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: unfold not; only 1: intuition eauto  3).	28.4013409615	2188
Coq.Reals.RIneq.Rgt_dec	40	2.0.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: intuition).	0.169233083725	9
Coq.Reals.RIneq.Rge_dec	40
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.0235769748688	4
Coq.Reals.RIneq.Rgt_ge_dec	40	0.1.0.1.0.3.3.1	search with cache (only 1: intros; only 1: unfold Rgt; only 1: edestruct Rle_dec; only 1: eauto with real; only 1: left; only 1: apply Rnot_le_lt; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.55911397934	534
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.019033908844	3
Coq.Reals.RIneq.Rge_gt_dec	40	1.0.3.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: unfold Rgt; only 1: eauto with real; only 1: eauto with rorders).	0.133085012436	53
Coq.Reals.RIneq.Rlt_or_le	40	0.2.1.1	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.565192937851	17
Coq.Reals.RIneq.Rgt_or_ge	40
Coq.Reals.RIneq.Rle_or_lt	40	0.2.2.2	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.341169834137	100
Coq.Reals.RIneq.Rge_or_gt	40	1.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: eauto using Rnot_lt_le with rorders; only 1: eauto with real).	0.13382601738	89
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	3.6.0.1	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	4.08739209175	507
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.3.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.22124385834	16
Coq.Reals.RIneq.Rplus_ne	40	1.1.13	search with cache (only 1: constructor; only 1: ring; only 1: ring).	2.39167189598	368
Coq.Reals.RIneq.Rplus_opp_l	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.4638671875	7
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.3.1	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.0197620391846	20
Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.3.0.2	search with cache (only 1: intro; only 1: intros x y H; only 1: rewrite H; only 1: ring).	0.0524411201477	32
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	2.1.0.3.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.741258144379	334
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.4.0.0.1.0.0.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto using Rplus_lt_compat_l with real; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	7.25039410591	1704
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0233988761902	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0234389305115	4
Coq.Reals.RIneq.Rmult_0_r	40	4.1	search with cache (only 1: intros; only 1: ring).	0.0699701309204	19
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0154881477356	2
Coq.Reals.RIneq.Rmult_ne	40	1.7.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: unfold IZR, IPR; only 1: auto with real).	0.384028911591	275
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0913970470428	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	3.1.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: destruct H; only 1: ring).	0.0233399868011	8
Coq.Reals.RIneq.Rmult_eq_compat_r	40	3.1.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: destruct H; only 1: ring).	0.0221371650696	8
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	2.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0191988945007	17
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.5.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.235530853271	112
Coq.Reals.RIneq.Rmult_neq_0_reg	40	4.15	search with cache (only 1: intros a b; only 1: intuition).	1.04602813721	654
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	7.1	search with cache (only 1: intros; only 1: auto with real).	0.45060300827	107
Coq.Reals.RIneq.Rmult_plus_distr_r	40	7.0	search with cache (only 1: intros; only 1: ring).	4.70362687111	31
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0.0	search with cache (only 1: intros; only 1: intuition eauto  4 with real).	0.0153019428253	2
Coq.Reals.RIneq.Ropp_0	40	1	search with cache (only 1: ring).	0.0225920677185	17
Coq.Reals.RIneq.Ropp_eq_0_compat	40
Coq.Reals.RIneq.Ropp_involutive	40	3.0	search with cache (only 1: intros; only 1: ring).	0.0200970172882	13
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	6.1	search with cache (only 1: intros; only 1: ring).	0.0249130725861	16
Coq.Reals.RIneq.Ropp_mult_distr_l	40	2.8.1	search with cache (only 1: intro; only 1: intro r; only 1: ring).	3.36021494865	504
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.05908203125	2
Coq.Reals.RIneq.Rmult_opp_opp	40	27.0	search with cache (only 1: intros; only 1: ring).	29.156539917	15348
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.015200138092	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.016802072525	2
Coq.Reals.RIneq.Rminus_0_r	40	12.6	search with cache (only 1: intros; only 1: ring).	0.674602985382	374
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0151400566101	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1.0	search with cache (only 1: intro; only 1: intros; only 1: ring).	0.0164039134979	4
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0124580860138	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.6.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	0.443202018738	112
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	0.6.4.1	search with cache (only 1: intros r1 r2; only 1: rewrite <- (Ropp_involutive r2); only 1: symmetry; only 1: auto with real).	2.11967992783	1561
Coq.Reals.RIneq.Rplus_minus	40	6.7.2.0.6.1	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: rewrite Rlt_def; only 1: rewrite Rlt_def; only 1: intros; only 1: ring).	19.5323460102	3030
Coq.Reals.RIneq.Rminus_eq_contra	40	5.0.1.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: intro; only 1: auto with real).	0.0199670791626	11
Coq.Reals.RIneq.Rminus_not_eq	40	1.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0165379047394	5
Coq.Reals.RIneq.Rminus_not_eq_right	40	2.3.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0206611156464	12
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.1	search with cache (only 1: intros; only 1: ring).	0.842179059982	16
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.6.1.8	search with cache (only 1: intro abs; only 1: intros; only 1: field; only 1: trivial).	20.5949120522	1505
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.020663022995	4
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0233891010284	4
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: trivial; only 1: auto with real).	0.0724658966064	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: trivial; only 1: auto with real).	0.684370040894	129
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: do 2 rewrite Rrepr_plus; only 1: apply CRealLtForget; only 1: apply CReal_plus_lt_compat_l; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0230810642242	10
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.0.2	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.081916809082	33
Coq.Reals.RIneq.Rplus_le_compat_l	40	3.4.11	search with cache (only 1: intros n m; only 1: unfold Rle; only 1: intuition).	1.31774115562	441
Coq.Reals.RIneq.Rplus_ge_compat_l	40	1.2.3.0.0.1.3.6	search with cache (only 1: intros a b; only 1: intros; only 1: elim H; only 1: left; only 1: intuition; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	2.33158898354	1276
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.2.2.6.0	search with cache (only 1: unfold Rle; only 1: intuition; only 1: right; only 1: apply (f_equal (fun v => v + r)); only 1: intuition eauto  4 with real).	13.8974580765	3202
Coq.Reals.RIneq.Rplus_ge_compat_r	40	21	search with cache (only 1: auto with *).	0.698482990265	713
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	1.1.0.0.3	search with cache (only 1: unfold Rgt; only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0314438343048	26
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.00895285606384	2
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40	0.0.0.0.1.0.3.0.6	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	5.24178910255	666
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3.4.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.438596963882	40
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.025593996048	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0	search with cache (only 1: eauto using Rplus_lt_compat_l with rorders).	0.00856614112854	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.0.3.0	search with cache (only 1: destruct 1; only 1: red; only 1: intuition; only 1: red; only 1: intuition).	0.0599269866943	8
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	3.1	search with cache (only 1: intros; only 1: auto with real).	0.0413429737091	17
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0363111495972	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0	search with cache (only 1: auto with real).	0.00820899009705	1
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0120401382446	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0122051239014	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0117609500885	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0125057697296	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	3.1	search with cache (only 1: intros; only 1: intuition).	0.0142819881439	6
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	search with cache (only 1: auto using Ropp_lt_cancel with rorders).	0.195083856583	29
Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.0.0.9.4	search with cache (only 1: intros x y z; only 1: unfold IZR; only 1: red; only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.63768696785	827
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	0.3.5	search with cache (only 1: unfold IZR; only 1: intros r H; only 1: intuition).	0.396301984787	193
Coq.Reals.RIneq.Rmult_ge_compat_r	40	1.4.6	search with cache (only 1: unfold IZR; only 1: intros r H; only 1: intuition).	0.831739902496	516
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	2.5.7	search with cache (only 1: unfold IZR; only 1: intros r H; only 1: intuition).	1.02279496193	392
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.2.0	search with cache (only 1: intros; only 1: replace r with - - r; only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0856759548187	37
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	6.0.1.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.223298072815	123
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.3.6	search with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.682786941528	449
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.1.3.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace r2 with 0 + r2; only 1: replace r1 with r1 - r2 + r2; only 1: auto with real; only 1: ring; only 1: auto with real).	0.256359100342	95
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.0.12.2	search with cache (only 1: intros; only 1: replace r2 with 0 + r2; only 1: replace r1 with r1 - r2 + r2; only 1: auto with real; only 1: ring; only 1: auto with real).	26.4761312008	15054
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.2.2	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0146501064301	16
Coq.Reals.RIneq.Rle_0_1	40	0.11	search with cache (only 1: unfold Rle; only 1: auto with real).	0.0381100177765	76
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.913158178329	445
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.1.14	search with cache (only 1: intros; only 1: replace 0 with 0 + 0; only 1: auto with real; only 1: auto with real).	1.26881098747	2162
Coq.Reals.RIneq.Rlt_plus_1	40	10	search with cache (only 1: apply Rlt_n_Sn).	0.0201759338379	69
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	1.1.16.2	search with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: eauto with real).	3.95955395699	798
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	0.9.2.0.1	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: trivial).	0.792826890945	665
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.1.0.32	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	1.29463410378	2797
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	2.3.0.0.0.5.3.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	13.5683729649	3443
Coq.Reals.RIneq.opp_IZR	40	3.1.1.1.2.2	search with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: auto with real; only 1: unfold IZR; only 1: auto with real).	1.22736907005	769
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40	0.0.10.0.0	search with cache (only 1: intros; only 1: unfold Z.sub, Rminus; only 1: symmetry; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR).	1.05027103424	551
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.4.12.0	search with cache (only 1: intros; only 1: replace 0 with 0 * r2; only 1: auto with real; only 1: destruct H0; only 1: auto with real; only 1: auto with real).	22.1761300564	9569
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	8.4	search with cache (only 1: intros; only 1: ring).	0.239341974258	133
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	2.2.1.0.1.3	search with cache (only 1: intros r1 r2; only 1: intros; only 1: replace r2 with 0 + r2; only 1: unfold Rdiv; only 1: ring; only 1: ring).	2.400359869	1108
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40	8.77	search with cache (only 1: fix odd_spec 1; only 1: assumption).	4.68901610374	15325
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40	10.79	search with cache (only 1: fix odd_spec 1; only 1: assumption).	6.21367812157	21917
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40	1.4.2	search with cache (only 1: intros n m p; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.0389759540558	10
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.8.3	search with cache (only 1: constructor; only 1: apply Peano.le_S_n; only 1: auto with arith).	0.309689998627	178
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	10.10	search with cache (only 1: intros; only 1: auto with real).	4.81507086754	2546
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	11.0	search with cache (only 1: intros l a b f; only 1: split).	0.0573129653931	103
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0212590694427	2
Coq.Reals.Ranalysis2.quadruple_var	40	0.2	search with cache (only 1: intro; only 1: field).	0.0310389995575	4
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.5	search with cache (only 1: red; only 1: tauto).	0.065712928772	136
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	4.0.9	search with cache (only 1: intros p; only 1: unfold included; only 1: auto with real).	0.375374078751	699
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	1.16	search with cache (only 1: intro n; only 1: firstorder).	0.172901153564	361
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	10.2.5	search with cache (only 1: intros f w; only 1: unfold neighbourhood; only 1: firstorder).	0.376441955566	842
Coq.Reals.Rtopology.open_set_P2	40	10.4.3.19.3	search with cache (only 1: intros x n; only 1: red; only 1: intros; only 1: unfold neighbourhood; only 1: firstorder).	4.8296649456	15154
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	7.2	search with cache (only 1: intro; only 1: tauto).	0.0154118537903	41
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	5.1.1.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: ring).	1.33417701721	359
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	2.3.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: auto with arith).	0.057137966156	35
Coq.Reals.Rseries.Un_growing_shift	40	6.3.11	search with cache (only 1: intros a b Ha Hb; only 1: Nat.nzsimpl; only 1: trivial).	0.868265151978	995
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40	0.1.21	search with cache (only 1: assert (int78 : -2 <= 7 / 8 <= 2) by (split; Lra.lra); only 1: case PI_2_aux; only 1: tauto).	0.209319114685	283
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	4.0.4	search with cache (only 1: intros cond; only 1: intros; only 1: reflexivity).	0.0444600582123	30
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	1.9.1.0.10.6	search with cache (only 1: red; only 1: intro n; only 1: intros; only 1: apply continuity_pt_inv; only 1: auto; only 1: auto).	30.0783779621	37992
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	3.1.0.0.1.0.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	2.15911006927	625
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.3.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0239660739899	13
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.32.1	search with cache (only 1: intuition eauto  2; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	1.71081805229	5722
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.61	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	2.94412016869	9890
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.1.4.8.1.5.16	search with cache (only 1: rewrite <- (Rinv_involutive 1); only 1: rewrite Rinv_1; only 1: intros; only 1: apply derive_pt_eq_0; only 1: rewrite Rinv_1; only 1: apply derivable_pt_lim_id; only 1: exact R1_neq_R0).	5.37137198448	5804
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	2.14.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.72202706337	577
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.2.0.1.2	search with cache (only 1: intros; only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0503001213074	47
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	3.1.5.0.2.22.6	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: intro; only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption).	6.72123599052	15370
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40	9.78.34	search with cache (only 1: intro H; only 1: fix gcd_greatest 1; only 1: auto with zarith real).	11.5911650658	75370
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0.2.0.3.0	search with cache (only 1: intros; only 1: red; only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.206838130951	10
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	0.0.5.0.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: ring).	0.050971031189	10
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40	1.0.2.0.2.7.19	search with cache (only 1: unfold tan; only 1: rewrite sin_2a; only 1: rewrite cos_PI; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: rewrite cos_2PI; only 1: ring).	3.83680510521	2897
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	3.1.0.2.0	search with cache (only 1: replace (PI / 6) with PI / 2 - PI / 3 by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.299540996552	70
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	1.3.0.0.5	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: Lra.lra).	0.372157096863	203
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	8.0.26.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: Lra.lra).	38.8627641201	25250
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.6	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0523290634155	44
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40	9.1.0.0.9.3.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite sin_PI6_cos_PI3; only 1: rewrite sin_PI6; only 1: rewrite cos_PI6; only 1: unfold Rdiv; only 1: field).	5.119109869	3569
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.1.0.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	0.143059015274	42
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.12.4	search with cache (only 1: apply Rmult_lt_0_compat; only 1: Lra.lra; only 1: apply PI_RGT_0).	0.436125040054	638
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.0.0.2.22.33	search with cache (only 1: replace (3 * (PI / 2)) with PI + PI / 2; only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	19.3431789875	8574
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.1.10.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	1.65421104431	1547
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.1	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0178141593933	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.5	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.020660161972	10
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.013836145401	4
Coq.Reals.Ranalysis4.derive_pt_exp	40	2.3.3	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.098690032959	50
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.2.0.0.1.2.1	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.189757108688	248
Coq.Reals.DiscrR.IZR_eq	40	2.4.0	search with cache (only 1: intros; only 1: elim H; only 1: auto with zarith real).	0.0151131153107	9
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40
Coq.Reals.ConstructiveReals.CReq_sym	40	3.1.3.12	search with cache (only 1: intros n m H; only 1: intro H2; only 1: elim H2; only 1: easy).	2.57612395287	2213
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	109	search with cache (only 1: firstorder).	15.4619650841	36363
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	16.0	search with cache (only 1: destruct x as [xn limx]; only 1: now f_equal).	0.193950891495	386
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	0.51455283165	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.011116027832	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	0.2	search with cache (only 1: intro; only 1: ring).	0.414247989655	136
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0304129123688	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	9	search with cache (only 1: assumption).	0.00836205482483	10
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.2.1	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0336711406708	26
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	2.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	0.0243229866028	5
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.018926858902	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring_Rsqr).	0.0184609889984	3
Coq.Reals.R_sqr.Rsqr_1	40	0.0	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.00954794883728	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40	0.3.5.5.5.2	search with cache (only 1: unfold Rsqr; only 1: red; only 1: intros; only 1: contradiction  (Rlt_irrefl 0); only 1: rewrite H0, Rmult_0_r in H; only 1: trivial).	17.4005701542	5084
Coq.Reals.R_sqr.Rsqr_pos_lt	40	10.0	search with cache (only 1: intros; only 1: auto with real).	0.0845601558685	98
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	9.8	search with cache (only 1: intro z; only 1: apply Rsqr_0_uniq).	2.89719104767	2134
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.9	search with cache (only 1: intros z t; only 1: ring_Rsqr).	0.0543930530548	47
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.015328168869	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	4.0.9	search with cache (only 1: intros r r1 r2 H; only 1: unfold Rsqr; only 1: auto with real).	5.01499795914	3360
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	6.2.0.0.2.2	search with cache (only 1: intros [| p| n]; only 1: exists 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: now rewrite positive_nat_Z; only 1: now destruct 1 || trivial).	2.96448111534	1795
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	0.0.0.0.1.3.3.0.6.5	search with cache (only 1: intros x n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with S (S (2 * n)); only 1: replace (x ^ S (S (2 * n))) with x * x * x ^ (2 * n); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).	9.29869794846	6697
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: apply derivable_pt_id).	0.0152921676636	3
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	4.8	search with cache (only 1: intros eps0 eps0_pos; only 1: intuition).	0.274491071701	104
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	16.0	search with cache (only 1: intros; only 1: lra).	0.272068977356	255
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	2.0.3.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0442011356354	20
Coq.Reals.Rminmax.Rmax_r	40	2.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0235590934753	10
Coq.Reals.Rminmax.Rmin_l	40	3.0.3.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.664412975311	240
Coq.Reals.Rminmax.Rmin_r	40	2.3.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity).	0.0267250537872	12
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.7.0.9	search with cache (only 1: intros Compat Hl Hr; only 1: apply min_mono; only 1: solve_proper; only 1: intros x y; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_le_compat_l).	4.90143609047	2093
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0218839645386	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0214800834656	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	3.0.12.58	search with cache (only 1: intros n Hn; only 1: apply Rmult_lt_0_compat; only 1: trivial; only 1: auto with real).	3.1073319912	8106
Coq.Reals.Rlimit.eps2	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0138440132141	3
Coq.Reals.Rlimit.eps4	40	8.0	search with cache (only 1: intro esp; only 1: field).	0.114440202713	10
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0116431713104	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0120100975037	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	18.4.2	search with cache (only 1: intros; only 1: intro abs; only 1: firstorder).	1.54290008545	4378
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	6.3	search with cache (only 1: intros; only 1: firstorder  (subst; auto)).	0.349247932434	242
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.14.2.0.2	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).	4.9945499897	5437
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	1.0	search with cache (only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0142948627472	3
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0273990631104	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.13.0.8	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	22.1043078899	9648
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	1.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.020201921463	4
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.0.6	search with cache (only 1: intros r r1 r2 H; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real).	0.149506807327	70
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.2.1.0.1.0.5.8	search with cache (only 1: intros x _; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: pose proof (Rlt_le _ _ Hx1) as Hx2; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	6.66573596001	2674
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	132	search with cache (only 1: eauto with arith).	29.3204510212	108308
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.403296947479	323
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0452990531921	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0230340957642	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40	0.29.0.0.8	search with cache (only 1: red; only 1: left; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	14.3059060574	10521
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	5.1.0.2.2.0.3.3	search with cache (only 1: assert (lo1 : 0 <= 7 / 8) by lra; only 1: intro x; only 1: case PI_2_aux; only 1: intros; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	22.2371690273	9158
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	2.0.9.0.6	search with cache (only 1: unfold Rminus at 1; only 1: intro x; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	3.21879196167	1735
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	2.1.0.0.4.0.0.2.0	search with cache (only 1: intro x; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	17.8622090816	6169
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.0426790714264	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.0289030075073	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40	1.0.5.0	search with cache (only 1: rewrite double; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: ring).	0.081004858017	32
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.1.7.2	search with cache (only 1: pose proof PI_4 as t; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.381309986115	330
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.0.2.6	search with cache (only 1: unfold PI; only 1: unfold Rdiv; only 1: destruct pi2_int; only 1: lra).	0.409446001053	83
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.1	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0229318141937	12
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.4.2.2.0.0.3.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with (p - q) / 2 - (p + q) / 2 by field; only 1: rewrite cos_minus; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: rewrite cos_plus; only 1: ring).	9.55894804001	2879
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	1.0.1	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity).	0.0144529342651	5
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	3.0	search with cache (only 1: intros; only 1: auto).	0.0979330539703	23
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.3.6.2	search with cache (only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.431772947311	555
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.171554088593	81
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	4.06722211838	6508
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	17.1	search with cache (only 1: intros p Hp; only 1: now destruct p).	1.51364207268	1051
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	3.3.2.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction; only 1: contradiction).	0.394633054733	425
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40	0.0.3	search with cache (only 1: fix even_spec 1; only 1: intros x y H x0 y0 H0; only 1: auto with qarith).	1.02525496483	35
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	6.7.4	search with cache (only 1: intros i j Hi E; only 1: rewrite E; only 1: tauto).	5.95161485672	1528
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	6.7.4	search with cache (only 1: intros i j Hi E; only 1: rewrite E; only 1: tauto).	6.10621714592	1573
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	1.23.4.11	search with cache (only 1: intros (x1, x2); only 1: intros; only 1: rewrite <- H; only 1: reflexivity).	14.2135150433	21361
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	1.13	search with cache (only 1: hnf; only 1: trivial).	0.129567861557	92
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	2.14	search with cache (only 1: hnf; only 1: trivial).	0.180259943008	129
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	2.7.11.13.18	search with cache (only 1: nzord_induct p; only 1: Nat.order; only 1: simpl; only 1: auto with arith; only 1: Nat.order).	8.11454391479	12657
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.2.1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.806202888489	161
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	0.0.0.1.0.0.2	search with cache (only 1: apply CRealEq_diff; only 1: intros; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: rewrite <- Qplus_0_r; only 1: unfold Qle; only 1: simpl; only 1: Z.order').	1.02118897438	10
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	17.0.0.5	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: f_equiv).	6.2553858757	4122
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2	search with cache (only 1: auto with *).	0.0260899066925	35
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.1.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0162770748138	6
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.1.8	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.122782945633	53
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	4.12.7	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	0.785967111588	649
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.6.3	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.237935066223	92
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	9.13	search with cache (only 1: intros; only 1: auto with real).	0.450615882874	712
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	4	search with cache (only 1: auto with ordered_type).	0.013720035553	5
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	5	search with cache (only 1: intuition).	0.010941028595	6
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.0.1.9	search with cache (only 1: intro eq; only 1: intros; only 1: unfold create; only 1: auto).	0.126409053802	138
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0158751010895	2
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	43.3	search with cache (only 1: intuition; only 1: now destruct m).	0.991269111633	3011
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0189769268036	6
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	3	search with cache (only 1: now f_equal).	0.0177991390228	4
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	2.8.3.3.9.3.1	search with cache (only 1: intros m; only 1: intros; only 1: compute; only 1: apply find_1; only 1: induction m; only 1: auto; only 1: intuition).	3.40130805969	7080
Coq.FSets.FMapFullAVL.IntMake.find_2	40	8.0	search with cache (only 1: intros m x e; only 1: apply find_2).	0.0172441005707	10
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.082995891571	19
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	7.1	search with cache (only 1: intros Heq; only 1: intuition_in).	0.108247041702	13
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0	search with cache (only 1: tauto).	0.0124011039734	1
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.7.29.5.5	search with cache (only 1: intros m x y e; only 1: intros; only 1: induction H; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	6.37032413483	15475
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	1.1.3	search with cache (only 1: split; only 1: intuition_in; only 1: intuition_in).	0.161339998245	32
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	3.1.2.0	search with cache (only 1: intros; only 1: compute; only 1: intro; only 1: now subst).	0.0212869644165	10
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.13	search with cache (only 1: intros x y H; only 1: intuition_in).	0.118801116943	75
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	0.0.6.30	search with cache (only 1: red; only 1: intros sorted hyp; only 1: intuition_in; only 1: eauto with ordered_type).	9.8830678463	8180
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.12	search with cache (only 1: compute; only 1: intuition_in; only 1: order).	5.41957187653	530
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0112907886505	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.00818991661072	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.00931692123413	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.00735807418823	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	0.7.0	search with cache (only 1: intuition_in; only 1: apply (StrictOrder_Irreflexive x); only 1: order).	0.0402119159698	10
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.0.4	search with cache (only 1: induction m; only 1: intuition_in; only 1: eauto with ordered_type).	0.520390987396	52
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.1	search with cache (only 1: intuition_in; only 1: order).	0.0404341220856	12
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0.0.2	search with cache (only 1: induction m; only 1: intuition_in; only 1: eauto with ordered_type).	0.0534739494324	37
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	0.3	search with cache (only 1: compute; only 1: intuition).	0.00642395019531	5
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	12	search with cache (only 1: now f_equal).	0.0211610794067	60
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	5.0.0.4.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: intros a n H H'; only 1: intuition_in; only 1: simpl; only 1: easy).	0.786952018738	474
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	2.0.2.4.0.1	search with cache (only 1: intuition_in; only 1: functional induction mem x m; only 1: now try Nat.order'; only 1: auto; only 1: auto; only 1: auto).	0.540450811386	472
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	1.0.0.4.3.2.0.0.0.3.8	search with cache (only 1: intuition_in; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: case_eq (find x m); only 1: congruence; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	17.707447052	11021
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	0.1.0.3	search with cache (only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.122983217239	20
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.1.0.13.2.2	search with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	1.91282701492	4180
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0354871749878	7
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	3	search with cache (only 1: now f_equal).	0.014221906662	4
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40
Coq.FSets.FMapAVL.IntMake.elements_3	40
Coq.FSets.FMapAVL.IntMake.elements_3w	40
Coq.FSets.FMapAVL.IntMake.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.2.0.1.3.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: simpl in *; only 1: auto; only 1: auto; only 1: auto using map_option_bst).	4.39522695541	1264
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	42.25	search with cache (only 1: intro z; only 1: now destruct z).	3.19409108162	10764
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1	search with cache (only 1: now Z.nzsimpl).	0.0666530132294	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	2.0	search with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.00840282440186	4
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	4	search with cache (only 1: intuition).	0.0179498195648	5
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.228683948517	78
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	1.1	search with cache (only 1: compute; only 1: intuition).	0.00977516174316	4
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	7.0.2.6.4.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	1.16243076324	2574
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	13	search with cache (only 1: intuition).	0.267679929733	172
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	22	search with cache (only 1: intuition).	0.892920970917	1438
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.0.4.1.0	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.33861780167	298
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	15.15.0.20	search with cache (only 1: red; only 1: unfold Equal; only 1: intros f Hf; only 1: firstorder).	11.8409540653	24450
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3.2.1	search with cache (only 1: intros a b; only 1: apply In_1; only 1: auto).	0.00970792770386	12
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.00775003433228	3
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	1.21.13	search with cache (only 1: intros until 3; only 1: rewrite <- H; only 1: intuition).	5.5323381424	5916
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.7	search with cache (only 1: intro n; only 1: firstorder).	0.0343070030212	68
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0985140800476	13
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.0.0.0	search with cache (only 1: unfold Subset, Empty, impl; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0205690860748	4
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0216670036316	4
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	5.3	search with cache (only 1: intros p q H; only 1: congruence).	0.0267970561981	16
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0	search with cache (only 1: intros a b; only 1: solve_proper).	0.00752687454224	2
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	7.5	search with cache (only 1: intros x y H; only 1: easy).	0.146452188492	359
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	5.0.3.0	search with cache (only 1: unfold eq, Equal; only 1: intro n; only 1: intros; only 1: now rewrite H).	0.158054828644	278
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	1	search with cache (only 1: trivial).	0.0112900733948	18
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.00772786140442	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	2	search with cache (only 1: trivial).	0.00631618499756	3
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	4.0	search with cache (only 1: intro y; only 1: intuition).	0.00588583946228	6
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.965600013733	84
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	2.1.4	search with cache (only 1: intros a n Hn; only 1: symmetry; only 1: easy).	0.0296790599823	41
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	1.3.2	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: trivial).	0.0129549503326	9
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	1.28.29	search with cache (only 1: intro H'; only 1: fix odd_spec 1; only 1: trivial).	13.9743049145	30061
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0364501476288	20
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	47	search with cache (only 1: destr_bool).	2.02256584167	4593
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	4.3.3.1.0	search with cache (only 1: intros [| ] [| ]; only 1: easy'; only 1: easy'; only 1: easy'; only 1: now split).	0.586957931519	409
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00836491584778	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.40.6	search with cache (only 1: intros; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.932145833969	3299
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00662302970886	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00649213790894	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	2.4.1.15.1	search with cache (only 1: unfold compare_fun, equal; only 1: intuition; only 1: induction s as [| l IHl o r IHr]; only 1: easy'; only 1: intuition discriminate).	1.38430905342	2307
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	0.0.7.13	search with cache (only 1: intros m IH; only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	3.2648961544	4803
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.0233027935028	15
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	1.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.10263299942	7
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	4.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: firstorder).	0.0763471126556	26
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0116391181946	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.013748884201	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.299426078796	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0182280540466	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0207831859589	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	0.27.0	search with cache (only 1: intros x i; only 1: fix even_spec 1; only 1: intuition discriminate).	1.63244700432	2367
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0178618431091	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	3.13.19	search with cache (only 1: intro; only 1: fix even_spec 1; only 1: trivial).	2.8760778904	3316
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0169599056244	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	0.2.3.7.0.3.6.0.4.1	search with cache (only 1: intros; only 1: induction i; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: now f_equal).	12.6352498531	10100
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.0196709632874	7
Coq.FSets.FMapPositive.PositiveMap.gempty	40	1.1.0.9.13	search with cache (only 1: intros n; only 1: case n; only 1: easy; only 1: easy; only 1: easy).	0.861087799072	957
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.2.0.2.0	search with cache (only 1: induction i; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.557168960571	158
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	3.0.2.5.0.9.52	search with cache (only 1: intros s1; only 1: case s1; only 1: simpl; only 1: now rewrite ?IHj; only 1: auto; only 1: simpl; only 1: trivial).	3.28319501877	9411
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	4.2.0.2.0.3	search with cache (only 1: induction i; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: auto).	2.16611218452	1709
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	20	search with cache (only 1: congruence).	0.0963129997253	519
Coq.FSets.FMapPositive.PositiveMap.find_1	40	2.3.2	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0142221450806	10
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0108590126038	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.2.1.2.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0623121261597	57
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.036721944809	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	2.0.13.41	search with cache (only 1: intros P_or_Q; only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	6.03507995605	12677
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	9.0	search with cache (only 1: intros; only 1: intuition).	0.107318162918	37
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	1	search with cache (only 1: intuition).	0.0138878822327	15
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.20	search with cache (only 1: firstorder; only 1: apply (empty_1 H)).	0.0591850280762	278
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	0	search with cache (only 1: intuition).	0.0154819488525	1
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	1.2.1.3.1.0	search with cache (only 1: split; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intuition).	0.458990097046	312
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	2.1.5.3	search with cache (only 1: intro n; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.832304000854	1047
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40	2.2.5.2.2.3.2.11.1.2.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: intuition; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: intuition; only 1: intuition).	33.8024320602	77308
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	1.2	search with cache (only 1: intros; only 1: auto with map).	0.018541097641	13
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0245609283447	5
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.2.0.0.1.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: destruct (eq_dec x y); only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.618450164795	235
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	7	search with cache (only 1: split).	0.0114920139313	17
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	4.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.322519779205	18
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	search with cache (only 1: intros; only 1: auto with map).	0.00993800163269	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.3.2.9.0.3	search with cache (only 1: unfold Equal; only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	6.4826669693	4958
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	0.1.2.0.0.1	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.014858007431	10
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40	18.9.11.1.0	search with cache (only 1: intros; only 1: apply fold_rec; only 1: solve_proper; only 1: intro; only 1: firstorder).	38.4418377876	16984
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	1.0.0.0.42	search with cache (only 1: intro m; only 1: rewrite cardinal_1, elements_Empty; only 1: destruct (elements m); only 1: intuition; only 1: discriminate).	8.45801305771	14026
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	0.2.0.1.2	search with cache (only 1: intros k; only 1: rewrite <- cardinal_Empty; only 1: intros; only 1: unfold Empty; only 1: auto).	0.0843839645386	28
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	0.0.1.0.0.0.0.5.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	0.989418029785	1028
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.1.0.0.0.0.1.0.0.29	search with cache (only 1: intros m m' k; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	2.0096578598	4505
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40	1.36	search with cache (only 1: fix le_div2 1; only 1: auto with ordered_type).	1.39420604706	3573
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40	1.2.1.2.1.0.1.0.0	search with cache (only 1: intros (x, e) (y, e'); only 1: unfold gtb, O.ltk; only 1: compute; only 1: destruct (E.compare x y); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	4.89197993279	1679
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40	0.2.0.1.3.0.1	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_Empty; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	3.34507489204	1470
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	13.10	search with cache (only 1: intro H; only 1: easy).	0.047858953476	387
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	8	search with cache (only 1: left).	0.00929999351501	9
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	1.6	search with cache (only 1: fix odd_spec 1; only 1: eauto).	0.249142885208	14
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	3.0.3	search with cache (only 1: fix odd_spec 1; only 1: unfold Empty, PX.MapsTo; only 1: auto).	0.0827820301056	83
Coq.FSets.FMapWeakList.Raw.mem_1	40	1.2.12	search with cache (only 1: fix even_spec 1; only 1: intros m; only 1: auto).	13.2751200199	625
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40	1.35	search with cache (only 1: fix even_spec 1; only 1: trivial).	26.1826968193	82147
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	2.0.1.1.1.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo in *; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	2.11015295982	1797
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	2.1.0	search with cache (only 1: intros m; only 1: intros p l inlist; only 1: auto).	0.00553894042969	6
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00461888313293	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	3.0.0.0	search with cache (only 1: induction m; only 1: constructor; only 1: intros; only 1: auto).	0.0290780067444	32
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40	0.4.17	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: intuition).	12.1490170956	4511
Coq.FSets.FMapWeakList.Raw.equal_2	40	0.0.22	search with cache (only 1: fix even_spec 1; only 1: unfold Equivb, equal; only 1: intuition).	15.7924280167	20990
Coq.FSets.FMapWeakList.Raw.map_1	40	6.13	search with cache (only 1: fix le_div2 1; only 1: eauto).	3.18183898926	1162
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40	4.33	search with cache (only 1: fix even_spec 1; only 1: intuition).	12.6310589314	42562
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40	3.16.3	search with cache (only 1: unfold combine, combine_r, combine_l; only 1: fix odd_spec 1; only 1: auto).	1.67454099655	2905
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.2.0.1.22.0.6	search with cache (only 1: intro H; only 1: intros; only 1: simpl_relation; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: intuition; only 1: intuition).	7.19465494156	17225
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	6.7	search with cache (only 1: intro n; only 1: inversion 1).	0.170248985291	400
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40	5.30.0.4.4.0	search with cache (only 1: intros m; only 1: intros NoDup belong1; only 1: unfold Raw.Empty, Raw.PX.MapsTo; only 1: case m; only 1: fix odd_spec 1; only 1: auto).	13.0707421303	33289
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: trivial).	0.00519394874573	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00623393058777	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	5.58.24	search with cache (only 1: intro n; only 1: induction n; only 1: discriminate || auto).	1.77027702332	16550
Coq.FSets.FMapWeakList.Make.cardinal_1	40	2	search with cache (only 1: auto).	0.00818681716919	20
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40	2.4	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.245791912079	57
Coq.FSets.FMapWeakList.Make.equal_2	40	4.6	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0862338542938	195
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.00877785682678	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	search with cache (only 1: Dec.fsetdec).	0.0195329189301	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	11	search with cache (only 1: firstorder).	0.613433837891	153
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	4.4.0.7.2.0	search with cache (only 1: red; only 1: intuition; only 1: red; only 1: compute; only 1: intros; only 1: Dec.fsetdec).	1.14758491516	946
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	12.1	search with cache (only 1: unfold Empty; only 1: firstorder).	0.785789012909	716
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	2.12528085709	269
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	17	search with cache (only 1: intuition).	17.0029199123	10159
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	14	search with cache (only 1: intuition).	0.0488018989563	90
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	10	search with cache (only 1: intuition).	1.06560397148	451
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	1.1.0.1.1.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	15.5165748596	3459
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.854695796967	97
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.5.1.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	3.29239320755	835
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0.0.0.0	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0508978366852	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0280139446259	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0301959514618	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0179200172424	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	0.1.4.3	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.576689004898	147
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	1.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0168077945709	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	3.4.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0153729915619	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	0.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0168800354004	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	10	search with cache (only 1: auto with set).	0.0250210762024	30
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.00793600082397	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	11	search with cache (only 1: auto with set).	2.71394610405	572
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0.1.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0155680179596	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	5.3	search with cache (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_iff s x y); only 1: intuition).	0.136075019836	35
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0731320381165	20
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	3.10	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: intuition).	6.5083899498	624
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	2.15	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	9.86296200752	3397
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	4.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	0.0561208724976	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	0.0.0.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	1.10505390167	332
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	4.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	0.638376951218	235
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: intuition).	0.0158059597015	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0126729011536	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.00939607620239	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00979590415955	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.00663590431213	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0187079906464	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.00862193107605	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.00755190849304	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00826120376587	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0155560970306	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.101225137711	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.00840401649475	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.00872015953064	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00915503501892	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00799584388733	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0207319259644	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00674486160278	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.00862383842468	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	3.3.1.2.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: destruct (mem x s'); only 1: intuition; only 1: intuition).	23.2856090069	2964
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00611996650696	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.00591897964478	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0754549503326	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0236959457397	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00800895690918	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0646619796753	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00627994537354	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00658178329468	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0106370449066	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0100529193878	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	1.2	search with cache (only 1: intros H a; only 1: intuition).	0.027458190918	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	3	search with cache (only 1: solve_proper).	0.0163540840149	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	2	search with cache (only 1: auto with *).	0.0858550071716	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.00944089889526	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40	2.1.0.4.0.0.0.1.0.1.1	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: do 2 (rewrite filter_iff; auto); only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate).	18.035228014	6512
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	7.0.0.0.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	0.448220014572	212
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40	85.175.0	search with cache (only 1: intuition; only 1: generalize LT; only 1: eauto with *).	34.3170127869	335935
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	8.1.1.26	search with cache (only 1: intros l l'; only 1: intros; only 1: simpl; only 1: eauto).	0.952404975891	4724
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	80.9.0	search with cache (only 1: intros; only 1: simpl; only 1: eauto).	3.24495506287	21192
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40	0.6.0.11.17.2.2.70	search with cache (only 1: intro H2; only 1: intros a Ha; only 1: clear; only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: fix even_spec 1; only 1: auto).	25.7624330521	110125
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	2.0.0.0.0.2	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.0204341411591	28
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.0.0.0.2	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: firstorder).	0.820899963379	100
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	52.3	search with cache (only 1: intros; only 1: firstorder).	0.560525894165	4962
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.00942492485046	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0235991477966	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.00870299339294	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.00880908966064	4
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.00870609283447	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.100968122482	11
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.101870059967	11
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0220620632172	11
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0233728885651	11
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.00759720802307	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	0.2.20.0.35	search with cache (only 1: intros i j Hi E; only 1: firstorder; only 1: intro n; only 1: induction n; only 1: firstorder).	23.3232660294	39782
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.344749927521	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.278907060623	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	3.3.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: unfold compat_bool, compat_P, Proper, respectful, impl; only 1: firstorder).	0.395221948624	507
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	1.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.014358997345	7
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	1	search with cache (only 1: solve_proper).	0.0408389568329	2
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.4.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.182122945786	19
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0	search with cache (only 1: intuition).	0.00993299484253	1
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0258359909058	1
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	11	search with cache (only 1: now f_equal).	0.0134251117706	33
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.028167963028	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0311942100525	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0213489532471	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0152862071991	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0304009914398	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0527031421661	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0468890666962	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0.22	search with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: fsetdec).	0.376054048538	724
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0215330123901	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.32	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.76615285873	1190
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0337681770325	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0238878726959	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	0	search with cache (only 1: fsetdec).	0.0396869182587	1
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.102029085159	1
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.0630269050598	2
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	12	search with cache (only 1: fsetdec).	0.912924051285	170
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.0749680995941	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.162663936615	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0.0.2	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.0682780742645	13
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.227994918823	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	5	search with cache (only 1: fsetdec).	0.0510160923004	6
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	2.25.6	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	25.1662921906	5369
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	19	search with cache (only 1: fsetdec).	8.95810103416	1523
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0697569847107	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.194613218307	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0496499538422	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.099828004837	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.176838874817	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.212308883667	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	4	search with cache (only 1: fsetdec).	0.0313429832458	5
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0182309150696	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.0321929454803	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0323579311371	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0306150913239	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0411920547485	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0376501083374	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	5	search with cache (only 1: fsetdec).	0.13239812851	34
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0584328174591	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.039048910141	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0528099536896	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0532779693604	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0837728977203	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.102642059326	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.116441965103	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	4.1	search with cache (only 1: intuition; only 1: fsetdec).	0.123916864395	11
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0868220329285	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	3	search with cache (only 1: fsetdec).	0.02965092659	4
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0248627662659	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	1	search with cache (only 1: fsetdec).	2.23256993294	507
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0171160697937	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0298869609833	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0357258319855	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.038017988205	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0199449062347	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0762279033661	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0540170669556	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.0915160179138	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0832538604736	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	1.10.2	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	0.940129995346	508
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	12.18	search with cache (only 1: red; only 1: fsetdec).	0.879994153976	990
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.211287975311	4
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.185041904449	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.15531206131	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	1.0.0.0.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.140762090683	58
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	2.2.3.1	search with cache (only 1: intros; only 1: apply fold_rec; only 1: fsetdec; only 1: fsetdec).	0.652762889862	522
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	2.1.2.6.5	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: auto with *; only 1: auto with *).	0.842835903168	1212
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	0.1.1.1.1.0.2.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with *).	0.605117082596	680
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	2.3.1.1.1.0.10.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with set; only 1: auto with set).	6.18852591515	10961
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.4.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0358889102936	25
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	24.1.3	search with cache (only 1: intro n; only 1: rewrite elements_Empty, M.cardinal_1; only 1: apply length_zero_iff_nil).	7.36572408676	8600
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.2.2.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: intuition; only 1: destruct (elements s); only 1: generalize (elements_2 (s:=s)); only 1: intuition; only 1: exists e; only 1: auto).	2.29522705078	1314
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0123870372772	6
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	3.1	search with cache (only 1: intros; only 1: intuition).	0.0345327854156	13
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.3.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	1.32989311218	794
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: auto with set; only 1: expAdd; only 1: fsetdec).	0.288743019104	155
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	10	search with cache (only 1: firstorder).	0.1283390522	51
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.1.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0133259296417	4
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0118651390076	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	2.0	search with cache (only 1: unfold decidable; only 1: intuition).	1.91119003296	4
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.143751144409	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	4.4.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0219919681549	42
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.1211810112	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.239271879196	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0117719173431	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	2	search with cache (only 1: fsetdec).	0.0319328308105	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	1.5.37	search with cache (only 1: intros n m; only 1: intros EQ; only 1: fsetdec).	2.95879387856	4381
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0565209388733	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0748291015625	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0386941432953	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.127253055573	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.159192085266	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	2.0.21	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	1.96575903893	1917
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	1	search with cache (only 1: fsetdec).	0.0476548671722	11
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0464420318604	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0342199802399	1
Coq.FSets.FMapList.Raw.empty_1	40	2.0.3.6	search with cache (only 1: intro n; only 1: intros; only 1: intro H; only 1: inversion_clear H).	0.0333170890808	111
Coq.FSets.FMapList.Raw.empty_sorted	40
Coq.FSets.FMapList.Raw.is_empty_1	40	2.12	search with cache (only 1: fix odd_spec 1; only 1: auto with ordered_type).	1.51120305061	135
Coq.FSets.FMapList.Raw.is_empty_2	40	3.0.7	search with cache (only 1: fix odd_spec 1; only 1: unfold Empty, PX.MapsTo; only 1: auto).	0.556585073471	432
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40	1.19.1	search with cache (only 1: unfold PX.MapsTo; only 1: fix even_spec 1; only 1: easy).	9.65230488777	11555
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.2.0.1.0.0.1.2.0.1.1	search with cache (only 1: induction m; only 1: auto; only 1: destruct a as (x'', e''); only 1: simpl; only 1: intuition; only 1: case (X.compare x x''); only 1: intuition; only 1: inversion_clear Hm; only 1: intuition; only 1: inversion_clear Hm; only 1: intuition).	1.93844890594	2081
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto with ordered_type).	0.00631999969482	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00597786903381	1
Coq.FSets.FMapList.Raw.elements_3	40	1.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: intuition).	0.0106520652771	5
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.3.1.11.0.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: constructor 2; only 1: intuition).	3.15867900848	5671
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.1.1.3.0.0.1.1	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: inversion H; only 1: simpl in *; only 1: destruct a as (x'', e''); only 1: subst; only 1: auto).	0.779766082764	896
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.2.1.0.0.0.0.2	search with cache (only 1: induction m; only 1: intros; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	0.760371923447	695
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40	6.1	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.010360956192	14
Coq.FSets.FMapList.Make.mem_2	40	3.3.0.3	search with cache (only 1: fix even_spec 1; only 1: intros m; only 1: destruct m; only 1: auto).	0.0715308189392	210
Coq.FSets.FMapList.Make.empty_1	40	10.0	search with cache (only 1: intros a b; only 1: abstract now inversion 1).	0.0400409698486	69
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40	6.20.27	search with cache (only 1: intros H; only 1: fix odd_spec 1; only 1: trivial).	24.957007885	78200
Coq.FSets.FMapList.Make.add_1	40	2.3.23	search with cache (only 1: red; only 1: fix even_spec 1; only 1: trivial).	0.730473995209	2910
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	5.0	search with cache (only 1: intros e' eqfind; only 1: auto).	0.00589108467102	7
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00664496421814	2
Coq.FSets.FMapList.Make.elements_3	40	0.20.10.28	search with cache (only 1: intros H; only 1: inversion H; only 1: destruct H; only 1: intuition).	0.861076116562	6342
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	1	search with cache (only 1: auto).	0.00612711906433	2
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40	1.20.0	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto).	0.847698926926	1947
Coq.FSets.FMapList.Make.equal_2	40	3.22.1	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: auto).	17.025947094	8975
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40	0.35.2.15.11	search with cache (only 1: intro m; only 1: intros i j Hi E; only 1: destruct j; only 1: fix le_div2 1; only 1: intuition).	34.9131450653	141991
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	6.14.29	search with cache (only 1: compute; only 1: fix odd_spec 1; only 1: destr_bool).	19.4966440201	23818
Coq.FSets.FMapList.Make_ord.eq_1	40	2.5.0.14	search with cache (only 1: fix gcd_divide 1; only 1: intro y; only 1: intros; only 1: auto with *).	0.775386095047	2304
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40	3.2.38.23.43	search with cache (only 1: intro H; only 1: case H; only 1: fix odd_spec 1; only 1: intros; only 1: intuition).	25.1407790184	93337
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40	0.36.37	search with cache (only 1: intros m; only 1: fix gcd_greatest 1; only 1: intuition).	17.5692439079	79341
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	2.20	search with cache (only 1: split; only 1: auto).	0.0474021434784	540
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	0.2.17	search with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto with sets).	0.680088043213	1009
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.1.14.0	search with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.115957021713	822
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	2.43	search with cache (only 1: constructor; only 1: trivial).	0.255290985107	3033
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.1.5.2.4.21	search with cache (only 1: intro; only 1: intros y H2; only 1: induction H2; only 1: intros; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.87945985794	14643
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.00714993476868	2
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.0.0.0.0.0.0.0.0.4.13	search with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	4.95459008217	4741
Coq.Numbers.DecimalFacts.unorm_0	40	3.0.0.0.0.0.1.0.0.0.2.1	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	5.22782993317	3361
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	1	search with cache (only 1: firstorder).	0.00840091705322	2
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	1	search with cache (only 1: auto).	0.00637698173523	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0127868652344	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0	search with cache (only 1: trivial).	0.00647020339966	1
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.0102288722992	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.8.4.1	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: f_equal; only 1: now induction d).	0.777340888977	466
Coq.Numbers.DecimalN.Unsigned.of_iff	40	3.7.8.0.1.0.3	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	17.2812731266	12158
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	2	search with cache (only 1: tauto).	0.00717496871948	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.145231962204	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	2.28.1	search with cache (only 1: unfold Z.pred, Z.eq; only 1: BinInt.Z.nzsimpl; only 1: now nzsimpl).	1.26900911331	1436
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	5	search with cache (only 1: solve_proper).	0.00671291351318	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.0983459949493	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.0.1.27	search with cache (only 1: intro z; only 1: unfold Z.eq, Z.add; only 1: simpl; only 1: now nzsimpl).	2.820291996	2252
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.2.2.1	search with cache (only 1: intro n; only 1: unfold Z.eq; only 1: intro H2; only 1: simpl; only 1: now nzsimpl).	0.304044008255	30
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.51.13	search with cache (only 1: intros; only 1: rewrite <- (PeanoNat.Nat.succ_pred n)  at 2 by trivial; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	1.47048282623	5252
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.8.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: intro H2; only 1: simpl; only 1: now nzsimpl).	0.972549915314	285
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.12.2	search with cache (only 1: intros Hb; only 1: red; only 1: simpl; only 1: now nzsimpl).	0.915535926819	263
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	2.17.0	search with cache (only 1: unfold Z.sub, Z.eq; only 1: fix odd_spec 1; only 1: now symmetry).	3.66155695915	2143
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.8.2	search with cache (only 1: intro n; only 1: apply BinNat.N.le_ngt; only 1: now nzsimpl).	0.0754890441895	88
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.107753038406	24
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0116357803345	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0114669799805	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.143265008926	37
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	18.7.0	search with cache (only 1: intros; only 1: do 2 rewrite <- add_opp_r; only 1: now apply add_lt_mono_r).	5.39351511002	3974
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	10.18.0	search with cache (only 1: intros; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_le_mono_r).	7.32577896118	4172
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.12.12.4	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	4.57268404961	4134
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.30.3	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	3.9042198658	4336
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40	0.2.19.2.7	search with cache (only 1: intro n; only 1: intro p; only 1: intro m; only 1: rewrite add_comm; only 1: now rewrite (add_le_mono_r _ _ p), sub_simpl_r).	29.9882910252	32365
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.0.1.23.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: now rewrite <- even_spec, even_succ, odd_spec).	17.9450259209	12594
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	3.11.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.424993038177	525
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	6.4.0.0	search with cache (only 1: intros n m p; only 1: do 2 rewrite <- add_opp_r; only 1: rewrite mul_add_distr_r; only 1: now rewrite mul_opp_l, <- mul_opp_r).	0.779587030411	393
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.7.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.332340955734	215
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40	8.2.3.1.1.2	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonpos; only 1: apply eq_le_incl; only 1: now f_equiv).	3.45419788361	5420
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.4.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace P 0 with -1 in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	3.12209105492	3311
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.1.0.0.0.2.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: simpl; only 1: now try order').	0.609136104584	458
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.3	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0116090774536	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.2.14.0.10.2.19.0.25.2	search with cache (only 1: intros a; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: destr_bool; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite <- lt_succ_r; only 1: apply lt_succ_diag_r; only 1: destr_bool; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order').	35.9463279247	92269
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	5.0.0.1.0.0.6	search with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite H  at 1; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now nzsimpl).	2.53394699097	834
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	6.4.3.0	search with cache (only 1: intros x x' EQ; only 1: compute; only 1: intros n; only 1: now f_equiv).	1.27803516388	441
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	1.1.0.0.0.1.1.4.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	1.04166102409	631
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0102601051331	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	3.3.10.4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite testbit_eqb; only 1: rewrite <- testbit_spec' by trivial; only 1: apply xorb_false_r; only 1: trivial).	2.03105902672	3166
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.0.3	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0108880996704	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0106749534607	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	7.21.0.18.0	search with cache (only 1: intros; only 1: rewrite <- (opp_involutive a)  at 1; only 1: bitwise; only 1: rewrite <- (opp_involutive a)  at 2; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	5.61547517776	10326
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	3.0.0.3.3.4.16.1.4	search with cache (only 1: intro n; only 1: intros a; only 1: symmetry; only 1: bitwise; only 1: unfold lnot; only 1: rewrite <- (opp_involutive a)  at 2; only 1: rewrite bits_opp, negb_involutive; only 1: trivial; only 1: trivial).	29.5239088535	40595
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	3.3.4.1.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: apply xorb_comm; only 1: trivial; only 1: trivial).	0.518896102905	560
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	3.3.4.1.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: apply xorb_comm; only 1: trivial; only 1: trivial).	0.776351928711	580
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.49	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	3.57484793663	8682
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0213370323181	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	1.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0700540542603	20
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.1.1.7.0	search with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	0.729564905167	485
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.0.4.10	search with cache (only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r).	0.250283956528	386
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.3.2.16.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: trivial).	5.16189312935	5706
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.2.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0914750099182	23
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.2.2.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.197688102722	148
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.0.0.0.0.2.2.18	search with cache (only 1: intros n; only 1: intros EQ; only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	0.860172986984	2728
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.010283946991	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.0.0.0.1.0.3.10.1	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: apply lcm_divide_iff; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	16.8119108677	17793
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	4.0.0.0.0.5.7	search with cache (only 1: intros m; only 1: intros n; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	6.86856007576	9110
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.5.0.0.0.7.1.3.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: destruct_max n; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros; only 1: now apply divide_abs_l).	7.00213599205	5790
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	0.5.0.0.9.0.1.5.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: destruct_max n; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: intros; only 1: now apply divide_abs_l).	25.8814690113	25279
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	2.8.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.965938091278	558
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	4.1.0.0.4.1.0.1.2.1	search with cache (only 1: intros n m; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: trivial; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: trivial).	13.2396020889	16184
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	0.4.1.0.0.4.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: trivial; only 1: now apply add_le_mono).	20.6264309883	15415
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	0.4.0.0.0.4.1.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now f_equiv; only 1: trivial; only 1: now apply add_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now apply add_le_mono).	11.8281359673	10555
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	1.8.1.1.1.8.1.2.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	20.162706852	17886
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.3.2.2.0.0.3.2.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	39.491284132	40494
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.3.3.4.0.0.3.3.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	26.050342083	26204
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.1.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.023824930191	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.10.2.3	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply le_succ_l; only 1: now rewrite succ_pred).	0.638969898224	626
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.37.3	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.60683608055	3740
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	0.2.0.1.11.0.1.2	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: rewrite lt_eq_cases; only 1: rewrite pred_succ; only 1: rewrite lt_eq_cases; only 1: intuition).	16.2485220432	16924
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	1.1.1.8	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: now rewrite succ_pred).	0.2664539814	325
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.8.23.0.8	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- le_succ_l; only 1: rewrite <- le_succ_l; only 1: rewrite <- lt_le_pred; only 1: order).	18.4957239628	34934
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	6.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: now apply le_le_succ_r).	0.0174260139465	21
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.1.0.6.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	1.21285009384	1114
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	3.0.2.0.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply le_succ_l).	0.0394489765167	11
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0213198661804	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.12.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	3.16254997253	2177
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	5.1.3.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.525337934494	491
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	6.0.7	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.210395097733	269
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.00940012931824	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	3.3.3.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: trivial; only 1: rewrite opp_nonneg_nonpos; only 1: trivial).	0.252973079681	348
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	7.7.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	1.31029701233	1018
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.8.2	search with cache (only 1: intros EQ; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.257099151611	477
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0170941352844	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	2.1.2.1	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0215239524841	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.1.1.0.0.1.0.3	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.376708984375	464
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	2.2.4.1	search with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: trivial; only 1: trivial).	0.346113920212	313
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	3.0.1.6.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	1.53840899467	1544
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	5.66947388649	7225
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.4.3.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: right; only 1: trivial; only 1: trivial).	0.205961942673	239
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	6.19527697563	7419
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.4.2.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: right; only 1: trivial; only 1: trivial).	0.117364168167	98
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.0.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0359690189362	18
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.069032907486	58
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.7.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	0.535881996155	1307
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.00951600074768	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.00851988792419	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40	2.0.0.0.0.1.1.0.6.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	27.1102879047	24986
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	1.0.0.3.0.1.13.1.3.3	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: nzsimpl; only 1: now try split).	7.72341895103	8358
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	4.1	search with cache (only 1: intros; only 1: auto using div_pos).	0.207291126251	47
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.6.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.0817148685455	58
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	2.2.7.0.0.1.1.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: auto using Private_NZDiv.div_pos).	10.9317297935	6814
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	2.8.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_pos_bound; only 1: trivial).	1.67094302177	1091
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0175449848175	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	3.3.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.4368891716	387
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.4.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: trivial; only 1: trivial).	0.305963039398	155
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.048143863678	25
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.197205066681	100
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	1.1.0.2.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.297935009003	238
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.1.0.1.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: destruct (lt_ge_cases 0 b) as [Hb'| Hb']; only 1: trivial; only 1: intuition).	0.0199570655823	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.3.1.0.5	search with cache (only 1: intros Hb H; only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	24.631868124	4562
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.365979909897	54
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.1.3.0.8.1.1.0.2.0	search with cache (only 1: intros; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite add_comm, (mul_comm n), (mul_comm _ b); only 1: rewrite mul_add_distr_l, mul_assoc; only 1: rewrite mod_add by trivial; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: symmetry; only 1: now apply mul_mod_idemp_l; only 1: tauto; only 1: tauto).	27.6609060764	17700
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.3.2.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: tauto).	0.2815990448	84
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.13.4.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: intuition; only 1: tauto; only 1: tauto).	15.3425831795	10470
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.0.2.3.2.0.2.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	35.2846210003	4620
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	3.0.3.1.0.3.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	38.3870179653	12956
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	0.3.2.0.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.357558012009	168
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.2.5	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0936169624329	77
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.14.1.1.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	7.4216709137	3398
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	8.4.1.6.4.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	30.5170609951	24154
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.00932884216309	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_assoc).	0.0909359455109	27
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.0.8.2.13	search with cache (only 1: intros n m H; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	23.4583520889	11940
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	3.0.0.8.1	search with cache (only 1: intro m; only 1: intro; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.651721000671	831
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0132930278778	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	7.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	0.044548034668	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	4.0.4.16.0	search with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: rewrite <- (succ_pred m)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_cancel_r).	25.5863199234	14293
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	4.0.1	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0136969089508	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0150020122528	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.2.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0355939865112	13
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	5.4.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now apply add_move_l).	0.305267095566	150
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	3.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0222940444946	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.7.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.0472710132599	14
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.13.7.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.436465978622	807
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.0349318981171	38
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.4.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition).	0.0394928455353	34
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.2.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0206379890442	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0288999080658	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.00839996337891	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	1.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: order).	0.00840497016907	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	3.1.6.1.28	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	14.6252701283	10678
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.4.1	search with cache (only 1: intros; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using div_pos).	0.206387996674	41
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.8.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.146095991135	151
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0162968635559	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.6.1.2.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	1.2891061306	654
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	1.0.3.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	0.207986831665	133
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0432529449463	32
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.045501947403	31
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.2.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.188059091568	123
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.0130081176758	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	1.0.0.0.0.0.0.0.0.4.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	9.87718987465	4754
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	2.15429520607	718
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.3.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: tauto).	1.15334200859	395
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.4.8.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: tauto; only 1: tauto).	4.25153183937	2375
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40	0.11.2.0.3.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite (div_mod a n)  at 1 by order; only 1: rewrite <- add_assoc, add_comm, mul_comm; only 1: rewrite Private_NZDiv.mod_add; only 1: intuition order; only 1: tauto).	8.01670908928	5830
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.2.3.2.2.3.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	17.0761008263	5056
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.0.3.1.2.0.1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order).	4.6512401104	2409
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	7.0	search with cache (only 1: intros a n Hn; only 1: Z.order_pos).	0.0169899463654	9
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	1.1	search with cache (only 1: intros; only 1: firstorder).	0.0261240005493	4
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	7.14	search with cache (only 1: fix even_spec 1; only 1: Bool.destr_bool).	1.60697007179	1999
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: intuition; only 1: easy; only 1: easy).	0.245255947113	111
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	12.38.6	search with cache (only 1: intros; only 1: destruct x; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	5.39811706543	6663
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	2.45.9	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	1.57251405716	4552
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	5.0	search with cache (only 1: intro n; only 1: auto).	0.0709309577942	29
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	2.1.4	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.350688934326	60
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.7.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: auto).	2.02802205086	34
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	3.0.4	search with cache (only 1: destruct x; only 1: simpl in *; only 1: tauto).	1.0122320652	17
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0107181072235	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	3.8.5.0	search with cache (only 1: destruct x; only 1: intros; only 1: injection H; only 1: auto).	0.854669094086	1555
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	1.0.6.5.2	search with cache (only 1: inversion 1; only 1: simpl; only 1: destruct x; only 1: rewrite H; only 1: auto).	0.352971792221	432
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	1.0	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.0102899074554	3
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0	search with cache (only 1: now f_equal).	0.00887489318848	1
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0.3	search with cache (only 1: simpl in *; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.00966000556946	5
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	4.3.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0184829235077	14
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0129618644714	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40	2.12.0.1.2.1	search with cache (only 1: unfold EqShiftL; only 1: intro n; only 1: destruct x; only 1: simpl; only 1: fix even_spec 1; only 1: auto).	30.5934679508	22967
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40	2.28	search with cache (only 1: fix even_spec 1; only 1: auto).	3.22694802284	2368
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.005695104599	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.00636601448059	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0.0	search with cache (only 1: red; only 1: auto).	0.0103640556335	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: reflexivity).	0.00732207298279	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.00768685340881	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	1.12	search with cache (only 1: simpl; only 1: easy).	0.248103141785	103
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	2.0	search with cache (only 1: intros; only 1: auto with arith).	0.0089259147644	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	4.0.0	search with cache (only 1: unfold add31; only 1: intros; only 1: apply phi_phi_inv).	0.0298562049866	15
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	11.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.566730976105	102
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.00842213630676	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	2.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.274819135666	79
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.2	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.00832295417786	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	1.0.2.0.0.1.4.8	search with cache (only 1: intros; only 1: pattern x at 1; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	1.91120910645	1376
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.2.8.1	search with cache (only 1: intros; only 1: pose proof (Z.abs_nonneg x) as Hx; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.269784927368	249
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0138819217682	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.2.0.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0169250965118	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.6.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: auto with zarith).	0.0453209877014	21
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0	search with cache (only 1: unfold to_Z; only 1: auto).	0.00792098045349	2
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	13.7.1.0	search with cache (only 1: intros; only 1: unfold eq0, to_Z in *; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	5.41313099861	4175
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	2.0	search with cache (only 1: intros; only 1: auto with zarith).	0.0106899738312	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	11	search with cache (only 1: auto).	0.0115048885345	57
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	5.43769311905	1623
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0122649669647	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	3	search with cache (only 1: now Z.nzsimpl).	0.0298750400543	4
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	2	search with cache (only 1: now Z.nzsimpl).	0.0172641277313	3
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	10	search with cache (only 1: now apply Z.divide_0_l).	0.159564971924	21
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	1	search with cache (only 1: trivial).	0.00788807868958	2
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	6	search with cache (only 1: congruence).	0.00810408592224	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.126163959503	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.016676902771	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.3.1.0.28	search with cache (only 1: compute; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	1.58996510506	4484
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	12.2.32	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: now intros ->).	2.26648497581	5050
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.00820803642273	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	15.8.2	search with cache (only 1: unfold eqm; only 1: repeat rewrite Zmod_mod; only 1: Z.order).	26.6980130672	21324
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.024356842041	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	4.1.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.0515820980072	9
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	2	search with cache (only 1: tauto).	0.00760793685913	3
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.5	search with cache (only 1: fix odd_spec 1; only 1: trivial).	0.0262389183044	12
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	1.5	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0260591506958	8
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.1	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0294060707092	3
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: rewrite andb_false_r; only 1: auto).	0.0125920772552	7
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	13.1.4.2.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lor_spec, orb_comm; only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	27.0846099854	27997
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	1.1	search with cache (only 1: intros; only 1: firstorder).	0.0247051715851	4
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0108909606934	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	4.0.1.0	search with cache (only 1: intros; only 1: apply Pos.eqb_eq; only 1: unfold eqb, eq; only 1: auto).	0.119910955429	39
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	8	search with cache (only 1: solve_proper).	0.00812602043152	9
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	4	search with cache (only 1: auto with *).	0.0141289234161	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	1.0.0	search with cache (only 1: firstorder; only 1: zify; only 1: apply NZ_to_Z_mod).	0.16259098053	39
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.00564885139465	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	2	search with cache (only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.00493884086609	3
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0	search with cache (only 1: parity_binop).	0.0164551734924	1
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	0	search with cache (only 1: parity_binop).	0.0172860622406	1
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	0.6.3.1.15.4.1.0.28	search with cache (only 1: cases ltac:(n); only 1: rewrite nlt_ge; only 1: order; only 1: intro n; only 1: rewrite nlt_ge; only 1: apply le_le_succ_r; only 1: destruct (lt_ge_cases n 0); only 1: apply le_0_l; only 1: order).	16.5359401703	47534
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	4.9.9.0	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.539882898331	2559
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	6.9.1	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.241993188858	489
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.0.1.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intro n; only 1: now rewrite pred_succ).	0.0228490829468	9
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.26.0.1.2.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: apply le_succ_l; only 1: now rewrite pred_succ).	17.2059090137	32577
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	3.6.0.0.1.0.4.0	search with cache (only 1: cases ltac:(n); only 1: intros n H; only 1: rewrite pred_0; only 1: order; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_le_incl; only 1: now apply le_succ_l).	1.85909986496	2947
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	3.0.1.3.0.0.4.1.0	search with cache (only 1: cases ltac:(n); only 1: intro n; only 1: rewrite pred_0; only 1: induct n; only 1: order'; only 1: now nzsimpl; only 1: intros n m H; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	2.41631388664	5546
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	3.0.0.1.0.0.11.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: cases n; only 1: rewrite pred_0; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	3.92282104492	5459
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	1.0.1.0.1.1.0.3.0.2.1.2.0.0.15	search with cache (only 1: induct ltac:(n); only 1: intro n; only 1: split; only 1: rewrite pred_0; only 1: apply le_le_succ_r; only 1: rewrite pred_0; only 1: intro H; only 1: apply le_succ_r in H; only 1: destruct H as [H| H]; only 1: order; only 1: symmetry in H; only 1: false_hyp H neq_succ_0; only 1: intros n m H; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	31.6806111336	39543
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	1.0.11.6	search with cache (only 1: intros a b Ha Hb; only 1: apply div_unique_exact; only 1: auto'; only 1: auto').	3.71369194984	4327
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	6.12.0.4.0.1.8.23	search with cache (only 1: intros Base Step; only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro n; only 1: tauto; only 1: nzsimpl; only 1: order).	19.8239428997	91743
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.12.8	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.4552090168	1084
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.3.4.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: order; only 1: now nzsimpl).	0.143898010254	163
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.2.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.00902986526489	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.00687098503113	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.00670003890991	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	2.2.12.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: now nzsimpl).	1.37394404411	5544
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.00584602355957	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00544095039368	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	4.3.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: intuition; only 1: apply mul_comm).	0.570948123932	688
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.6.1	search with cache (only 1: intros; only 1: apply div_str_pos; only 1: auto).	0.15705704689	43
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	1.0.7.4.0	search with cache (only 1: intros; only 1: rewrite div_exact; only 1: now nzsimpl; only 1: auto'; only 1: auto').	5.43527603149	3859
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	1.2.1.14.0	search with cache (only 1: intros; only 1: intuition; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	3.88761115074	4048
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.1.1.3.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.127083063126	127
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.03391289711	25
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	2.1.0.15.2.2.17	search with cache (only 1: intros m H1; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_small; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	11.6944921017	37300
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.5.0.2.1.0.14.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite (div_mod a n)  at 1 2 by order; only 1: now rewrite mul_comm; only 1: auto; only 1: auto).	3.24194502831	3545
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.0.0.3.0.27	search with cache (only 1: intro H; only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	12.2131137848	14789
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	4.4.7.2.0.27	search with cache (only 1: intro H; only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	38.2472300529	52435
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.3.3.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: auto; only 1: auto; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.184173107147	179
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	20.2.9.5.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro H; only 1: now nzsimpl).	2.14261984825	11134
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40	0.8.13.1.4.5.0.2	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: trivial; only 1: intros; only 1: now apply H3).	10.8860740662	27654
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.0.39.0	search with cache (only 1: unfold even; only 1: assert (H : 1 + 1 = 2) by now PeanoNat.Nat.nzsimpl'; only 1: rewrite recursion_0; only 1: tauto).	0.282334089279	1763
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	2.4.0.2.8.1	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: solve_proper; only 1: apply le_0_l; only 1: intuition order).	4.71401190758	8207
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	2.3.2.4.2	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: intuition order).	1.03608202934	1696
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	2.1.4.10.1.11	search with cache (only 1: intro H; only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: intuition order; only 1: apply le_0_l).	17.0401308537	27038
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.5.1	search with cache (only 1: intros x x' EQ; only 1: subst; only 1: intuition).	0.00749492645264	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.1.0.5.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: intuition; only 1: now try order'; only 1: destr_bool; only 1: now try order'; only 1: simpl; only 1: intuition).	1.12206196785	962
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.7	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0121040344238	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.1.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.24173784256	114
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.1	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.00482583045959	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	1.0.24	search with cache (only 1: intro m; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	1.65019702911	2807
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.13.0.0.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.578958034515	824
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0966188907623	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40	19.3.4.0.3	search with cache (only 1: intros a Ha; only 1: bitwise; only 1: rewrite testbit_eqb; only 1: rewrite <- testbit_spec'; only 1: intuition).	28.7686350346	17167
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	25.1.8	search with cache (only 1: intros m H2 H3; only 1: bitwise; only 1: intuition).	31.237390995	29243
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.4	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0561909675598	25
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.00953006744385	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	26.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.992744207382	2534
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	0.23.1.5	search with cache (only 1: intros; only 1: apply succ_inj; only 1: unfold ones; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	2.87158799171	5321
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	2.2.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0101461410522	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.1.0.0.0.1.0.0.2.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	1.082873106	1334
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.9.1.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.337906837463	699
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.0.0.3.8.3.2.7	search with cache (only 1: intro p; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.14626693726	16323
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	5.1.21.0.1	search with cache (only 1: cases ltac:(n); only 1: intros H; only 1: intuition order; only 1: intros m H2 H3; only 1: now nzsimpl).	17.1070468426	24953
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.5.0.0.1.0.7.12	search with cache (only 1: intro n; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.591837882996	2744
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	5.0.4.0.2.4	search with cache (only 1: intro n; only 1: induct ltac:(m); only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now apply le_le_succ_r).	0.80145907402	932
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	5.3.4.9.4.0	search with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: trivial; only 1: apply le_0_l).	9.31724882126	9499
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	2.1.0.18	search with cache (only 1: intros n IH; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.461539983749	468
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.1.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.017982006073	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	1.0.11.3	search with cache (only 1: intro n; only 1: nzsimpl; only 1: solve_proper; only 1: apply le_0_l).	0.912159204483	574
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	1.1.1.2.1.0.0.0.0.0.0.0.0.6.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	8.71781587601	4397
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.0.2.7.3.2	search with cache (only 1: intros a b Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: trivial; only 1: trivial).	2.02706694603	1741
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	9.2.9.9	search with cache (only 1: intros a b c Hb; only 1: apply pow_le_mono_r; only 1: generalize (le_0_l b); only 1: auto').	4.25007486343	8383
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	1.1.1.1.0.0.2	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: order).	0.181455850601	209
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.5.5.0.4.6.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	1.6965239048	4570
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.1.0.0.2.4.3	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.322770118713	568
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	0.3.1.10.9.1.9	search with cache (only 1: intros a b; only 1: split; only 1: apply Private_NZPow.pow_le_mono_l; only 1: destruct (le_gt_cases a b) as [LE'| GT]; only 1: auto'; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	12.4530050755	16541
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	2.0.5.4.1.0.7	search with cache (only 1: intros; only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	5.35452008247	8085
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.2.0.8.0.5.3.2.0.7	search with cache (only 1: intros; only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: order'; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	13.5561621189	21603
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	2.0.0.0.2.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	4.50653505325	2478
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	1.0.0.1.1.0.0.0.2.5.1	search with cache (only 1: intro n; only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l).	21.2755081654	4722
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	2.0.2.1.2.0.2.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	37.7571480274	12666
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.6.1.1.0.6.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r).	32.662304163	25375
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0	search with cache (only 1: simpl_relation).	0.00820398330688	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.1.3.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0122950077057	9
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	6.4.4.4	search with cache (only 1: intros n; only 1: intro m; only 1: unfold lcm; only 1: now apply divide_mul_l).	0.202847003937	615
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.8	search with cache (only 1: intro H2; only 1: unfold lcm; only 1: now nzsimpl).	0.0212059020996	59
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.3.2.18.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: intuition; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.602164983749	2374
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	1.0.0.4.6.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	0.304245948792	664
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.4.4.6.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial).	0.394289016724	973
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	3.0.0.0.15.4.5.16	search with cache (only 1: intro p; only 1: intro n; only 1: induct ltac:(n); only 1: now nzsimpl; only 1: intros n IH; only 1: rewrite sub_succ_r; only 1: rewrite IH; only 1: now nzsimpl').	31.894067049	77533
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	0.3.1.3.5	search with cache (only 1: intros n m IH H1; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	3.00240206718	2472
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.9.0.2.9.0.1	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: order; only 1: now nzsimpl).	0.564249992371	1757
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	0.0.0.0.0.6.8.3	search with cache (only 1: rewrite one_succ; only 1: apply sqrt_unique' with 0; only 1: rewrite <- add_0_r  at 1; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_2; only 1: now nzsimpl).	8.31959891319	5732
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.0.0.0.6	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: tauto; only 1: order; only 1: reflexivity).	0.0566871166229	81
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.4.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.875768899918	1191
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.2.0.0.1.44	search with cache (only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	5.01221394539	10116
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	2.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0145840644836	10
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.0.1.2.7.1.42.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	2.97124791145	6688
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	6.1.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.209596157074	465
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	2.0.0.2.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0188810825348	50
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	2.2.1.4.0	search with cache (only 1: intros a b Ha Hb; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: trivial; only 1: trivial).	0.414100170135	950
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0397667884827	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0368440151215	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.01629114151	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0535378456116	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0827288627625	19
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.0.0.0.0.1.5.4.0	search with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct p; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	21.0447950363	7623
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.1.2.7.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_shuffle0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.1884329319	1579
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.3.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0569961071014	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	25.0.19	search with cache (only 1: intro z; only 1: apply lt_eq_cases; only 1: intuition).	0.602479934692	3023
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	11.4.2.3	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	1.94807195663	2019
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	3.2.0.1	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0096960067749	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.0.6	search with cache (only 1: intros; only 1: rewrite lt_eq_cases; only 1: tauto).	0.0160088539124	41
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.115497112274	45
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.121530056	46
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	6.1.0	search with cache (only 1: intros x y z; only 1: intro EQ; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0366449356079	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.3.0	search with cache (only 1: intros x y z; only 1: rewrite 2!lt_eq_cases; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0465869903564	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	6.1	search with cache (only 1: intro n; only 1: order).	0.107377052307	74
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	search with cache (only 1: order).	0.0294778347015	34
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	0.1.16.2.2	search with cache (only 1: intros; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).	11.740475893	5822
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.15.3	search with cache (only 1: intros H H1 H2; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.354099988937	1741
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	1.10.8.0	search with cache (only 1: intro n; only 1: intros x y; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	8.9917910099	5808
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	2.5.0.3	search with cache (only 1: intro p; only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl).	0.327301979065	512
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	10.1.10.1.2.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: split; only 1: rewrite lt_succ_r; only 1: apply le_succ_l; only 1: rewrite lt_succ_r; only 1: apply le_succ_l).	13.2528288364	19085
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	12.2.0.1.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	17.2825288773	13257
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.3.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0108411312103	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.0.1.8.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.569219827652	729
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.1.0.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.0255489349365	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.4.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.563935995102	228
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	6.0.1.8.1	search with cache (only 1: intros n m; only 1: compute; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	0.72123003006	611
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.1.0.0.1.0.10	search with cache (only 1: split; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.431100130081	469
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	6.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: intuition order).	0.0210161209106	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.00844502449036	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.19.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	3.64576506615	1698
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.083911895752	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0079779624939	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.00852394104004	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.1.4	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.209771871567	80
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.0.1.12.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_succ_r; only 1: split; only 1: order; only 1: order).	2.79406118393	3174
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	25.10	search with cache (only 1: intros RS' n; only 1: order).	0.299998044968	1373
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	0.0.13	search with cache (only 1: intros RS' n; only 1: apply right_induction; only 1: tauto).	0.176394939423	304
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	15.14.21	search with cache (only 1: intros Az LS n H1 H2; only 1: compute; only 1: intuition order).	20.2267451286	11147
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	1.4.10.4	search with cache (only 1: induction n; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.705588102341	1525
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	37.0	search with cache (only 1: intros; only 1: firstorder).	2.30897808075	5440
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	8	search with cache (only 1: easy).	0.00595307350159	9
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	7.0	search with cache (only 1: intro n; only 1: now rewrite <- ?PeanoNat.Nat.succ_le_mono).	0.00715804100037	9
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	4.116	search with cache (only 1: fix odd_spec 1; only 1: PeanoNat.Nat.auto').	6.59673380852	30412
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.21.0.1.8.9.3	search with cache (only 1: intro m; only 1: revert m; only 1: PeanoNat.Nat.induct ltac:(m); only 1: apply PeanoNat.Nat.lt_succ_diag_r; only 1: intros; only 1: rewrite H; only 1: apply lt_succ_diag_r).	18.1380259991	40027
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	20.43.2	search with cache (only 1: intros m; only 1: fix gcd_greatest 1; only 1: trivial).	2.09391283989	11347
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	5.36	search with cache (only 1: simpl_relation; only 1: now nzsimpl').	0.30017209053	1503
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.1.54.0	search with cache (only 1: intro n; only 1: compute; only 1: exists n; only 1: now nzsimpl').	2.82595300674	8697
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	0.0.31.1.0	search with cache (only 1: intros n; only 1: intro H; only 1: destruct H; only 1: rewrite mul_0_l in H || rewrite mul_0_r in H; only 1: tauto).	2.18732500076	4496
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.31.0	search with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	9.40814685822	11403
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.5.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.6434071064	731
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.1.6.1	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	0.0355870723724	57
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	2.8.1	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.056324005127	111
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.00691294670105	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0280010700226	12
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.00665402412415	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.114772081375	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.866179943085	629
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0657880306244	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0742998123169	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.0.2.3.20.13	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	29.1363761425	18989
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0188341140747	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0598790645599	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	8.1.0.0.2.0	search with cache (only 1: nzinduct n; only 1: nzsimpl; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: tauto).	1.03261303902	956
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.0.0.0.2.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0405750274658	8
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	2.1.0.1.1.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.4830930233	112
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0183961391449	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	2.0.0.1.0.13.2.2	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order'; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).	2.07607603073	2588
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.0.2.1.0.1.1.2	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	0.749247074127	558
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.0.0.26	search with cache (only 1: intros; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.604562997818	735
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.5.0.10.1.0.1.29	search with cache (only 1: intro LT; only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: generalize LT; only 1: intros a Ha; only 1: order_pos; only 1: order).	2.78409099579	5968
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	1.3.10.2	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: rewrite two_succ; only 1: apply log2_up_eqn0; only 1: now nzsimpl).	0.394752979279	544
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	0.9.12.0.0.4.4.0	search with cache (only 1: intros a Ha; only 1: pose proof (log2_up_nonneg a) as Hc; only 1: apply (pow_lt_mono_r_iff 2); only 1: order'; only 1: order; only 1: nzsimpl; only 1: destruct (log2_up_spec a Ha) as (LTc, LEc); only 1: order).	34.037624836	41283
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0.1	search with cache (only 1: intros; only 1: compute; only 1: intuition).	0.0127010345459	4
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	14	search with cache (only 1: intuition).	0.0627679824829	254
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.1.0.14.1	search with cache (only 1: intros; only 1: transitivity x; only 1: symmetry; only 1: auto; only 1: auto).	3.35844492912	13506
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.2.1.12.2.19.3.2.3.0	search with cache (only 1: intros; only 1: unfold not; only 1: split; only 1: intros; only 1: destruct H; only 1: now f_equiv; only 1: revert m; only 1: intros n1 n2 H; only 1: apply pred_wd in H; only 1: now do 2 rewrite pred_succ in H).	10.9770560265	55684
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	4.0.0.0.0.11.1.0.0.0.0	search with cache (only 1: intros n m p H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now nzsimpl).	19.7639958858	10461
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.5.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	6.37006592751	2480
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	1.0.0.5.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.176309108734	82
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	5.1.0.1.2.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: order).	1.37442684174	771
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	2.6.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.104329109192	100
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.6.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0635559558868	58
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	2.2.5.3.12.1	search with cache (only 1: intros n m p; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_pos_l; only 1: trivial).	6.48923921585	4506
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.9.2.2	search with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.776430845261	1250
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.9.2	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.346575975418	478
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	0.3	search with cache (only 1: intros p n m Hp; only 1: now apply mul_lt_mono_nonneg).	0.0103569030762	12
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	2.2.2.2.5.1	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.72083902359	767
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	25	search with cache (only 1: intuition).	0.0390319824219	370
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	14.10	search with cache (only 1: intros; only 1: intuition).	0.052050113678	417
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.00920796394348	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.00621485710144	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.2.1.3.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.66116285324	2079
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.2.2	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.0286631584167	47
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0	search with cache (only 1: eauto with *).	0.0190050601959	1
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	2.9.12	search with cache (only 1: intros n m; only 1: intros q; only 1: now transitivity m).	1.55519795418	2736
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	12	search with cache (only 1: Nat.order').	0.214940071106	280
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	9.4	search with cache (only 1: intros a n Hn; only 1: Z.order).	0.428795099258	262
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	2.2	search with cache (only 1: intros n m; only 1: Z.order).	0.37006688118	137
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	4	search with cache (only 1: easy).	0.0181181430817	5
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	0.6	search with cache (only 1: induction 1; only 1: now Z.nzsimpl).	0.0574769973755	45
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.1.1.0.1	search with cache (only 1: induction x; only 1: easy'; only 1: simpl; only 1: trivial; only 1: now Z.nzsimpl).	0.0229480266571	10
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	4	search with cache (only 1: decide equality).	0.0257661342621	13
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	3.0.1.2	search with cache (only 1: intro H; only 1: compute; only 1: intros; only 1: tauto).	0.0183620452881	27
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.0.0.2.0.2.0.4.2	search with cache (only 1: intros; only 1: split; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: intuition; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition; only 1: unfold eq, lt, le in *; only 1: intuition).	15.9384670258	11846
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.9.20	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct Hb).	0.162182092667	629
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	3.2	search with cache (only 1: intros a n Hn; only 1: firstorder).	0.0282700061798	41
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	18.13.12.3.2.1.8	search with cache (only 1: split; only 1: simpl_relation; only 1: red; only 1: simpl_relation; only 1: compute; only 1: intro x; only 1: eauto).	23.5176720619	132383
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	5.2.1.5.2.1.27.4	search with cache (only 1: apply eq_true_iff_eq; only 1: firstorder; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq).	31.4720909595	73675
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	1.1.21	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type).	0.288820981979	1569
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.00746202468872	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.0106809139252	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00769996643066	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00830316543579	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00607800483704	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.00727796554565	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00641393661499	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00631308555603	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00662708282471	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00665497779846	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0068838596344	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00619292259216	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00615906715393	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00595211982727	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	3.2.0.0.1.0.0.1.0.2.1	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.739399909973	2886
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.1.0.2.2.18.0	search with cache (only 1: intros; only 1: induction l; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: left; only 1: order; only 1: right; only 1: auto).	0.765804052353	2358
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	1.0.9.3.4.0.1.8	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: easy; only 1: firstorder; only 1: left; only 1: subst; only 1: firstorder).	1.91387701035	5736
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	4.1.1.4.7	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: auto with ordered_type; only 1: simpl in *; only 1: auto).	0.415886878967	1077
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	16.1.13.5	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: auto with ordered_type; only 1: firstorder).	0.776098012924	3005
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	3.19	search with cache (only 1: induction 1; only 1: auto).	0.226064920425	369
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	10	search with cache (only 1: simpl_relation).	0.0248401165009	49
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00517010688782	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00907206535339	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.7.7	search with cache (only 1: intros; only 1: hnf; only 1: intuition).	0.161595106125	396
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.00587201118469	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.6	search with cache (only 1: induction 1; only 1: intuition).	0.0193049907684	20
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	3.6.21.1.4	search with cache (only 1: intro y; only 1: unfold eqk, eqke; only 1: intro Hxz; only 1: intros l l'; only 1: order).	6.38863396645	27085
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	2	search with cache (only 1: eauto with ordered_type).	0.0110011100769	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	2	search with cache (only 1: eauto with ordered_type).	0.0122740268707	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	0.0.5.10.21.4.1	search with cache (only 1: unfold eqke; only 1: unfold eqk, ltk; only 1: intros a H; only 1: intros; only 1: intros H'; only 1: intuition; only 1: order).	12.3097848892	26560
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	1.1.2.53	search with cache (only 1: eexists; only 1: simpl_relation; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.860286951065	1878
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0198571681976	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.3.4.1.5	search with cache (only 1: split; only 1: unfold eqke, ltk; only 1: intros a b; only 1: order; only 1: eauto with ordered_type).	0.124728918076	361
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	3.3.6.0.10.9	search with cache (only 1: intro m; only 1: revert m; only 1: unfold eqk, ltk; only 1: constructor; only 1: order; only 1: order).	28.1541190147	110962
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40	4.0.0.4.0.0.13.0.1.0.1	search with cache (only 1: intros x; only 1: unfold eqke; only 1: unfold eqke, ltk; only 1: intuition; only 1: split; only 1: intuition; only 1: simpl in *; only 1: order; only 1: intuition; only 1: simpl in *; only 1: order).	20.8279979229	18935
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.00613021850586	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0129680633545	4
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.012531042099	4
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	1.21.5	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with ordered_type).	1.73072981834	4317
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	5.1.3.1.7	search with cache (only 1: intros A B f l; only 1: unfold eqke, ltk; only 1: induction 1; only 1: firstorder; only 1: eauto with ordered_type).	0.259297847748	742
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.0.1.13.7	search with cache (only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	4.44267988205	3635
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	1.4.5.1	search with cache (only 1: inversion 1; only 1: destruct y; only 1: intuition; only 1: eauto with ordered_type).	0.191125154495	276
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.1.3.0.1	search with cache (only 1: inversion_clear 1; only 1: unfold eqke; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.0339639186859	24
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.0.1.0.1.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0162250995636	10
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.00801014900208	2
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	3.3.3.1.9.28	search with cache (only 1: split; only 1: red; only 1: intros; only 1: iorder; only 1: intros x y z; only 1: iorder).	0.289487838745	1734
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	11.1	search with cache (only 1: intros x y z; only 1: iorder).	0.0666329860687	202
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	7.31	search with cache (only 1: intro z; only 1: iorder).	4.99720311165	9976
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0068039894104	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.2.2.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: intuition; only 1: intuition).	3.65461802483	949
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.00874018669128	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0100378990173	3
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.010262966156	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	5.1	search with cache (only 1: intro H; only 1: order).	0.0149869918823	14
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0122771263123	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0106310844421	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.71109199524	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.00562405586243	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.70513796806	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.00601291656494	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.00587487220764	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.00513315200806	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.00598096847534	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.0172870159149	18
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.0117659568787	12
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	3.1	search with cache (only 1: intro H; only 1: order).	0.00930500030518	13
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	2	search with cache (only 1: order).	0.0586440563202	19
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.00589299201965	5
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	2	search with cache (only 1: order).	0.0616250038147	19
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	2	search with cache (only 1: order).	0.061518907547	19
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	2	search with cache (only 1: order).	0.0213229656219	19
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	12.12.12.0	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	17.9729559422	27343
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00617218017578	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	8.0	search with cache (only 1: apply compare_eq_iff; only 1: intuition).	0.00683689117432	10
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00741600990295	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2.8.9.2.7.9.1	search with cache (only 1: constructor; only 1: CRelationClasses.simpl_crelation; only 1: reflexivity || destruct H; only 1: now apply compare_lt_iff; only 1: CRelationClasses.simpl_crelation; only 1: reflexivity || destruct H; only 1: now apply compare_lt_iff).	27.8814210892	30467
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	7.0.6	search with cache (only 1: intros; only 1: subst; only 1: intuition).	0.0619249343872	167
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.12.0.2.0.1.7	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: easy; only 1: firstorder  (subst; auto); only 1: left; only 1: firstorder).	1.23040008545	3455
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	4.1.1.1.7	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: firstorder  (subst; auto); only 1: simpl in *; only 1: auto).	0.144731044769	378
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	16.2.13.3	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: firstorder).	0.799762964249	2787
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.5.2.5.2.13	search with cache (only 1: intros [H1 H2]; only 1: compute; only 1: intro H; only 1: intros m [H3 H4]; only 1: fix gcd_divide 1; only 1: firstorder).	28.7944359779	7262
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	4.0	search with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	0.89227604866	12
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2.0.1	search with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: intuition).	1.58133602142	11
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	3	search with cache (only 1: now intros ->).	0.161859989166	37
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40	1.1.1.3.0.5.11	search with cache (only 1: generalize dependent l; only 1: inversion 1; only 1: repeat red; only 1: subst a; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto).	5.9882209301	6264
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40	1.1.0.0.1.8.2.8.0	search with cache (only 1: intros; only 1: invlist InA; only 1: firstorder; only 1: constructor; only 1: invlist Sorted; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).	22.2284858227	18261
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2.0.0	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0100421905518	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.00512003898621	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	4	search with cache (only 1: intuition).	0.00722885131836	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	11.8.4	search with cache (only 1: intros; only 1: destruct H; only 1: now f_equal).	0.267944812775	827
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.00589799880981	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: reflexivity).	0.004723072052	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	2	search with cache (only 1: auto).	0.00528407096863	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	10	search with cache (only 1: tauto).	0.0138928890228	43
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	55.5	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	5.14528608322	10584
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0182301998138	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.1.0.3.0	search with cache (only 1: rewrite In_alt; only 1: split; only 1: firstorder; only 1: now compute; only 1: firstorder).	0.12019610405	9
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0305519104004	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	10.5.25	search with cache (only 1: inversion 1 as [H1| ?]; only 1: firstorder; only 1: auto).	4.11818790436	4895
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.27	search with cache (only 1: inversion 1; only 1: firstorder; only 1: firstorder).	1.07696580887	1348
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	2.0.7.2	search with cache (only 1: intros x y H; only 1: red; only 1: destruct H; only 1: trivial).	0.165198802948	249
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	13	search with cache (only 1: intuition).	0.0148370265961	115
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00719594955444	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.00434589385986	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0127041339874	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	0.25	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.427337884903	980
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.0.19	search with cache (only 1: fix gcd_divide 1; only 1: unfold eqke; only 1: intuition).	8.27491998672	3848
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.0.0.3.4.0	search with cache (only 1: split; only 1: intro H; only 1: auto; only 1: intros x x' Hxx'; only 1: auto; only 1: eauto).	0.0494000911713	165
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.1.0.0.4.0.0.2.0.0.1.36	search with cache (only 1: constructor; only 1: red; only 1: unfold eqke; only 1: intuition; only 1: intros EQ; only 1: unfold eqke; only 1: intuition; only 1: intros EQ; only 1: unfold eqke; only 1: intuition; only 1: eauto; only 1: congruence).	7.86349797249	6017
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.3.2.7.15	search with cache (only 1: intros l1 l2; only 1: intros l H; only 1: induction 1; only 1: eauto; only 1: intuition).	0.657444000244	1173
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	2.3.9.1.11	search with cache (only 1: intros l1 l2; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: firstorder).	6.09174513817	10654
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.0.0.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.0201761722565	5
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	6.0.3.13.4	search with cache (only 1: intros x y H; only 1: transitivity y; only 1: compute; only 1: auto; only 1: intuition).	1.36375999451	3428
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	4.4.3.0.2.2.0.38	search with cache (only 1: compute; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	28.265860796	144002
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	2.4.4.1.0.2.0.0	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	4.12996792793	19488
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.00831079483032	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	10	search with cache (only 1: solve_max).	0.151476144791	83
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.01518201828	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	2	search with cache (only 1: solve_max).	0.0110440254211	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	2	search with cache (only 1: solve_max).	0.0106279850006	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	2	search with cache (only 1: solve_max).	0.0110330581665	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	2.0.3.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.031445980072	21
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0127410888672	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0945520401001	58
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0144720077515	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	2.2.0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: intuition; only 1: solve_max; only 1: solve_max).	0.0237801074982	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	search with cache (only 1: apply min_l; only 1: order).	0.00502300262451	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.3.0.4	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.25287103653	158
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.00962781906128	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	3.3.0.3.0.7	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: order).	2.55448102951	1329
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0131089687347	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0099401473999	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.00964498519897	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.00944709777832	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.2.0	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.0345931053162	23
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0127520561218	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0894110202789	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.01451587677	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.2	search with cache (only 1: apply max_l; only 1: solve_min).	0.0103430747986	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	5.15	search with cache (only 1: apply min_l; only 1: solve_max).	3.29201793671	3006
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	4.4.1.0.1.3.0.0.0.11	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	5.46403193474	17821
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.25	search with cache (only 1: apply min_mono; only 1: congruence).	0.410331010818	861
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	4.4.0.14.1.11.3	search with cache (only 1: intros; only 1: apply max_case_strong; only 1: intros Compat Hl Hr; only 1: subst; only 1: trivial; only 1: auto; only 1: auto).	30.8971290588	88217
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	4.4.3.3	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.140320062637	377
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	6.6.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.158123016357	494
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	5.5.1.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.108170032501	321
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	6.6.0.4	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.17138504982	578
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	27.12.4.1.8	search with cache (only 1: intros H; only 1: unfold eq; only 1: intros; only 1: intro x; only 1: congruence).	7.09745717049	21630
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	8.0.1	search with cache (only 1: unfold eq; only 1: intros; only 1: decide equality).	0.0432939529419	138
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.1.24.0.1.2.11.3.54	search with cache (only 1: Z.bitwise; only 1: Z.le_elim Hm; only 1: induction n; only 1: f_equal; only 1: trivial; only 1: rewrite <- Hm; only 1: induction n; only 1: f_equal; only 1: Morphisms.solve_proper).	27.8056800365	60579
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0719177722931	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.00595116615295	1
Coq.ZArith.Znat.positive_N_nat	40	3.0	search with cache (only 1: simpl; only 1: trivial).	0.00736093521118	5
Coq.ZArith.Znat.positive_nat_N	40	2.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0191509723663	13
Coq.ZArith.Znat.Z_N_nat	40	0.0.16.1	search with cache (only 1: induction n; only 1: trivial; only 1: reflexivity; only 1: trivial).	0.109035968781	330
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	1.0.6.12	search with cache (only 1: induction n; only 1: now f_equal; only 1: trivial; only 1: now f_equal).	0.148298025131	325
Coq.ZArith.Znat.Zabs_nat_N	40	1.6.1.0.2.15	search with cache (only 1: destruct n; only 1: tauto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.539279222488	1341
Coq.ZArith.Znat.N2Z.id	40	21	search with cache (only 1: now destruct n).	0.337729930878	251
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.1.0.0.0.2.0.0.0.2.0.6.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	7.23888397217	9229
Coq.ZArith.Znat.N2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0116100311279	1
Coq.ZArith.Znat.N2Z.inj_0	40	2	search with cache (only 1: trivial).	0.0105531215668	12
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00572490692139	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.0.0.0.1.1	search with cache (only 1: destruct n, m; only 1: now rewrite ?Hx; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	0.0829570293427	113
Coq.ZArith.Znat.N2Z.inj_le	40	107	search with cache (only 1: now destruct n, m).	2.25906014442	10476
Coq.ZArith.Znat.N2Z.inj_lt	40	0.0.2.35	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: split; only 1: now rewrite inj_compare; only 1: now rewrite inj_compare).	0.295786857605	2112
Coq.ZArith.Znat.N2Z.inj_ge	40	4.0.0.0.0.50	search with cache (only 1: destruct n, m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	5.33513522148	6261
Coq.ZArith.Znat.N2Z.inj_gt	40
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	10	search with cache (only 1: now destruct n, m).	0.0325691699982	49
Coq.ZArith.Znat.N2Z.inj_mul	40	2.0.28	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct m).	0.292655944824	526
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.7.0.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl in *; only 1: now rewrite Pos.add_1_r).	0.213711977005	175
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.2.1.10.4.4.15.0.0.121	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: induction p using Pos.peano_ind; only 1: trivial; only 1: rewrite <- Pos.add_1_r; only 1: destruct p; only 1: easy || now destruct 1; only 1: trivial; only 1: trivial).	24.115721941	76579
Coq.ZArith.Znat.N2Z.inj_pred	40	4.0.0.4.6.3.87	search with cache (only 1: destruct n; only 1: N.order; only 1: destruct p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	22.2468547821	50894
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.1.1.0.11	search with cache (only 1: Z.bitwise; only 1: destruct n as [| p]; only 1: f_equal; only 1: f_equal; only 1: now destruct p).	0.241104841232	194
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.1.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0375621318817	29
Coq.ZArith.Znat.Z2N.id	40	3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0155200958252	7
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	0.1.0.2.1.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.53826212883	673
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	search with cache (only 1: simpl; only 1: tauto).	0.00781989097595	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1.1	search with cache (only 1: simpl Z.to_N; only 1: split).	0.00620889663696	4
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0056300163269	1
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	2.4.2	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.0791900157928	34
Coq.ZArith.Znat.Z2N.inj_succ	40	2.2.2.3.8.0.94	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct 1 || intros _; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: now destruct 1 || intros _).	17.9496631622	36496
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.52.0.33	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	16.1243739128	51063
Coq.ZArith.Znat.Z2N.inj_compare	40
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40	1.0.0.0.0.0.0.0.4.9.38	search with cache (only 1: unfold Z.le, Z.ge; only 1: destruct n, m; only 1: intuition; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	32.3909771442	50736
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.23.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: trivial).	0.69530081749	2278
Coq.ZArith.Znat.Z2N.inj_quot2	40	0.0.0.8.0.18.3.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: induction p using Pos.peano_ind; only 1: reflexivity; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	7.88178801537	28428
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.9	search with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial; only 1: trivial).	0.161900997162	100
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	5.0	search with cache (only 1: intros; only 1: now destruct n).	0.0158579349518	7
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.005774974823	2
Coq.ZArith.Znat.Zabs2N.id	40	0.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.00768804550171	6
Coq.ZArith.Znat.Zabs2N.inj_0	40	1	search with cache (only 1: easy).	0.00565481185913	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00682616233826	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00518488883972	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.26	search with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: trivial; only 1: reflexivity).	0.439170837402	462
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.0.0.0.0.0.2.0	search with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: now destruct 1 || intros _; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: now destruct 1 || intros _).	0.197303771973	33
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.2.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: split; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	2.8385989666	2030
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial).	0.68249297142	372
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40
Coq.ZArith.Znat.Zabs2N.inj_compare	40	4.2	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.023904800415	8
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0.0.0.0.0.0.0.15.3	search with cache (only 1: unfold Z.le, Z.ge; only 1: destruct n, m; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	22.7847061157	28527
Coq.ZArith.Znat.Zabs2N.inj_lt	40	4.1	search with cache (only 1: intros; only 1: now destruct n, m).	0.124135971069	23
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0113198757172	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	4	search with cache (only 1: now f_equal).	0.0063169002533	5
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	96	search with cache (only 1: now destruct n).	5.33378601074	11268
Coq.ZArith.Znat.Nat2Z.id	40	0.0.0.8.3	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.106810092926	147
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.15	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	1.33442592621	916
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	1.2.0.2.0.0.1.2.2.11	search with cache (only 1: destruct n; only 1: tauto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: intros; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1).	4.72964906693	5179
Coq.ZArith.Znat.Z2Nat.inj	40	2.12.4.1	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: rewrite <- H1; only 1: reflexivity).	1.15562295914	607
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.1.0.2.1.6.1.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.17326116562	451
Coq.ZArith.Znat.Z2Nat.inj_0	40	7	search with cache (only 1: trivial).	0.00535893440247	8
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.00507593154907	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	10	search with cache (only 1: split).	0.0150740146637	21
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	31.88	search with cache (only 1: Nat.bitwise; only 1: now destruct n as [| [| | ]| [| | ]]).	2.96133303642	11619
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0106749534607	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.2.0.0.0.0.0.2.0.2.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.06146287918	4063
Coq.ZArith.Znat.Zabs2Nat.id	40	1.1.0.9	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.075572013855	98
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.00615406036377	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	2	search with cache (only 1: trivial).	0.00587487220764	3
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	3	search with cache (only 1: trivial).	0.00563383102417	4
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.0.0.124	search with cache (only 1: induction n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	5.74707508087	8482
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	4.01029610634	4762
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.2.0.1.0.0.2.1.0.0.1.0.0.8	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	25.3185679913	13190
Coq.ZArith.Wf_Z.Z_lt_rec	40
Coq.ZArith.Wf_Z.Z_lt_induction	40	1.12.11.3	search with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: auto; only 1: now apply Zlt_0_rec).	10.7672507763	8683
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	21.069026947	26312
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40	2.2.6.16.3	search with cache (only 1: intro z; only 1: intros a; only 1: intros x1 x2 H1 x3 x4 H2; only 1: Z.swap_greater; only 1: now case Z.compare_spec).	8.64310908318	16429
Coq.ZArith.Zcompare.Zcompare_eq_case	40	5.8.4.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order).	7.69572615623	9312
Coq.ZArith.Zcompare.Zle_compare	40	14.3.6.9.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: trivial; only 1: Z.order).	16.316505909	35547
Coq.ZArith.Zcompare.Zlt_compare	40	13.0.13.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: trivial; only 1: Z.order).	12.1593210697	22648
Coq.ZArith.Zcompare.Zge_compare	40	0.29.10	search with cache (only 1: intros H; only 1: intro p; only 1: now case Z.compare_spec).	26.5217349529	36149
Coq.ZArith.Zcompare.Zgt_compare	40	0.13.5.13.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.swap_greater; only 1: Z.Private_Tac.order; only 1: Z.swap_greater; only 1: Z.order; only 1: now Z.swap_greater).	31.1887738705	54828
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40
Coq.ZArith.Zquot.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.00858497619629	3
Coq.ZArith.Zquot.Zquot_0_l	40	2.2.1	search with cache (only 1: Z.pos_or_neg a; only 1: now destruct a; only 1: trivial).	0.0172679424286	8
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.7.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.223297119141	64
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.1.0	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0551209449768	7
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.3.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.147821903229	32
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.3.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0804891586304	21
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	1.3.3.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	2.50447201729	1431
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	0.1.1.2.0.7.29.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: destruct a as [| a| [a| a| ]]; only 1: simpl; only 1: tauto; only 1: now destruct Z.even; only 1: now destruct Z.even; only 1: now destruct Z.even; only 1: now destruct Z.even).	2.10235500336	5644
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	1.5.1.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: now rewrite <- Z.mod_divide; only 1: tauto).	0.287507772446	135
Coq.ZArith.Zdigits.binary_value	40	1.21	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	0.616073846817	1436
Coq.ZArith.Zdigits.two_compl_value	40	1.0.0.4.0.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: intuition).	0.157809019089	160
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40	4.23	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	3.2722260952	9829
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	7	search with cache (only 1: now subst).	0.112425804138	24
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	1.1.1.1.0	search with cache (only 1: destruct b; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0242230892181	9
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1	search with cache (only 1: auto).	0.0074520111084	2
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0	search with cache (only 1: auto).	0.00701189041138	1
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.1.18.3.1	search with cache (only 1: intro n; only 1: intro H; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	3.21750497818	5732
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.6	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0168690681458	28
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.2.6.10	search with cache (only 1: destruct n; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	0.216008901596	269
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.1.0.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.0777668952942	80
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.00536012649536	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	12.0.12.0.0.0.48	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now destruct m; only 1: simpl; only 1: now destruct m).	2.11562514305	7624
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2	search with cache (only 1: trivial).	0.00530314445496	3
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0045759677887	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00651001930237	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00501608848572	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.1.0.0.0.0.2.0	search with cache (only 1: unfold succ; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: rewrite !opp_add_distr; only 1: simpl; only 1: trivial).	0.0642170906067	139
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40
Coq.ZArith.BinInt.Z.sub_0_r	40	41	search with cache (only 1: now destruct n).	0.371971845627	858
Coq.ZArith.BinInt.Z.sub_succ_r	40	2.18.2.1.15.14	search with cache (only 1: case_eq (N.even n); only 1: fix even_spec 1; only 1: now destruct m; only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: fix even_spec 1; only 1: trivial).	3.97641611099	7201
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0055570602417	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	3.4.20	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	1.35300993919	2273
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0.0.0.0	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0104830265045	5
Coq.ZArith.BinInt.Z.compare_le_iff	40
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.27325797081	168
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	2.4	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now destruct n).	0.125793933868	12
Coq.ZArith.BinInt.Z.abs_neq	40	0.11.0.0.10.4	search with cache (only 1: intros; only 1: apply eq_opp_r; only 1: destruct n; only 1: now nzsimpl; only 1: now nzsimpl; only 1: trivial).	1.54381299019	1322
Coq.ZArith.BinInt.Z.sgn_null	40
Coq.ZArith.BinInt.Z.sgn_pos	40	4.10.1	search with cache (only 1: zero_pos_neg ltac:(n); only 1: order; only 1: now destruct n).	0.760501146317	439
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.00942707061768	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0.7	search with cache (only 1: simpl; only 1: reflexivity).	0.00988602638245	9
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.0.1	search with cache (only 1: simpl; only 1: unfold pow_pos; only 1: now nzsimpl').	0.0960650444031	4
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	18	search with cache (only 1: now destruct n).	0.372258901596	648
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.1.1.2.1.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: trivial).	0.281157016754	258
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	5.0	search with cache (only 1: simpl; only 1: split).	0.00604796409607	7
Coq.ZArith.BinInt.Z.succ_double_spec	40	1.1.1.1.0.1.2.0.0.0.0.0.0	search with cache (only 1: simpl; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: trivial).	6.19788122177	5178
Coq.ZArith.BinInt.Z.pred_double_spec	40	22.3	search with cache (only 1: simpl; only 1: now destruct n).	2.73509502411	1534
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0521378517151	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.2.0	search with cache (only 1: rewrite <- testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0149488449097	10
Coq.ZArith.BinInt.Z.testbit_Zneg	40	6.7.6.7.10.7.14.2	search with cache (only 1: rewrite <- testbit_of_N; only 1: now destruct 1 || intros _; only 1: apply eq_true_iff_eq; only 1: split; only 1: fix odd_spec 1; only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	8.69602489471	21925
Coq.ZArith.BinInt.Z.div2_spec	40	1	search with cache (only 1: reflexivity).	0.00597715377808	2
Coq.ZArith.BinInt.Z.testbit_0_l	40	1.0.2.0.1.0.0.11	search with cache (only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: easy; only 1: simpl; only 1: easy; only 1: unfold testbit; only 1: destr_bool).	0.616821050644	707
Coq.ZArith.BinInt.Z.testbit_neg_r	40	1	search with cache (only 1: now destruct n).	0.179959058762	2
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.00655913352966	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	2.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.260421037674	44
Coq.ZArith.BinInt.Z.lt_gt	40	2.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.258224964142	44
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	2.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.296363115311	36
Coq.ZArith.BinInt.Z.le_ge	40	2.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.298053026199	36
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40	0.1.1.0.5.2.0	search with cache (only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	18.3655948639	5931
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	3	search with cache (only 1: apply add_cancel_l).	0.521608114243	24
Coq.ZArith.BinInt.Z.mul_reg_l	40	0.6.0	search with cache (only 1: intro H; only 1: apply mul_cancel_l; only 1: now nzsimpl).	0.0296790599823	9
Coq.ZArith.BinInt.Z.mul_reg_r	40	4.5	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.273105859756	58
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	0.10	search with cache (only 1: nzsimpl'; only 1: now nzsimpl).	0.338429927826	33
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.4.0.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	0.461945056915	309
Coq.ZArith.BinInt.Pos2Z.id	40	0	search with cache (only 1: now f_equal).	0.00556397438049	1
Coq.ZArith.BinInt.Pos2Z.inj	40	9	search with cache (only 1: congruence).	0.0110991001129	13
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	10.0.3	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.292297840118	197
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.00689888000488	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	1	search with cache (only 1: easy).	0.00962996482849	2
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: now Z.nzsimpl).	0.0166831016541	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1.1	search with cache (only 1: simpl in *; only 1: trivial).	0.126017093658	4
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	1.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00793600082397	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.0	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.00834321975708	3
Coq.ZArith.BinInt.Pos2Z.inj_add	40	1.0	search with cache (only 1: simpl; only 1: f_equal).	0.00793313980103	3
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1	search with cache (only 1: now destruct p).	0.0100629329681	2
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00730204582214	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0057590007782	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00595879554749	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: now f_equal).	0.00559711456299	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.0.0	search with cache (only 1: simpl; only 1: revert q; only 1: trivial).	0.00638198852539	3
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	4	search with cache (only 1: trivial).	0.021271944046	42
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	4	search with cache (only 1: trivial).	0.00571584701538	5
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.0.1	search with cache (only 1: simpl; only 1: revert q; only 1: congruence).	0.00841999053955	4
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	3	search with cache (only 1: reflexivity).	0.00699090957642	4
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	2.0.5	search with cache (only 1: generalize (Pos.ggcd_gcd p q); only 1: simpl; only 1: trivial).	0.00908803939819	10
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.1.11.20.32.0	search with cache (only 1: intro Hn; only 1: simpl; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: now destruct Hn).	8.2273709774	23875
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	5	search with cache (only 1: congruence).	0.298987865448	73
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	6.0.2	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.337237119675	122
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	1	search with cache (only 1: now injection 1).	0.00910305976868	2
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0170729160309	7
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: easy).	0.00556683540344	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	search with cache (only 1: easy).	0.00777697563171	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.00611805915833	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	1	search with cache (only 1: easy).	0.00878190994263	2
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.00795912742615	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	1	search with cache (only 1: easy).	0.00577712059021	2
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	1.3.2.0.19.15	search with cache (only 1: revert q; only 1: repeat red; only 1: simpl in *; only 1: unfold Pos.le; only 1: intros x y; only 1: now rewrite <- ?Pos.compare_antisym).	3.97099995613	8214
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	5	search with cache (only 1: trivial).	0.0973191261292	15
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0	search with cache (only 1: easy).	0.00454497337341	1
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0954930782318	2
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	8	search with cache (only 1: split).	0.00526905059814	9
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00574207305908	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00574803352356	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00751399993896	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00810694694519	2
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: trivial).	0.00437998771667	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	0.0.0	search with cache (only 1: simpl; only 1: revert q; only 1: trivial).	0.00890398025513	3
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0.0	search with cache (only 1: revert q; only 1: trivial).	0.00566601753235	2
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00600004196167	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.00652384757996	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.00438094139099	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	1.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: trivial; only 1: easy).	0.0184988975525	16
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	4.2	search with cache (only 1: intros; only 1: now destruct x).	0.026664018631	14
Coq.ZArith.BinInt.Z2Pos.inj_succ	40
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.0.5.0.0.40	search with cache (only 1: Z.nzsimpl'; only 1: destruct x; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: easy).	3.44357991219	2506
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.3.1.0.2.5.0.0.3	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl in *; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy || now destruct y; only 1: simpl; only 1: easy || now destruct y).	3.8858101368	3921
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.6.0	search with cache (only 1: destruct x; only 1: Z.order'; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0296452045441	16
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0270090103149	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.1.2.0.1	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy).	0.00789618492126	9
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.1.15.0	search with cache (only 1: destruct x; only 1: Z.order; only 1: simpl; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.469870090485	384
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.1	search with cache (only 1: intros _ H ->; only 1: now f_equal).	0.00633907318115	3
Coq.ZArith.BinInt.ZL0	40	2	search with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.0447371006012	3
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	0.11	search with cache (only 1: Z.nzsimpl'; only 1: now Z.nzsimpl).	0.541656017303	145
Coq.ZArith.BinInt.Z_eq_mult	40	5.51.2	search with cache (only 1: intro H1; only 1: rewrite H1; only 1: now Z.nzsimpl).	2.21389293671	7798
Coq.ZArith.Zcomplements.floor_gt0	40	0.0.4	search with cache (only 1: intros; only 1: unfold Z.gt; only 1: trivial).	0.0100948810577	7
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	45	search with cache (only 1: now destruct n).	1.6796271801	2664
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: auto with zarith).	0.00635695457458	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.15	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	15.7930860519	11837
Coq.ZArith.Zeven.Zodd_even_bool	40	0.0.0.0.0.47.4.6.0.3.27	search with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: now destruct n; only 1: simpl; only 1: induction n; only 1: simpl; only 1: Bool.destr_bool; only 1: trivial; only 1: simpl; only 1: tauto).	18.9647498131	87609
Coq.ZArith.Zeven.Zeven_odd_bool	40	8	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0108118057251	13
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0253801345825	5
Coq.ZArith.Zeven.Zeven_Sn	40	4.1.5.1.9.13.0.19	search with cache (only 1: intro H; only 1: boolify_even_odd; only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	9.14352989197	15248
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0120620727539	1
Coq.ZArith.Zeven.Zodd_div2	40	2.1.0.0.0.3.0.0.0.0.0.0.0.1	search with cache (only 1: simpl; only 1: destruct n as [| [| | ]| [| | ]]; only 1: now destruct 1 || intros _; only 1: reflexivity; only 1: destruct 1; only 1: destruct 1; only 1: easy; only 1: simpl in *; only 1: induction p; only 1: now rewrite Pos.pred_double_succ; only 1: now f_equal; only 1: now f_equal; only 1: now destruct 1 || intros _; only 1: now Z.nzsimpl').	16.1303238869	9325
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	1.0.0.1.0.0.0.0.1.2.0.2	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: tauto; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now Z.nzsimpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy).	17.4601769447	5206
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0110099315643	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0170700550079	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	5.0	search with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.0920441150665	17
Coq.ZArith.Zeven.Zodd_ex	40	9.2.0	search with cache (only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	3.69589304924	663
Coq.ZArith.Zeven.Zeven_2p	40	2.0.2.0.0.1.1.3.6	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.528200864792	660
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.00800609588623	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.00736594200134	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00682091712952	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.2.14.4.1	search with cache (only 1: intros a b Hb; only 1: exists (a / b); only 1: rewrite Z.mul_comm; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	6.38371396065	3050
Coq.ZArith.Znumtheory.Zdivide_mod	40	1.1.1.18.2.0.3	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: zero_or_not b; only 1: rewrite Z.mod_divide; only 1: exists c; only 1: trivial; only 1: trivial).	10.7476501465	10270
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.11.2.51	search with cache (only 1: split; only 1: intuition; only 1: auto with zarith; only 1: auto).	5.10614180565	6962
Coq.ZArith.Znumtheory.Zis_gcd_1	40	10.12.0.0.19.3	search with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl; only 1: auto).	14.7388567924	11257
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.2.2.1	search with cache (only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0144829750061	9
Coq.ZArith.Znumtheory.Zis_gcd_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.106000900269	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	3.3.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.128861188889	45
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	3.3.3.10.3	search with cache (only 1: simple induction 1; only 1: split; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	9.80895495415	5929
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	4.0.0.2.30.0	search with cache (only 1: intro n; only 1: split; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	2.36394000053	5885
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40
Coq.ZArith.Znumtheory.not_prime_1	40	51	search with cache (only 1: easy').	0.636407852173	3027
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	1.0.8	search with cache (only 1: intros n; only 1: intros a b; only 1: apply Z.gcd_greatest).	0.573156833649	247
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.1.0.0.0.0.1.1.0.1.0	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	3.19722008705	1168
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.2.0.1.0.2.0	search with cache (only 1: intros Hb; only 1: unfold Z.div, Z.modulo; only 1: Z.swap_greater; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: destruct Z.div_eucl; only 1: auto).	1.09884095192	242
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	1	search with cache (only 1: trivial).	0.011910200119	11
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.3.1	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.03671002388	23
Coq.ZArith.Zdiv.Zdiv_0_l	40	5.0	search with cache (only 1: intros; only 1: trivial).	0.0176029205322	14
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.4.1	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0297601222992	29
Coq.ZArith.Zdiv.Zmod_1_r	40	2.42.0	search with cache (only 1: intros; only 1: Z.nzsimpl; only 1: tauto).	13.1664528847	31158
Coq.ZArith.Zdiv.Zdiv_1_r	40	2.1.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.0437059402466	11
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0175859928131	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.2.1	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl).	0.0493309497833	7
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	0.1.5.1.5.10.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.add_mod; only 1: tauto).	7.17610287666	9963
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.7.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.135322809219	65
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.1.1.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: replace (a - b) with a + -1 * b; only 1: auto with zarith; only 1: auto with zarith).	0.179081916809	52
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	0.1.5.0.1.15.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.mul_mod; only 1: tauto).	4.84184002876	4721
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0154409408569	3
Coq.ZArith.Zdiv.eqm_refl	40	1.1	search with cache (only 1: intro n; only 1: now Z.nzsimpl).	0.0949869155884	4
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.00807905197144	2
Coq.ZArith.Zdiv.eqm_trans	40	8.0	search with cache (only 1: unfold eqm; only 1: Z.order').	0.191810131073	36
Coq.ZArith.Zdiv.eqm_setoid	40	8.1.3.5.1.4.182	search with cache (only 1: split; only 1: intro n; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl; only 1: intro H; only 1: unfold eqm; only 1: Z.order').	8.9605410099	24765
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	1.9.29.1	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now intros ->).	18.5968821049	15049
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.2.3.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: tauto).	0.222063064575	89
Coq.ZArith.Zdiv.Z_div_exact_1	40	1.0.2.8.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: now destruct b; only 1: tauto).	0.95933508873	601
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.8.10.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: trivial; only 1: now destruct b).	4.00168800354	2147
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	1.1.4.5.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: now destruct b; only 1: now destruct b).	1.52603387833	674
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0	search with cache (only 1: solve_proper).	0.0270459651947	1
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	2	search with cache (only 1: congruence).	0.0114541053772	11
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	1.0.1.0.28.0	search with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: Z.swap_greater; only 1: auto).	3.793872118	6274
Coq.ZArith.Zabs.Zabs_intro	40	0.10.1.12.31	search with cache (only 1: intros a; only 1: destruct n; only 1: now Z.nzsimpl; only 1: trivial; only 1: trivial).	5.96215081215	23426
Coq.ZArith.Zabs.Zabs_dec	40	5.1.6.24.8.1	search with cache (only 1: intros n; only 1: destruct n; only 1: auto with relations; only 1: now left || now right; only 1: simpl; only 1: auto).	2.8421869278	6911
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40	3.48.3.48.6	search with cache (only 1: split; only 1: fix even_spec 1; only 1: easy; only 1: fix even_spec 1; only 1: easy).	12.1188981533	40501
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	13	search with cache (only 1: auto with *).	0.0140490531921	60
Coq.ZArith.Int.Z_as_Int.i2z_0	40	3	search with cache (only 1: tauto).	0.00696301460266	4
Coq.ZArith.Int.Z_as_Int.i2z_1	40	2.0	search with cache (only 1: Z.nzsimpl; only 1: reflexivity).	0.0365619659424	4
Coq.ZArith.Int.Z_as_Int.i2z_2	40	7	search with cache (only 1: easy || now destruct 1).	0.00757002830505	8
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: trivial).	0.0047390460968	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.00550293922424	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0	search with cache (only 1: trivial).	0.00617504119873	1
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: trivial).	0.00598502159119	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00659608840942	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: trivial).	0.00592994689941	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.00558519363403	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: easy || now destruct y).	0.0052969455719	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00580787658691	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: easy).	0.00507712364197	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.3	search with cache (only 1: simpl; only 1: trivial).	0.168761014938	17
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	2.4.6.3.2	search with cache (only 1: induction n; only 1: now Z.nzsimpl; only 1: intros Hn; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1).	4.43348002434	1336
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: now subst).	0.00731492042542	1
Coq.ZArith.Zpower.shift_pos_equiv	40	6	search with cache (only 1: trivial).	0.0135378837585	11
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	21.15.13	search with cache (only 1: Z.bitwise; only 1: f_equal; only 1: now apply Pos.iter_swap_gen).	7.36938309669	8636
Coq.ZArith.Zpower.two_p_equiv	40
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: now Z.nzsimpl).	0.0217969417572	1
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40	0.4.3.0.11.2.10.26.16	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: Z.nzsimpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: simpl Z.succ; only 1: rewrite Z.mul_comm; only 1: revert p; only 1: simpl; only 1: fix sqrtrem_spec 1; only 1: easy).	19.3569979668	19859
Coq.ZArith.Zpower.two_power_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.1.0.2.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: unfold Z.gt; only 1: trivial; only 1: easy; only 1: easy).	0.0404131412506	15
Coq.ZArith.Zpower.two_p_S	40	0.3.20.5.0	search with cache (only 1: rewrite !two_p_equiv; only 1: intros; only 1: Z.nzsimpl; only 1: Z.order'; only 1: trivial).	9.85486102104	3544
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0120711326599	1
Coq.ZArith.auxiliary.Zle_left	40	70	search with cache (only 1: apply Z.le_0_sub).	3.95886397362	3354
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00911903381348	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.00734305381775	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.0.0.0.0.1.8	search with cache (only 1: unfold Z.le, Z.ge; only 1: rewrite Z.compare_sub; only 1: unfold Z.sub; only 1: destruct (n + - m) as [| p| p]; only 1: easy'; only 1: easy'; only 1: easy').	0.494904994965	186
Coq.ZArith.auxiliary.Zgt_left	40	0.0.2.1.6	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.449115037918	130
Coq.ZArith.auxiliary.Zgt_left_gt	40	2.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.555852890015	127
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0195660591125	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	16.2	search with cache (only 1: Z.swap_greater; only 1: Z.solve_max).	0.600614070892	574
Coq.ZArith.Zmax.Zpos_max_1	40	2.2.3	search with cache (only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0172049999237	10
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	14	search with cache (only 1: Z.solve_min).	0.249534130096	145
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	2.2.0	search with cache (only 1: unfold Z.min, Pos.min; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0171349048615	7
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40	2.3.12	search with cache (only 1: intro z; only 1: fix le_div2 1; only 1: trivial).	0.53635597229	835
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	68.58	search with cache (only 1: Nat.bitwise; only 1: now destruct a as [| a| [a| a| ]]).	4.20413589478	14979
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.0103259086609	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0111830234528	1
Coq.ZArith.Zorder.Zle_not_gt	40	1.0.1.0	search with cache (only 1: intro H; only 1: intro H1; only 1: Z.swap_greater; only 1: Z.order).	0.0185790061951	6
Coq.ZArith.Zorder.Zgt_not_le	40	0.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0176770687103	3
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0175640583038	2
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0168290138245	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.00810194015503	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0185759067535	2
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	5.1.1	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.0225410461426	11
Coq.ZArith.Zorder.Zgt_irrefl	40	3.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0151219367981	18
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	1.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.107729911804	3
Coq.ZArith.Zorder.Zle_gt_trans	40	10.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.205095052719	56
Coq.ZArith.Zorder.Zgt_le_trans	40	3.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0218260288239	5
Coq.ZArith.Zorder.Zge_trans	40	12.1	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.186160087585	180
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.018728017807	3
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0188751220703	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0185270309448	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.00766587257385	1
Coq.ZArith.Zorder.Zgt_succ	40	1.0.5.103	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	3.32555317879	8072
Coq.ZArith.Zorder.Znot_le_succ	40	1.17	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.25697016716	449
Coq.ZArith.Zorder.Zgt_le_succ	40	52.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	2.9458129406	4127
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.00742506980896	2
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.00772905349731	1
Coq.ZArith.Zorder.Zgt_succ_le	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0145540237427	3
Coq.ZArith.Zorder.Zlt_succ_le	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.00792098045349	2
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0149140357971	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.00799608230591	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0179190635681	7
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	search with cache (only 1: intros; only 1: easy).	0.0128700733185	3
Coq.ZArith.Zorder.Zgt_pos_0	40	3.8	search with cache (only 1: intros; only 1: now split).	0.0197188854218	52
Coq.ZArith.Zorder.Zle_0_pos	40	1.9	search with cache (only 1: intros; only 1: easy).	0.0286130905151	34
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.00927019119263	1
Coq.ZArith.Zorder.Zle_0_nat	40	32.1.19	search with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: now destruct n).	3.81896185875	8851
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00908207893372	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	3	search with cache (only 1: apply Z.add_lt_mono_r).	0.413879871368	34
Coq.ZArith.Zorder.Zplus_le_reg_l	40	11	search with cache (only 1: apply Z.add_le_mono_l).	1.7366309166	117
Coq.ZArith.Zorder.Zplus_le_reg_r	40	6	search with cache (only 1: apply Z.add_le_mono_r).	0.416463851929	28
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00924301147461	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	3	search with cache (only 1: apply Z.add_lt_mono_r).	0.396722078323	34
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0198101997375	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.414889097214	30
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	14.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	13.4251918793	6152
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	2.0.2.0.21.0	search with cache (only 1: intros; only 1: apply Z.mul_lt_mono_pos_r; only 1: Z.swap_greater; only 1: trivial; only 1: Z.swap_greater; only 1: trivial).	35.7005519867	23724
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0114569664001	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	6	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.026750087738	11
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	6.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.046229839325	11
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	11.2.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.576890945435	409
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	8.2.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.344231843948	178
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0982739925385	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	6.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.724654912949	142
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	15	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.32181096077	172
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0178661346436	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	2	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0108540058136	3
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0261940956116	4
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	6.0.2	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.718994140625	143
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	3.16.15.0	search with cache (only 1: Z.swap_greater; only 1: revert n m; only 1: intros a b Ha Hb; only 1: Z.order_pos).	7.57326793671	4177
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	14.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.209343910217	208
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	30.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	32.0803990364	27714
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	9.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0784890651703	30
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0103659629822	1
Coq.ZArith.Zbool.Zle_cases	40	0.15.4.0.2	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order; only 1: now Z.swap_greater).	1.5869820118	1638
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.0.3.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.0870540142059	8
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.0.3.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.0688600540161	8
Coq.ZArith.Zbool.Zle_bool_antisym	40	4.0.0.0.10.3.3	search with cache (only 1: case Z.leb_spec; only 1: case Z.leb_spec; only 1: now try Z.order'; only 1: discriminate; only 1: case Z.leb_spec; only 1: discriminate; only 1: discriminate).	13.8243849277	15616
Coq.ZArith.Zbool.Zle_bool_trans	40	13.3	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.Private_Tac.order).	1.99630188942	1316
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	0	search with cache (only 1: easy || now destruct y).	0.0062620639801	1
Coq.ZArith.Zbool.Zone_min_pos	40	1.0.0.0.41.1.8	search with cache (only 1: destruct n; only 1: easy || now destruct y; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: easy || now destruct y).	8.79476904869	16067
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.0.4.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.0423607826233	9
Coq.ZArith.Zbool.Zge_is_le_bool	40	1.5	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.143368005753	57
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	14.0	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: now case Z.compare_spec).	0.898340940475	777
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0150561332703	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.0.2.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: easy'; only 1: easy').	0.1380879879	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).	0.017049074173	4
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0131640434265	4
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.201467037201	88
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.2.3	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.291206121445	163
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.4	search with cache (only 1: intros; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0221400260925	8
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	2	search with cache (only 1: trivial).	0.00796103477478	3
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.1.2.0.4.0	search with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hb; only 1: now elim Hb; only 1: simpl; only 1: reflexivity).	0.637320995331	438
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.14.6.5.8	search with cache (only 1: intro; only 1: induction (Rwf x); only 1: intro p; only 1: destruct p; only 1: auto).	2.62709307671	5204
Coq.Program.Wf.Fix_F_inv	40	0.13.0.10.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: simpl in *; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	1.938808918	5194
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0121099948883	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40
Coq.Program.Wf.Fix_F_sub_rect	40	2.20.0.7.3	search with cache (only 1: intro x; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	1.10247993469	5877
Coq.Program.Wf.eq_Fix_F_sub	40	2.5	search with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0352649688721	35
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	2.1.36.40	search with cache (only 1: intro Streicher_K; only 1: intros ? ? ? [Hl Hr]; only 1: subst; only 1: reflexivity).	3.44821000099	42953
Coq.Program.Equality.JMeq_eq_refl	40	2	search with cache (only 1: apply UIP).	0.00729990005493	3
Coq.Program.Equality.UIP_refl_refl	40	4	search with cache (only 1: apply UIP).	0.00724291801453	5
Coq.Program.Equality.inj_pairT2_refl	40	19	search with cache (only 1: apply UIP_refl).	0.0331089496613	166
Coq.Program.Equality.solution_left	40	1.5.5.5	search with cache (only 1: intro; only 1: intro; only 1: destruct 1; only 1: trivial).	0.0611889362335	339
Coq.Program.Equality.solution_right	40	2.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00744986534119	5
Coq.Program.Equality.deletion	40	2	search with cache (only 1: trivial).	0.0059130191803	3
Coq.Program.Equality.simplification_heq	40	0.21.8.6	search with cache (only 1: intros h1 h2; only 1: apply h1; only 1: subst; only 1: trivial).	0.221991062164	1807
Coq.Program.Equality.simplification_existT2	40
Coq.Program.Equality.simplification_existT1	40	4.43.28	search with cache (only 1: intro UIP_refl; only 1: inversion 1; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	2.39719009399	20812
Coq.Program.Equality.simplification_K	40
Coq.Program.Combinators.compose_id_left	40	1	search with cache (only 1: trivial).	0.00674986839294	2
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00648903846741	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00699400901794	2
Coq.Program.Combinators.flip_flip	40	0.2	search with cache (only 1: intros; only 1: reflexivity).	0.00709414482117	4
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00695610046387	2
Coq.Program.Combinators.prod_curry_uncurry	40	0.15.14.22.13.0	search with cache (only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intro a; only 1: apply functional_extensionality_dep_good; only 1: intros [? ?]; only 1: reflexivity).	1.60492396355	15742
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0209729671478	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40	3.11.3.9.7.3.2	search with cache (only 1: intros l a; only 1: intro H; only 1: rewrite multiplicity_In; only 1: rewrite multiplicity_In; only 1: intros; only 1: elim H0; only 1: eauto with typeclass_instances).	8.35687708855	25455
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	7.8.0.19.3	search with cache (only 1: intros l'; only 1: intro H; only 1: intros l; only 1: fix le_div2 1; only 1: trivial).	31.5453538895	126350
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	1.3.0.3.0.3.3.1.0	search with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto || rewrite Heq1; only 1: auto).	0.633327960968	2343
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40	6.50	search with cache (only 1: fix le_div2 1; only 1: now auto).	2.43729901314	16072
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	11.9.14.2	search with cache (only 1: intros; only 1: induction l; only 1: trivial; only 1: auto).	1.08226108551	8424
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	2.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.00708603858948	4
Coq.Sorting.Permutation.Permutation_cons	40	0.1.5.0	search with cache (only 1: intros l x HF; only 1: subst; only 1: intros l l' Hperm; only 1: auto).	0.0087308883667	10
Coq.Sorting.Permutation.Permutation_in	40	0.0.2.0.1.0.9.0	search with cache (only 1: intros n l d; only 1: induction 1; only 1: apply in_nil; only 1: simpl in *; only 1: tauto; only 1: simpl; only 1: tauto; only 1: auto).	1.2929649353	1373
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.1.2.4	search with cache (only 1: induction l; only 1: trivial; only 1: intro y; only 1: simpl; only 1: auto).	0.146132946014	178
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.3	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0316197872162	6
Coq.Sorting.Permutation.Permutation_rev	40	2.1.1.1.2	search with cache (only 1: induction l; only 1: discriminate || auto; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	0.162549972534	94
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.8.6.4.25	search with cache (only 1: intros Az RS; only 1: intros l; only 1: induction l; only 1: auto with arith; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith; only 1: now transitivity (length l')).	2.93336105347	5896
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.3.0.4.3	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	12.1046380997	151
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40	0.0.1.1.0.2.6.0.0.17	search with cache (only 1: induction l; only 1: rewrite app_nil_r; only 1: rewrite app_nil_r; only 1: trivial; only 1: intro; only 1: apply IHl; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_head, Add_app; only 1: eauto using Add_head, Add_app; only 1: eauto using Add_head, Add_app).	26.1387839317	6173
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.0338308811188	9
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	15	search with cache (only 1: split).	0.057776927948	246
Coq.Sorting.PermutSetoid.permut_sym	40	1.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.00905704498291	3
Coq.Sorting.PermutSetoid.permut_trans	40
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.00998997688293	3
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	2.0.4.0.1	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.393316984177	130
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	21.1.25.3	search with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: auto with arith; only 1: congruence).	17.6708209515	29411
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.1.0.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	1.89952516556	788
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	18.0.2.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: intuition).	2.35364508629	4717
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.1.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: intros a'; only 1: auto with arith; only 1: auto with arith).	0.0240030288696	7
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	6.6.6.2.0.2	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	4.15655303001	4766
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	4.0.41.0	search with cache (only 1: intros; only 1: inversion H; only 1: subst; only 1: auto).	7.61333799362	34062
Coq.Sorting.Sorted.Sorted_inv	40	0.6.1.10.15	search with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: inversion H; only 1: auto).	1.94491100311	7131
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	5.3	search with cache (only 1: inversion 1; only 1: auto).	0.0236849784851	33
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.00927591323853	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	8	search with cache (only 1: split).	0.0117559432983	17
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.00836205482483	2
Coq.Sorting.Heap.invert_heap	40	0.37.2	search with cache (only 1: intros; only 1: inversion H; only 1: auto with datatypes).	1.96951389313	3322
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	1.1.0.5.6.3.3.5.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H3 H4; only 1: elim H4; only 1: intros H1 H2; only 1: elim H2; only 1: auto with datatypes; only 1: auto with datatypes).	28.373570919	33779
Coq.Sorting.Heap.low_trans	40	19.3.0.0.0.2	search with cache (only 1: simple induction T; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros a G PG D PD PN; only 1: eauto).	25.8055510521	41027
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	5.0.2.1.2.9	search with cache (only 1: unfold meq; only 1: intros H; only 1: intros; only 1: intro a; only 1: simpl; only 1: auto with arith).	0.928155899048	1122
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40
Coq.Sorting.Heap.list_to_heap	40
Coq.Sorting.Heap.heap_to_list	40	0.23	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.253057956696	728
Coq.Sorting.Heap.treesort	40	1.3	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0115780830383	13
Coq.Init.Wf.Acc_inv	40	0.6	search with cache (only 1: destruct 1; only 1: trivial).	0.0107409954071	19
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00877594947815	5
Coq.Init.Wf.well_founded_ind	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00882005691528	5
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	11.3.1.0.3.1.9.4.8.0	search with cache (only 1: intro H; only 1: intro p; only 1: unfold not; only 1: destruct p; only 1: unfold not; only 1: auto; only 1: intro A; only 1: intros h1 h2; only 1: induction n; only 1: trivial).	2.91910409927	31950
Coq.Init.Tactics.decide_right	40	4.1.9.7.1.1	search with cache (only 1: intro A; only 1: destruct decide; only 1: intro H; only 1: reflexivity || destruct H; only 1: trivial; only 1: trivial).	0.906980037689	10262
Coq.Init.Peano.pred_Sn	40	9	search with cache (only 1: reflexivity).	0.00549793243408	16
Coq.Init.Peano.not_eq_S	40	25.3	search with cache (only 1: intro H; only 1: auto).	0.365160942078	2678
Coq.Init.Peano.O_S	40	1.5	search with cache (only 1: intro H; only 1: discriminate).	0.00808191299438	30
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	0.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00718998908997	6
Coq.Init.Peano.plus_n_Sm	40	1.1.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00851488113403	8
Coq.Init.Peano.plus_Sn_m	40	0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00809907913208	8
Coq.Init.Peano.mult_n_O	40	0.1.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00649094581604	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.4.5	search with cache (only 1: induction n; only 1: trivial; only 1: auto).	0.014396905899	76
Coq.Init.Peano.le_n_S	40	3.0.4	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0177688598633	66
Coq.Init.Peano.nat_case	40	1.4.1.2	search with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: trivial).	0.0250289440155	79
Coq.Init.Peano.nat_double_ind	40	0.0.10.6.1.0	search with cache (only 1: induction n; only 1: auto; only 1: intros; only 1: elim m; only 1: auto; only 1: auto).	0.280758142471	1744
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.1.3.2.2.3.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: simpl; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	12.0724642277	42314
Coq.Init.Peano.min_r	40	0.1.2.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.31517887115	7744
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	0.1.4.2.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.533488035202	1510
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.21.9	search with cache (only 1: intros A P H; only 1: destruct 1; only 1: exact H).	0.0754971504211	1267
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00624394416809	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00682401657104	3
Coq.Init.Datatypes.surjective_pairing	40	0.29	search with cache (only 1: destruct p; only 1: trivial).	0.0770070552826	1123
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.2	search with cache (only 1: destruct H; only 1: trivial).	0.0100708007812	4
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.2.2.2.0.2.2.2.0.2.7	search with cache (only 1: intros; only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	2.29860711098	23068
Coq.Init.Datatypes.CompOpp_iff	40	0.0.0.0.0.0.0.0.1.2.0.0.0.0.0.0.0.0.1.2.5	search with cache (only 1: split; only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: discriminate; only 1: auto; only 1: discriminate; only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: discriminate; only 1: auto; only 1: discriminate).	12.9941589832	65155
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	2.2.3.2.35.33.16.4.3.3.6	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).	27.1930959225	447030
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00494384765625	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.2.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0218150615692	95
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00724196434021	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.060968875885	625
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.2.2.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.260267019272	2959
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	3.1.4.0.1.3.1.4.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.554039955139	10050
Coq.Init.Logic.imp_iff_compat_l	40	3.3.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0203537940979	129
Coq.Init.Logic.imp_iff_compat_r	40	4.4.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0319521427155	226
Coq.Init.Logic.not_iff_compat	40	8.8.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0740730762482	726
Coq.Init.Logic.neg_false	40	2.13.9.2.2.2.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	1.14830183983	14736
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.6.3.0.0.6.3.3	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.298424005508	3780
Coq.Init.Logic.and_assoc	40	5.5.0.6.6.3.5.0.6.0.6.3.1.0.9	search with cache (only 1: intro H; only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: apply HypR).	7.49671292305	95946
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.1.4.7.1.2.0.4.7.2	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: exact H).	0.59632396698	14200
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	2.5	search with cache (only 1: intros; only 1: assumption).	0.00883388519287	28
Coq.Init.Logic.iff_to_and	40	0.0.3.3.3	search with cache (only 1: intros; only 1: apply and_iff_compat_r; only 1: split; only 1: trivial; only 1: trivial).	0.0796029567719	389
Coq.Init.Logic.inst	40	11	search with cache (only 1: auto).	0.00830006599426	57
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00576996803284	3
Coq.Init.Logic.absurd	40	15.3.8.1.2.1	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H; only 1: intros; only 1: elim H1; only 1: auto).	0.354602098465	5368
Coq.Init.Logic.eq_sym	40	1.5	search with cache (only 1: destruct 1; only 1: trivial).	0.00923204421997	15
Coq.Init.Logic.eq_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00551104545593	2
Coq.Init.Logic.eq_trans_r	40	1.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00616192817688	3
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00721216201782	3
Coq.Init.Logic.not_eq_sym	40	0.7.1.4.5	search with cache (only 1: unfold not; only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.131553888321	1241
Coq.Init.Logic.eq_sind_r	40	2.6	search with cache (only 1: destruct 2; only 1: auto).	0.00658416748047	16
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00640797615051	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00626683235168	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00697302818298	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	1.2.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: trivial).	0.010819196701	6
Coq.Init.Logic.rew_opp_r	40	0.0.5	search with cache (only 1: intros h1 h2; only 1: destruct H; only 1: reflexivity).	0.00779318809509	8
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00685000419617	3
Coq.Init.Logic.f_equal2	40	0.2.1.6.4	search with cache (only 1: intro A; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.188998937607	989
Coq.Init.Logic.f_equal3	40	0.3.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00814580917358	7
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00912976264954	6
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00994396209717	7
Coq.Init.Logic.f_equal_compose	40	0.0.19.5.14	search with cache (only 1: intros h1 h2; only 1: intros ? ? ? Fl Fr; only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.660508155823	7762
Coq.Init.Logic.eq_trans_refl_l	40	0.1.8	search with cache (only 1: intro A; only 1: destruct e; only 1: reflexivity).	0.011656999588	54
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00619792938232	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00627684593201	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00613808631897	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00624418258667	2
Coq.Init.Logic.eq_trans_assoc	40	0.2.5.4	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0422730445862	274
Coq.Init.Logic.rew_map	40
Coq.Init.Logic.eq_trans_map	40	0.2.8.1.12.5.8.9.7	search with cache (only 1: intros A x P H y H0; only 1: intro H1; only 1: intros h1 h2; only 1: destruct h2; only 1: intro H; only 1: destruct H; only 1: intro H; only 1: destruct H, 1; only 1: reflexivity).	3.95133304596	42318
Coq.Init.Logic.map_subst	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00727105140686	3
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00722289085388	2
Coq.Init.Logic.rew_swap	40	0.2.3.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.012766122818	25
Coq.Init.Logic.rew_compose	40	2.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00723600387573	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00601696968079	2
Coq.Init.Logic.eq_trans_map_distr	40	0.1.6.7	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.178385972977	631
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e; only 1: reflexivity).	0.00857090950012	13
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.8	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0287549495697	127
Coq.Init.Logic.eq_trans_rew_distr	40	0.6	search with cache (only 1: destruct e'; only 1: reflexivity).	0.00868797302246	16
Coq.Init.Logic.rew_const	40	0.5.9	search with cache (only 1: intros A C h1 h2; only 1: destruct e; only 1: trivial).	0.136682987213	327
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	3.6.1	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0172197818756	147
Coq.Init.Logic.inhabited_covariant	40
Coq.Init.Logic.eq_stepl	40	1.9.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0266761779785	178
Coq.Init.Logic.iff_stepl	40	11.11.3.2	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	1.26020598412	9125
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.0.5.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0165750980377	37
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00742101669312	2
Coq.Init.Logic_Type.identity_sym	40	0.6	search with cache (only 1: destruct 1; only 1: trivial).	0.00651907920837	14
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00590109825134	2
Coq.Init.Logic_Type.identity_congr	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00631284713745	3
Coq.Init.Logic_Type.not_identity_sym	40	0.39.2	search with cache (only 1: destruct 2; only 1: reflexivity || destruct H; only 1: trivial).	0.35600399971	4422
Coq.Init.Logic_Type.identity_ind_r	40	5.6.7	search with cache (only 1: intros A P H; only 1: destruct 2; only 1: assumption).	0.0518319606781	490
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00618886947632	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00638699531555	3
Coq.Init.Specif.sigT_eta	40	2.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.00781297683716	5
Coq.Init.Specif.sig_eta	40	3.14	search with cache (only 1: destruct p; only 1: reflexivity).	0.0181369781494	151
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: auto).	0.00736904144287	2
Coq.Init.Specif.sig2_eta	40	0.2	search with cache (only 1: destruct p; only 1: reflexivity).	0.00744891166687	4
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00934386253357	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00796103477478	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0105969905853	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.2.22.0	search with cache (only 1: destruct p', q'; only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).	1.31313610077	2978
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00920104980469	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.00934100151062	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.4	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.150205135345	126
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.4.9.5.2.3	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	0.935057878494	5667
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00856876373291	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.0.11.8.0.22	search with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.16855096817	5420
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.2.2.6.7.4.4	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	2.67417907715	8374
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00917315483093	2
Coq.Init.Specif.eq_exist2_uncurried	40
Coq.Init.Specif.eq_sig2_uncurried	40	0.0.0.6.4.7.12	search with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.766894102097	2335
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.1.1.3.2.5.2	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	2.25691604614	5597
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00859904289246	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.1	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00668501853943	13
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0197651386261	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.1.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: unfold Qeq; only 1: auto with qarith).	0.470673084259	337
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.0.0.0.0.0.3	search with cache (only 1: intros [[| n| n] d] Ha; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence).	0.0769000053406	10
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	0.7.62.0	search with cache (only 1: constructor; only 1: destruct n; only 1: now try destruct p; only 1: reflexivity).	22.0738461018	28050
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.00560712814331	1
Coq.QArith.Qfield.ex2	40	0.1.1.0.4.3.3.3	search with cache (only 1: unfold Qeq, Qplus; only 1: intro; only 1: intro; only 1: f_equal; only 1: simpl; only 1: ring; only 1: rewrite Pos.mul_comm; only 1: now constructor).	2.1523270607	2038
Coq.QArith.Qfield.ex3	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0160980224609	3
Coq.QArith.Qfield.ex4	40	1	search with cache (only 1: auto with qarith).	0.0112628936768	2
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.011950969696	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0122129917145	1
Coq.QArith.Qfield.ex7	40	0.39	search with cache (only 1: intro n; only 1: ring).	1.28122186661	826
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0139210224152	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0125160217285	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: intros; only 1: ring).	0.0303440093994	6
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0208880901337	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40	8.31	search with cache (only 1: fix even_spec 1; only 1: trivial).	12.5449318886	20759
Coq.QArith.Qcanon.Qclt_alt	40	5	search with cache (only 1: easy').	0.00889301300049	6
Coq.QArith.Qcanon.Qcgt_alt	40	0.1.0.1.3	search with cache (only 1: split; only 1: unfold Qccompare; only 1: apply Z.gt_lt_iff; only 1: unfold Qccompare; only 1: apply Z.gt_lt_iff).	0.0278661251068	10
Coq.QArith.Qcanon.Qcle_alt	40	0	search with cache (only 1: auto with *).	0.00660991668701	1
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: discriminate).	0.00934290885925	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	8.0.56.0	search with cache (only 1: unfold Q2Qc; only 1: intros H1; only 1: qc; only 1: ring).	7.30242204666	14061
Coq.QArith.Qcanon.Qcplus_0_r	40	9.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.216418981552	104
Coq.QArith.Qcanon.Qcplus_comm	40	7.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.14771604538	10
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	13.0.3	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.813235998154	361
Coq.QArith.Qcanon.Qcmult_assoc	40	7.0.3.23.3	search with cache (only 1: intro n; only 1: intro p; only 1: intros; only 1: qc; only 1: ring).	9.37897896767	11299
Coq.QArith.Qcanon.Qcmult_0_l	40	1	search with cache (only 1: auto with qarith).	0.00671911239624	2
Coq.QArith.Qcanon.Qcmult_0_r	40	3.0.74.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	9.89551901817	25916
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40
Coq.QArith.Qcanon.Qcmult_comm	40
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	0.2.2	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: qc; only 1: ring).	0.157515048981	38
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	41.6.20	search with cache (only 1: intros; only 1: apply Z.ge_le; only 1: apply StrictOrder_Irreflexive).	2.63478803635	6772
Coq.QArith.Qcanon.Qcle_antisym	40	17	search with cache (only 1: auto with *).	0.572047948837	671
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	4.0.0.0.3.0.5.4.8.3.0	search with cache (only 1: intros; only 1: contradict H; only 1: intuition; only 1: contradict H; only 1: destruct (Qeq_dec x y) as [H| H]; only 1: contradict H; only 1: subst; only 1: auto with qarith; only 1: contradict H; only 1: subst; only 1: auto with qarith).	17.6812348366	22226
Coq.QArith.Qcanon.Qclt_le_weak	40	8.2.0	search with cache (only 1: unfold Qcle; only 1: intros (q, hq) (q', hq') H; only 1: auto with qarith).	0.20901799202	322
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40
Coq.QArith.Qcanon.Qcnot_lt_le	40	5.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intuition).	0.0266129970551	34
Coq.QArith.Qcanon.Qcnot_le_lt	40	8.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intuition).	0.0205719470978	33
Coq.QArith.Qcanon.Qclt_not_le	40	1.7.8.8.0.1	search with cache (only 1: unfold Qclt; only 1: intro H; only 1: intro A; only 1: elim H; only 1: unfold Qcle, Qclt; only 1: auto with qarith).	12.9584059715	19655
Coq.QArith.Qcanon.Qcle_not_lt	40	1.0.19.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intro EQ; only 1: intros; only 1: auto with qarith).	2.39477682114	2981
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.5.1.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: unfold Qlt, Qle; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0145227909088	24
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	0.0.0.0.11.1.0.0.0	search with cache (only 1: unfold Qcmult, Qcle, Qclt; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_lt_r; only 1: rewrite !Qred_correct in * |-; only 1: eauto; only 1: rewrite !Qred_correct in * |-; only 1: eauto).	7.06485390663	6254
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.4.0	search with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	0.0477328300476	38
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40	1.10	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.207801103592	133
Coq.QArith.Qcanon.Qcrt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.17	search with cache (only 1: repeat split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	5.51987886429	4615
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	2.0.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.976288080215	699
Coq.QArith.Qreals.IZR_nz	40	0	search with cache (only 1: auto with real).	0.00969409942627	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.0.2.0.0.0.3.0	search with cache (only 1: unfold Qle, Q2R; only 1: simpl; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	0.264601945877	216
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	4	search with cache (only 1: reflexivity).	0.00650691986084	5
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	7.1	search with cache (only 1: symmetry; only 1: easy').	0.0190131664276	22
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	17	search with cache (only 1: reflexivity).	0.0167338848114	126
Coq.QArith.QArith_base.Qeq_sym	40	2	search with cache (only 1: now subst).	0.00709199905396	3
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.113536119461	97
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.00596499443054	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.00546598434448	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto with qarith).	0.00910496711731	4
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.00653409957886	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	3.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.0432109832764	31
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.2.0.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.227112054825	92
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40	0.13.2	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: tauto).	5.34385299683	2055
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	25.7	search with cache (only 1: setoid_replace 1%Z with (1 * 1)%Z by now Z.nzsimpl; only 1: easy || now destruct Hm).	1.29004788399	1092
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.35.1	search with cache (only 1: unfold Qeq; only 1: intros (a', H); only 1: simpl; only 1: now Z.nzsimpl).	2.80290985107	3254
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0228481292725	5
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40	1.0.0.1	search with cache (only 1: unfold Qeq; only 1: intros; only 1: simpl; only 1: ring).	0.0192549228668	6
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.3	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.022527217865	8
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	2.10.0.9.7.0	search with cache (only 1: red; only 1: simpl in *; only 1: intros XY YZ; only 1: intros; only 1: simpl_mult; only 1: ring).	6.06308603287	6852
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl in *; only 1: tauto).	0.0098180770874	3
Coq.QArith.QArith_base.Qmult_0_r	40	5.1.0.1	search with cache (only 1: red; only 1: simpl in *; only 1: intros; only 1: ring).	0.0889399051666	77
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40
Coq.QArith.QArith_base.Qmult_comm	40	1.3.0.0.13	search with cache (only 1: intros n m; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.36443710327	1013
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0742099285126	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	0	search with cache (only 1: now subst).	0.00657510757446	1
Coq.QArith.QArith_base.inject_Z_opp	40	4	search with cache (only 1: tauto).	0.0068371295929	5
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.7	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.18731880188	165
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	17.5	search with cache (only 1: red; only 1: f_equiv).	0.158066987991	438
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	6.1	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	0.0632920265198	9
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	29	search with cache (only 1: Z.Private_Tac.order).	3.93082308769	8052
Coq.QArith.QArith_base.Qnot_le_lt	40	24.9	search with cache (only 1: unfold Qle; only 1: apply Z.nle_gt).	3.03556108475	2430
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.00532412528992	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.00461006164551	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.1.2.1.2.0.2.0.6	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: intro; only 1: auto with qarith; only 1: auto with qarith).	8.02360987663	4675
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	1.0.0.0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: intros x x' Hx; only 1: rewrite Hx; only 1: auto with qarith; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	5.01176309586	1339
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	10.0.38	search with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).	2.1826300621	3968
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.2.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.083771944046	13
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.3.0.0.2.0.0.1.1	search with cache (only 1: intros; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	2.9917280674	3276
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	2.3.3.4	search with cache (only 1: intros [[| n| n] d] Ha; only 1: reflexivity; only 1: reflexivity; only 1: now subst).	0.154053926468	184
Coq.QArith.Qabs.Qabs_neg	40	2.8.0.1.0.1.1	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: auto with *; only 1: reflexivity).	3.81358408928	4038
Coq.QArith.Qabs.Qabs_nonneg	40	0.1.1.0.17	search with cache (only 1: intros (x, y); only 1: destruct x; only 1: auto with *; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.642857074738	1145
Coq.QArith.Qabs.Zabs_Qabs	40	1.0.0.0	search with cache (only 1: simpl; only 1: red; only 1: simpl in *; only 1: congruence).	0.0122148990631	5
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	1.4	search with cache (only 1: red; only 1: trivial).	0.00656795501709	7
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00585579872131	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00643086433411	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	0.8.6.1.9.1	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: apply h1; only 1: trivial).	2.18123197556	11940
Coq.Classes.CMorphisms.subrelation_id_proper	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.00734901428223	2
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0101599693298	1
Coq.Classes.CMorphisms.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: assumption).	0.00937914848328	4
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.0113699436188	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	4.0.35.10	search with cache (only 1: intros Hfst Hsnd; only 1: intros n m; only 1: intros; only 1: simpl_crelation).	0.629121780396	3338
Coq.Classes.CMorphisms.pointwise_subrelation	40	0.0.2	search with cache (only 1: hnf; only 1: intros; only 1: simpl_crelation).	0.0137851238251	5
Coq.Classes.CMorphisms.forall_subrelation	40	1.4.5	search with cache (only 1: intros; only 1: intro x; only 1: firstorder).	0.0274012088776	88
Coq.Classes.CMorphisms.iff_impl_subrelation	40	3	search with cache (only 1: simpl_crelation).	0.0131561756134	11
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00766515731812	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	1	search with cache (only 1: firstorder).	0.011214017868	11
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00814199447632	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	0.141103029251	3
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.55872797966	362
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.634059906006	712
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	5.3	search with cache (only 1: apply (@symmetry _ _ _ _); only 1: firstorder).	2.18823003769	838
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	6.1	search with cache (only 1: symmetry; only 1: firstorder).	1.03016591072	607
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.0770978927612	8
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.294714927673	174
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	1.7727291584	103
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	3.0	search with cache (only 1: hnf; only 1: firstorder).	0.00827598571777	5
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.0176401138306	2
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	1	search with cache (only 1: simpl_crelation).	0.0118570327759	17
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	3	search with cache (only 1: simpl_crelation).	0.0115151405334	12
Coq.Classes.CMorphisms.flip_respectful	40	3.3	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0275518894196	22
Coq.Classes.CMorphisms.flip1	40	1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: auto).	0.00523686408997	4
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0041618347168	1
Coq.Classes.CMorphisms.eq_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00652503967285	1
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00441217422485	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00434494018555	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.1	search with cache (only 1: intros; only 1: reduce; only 1: subst; only 1: firstorder).	0.00886201858521	5
Coq.Classes.CMorphisms.proper_normalizes_proper	40	1.3	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0466339588165	6
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00531506538391	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.0.1.0	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: unfold flip, respectful; only 1: unfold respectful, relation_equivalence in *; only 1: intuition).	0.0110599994659	6
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.3.0.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x y H'; only 1: hnf; only 1: intuition).	0.870872020721	292
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	1.4.15.6	search with cache (only 1: intros x y H'; only 1: red; only 1: simpl_crelation; only 1: firstorder).	9.27992916107	9070
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.0.6	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.249032974243	209
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.2.8	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	3.37973093987	1906
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40	1.0.0.5.1.0.0.5.5.3.0.2.2	search with cache (only 1: reduce; only 1: intuition; only 1: split; only 1: intros; only 1: rewrite <- H; only 1: auto; only 1: split; only 1: constructor; only 1: intros; only 1: rewrite H; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: simpl_relation).	21.5487148762	32738
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.2.0	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.0163280963898	20
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	2.15	search with cache (only 1: intros H ?; only 1: auto).	0.0418088436127	148
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00426506996155	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00744700431824	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.282830953598	1
Coq.Classes.CRelationClasses.complement_inverse	40	2	search with cache (only 1: reflexivity).	0.00726509094238	3
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	4.27	search with cache (only 1: intro; only 1: auto).	0.0767512321472	526
Coq.Classes.CRelationClasses.flip_Reflexive	40	1	search with cache (only 1: firstorder).	0.00593018531799	2
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	15.3	search with cache (only 1: red; only 1: auto).	0.0341761112213	276
Coq.Classes.CRelationClasses.flip_PreOrder	40	2.0.23.2	search with cache (only 1: destruct H; only 1: split; only 1: tauto; only 1: firstorder).	0.109199047089	831
Coq.Classes.CRelationClasses.flip_StrictOrder	40	2	search with cache (only 1: firstorder).	0.0182361602783	3
Coq.Classes.CRelationClasses.flip_PER	40	4	search with cache (only 1: firstorder).	0.0262258052826	5
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0275251865387	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00685691833496	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00716304779053	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	6.13.21	search with cache (only 1: intro z; only 1: red; only 1: auto).	0.276933908463	2541
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00810599327087	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00870513916016	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.00964617729187	2
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0128848552704	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0307600498199	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.2.5.3	search with cache (only 1: intros; only 1: apply PreOrder_Transitive with y; only 1: auto; only 1: auto).	0.136759996414	370
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	4.1	search with cache (only 1: reduce; only 1: firstorder).	0.00507307052612	7
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00457406044006	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0057520866394	1
Coq.Classes.Equivalence.pointwise_equivalence	40	6.13.0.8	search with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.350168943405	919
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	19.12.11	search with cache (only 1: destruct y; only 1: destruct x; only 1: now simpl).	1.26343584061	3548
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	10	search with cache (only 1: reflexivity).	0.00818681716919	21
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00707387924194	1
Coq.Classes.RelationClasses.flip_Reflexive	40	5.1.1.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: trivial).	0.0134899616241	42
Coq.Classes.RelationClasses.flip_Antisymmetric	40	2	search with cache (only 1: firstorder).	0.0106501579285	3
Coq.Classes.RelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0252680778503	4
Coq.Classes.RelationClasses.flip_StrictOrder	40	4	search with cache (only 1: firstorder).	0.0193300247192	5
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0297250747681	2
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0273962020874	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	4	search with cache (only 1: firstorder).	0.00762414932251	5
Coq.Classes.RelationClasses.complement_Symmetric	40	3	search with cache (only 1: firstorder).	0.0110039710999	14
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0147290229797	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	1.0.0.0.2	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: firstorder).	0.0102608203888	8
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.0.2	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0136590003967	9
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	0	search with cache (only 1: firstorder).	0.00614500045776	1
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00922584533691	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	2	search with cache (only 1: firstorder).	0.0286269187927	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.1	search with cache (only 1: hnf; only 1: firstorder).	0.00999116897583	3
Coq.Classes.Morphisms.eq_proper_proxy	40	0.0.3	search with cache (only 1: transitivity x; only 1: trivial; only 1: trivial).	0.00872993469238	6
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00657105445862	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00693011283875	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.0.30.7.1.15	search with cache (only 1: intro p; only 1: simpl in *; only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	1.28833889961	7052
Coq.Classes.Morphisms.subrelation_id_proper	40	1	search with cache (only 1: firstorder).	0.00706815719604	2
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0128409862518	1
Coq.Classes.Morphisms.subrelation_refl	40	2	search with cache (only 1: firstorder).	0.0077691078186	3
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00742506980896	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	3.9.1.3.1	search with cache (only 1: compute; only 1: intros x' x'' Hx' Hx''; only 1: firstorder; only 1: subst; only 1: firstorder).	1.55126786232	1129
Coq.Classes.Morphisms.pointwise_subrelation	40	1.0.18	search with cache (only 1: red; only 1: intros; only 1: firstorder).	0.0314791202545	212
Coq.Classes.Morphisms.forall_subrelation	40	0.4	search with cache (only 1: unfold subrelation; only 1: firstorder).	0.0134599208832	19
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00871086120605	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00760889053345	2
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.00543999671936	3
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	0	search with cache (only 1: firstorder).	0.0690739154816	1
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	2.53096199036	388
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	1.95647501945	720
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.0279421806335	80
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	7.1	search with cache (only 1: symmetry; only 1: firstorder).	0.326561927795	449
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	7.1	search with cache (only 1: symmetry; only 1: firstorder).	0.0427000522614	22
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.391664981842	172
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	1.37815904617	1002
Coq.Classes.Morphisms.symmetric_equiv_flip	40	1.3	search with cache (only 1: unfold relation_equivalence in *; only 1: firstorder).	0.00676989555359	6
Coq.Classes.Morphisms.compose_proper_obligation_1	40	0.2	search with cache (only 1: apply H; only 1: auto).	0.0059449672699	4
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.1.5	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00636911392212	9
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	5	search with cache (only 1: firstorder).	0.00631284713745	11
Coq.Classes.Morphisms.flip_respectful	40	8.0	search with cache (only 1: simpl_relation; only 1: firstorder).	0.0261008739471	10
Coq.Classes.Morphisms.flip1	40	4	search with cache (only 1: apply H).	0.00475192070007	5
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00387597084045	1
Coq.Classes.Morphisms.eq_subrelation	40	1.0	search with cache (only 1: unfold subrelation; only 1: simpl_relation).	0.0110709667206	11
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00471305847168	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00387406349182	2
Coq.Classes.Morphisms.proper_proper	40	0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0119140148163	3
Coq.Classes.Morphisms.proper_normalizes_proper	40	2.5	search with cache (only 1: red in H0; only 1: firstorder).	0.0179641246796	19
Coq.Classes.Morphisms.flip_atom	40	2.1	search with cache (only 1: unfold flip, respectful; only 1: firstorder).	0.00668501853943	5
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	1.3.0.0	search with cache (only 1: unfold flip, respectful; only 1: intros; only 1: intro z; only 1: auto).	0.00762319564819	8
Coq.Classes.Morphisms.proper_sym_flip_2	40	4.0.0.2	search with cache (only 1: unfold flip, respectful; only 1: intros; only 1: intros x x' Hxx'; only 1: firstorder).	0.265964984894	73
Coq.Classes.Morphisms.proper_sym_impl_iff	40	6.2	search with cache (only 1: simpl_relation; only 1: firstorder).	0.104212999344	53
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	0	search with cache (only 1: firstorder).	0.00481081008911	1
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00567889213562	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0.18	search with cache (only 1: intros l1 l2; only 1: firstorder).	0.225057840347	165
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00494813919067	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.00564980506897	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	1	search with cache (only 1: firstorder).	0.0127148628235	2
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.300781965256	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	15	search with cache (only 1: firstorder).	0.179454088211	357
Coq.Classes.RelationPairs.SndRel_ProdRel	40	4.0.0.2.1	search with cache (only 1: split; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.0919718742371	181
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00570178031921	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00673317909241	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0063738822937	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00564002990723	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.00640916824341	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	1.10.13	search with cache (only 1: intro; only 1: compute; only 1: firstorder).	0.887601137161	412
Coq.Classes.DecidableClass.Decidable_sound	40	57.55.2	search with cache (only 1: intro z; only 1: intros [Hl Hr]; only 1: apply Hr).	26.6742649078	483480
Coq.Classes.DecidableClass.Decidable_complete	40	58.57.5	search with cache (only 1: intro z; only 1: intros [Hl Hr]; only 1: apply Hr).	28.0981600285	415782
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.6.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: intuition; only 1: tauto).	0.0883991718292	79
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	10	search with cache (only 1: apply Nat.leb_le).	0.0446951389313	66
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	17	search with cache (only 1: firstorder).	0.0206658840179	136
Coq.Classes.SetoidClass.setoid_sym	40	18	search with cache (only 1: firstorder).	0.0202498435974	145
Coq.Classes.SetoidClass.setoid_trans	40	13	search with cache (only 1: intuition).	0.099693775177	60
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	2.4.3.17	search with cache (only 1: intros n; only 1: intros; only 1: destruct H; only 1: now rewrite <- H1).	2.35618281364	1934
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	2.0.3.16.18	search with cache (only 1: intros n m p LT; only 1: destruct m as (x', p'); only 1: simpl; only 1: compute; only 1: firstorder).	11.5469501019	9262
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	2.0.0	search with cache (only 1: simpl_relation; only 1: unfold relation_equivalence in *; only 1: firstorder).	0.162915945053	5
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0.2	search with cache (only 1: intros a b Ha Hb; only 1: firstorder).	0.479090929031	4
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.3.2.7	search with cache (only 1: intros m; only 1: induction l; only 1: intuition; only 1: trivial).	0.243625164032	148
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.00552582740784	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	5.0	search with cache (only 1: simpl_relation; only 1: apply H).	0.0571179389954	14
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.1.0	search with cache (only 1: intro; only 1: intro; only 1: firstorder).	0.0141389369965	5
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	2.0	search with cache (only 1: unfold flip in *; only 1: simpl_relation).	0.0116379261017	4
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	8	search with cache (only 1: trivial).	0.00690507888794	9
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.1.0.1.5	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.124711990356	183
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	4.0.0.0.2.0.3	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	0.300559043884	366
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	1.5.1.5.6.22	search with cache (only 1: intros LT EQ; only 1: split; only 1: intro H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intro H; only 1: now rewrite <- (id n), <- (id m), H).	10.8804299831	28497
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.00722193717957	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	8.0.1.0.1.0.14	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: now subst).	1.24119305611	1692
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.0	search with cache (only 1: simpl; only 1: now subst).	0.00565218925476	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	9.3.3.9	search with cache (only 1: intros a; only 1: rewrite !Pmult_nat_mult; only 1: unfold Pos.to_nat; only 1: now Nat.nzsimpl).	1.13879013062	1591
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	11	search with cache (only 1: decide equality).	0.0923569202423	75
Coq.PArith.BinPos.Pos.xI_succ_xO	40	30	search with cache (only 1: now subst).	0.131006002426	451
Coq.PArith.BinPos.Pos.succ_discr	40	2.5.28.11.19	search with cache (only 1: destruct p; only 1: intro; only 1: discriminate; only 1: easy; only 1: discriminate).	1.24429702759	5879
Coq.PArith.BinPos.Pos.pred_double_spec	40	2	search with cache (only 1: reflexivity).	0.0044629573822	3
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	2.0.0.1.2.3	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym).	0.144058942795	148
Coq.PArith.BinPos.Pos.double_succ	40	1.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00451588630676	3
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0.45.84.37	search with cache (only 1: red; only 1: compute; only 1: fix even_spec 1; only 1: now f_equal).	23.0716919899	156644
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0132038593292	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.5.0.0.1.0.0.0.2.1	search with cache (only 1: induction p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r; only 1: now f_equal).	3.23273205757	3531
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	0.0.4.0.0.0.0.5	search with cache (only 1: intro; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).	3.68278694153	6369
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0051109790802	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	search with cache (only 1: simpl; only 1: f_equal).	0.00554299354553	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.00612306594849	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0	search with cache (only 1: apply succ_inj; only 1: trivial).	0.00556397438049	2
Coq.PArith.BinPos.Pos.mul_1_r	40	1.9.2.5.2.3.15	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: congruence; only 1: simpl; only 1: now f_equal; only 1: trivial).	5.28822207451	15916
Coq.PArith.BinPos.Pos.mul_xO_r	40	2.0.0.1.2.5.4.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: now destruct p, q; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	5.94742894173	4214
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	1.22.0.1.7.0	search with cache (only 1: revert q r; only 1: split; only 1: apply mul_reg_r; only 1: revert q r; only 1: destruct 1; only 1: trivial).	32.3059930801	100187
Coq.PArith.BinPos.Pos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0913171768188	43
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0154781341553	1
Coq.PArith.BinPos.Pos.square_xO	40	3.0.1	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0125300884247	13
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0084969997406	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0209259986877	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0186820030212	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0178849697113	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0212440490723	6
Coq.PArith.BinPos.Pos.compare_xO_xO	40	5	search with cache (only 1: trivial).	0.0210778713226	66
Coq.PArith.BinPos.Pos.compare_xI_xI	40	2	search with cache (only 1: trivial).	0.00369000434875	3
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.2.0.10.4.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: now f_equal; only 1: now split).	0.314167022705	1487
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.1.0	search with cache (only 1: unfold lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0100848674774	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	11	search with cache (only 1: now intuition).	0.301819086075	169
Coq.PArith.BinPos.Pos.gt_lt_iff	40
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00748610496521	2
Coq.PArith.BinPos.Pos.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00771188735962	2
Coq.PArith.BinPos.Pos.ge_le_iff	40
Coq.PArith.BinPos.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.00895404815674	2
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00379300117493	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.7.1	search with cache (only 1: unfold le, ge; only 1: intro H; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.0862190723419	51
Coq.PArith.BinPos.Pos.nlt_1_r	40	9	search with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.0994160175323	73
Coq.PArith.BinPos.Pos.lt_1_succ	40	11	search with cache (only 1: now destruct p).	0.150013208389	219
Coq.PArith.BinPos.Pos.le_nlt	40	1.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.476693868637	178
Coq.PArith.BinPos.Pos.lt_nle	40
Coq.PArith.BinPos.Pos.lt_le_incl	40	6.0.2	search with cache (only 1: unfold lt, le; only 1: generalize (compare_succ_r p q); only 1: now do 2 destruct compare).	0.507919073105	199
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40	3.18.24.9.6	search with cache (only 1: intro H; only 1: intros EQ; only 1: intros n m; only 1: fix even_spec 1; only 1: auto).	38.3974339962	166555
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	0	search with cache (only 1: solve_proper).	0.0888500213623	1
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.3	search with cache (only 1: apply le_lteq; only 1: intuition).	0.0409841537476	24
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.2.0.0.10.35	search with cache (only 1: intro H1; only 1: intros; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	1.53075218201	4025
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	0.0.2.4.0.0.11.0.4	search with cache (only 1: revert p q r; only 1: unfold lt; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: unfold compare; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	4.08464407921	7937
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.0.1.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.00713086128235	6
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.1.4	search with cache (only 1: revert p q r; only 1: fix even_spec 1; only 1: trivial).	0.00766777992249	8
Coq.PArith.BinPos.Pos.add_le_mono_r	40	1.0.0.3	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0178198814392	25
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.5.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0772340297699	148
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.1.0.1.9.0	search with cache (only 1: unfold le; only 1: induction p; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl; only 1: simpl; only 1: trivial; only 1: apply iff_refl).	7.86762714386	4452
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.3	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.00756978988647	5
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.0.4.0	search with cache (only 1: destruct p; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso).	0.00986194610596	17
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00476717948914	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	4.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0137469768524	13
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.3.1.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: intros; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.00797295570374	8
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.0.1	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0195698738098	28
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0107870101929	11
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.2.0.0.10.8.4	search with cache (only 1: unfold le, sub; only 1: unfold ltb, lt; only 1: rewrite compare_sub_mask, <- sub_mask_nul_iff; only 1: destruct sub_mask; only 1: now split; only 1: now case sub_mask_spec; only 1: now split).	7.49309802055	15724
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.2.1.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: now subst; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.301418066025	209
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40	2.2.1.26.12	search with cache (only 1: apply max_r || apply max_l; only 1: induction n; only 1: now f_equal; only 1: easy; only 1: now f_equal).	1.53390812874	4464
Coq.PArith.BinPos.Pos.max_1_r	40	1.8	search with cache (only 1: apply max_l; only 1: apply le_1_l).	0.108242988586	191
Coq.PArith.BinPos.Pos.min_1_l	40
Coq.PArith.BinPos.Pos.min_1_r	40	1.1.0.2.0.1.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.162095069885	378
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.00644397735596	3
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.33	search with cache (only 1: rewrite !(PeanoNat.Nat.mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	1.15912222862	4806
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.8.1.3.18.2.2.18.25	search with cache (only 1: simpl; only 1: induction n; only 1: auto; only 1: simpl; only 1: induction n; only 1: simpl; only 1: f_equal; only 1: rewrite ?IHn; only 1: trivial).	14.9497988224	54175
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	3.0.0.11.0.0.1.2	search with cache (only 1: induction n; only 1: intro H; only 1: simpl; only 1: now destruct H; only 1: symmetry; only 1: simpl; only 1: f_equal; only 1: apply of_nat_succ).	3.2841629982	8514
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.1.0.4.0	search with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.00840401649475	10
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	0.18	search with cache (only 1: inversion 1; only 1: now subst).	0.249323129654	407
Coq.Arith.Le.le_elim_rel	40	1.4.15.9	search with cache (only 1: intros m IH; only 1: intros Base Step; only 1: fix le_div2 1; only 1: trivial).	2.44373106956	11849
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	107.0.25	search with cache (only 1: induction n; only 1: auto with arith; only 1: firstorder).	11.5011508465	64876
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.168739080429	1
Coq.Arith.Even.even_even_plus	40
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0557451248169	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.037201166153	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0369560718536	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.161905050278	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0375168323517	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0365099906921	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0371141433716	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0368738174438	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0367619991302	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.038468837738	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0371179580688	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0373251438141	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.0866401195526	1
Coq.Arith.Even.even_mult_l	40	0.0.6.0.46.80	search with cache (only 1: destruct m; only 1: Nat.nzsimpl; only 1: induction n; only 1: trivial; only 1: now do 2 constructor; only 1: parity_binop).	9.71712112427	78122
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0239131450653	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0366439819336	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0369930267334	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0606570243835	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0238769054413	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0239729881287	1
Coq.Arith.Minus.minus_n_O	40	2	search with cache (only 1: now destruct n).	0.00685691833496	3
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.041424036026	1
Coq.Arith.Minus.minus_diag_reverse	40	6.5.7.15.81	search with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: trivial; only 1: intros m IH; only 1: auto).	7.8727478981	63435
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	21.9.5	search with cache (only 1: Nat.induct p; only 1: reflexivity; only 1: trivial).	3.39823698997	5292
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	6.1.8.29	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: trivial; only 1: auto).	0.63985490799	1712
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	4.1.8.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	0.378091096878	1121
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	29.0.16	search with cache (only 1: intros a b Hb; only 1: subst; only 1: intuition).	4.63289999962	17834
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.00892686843872	3
Coq.Arith.Between.exists_le_S	40	0.0.30.7	search with cache (only 1: intros a; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	8.52845406532	20994
Coq.Arith.Between.exists_S_le	40	8.0.2.1	search with cache (only 1: intro n; only 1: intros m IH; only 1: apply Peano.le_S_n; only 1: auto with arith).	0.328411102295	712
Coq.Arith.Between.in_int_intro	40	1.1.2.0	search with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto).	0.00812983512878	8
Coq.Arith.Between.in_int_lt	40	9.11.1	search with cache (only 1: intros n m H1; only 1: intros (p, H); only 1: intuition PeanoNat.Nat.order).	0.692646026611	2015
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.00664710998535	2
Coq.Arith.Between.in_int_Sp_q	40	2.1.4	search with cache (only 1: intro n; only 1: intros * []; only 1: auto with arith).	0.0276958942413	33
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	2.2.1.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.0115079879761	11
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40	5.13	search with cache (only 1: fix gcd_greatest 1; only 1: trivial).	0.624229192734	1726
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40	3.4	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.0676798820496	61
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40	0.2.14	search with cache (only 1: fix le_div2 1; only 1: intros n m Hn; only 1: auto).	0.603820800781	1131
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	0.4.3.24.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: right; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	2.06748914719	12286
Coq.Arith.Div2.even_div2	40	0.24.1.5	search with cache (only 1: induction n; only 1: trivial; only 1: fix even_equiv 1; only 1: trivial).	5.6898059845	15527
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	3.34.0	search with cache (only 1: rewrite even_equiv; only 1: fix even_equiv 1; only 1: trivial).	5.16446185112	18730
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40	2.3.4.5.2.1.2.3.7	search with cache (only 1: Nat.induct n; only 1: now Nat.nzsimpl; only 1: intros p IH; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: apply eq_S; only 1: simpl; only 1: rewrite <- plus_n_Sm; only 1: auto).	17.7132999897	15570
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	1.9.0	search with cache (only 1: fix even_equiv 1; only 1: intro; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	0.168376922607	188
Coq.Arith.Div2.odd_S2n	40	1.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.00719904899597	4
Coq.Arith.Div2.div2_double	40
Coq.Arith.Div2.div2_double_plus_one	40	0.6	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: tauto).	0.147409915924	65
Coq.Arith.Plus.plus_assoc_reverse	40	2.0.2.0.4.0.0.13	search with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intro p; only 1: split; only 1: Nat.nzsimpl; only 1: auto; only 1: Nat.nzsimpl; only 1: auto).	22.5310280323	6955
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	12	search with cache (only 1: apply Nat.add_le_mono_l).	0.372298002243	79
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	7	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0675988197327	12
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	10.1.0.2.46	search with cache (only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intros m IH; only 1: Nat.nzsimpl; only 1: now right).	1.79940080643	2679
Coq.Arith.Plus.le_plus_r	40	5.0.31.0.55	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	38.4063930511	45061
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	17.1.2	search with cache (only 1: Nat.induct n; only 1: tauto; only 1: now f_equal).	9.53094291687	6325
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	4	search with cache (only 1: Nat.order).	0.00763487815857	5
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.0061571598053	1
Coq.Arith.Lt.le_lt_n_Sm	40	2	search with cache (only 1: apply Nat.lt_succ_r).	0.00858092308044	11
Coq.Arith.Lt.le_not_lt	40	2	search with cache (only 1: Nat.order).	0.00803089141846	3
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: intuition Nat.order).	0.00805807113647	1
Coq.Arith.Lt.neq_0_lt	40	3.0	search with cache (only 1: intro H1; only 1: Nat.auto').	0.00999712944031	5
Coq.Arith.Lt.lt_0_neq	40	6.0	search with cache (only 1: intro H1; only 1: Nat.order).	0.0110530853271	8
Coq.Arith.Lt.lt_n_S	40	21	search with cache (only 1: apply Nat.lt_succ_r).	0.0570390224457	209
Coq.Arith.Lt.lt_S_n	40	1	search with cache (only 1: apply Nat.succ_lt_mono).	0.0059061050415	2
Coq.Arith.Lt.S_pred	40	4.7.43	search with cache (only 1: Nat.cases ltac:(n); only 1: now Nat.nzsimpl; only 1: now Nat.nzsimpl).	1.85885190964	10929
Coq.Arith.Lt.S_pred_pos	40	8.3.2.1.0.52	search with cache (only 1: Nat.cases ltac:(n); only 1: intros H; only 1: exfalso; only 1: Nat.order; only 1: intros n _; only 1: reflexivity).	12.5542440414	28192
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	3.4.26	search with cache (only 1: inversion 1; only 1: Nat.order; only 1: auto).	0.521296024323	956
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.1.0.2.0.3.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	4.14695286751	9497
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	0.0.3.0.0.1.0.1.0.0.2.0.0.0.0.0.1.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: unfold ltof; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	35.3369710445	92528
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00365805625916	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00473093986511	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0043740272522	1
Coq.Arith.Wf_nat.gt_wf_rec	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.1.1.1.1.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.190387964249	212
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	24.2.20.32	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	2.29042482376	10746
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40
Coq.Arith.Compare_dec.le_gt_dec	40
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40
Coq.Arith.Compare_dec.ge_dec	40	2	search with cache (only 1: apply le_dec).	0.0736331939697	40
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	11	search with cache (only 1: apply Nat.le_decidable).	0.0165600776672	33
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.00437808036804	2
Coq.Arith.Compare_dec.not_eq	40	2	search with cache (only 1: apply Nat.lt_gt_cases).	0.0144550800323	3
Coq.Arith.Compare_dec.not_le	40	1	search with cache (only 1: apply Nat.lt_nge).	0.0055079460144	2
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0047709941864	1
Coq.Arith.Compare_dec.not_ge	40	4	search with cache (only 1: intuition Nat.order).	0.0381009578705	15
Coq.Arith.Compare_dec.not_lt	40	3	search with cache (only 1: apply Nat.le_ngt).	0.0303621292114	17
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	1.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: easy; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	0.753173828125	791
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.00496602058411	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.00527596473694	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00603604316711	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	0.0150289535522	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00621604919434	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	12.38.5.32	search with cache (only 1: Nat.cases n; only 1: do 2 Morphisms.f_equiv; only 1: simpl; only 1: now induction n).	2.85643386841	12522
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	1.0.0.0.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: apply eq_nat_refl).	0.0783669948578	83
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.202164173126	86
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	7.11	search with cache (only 1: fix odd_spec 1; only 1: Nat.auto').	0.0624539852142	269
Coq.Arith.EqNat.beq_nat_refl	40	3.2.0.1.1	search with cache (only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: easy).	0.0508799552917	85
Coq.Arith.EqNat.beq_nat_true	40	13.0.0.0.0.0.1.1.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto).	29.0107851028	42728
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	9.1.1	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	0.131854057312	270
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	5.4.8	search with cache (only 1: induction n; only 1: auto; only 1: firstorder).	1.06652712822	272
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	search with cache (only 1: trivial).	0.00515007972717	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	3.5.0.18.0	search with cache (only 1: intros A A_wd A0 AS; only 1: compute; only 1: induction n; only 1: auto; only 1: auto).	20.7709269524	33221
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00519204139709	2
Coq.Arith.PeanoNat.Nat.pred_0	40	1	search with cache (only 1: trivial).	0.00433301925659	2
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: auto).	0.00387120246887	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00456213951111	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: auto).	0.00391912460327	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.2.0.0.0	search with cache (only 1: simpl; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.00645399093628	8
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.1.4	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial).	0.00615191459656	9
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00461292266846	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	0.0.1.22.4.1	search with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	7.37108397484	21879
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.00968194007874	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.1.1	search with cache (only 1: simpl; only 1: revert m; only 1: easy).	0.00989007949829	18
Coq.Arith.PeanoNat.Nat.max_l	40	0.1.2.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.38552999496	7979
Coq.Arith.PeanoNat.Nat.max_r	40	0.1.2.0.1.0.0.1.0	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	1.56187105179	3948
Coq.Arith.PeanoNat.Nat.min_l	40	0.1.2.0.1.0.0.2.0	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.52424407005	6102
Coq.Arith.PeanoNat.Nat.min_r	40	0.1.2.0.0.0.0.1.0.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.33514618874	5826
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	22	search with cache (only 1: now nzsimpl).	0.653500080109	2101
Coq.Arith.PeanoNat.Nat.pow_0_r	40	8	search with cache (only 1: reflexivity).	0.00501608848572	9
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	18	search with cache (only 1: now split).	0.0766880512238	146
Coq.Arith.PeanoNat.Nat.square_spec	40	2.1	search with cache (only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: now f_equal).	0.0223760604858	16
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	10.7.5.3.5	search with cache (only 1: red; only 1: intro H1; only 1: elim H1; only 1: intro n; only 1: now nzsimpl).	0.7428150177	3889
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	4	search with cache (only 1: inversion 1).	0.0132949352264	5
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	3.2.3.37.1	search with cache (only 1: intro H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: induction n; only 1: now nzsimpl; only 1: now nzsimpl').	2.64242887497	8188
Coq.Arith.PeanoNat.Nat.gcd_divide	40	10.26.47	search with cache (only 1: intro; only 1: fix even_spec 1; only 1: intuition Private_Tac.order).	31.7549481392	116217
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	1.0.2.0.0.1.2	search with cache (only 1: fix gcd_divide 1; only 1: intros [| a] b; only 1: simpl; only 1: now exists 0; only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.270380020142	381
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.1	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0402188301086	36
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	2.12.3	search with cache (only 1: fix gcd_divide 1; only 1: intros x y H; only 1: intuition).	1.89225697517	4367
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	15	search with cache (only 1: apply le_0_l).	0.0396931171417	101
Coq.Arith.PeanoNat.Nat.div2_double	40	0.2.3.11.1.7.32	search with cache (only 1: apply succ_inj_wd; only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now rewrite add_0_l; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	20.7447969913	36678
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.1.0.1.2.1	search with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now f_equal; only 1: rewrite add_succ_r; only 1: now f_equal).	0.22080206871	77
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	0.4.7.31	search with cache (only 1: induct ltac:(n); only 1: order'; only 1: fix le_div2 1; only 1: trivial).	0.985769033432	2613
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	7.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0428869724274	28
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	2.0.16	search with cache (only 1: induction n; only 1: easy; only 1: now destruct compare).	0.38255906105	714
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	1.2.6.15	search with cache (only 1: intros n m H; only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	20.5123400688	61665
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.00709295272827	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	2	search with cache (only 1: eauto).	0.00562500953674	3
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	3	search with cache (only 1: inversion H).	0.00574493408203	4
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	6.0	search with cache (only 1: intros a b Ha Hb; only 1: Nat.order).	0.00905084609985	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0.6.14.3.27	search with cache (only 1: pattern m; only 1: intro p; only 1: apply Nat.le_succ_l; only 1: apply Nat.lt_succ_r; only 1: trivial).	3.21323680878	7159
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00576400756836	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	2	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.00702095031738	3
Coq.Arith.Gt.le_not_gt	40	1.7.48	search with cache (only 1: revert n m; only 1: fix le_div2 1; only 1: intuition Nat.order).	3.20422506332	4752
Coq.Arith.Gt.gt_not_le	40	1.9.60	search with cache (only 1: revert n m; only 1: fix le_div2 1; only 1: intuition Nat.order).	11.4462509155	21114
Coq.Arith.Gt.le_S_gt	40	5.2	search with cache (only 1: intro; only 1: trivial).	0.0172698497772	16
Coq.Arith.Gt.gt_S_le	40	6.1.0.34.0.32	search with cache (only 1: intros; only 1: apply Nat.le_ngt; only 1: apply Nat.lt_nge; only 1: apply Nat.succ_lt_mono; only 1: apply Nat.lt_succ_lt_pred; only 1: auto).	1.65068006516	8324
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00564098358154	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.00580811500549	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	13.6.7.6.2	search with cache (only 1: Nat.induct ltac:(n); only 1: right; only 1: trivial; only 1: left; only 1: intuition).	5.07677221298	7761
Coq.Arith.Gt.plus_gt_reg_l	40
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.006028175354	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	2.7	search with cache (only 1: destruct 1; only 1: trivial).	0.0157399177551	59
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00863409042358	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00772094726562	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00781178474426	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00764203071594	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00795793533325	4
Coq.Logic.JMeq.JMeq_congr	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00795102119446	4
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0127019882202	4
Coq.Logic.JMeq.eq_dep_id_JMeq	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00846385955811	3
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0086498260498	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.3.8.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.117139101028	340
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.1.36.3	search with cache (only 1: intro x; only 1: intro H; only 1: destruct H; only 1: trivial).	0.283212900162	3233
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.1.0.9	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0287530422211	130
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	0.3	search with cache (only 1: intros; only 1: tauto).	0.0162448883057	29
Coq.Logic.Classical_Prop.not_imply_elim	40	2.0.0.0.2.0.0.0.2.2	search with cache (only 1: intros A; only 1: intros n m; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: assert (p₀ : P 0 <-> A); only 1: intuition; only 1: tauto; only 1: unfold P; only 1: tauto; only 1: intuition; only 1: tauto).	0.648813962936	1012
Coq.Logic.Classical_Prop.not_imply_elim2	40	4.0.1	search with cache (only 1: intros A; only 1: intros h; only 1: auto with arith).	0.00945401191711	11
Coq.Logic.Classical_Prop.imply_to_or	40	8.6	search with cache (only 1: intuition; only 1: tauto).	0.199514865875	219
Coq.Logic.Classical_Prop.imply_to_and	40	0.7	search with cache (only 1: intros EM R H; only 1: tauto).	0.015989780426	18
Coq.Logic.Classical_Prop.or_to_imply	40	0	search with cache (only 1: tauto).	0.00588512420654	1
Coq.Logic.Classical_Prop.not_and_or	40	7.5	search with cache (only 1: intros; only 1: tauto).	0.0472061634064	107
Coq.Logic.Classical_Prop.or_not_and	40	0	search with cache (only 1: tauto).	0.00782299041748	1
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.00703811645508	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.00708508491516	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.00620198249817	1
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.00767707824707	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	1.3.1.12	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl in *; only 1: eauto).	0.0547311306	361
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.17.17.15	search with cache (only 1: intro x; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.373300075531	3735
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40	6.13	search with cache (only 1: split; only 1: abstract now inversion 1).	3.12123894691	427
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	30.7	search with cache (only 1: intro y; only 1: CRelationClasses.simpl_crelation).	0.830439090729	2831
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.3.0.0.0.14.2.1	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder  (subst; auto); only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	6.18502998352	18625
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	7.8.17.17.13.9	search with cache (only 1: red; only 1: intro z; only 1: firstorder; only 1: apply H; only 1: intros; only 1: firstorder).	35.0611388683	87211
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	1.0.1.3.0.1	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.115272045135	119
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.7	search with cache (only 1: intros; only 1: apply H).	0.0129668712616	32
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	2.3.1.2.2	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intros; only 1: firstorder).	1.2115380764	598
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40	8.19.0.15.4.0.7.16.3	search with cache (only 1: intro H; only 1: intro z; only 1: unfold not; only 1: destruct (H z); only 1: left; only 1: elim eq_sym with (1 := H0); only 1: trivial; only 1: elim eq_sym with (1 := H0); only 1: auto).	10.1925449371	143451
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	6.0.4.8.2	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.0586640834808	775
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	2.2.0.13.31	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	0.29860496521	3839
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.2.3.4.6	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.19705080986	1049
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	1.2.3.3.7.9.7	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: apply abs).	11.442358017	30762
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	1.1	search with cache (only 1: unfold not; only 1: firstorder).	0.010244846344	16
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	2.0	search with cache (only 1: unfold not; only 1: firstorder).	0.00851106643677	12
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.8.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0691361427307	104
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.00851488113403	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00784707069397	3
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.00803589820862	4
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00808310508728	6
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	2.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00838994979858	6
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.5.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0268239974976	55
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	search with cache (only 1: reflexivity).	0.00638294219971	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	2	search with cache (only 1: reflexivity).	0.00621700286865	3
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.1.0	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.00783395767212	8
Coq.Logic.HLevels.false_hprop	40	7.0	search with cache (only 1: intros p q; only 1: destruct p).	0.00705909729004	9
Coq.Logic.HLevels.true_hprop	40	3.2.4.19	search with cache (only 1: red; only 1: intros; only 1: destruct p, q; only 1: trivial).	0.139417886734	1460
Coq.Logic.HLevels.not_hprop	40	0.3.5.6.4	search with cache (only 1: intros; only 1: intro H1; only 1: symmetry; only 1: apply functional_extensionality; only 1: contradiction).	0.0853710174561	987
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40	7.14.10	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: auto).	2.19934415817	4807
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	1.0.1.0.2.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct epsilon_statement with (P := P); only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.0359840393066	25
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.3.3.2.10.7	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	2.45593595505	3381
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.0.2.10.12	search with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0846240520477	609
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00683188438416	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	2.23.1	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.115693092346	837
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	0.15.30	search with cache (only 1: intro H; only 1: inversion 1; only 1: reflexivity).	1.05698609352	9827
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	2.8	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0213248729706	67
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.9.0.0.14.4	search with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.484899997711	3167
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	8.4	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0421001911163	156
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.9.0.0.8.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.295460939407	1386
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	4.9.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: reflexivity).	0.0989229679108	488
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	3.8.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: split).	0.0785689353943	307
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	20.14.2.19	search with cache (only 1: intro H; only 1: destruct 1; only 1: subst; only 1: auto).	0.774574995041	5116
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	10.0	search with cache (only 1: red; only 1: auto).	0.0286321640015	152
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	2.7.1.1.3	search with cache (only 1: intros; only 1: intro UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).	0.236540079117	2099
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	4.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.00756907463074	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0103378295898	2
Coq.Logic.EqdepFacts.f_eq_dep	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.0209839344025	15
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00680112838745	2
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: reflexivity).	0.00678706169128	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	8.4	search with cache (only 1: intros; only 1: auto).	0.0397529602051	278
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	6.6	search with cache (only 1: intros; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.501696109772	129
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	4.1.0	search with cache (only 1: intro A; only 1: intros; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.480662822723	8
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	18.12	search with cache (only 1: intros [Hl Hr]; only 1: auto).	2.64800786972	13604
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.3.0.0.10.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct H; only 1: exact H; only 1: apply False_rec; only 1: auto).	0.0689301490784	714
Coq.Logic.Decidable.dec_True	40	6.12	search with cache (only 1: red; only 1: auto).	0.0172848701477	195
Coq.Logic.Decidable.dec_False	40	0.13	search with cache (only 1: red; only 1: auto).	0.00952696800232	90
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0142951011658	2
Coq.Logic.Decidable.dec_and	40	0.2.0	search with cache (only 1: unfold decidable; only 1: intros A P H; only 1: tauto).	0.0171971321106	5
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00845789909363	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0127019882202	2
Coq.Logic.Decidable.dec_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0173940658569	3
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00791001319885	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00804495811462	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0139870643616	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0129060745239	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00934505462646	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0279860496521	2
Coq.Logic.Decidable.not_true_iff	40	1.1.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00709986686707	7
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00595784187317	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00930190086365	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0113580226898	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0129659175873	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0618870258331	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0113949775696	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0117909908295	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0124588012695	2
Coq.Logic.Decidable.not_or_iff	40	0	search with cache (only 1: tauto).	0.00855898857117	1
Coq.Logic.Decidable.not_and_iff	40	1	search with cache (only 1: tauto).	0.0066020488739	2
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0149910449982	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0151450634003	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	1.16.2.118.22	search with cache (only 1: split; only 1: fix gcd_greatest 1; only 1: intuition auto; L.MO.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: constructor; only 1: L.MO.order).	34.9176061153	37746
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition_in).	0.00939893722534	4
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: induct s x; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in; only 1: intuition_in).	0.160088062286	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	6.1.0.2.1.0	search with cache (only 1: destruct s; only 1: red; only 1: tauto; only 1: simpl; only 1: inv; only 1: eauto with *).	1.12162208557	630
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.1.0.1	search with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.479166030884	12
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0659589767456	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0	search with cache (only 1: eauto with *).	0.00785994529724	1
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	1.3	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.0361931324005	24
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00606107711792	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	10	search with cache (only 1: ok).	0.362038135529	170
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.0.18	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0271229743958	187
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	2.0.6.0.61.25	search with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: auto).	36.7199239731	144778
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.00999808311462	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	1.1.1.1.1.4.19	search with cache (only 1: induction 1; only 1: repeat split; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	30.1215639114	13404
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40	1.54	search with cache (only 1: fix le_div2 1; only 1: eauto with *).	4.46161198616	14937
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: split; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: unfold linear_union; only 1: rewrite treeify_spec, union_list_spec, !rev_elements_rev; only 1: rewrite !InA_rev, InA_nil, !elements_spec1 by auto_tc; only 1: tauto; only 1: rewrite fold_add_spec; only 1: intuition_in; only 1: rewrite fold_add_spec; only 1: intuition_in).	3.39087510109	1735
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	2.7.51	search with cache (only 1: inversion 1; only 1: auto; only 1: intuition).	1.35588693619	7716
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0186240673065	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	55.0.83	search with cache (only 1: exists 1; only 1: unfold singleton; only 1: auto).	2.10785794258	13190
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.4.1.1.5.0	search with cache (only 1: destruct t; only 1: simpl; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.801007986069	1372
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	7.0	search with cache (only 1: intros; only 1: auto).	0.121089935303	20
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.21	search with cache (only 1: intro LE; only 1: now subst).	0.0498929023743	267
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	63	search with cache (only 1: eauto with *).	0.382859945297	2266
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.24.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	2.05797600746	8385
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	1.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.00907802581787	5
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.1.0.0.1.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.020929813385	23
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.233345985413	357
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	10	search with cache (only 1: solve_proper).	0.15983080864	105
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	6.4	search with cache (only 1: intro EQ; only 1: easy').	0.094554901123	81
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	2	search with cache (only 1: trivial).	0.00822901725769	3
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	7	search with cache (only 1: now N_as_OT.nzsimpl).	0.0441508293152	8
Coq.MSets.MSetPositive.PositiveSet.mem_node	40	0.27	search with cache (only 1: fix odd_spec 1; only 1: intuition).	3.42337107658	4373
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	4.2.20	search with cache (only 1: intro H; only 1: intros EQ; only 1: now f_equal).	0.45357298851	642
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	49.33	search with cache (only 1: intros H; only 1: destr_bool).	3.92114400864	10402
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	0.2.7.0.0.44	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: now split; only 1: easy'; only 1: easy').	11.6346178055	21323
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	1.1.1.0.0	search with cache (only 1: intros [| ] [| ]; only 1: easy'; only 1: now constructor; only 1: now constructor; only 1: easy').	0.0374739170074	8
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	0.49	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym).	0.420501947403	2071
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0145018100739	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00850296020508	5
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00942802429199	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	0.1098279953	72
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40	3.34.0.1	search with cache (only 1: intros n m; only 1: unfold In; only 1: fix odd_spec 1; only 1: intuition congruence).	22.4824931622	17852
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0142250061035	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40	4.12.40	search with cache (only 1: red; only 1: fix even_spec 1; only 1: auto).	9.16443300247	20394
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0113260746002	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0125839710236	4
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0206048488617	13
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	3.2.0	search with cache (only 1: rewrite singleton_spec; only 1: intros; only 1: intuition).	0.0141630172729	8
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0134429931641	3
Coq.MSets.MSetFacts.WFactsOn.union_3	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0129449367523	3
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0119330883026	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0152790546417	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.01256108284	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0157289505005	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0195119380951	5
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0234401226044	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40	2.6.2.17.14.7.93	search with cache (only 1: compute; only 1: intros; only 1: apply eq_iff_eq_true; only 1: split; only 1: auto; only 1: fix even_spec 1; only 1: auto).	28.1087489128	76496
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0145630836487	5
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	2.1.28	search with cache (only 1: split; only 1: apply <- mem_spec; only 1: apply -> mem_spec).	0.909375905991	1158
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	4	search with cache (only 1: intuition).	0.0224010944366	5
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	13	search with cache (only 1: intuition).	0.374822854996	60
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	6	search with cache (only 1: intuition).	0.0255789756775	11
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0126020908356	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	4.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0216319561005	6
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	3.3.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	0.645311117172	156
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0212469100952	4
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.300492048264	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	33	search with cache (only 1: intuition).	0.988858938217	1060
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	7.0	search with cache (only 1: intros; only 1: intuition).	0.0338981151581	9
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	6	search with cache (only 1: intuition).	0.013160943985	7
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.0.0.1.1.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	15.9929389954	5360
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	0.0.0.0.0.1.2.0	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	3.14539790154	676
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	1.7.4	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto with *).	5.01957607269	317
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	2.7.29	search with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	12.8722319603	5180
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	150	search with cache (only 1: firstorder).	9.59261798859	11563
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	1.16.14	search with cache (only 1: intros until 3; only 1: rewrite <- H; only 1: intuition).	3.55533790588	3794
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	1	search with cache (only 1: firstorder).	0.00673699378967	2
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.101374149323	17
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0975739955902	13
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite inter_spec; only 1: intuition).	0.0197489261627	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.253494024277	32
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	26.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: eauto with *).	7.61427402496	3202
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.1.1.0	search with cache (only 1: intros; only 1: intuition; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.45109796524	8
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	1.2.1.0	search with cache (only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0522210597992	19
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	0	search with cache (only 1: intuition).	0.0105900764465	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	4	search with cache (only 1: intuition).	0.0131177902222	5
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	1	search with cache (only 1: fsetdec).	0.0292239189148	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	2.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0407299995422	4
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0207970142365	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0159740447998	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	1.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0574378967285	3
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.0308840274811	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	3.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0563821792603	5
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0.19	search with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: fsetdec).	9.04895186424	4719
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0212740898132	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.166678905487	4
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0329711437225	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0248739719391	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0	search with cache (only 1: fsetdec).	0.0576820373535	1
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	0	search with cache (only 1: fsetdec).	0.0913600921631	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	3.0	search with cache (only 1: intros; only 1: fsetdec).	0.0611679553986	5
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	14	search with cache (only 1: fsetdec).	0.3080971241	131
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.0746550559998	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.160150051117	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0.0.7	search with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: fsetdec; only 1: fsetdec).	0.0877690315247	19
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.213080883026	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	3	search with cache (only 1: fsetdec).	0.309534072876	4
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	18	search with cache (only 1: fsetdec).	18.3646759987	6372
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0591731071472	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.192090034485	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0502619743347	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.101390123367	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.178750991821	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.244036912918	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	1	search with cache (only 1: fsetdec).	0.0184648036957	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.018079996109	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0317721366882	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0369560718536	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0318639278412	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0409200191498	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.038284778595	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	2.0	search with cache (only 1: rewrite union_spec; only 1: intuition).	0.0443668365479	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0430150032043	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0405280590057	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0554330348969	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.052873134613	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0886869430542	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.10565495491	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.117959022522	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	2.0	search with cache (only 1: intuition; only 1: fsetdec).	0.106154918671	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0876832008362	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.029070854187	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0276100635529	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	2	search with cache (only 1: fsetdec).	3.73414587975	728
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.019688129425	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0292940139771	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0491309165955	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0866301059723	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0327370166779	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0900750160217	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0608987808228	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.103672027588	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0750439167023	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	1.1.23	search with cache (only 1: simpl_relation; only 1: rewrite add_spec; only 1: intuition).	0.902158021927	478
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.224870204926	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.195083141327	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.159636974335	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	1.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto with *; only 1: auto with *).	0.117790937424	78
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	6.3.3.0.2.1	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: intros; only 1: auto; only 1: auto; only 1: fsetdec).	14.8582890034	9374
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.9.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.237726926804	197
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	26.0.3	search with cache (only 1: intro n; only 1: rewrite elements_Empty, cardinal_spec; only 1: apply length_zero_iff_nil).	11.7970631123	13405
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.2.0.1.1.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: intuition; only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	0.88659787178	477
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0.0.1	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.013160943985	5
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: eauto with set relations).	0.0275712013245	1
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.1.5.6	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set relations; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	0.5756919384	351
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0	search with cache (only 1: eauto with set relations).	0.0109760761261	1
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	11.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with *).	0.394503116608	361
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0161280632019	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	1	search with cache (only 1: intuition_in).	0.010486125946	2
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	9.9.0.2.30	search with cache (only 1: constructor; only 1: auto; only 1: intuition_in; only 1: trivial; only 1: trivial).	24.0168352127	33315
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40	3.0.4	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.121989965439	35
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	1.2.2.2	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.727818012238	158
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40	5.24	search with cache (only 1: fix odd_spec 1; only 1: intuition).	18.7328231335	8790
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.79817295074	258
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	15	search with cache (only 1: intuition).	15.2830929756	8718
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	16	search with cache (only 1: intuition).	0.0813899040222	191
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	10	search with cache (only 1: intuition).	0.460467100143	291
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	1.1.0.1.1.0.1.0.1	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	11.3679051399	2956
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite remove_spec; only 1: intuition).	0.259611845016	48
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.2.2.0.2	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.60096502304	473
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0.0.0.0	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0586981773376	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0301620960236	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0348379611969	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0188138484955	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.2.0.1	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.144198894501	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	2.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0166339874268	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	4.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0192749500275	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	0.2	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0175278186798	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	12	search with cache (only 1: auto with set).	0.159759998322	81
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.00896883010864	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	11	search with cache (only 1: auto with set relations).	2.12328195572	366
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set relations).	0.0125179290771	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	5.2	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.0827050209045	33
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0463070869446	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40	3.10	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: intuition).	6.270403862	515
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	2.17	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	15.0389721394	3483
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40	0.0.0.0.0.0.0.0.0.8.8	search with cache (only 1: generalize (is_empty_iff s); only 1: destruct (is_empty s); only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition).	10.9708781242	3840
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	4.1	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.381076097488	135
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.0.0.1.3	search with cache (only 1: intuition; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	1.43765997887	360
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	0.1.2.3	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.755846977234	302
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: intuition).	0.020003080368	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0154619216919	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.00934195518494	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00969409942627	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.00663304328918	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0193600654602	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.00855803489685	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.00735998153687	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0077588558197	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0178000926971	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	5	search with cache (only 1: auto with set).	0.0100100040436	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.00891494750977	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.00906205177307	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00828695297241	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00742483139038	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0208010673523	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00680303573608	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0084331035614	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40	3.3.1.2.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s'); only 1: intuition; only 1: intuition).	26.0774078369	2655
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00654602050781	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.00620293617249	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0164158344269	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0.4	search with cache (only 1: apply <- subset_spec; only 1: Dec.fsetdec).	0.029953956604	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00976204872131	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0720610618591	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00724387168884	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00693702697754	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.013594865799	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.00834894180298	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	6.0	search with cache (only 1: intros; only 1: auto with set).	0.0157661437988	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	10	search with cache (only 1: solve_proper).	0.187237024307	21
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	4.4	search with cache (only 1: intros; only 1: auto with set).	0.0167889595032	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0101449489594	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	7.0.1.1.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: tauto; only 1: red; only 1: intuition).	1.45281100273	471
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: intuition).	0.0197370052338	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	2.0	search with cache (only 1: unfold decidable; only 1: intuition).	1.9204928875	4
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.14314699173	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.00976014137268	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0848100185394	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.227915048599	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0115320682526	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.0299429893494	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0.7.40	search with cache (only 1: intros n m; only 1: intros EQ; only 1: fsetdec).	6.00416707993	7586
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0594899654388	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0716860294342	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0488531589508	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	1	search with cache (only 1: fsetdec).	0.228497982025	11
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.219452142715	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	4.5.10.6	search with cache (only 1: intros; only 1: apply -> subset_spec; only 1: intuition; only 1: intuition).	2.722479105	2162
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0	search with cache (only 1: fsetdec).	0.0472259521484	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.309523820877	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0342168807983	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.9.5	search with cache (only 1: intros x y z; only 1: destr_bool; only 1: intuition_in).	1.35618901253	688
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	2.0	search with cache (only 1: intros; only 1: now f_equiv).	0.00895094871521	4
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.0.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in).	0.00937008857727	3
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: unfold gt_tree; only 1: inversion 1).	0.00678586959839	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.2.0	search with cache (only 1: red; only 1: intros x y z; only 1: intuition_in; only 1: order).	0.0375599861145	6
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.7	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0452461242676	26
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.4.5	search with cache (only 1: intros A C h1 h2; only 1: eapply OrderTac.lt_irrefl; only 1: order).	0.153351068497	100
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.1.0	search with cache (only 1: unfold lt_tree; only 1: intros x y z; only 1: eauto).	0.011381149292	13
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0	search with cache (only 1: intuition_in; only 1: order).	0.0193328857422	2
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00618100166321	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.4.4.11.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros a b Ha Hb; only 1: intuition; only 1: destruct H; only 1: order).	26.916574955	32339
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.5.5.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx y y' Hy; only 1: reduce; only 1: subst; only 1: order).	4.1497130394	3574
Coq.MSets.MSetGenTree.Props.empty_spec	40	9.11	search with cache (only 1: intro H; only 1: auto).	0.154273986816	287
Coq.MSets.MSetGenTree.Props.empty_ok	40	19	search with cache (only 1: do 2 constructor).	0.0424799919128	165
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40	2.0.0.2.0.1.26	search with cache (only 1: intro; only 1: functional induction min_elt s; only 1: discriminate; only 1: inversion 1; only 1: auto; only 1: rename _x0 into r; only 1: auto).	2.13598799706	7106
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	22.20	search with cache (only 1: compute; only 1: firstorder).	3.65772414207	13443
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	19.1.2.1.2.30.83	search with cache (only 1: constructor; only 1: intros l; only 1: now simpl; only 1: red; only 1: now f_equal; only 1: intros a b; only 1: firstorder using Sorted_inv).	29.9601700306	44181
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	1.19.0.19	search with cache (only 1: intros z Base Step; only 1: repeat red; only 1: fix le_div2 1; only 1: auto).	15.0656869411	12930
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40	0.40.37.9.18.21	search with cache (only 1: intro n; only 1: firstorder; only 1: revert n; only 1: red; only 1: fix le_div2 1; only 1: trivial).	13.8268458843	75365
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	49	search with cache (only 1: firstorder).	3.45848703384	11132
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	3.6.3.6.0.24.3	search with cache (only 1: intros; only 1: rewrite <- H; only 1: constructor 1; only 1: rewrite <- H0; only 1: auto; only 1: rewrite <- H0; only 1: auto).	21.9552280903	51843
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0	search with cache (only 1: Dec.fsetdec).	0.0195660591125	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	search with cache (only 1: Dec.fsetdec).	0.0212321281433	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	10.0	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	0.349806070328	131
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	5.3.0.11	search with cache (only 1: intuition; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.974469184875	786
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.8.0.0.1.0.1.0.0.0.0.15	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	9.16103792191	12453
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	5.2	search with cache (only 1: intros; only 1: intuition).	0.0115509033203	9
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	2.1.0.0.3	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: intuition).	0.196110010147	85
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	5	search with cache (only 1: intuition).	0.009850025177	6
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.6.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intuition; only 1: inv).	0.0351219177246	32
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	5.5	search with cache (only 1: red; only 1: auto).	0.337066173553	440
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	4.1.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intros; only 1: intuition; only 1: auto).	0.016618013382	15
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	1.0.1.1.1	search with cache (only 1: induction s; only 1: intros; only 1: intuition; only 1: simpl; only 1: intuition).	0.0270488262177	25
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	1.0.0.3.0.5.4.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intros; only 1: intro; only 1: red; only 1: intros; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	3.06209301949	4791
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0.1.0	search with cache (only 1: unfold elements; only 1: intros; only 1: intuition).	0.0108320713043	4
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40	2.23.13	search with cache (only 1: intros H; only 1: fix even_spec 1; only 1: auto).	39.6682679653	4044
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: tauto).	0.00512504577637	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.3.21.11	search with cache (only 1: intro z; only 1: intros n; only 1: fix even_spec 1; only 1: auto).	5.26187586784	10045
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40	7.41	search with cache (only 1: fix le_div2 1; only 1: trivial).	4.32770705223	9149
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40	0.0.2.0.2.0.1.1.0	search with cache (only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).	7.35888886452	3571
Coq.MSets.MSetList.MakeRaw.remove_ok	40
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	12	search with cache (only 1: reflexivity).	0.00877690315247	46
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	12.4.22.0	search with cache (only 1: intros x Hs; only 1: rewrite InA_alt; only 1: simpl in *; only 1: firstorder  (subst; auto)).	10.7422499657	17773
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0.2	search with cache (only 1: red; only 1: tauto).	0.00658202171326	4
Coq.MSets.MSetList.MakeRaw.empty_spec	40	14.11	search with cache (only 1: simpl_relation; only 1: now auto with arith).	0.98289513588	1213
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	4.1.1.0	search with cache (only 1: induction s; only 1: intuition; only 1: intros; only 1: intuition).	0.0167908668518	13
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	1.12.0	search with cache (only 1: intuition; only 1: inv; only 1: intuition).	0.229590892792	355
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.3.8	search with cache (only 1: intros; only 1: inv; only 1: auto).	0.114099025726	76
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	4.1.1.19.14	search with cache (only 1: intros; only 1: intros LT; only 1: induction s as [| x s IH]; only 1: inversion 1; only 1: easy).	13.1574370861	13259
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0	search with cache (only 1: reflexivity).	0.0046398639679	1
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	2.1	search with cache (only 1: intros; only 1: auto).	0.00586104393005	5
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40	4.11.15	search with cache (only 1: intro H1; only 1: fix even_spec 1; only 1: trivial).	1.59922289848	4956
Coq.Floats.FloatLemmas.shift_value	40	1	search with cache (only 1: now Z.nzsimpl).	0.022027015686	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	1.1.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00911808013916	6
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	2.0.0.1.5.1.1.19	search with cache (only 1: split; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.760453939438	1592
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.2.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.100196123123	120
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.0.3.0	search with cache (only 1: intros; only 1: right with y; only 1: auto with sets; only 1: left).	0.00900888442993	8
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	3.4.6.2.3	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.266680002213	1863
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	4.4.16.4.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	2.98371291161	17682
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.0.0.2.0.0.0.14	search with cache (only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial).	0.168523788452	1086
Coq.Sets.Uniset.leb_refl	40	7	search with cache (only 1: destr_bool).	0.0090479850769	8
Coq.Sets.Uniset.incl_left	40	2.8.5.14.3.40	search with cache (only 1: intros H x0; only 1: destruct H; only 1: red; only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	9.88912796974	71192
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00827884674072	5
Coq.Sets.Uniset.seq_refl	40	2	search with cache (only 1: auto).	0.00632882118225	3
Coq.Sets.Uniset.seq_trans	40	0.31.10.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intros; only 1: rewrite H; only 1: auto).	17.1791279316	78730
Coq.Sets.Uniset.seq_sym	40	0.0.0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0100271701813	9
Coq.Sets.Uniset.union_empty_left	40	1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00746011734009	4
Coq.Sets.Uniset.union_empty_right	40	18.2.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: intuition).	2.58775901794	15938
Coq.Sets.Uniset.union_comm	40	16.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros x a; only 1: intuition).	2.05599093437	9954
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.0204799175262	19
Coq.Sets.Uniset.seq_left	40	0.0.1.0.1.1.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	0.926759958267	1546
Coq.Sets.Uniset.seq_right	40	1.0.2.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.297799825668	401
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0.4	search with cache (only 1: intros H x0; only 1: trivial).	0.01038813591	12
Coq.Sets.Multiset.meq_trans	40	0.11.0.7.0	search with cache (only 1: destruct x; only 1: intros; only 1: unfold meq; only 1: firstorder; only 1: congruence).	5.83335804939	2432
Coq.Sets.Multiset.meq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: auto).	0.00890493392944	7
Coq.Sets.Multiset.munion_empty_left	40	0.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: auto).	0.00720691680908	5
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.2.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: simpl; only 1: intros; only 1: auto).	0.00938510894775	9
Coq.Sets.Multiset.munion_comm	40	2.1.8.0	search with cache (only 1: unfold meq; only 1: intros; only 1: compute; only 1: firstorder).	2.06536722183	2203
Coq.Sets.Multiset.munion_ass	40	0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0101981163025	6
Coq.Sets.Multiset.meq_left	40	1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0121350288391	8
Coq.Sets.Multiset.meq_right	40	0.0.1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0126841068268	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0158967971802	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	10	search with cache (only 1: easy).	0.00857090950012	21
Coq.Sets.Integers.le_antisym	40	6.5	search with cache (only 1: intros a b Ha Hb; only 1: PeanoNat.Nat.order).	0.0274379253387	67
Coq.Sets.Integers.le_trans	40	3.4.6	search with cache (only 1: intro H; only 1: fix le_div2 1; only 1: trivial).	0.181026935577	327
Coq.Sets.Integers.le_Order	40	6.0.0.3.4.7.11.79	search with cache (only 1: split; only 1: easy; only 1: intro H; only 1: fix le_div2 1; only 1: trivial; only 1: red; only 1: intros a b Ha Hb; only 1: PeanoNat.Nat.order).	10.4756669998	20552
Coq.Sets.Integers.triv_nat	40	15	search with cache (only 1: split).	0.0450608730316	332
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.1.8.8	search with cache (only 1: red; only 1: red; only 1: unfold not; only 1: auto).	0.083603143692	524
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	8.1.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	0.161541938782	317
Coq.Sets.Relations_1_facts.contains_is_preorder	40	1.6	search with cache (only 1: intro H; only 1: auto  10 with sets).	0.00966286659241	9
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	9.4.1.0	search with cache (only 1: unfold same_relation at 1; only 1: red; only 1: destruct 1; only 1: auto  10 with sets).	0.300348997116	1636
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.00984406471252	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	5.2.0	search with cache (only 1: compute; only 1: destruct 1; only 1: auto with sets).	0.0209078788757	48
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.00695395469666	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.00623679161072	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.0.0.0.0.10	search with cache (only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	0.151771068573	1158
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.1.0.1.3.1.2.3.9.4	search with cache (only 1: intuition; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'0 H'1 H'2; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	17.4464981556	114147
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.4.1.0.4.2	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	2.76997590065	10764
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	4.2.1	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0162608623505	44
Coq.Sets.Permut.comm_left	40	2.2.1	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0134520530701	30
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	3.0.0.3	search with cache (only 1: red; only 1: red; only 1: intros; only 1: elim H).	0.00726318359375	10
Coq.Sets.Powerset.Power_set_Inhabited	40	7.24.21	search with cache (only 1: intro x; only 1: exists x; only 1: auto  10 with sets).	0.233235120773	4198
Coq.Sets.Powerset.Inclusion_is_an_order	40	17	search with cache (only 1: auto  10 with sets).	0.0220639705658	147
Coq.Sets.Powerset.Inclusion_is_transitive	40	4.0.0.0.0	search with cache (only 1: red; only 1: intro X; only 1: red; only 1: intros x H'; only 1: auto  6 with sets).	0.00830507278442	12
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0.1	search with cache (only 1: red; only 1: auto with sets).	0.00671291351318	3
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.0.2.0.1.0.0.1.4	search with cache (only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	4.8365778923	2405
Coq.Sets.Powerset.Empty_set_is_Bottom	40	3.0.0.4.0.0.0.13.7	search with cache (only 1: intro H'6; only 1: repeat split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intuition; only 1: red; only 1: red; only 1: auto with sets).	1.87167882919	3145
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	0	search with cache (only 1: auto with sets).	0.00667405128479	1
Coq.Sets.Powerset.Union_increases_l	40	3.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00735998153687	7
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00632214546204	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.1.1.4.1	search with cache (only 1: intro X; only 1: intro A; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.210383892059	228
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.00878095626831	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	15	search with cache (only 1: firstorder).	0.778991937637	742
Coq.Sets.Classical_sets.Subtract_inv	40	9.0	search with cache (only 1: unfold Subtract at 1; only 1: firstorder).	0.0286390781403	50
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40	0.0.2.4.8.2	search with cache (only 1: intros x YX; only 1: intros (H, H'); only 1: split; only 1: intro Streicher_K; only 1: auto with sets; only 1: auto  7 using Inhabited_Setminus with sets).	2.25125598907	1365
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.30.0	search with cache (only 1: intro X; only 1: intros [? ?]; only 1: auto with sets).	2.09512782097	4371
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.4.15.3.4	search with cache (only 1: intros U R H'; only 1: red; only 1: generalize Rstar_contains_R; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	1.37986087799	8622
Coq.Sets.Relations_3_facts.coherent_symmetric	40	3.4.0.8.25.1.0	search with cache (only 1: compute; only 1: intros U R x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'5; only 1: exists z1; only 1: auto with sets).	17.0434970856	161789
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.2.0.0.1	search with cache (only 1: unfold Included; only 1: intros X x H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.0230498313904	40
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.4.3.0.0.0.0	search with cache (only 1: intros A a b H' H'0; only 1: red; only 1: red; only 1: red; only 1: intro H'1; only 1: elim H'1; only 1: auto with sets).	1.51400709152	845
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.1.0.0.1.1.1.2.11.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: unfold Add; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	21.9180641174	61169
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	22	search with cache (only 1: auto  6 with sets).	0.198848009109	449
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0116817951202	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.8	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0235679149628	28
Coq.Sets.Powerset_facts.less_than_empty	40	2.0	search with cache (only 1: intros; only 1: auto with sets).	0.0111300945282	4
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0127599239349	1
Coq.Sets.Powerset_facts.Union_associative	40	28.3.7	search with cache (only 1: intro H; only 1: intros y H'1; only 1: auto  10 with sets).	2.61767196655	3091
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0119459629059	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0126190185547	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.274603128433	750
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	7.49221205711	12532
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.1.2.5.0.1.2.5.2.6.1	search with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	2.94252705574	7333
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	8.13.0	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	27.0069010258	35766
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.1.0.1.1.0.0.0.10.1	search with cache (only 1: unfold Add; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	3.93365001678	8597
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.1.1.2.1.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.085786819458	156
Coq.Sets.Powerset_facts.incl_add	40	0.0	search with cache (only 1: unfold Add; only 1: auto with sets).	0.00648021697998	2
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	8.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0608141422272	29
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	0.0.1.0.0.0.0.0.0.3.0.4.1.2.3	search with cache (only 1: intros A B x H'; only 1: intro H; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: split; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	21.8540630341	27455
Coq.Sets.Powerset_facts.setcover_intro	40	4.0	search with cache (only 1: intro X; only 1: auto with sets).	0.00717711448669	6
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.00670194625854	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.00805807113647	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.0.11.0.1.2	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto with sets).	0.658460140228	1668
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0148169994354	9
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	2.0.1.1.5.0.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: contradict H1; only 1: intuition; only 1: inversion H0; only 1: intuition; only 1: intuition).	1.23231291771	1745
Coq.Sets.Constructive_sets.Extension	40	1.19.1.19.5.2.12	search with cache (only 1: intro; only 1: destruct 1; only 1: repeat split; only 1: intro x; only 1: trivial; only 1: intro x; only 1: trivial).	8.37256598473	91923
Coq.Sets.Constructive_sets.Noone_in_empty	40	4.2.1.0	search with cache (only 1: intros; only 1: red; only 1: intro H1; only 1: elim H1).	0.0174288749695	88
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.10	search with cache (only 1: intros; only 1: red; only 1: destruct 1).	0.0196390151978	65
Coq.Sets.Constructive_sets.Add_intro1	40	2.17.5.3.3	search with cache (only 1: red; only 1: red; only 1: intros; only 1: left; only 1: auto with sets).	1.44906401634	13023
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00683879852295	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.23.12.32.0	search with cache (only 1: unfold Add at 1; only 1: intro H; only 1: intros; only 1: exists x; only 1: auto with sets).	2.01134705544	31034
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	0.1.9.8.22.12	search with cache (only 1: intros; only 1: intro; only 1: subst; only 1: destruct H; only 1: elim (Noone_in_empty x); only 1: auto with sets).	1.19360780716	12882
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	0.10.7	search with cache (only 1: intros B C H'; only 1: elim H'; only 1: auto with sets).	0.152578115463	950
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00675201416016	4
Coq.Sets.Constructive_sets.Union_inv	40	0.0.7.5	search with cache (only 1: intro z; only 1: destruct 1; only 1: auto using Add_intro2 with sets; only 1: auto using Add_intro2 with sets).	0.123388051987	405
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	3.0.3	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.0183429718018	35
Coq.Sets.Constructive_sets.Couple_inv	40	2.2.3.1.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.101361989975	556
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0.0.0	search with cache (only 1: red; only 1: red; only 1: intros B C x H'; only 1: auto with sets).	0.00682711601257	4
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0.0	search with cache (only 1: intros x H'0; only 1: red; only 1: auto with sets).	0.00642514228821	4
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.5.4.6	search with cache (only 1: red; only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.0921750068665	703
Coq.Sets.Finite_sets_facts.finite_cardinal	40	2.44.18	search with cache (only 1: intro n; only 1: fix gcd_greatest 1; only 1: auto with sets).	1.78287291527	17218
Coq.Sets.Finite_sets_facts.cardinal_finite	40
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40	0.47.30	search with cache (only 1: intro p; only 1: inversion 1; only 1: trivial with sets).	17.7549390793	45564
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40	1.3.2.12.8.21.0.57.7	search with cache (only 1: intros x H; only 1: apply H; only 1: auto with sets; only 1: clear H; only 1: firstorder; only 1: generalize H0; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets).	16.5176489353	132845
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	5.3.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).	0.0239188671112	55