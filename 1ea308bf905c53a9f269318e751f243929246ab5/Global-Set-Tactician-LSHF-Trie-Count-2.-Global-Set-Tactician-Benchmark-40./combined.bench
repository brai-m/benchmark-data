
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	4	search with cache (only 1: simpl_relation).	0.0616581439972	15
Coq.micromega.OrderedRing.ropp_morph_Proper	40	5	search with cache (only 1: simpl_relation).	0.0415959358215	12
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40
Coq.micromega.OrderedRing.Rplus_0_l	40	152	search with cache (only 1: firstorder).	10.6865770817	62868
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0117230415344	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	1.9	search with cache (only 1: intro; only 1: ring).	0.0216388702393	34
Coq.micromega.OrderedRing.Rplus_comm	40	0.13.1	search with cache (only 1: intro; only 1: intros LT; only 1: ring).	0.0859968662262	253
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0124049186707	2
Coq.micromega.OrderedRing.Rtimes_comm	40	1.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0147881507874	7
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0	search with cache (only 1: intuition Z.Private_Tac.order).	0.00995016098022	1
Coq.micromega.Ztac.elim_concl_eq	40	9	search with cache (only 1: intuition Z.order).	0.0925960540771	42
Coq.micromega.Ztac.elim_concl_le	40	4.2	search with cache (only 1: intro n; only 1: Z.order).	0.086501121521	73
Coq.micromega.Ztac.elim_concl_lt	40	7.0	search with cache (only 1: intros; only 1: now apply Z.nle_gt).	0.115826845169	189
Coq.micromega.Ztac.Zlt_le_add_1	40	33.2.39	search with cache (only 1: intros a b; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l).	3.56317186356	6241
Coq.micromega.Ztac.add_le	40	10	search with cache (only 1: Z.order_pos).	0.218287944794	114
Coq.micromega.Ztac.mul_le	40
Coq.micromega.ZifyInst.PropAnd	40	0.3.13	search with cache (only 1: constructor; only 1: intros n m; only 1: tauto).	0.0966410636902	317
Coq.micromega.ZifyInst.PropOr	40	1.61	search with cache (only 1: constructor; only 1: tauto).	1.53914809227	2036
Coq.micromega.ZifyInst.PropArrow	40	0.54	search with cache (only 1: constructor; only 1: tauto).	0.756689071655	1551
Coq.micromega.ZifyInst.PropIff	40	0.1	search with cache (only 1: split; only 1: tauto).	0.0506498813629	3
Coq.micromega.ZifyInst.PropNot	40
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40	3.5	search with cache (only 1: intros a n; only 1: Z.solve_max).	0.110014915466	23
Coq.micromega.ZifyInst.z_min_spec	40	4.0.0.1	search with cache (only 1: intros; only 1: split; only 1: Z.solve_min; only 1: Z.solve_min).	0.0870521068573	18
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.00710892677307	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.00686287879944	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.00758504867554	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	1	search with cache (only 1: exact (SORle_wd sor)).	0.0985150337219	53
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.00724506378174	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1.0.0.0.1	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.216688156128	24
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40	0.82	search with cache (only 1: fix odd_spec 1; only 1: tauto).	12.7118701935	18537
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.2.3.0.5.2	search with cache (only 1: pattern 1 at 1; only 1: unfold Rle; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: auto with real).	2.80321288109	6128
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	4	search with cache (only 1: intuition Z.Private_Tac.order).	0.0212919712067	27
Coq.micromega.ZMicromega.lt_le_iff	40	46	search with cache (only 1: apply Z.lt_le_pred).	11.9541511536	13270
Coq.micromega.ZMicromega.le_0_iff	40	0.0.25.0	search with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	1.13822817802	3070
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	1.80002999306	2923
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	2	search with cache (only 1: auto).	0.00584888458252	3
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.1.1.0	search with cache (only 1: destruct x; only 1: split; only 1: simpl; only 1: intuition congruence; only 1: Z.order'; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0222442150116	10
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0303721427917	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40	0.31.49.10	search with cache (only 1: intros H; only 1: intro a'; only 1: fix even_spec 1; only 1: tauto).	10.834059	31108
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	7.0	search with cache (only 1: unfold tail; only 1: now destruct p).	0.0150949954987	9
Coq.micromega.Env.nth_pred_double	40
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.1.0.1.9	search with cache (only 1: induction l as [| x xs Hl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity || discriminate).	0.122493028641	210
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	3	search with cache (only 1: destr_bool).	0.00880408287048	4
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00420904159546	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	1	search with cache (only 1: easy).	0.00681805610657	2
Coq.micromega.Tauto.is_cnf_tt_inv	40	0.0.13.50.4	search with cache (only 1: intros n IH; only 1: compute; only 1: induction n; only 1: easy; only 1: easy).	4.63980293274	16464
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.0.4.7.0	search with cache (only 1: unfold cnf_tt; only 1: destr_bool; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: reflexivity).	0.207993030548	336
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.3.0.7.1.0.11	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: simpl; only 1: destruct f; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.740557909012	2000
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	28.13.0	search with cache (only 1: unfold eval_cnf; only 1: simpl; only 1: firstorder).	4.28632688522	11229
Coq.micromega.Tauto.eval_cnf_tt	40	2.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0112271308899	5
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	76	search with cache (only 1: firstorder).	10.0016541481	23294
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0278000831604	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	114	search with cache (only 1: firstorder).	36.8057057858	61858
Coq.micromega.EnvRing.rmul_ext_Proper	40	8	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00688791275024	9
Coq.micromega.EnvRing.ropp_ext_Proper	40	77.13	search with cache (only 1: intros; only 1: firstorder).	6.77197885513	17505
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	1.1.0.0.0.14.0	search with cache (only 1: apply Mphi_morph; only 1: induction M; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl; only 1: now jump_simpl; only 1: now jump_simpl).	2.37067818642	1149
Coq.micromega.EnvRing.Mjump_add	40
Coq.micromega.EnvRing.mkZmon_ok	40	3.0.5.0.2.0.2	search with cache (only 1: induction M; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl).	0.970556974411	913
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.00631880760193	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.00792407989502	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	2	search with cache (only 1: exact (SORopp_wd sor)).	0.00821805000305	3
Coq.micromega.RingMicromega.rle_morph_Proper	40	4	search with cache (only 1: exact (SORle_wd sor)).	0.297932863235	29
Coq.micromega.RingMicromega.rlt_morph_Proper	40	4	search with cache (only 1: exact (SORlt_wd sor)).	0.011519908905	5
Coq.micromega.RingMicromega.rminus_morph_Proper	40	1.0.0.0.6	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.988441944122	84
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	2.2.3.3	search with cache (only 1: intro H2; only 1: induction l; only 1: reflexivity; only 1: firstorder).	0.0457661151886	149
Coq.micromega.Refl.make_impl_map	40	6.2.0.0.18	search with cache (only 1: intro; only 1: induction l; only 1: simpl; only 1: intuition; only 1: firstorder).	1.57864999771	4185
Coq.micromega.Refl.make_conj_cons	40	2.2.1.1.0.0.3.12	search with cache (only 1: intros y Ryx; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: auto; only 1: auto).	1.46864104271	4830
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.00837206840515	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40	1.3.13.25	search with cache (only 1: intros Hb; only 1: intros p1; only 1: fix even_spec 1; only 1: tauto).	1.33030200005	3821
Coq.micromega.QMicromega.QTautoChecker_sound	40	0.44	search with cache (only 1: fix le_div2 1; only 1: easy).	6.73667383194	10763
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40	7.34	search with cache (only 1: unfold Qeq, Q2R; only 1: auto with real).	1.29785013199	5095
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0185239315033	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40	23.43	search with cache (only 1: fix even_equiv 1; only 1: trivial).	11.2094380856	11889
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40	2.3.29	search with cache (only 1: intro; only 1: fix even_spec 1; only 1: trivial).	6.49190592766	2354
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40	4.2.0.1.3.0.7.0	search with cache (only 1: intros l1; only 1: induction l; only 1: simpl; only 1: firstorder; only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: eauto).	1.68053293228	5729
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0155289173126	15
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40	1.1.0.1.17.0.2.8	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: easy; only 1: intros; only 1: simpl; only 1: induction i; only 1: auto with arith; only 1: auto with arith).	6.9722931385	17903
Coq.rtauto.Bintree.Tget_Tempty	40	0.1.3.6.12	search with cache (only 1: intuition; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: now f_equal).	0.275396108627	464
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	2.7.3.0.22	search with cache (only 1: firstorder; only 1: destruct i; only 1: reflexivity || congruence; only 1: auto with arith; only 1: reflexivity || congruence).	0.271119117737	1580
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	4.0.0.0.3.0.9.42	search with cache (only 1: intro Dec; only 1: intro H2; only 1: elim H2; only 1: intro H; only 1: now f_equal; only 1: intros i j Hi E; only 1: simpl in *; only 1: intuition).	7.79488611221	27061
Coq.rtauto.Rtauto.compose1	40	32.0.6.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros m; only 1: intros A H; only 1: firstorder).	37.35851717	211927
Coq.rtauto.Rtauto.compose2	40	1.0.0.0.7.0.0.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: simpl; only 1: auto; only 1: intros m; only 1: intros A B H; only 1: simpl; only 1: apply IHF; only 1: auto).	0.704676866531	2539
Coq.rtauto.Rtauto.compose3	40	1.0.0.1.8.0.0.1.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: auto; only 1: intros m; only 1: intros A B C H; only 1: simpl; only 1: apply IHF; only 1: auto).	2.00467801094	6296
Coq.rtauto.Rtauto.weaken	40	1.2.8.0.34	search with cache (only 1: intros H; only 1: simpl; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: intuition).	15.4253151417	78614
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40	8.2.47.2.6	search with cache (only 1: intros H; only 1: intros a T; only 1: fix even_spec 1; only 1: unfold index, get, push; only 1: trivial).	39.0866470337	154698
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	2.2.0.0.1	search with cache (only 1: intros x y H; only 1: setoid_replace x with x - y + y; only 1: setoid_rewrite H; only 1: cring; only 1: cring).	0.211978912354	12
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	1	search with cache (only 1: let rec norm := gen_rewrite in norm).	0.007248878479	2
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40	7	search with cache (only 1: apply ring_setoid).	0.0123181343079	8
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	0.0.2.0.8.2.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.622061014175	1273
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	4	search with cache (only 1: exact R1_neq_R0).	0.0120718479156	5
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	2	search with cache (only 1: discriminate).	0.00792598724365	3
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.2	search with cache (only 1: intro EQ; only 1: discriminate).	0.0291681289673	4
Coq.nsatz.Nsatz.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.00945615768433	3
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0687849521637	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.1.1.1	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0678651332855	44
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	17	search with cache (only 1: now Z.nzsimpl).	10.6270480156	1677
Coq.omega.OmegaLemmas.Zred_factor4	40	6.1.7.9	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: nzinduct p; only 1: now Z.nzsimpl; only 1: now destruct n, m).	37.3139288425	22457
Coq.omega.OmegaLemmas.Zred_factor5	40	1	search with cache (only 1: now Z.nzsimpl).	0.0322988033295	2
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0314130783081	1
Coq.omega.OmegaLemmas.new_var	40	36	search with cache (only 1: eauto using Pos.Private_Tac.eq_trans, Pos.Private_Tac.eq_sym).	0.28062415123	2508
Coq.omega.OmegaLemmas.OMEGA1	40	1	search with cache (only 1: Z.order).	0.00817894935608	2
Coq.omega.OmegaLemmas.OMEGA2	40
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	27.25.21.14	search with cache (only 1: intro H; only 1: rewrite <- H; only 1: destruct 1; only 1: easy || now destruct y).	36.2533450127	70484
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.047935962677	13
Coq.omega.OmegaLemmas.OMEGA15	40
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40
Coq.omega.OmegaLemmas.OMEGA18	40	10.5.5	search with cache (only 1: intro; only 1: intro; only 1: now intros ->).	0.457100868225	563
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.1.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.081228017807	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	17.9.0.0.10	search with cache (only 1: destruct x; only 1: intuition N.Private_Tac.order; only 1: easy || now destruct y; only 1: intro EQ; only 1: now rewrite EQ).	7.02852296829	12037
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	2.5.3	search with cache (only 1: intros LT; only 1: fix odd_spec 1; only 1: trivial).	0.054141998291	136
Coq.btauto.Algebra.Decidable_complete	40	0.0.0.14	search with cache (only 1: simpl; only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.269224882126	564
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.1.4	search with cache (only 1: simpl; only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.051805973053	50
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0.5	search with cache (only 1: simpl; only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0511209964752	41
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	1.1.1.2.0.0.5.21.5	search with cache (only 1: intros c; only 1: intros H; only 1: inversion 1; only 1: trivial; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	4.45891308784	16625
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.27.5	search with cache (only 1: intro H1; only 1: destruct 1; only 1: solve [ auto ]).	1.12642502785	4421
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40	3.71	search with cache (only 1: fix even_spec 1; only 1: auto).	23.8955230713	29556
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40	1.22.8	search with cache (only 1: intro; only 1: fix odd_spec 1; only 1: eauto with arith).	2.3317990303	4142
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40	2.16	search with cache (only 1: fix even_spec 1; only 1: auto).	0.13906288147	245
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40	4.19	search with cache (only 1: fix even_spec 1; only 1: auto).	22.1540360451	5628
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	8	search with cache (only 1: auto).	0.0160939693451	12
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	4.4.0.1.2.6.5	search with cache (only 1: intros; only 1: induction n using Pos.peano_rect; only 1: trivial; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: rewrite list_nth_succ; only 1: auto).	2.5515100956	8932
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	13	search with cache (only 1: auto with *).	0.0248939990997	60
Coq.funind.Recdef.Splus_lt	40
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.00626587867737	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	23.1	search with cache (only 1: intro EQ; only 1: now destruct Z.even).	27.643488884	26356
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	4	search with cache (only 1: trivial).	0.00934100151062	5
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.00414800643921	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40	88.0.0	search with cache (only 1: intros; only 1: simpl; only 1: firstorder).	20.3901438713	31504
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	2.2.1	search with cache (only 1: intros; only 1: Esimpl; only 1: Esimpl2).	0.304888963699	8
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	9.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.00787401199	105
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.1.1.0.1.0.0.1.0.33	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.419875860214	1583
Coq.setoid_ring.Ring.bool_eq_ok	40	4.6	search with cache (only 1: intuition; only 1: destr_bool).	0.0390560626984	46
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	0.1.8	search with cache (only 1: intros N; only 1: intros; only 1: firstorder).	0.0961320400238	36
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	39.49	search with cache (only 1: intros a Ha; only 1: simpl_relation).	21.9739480019	40567
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	14	search with cache (only 1: auto with arith).	0.07453083992	78
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	6	search with cache (only 1: eauto).	0.0399439334869	11
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	25	search with cache (only 1: eauto).	1.44067192078	598
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	1.1.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	0.210248947144	11
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.169062137604	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.259317874908	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.249855995178	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	8.0	search with cache (only 1: intros l; only 1: eauto).	0.596071004868	32
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.237235069275	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1).	5.20559000969	30
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	3.6	search with cache (only 1: destruct 1; only 1: trivial).	1.83392000198	25
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00550699234009	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00618100166321	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00550198554993	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	8	search with cache (only 1: intuition).	0.00669693946838	9
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.2.0.8.2.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.659024953842	1273
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	4	search with cache (only 1: exact R1_neq_R0).	0.0167310237885	5
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.00649404525757	1
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	10	search with cache (only 1: easy).	0.0161769390106	21
Coq.setoid_ring.Ring_theory.IDmorph	40	49	search with cache (only 1: now split).	0.213901996613	1233
Coq.setoid_ring.Ring_theory.Eqsth	40	1.0.0.0.1.0	search with cache (only 1: split; only 1: intro H; only 1: auto using PeanoNat.Nat.Private_Tac.eq_sym; only 1: eauto using N.Private_Tac.eq_trans, N.Private_Tac.eq_sym; only 1: intro n; only 1: eauto using N.Private_Tac.eq_trans, N.Private_Tac.eq_sym).	0.0179469585419	8
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	2.1.19	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper).	0.11926484108	293
Coq.setoid_ring.Ring_theory.Eq_ext	40	8.3.0.0.25	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: intros x x' Hx; only 1: now rewrite <- Hx).	0.731679916382	1245
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	37.12	search with cache (only 1: intros; only 1: firstorder).	10.3792669773	23813
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	0.15.36	search with cache (only 1: intros n IH; only 1: intros a a' H; only 1: firstorder).	18.6442651749	51287
Coq.setoid_ring.Ring_theory.SRopp_ext	40	1.0	search with cache (only 1: intros a b; only 1: Tactics.program_simpl).	0.0150170326233	3
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.2.2.35	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.483345985413	1037
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	3	search with cache (only 1: reflexivity).	0.00742101669312	13
Coq.setoid_ring.Ring_theory.SRopp_add	40	2	search with cache (only 1: solve_proper).	0.0179181098938	3
Coq.setoid_ring.Ring_theory.SRsub_def	40	1.4	search with cache (only 1: intros a b; only 1: firstorder).	0.0184400081635	7
Coq.setoid_ring.Ring_theory.SRIDmorph	40	12.11.1.0.1.11.3.11.11	search with cache (only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: intros LT; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	6.25154018402	24721
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	40	search with cache (only 1: CRelationClasses.simpl_crelation).	0.944117069244	1312
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	0.11	search with cache (only 1: intros LT LE p Hp1 Hp2; only 1: firstorder).	0.251965045929	182
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	19.4.24	search with cache (only 1: intros a Ha; only 1: intros n H1 H2; only 1: firstorder).	5.89119696617	15775
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	17.26.2	search with cache (only 1: intro n; only 1: intros a Ha; only 1: simpl_relation).	3.7273349762	4485
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	3	search with cache (only 1: firstorder).	0.0196108818054	4
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	4.4	search with cache (only 1: intros LT; only 1: firstorder).	0.0213398933411	10
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	44	search with cache (only 1: firstorder).	3.39476180077	6840
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	10	search with cache (only 1: trivial).	0.0271210670471	54
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	23	search with cache (only 1: CRelationClasses.simpl_crelation).	0.251427173615	531
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	1	search with cache (only 1: mrewrite).	0.014829158783	2
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0151970386505	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.012225151062	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0129668712616	2
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0132758617401	3
Coq.setoid_ring.InitialRing.get_signZ_th	40	1.14.39	search with cache (only 1: split; only 1: fix even_spec 1; only 1: easy).	2.43226790428	1902
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	55.5	search with cache (only 1: intros; only 1: firstorder).	9.97325205803	18087
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	55.6	search with cache (only 1: intros; only 1: firstorder).	6.15039491653	16299
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0115690231323	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0112628936768	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0118079185486	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0121831893921	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	1.34660196304	387
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.0.3.0	search with cache (only 1: intros; only 1: induction x; only 1: norm; only 1: norm).	0.0305800437927	7
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.023540019989	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0268549919128	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0263338088989	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0240409374237	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	2.33	search with cache (only 1: split; only 1: reflexivity).	5.19972014427	896
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	8	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0114488601685	9
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	77.13	search with cache (only 1: intros; only 1: firstorder).	8.11721205711	17505
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	10.13.0	search with cache (only 1: red; only 1: inversion 1; only 1: now N.nzsimpl').	2.41794896126	1676
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	19.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	6.57000088692	2640
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40	132.3	search with cache (only 1: simpl; only 1: firstorder).	19.9140560627	27748
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40	4.25.0	search with cache (only 1: intros l; only 1: fix sqrtrem_spec 1; only 1: auto with arith).	0.646779060364	1435
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40	0.0.29	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: now rewrite ?IHj).	0.869678974152	2373
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	4	search with cache (only 1: reflexivity).	0.011029958725	13
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40	34	search with cache (only 1: firstorder).	3.54229307175	2016
Coq.setoid_ring.Ncring.ring_add_0_r	40	1.0.1.15	search with cache (only 1: intros; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.368448019028	404
Coq.setoid_ring.Ncring.ring_add_assoc1	40	2.25.1.8	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: red; only 1: firstorder).	18.0093429089	2329
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.4.2.4.1	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: rewrite <- ring_add_assoc; only 1: reflexivity).	0.733837127686	208
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.00625610351562	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	13	search with cache (only 1: intuition).	0.0168681144714	100
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : {}k {}).	0.00750517845154	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.1.3	search with cache (only 1: intro H; only 1: destruct H; only 1: tauto).	0.00973701477051	7
Coq.ssr.ssreflect.iffLR	40	14	search with cache (only 1: tauto).	0.0178520679474	86
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00768709182739	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0153741836548	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.00809979438782	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	1	search with cache (only 1: Bool.destr_bool).	0.0108778476715	2
Coq.ssr.ssrbool.is_true_true	40	6	search with cache (only 1: by [  ]).	0.0055718421936	7
Coq.ssr.ssrbool.not_false_is_true	40	2	search with cache (only 1: intuition).	0.00600218772888	3
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00716710090637	2
Coq.ssr.ssrbool.negbT	40	0	search with cache (only 1: Bool.destr_bool).	0.00837588310242	1
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00775814056396	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00772905349731	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.0071759223938	1
Coq.ssr.ssrbool.negbK	40	6	search with cache (only 1: by case).	0.00677299499512	12
Coq.ssr.ssrbool.negbNE	40	0.17	search with cache (only 1: red; only 1: by case : {}b {}).	0.0410029888153	160
Coq.ssr.ssrbool.negb_inj	40	0.8	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0167021751404	14
Coq.ssr.ssrbool.negbLR	40	3	search with cache (only 1: Bool.destr_bool).	0.0104768276215	4
Coq.ssr.ssrbool.negbRL	40	4	search with cache (only 1: Bool.destr_bool).	0.0117349624634	5
Coq.ssr.ssrbool.contra	40	11.3	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0911531448364	185
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0107510089874	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0106089115143	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0107791423798	1
Coq.ssr.ssrbool.contraT	40	11.5	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.155052900314	202
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.00966215133667	2
Coq.ssr.ssrbool.contraFT	40	12.6	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.270999908447	340
Coq.ssr.ssrbool.contraFN	40	13.7	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.335370063782	424
Coq.ssr.ssrbool.contraTF	40	20.7	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.542833089828	1171
Coq.ssr.ssrbool.contraNF	40	21.8	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.683692932129	1317
Coq.ssr.ssrbool.contraFF	40	0.9.29.19	search with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: intuition; only 1: tauto).	2.13388204575	7859
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40
Coq.ssr.ssrbool.ifT	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0104548931122	1
Coq.ssr.ssrbool.ifF	40
Coq.ssr.ssrbool.ifN	40
Coq.ssr.ssrbool.if_same	40	7	search with cache (only 1: by case : {}b {}).	0.00937700271606	8
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.00879502296448	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.00778198242188	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.00756597518921	1
Coq.ssr.ssrbool.ifE	40	4	search with cache (only 1: reflexivity).	0.0117011070251	5
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0110449790955	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0109112262726	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.010589838028	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.13.39	search with cache (only 1: intros; only 1: destruct H; only 1: by case Hb; auto; only 1: by case Hb; auto).	3.14175796509	2769
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	1.9	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	1.04567694664	34
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	8	search with cache (only 1: by case Pb).	0.0215239524841	9
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	36	search with cache (only 1: by case).	0.190520048141	659
Coq.ssr.ssrbool.impliesPn	40	19.24.10	search with cache (only 1: intuition; only 1: destruct H; only 1: tauto).	1.2678129673	4427
Coq.ssr.ssrbool.unlessL	40	12.14.3.10	search with cache (only 1: split; only 1: intros; only 1: intros H ?; only 1: auto).	0.216618061066	2072
Coq.ssr.ssrbool.unlessR	40	13.15.4.27	search with cache (only 1: split; only 1: intros; only 1: intros H ?; only 1: auto).	0.34946680069	3528
Coq.ssr.ssrbool.unless_sym	40	10.10.9.15.13	search with cache (only 1: split; only 1: intros H ?; only 1: apply H; only 1: auto; only 1: auto).	0.883559942245	8209
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40	7.7.8.36.15.18	search with cache (only 1: split; only 1: intros; only 1: intro H; only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	13.8481969833	73881
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	8.18.23	search with cache (only 1: intros; only 1: intro H; only 1: intuition).	0.311017990112	2470
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	80.26.6.8.10	search with cache (only 1: split; only 1: split; only 1: Bool.destr_bool; only 1: apply H; only 1: apply H).	22.7165009975	150591
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.00877094268799	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0103981494904	1
Coq.ssr.ssrbool.all_and5	40
Coq.ssr.ssrbool.pair_andP	40	18	search with cache (only 1: tauto).	0.0175039768219	145
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40
Coq.ssr.ssrbool.idPn	40
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.00665998458862	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00446605682373	1
Coq.ssr.ssrbool.negPf	40
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0117228031158	1
Coq.ssr.ssrbool.implyP	40
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by unlock).	0.00497794151306	1
Coq.ssr.ssrbool.andFb	40	11	search with cache (only 1: by case).	0.0149629116058	33
Coq.ssr.ssrbool.andbT	40	25	search with cache (only 1: by case  {}=>// undecP; apply /undecP {}; <ssreflect_plugin::ssrtclintros@0> right =>notP; apply /notF/undecP {}; left).	0.124516963959	306
Coq.ssr.ssrbool.andbF	40	2.52	search with cache (only 1: intro; only 1: Bool.destr_bool).	0.282885074615	1554
Coq.ssr.ssrbool.andbb	40
Coq.ssr.ssrbool.andbC	40	2.6	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0125479698181	12
Coq.ssr.ssrbool.andbA	40	0.41	search with cache (only 1: intros H ?; only 1: Bool.destr_bool).	0.193251848221	901
Coq.ssr.ssrbool.andbCA	40	0.17	search with cache (only 1: red; only 1: Bool.destr_bool).	0.0389838218689	145
Coq.ssr.ssrbool.andbAC	40	0.39	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.385792970657	816
Coq.ssr.ssrbool.andbACA	40	0.39	search with cache (only 1: intro z; only 1: Bool.destr_bool).	0.219018220901	816
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: trivial).	0.00433206558228	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00398087501526	1
Coq.ssr.ssrbool.orbT	40	15	search with cache (only 1: Bool.destr_bool).	0.0264148712158	91
Coq.ssr.ssrbool.orbF	40	2.23	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.132409095764	336
Coq.ssr.ssrbool.orbb	40	1.32	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.15998005867	586
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0057008266449	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00821590423584	1
Coq.ssr.ssrbool.orbCA	40	0.26	search with cache (only 1: red; only 1: Bool.destr_bool).	0.15380191803	361
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0797648429871	1
Coq.ssr.ssrbool.orbACA	40	13	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0313119888306	60
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.00713300704956	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00511312484741	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : {}b {}).	0.00533580780029	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00466990470886	1
Coq.ssr.ssrbool.andb_orl	40	0.38	search with cache (only 1: intros Hfst Hsnd; only 1: Bool.destr_bool).	0.248903989792	775
Coq.ssr.ssrbool.andb_orr	40	4	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00859403610229	5
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00817012786865	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00852203369141	1
Coq.ssr.ssrbool.andb_idl	40	6.21	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.464129924774	776
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00933408737183	1
Coq.ssr.ssrbool.andb_id2l	40	5.5.9	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition).	0.215877056122	290
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0146028995514	1
Coq.ssr.ssrbool.orb_idl	40	0.0.44.4	search with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: by [  ]; only 1: tauto).	1.5381500721	7613
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00928592681885	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0109930038452	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0135679244995	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.00832486152649	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: Bool.destr_bool).	0.00717711448669	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0060510635376	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00661206245422	1
Coq.ssr.ssrbool.orbK	40	2	search with cache (only 1: Bool.destr_bool).	0.00989603996277	3
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00632691383362	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: Bool.destr_bool).	0.006019115448	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.00546908378601	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.00499296188354	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : {}b {}).	0.00467085838318	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : {}b {}).	0.00576400756836	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00594282150269	1
Coq.ssr.ssrbool.implybE	40	9	search with cache (only 1: Bool.destr_bool).	0.0102570056915	10
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00675582885742	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00693082809448	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00667190551758	1
Coq.ssr.ssrbool.implyb_idl	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.011519908905	2
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.00928115844727	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0106120109558	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00466990470886	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00510501861572	1
Coq.ssr.ssrbool.addbb	40	4	search with cache (only 1: by case).	0.00726199150085	5
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00552201271057	1
Coq.ssr.ssrbool.addbA	40	6.3	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0205388069153	32
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00812196731567	1
Coq.ssr.ssrbool.addbAC	40	25	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.120338916779	306
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0126991271973	1
Coq.ssr.ssrbool.andb_addl	40	3.15	search with cache (only 1: intro x; only 1: Bool.destr_bool).	0.142832040787	177
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00839304924011	1
Coq.ssr.ssrbool.addKb	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0845539569855	4
Coq.ssr.ssrbool.addbK	40	0.20.2.37	search with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: by case; only 1: by case).	0.606859922409	2920
Coq.ssr.ssrbool.addIb	40	12	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0420899391174	64
Coq.ssr.ssrbool.addbI	40	18	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0708868503571	166
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.00579595565796	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.00681614875793	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00913596153259	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.00681591033936	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.26	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.370850086212	462
Coq.ssr.ssrbool.subrelUl	40	6.2.13.11	search with cache (only 1: intro H1; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	0.495309829712	1614
Coq.ssr.ssrbool.subrelUr	40	6.4.5.1.14	search with cache (only 1: intro H; only 1: intro z; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	0.428750991821	1339
Coq.ssr.ssrbool.sub_refl	40	9	search with cache (only 1: by [  ]).	0.0108211040497	19
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.00674200057983	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: reflexivity).	0.00587511062622	5
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.00506615638733	3
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.00495195388794	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	3	search with cache (only 1: reflexivity).	0.00562882423401	4
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	4	search with cache (only 1: reflexivity).	0.0072910785675	5
Coq.ssr.ssrbool.in1W	40	5.10	search with cache (only 1: red; only 1: by [  ]).	0.0855610370636	133
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00725102424622	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00675296783447	1
Coq.ssr.ssrbool.in1T	40	11.15	search with cache (only 1: intros; only 1: auto).	0.206549167633	427
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0138401985168	2
Coq.ssr.ssrbool.in3T	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00696706771851	1
Coq.ssr.ssrbool.sub_in1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00652408599854	1
Coq.ssr.ssrbool.sub_in11	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00698208808899	1
Coq.ssr.ssrbool.sub_in111	40	1.16.11	search with cache (only 1: intros; only 1: inversion 1; only 1: by move  {}=>? ?; auto).	0.558423042297	880
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00648403167725	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.00597500801086	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00640606880188	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0129179954529	2
Coq.ssr.ssrbool.on1lT	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00619411468506	1
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0149040222168	2
Coq.ssr.ssrbool.subon1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00665593147278	1
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.00678300857544	1
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.10005903244	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.0132730007172	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.00803899765015	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.00818419456482	3
Coq.ssr.ssrbool.inW_bij	40	6.6.22.31	search with cache (only 1: intros [x y]; only 1: exists x; only 1: by move  {}=>? ?; only 1: by move  {}=>? ?).	2.97887301445	10220
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.00775599479675	1
Coq.ssr.ssrbool.inT_bij	40
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0109870433807	1
Coq.ssr.ssrbool.sub_in_bij	40	0.54	search with cache (only 1: intros H; only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	1.15635299683	2824
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.0193109512329	6
Coq.ssr.ssrbool.sub_in2	40	12.19	search with cache (only 1: red; only 1: by move  {}=>? ?; auto).	0.314176797867	594
Coq.ssr.ssrbool.sub_in3	40	13.20	search with cache (only 1: red; only 1: by move  {}=>? ?; auto).	0.42939209938	676
Coq.ssr.ssrbool.sub_in12	40	1.28	search with cache (only 1: intro; only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	0.487900972366	552
Coq.ssr.ssrbool.sub_in21	40	7.14.15	search with cache (only 1: intros; only 1: intro x; only 1: by move  {}=>? ?; auto).	0.902387857437	1430
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40
Coq.ssr.ssrbool.mono2W	40	3.34.27.51	search with cache (only 1: intros A P H; only 1: red; only 1: destruct 1; only 1: by [  ]).	23.4758789539	117674
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.00890707969666	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1.1.0.7.7.4	search with cache (only 1: intro H; only 1: intro z; only 1: intros; only 1: destruct (H z); only 1: auto; only 1: auto).	0.93599486351	1954
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0140850543976	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00637888908386	1
Coq.ssr.ssrfun.unitE	40	10.4.5	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.0536639690399	486
Coq.ssr.ssrfun.frefl	40	20	search with cache (only 1: split).	0.0196650028229	186
Coq.ssr.ssrfun.fsym	40	0.4	search with cache (only 1: intros; only 1: by [  ]).	0.0157630443573	6
Coq.ssr.ssrfun.ftrans	40	29.13.25.33.9	search with cache (only 1: intros; only 1: red; only 1: intro p; only 1: rewrite H; only 1: Bool.destr_bool).	4.98970198631	49338
Coq.ssr.ssrfun.rrefl	40	16	search with cache (only 1: split).	0.0115008354187	108
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40
Coq.ssr.ssrfun.svalP	40	9	search with cache (only 1: apply proj2_sig).	0.00809812545776	10
Coq.ssr.ssrfun.s2valP	40	8	search with cache (only 1: by case : {}u {}).	0.0104951858521	9
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.00806999206543	1
Coq.ssr.ssrfun.all_sig	40
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	0.0205869674683	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40
Coq.ssr.ssrfun.canLR	40	13.17.31	search with cache (only 1: intro H; only 1: inversion 1; only 1: auto).	1.09151101112	5930
Coq.ssr.ssrfun.canRL	40	18.11	search with cache (only 1: destruct 2; only 1: auto).	0.287216901779	1237
Coq.ssr.ssrfun.Some_inj	40	0.3.11	search with cache (only 1: intros n m; only 1: inversion 1; only 1: trivial).	0.0892629623413	209
Coq.ssr.ssrfun.of_voidK	40	4.14	search with cache (only 1: intro H; only 1: destruct H, u).	0.0487999916077	176
Coq.ssr.ssrfun.esymK	40	1.3.33	search with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.184140920639	857
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	0	search with cache (only 1: by [  ]).	0.00761985778809	1
Coq.ssr.ssrfun.inj_can_sym	40	21.47.31	search with cache (only 1: intros; only 1: intro; only 1: auto).	1.42150092125	14232
Coq.ssr.ssrfun.inj_comp	40	5.10.4	search with cache (only 1: intros; only 1: intro x; only 1: auto).	0.238126993179	511
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	3	search with cache (only 1: auto).	0.00615811347961	4
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.00638794898987	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0061149597168	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00669503211975	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00586915016174	1
Coq.Vectors.VectorEq.eqb_nat_eq	40	4.5	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0643351078033	94
Coq.Vectors.VectorEq.eqb_eq	40	6.9	search with cache (only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.77042889595	1546
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	1.1.32	search with cache (only 1: intros a b n Ha Hb; only 1: subst; only 1: trivial).	1.19423079491	7067
Coq.Vectors.VectorDef.trunc	40	1.26.4	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	0.762022018433	3015
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40	1.16.12	search with cache (only 1: induction p; only 1: split; only 1: trivial).	0.34618806839	1001
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.00598001480103	4
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.0.0.1.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.317469120026	343
Coq.Vectors.VectorSpec.uncons_cons	40	1.3	search with cache (only 1: intros; only 1: reflexivity).	0.00518321990967	6
Coq.Vectors.VectorSpec.append_comm_cons	40	0.1	search with cache (only 1: intros a b Ha Hb; only 1: auto).	0.0996160507202	51
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	7.2.7.2.0	search with cache (only 1: induction p; only 1: PeanoNat.Nat.nzsimpl; only 1: left; only 1: PeanoNat.Nat.nzsimpl; only 1: left).	1.21949100494	1130
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	4.7	search with cache (only 1: fix even_spec 1; only 1: auto).	0.0505330562592	202
Coq.Vectors.Fin.eqb_eq	40	0.7	search with cache (only 1: fix even_spec 1; only 1: easy).	0.0398049354553	54
Coq.Vectors.Fin.eq_dec	40	11.67.14.29.69.13	search with cache (only 1: right; only 1: induction n; only 1: induction 1; only 1: easy; only 1: intuition; only 1: eauto).	19.385931015	109871
Coq.Vectors.Fin.cast	40	0.23.14	search with cache (only 1: intros x y z; only 1: destruct 1; only 1: trivial).	2.76146388054	14047
Coq.Setoids.Setoid.Seq_refl	40	17	search with cache (only 1: firstorder).	0.0470938682556	217
Coq.Setoids.Setoid.Seq_sym	40	6.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: auto with *).	0.0158791542053	20
Coq.Setoids.Setoid.Seq_trans	40	1.1.7.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.124117851257	467
Coq.Setoids.Setoid.gen_st	40	10.4	search with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.0204641819	136
Coq.Bool.IfProp.Iftrue_inv	40	2.0.0	search with cache (only 1: destruct 1; only 1: tauto; only 1: discriminate).	0.00936985015869	5
Coq.Bool.IfProp.Iffalse_inv	40	2.2.1.0.19	search with cache (only 1: induction 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.592584848404	2506
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	1.0.10	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.0339469909668	172
Coq.Bool.IfProp.IfProp_or	40	1.1.0.5	search with cache (only 1: intro z; only 1: destruct 1; only 1: auto; only 1: auto).	0.0219647884369	108
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	2.11	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.125001907349	245
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.00999999046326	3
Coq.Bool.Zerob.zerob_false_intro	40	0.1.9	search with cache (only 1: Nat.cases ltac:(n); only 1: now try Nat.order'; only 1: easy).	0.157202959061	225
Coq.Bool.Zerob.zerob_false_elim	40	1.1.2.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: inversion 1; only 1: inversion 1).	0.0218119621277	29
Coq.Bool.DecBool.ifdec_left	40	0.0.12.1.9.7.20.1	search with cache (only 1: intro A; only 1: intros h1 h2; only 1: intro; only 1: intro; only 1: intro z; only 1: reflexivity || destruct H; only 1: reflexivity; only 1: contradiction).	3.59472990036	40081
Coq.Bool.DecBool.ifdec_right	40	0.4.1.0.0.5.2	search with cache (only 1: intro; only 1: unfold not; only 1: intros; only 1: case H; only 1: intros; only 1: contradiction; only 1: auto).	0.985311985016	5050
Coq.Bool.Sumbool.sumbool_of_bool	40	4.4.1.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0243830680847	130
Coq.Bool.Sumbool.bool_eq_rec	40	1.2.1.2.2	search with cache (only 1: destruct b; only 1: intro z; only 1: auto; only 1: intro z; only 1: auto).	0.0616600513458	299
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00905609130859	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	2.2.1.2.0	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	1.47259998322	3094
Coq.Bool.Sumbool.sumbool_not	40
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00602293014526	1
Coq.Bool.Bool.eq_true_false_abs	40	2.2.9.0	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.0595240592957	466
Coq.Bool.Bool.not_true_is_false	40	2.12.3	search with cache (only 1: destr_bool; only 1: destruct H; only 1: repeat split).	0.128437042236	858
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00800490379333	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.010598897934	5
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0101959705353	3
Coq.Bool.Bool.leb_implb	40	7.7.3	search with cache (only 1: split; only 1: destr_bool; only 1: destr_bool).	0.389306783676	2590
Coq.Bool.Bool.eqb_subst	40	5.0.0	search with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.0101449489594	8
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00724101066589	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00875806808472	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0120470523834	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0147819519043	5
Coq.Bool.Bool.negb_orb	40	5	search with cache (only 1: destr_bool).	0.0171401500702	57
Coq.Bool.Bool.negb_andb	40	1.5.1	search with cache (only 1: destruct b1; only 1: destr_bool; only 1: repeat split).	0.0122499465942	30
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00719594955444	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00661396980286	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00896382331848	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00737905502319	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00725197792053	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00703001022339	1
Coq.Bool.Bool.if_negb	40	2.25	search with cache (only 1: intros H x0; only 1: destr_bool).	0.0722308158875	763
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00944399833679	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00936913490295	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0151782035828	5
Coq.Bool.Bool.orb_false_iff	40	0.0.2.7.4	search with cache (only 1: intro z; only 1: intuition; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.41731595993	1241
Coq.Bool.Bool.orb_true_elim	40	1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0117938518524	7
Coq.Bool.Bool.orb_prop	40	0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0115191936493	6
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: intuition).	0.0101540088654	4
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00832104682922	1
Coq.Bool.Bool.orb_false_elim	40	2.0	search with cache (only 1: destr_bool; only 1: repeat split).	0.0091450214386	4
Coq.Bool.Bool.orb_diag	40	4	search with cache (only 1: destr_bool).	0.00880217552185	14
Coq.Bool.Bool.orb_true_r	40	2	search with cache (only 1: destr_bool).	0.00765800476074	11
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00711107254028	1
Coq.Bool.Bool.orb_false_r	40	1	search with cache (only 1: destr_bool).	0.0103709697723	11
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00709700584412	1
Coq.Bool.Bool.orb_negb_r	40	0.0	search with cache (only 1: intros; only 1: destr_bool).	0.00773215293884	2
Coq.Bool.Bool.orb_comm	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.00960302352905	8
Coq.Bool.Bool.orb_assoc	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0126440525055	9
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.11602807045	83
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.110554218292	30
Coq.Bool.Bool.andb_true_eq	40	0.2	search with cache (only 1: destr_bool; only 1: repeat split).	0.104304790497	93
Coq.Bool.Bool.andb_false_intro1	40	1	search with cache (only 1: destr_bool).	0.0912239551544	26
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00777506828308	3
Coq.Bool.Bool.andb_false_r	40	0.4.1	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: intuition).	0.00927686691284	8
Coq.Bool.Bool.andb_false_l	40	1	search with cache (only 1: destr_bool).	0.00725793838501	2
Coq.Bool.Bool.andb_diag	40	1	search with cache (only 1: destr_bool).	0.00727319717407	2
Coq.Bool.Bool.andb_true_r	40	2	search with cache (only 1: destr_bool).	0.0855119228363	3
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.00432705879211	2
Coq.Bool.Bool.andb_false_elim	40	4.0.0.2	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0182449817657	47
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00462293624878	1
Coq.Bool.Bool.andb_comm	40	5.0	search with cache (only 1: intros; only 1: destr_bool).	0.0072329044342	7
Coq.Bool.Bool.andb_assoc	40	4.0	search with cache (only 1: intros; only 1: destr_bool).	0.00894904136658	6
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00749492645264	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00742197036743	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00771713256836	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00749087333679	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00555300712585	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00574707984924	1
Coq.Bool.Bool.xorb_false_r	40	3	search with cache (only 1: destr_bool).	0.00450110435486	4
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.0044310092926	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00408697128296	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00340008735657	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0046820640564	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.0062849521637	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.0080258846283	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00635886192322	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.00781607627869	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.00830507278442	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00856900215149	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00845694541931	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.00583291053772	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00658512115479	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00641202926636	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0165040493011	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0459318161011	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0058798789978	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00546503067017	3
Coq.Bool.Bool.absurd_eq_bool	40	3.3.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0147290229797	51
Coq.Bool.Bool.absurd_eq_true	40	3.2	search with cache (only 1: destr_bool; only 1: intuition).	0.00505089759827	7
Coq.Bool.Bool.trans_eq_bool	40	5	search with cache (only 1: destr_bool).	0.00781393051147	6
Coq.Bool.Bool.Is_true_eq_true	40	3.2.0.0	search with cache (only 1: intro H; only 1: intuition; only 1: destr_bool; only 1: intuition).	0.0149309635162	9
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00495886802673	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00480508804321	3
Coq.Bool.Bool.eqb_refl	40	1	search with cache (only 1: destr_bool).	0.00598120689392	15
Coq.Bool.Bool.eqb_eq	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00952100753784	19
Coq.Bool.Bool.orb_prop_elim	40	0.3.1.2.7.43	search with cache (only 1: intro p; only 1: destruct p; only 1: simpl; only 1: auto with bool; only 1: intros; only 1: auto).	3.29875802994	39132
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00689482688904	2
Coq.Bool.Bool.andb_prop_intro	40	1.4.6	search with cache (only 1: destruct 1; only 1: red; only 1: destr_bool).	0.0299460887909	154
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.00867795944214	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0113921165466	13
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00814008712769	3
Coq.Bool.Bool.negb_prop_elim	40	2.5.0	search with cache (only 1: intros; only 1: red; only 1: destr_bool).	0.00535798072815	11
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00553393363953	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00568580627441	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00553798675537	3
Coq.Bool.Bool.andb_if	40	3	search with cache (only 1: destr_bool).	0.00660490989685	4
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00470900535583	1
Coq.Bool.Bool.andb_lazy_alt	40	1.0	search with cache (only 1: intros; only 1: repeat split).	0.0047459602356	3
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00404000282288	2
Coq.Bool.Bool.reflect_iff	40	1.0.0.9.5.12	search with cache (only 1: intro x; only 1: intros; only 1: destruct H; only 1: intuition; only 1: intuition; only 1: destr_bool).	2.58347392082	7727
Coq.Bool.Bool.iff_reflect	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0127768516541	13
Coq.Bool.Bool.reflect_dec	40	7.2.19.0.2	search with cache (only 1: unfold not; only 1: intuition; only 1: destruct H; only 1: tauto; only 1: tauto).	2.31248378754	4654
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.00844192504883	6
Coq.Bool.BoolEq.beq_eq_true	40	3.1	search with cache (only 1: destruct 1; only 1: destr_bool).	0.00819897651672	6
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40	2.3.2.18.7.32.12	search with cache (only 1: intro z; only 1: intros n m; only 1: intuition; only 1: revert m; only 1: rewrite <- beq_eq_true; only 1: discriminate; only 1: trivial).	39.8979251385	151851
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40	10.22.1	search with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	2.07921695709	7070
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	13.0.0.0.0.1.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	18.2521140575	17690
Coq.Lists.ListSet.set_mem_correct1	40	0.7.29.24	search with cache (only 1: intros a0; only 1: intros EQ; only 1: fix even_spec 1; only 1: auto).	2.63897585869	15240
Coq.Lists.ListSet.set_mem_correct2	40	9.0.0.0.0.1.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	7.96205210686	2323
Coq.Lists.ListSet.set_mem_complete1	40	4.0.1.1.4.2.0.0.0.0.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: intro Ha; only 1: intros H1 H2 [H3| H4]; only 1: elim Ha; only 1: auto with datatypes; only 1: intuition congruence).	4.60983181	7454
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	1	search with cache (only 1: intuition).	0.0265090465546	47
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.0.0.0.2.2.1.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	1.16933608055	2851
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40	3.3.0.0.0.0.1.0.0.1.1.0.0.1.1	search with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: tauto; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: left; only 1: subst; only 1: congruence; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: congruence; only 1: right; only 1: auto).	39.8992578983	93063
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.6.0.7.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	0.843326091766	1516
Coq.Lists.ListSet.set_union_intro	40	4	search with cache (only 1: intuition).	0.228010892868	135
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.156831979752	40
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	10.3	search with cache (only 1: intros; only 1: eauto).	0.190243959427	363
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	2.2.1.3.20	search with cache (only 1: induction l; only 1: simpl in *; only 1: unfold decidable; only 1: now constructor; only 1: firstorder  (subst; auto)).	3.53392410278	1140
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	2.0.42	search with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.14931511879	1732
Coq.Lists.Streams.tl_nth_tl	40	0.0.0.8	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0217089653015	65
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	2.0.1.7	search with cache (only 1: intros; only 1: destruct H; only 1: coinduction ltac:(EqSt_reflex); only 1: auto with datatypes).	0.0372772216797	178
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	13.8.2.28	search with cache (only 1: intro p; only 1: intros n; only 1: coinduction ltac:(Equiv2); only 1: auto).	0.56613111496	6703
Coq.Lists.Streams.Str_nth_tl_map	40	2.0.2.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0176658630371	30
Coq.Lists.Streams.Str_nth_map	40	0.0.0.8.3.4.1	search with cache (only 1: intros n; only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: apply IHn).	0.352292060852	2789
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	5.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0224611759186	29
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.0.0.1.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.0192668437958	40
Coq.Lists.List.nil_cons	40	3.2	search with cache (only 1: intros h1 h2; only 1: discriminate).	0.00894212722778	32
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	15.4.22.23	search with cache (only 1: intros n m; only 1: induction n; only 1: easy; only 1: easy || now destruct 1).	11.3465600014	35741
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	4	search with cache (only 1: split).	0.00484108924866	5
Coq.Lists.List.hd_error_cons	40	1.0.0.0.0	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: reflexivity; only 1: intros; only 1: split).	0.00703811645508	6
Coq.Lists.List.in_eq	40	3.1.0	search with cache (only 1: intros; only 1: simpl in *; only 1: auto).	0.00665903091431	7
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00397205352783	2
Coq.Lists.List.not_in_cons	40	36	search with cache (only 1: firstorder).	1.88410210609	7596
Coq.Lists.List.in_nil	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.00490117073059	2
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00453019142151	2
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40	0.8.4.3.0.4.20.21	search with cache (only 1: intro H; only 1: destruct H; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: intros n m; only 1: firstorder  discriminate).	10.9149949551	48712
Coq.Lists.List.app_nil_l	40	2.0.0	search with cache (only 1: simpl; only 1: intros; only 1: firstorder).	0.00648403167725	5
Coq.Lists.List.app_nil_r	40	0.1.4.0.4	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.0269520282745	155
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.00759291648865	7
Coq.Lists.List.app_assoc	40
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.1.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0139980316162	8
Coq.Lists.List.app_comm_cons	40	0	search with cache (only 1: auto using app_assoc).	0.00974607467651	1
Coq.Lists.List.app_eq_nil	40	2.3.0.3.4	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: intuition; only 1: now discriminate).	0.172704935074	301
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	9.4.0.5	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.536316871643	1217
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	9.2.0.27.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intro H1; only 1: tauto).	30.9829690456	137513
Coq.Lists.List.in_app_iff	40	0.3.0.12.6.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: compute; only 1: intuition; only 1: simpl; only 1: intros y H0 H1; only 1: intuition).	3.98821210861	13591
Coq.Lists.List.app_inv_head	40	2.18.5.1.4	search with cache (only 1: induction l; only 1: symmetry; only 1: auto; only 1: fix odd_spec 1; only 1: trivial).	10.4125869274	58864
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.3	search with cache (only 1: simpl; only 1: auto).	0.0274059772491	60
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.1.0.2.0.0.1.2.2.0.0.0	search with cache (only 1: induction l; only 1: destruct n; only 1: simpl; only 1: now symmetry; only 1: intros a Ha; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: intros d ie; only 1: auto with arith).	2.32677197456	6184
Coq.Lists.List.app_nth1	40	0.0.0.4.1.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.702996969223	911
Coq.Lists.List.app_nth2	40	0.0.3.4.0.1.1.2.0.6.4.0	search with cache (only 1: induction l; only 1: intros; only 1: induction n; only 1: simpl; only 1: auto; only 1: auto; only 1: destruct n; only 1: simpl; only 1: intros; only 1: inversion H; only 1: simpl; only 1: auto with arith).	5.6975569725	13491
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.0.3.0.0.0.0.3.0	search with cache (only 1: revert n; only 1: induction l; only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	1.5289311409	2653
Coq.Lists.List.nth_error_app2	40
Coq.Lists.List.nth_error_nth	40	0.0.24.1.22	search with cache (only 1: intros n IH a; only 1: revert n; only 1: fix even_spec 1; only 1: intros; only 1: auto with arith).	31.4026641846	80344
Coq.Lists.List.nth_error_nth'	40
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	1.0	search with cache (only 1: simpl; only 1: intuition).	0.00611805915833	3
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.00928616523743	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	4.6.9	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.281251907349	1486
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	1	search with cache (only 1: reflexivity).	0.00426387786865	2
Coq.Lists.List.concat_cons	40	0.0.1.1.0	search with cache (only 1: induction x as [| x l IHl]; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: auto).	0.00819206237793	7
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0	search with cache (only 1: now f_equal).	0.0051908493042	1
Coq.Lists.List.in_map	40	4.0.3.4.0.1.4	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct 1; only 1: destruct H as [l1 [l2 [H H']]]; only 1: auto; only 1: auto).	1.95698881149	6733
Coq.Lists.List.in_map_iff	40	0.12.1.11.0.6.2.2.2.21.0.2.0	search with cache (only 1: split; only 1: induction l as [| a l IH]; only 1: easy; only 1: intros [?| ?]; only 1: firstorder; only 1: firstorder; only 1: induction l as [| a l IH]; only 1: intros (b, (Hb, H)); only 1: auto; only 1: intros; only 1: simpl; only 1: firstorder; only 1: firstorder  (subst; auto)).	30.9319250584	136665
Coq.Lists.List.map_length	40	0.1.3.2	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto with arith).	0.00941896438599	10
Coq.Lists.List.map_nth	40	2.3.0.2.0.0.2.0	search with cache (only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto).	1.14193916321	3091
Coq.Lists.List.map_nth_error	40	1.22	search with cache (only 1: fix even_spec 1; only 1: auto with arith).	3.80287718773	7282
Coq.Lists.List.map_app	40
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	0.36.24	search with cache (only 1: intros a0; only 1: fix even_spec 1; only 1: auto).	2.34083104134	13732
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	1.10.2.0.5.3	search with cache (only 1: intros; only 1: elim l; only 1: reflexivity || discriminate; only 1: simpl; only 1: destruct 1; only 1: auto).	1.15186595917	5357
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	1.2.0.2.0.3.5	search with cache (only 1: destr_bool; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl map; only 1: apply f_equal; only 1: auto).	0.45725107193	2281
Coq.Lists.List.map_map	40	7.2.4.0.9.12	search with cache (only 1: intros n m p; only 1: intros y Ryx; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: RelationClasses.simpl_relation).	5.06859612465	17298
Coq.Lists.List.map_ext_in	40	0.0.16.1.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: firstorder  (subst; auto); only 1: simpl map; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	12.9116020203	27883
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	3.0.1.1.0.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.267842054367	574
Coq.Lists.List.fold_left_app	40	3.1.2.2	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.131358146667	235
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.0.0.2.1.3.3.14	search with cache (only 1: intro n; only 1: intros; only 1: induction l; only 1: auto; only 1: generalize (app_nil_r (A:=l)); only 1: simpl; only 1: rewrite IHl; only 1: auto).	13.6760160923	53556
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40	0.0.9.3.1.4.5	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: case_eq (f a); only 1: easy; only 1: intuition; only 1: congruence).	23.3624880314	26034
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.00824284553528	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	7.0.0.1.2	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: rewrite filter_map; only 1: apply ext_in_map).	4.60807704926	806
Coq.Lists.List.filter_ext_in_iff	40	0.1.18.1.5	search with cache (only 1: intros; only 1: rewrite filter_map; only 1: split; only 1: apply ext_in_map; only 1: apply map_ext_in).	30.5123889446	16786
Coq.Lists.List.filter_ext	40	2.0.1.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: apply ext_in_map; only 1: apply map_ext_in; only 1: auto).	0.00977110862732	11
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.3.1.0.1.1.2.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (split l); only 1: destruct a; only 1: simpl; only 1: auto with arith).	0.464942932129	574
Coq.Lists.List.split_length_r	40	0.0.0.0.0.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto with arith).	0.0128290653229	9
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.1.1.0.21.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.18705606461	12629
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	5.5.3.2.25	search with cache (only 1: intros n IH; only 1: induction l; only 1: apply in_nil; only 1: firstorder; only 1: CRelationClasses.simpl_crelation).	5.67972612381	14275
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40
Coq.Lists.List.lel_cons	40	0.3.21.5	search with cache (only 1: intros; only 1: apply Peano.le_S_n; only 1: simpl; only 1: auto with arith).	1.44780611992	1198
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.00571918487549	3
Coq.Lists.List.lel_nil	40	0.17.2.3	search with cache (only 1: destruct l' as [| y l']; only 1: intuition; only 1: fix even_spec 1; only 1: auto).	14.9787120819	42117
Coq.Lists.List.incl_refl	40	5.1	search with cache (only 1: intros l2; only 1: auto).	0.00688505172729	8
Coq.Lists.List.incl_tl	40	0.8	search with cache (only 1: right; only 1: intuition).	0.0113880634308	21
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.00590705871582	1
Coq.Lists.List.incl_appl	40	6.4	search with cache (only 1: intros l l1 l2; only 1: intuition).	0.12633395195	173
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.00953912734985	1
Coq.Lists.List.incl_cons	40	1.1.1.23.2	search with cache (only 1: intros; only 1: intro n; only 1: simpl; only 1: intuition; only 1: congruence).	3.04789805412	4368
Coq.Lists.List.incl_app	40	11.1.1.0.4.2.3.3	search with cache (only 1: intros l1; only 1: intros l2; only 1: revert l1 l2; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder).	22.9778649807	49717
Coq.Lists.List.firstn_nil	40	3.4.29	search with cache (only 1: induction n; only 1: intuition; only 1: reflexivity).	0.209848880768	778
Coq.Lists.List.firstn_cons	40	0.1.0	search with cache (only 1: destruct l; only 1: auto; only 1: auto).	0.00674414634705	4
Coq.Lists.List.firstn_all	40
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.00539994239807	1
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40	0.0.0.2.1.0.0.3	search with cache (only 1: induction n as [| n IH]; only 1: intros [| a l] H; only 1: auto; only 1: auto; only 1: intros [| a l] H; only 1: now simpl; only 1: simpl in *; only 1: now f_equal).	0.311065912247	821
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40	0.21.12	search with cache (only 1: intro l'; only 1: fix even_spec 1; only 1: auto with arith).	19.0222799778	74962
Coq.Lists.List.skipn_O	40	1.2.0	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: auto).	0.00737500190735	6
Coq.Lists.List.skipn_nil	40	2.2.2.4	search with cache (only 1: intro l'; only 1: elim l'; only 1: now simpl; only 1: easy).	0.0419600009918	111
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: firstorder).	0.00541400909424	1
Coq.Lists.List.skipn_none	40	3.2.0.7	search with cache (only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: now destruct l).	0.152510166168	346
Coq.Lists.List.skipn_all2	40
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40
Coq.Lists.List.skipn_length	40	0.1.0.0.1.14	search with cache (only 1: Nat.induct ltac:(n); only 1: auto with arith; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	7.93265604973	4294
Coq.Lists.List.skipn_all	40	0	search with cache (only 1: now induction l).	0.00644612312317	1
Coq.Lists.List.skipn_app	40	3.0.1.4.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: auto with arith).	0.83482003212	803
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	4.37	search with cache (only 1: fix le_div2 1; only 1: auto with arith).	0.261465072632	1475
Coq.Lists.List.combine_firstn_l	40
Coq.Lists.List.combine_firstn_r	40
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	0.0.0.1	search with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: firstorder  (subst; auto)).	0.0561780929565	5
Coq.Lists.List.Add_length	40	0.1.0.0.0.1.1	search with cache (only 1: induction 1; only 1: simpl; only 1: elim (length l); only 1: reflexivity; only 1: trivial; only 1: simpl in *; only 1: auto).	0.0105400085449	10
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.00615787506104	2
Coq.Lists.List.NoDup_cons_iff	40	1.6.2.1	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now constructor; only 1: now constructor).	0.307176113129	214
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40	1.60	search with cache (only 1: fix odd_spec 1; only 1: trivial).	3.69275999069	14672
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40	2.76	search with cache (only 1: fix le_div2 1; only 1: firstorder  (subst; auto)).	32.4278421402	258466
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	24	search with cache (only 1: now split).	0.586099863052	2091
Coq.Lists.List.Exists_cons	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_inv	40	1.30.0	search with cache (only 1: firstorder; only 1: inversion_clear H; only 1: auto).	1.36202001572	8817
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	4.3.1	search with cache (only 1: intros a b l H; only 1: inversion H; only 1: auto).	0.0335290431976	55
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	8.0.8.0.3.11.23.20	search with cache (only 1: intros x y H'; only 1: induction l; only 1: left; only 1: right; only 1: inversion H; only 1: auto; only 1: inversion H; only 1: auto).	27.6737999916	189689
Coq.Lists.List.Forall2_refl	40	8	search with cache (only 1: RelationClasses.simpl_relation).	0.00793218612671	9
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	1.3.0.6.7.7	search with cache (only 1: intros P Q H l; only 1: intro H2; only 1: elim H2; only 1: auto; only 1: simpl; only 1: auto).	0.59237408638	3064
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	3.8.0.14	search with cache (only 1: induction n as [| n hn]; only 1: trivial; only 1: simpl; only 1: auto with arith).	0.211266994476	672
Coq.Lists.List.repeat_spec	40
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: repeat intro; only 1: eauto).	0.00696110725403	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.2.0.0.0.22	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	7.37090301514	7422
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	4.4.1.0.0.44	search with cache (only 1: induction l; only 1: repeat constructor; only 1: intuition; only 1: rewrite <- !app_comm_cons; only 1: rewrite <- IHl; only 1: trivial).	7.1444940567	10955
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0137729644775	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	2.23.1.5.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip; only 1: eauto; only 1: firstorder; only 1: eauto).	12.6276109219	11217
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	2.0.1	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.00996088981628	15
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	3.3.7.4	search with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).	0.674783945084	807
Coq.Lists.SetoidList.InA_nil	40	0.3.10	search with cache (only 1: intro H0; only 1: firstorder using StronglySorted_inv; only 1: invlist InA).	0.262984037399	554
Coq.Lists.SetoidList.InA_alt	40
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	1.0	search with cache (only 1: intros l2; only 1: now simpl).	0.00969195365906	3
Coq.Lists.SetoidList.eqlistA_altdef	40
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40
Coq.Lists.SetoidList.In_InA	40	0.1.0.5	search with cache (only 1: induction l; only 1: simpl; only 1: induction 1; only 1: firstorder  (subst; auto)).	0.199540138245	62
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40	3.30.4	search with cache (only 1: intros l1; only 1: fix gcd_divide 1; only 1: auto).	8.74218201637	23028
Coq.Lists.SetoidList.InA_singleton	40
Coq.Lists.SetoidList.InA_double_head	40	1.1.1.0.4.0	search with cache (only 1: intuition; only 1: firstorder using Sorted_inv; only 1: invlist InA; only 1: auto; only 1: auto; only 1: auto).	0.440655946732	122
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.037045955658	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	13	search with cache (only 1: now right).	0.0346968173981	111
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	4.4.2.2.3.0.15.0	search with cache (only 1: intros E; only 1: split; only 1: intros; only 1: inv; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	3.01259899139	5433
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.33	search with cache (only 1: intro m; only 1: rewrite !InA_cons; only 1: tauto).	5.37841200829	2137
Coq.Lists.SetoidList.equivlistA_app_idem	40	3.0.9.0.4	search with cache (only 1: split; only 1: rewrite InA_app_iff; only 1: firstorder; only 1: rewrite InA_app_iff; only 1: auto).	0.868047952652	1274
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.1.0.2.1.1.0.1.0.1	search with cache (only 1: induction s1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	11.8430290222	2164
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	13.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: intuition; only 1: simpl_relation).	5.87095284462	2821
Coq.Lists.SetoidList.InA_InfA	40	1.1.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: eauto).	0.0329768657684	11
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	1.5.2.23	search with cache (only 1: induction 1 as [| ? ? ? ? HForall]; only 1: auto; only 1: simpl; only 1: auto).	15.8276660442	6518
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_app	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.011871099472	6
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	1.0	search with cache (only 1: intros; only 1: now rewrite H).	0.0128200054169	3
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: reflexivity).	0.00485897064209	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	4	search with cache (only 1: trivial).	0.00589299201965	5
Coq.NArith.BinNat.N.peano_rec_succ	40	0.5.4.41	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.880086183548	4101
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	5	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0147590637207	6
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00498199462891	2
Coq.NArith.BinNat.N.two_succ	40	3	search with cache (only 1: auto).	0.00414085388184	4
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.00457310676575	1
Coq.NArith.BinNat.N.pos_pred_spec	40	1	search with cache (only 1: trivial).	0.00562214851379	11
Coq.NArith.BinNat.N.succ_pos_spec	40
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.3.1.0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.25119304657	2696
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	0.0.0.0.0.0.0.0.0.0.3.1.0.0.0.0.16	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.83117198944	4808
Coq.NArith.BinNat.N.pred_sub	40
Coq.NArith.BinNat.N.succ_0_discr	40
Coq.NArith.BinNat.N.add_0_l	40	10	search with cache (only 1: auto).	0.00835800170898	22
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0.0.0	search with cache (only 1: destruct n; only 1: tauto; only 1: now destruct p).	0.0074348449707	3
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40	0.4.0.5.0.4.0.5.12.0.15.0.4	search with cache (only 1: destruct m; only 1: induction n; only 1: easy'; only 1: easy'; only 1: split; only 1: destruct n; only 1: easy'; only 1: fix even_spec 1; only 1: trivial; only 1: destruct n; only 1: easy'; only 1: fix even_spec 1; only 1: trivial).	30.5824151039	49294
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.1.0.2	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0853910446167	101
Coq.NArith.BinNat.N.compare_le_iff	40	1.1.16	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0202608108521	193
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.00931096076965	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	2	search with cache (only 1: easy).	0.00507998466492	3
Coq.NArith.BinNat.N.succ_double_spec	40	1.0.0.0.0.9.15	search with cache (only 1: simpl; only 1: nzinduct n; only 1: unfold succ, add; only 1: trivial; only 1: intro n; only 1: nzsimpl; only 1: now destruct n).	8.30241894722	4276
Coq.NArith.BinNat.N.double_add	40
Coq.NArith.BinNat.N.succ_double_add	40	0.0.0.0.2.12.4.17	search with cache (only 1: compute; only 1: nzsimpl'; only 1: destruct n, m; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	15.2239489555	3092
Coq.NArith.BinNat.N.double_mul	40
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40
Coq.NArith.BinNat.N.div2_succ_double	40	5.40	search with cache (only 1: apply succ_inj; only 1: now destruct n).	0.296733140945	1659
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	3.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: now subst).	0.0141279697418	16
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.9.3.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: tauto; only 1: now nzsimpl; only 1: easy; only 1: easy).	0.270261049271	534
Coq.NArith.BinNat.N.compare_0_r	40	7.2.1.2.1.0.42	search with cache (only 1: nzinduct n; only 1: simpl; only 1: discriminate; only 1: cases ltac:(n); only 1: now rewrite Pos.compare_antisym, CompOpp_iff; only 1: intros; only 1: now destruct n).	22.2836508751	35852
Coq.NArith.BinNat.N.pow_0_r	40	0.0.0	search with cache (only 1: rewrite one_succ; only 1: simpl; only 1: trivial).	0.00589108467102	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	15.19.25	search with cache (only 1: rewrite <- (add_0_l p)  at 1; only 1: intros H; only 1: false_hyp H nlt_0_r).	3.33705496788	5615
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	4.2.1.0.0.1.0.3	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: trivial; only 1: intro; only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.46484208107	1495
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.17	search with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	0.0445630550385	270
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2.2.1.1.0	search with cache (only 1: destruct a as [| p], b as [| q]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0835831165314	136
Coq.NArith.BinNat.N.testbit_even_0	40	1.0.1.46	search with cache (only 1: induction a; only 1: rewrite two_succ; only 1: easy; only 1: split).	7.82966303825	13166
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.00583505630493	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40
Coq.NArith.BinNat.N.testbit_neg_r	40	1	search with cache (only 1: now destruct n).	0.0150470733643	2
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0054030418396	3
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.20.3.16	search with cache (only 1: destruct (le_gt_cases n m); only 1: pose proof (le_sub_l n m) as LE'; only 1: now nzsimpl'; only 1: trivial).	5.16473913193	6764
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0046660900116	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	3.1.1.0.3	search with cache (only 1: destruct (lt_total n m); only 1: unfold le, ge; only 1: now destruct 2; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: intuition).	0.355679988861	244
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00546216964722	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0141048431396	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0132229328156	1
Coq.NArith.Ndec.Neqb_complete	40
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	10.2.6.18.8.0.13	search with cache (only 1: intros; only 1: rewrite <- ?negb_true_iff, ?N.negb_even, ?N.odd_spec, ?N.even_spec; only 1: apply eq_true_iff_eq; only 1: split; only 1: reflexivity; only 1: fix odd_spec 1; only 1: trivial).	6.35939192772	14319
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40
Coq.NArith.Ndec.Ndiv2_neq	40	0.2.1.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0185520648956	7
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.4.1.1	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.129008054733	34
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	1.35.7.1	search with cache (only 1: destruct a; only 1: auto; only 1: apply Nat.leb_le; only 1: trivial).	4.01425385475	10118
Coq.NArith.Ndec.Nleb_antisym	40	9.0.0.0.6.1	search with cache (only 1: rewrite Nleb_Nle; only 1: destruct b; only 1: rewrite Nleb_Nle; only 1: N.order; only 1: rewrite Nleb_Nle; only 1: N.order).	1.89800906181	1221
Coq.NArith.Ndec.Nleb_trans	40	2.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.order).	0.0874509811401	4
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0157651901245	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40	11.35	search with cache (only 1: fix even_spec 1; only 1: easy').	11.3523731232	27484
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40	11.37	search with cache (only 1: fix even_spec 1; only 1: easy').	30.2530949116	54836
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	12	search with cache (only 1: now destruct a).	0.162156105042	61
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40
Coq.NArith.Ndist.ni_min_O_r	40	0.0.2.1.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.00955414772034	9
Coq.NArith.Ndist.ni_min_inf_l	40	1.0.0.1	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	0.00743007659912	6
Coq.NArith.Ndist.ni_min_inf_r	40	1.0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	0.00759100914001	7
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.1.2.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0167920589447	24
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	1.22.47	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	12.9199669361	31149
Coq.NArith.Ndist.ni_le_le	40	1.22.48	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	12.3195021152	33256
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40	1.4	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.187186002731	84
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40	3.38.67	search with cache (only 1: intros Ha'; only 1: fix le_div2 1; only 1: easy).	24.4126019478	59446
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	1.2.0	search with cache (only 1: intros m; only 1: intro n; only 1: tauto).	0.00883293151855	6
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0.2	search with cache (only 1: intro n; only 1: reflexivity).	0.0056631565094	4
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.00648903846741	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.0.2.0.2	search with cache (only 1: intros [q| q| ] H; only 1: reflexivity || apply f_equal || exfalso; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: now destruct H).	0.0109031200409	9
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.1.1.5.5.56.0	search with cache (only 1: intros; only 1: destruct n; only 1: solve_proper; only 1: destruct p; only 1: easy; only 1: split; only 1: trivial).	2.00318980217	7771
Coq.NArith.Ndigits.Ndouble_bit0	40
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	3.9.11	search with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).	0.296452045441	1186
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40	7.32.5.6.11.30	search with cache (only 1: intros m; only 1: intros H; only 1: N.cases m; only 1: easy; only 1: fix odd_spec 1; only 1: now N.nzsimpl).	29.4047141075	59914
Coq.NArith.Ndigits.Nneg_bit0	40	4.26	search with cache (only 1: fix even_spec 1; only 1: intuition).	5.78835320473	4184
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.00823307037354	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40	6.35	search with cache (only 1: fix even_spec 1; only 1: trivial).	1.25115895271	4522
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.1.0.0.0.0.0.2.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	4.129529953	7601
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.11	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.0269911289215	106
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.test	40	2	search with cache (only 1: N.order).	0.155230998993	27
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	2.0.0.1.0.4	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	0.504077196121	336
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.3.0.0	search with cache (only 1: destruct a as [| p]; only 1: split; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0139780044556	18
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.1.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.0156571865082	11
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.0135040283203	1
Coq.NArith.Nnat.Nat2N.inj_pred	40
Coq.NArith.Nnat.Nat2N.inj_add	40	0	search with cache (only 1: nat2N).	0.0146198272705	1
Coq.NArith.Nnat.Nat2N.inj_sub	40
Coq.NArith.Nnat.Nat2N.inj_mul	40
Coq.NArith.Nnat.Nat2N.inj_div2	40
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40
Coq.NArith.Nnat.Nat2N.inj_max	40
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	7.7.2.1.21	search with cache (only 1: destruct x; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: destr_bool; only 1: destr_bool).	5.44426107407	3844
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40
Coq.Strings.Ascii.eqb_compat	40	0.10.0	search with cache (only 1: intros x x' EQ; only 1: intros H H'; only 1: t_eqb).	0.0263757705688	103
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40	37.2.8	search with cache (only 1: intro n; only 1: induction n; only 1: destr_bool).	3.48929905891	6817
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0106391906738	1
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.010705947876	1
Coq.Strings.String.eqb_compat	40	0.5	search with cache (only 1: intros m Hm; only 1: t_eqb).	0.0072820186615	7
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40	0.10.13	search with cache (only 1: fix le_div2 1; only 1: intros m n; only 1: trivial).	2.25291895866	1665
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40	9.10.2.15	search with cache (only 1: intros LE EQ; only 1: intros s1; only 1: fix le_div2 1; only 1: trivial).	2.39878797531	4612
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	4	search with cache (only 1: trivial).	0.00573205947876	5
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	20	search with cache (only 1: trivial).	2.20450901985	2536
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	2	search with cache (only 1: auto).	0.00674200057983	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	62	search with cache (only 1: constructor).	0.181917190552	2007
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0242938995361	3
Coq.Reals.Ratan.pos_half_prf	40	9.2	search with cache (only 1: apply Rinv_0_lt_compat; only 1: lra).	0.106106996536	91
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	1.5.8	search with cache (only 1: pose proof PI_4 as t; only 1: intro H9; only 1: lra).	0.35780787468	198
Coq.Reals.Ratan.pos_opp_lt	40	13.0	search with cache (only 1: intro x; only 1: lra).	0.0691010951996	258
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40	27.92	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	16.8786008358	89216
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.2.0.1.2.0.1.5.0	search with cache (only 1: induction l as [| r0 l Hrecl0]; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros r1 r2; only 1: intros; only 1: elim H; only 1: auto with real; only 1: intros b Hb; only 1: auto with real; only 1: reflexivity).	0.841701984406	1932
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40	0.1.1.9.4.13.12.0	search with cache (only 1: symmetry; only 1: compute; only 1: induction l as [| r l Hrecl]; only 1: trivial; only 1: case (Rle_dec r a); only 1: intuition eauto  3; only 1: unfold Rle; only 1: auto with real).	18.5071268082	34447
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40	16.28	search with cache (only 1: fix ind_0_1_SS 1; only 1: trivial).	3.68608498573	11763
Coq.Reals.RList.RList_P14	40
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	16.22.6.21.8	search with cache (only 1: intros n m; only 1: induction n in m |- *; only 1: trivial; only 1: simpl; only 1: auto with arith).	11.4109561443	29281
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	3.7.7	search with cache (only 1: intros; only 1: subst; only 1: apply Z.eq_refl).	0.485327005386	1519
Coq.Reals.RList.RList_P22	40
Coq.Reals.RList.RList_P23	40
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40	4.19	search with cache (only 1: fix ind_0_1_SS 1; only 1: trivial).	0.41986489296	863
Coq.Reals.RList.RList_P26	40	2.39	search with cache (only 1: fix gcd_divide 1; only 1: auto).	3.27471494675	5352
Coq.Reals.RList.RList_P27	40	1.3.12.4.7.2.4.0	search with cache (only 1: simple induction l1; only 1: Morphisms.solve_proper; only 1: intros; only 1: generalize fp_R0; only 1: unfold frac_part, Int_part; only 1: simpl; only 1: elim H; only 1: auto with zarith real).	9.77131199837	27477
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40	4.30	search with cache (only 1: fix gcd_divide 1; only 1: assumption).	6.93388009071	16256
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40	18.19	search with cache (only 1: fix le_div2 1; only 1: trivial).	7.15009999275	10838
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0445449352264	16
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	12.1.1.10.0	search with cache (only 1: unfold sigma; only 1: intro Maj2; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: auto with zarith).	2.65279388428	14612
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.5.0.5.0.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: generalize (total_order_T r1 r2); only 1: intuition; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.628745794296	2150
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	1.4.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto with real).	0.0347580909729	26
Coq.Reals.Rbasic_fun.Rmin_left	40	1.0.0.0.0.2	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.350924968719	64
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.00915694236755	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0102789402008	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.1.0.1.0.0.0.0.0.0.0.0.0.0.3.1	search with cache (only 1: intros; only 1: case (Rle_dec x y); only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).	13.5073170662	13277
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40
Coq.Reals.Rbasic_fun.Rmin_glb	40	1.0.0.0.0.0.0.1	search with cache (only 1: unfold Rmin; only 1: intros r1 r2; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: red; only 1: unfold Rle; only 1: intuition eauto  4 with real).	0.168461084366	34
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40
Coq.Reals.Rbasic_fun.Rmax_case	40	6.4.0.0.10.26	search with cache (only 1: compute; only 1: intros x y; only 1: case (Rle_dec x y); only 1: rewrite <- (Rplus_0_r x); only 1: auto with zarith real; only 1: auto with real).	20.975646019	65111
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	1.0.0.0.12	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.273988962173	289
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	6.1.3.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: right; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: auto with real).	2.5363240242	5212
Coq.Reals.Rbasic_fun.Rmax_left	40	1.1.1.1.4.4.20	search with cache (only 1: intros; only 1: pattern x at 1; only 1: pattern x at 1; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	8.84235787392	4438
Coq.Reals.Rbasic_fun.Rmax_right	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0114390850067	8
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.00982308387756	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	2.1.3.2.0.1.1.1	search with cache (only 1: unfold Rmax; only 1: intros x y H; only 1: intro; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	6.57343006134	12063
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	4.3.1.2.3	search with cache (only 1: intros E1; only 1: intros H1; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	0.914327859879	1429
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.1.0.0.0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H); only 1: intuition eauto  4 with real; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H)).	4.11187696457	763
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	4.1.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: subst; only 1: intuition).	0.00922203063965	8
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	3.1	search with cache (only 1: intros r H; only 1: intuition).	0.0320680141449	29
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	6.3.8.0	search with cache (only 1: intros; only 1: rewrite pow_ne_zero; only 1: auto; only 1: Nat.order).	0.733707904816	789
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.2.0	search with cache (only 1: intros; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.258198022842	114
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.3.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.260311126709	115
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	6.2	search with cache (only 1: unfold Rminus; only 1: reflexivity).	0.0115919113159	10
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	48.3.10	search with cache (only 1: intros x y H; only 1: intros Hyp; only 1: firstorder).	19.0797159672	34027
Coq.Reals.NewtonInt.NewtonInt_P4	40	0.4.38.12.0	search with cache (only 1: intros m n; only 1: intro p; only 1: intros [H1 H2]; only 1: simpl; only 1: ring).	18.4988479614	38832
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.13.8	search with cache (only 1: intros x n; only 1: intros a Ha; only 1: now intros [=-> ->]).	1.58134293556	1428
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	19.41	search with cache (only 1: fix le_div2 1; only 1: auto).	0.77317905426	5268
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.3.2.19	search with cache (only 1: intros n1 n2 H; only 1: destruct (le_lt_or_eq _ _ H); only 1: intuition; only 1: intuition).	24.1625320911	13562
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40	14.39	search with cache (only 1: fix le_div2 1; only 1: trivial).	14.6235280037	31046
Coq.Reals.Runcountable.R_uncountable	40	12.34.12.54	search with cache (only 1: red; only 1: intros H1; only 1: fix even_spec 1; only 1: tauto).	30.2829020023	92262
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	3.0	search with cache (only 1: intro n; only 1: trivial).	0.178507089615	21
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0	search with cache (only 1: auto with real).	0.00724792480469	1
Coq.Reals.Rfunctions.pow_1	40	8.18	search with cache (only 1: simpl; only 1: auto with real).	0.240113973618	899
Coq.Reals.Rfunctions.pow_add	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0148749351501	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0	search with cache (only 1: simpl; only 1: auto with real).	0.0078809261322	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40	22.0.1.14	search with cache (only 1: intros n IH; only 1: intros; only 1: rewrite S_INR; only 1: ring).	9.91681003571	13265
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40	16.36.26	search with cache (only 1: intros n m; only 1: fix odd_spec 1; only 1: auto).	21.7810180187	50413
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.7.0.0	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: trivial).	0.068822145462	64
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	9	search with cache (only 1: auto with real).	0.00974202156067	17
Coq.Reals.Rfunctions.powerRZ_1	40	12.4.1	search with cache (only 1: intros; only 1: simpl; only 1: ring).	0.163089990616	525
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40
Coq.Reals.Rfunctions.powerRZ_le	40	1.2.0	search with cache (only 1: intros x z; only 1: red; only 1: auto with real).	0.135499954224	97
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	5.9.5.6.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: rewrite Rabs_right; only 1: auto using Rminus_diag_eq with rorders; only 1: right; only 1: auto using Rminus_diag_eq with rorders).	5.72612404823	14427
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.1.0.0.0.1.0	search with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.064866065979	22
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	4.4	search with cache (only 1: intro n; only 1: apply Nat.div2_double).	0.047571182251	23
Coq.Reals.Exp_prop.div2_S_double	40	2	search with cache (only 1: apply Nat.div2_succ_double).	0.0120189189911	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	5.1.6.6	search with cache (only 1: intro; only 1: intro; only 1: intros; only 1: firstorder).	6.08764505386	11854
Coq.Reals.Rpower.Rinv_Rdiv	40	1.1.0.4.0.1.15	search with cache (only 1: unfold Rdiv; only 1: intros a b c; only 1: intros; only 1: field; only 1: split; only 1: assumption; only 1: assumption).	5.57279801369	7185
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	8.11	search with cache (only 1: intros An l; only 1: firstorder).	0.432076931	1598
Coq.Reals.Rpower.D_in_ext	40	1.0.2.20.2.1	search with cache (only 1: intros f g D l x H; only 1: intros; only 1: intro a; only 1: simpl; only 1: rewrite <- H; only 1: auto).	11.4272668362	18271
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	3.1.0	search with cache (only 1: intros; only 1: right; only 1: reflexivity).	0.0242009162903	15
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0056939125061	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40
Coq.Reals.RIneq.Rlt_not_eq	40	12.0.0.0.0.61	search with cache (only 1: intros q r; only 1: intros Hq Hr; only 1: subst; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	10.2730810642	38065
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	2.4	search with cache (only 1: left; only 1: auto with real).	0.00917100906372	27
Coq.Reals.RIneq.Rgt_ge	40	3.1.16	search with cache (only 1: intros a H; only 1: left; only 1: trivial).	0.51143693924	736
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40
Coq.Reals.RIneq.Rlt_gt	40	1	search with cache (only 1: trivial).	0.00688910484314	11
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.00393795967102	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.18	search with cache (only 1: intros n H; only 1: apply Rnot_le_lt).	0.143857955933	616
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.00634479522705	3
Coq.Reals.RIneq.Rnot_lt_le	40	2.4.2.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.258806943893	149
Coq.Reals.RIneq.Rnot_gt_le	40	2.0.4.0	search with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.066577911377	46
Coq.Reals.RIneq.Rnot_gt_ge	40
Coq.Reals.RIneq.Rnot_lt_ge	40	0.1.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0131189823151	5
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.00778818130493	15
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	27.3	search with cache (only 1: intro n; only 1: auto with *).	6.21452188492	10412
Coq.Reals.RIneq.Rle_not_lt	40
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.00973701477051	6
Coq.Reals.RIneq.Rle_not_gt	40	7.3	search with cache (only 1: intros r1 r2; only 1: apply Rle_not_lt).	0.249907016754	257
Coq.Reals.RIneq.Rge_not_gt	40	4.4.6.0.2.1.5.9	search with cache (only 1: red; only 1: intro n; only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intros r1 r2; only 1: intros; only 1: destruct H; only 1: intuition eauto  3; only 1: intuition eauto  3).	9.08031487465	16584
Coq.Reals.RIneq.Req_le	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.00835800170898	3
Coq.Reals.RIneq.Req_ge	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0176541805267	3
Coq.Reals.RIneq.Req_le_sym	40	1.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.00994110107422	3
Coq.Reals.RIneq.Req_ge_sym	40	1.2.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0101330280304	6
Coq.Reals.RIneq.Rgt_asym	40	2.1.32	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	1.39462900162	3466
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.3.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0134592056274	7
Coq.Reals.RIneq.Rle_le_eq	40	7.0	search with cache (only 1: intros a b; only 1: intuition).	0.0150229930878	14
Coq.Reals.RIneq.Rge_ge_eq	40	14.5	search with cache (only 1: intro n; only 1: intuition).	3.84337306023	1593
Coq.Reals.RIneq.Rlt_eq_compat	40	3	search with cache (only 1: RelationClasses.simpl_relation).	0.0211410522461	24
Coq.Reals.RIneq.Rgt_eq_compat	40	4.7.3.3	search with cache (only 1: intros r1 r2; only 1: red; only 1: pattern r1 at 2; only 1: RelationClasses.simpl_relation).	0.490500926971	937
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.128348112106	59
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.3.4.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.284295082092	51
Coq.Reals.RIneq.Rle_dec	40
Coq.Reals.RIneq.Rgt_dec	40
Coq.Reals.RIneq.Rge_dec	40
Coq.Reals.RIneq.Rlt_le_dec	40
Coq.Reals.RIneq.Rgt_ge_dec	40
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0444650650024	3
Coq.Reals.RIneq.Rge_gt_dec	40	1.0.10.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: eauto with rorders).	1.00538706779	1211
Coq.Reals.RIneq.Rlt_or_le	40	3.2.1.1	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.461793899536	100
Coq.Reals.RIneq.Rgt_or_ge	40
Coq.Reals.RIneq.Rle_or_lt	40	3.2.1.2	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.821918010712	485
Coq.Reals.RIneq.Rge_or_gt	40	1.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: edestruct Rlt_or_le; only 1: left; only 1: left; only 1: eauto with rorders; only 1: right; only 1: exact H; only 1: eauto with real).	0.135946989059	293
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.0838718414307	6
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.6.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	3.53415799141	73
Coq.Reals.RIneq.Rplus_ne	40	1.1.11	search with cache (only 1: constructor; only 1: ring; only 1: ring).	2.09749293327	269
Coq.Reals.RIneq.Rplus_opp_l	40
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	5.2.0	search with cache (only 1: intros x y H; only 1: intros; only 1: auto with real).	0.0100917816162	12
Coq.Reals.RIneq.Rplus_eq_compat_r	40	4.0.0.4	search with cache (only 1: intro; only 1: intros x y H; only 1: destruct H; only 1: tauto).	0.103927135468	216
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.4.0.0.1.0.0.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto using Rplus_lt_compat_l with real; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	2.49265408516	2010
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0173349380493	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0173690319061	4
Coq.Reals.RIneq.Rmult_0_r	40	4.4	search with cache (only 1: intros; only 1: ring).	0.0436658859253	13
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0107400417328	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.10.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: split; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	11.877986908	2243
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0403599739075	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	4.13.1	search with cache (only 1: intro; only 1: intros n m H; only 1: intuition eauto  4 with real).	0.641837120056	2642
Coq.Reals.RIneq.Rmult_eq_compat_r	40	0.0.13.0.0.3.1.1	search with cache (only 1: intro; only 1: intro; only 1: rewrite Rmult_comm; only 1: intros; only 1: apply Rquot1; only 1: subst; only 1: do 2 rewrite Rrepr_mult; only 1: apply CReal_mult_comm).	1.85388803482	4909
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	2.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0106739997864	17
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0.2.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0104999542236	17
Coq.Reals.RIneq.Rmult_neq_0_reg	40	2.15	search with cache (only 1: intros a b; only 1: intuition).	0.275358915329	481
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	5.1	search with cache (only 1: intros; only 1: auto with real).	0.248048067093	112
Coq.Reals.RIneq.Rmult_plus_distr_r	40	4.0	search with cache (only 1: intros; only 1: ring).	0.01522397995	6
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: intuition eauto  4 with real).	0.00756692886353	1
Coq.Reals.RIneq.Ropp_0	40	5	search with cache (only 1: field).	0.0133571624756	6
Coq.Reals.RIneq.Ropp_eq_0_compat	40
Coq.Reals.RIneq.Ropp_involutive	40	121.7	search with cache (only 1: intro n; only 1: ring).	11.3509678841	37645
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	2.5.18	search with cache (only 1: intros a0; only 1: intros; only 1: ring).	0.538446187973	1940
Coq.Reals.RIneq.Ropp_mult_distr_l	40	3.22	search with cache (only 1: intros A l; only 1: ring).	0.539875984192	1111
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0121831893921	2
Coq.Reals.RIneq.Rmult_opp_opp	40	20.1	search with cache (only 1: intros; only 1: ring).	5.08232307434	1380
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0130138397217	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0131421089172	2
Coq.Reals.RIneq.Rminus_0_r	40	10.3	search with cache (only 1: intros; only 1: ring).	0.0609641075134	171
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0114891529083	2
Coq.Reals.RIneq.Ropp_minus_distr	40	3.17	search with cache (only 1: intros a n; only 1: ring).	0.227926015854	735
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0119700431824	2
Coq.Reals.RIneq.Rminus_diag_eq	40	2.0.3.0.0	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: rewrite H; only 1: ring).	0.0191860198975	10
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40
Coq.Reals.RIneq.Rminus_eq_contra	40	5.0.1.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: intro; only 1: auto with real).	0.0118429660797	11
Coq.Reals.RIneq.Rminus_not_eq	40	1.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0100600719452	5
Coq.Reals.RIneq.Rminus_not_eq_right	40	2.3.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0126609802246	12
Coq.Reals.RIneq.Rmult_minus_distr_l	40	9.1	search with cache (only 1: intros; only 1: field).	0.0762259960175	118
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.6.3	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.258660078049	83
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0186991691589	4
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: trivial; only 1: auto with real).	0.0546610355377	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: trivial; only 1: auto with real).	0.263823986053	129
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: do 2 rewrite Rrepr_plus; only 1: apply CRealLtForget; only 1: apply CReal_plus_lt_compat_l; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0190169811249	9
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.1.0.0.1	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0111789703369	11
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.1.3.4.3.14	search with cache (only 1: intros f Hf H0; only 1: red; only 1: intros; only 1: destruct H; only 1: auto with real; only 1: auto with real).	3.30457210541	2380
Coq.Reals.RIneq.Rplus_ge_compat_l	40	7.1.1.1.1.30	search with cache (only 1: intros n; only 1: intros; only 1: red; only 1: elim H; only 1: auto with real; only 1: auto with real).	6.80052089691	8401
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.2.2.6.1.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with zarith real; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	8.86794495583	5479
Coq.Reals.RIneq.Rplus_ge_compat_r	40	14.22	search with cache (only 1: intros; only 1: intuition).	0.907216072083	1810
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	1.1.0.0.2	search with cache (only 1: unfold Rgt; only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0205779075623	34
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	3.0	search with cache (only 1: intros; only 1: auto with real).	0.00608992576599	5
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40	0.0.0.0.1.0.3.0.3	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	4.83676719666	628
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	2.0.8	search with cache (only 1: intros; only 1: red; only 1: eauto with real).	0.0207049846649	57
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0520839691162	9
Coq.Reals.RIneq.Ropp_gt_contravar	40	0	search with cache (only 1: eauto using Rle_trans with rorders).	0.00805997848511	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	8.0.0.2.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.396923065186	351
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	3.1	search with cache (only 1: intros; only 1: auto with real).	0.0161421298981	20
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.2.0	search with cache (only 1: intros r1 r2 [H| H]; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.0271229743958	7
Coq.Reals.RIneq.Ropp_ge_contravar	40	0	search with cache (only 1: auto with real).	0.00595498085022	1
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.00872206687927	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.00695610046387	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.00893592834473	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	4.24	search with cache (only 1: intros n H; only 1: intuition).	0.328966856003	1470
Coq.Reals.RIneq.Ropp_le_cancel	40	2.3.6.1.5.2.1	search with cache (only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: rewrite <- (Ropp_involutive r2); only 1: red; only 1: right; only 1: rewrite H; only 1: ring).	27.0106999874	18490
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	7	search with cache (only 1: intuition).	0.0531740188599	43
Coq.Reals.RIneq.Rmult_gt_compat_l	40	8	search with cache (only 1: intuition).	0.0171308517456	22
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	6.42	search with cache (only 1: intros p Hn Hm; only 1: intuition).	17.9597070217	53457
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.6	search with cache (only 1: intros a b Ha Hb; only 1: auto with real rorders).	0.0130469799042	8
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	4.0.1.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.011568069458	9
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.12	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0327458381653	95
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.7.2.4	search with cache (only 1: intros; only 1: unfold Rle; only 1: destruct H; only 1: auto with real; only 1: auto with real).	0.984834194183	1661
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.1.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: apply (Rplus_lt_reg_l r2); only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: auto with real; only 1: auto with real; only 1: ring).	0.22688794136	160
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.0.1.5	search with cache (only 1: intros; only 1: replace r2 with 0 + r2; only 1: replace r1 with r1 - r2 + r2; only 1: auto with real; only 1: ring; only 1: auto with real).	0.333899974823	480
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.2.2	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0100781917572	16
Coq.Reals.RIneq.Rle_0_1	40	0.6	search with cache (only 1: unfold Rle; only 1: auto with real).	0.0134370326996	8
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.648543119431	550
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	5.0.4.20.0.12	search with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: rewrite Rplus_0_l; only 1: trivial; only 1: auto with arith).	19.5579600334	7079
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40	15.16.1.25	search with cache (only 1: Nat.induct n; only 1: now Nat.nzsimpl; only 1: fix le_div2 1; only 1: trivial).	2.99327492714	5188
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	0.1.0.10	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0873370170593	291
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40	7.0.15	search with cache (only 1: fix gcd_greatest 1; only 1: intro n; only 1: eauto with *).	8.38614988327	20039
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40	0.0.7.0.0	search with cache (only 1: intros; only 1: unfold Z.sub, Rminus; only 1: symmetry; only 1: rewrite <- opp_IZR; only 1: apply plus_IZR).	0.183759212494	172
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.4.12.0	search with cache (only 1: intros; only 1: replace 0 with 0 * r2; only 1: auto with real; only 1: destruct H0; only 1: auto with real; only 1: auto with real).	29.7577881813	14502
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40	4.18.0.10	search with cache (only 1: intro n; only 1: intros; only 1: compute; only 1: auto with real).	0.784749984741	1640
Coq.Reals.RIneq.double	40	7.1	search with cache (only 1: intros; only 1: ring).	0.0187799930573	19
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40	2.19.18	search with cache (only 1: intros n IH; only 1: fix even_spec 1; only 1: tauto).	2.53993296623	7543
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40	5.14.3.2	search with cache (only 1: intro x; only 1: intro z; only 1: fix odd_spec 1; only 1: auto).	0.294295072556	1496
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40	1.0.4	search with cache (only 1: intros; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.0633139610291	23
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.2.3	search with cache (only 1: constructor; only 1: apply Peano.le_S_n; only 1: auto with arith).	0.0245499610901	9
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	6.0	search with cache (only 1: intros; only 1: auto with real).	0.0176479816437	27
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1.3.2.6	search with cache (only 1: intro; only 1: simpl; only 1: intros x p; only 1: reflexivity || apply Rle_antisym).	0.063178062439	147
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	10.0	search with cache (only 1: intro; only 1: ring).	0.0506761074066	68
Coq.Reals.Ranalysis2.quadruple_var	40
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.3.1	search with cache (only 1: red; only 1: intros A eq_dec; only 1: trivial).	0.042998790741	161
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	10.8	search with cache (only 1: intros f x l a df; only 1: firstorder).	0.800068855286	1788
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	1.0	search with cache (only 1: intro n; only 1: firstorder).	0.010586977005	3
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	16.1	search with cache (only 1: intros; only 1: firstorder).	0.0614619255066	352
Coq.Reals.Rtopology.open_set_P2	40	31.1	search with cache (only 1: intros x n; only 1: firstorder).	2.93540596962	10877
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	14	search with cache (only 1: easy).	0.0262389183044	111
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	32.5.1.2	search with cache (only 1: intros n; only 1: unfold open_set; only 1: unfold neighbourhood, image_rec; only 1: firstorder).	9.80395507812	47142
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	2.21.23.4	search with cache (only 1: intros; only 1: red; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	4.39755105972	8104
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	2.0.3.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	0.119261026382	34
Coq.Reals.Rseries.Un_growing_shift	40	0.11.8	search with cache (only 1: intros a b Ha Hb; only 1: simpl; only 1: trivial).	0.557553052902	1429
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	7.9.1.0.5.0.24.10.4	search with cache (only 1: intros del1 H1; only 1: red; only 1: elim H1; only 1: intros Un pr; only 1: unfold Rminus; only 1: simpl; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	3.88042283058	22186
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40	0.4.1.2.7.18	search with cache (only 1: assert (int78 : -2 <= 7 / 8 <= 2) by (split; Lra.lra); only 1: generalize PI4_RLT_PI2; only 1: intro H4; only 1: generalize (Ropp_lt_gt_contravar (PI / 4) (PI / 2) H4); only 1: case PI_2_aux; only 1: tauto).	0.334787845612	968
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	17.10.5.15.6	search with cache (only 1: intros; only 1: intro; only 1: intros; only 1: unfold continuity_pt, opp_fct; only 1: auto with real).	5.83846688271	26880
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	11.0.3	search with cache (only 1: intros cond; only 1: intros; only 1: auto).	0.0675718784332	250
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	1.8.1.22	search with cache (only 1: intros n m p H; only 1: apply continuity_pt_inv; only 1: auto; only 1: trivial).	3.10790514946	11168
Coq.Reals.Ranalysis1.continuity_div	40	12.6.0.2.0.0.1.0	search with cache (only 1: intros; only 1: intro n; only 1: rewrite (div_eq_inv f1 f2); only 1: apply continuity_pt_mult; only 1: trivial; only 1: apply continuity_pt_inv; only 1: auto; only 1: auto with real).	8.66172194481	21197
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	3.1.0.0.1.0.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	1.84326195717	625
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.3.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0146160125732	13
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	3.45	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: eauto using Rnot_gt_ge with rorders).	0.909655094147	3623
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.21.1	search with cache (only 1: intuition eauto  2; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	2.58634614944	3013
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.3.2	search with cache (only 1: intros EQ; only 1: red; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.00997400283813	9
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.24	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0532088279724	401
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.3.1.2	search with cache (only 1: intros; only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0295250415802	74
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.2.1.0.29	search with cache (only 1: intros z n H; only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr2) as H4; only 1: assumption).	3.8773920536	10772
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40	3.82.44	search with cache (only 1: intro H; only 1: fix even_odd_double 1; only 1: auto with zarith real).	24.0415210724	141839
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0.2.0.2.0	search with cache (only 1: intros; only 1: red; only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.16520690918	9
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	0.0.3.0.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: ring).	0.0362849235535	8
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	19.0.18	search with cache (only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: Lra.lra).	0.703041791916	2199
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	7.0.13.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_compat_l; only 1: apply PI_RGT_0; only 1: Lra.lra).	0.323801994324	666
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	11.2.0.0.1	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: Lra.lra).	0.444632053375	1287
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	1.0.0.1.0.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: tauto).	0.146972894669	45
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.9.4	search with cache (only 1: apply Rmult_lt_0_compat; only 1: Lra.lra; only 1: apply PI_RGT_0).	0.185126066208	349
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.9.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.670530080795	904
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.1	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0107710361481	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0090548992157	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.18	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0712020397186	242
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.2.0.0.1.2.1	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.163357019424	294
Coq.Reals.DiscrR.IZR_eq	40	6.2.0	search with cache (only 1: intros; only 1: elim H; only 1: ring).	0.151566982269	79
Coq.Reals.ConstructiveReals.CRlt_asym	40	3.44	search with cache (only 1: intro H; only 1: now apply H).	6.68021988869	4957
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	1.12.2.1.12.2.24	search with cache (only 1: constructor; only 1: destruct (CRltLinear R), p; only 1: intros; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: intros; only 1: exact (f x x H H)).	11.5404400826	19240
Coq.Reals.ConstructiveReals.CReq_sym	40
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40	6.1.33	search with cache (only 1: fix sqrtrem_spec 1; only 1: intro x; only 1: auto).	7.27357006073	11156
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40	13.40	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	8.20585203171	11054
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40	8.9.23.0	search with cache (only 1: intro x; only 1: intro H; only 1: fix even_spec 1; only 1: trivial).	38.7342250347	16505
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	36.6	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: firstorder).	1.14302110672	3110
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	5.0	search with cache (only 1: destruct x as [xn limx]; only 1: now f_equal).	0.0123479366302	7
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0	search with cache (only 1: apply CReal_isRingExt).	0.617611885071	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0143439769745	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	9.0	search with cache (only 1: intros [rn limr]; only 1: ring).	0.372874975204	227
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	3	search with cache (only 1: assumption).	0.00875806808472	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.019434928894	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.10.30.11	search with cache (only 1: unfold Rminus; only 1: intro y; only 1: intro a; only 1: ring_Rsqr).	23.8665521145	34061
Coq.Reals.R_sqr.Rsqr_neg_minus	40
Coq.Reals.R_sqr.Rsqr_1	40	0.0	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0094530582428	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	16	search with cache (only 1: auto with real).	0.531357049942	642
Coq.Reals.R_sqr.Rsqr_div	40	1.8.1.3.5	search with cache (only 1: intros z H; only 1: intros; only 1: unfold Rsqr; only 1: field; only 1: trivial).	7.75275492668	5803
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0155770778656	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	7.0.8.1	search with cache (only 1: intro; only 1: intros H1 H2; only 1: unfold Rsqr; only 1: auto with real).	9.17259097099	8896
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	0.0.0.0.1.3.3.0.6.3	search with cache (only 1: intros x n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with S (S (2 * n)); only 1: replace (x ^ S (S (2 * n))) with x * x * x ^ (2 * n); only 1: rewrite Hrecn; only 1: reflexivity; only 1: simpl; only 1: ring; only 1: ring).	9.9644100666	8297
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	2.10.0.5.25	search with cache (only 1: intro q; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intros; only 1: replace x with id x by easy; only 1: apply derivable_pt_id).	3.94542884827	13274
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	4.8	search with cache (only 1: intros eps0 eps0_pos; only 1: intuition).	0.250330924988	118
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	4.0	search with cache (only 1: intros; only 1: lra).	0.0221891403198	6
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40	1.25.8	search with cache (only 1: simpl; only 1: fix gcd_greatest 1; only 1: auto).	5.68982601166	6606
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.013701915741	8
Coq.Reals.Rminmax.Rmax_r	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.013561964035	8
Coq.Reals.Rminmax.Rmin_l	40	2.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: reflexivity; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0130779743195	9
Coq.Reals.Rminmax.Rmin_r	40	1.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: intros; only 1: reflexivity).	0.0135729312897	9
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0136828422546	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.014240026474	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.1	search with cache (only 1: intro; only 1: lra).	0.0106761455536	3
Coq.Reals.Rlimit.eps4	40	0.0	search with cache (only 1: intros; only 1: lra).	0.011314868927	2
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0113549232483	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0106568336487	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	9.4.0	search with cache (only 1: intros; only 1: intro abs; only 1: firstorder).	0.0773639678955	312
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	3.3.1.0	search with cache (only 1: unfold limit1_in; only 1: intros r1 r2 P H1 H2; only 1: intuition; only 1: firstorder).	0.5375020504	310
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.4.14.0.0.0	search with cache (only 1: intros x; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [H| H]; only 1: auto with real; only 1: intros; only 1: apply Rsqrt_positivity).	2.55364704132	6394
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	1.0	search with cache (only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.00967597961426	3
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.1	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0786099433899	42
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.7.32.4.3	search with cache (only 1: intros; only 1: simpl; only 1: rewrite <- Rmult_1_r; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	37.8077559471	62808
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	1.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0116100311279	4
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.5.1	search with cache (only 1: induction N as [| N HrecN]; only 1: intros; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.226289987564	387
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0366079807281	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0321490764618	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	1.2.6.4.0.2.2	search with cache (only 1: assert (lo1 : 0 <= 7 / 8) by lra; only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite cos_PI2; only 1: pose proof (A1_cvg x) as H0; only 1: rewrite sin_PI2; only 1: lra).	5.96488499641	4782
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	2.1.0.0.0.20.3.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: repeat rewrite Rmult_assoc; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	7.44688415527	9758
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.046571969986	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.027645111084	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.1.7.2	search with cache (only 1: pose proof PI_4 as t; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.204662084579	330
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.1.4.0.1.2.5	search with cache (only 1: unfold PI; only 1: unfold Rdiv; only 1: repeat rewrite Rmult_assoc; only 1: apply Rmult_lt_compat_l; only 1: lra; only 1: destruct pi2_int; only 1: lra).	3.405823946	1899
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	4.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0326521396637	17
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40	3.0.21.7.3.15	search with cache (only 1: intro z; only 1: intro; only 1: intro H; only 1: fix ind_0_1_SS 1; only 1: unfold Rle; only 1: auto with real).	34.3848361969	80957
Coq.Reals.PartSum.tech5	40	0.0	search with cache (only 1: simpl; only 1: auto with arith).	0.00818991661072	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	13	search with cache (only 1: auto).	0.0540351867676	135
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	1.0.0.0.0.1.7	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.171599149704	193
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	9.2.1.0.1.0.0.2.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	26.228178978	21179
Coq.Reals.PartSum.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	2.77666306496	6009
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	36.1	search with cache (only 1: intros p Hp; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	7.26750183105	7988
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40	0.41.28	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto with arith).	5.64908790588	11596
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40	9.53	search with cache (only 1: fix odd_spec 1; only 1: assumption).	2.00376915932	6081
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	14.4.15	search with cache (only 1: red; only 1: intros a b; only 1: now destruct 1).	2.70951700211	2744
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	13.5.3	search with cache (only 1: destruct z; only 1: apply CRealLt_morph; only 1: reflexivity).	14.0344460011	1372
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	0	search with cache (only 1: auto).	0.00506591796875	1
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	0	search with cache (only 1: auto).	0.00468707084656	1
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.2.1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.368362903595	97
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	27	search with cache (only 1: now f_equiv).	19.4364168644	361
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	7.0.0.1	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: f_equiv).	0.156798124313	175
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	2	search with cache (only 1: auto with *).	0.0134270191193	33
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.4.6	search with cache (only 1: intro x; only 1: unfold derivable_pt; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0478310585022	85
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0.5.0.0.0.0.0.7.0.0.1	search with cache (only 1: intros a b; only 1: intros x0 y0; only 1: unfold dist_euc; only 1: rewrite <- Rplus_0_r; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rplus_0_r; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rplus_0_r; only 1: rewrite Rsqr_sqrt; only 1: ring_Rsqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	11.4277238846	24324
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	13	search with cache (only 1: auto with real).	0.0828351974487	236
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40	4.31.7.0	search with cache (only 1: intros a H; only 1: intros m; only 1: fix odd_spec 1; only 1: auto).	5.54490804672	25139
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	1	search with cache (only 1: firstorder).	0.0119280815125	2
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	3	search with cache (only 1: intuition).	0.00565505027771	4
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.2.2.2.18	search with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.176275968552	812
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: auto).	0.00635004043579	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	16.9	search with cache (only 1: intros; only 1: now destruct m).	0.226806879044	741
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: auto).	0.0102190971375	4
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	1	search with cache (only 1: now f_equal).	0.0135369300842	2
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	0.3.3.1.9.2	search with cache (only 1: intros; only 1: compute; only 1: apply find_1; only 1: induction m; only 1: auto; only 1: intuition_in).	0.587887048721	1903
Coq.FSets.FMapFullAVL.IntMake.find_2	40	7.0	search with cache (only 1: intros m x e; only 1: apply find_2).	0.0109241008759	9
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40
Coq.FSets.FMapFullAVL.IntMake.elements_3	40	1.0.21.0.2.3.28.7.17	search with cache (only 1: intuition_in; only 1: induction m; only 1: compute; only 1: apply elements_aux_sort; only 1: intuition; only 1: auto; only 1: intros n m H; only 1: intuition; only 1: inversion_clear H0).	10.1469771862	16668
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto using map_option_bst; only 1: auto using map_option_bst).	0.0415170192719	19
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40	1.27.3.9	search with cache (only 1: intros n'; only 1: intros Hb; only 1: fix gcd_divide 1; only 1: auto).	7.82361602783	20391
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	2.1.0.4	search with cache (only 1: split; only 1: red; only 1: tauto; only 1: auto).	0.0192720890045	39
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0	search with cache (only 1: tauto).	0.007887840271	1
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.0.0.0	search with cache (only 1: intros; only 1: compute; only 1: intro; only 1: now subst).	0.0176339149475	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.4	search with cache (only 1: intros x y H; only 1: intuition_in).	0.0121359825134	6
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	10.1.19.14	search with cache (only 1: red; only 1: intros a b H; only 1: intuition_in; only 1: eauto with ordered_type).	38.573830843	56682
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0114200115204	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.00861811637878	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.3.13	search with cache (only 1: intros x; only 1: reduce; only 1: intuition_in).	0.129302024841	482
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.00873303413391	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	0.7.13.21	search with cache (only 1: intro H; only 1: unfold not; only 1: intros H1 H2 H3; only 1: order).	2.81647086143	5503
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	16.1	search with cache (only 1: intuition_in; only 1: eauto with ordered_type).	2.26904702187	851
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.1.2.2.13.54.15	search with cache (only 1: intros n m; only 1: red; only 1: compute; only 1: intro; only 1: intro; only 1: generalize (H _ H0); only 1: order).	19.8145079613	55052
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0.1.2.2.2	search with cache (only 1: intro n; only 1: intros; only 1: intro; only 1: intuition_in; only 1: order).	0.832397937775	318
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	5	search with cache (only 1: trivial).	0.00739693641663	6
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	11	search with cache (only 1: easy).	0.0127627849579	33
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	2.5.2.7	search with cache (only 1: intuition; only 1: intros EQ; only 1: intros LT; only 1: easy').	0.902522087097	2466
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.4.2.0.0.0.3.2	search with cache (only 1: split; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	5.87626194954	4439
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	1.1.1.1.8.5	search with cache (only 1: intros a b Ha Hb; only 1: constructor; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	1.2027759552	2426
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40	0.15	search with cache (only 1: fix le_div2 1; only 1: auto).	0.347978115082	850
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	8.20.5.41	search with cache (only 1: intros x; only 1: destruct x; only 1: reflexivity; only 1: split).	2.42290616035	9600
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	1.28	search with cache (only 1: fix even_spec 1; only 1: intuition_in).	1.39863300323	2956
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0330529212952	7
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40	16.7.23	search with cache (only 1: intros l' H; only 1: fix odd_spec 1; only 1: trivial).	8.8536658287	7075
Coq.FSets.FMapAVL.IntMake.mem_2	40	16.7.24	search with cache (only 1: intros l' H; only 1: fix odd_spec 1; only 1: trivial).	2.99371194839	17651
Coq.FSets.FMapAVL.IntMake.empty_1	40	5.3.10.2	search with cache (only 1: intro n; only 1: intro p; only 1: intros H; only 1: easy).	0.297176122665	1152
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40
Coq.FSets.FMapAVL.IntMake.elements_3	40
Coq.FSets.FMapAVL.IntMake.elements_3w	40
Coq.FSets.FMapAVL.IntMake.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	3.3.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto using map_option_bst; only 1: auto using map_option_bst).	1.27032494545	985
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	17.8	search with cache (only 1: intro z; only 1: now destruct z).	0.799987077713	954
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1	search with cache (only 1: intuition).	0.00739407539368	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0	search with cache (only 1: tauto).	0.0077760219574	1
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	4	search with cache (only 1: intuition).	0.0243139266968	22
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	2.0.2.6.4.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	1.0185649395	1638
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	14	search with cache (only 1: intuition).	0.974848985672	479
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	17.6	search with cache (only 1: red; only 1: intuition).	1.3748691082	1669
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	6.6.9.3.0	search with cache (only 1: unfold Equal; only 1: intros x y H a; only 1: symmetry; only 1: compute; only 1: firstorder).	4.98146891594	7726
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.3	search with cache (only 1: intros x y H; only 1: now subst).	0.0194220542908	21
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.0	search with cache (only 1: red; only 1: auto).	0.0151951313019	2
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	0	search with cache (only 1: firstorder).	0.012866973877	1
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	49.1	search with cache (only 1: intros; only 1: congruence).	10.7770228386	10191
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	1.10	search with cache (only 1: intros; only 1: now BinInt.Z.nzsimpl).	0.102713108063	116
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.2.1	search with cache (only 1: intro n; only 1: intros m IH; only 1: now f_equal).	0.0345540046692	40
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	2.5.2.0	search with cache (only 1: unfold eq, Equal; only 1: intro n; only 1: intros; only 1: now rewrite H).	0.196130990982	421
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	2.0	search with cache (only 1: intros LT; only 1: destr_bool).	0.0082061290741	4
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.00717902183533	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	7	search with cache (only 1: auto).	0.0114221572876	12
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	0	search with cache (only 1: now f_equal).	0.0101499557495	1
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0186290740967	30
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	3.21	search with cache (only 1: intros m H2 H3; only 1: now BinInt.Z.swap_greater).	0.344800949097	661
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40	1.16.19	search with cache (only 1: intro H'; only 1: fix odd_spec 1; only 1: destr_bool).	3.24399185181	7588
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	7.7.1.0.0.0.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: repeat split; only 1: firstorder; only 1: firstorder).	2.70569491386	2570
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40	6.7.0.8.2.22.12	search with cache (only 1: intros n m; only 1: left; only 1: intro; only 1: revert n m; only 1: unfold In; only 1: fix even_spec 1; only 1: trivial).	34.5849909782	86795
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.3.0.0.1.0.20.18	search with cache (only 1: intro n; only 1: intro m; only 1: destruct n, m; only 1: reflexivity; only 1: now split; only 1: now split; only 1: simpl; only 1: now subst).	2.47463107109	8940
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.2.6.0.0.15	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: now split; only 1: easy'; only 1: now subst).	2.57937002182	3126
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00740504264832	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.39.30.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	2.36711502075	15848
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00738000869751	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00705599784851	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	1.2.1.9.1	search with cache (only 1: unfold compare_fun, equal; only 1: intros; only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: intuition discriminate).	0.237036943436	488
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	4.9.3.1	search with cache (only 1: unfold In; only 1: intros LT; only 1: fix even_spec 1; only 1: intuition congruence).	1.25323295593	1881
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	5.0.0.21	search with cache (only 1: intros LT EQ; only 1: intros; only 1: rewrite remove_spec; only 1: auto).	2.07287192345	3179
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.15.1.20	search with cache (only 1: intros Hq Hr; only 1: unfold In; only 1: fix even_spec 1; only 1: trivial).	2.87643098831	9380
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0164411067963	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	4.1.1	search with cache (only 1: intros s s' H H'; only 1: apply <- union_spec; only 1: firstorder).	0.098641872406	39
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0123999118805	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0148651599884	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0182430744171	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0154430866241	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	0.7.45	search with cache (only 1: intros Ha Hb; only 1: fix even_spec 1; only 1: trivial).	6.60993099213	19203
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0146269798279	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40	0.23.0.12	search with cache (only 1: intro H; only 1: unfold In; only 1: fix even_spec 1; only 1: trivial).	10.6910779476	46776
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40	18.8.1.3.9	search with cache (only 1: intro; only 1: setoid_rewrite equal_spec; only 1: intros p Hp; only 1: fix odd_spec 1; only 1: trivial).	21.2297358513	49037
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	1.3.6.0.3.0.8.4	search with cache (only 1: induction i; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: now f_equal).	11.3808100224	5204
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.00887894630432	7
Coq.FSets.FMapPositive.PositiveMap.gempty	40
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.1.0.1.1.20.8	search with cache (only 1: intro x; only 1: intros; only 1: destruct i; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	0.753067016602	2034
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	18	search with cache (only 1: congruence).	0.0645279884338	414
Coq.FSets.FMapPositive.PositiveMap.find_1	40	2.0.1	search with cache (only 1: destruct m; only 1: congruence; only 1: auto).	0.0103437900543	6
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.00561499595642	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.2.1.2.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.02268409729	48
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40	2.1.1.5.0.0.0.0.1.0.0.0.0.1.2	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: auto).	31.127300024	69352
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40	0.0.0.0.1.0.2.0.0.0.0.0.2.0.1.0.28	search with cache (only 1: intro; only 1: induction i; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: auto; only 1: simpl; only 1: auto).	25.0544359684	57648
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0297091007233	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	55	search with cache (only 1: intuition).	1.30889010429	6576
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	6.6.18	search with cache (only 1: intros H; only 1: intro; only 1: auto with *).	1.02687191963	5970
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	1.0.0.1.1.0	search with cache (only 1: split; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intuition).	0.0151579380035	9
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	4.2.6.0	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.917728900909	1261
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.12	search with cache (only 1: intros; only 1: auto with map).	0.0345170497894	110
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0191090106964	5
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2	search with cache (only 1: split).	0.00523400306702	3
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	3.0.0.2.0	search with cache (only 1: red; only 1: intros n'; only 1: intros m1 m2; only 1: intro e; only 1: auto with map).	0.00757098197937	10
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	3.8	search with cache (only 1: intros m IH; only 1: congruence).	0.138976097107	286
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	2.0	search with cache (only 1: intros; only 1: now intuition).	0.00994801521301	4
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	1.0.0.0.7	search with cache (only 1: intro m; only 1: rewrite cardinal_1, elements_Empty; only 1: destruct (elements m); only 1: intuition; only 1: discriminate).	0.227088928223	174
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	0.0.7	search with cache (only 1: intro m; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.0536570549011	38
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	4.0.0.0.0.4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: intuition).	1.15986514091	2009
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.1.0.1.0.0.22.19	search with cache (only 1: intro m; only 1: intro p; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	5.28051686287	18993
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	10	search with cache (only 1: easy).	0.0100250244141	21
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	8	search with cache (only 1: left).	0.00786185264587	9
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	6.0.12.3.11	search with cache (only 1: intros m Hm; only 1: intros H; only 1: destruct m; only 1: trivial; only 1: intuition).	1.66077899933	4395
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	1.0.2.0.1.3.0.2.1.0	search with cache (only 1: intros m Hm x e; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: inversion 2; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	10.6654601097	9359
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0	search with cache (only 1: trivial).	0.00505900382996	1
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00372004508972	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	3	search with cache (only 1: auto).	0.0244760513306	46
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40	0.3.11	search with cache (only 1: fix le_div2 1; only 1: intros a b; only 1: auto).	0.338134050369	646
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	5	search with cache (only 1: now f_equal).	0.0114212036133	6
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	3	search with cache (only 1: auto).	0.00439596176147	4
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00531911849976	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	7.23.31	search with cache (only 1: intro H2; only 1: destruct H2 as (e, H2); only 1: auto).	0.521086931229	5804
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0.3	search with cache (only 1: intro H; only 1: intuition congruence).	0.0056369304657	5
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.0178928375244	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	search with cache (only 1: Dec.fsetdec).	0.0190019607544	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	6	search with cache (only 1: firstorder).	0.0849230289459	49
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.10.0.2	search with cache (only 1: intros a b; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.706026077271	624
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.37661099434	270
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	2	search with cache (only 1: intuition).	0.0250558853149	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	4.0	search with cache (only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_iff s x y); only 1: intuition).	0.624547958374	71
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	1.1.0.1.1.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	10.017318964	3315
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.4.1.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.84097909927	571
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	8	search with cache (only 1: intuition).	0.0250151157379	29
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0251080989838	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.026426076889	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	2	search with cache (only 1: auto with set).	0.00844502449036	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	0.1.4.2	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.22206902504	41
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	1.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0143480300903	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	2.3.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0125620365143	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	0.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0161421298981	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	7	search with cache (only 1: auto with set).	0.0151560306549	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.00865602493286	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	5.3	search with cache (only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_iff s x y); only 1: intuition).	0.359014034271	42
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.00757312774658	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	4.2.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	0.0194509029388	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	5.0	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	0.0558750629425	32
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	0.0.0.0	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0194449424744	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	0.0.2.2.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0208959579468	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: intuition).	0.0160069465637	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0129318237305	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.00983715057373	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00972199440002	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.00710391998291	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	5	search with cache (only 1: intuition).	0.0250890254974	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.00781893730164	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.00875186920166	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00869798660278	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0160350799561	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.302299976349	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0086350440979	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.00857496261597	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00876188278198	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00751996040344	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.274747133255	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00743913650513	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.00722289085388	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00663995742798	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.263346195221	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0139110088348	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	8	search with cache (only 1: auto with set).	1.96948194504	973
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00879311561584	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0600569248199	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00673890113831	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00708699226379	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.00802683830261	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0090868473053	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.3.14.15	search with cache (only 1: intros x; only 1: intros H; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset).	7.99481105804	15161
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	3	search with cache (only 1: auto with set fset).	0.0266649723053	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	10	search with cache (only 1: solve_proper).	0.186067819595	24
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	1	search with cache (only 1: auto with set).	0.0108211040497	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: intuition).	0.0210609436035	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	6.0.0.0.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	0.0695641040802	86
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40	20.72.0	search with cache (only 1: intuition; only 1: generalize LT; only 1: eauto with *).	4.74555587769	25631
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	4.1.0.17	search with cache (only 1: intro z; only 1: intros; only 1: simpl; only 1: eauto).	0.356909990311	1335
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	27.2	search with cache (only 1: intros; only 1: auto with *).	0.16209602356	880
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.00917792320251	4
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.00831699371338	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.00864696502686	4
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.00884103775024	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.00889492034912	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.00910305976868	4
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.00899696350098	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.00908493995667	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	5.4.3.29	search with cache (only 1: intros n H; only 1: induction n; only 1: intuition; only 1: auto).	4.97320008278	4130
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	1.7.4.2	search with cache (only 1: intros f g H l; only 1: intros; only 1: destruct 1; only 1: intuition).	0.50602388382	658
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	1.4.1.10.15.1	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: split; only 1: tauto; only 1: fix even_spec 1; only 1: tauto).	5.19958686829	8232
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.280100107193	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	5.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: firstorder).	0.0204019546509	15
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	2.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0161108970642	9
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	7.11.0.7.11.0.6.1	search with cache (only 1: intros m Hm; only 1: split; only 1: rewrite <- H; only 1: subst; only 1: trivial; only 1: rewrite <- H; only 1: subst; only 1: trivial).	22.6537351608	53457
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0443389415741	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.1.0.0	search with cache (only 1: generalize (mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0195949077606	5
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0263888835907	1
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	9	search with cache (only 1: now f_equal).	0.00859999656677	10
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	1.17	search with cache (only 1: intros p q H; only 1: auto).	0.165376901627	166
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0270259380341	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0211849212646	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0162589550018	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0307590961456	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0526502132416	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0464539527893	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0.23	search with cache (only 1: intros p H0 H2; only 1: fsetdec).	1.03396606445	813
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0222799777985	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.21	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.25639414787	521
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0268239974976	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	0	search with cache (only 1: fsetdec).	0.315664052963	1
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0.0.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.0948040485382	3
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.0742948055267	2
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0.4.0	search with cache (only 1: intuition; only 1: rewrite H; only 1: intuition).	0.182171106339	19
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.0785629749298	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.091481924057	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.166557073593	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0713038444519	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.170454025269	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0.0.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.0547368526459	3
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.270989894867	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.161986112595	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	4	search with cache (only 1: fsetdec).	0.0204749107361	5
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0192358493805	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.0350441932678	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0336511135101	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0320191383362	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0542981624603	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0404269695282	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	4	search with cache (only 1: fsetdec).	0.620985031128	120
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	9.9.0.1	search with cache (only 1: intros EQ; only 1: split; only 1: fsetdec; only 1: fsetdec).	2.29284906387	2607
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0396909713745	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0633780956268	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0559139251709	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0845859050751	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	6	search with cache (only 1: fsetdec).	0.12174487114	7
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.121876001358	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	5.0	search with cache (only 1: intuition; only 1: fsetdec).	0.112840890884	7
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.0884149074554	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	6	search with cache (only 1: fsetdec).	0.0310690402985	7
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0276999473572	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	2	search with cache (only 1: fsetdec).	1.39727592468	703
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0180101394653	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0434091091156	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0359809398651	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0404491424561	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.021910905838	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	4.15.17	search with cache (only 1: intros; only 1: intros Hab; only 1: fsetdec).	1.27280902863	1231
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0585219860077	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0844662189484	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	1.10.3	search with cache (only 1: constructor; only 1: fsetdec; only 1: intuition).	1.06168985367	589
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.186941862106	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.164329051971	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40	24.0.0.9.0.0.1	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: firstorder; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: firstorder).	25.4207038879	16482
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.13.2.0.1.0.0.4	search with cache (only 1: intro H; only 1: unfold Empty; only 1: intros; only 1: intuition; only 1: rewrite M.fold_1; only 1: intuition; only 1: simpl_relation; only 1: auto with *).	3.54120182991	5815
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	4.25.0.3.0	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: intuition; only 1: intuition).	4.6724820137	7886
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.1.0.0.0.0.25	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto with set; only 1: auto with set).	4.48548603058	4653
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.2.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set).	0.0183229446411	13
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	0.0.2.0.1.47	search with cache (only 1: intro; only 1: rewrite elements_Empty, M.cardinal_1; only 1: destruct (elements s); only 1: simpl; only 1: intuition; only 1: discriminate).	22.4689109325	55508
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.8.0.5.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: set (l := rev (elements s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	16.6507849693	27968
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	8	search with cache (only 1: intuition).	0.0348320007324	18
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	8.0.0	search with cache (only 1: intro; only 1: intro; only 1: firstorder).	0.1315741539	92
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40	2.0.0.1.0.1.0.9.5.0.0.6	search with cache (only 1: intuition; only 1: red; only 1: red; only 1: intros; only 1: compute; only 1: destruct (E.compare x y); only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: intuition; only 1: ME.elim_comp; only 1: auto with ordered_type).	17.4440219402	10035
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	9.1.18	search with cache (only 1: intuition; only 1: apply P.fold_equal; only 1: intuition).	22.1839869022	631
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0081889629364	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: intuition).	0.273623943329	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.121442079544	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.1	search with cache (only 1: red; only 1: now subst).	0.0104310512543	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0.18.4	search with cache (only 1: intro n; only 1: intro A; only 1: fsetdec).	1.84783101082	1254
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.0.18	search with cache (only 1: intros; only 1: apply singleton_2; only 1: now subst).	0.0200951099396	187
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	3.26.18	search with cache (only 1: intros Hn; only 1: intros a H; only 1: fsetdec).	4.77785420418	12113
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	1.3.16	search with cache (only 1: intros n m; only 1: intros EQ; only 1: fsetdec).	1.06900596619	966
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.300045013428	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0863580703735	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0389108657837	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0.43	search with cache (only 1: intros a b c0; only 1: fsetdec).	1.5456340313	4550
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0.4.0	search with cache (only 1: unfold Subset; only 1: firstorder; only 1: fsetdec).	0.196135997772	30
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	11.0.3	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.78104019165	510
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0	search with cache (only 1: fsetdec).	0.0455470085144	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0347969532013	1
Coq.FSets.FMapList.Raw.empty_1	40	4	search with cache (only 1: now f_equal).	0.0110909938812	5
Coq.FSets.FMapList.Raw.empty_sorted	40
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	16.0.0.12	search with cache (only 1: intros [| ]; only 1: auto; only 1: unfold Empty, PX.MapsTo; only 1: auto with *).	1.43447589874	5051
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40	2.29	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	3.85407185555	6748
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto with ordered_type).	0.00612306594849	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00423407554626	1
Coq.FSets.FMapList.Raw.elements_3	40	1.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: intuition).	0.0107851028442	5
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.2.0.3.1.2.0.0.2	search with cache (only 1: induction m; only 1: intuition; only 1: constructor 1; only 1: destruct a; only 1: simpl; only 1: inversion 1; only 1: subst; only 1: constructor; only 1: intuition).	0.799018144608	1650
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	4.3.1.9.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intuition; only 1: constructor 2; only 1: inversion_clear H; only 1: auto).	4.31403398514	7333
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.3.0.2.1.2.0.12.0.51	search with cache (only 1: intro; only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: constructor; only 1: inversion_clear Hm; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	5.21630787849	23154
Coq.FSets.FMapList.Raw.map2_alt_equiv	40	5.11	search with cache (only 1: fix even_spec 1; only 1: easy).	0.0793368816376	186
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40	0.43	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.805306911469	2811
Coq.FSets.FMapList.Make.mem_2	40	1.44	search with cache (only 1: fix le_div2 1; only 1: trivial).	1.17884302139	5775
Coq.FSets.FMapList.Make.empty_1	40	8.18	search with cache (only 1: intros a n H; only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r).	0.0838181972504	570
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40	4.2.1.0.11.13.3.3.8	search with cache (only 1: destruct m; only 1: intros sorted hyp; only 1: simpl; only 1: intuition; only 1: inversion H; only 1: subst; only 1: intuition; only 1: subst; only 1: intuition).	14.3257071972	62126
Coq.FSets.FMapList.Make.add_1	40	1.32.23.7.13	search with cache (only 1: intros n m; only 1: intros; only 1: revert n; only 1: fix gcd_greatest 1; only 1: auto).	29.1790030003	111955
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	3.0	search with cache (only 1: intros m; only 1: auto).	0.00640797615051	5
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00604104995728	2
Coq.FSets.FMapList.Make.elements_3	40	0.3.1	search with cache (only 1: intros; only 1: induction m; only 1: intuition).	0.0116770267487	7
Coq.FSets.FMapList.Make.elements_3w	40	1.11	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.0155260562897	61
Coq.FSets.FMapList.Make.cardinal_1	40	1	search with cache (only 1: eauto).	0.0095591545105	2
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40	9.10.0	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: trivial).	0.436537981033	976
Coq.FSets.FMapList.Make.equal_2	40	11.12.1	search with cache (only 1: intros m; only 1: fix even_spec 1; only 1: trivial).	1.40695810318	3740
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40	4.30.9.0	search with cache (only 1: intros m IH; only 1: intros P H0 HS; only 1: fix le_div2 1; only 1: assumption).	6.34030508995	33953
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40	4.5.5.32.15	search with cache (only 1: intro; only 1: red; only 1: intro H; only 1: fix le_div2 1; only 1: trivial).	25.6274390221	59847
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.10	search with cache (only 1: red; only 1: auto with sets).	4.01074290276	60
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40	2.25.6	search with cache (only 1: intros l2; only 1: fix gcd_divide 1; only 1: auto with sets).	1.1663749218	5361
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	0.2.14	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with sets).	0.26086306572	156
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	1.53.20	search with cache (only 1: intro; only 1: constructor; only 1: auto).	0.953803062439	13981
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.2.3.0	search with cache (only 1: red; only 1: intros y H2; only 1: apply Acc_intro; only 1: auto with sets).	0.00835919380188	9
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	4.4.4.3	search with cache (only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).	0.37379193306	1585
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.0.0.0.0.0.0.0.0.0.18	search with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	15.6410849094	13573
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	search with cache (only 1: trivial).	0.00619101524353	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	7.0	search with cache (only 1: simpl; only 1: auto).	0.00611615180969	9
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.0.4	search with cache (only 1: Nat.cases n; only 1: trivial; only 1: trivial).	0.0243170261383	7
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalN.Unsigned.of_inj	40	10.3.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.400233030319	320
Coq.Numbers.DecimalN.Unsigned.of_iff	40	2.5.6.0.1.0.2	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	2.1730761528	3085
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1	search with cache (only 1: tauto).	0.00615215301514	2
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	1.14.41	search with cache (only 1: repeat red; only 1: BinInt.Z.nzsimpl; only 1: now nzsimpl).	0.647889852524	1862
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	9	search with cache (only 1: easy).	0.0174689292908	10
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.100271940231	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.5.0.1	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: intro H2; only 1: simpl; only 1: now nzsimpl).	0.498661994934	66
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	4.24	search with cache (only 1: fix odd_spec 1; only 1: trivial).	1.16002106667	1011
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.8.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: intro H2; only 1: simpl; only 1: now nzsimpl).	0.762454032898	176
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.26	search with cache (only 1: intros H; only 1: compute; only 1: now nzsimpl).	1.04655790329	1243
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40	1.0.15	search with cache (only 1: fix le_div2 1; only 1: intros n m; only 1: now PeanoNat.Nat.nzsimpl).	0.256175994873	749
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.137274026871	26
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0117428302765	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0117688179016	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.239580869675	41
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	9.24.0	search with cache (only 1: intros; only 1: do 2 rewrite <- add_opp_r; only 1: now apply add_le_mono_r).	10.5509748459	6725
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.13.7	search with cache (only 1: intro n; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	1.26747608185	1456
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0171489715576	16
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	3.11.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.164228916168	205
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.2.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.063187122345	16
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	0.0.0.9.19.8.17	search with cache (only 1: intro; only 1: intuition; only 1: rewrite add_comm; only 1: destr_bool; only 1: apply testbit_odd_0; only 1: rewrite ?add_0_r; only 1: apply testbit_even_0).	4.49844193459	8639
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	1.0.0.0.10.5.19.0.2	search with cache (only 1: intros x y Hxy; only 1: compute; only 1: destruct (le_gt_cases x 0); only 1: intros; only 1: rewrite <- Hxy; only 1: trivial; only 1: intros; only 1: rewrite <- Hxy; only 1: auto).	3.87320399284	6617
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0113139152527	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	7.6.98	search with cache (only 1: intro Hxz; only 1: bitwise; only 1: trivial).	17.0411100388	64798
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0105268955231	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	4.11.0.18.0	search with cache (only 1: intros; only 1: rewrite <- (opp_involutive a)  at 1; only 1: bitwise; only 1: rewrite <- (opp_involutive a)  at 2; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	2.27338004112	3290
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40	0.0.0.2.2.20.0.2.3	search with cache (only 1: intro n; only 1: intros a; only 1: bitwise; only 1: symmetry; only 1: unfold lnot; only 1: rewrite <- (opp_involutive a)  at 2; only 1: rewrite bits_opp, negb_involutive; only 1: trivial; only 1: trivial).	20.8555178642	21963
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.5.0.1.1	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0822088718414	134
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.5.0.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.169605970383	137
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	1.21.7	search with cache (only 1: intros; only 1: compute; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	0.707355976105	1582
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0979788303375	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	5.3.1.2.12.2.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: easy; only 1: trivial).	37.573996067	41639
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0338611602783	20
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.1.1.2.0	search with cache (only 1: intros a b Hb; only 1: rewrite !rem_eq by trivial; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	0.0373659133911	20
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.0.12.11	search with cache (only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r).	0.67834186554	1217
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.2.2.9.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: trivial).	0.711650133133	1969
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.00904488563538	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.2.2.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.00889492034912	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.2.0.0.2.1.2.0.0.2.17.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases 0 n); only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	3.95936203003	17106
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0106461048126	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	2.1.0.0.2.1.0.1.2.2.1	search with cache (only 1: intro; only 1: intro; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: trivial; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: trivial).	6.4032831192	5850
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.2.0.0.0.2.1.1.0.17	search with cache (only 1: intros n m H; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: solve_proper; only 1: trivial; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: trivial; only 1: now rewrite <- ?add_le_mono_l).	37.9061739445	10624
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	2.3.4.4.2.3.4.5.5.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply sub_le_mono_r).	21.5012419224	30666
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.3.0.0.0.1.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	5.36033797264	6042
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.0.2.1.2.0.0.0.2.1.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	7.84050917625	9568
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	0.0.2.2.2.0.0.0.2.2.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	12.7927420139	13460
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.0.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.024267911911	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	4.1.1.12	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: now rewrite succ_pred).	3.89978504181	2076
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	8.1.0.2.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: trivial).	1.11581397057	1232
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.1.0.7.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	1.40314698219	1042
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	1.0.0.3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- le_succ_l; only 1: rewrite <- le_succ_l; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	1.1865439415	650
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0272040367126	8
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.11.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	2.0534620285	1244
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	5.1.3.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.525439023972	539
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.00915193557739	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	7.7.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	0.781795024872	419
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	5.1.0.1.2.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply abs_eq; only 1: trivial; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: now rewrite opp_nonneg_nonpos).	0.523133993149	687
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.12.35	search with cache (only 1: intros H1 n H2; only 1: destruct_max n; only 1: auto; only 1: auto).	3.07994103432	8937
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40	0.0.14.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct_sgn n; only 1: nzsimpl; only 1: apply abs_eq; only 1: now apply lt_le_incl; only 1: nzsimpl; only 1: tauto; only 1: rewrite mul_opp_r; only 1: nzsimpl; only 1: apply eq_opp_r; only 1: apply abs_neq; only 1: now apply lt_le_incl).	19.1821298599	28710
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.3.4	search with cache (only 1: intros a b c; only 1: apply NZQuot.div_pos; only 1: trivial).	0.191571950912	95
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	4.1.1.6.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	5.79132080078	7071
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	4.21329402924	6877
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.4.3.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: right; only 1: trivial; only 1: trivial).	0.1773250103	241
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.0.5.1.0.1.1.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	4.81604599953	7351
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.4.2.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: right; only 1: trivial; only 1: trivial).	0.104579210281	99
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0198149681091	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0333199501038	28
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00596499443054	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00543117523193	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	3.3.14.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: trivial; only 1: trivial).	18.5774209499	13070
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.1.1	search with cache (only 1: intros; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using div_pos).	0.201310873032	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	1.0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using Private_NZDiv.div_pos).	0.0819230079651	80
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	15.0.0.0.5	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	5.97707891464	2474
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0.9	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.413224935532	431
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	3.3.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.297501087189	361
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.4.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: trivial; only 1: trivial).	0.169495820999	168
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	3.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0352070331573	25
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.138109922409	100
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0325109958649	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	6.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	7.27820205688	1791
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.2.3.2.0.0.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	11.1890912056	1728
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	2.0.2.1.0.2.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	5.28737092018	3448
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.13.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	1.25876617432	1042
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	1.0.0.0.0.2.0.0.3.1	search with cache (only 1: intro m; only 1: intro n; only 1: nzinduct m; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: now rewrite add_0_l; only 1: intro m; only 1: rewrite <- 2!add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.10024094582	2173
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	6.4.1.6.4.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	14.8641791344	12884
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.00917410850525	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_assoc).	0.106886148453	29
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.1.3.3	search with cache (only 1: intro n; only 1: intro p; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.190837144852	134
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	8.7.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_cancel_r).	0.476790904999	458
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	6.8.2	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	1.90305304527	1431
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	2.0.9	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0534498691559	119
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.1	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0157239437103	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.2.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0349199771881	13
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	9.8.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now apply add_move_l).	1.42093896866	961
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	2.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0239598751068	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	5.22.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	17.8000459671	10561
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.6.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.0507428646088	13
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.20.13.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	1.20693802834	3460
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.0277099609375	42
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.4.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition).	0.0255999565125	43
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.2.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: intuition; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0193548202515	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00719809532166	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00663805007935	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	7	search with cache (only 1: auto using div_pos).	0.220136165619	73
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.7.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.0528030395508	66
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.11.1.2.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	4.68672394753	2434
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	1.0.3.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	0.113837003708	110
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.1.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0333209037781	32
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.1.0.0.2.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	7.41056203842	6245
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.1.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0422129631042	32
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.2.0.2.1	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.236512184143	191
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.0110309123993	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	1.0.0.0.0.0.0.0.0.4.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite !(mul_comm c); only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	10.4531040192	5933
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	3.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.284897089005	66
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.3.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: now apply H).	1.00513005257	389
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.4.5.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: now apply H; only 1: now apply H).	1.78389382362	964
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.2.2.3.2.2.2.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	38.3820009232	11023
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	2.3.1.2.0.1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: order; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	6.58723187447	4349
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	0	search with cache (only 1: intuition Z.Private_Tac.order).	0.0088951587677	1
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	13	search with cache (only 1: firstorder).	0.439110994339	170
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	3.6	search with cache (only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.0623841285706	95
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: intuition; only 1: easy; only 1: easy).	0.166021823883	110
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40	6.2.8	search with cache (only 1: intros H H'; only 1: <Coq.Strings.String.t_eqb>; only 1: discriminate).	0.670139789581	1051
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	2.27.1	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.428836107254	1034
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	5.1.0	search with cache (only 1: intro n; only 1: simpl; only 1: now f_equal).	0.00809502601624	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	2.1.25	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	39.046859026	675
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	8.0	search with cache (only 1: intros; only 1: now Morphisms.f_equiv).	0.0158150196075	15
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	8.10.1.4.6	search with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: now Morphisms.f_equiv).	5.05848693848	4741
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	6.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: congruence).	0.0160400867462	19
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40	14.15	search with cache (only 1: fix le_div2 1; only 1: trivial).	27.0708110332	21086
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	1.2.3.0.27	search with cache (only 1: destruct x; only 1: simpl; only 1: intro H; only 1: rewrite H; only 1: auto).	10.8864519596	9000
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40	1.2.7.45	search with cache (only 1: cbn; only 1: intro H; only 1: fix even_spec 1; only 1: trivial).	4.55328702927	8455
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40	3.15	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.126219034195	463
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0	search with cache (only 1: now f_equal).	0.00873494148254	1
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40	1.20.8	search with cache (only 1: destruct x; only 1: fix even_spec 1; only 1: auto).	22.3693480492	14860
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	5.3	search with cache (only 1: simpl in *; only 1: now Nat.nzsimpl).	0.0379400253296	15
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	3.0.1	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.00966215133667	7
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.8.0.0	search with cache (only 1: intros l; only 1: intros; only 1: induction l; only 1: compute; only 1: auto).	10.0685780048	146
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40	2.19	search with cache (only 1: fix even_spec 1; only 1: auto).	10.2022550106	1197
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40	1.9.1.7.2.3	search with cache (only 1: red; only 1: intro H; only 1: simpl; only 1: destruct x; only 1: fix even_spec 1; only 1: auto).	10.1512041092	7652
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.00605392456055	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.00508117675781	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	4	search with cache (only 1: easy || now destruct y).	0.00823378562927	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0565540790558	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: auto).	0.00466299057007	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0	search with cache (only 1: reflexivity).	0.006422996521	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	1.0	search with cache (only 1: intros; only 1: split).	0.00588202476501	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	4.0.0	search with cache (only 1: unfold add31; only 1: intros; only 1: apply phi_phi_inv).	0.0196769237518	15
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	10.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.408658981323	77
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	7.0.0	search with cache (only 1: unfold sub31; only 1: intros; only 1: apply phi_phi_inv).	0.104969978333	32
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.00672793388367	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.2.3.61	search with cache (only 1: intuition; only 1: pose proof (Z.abs_nonneg x) as Hx; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	3.36782407761	6480
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	1	search with cache (only 1: intuition).	0.00834798812866	2
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	5	search with cache (only 1: auto with zarith).	0.0129849910736	23
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.6.0.49.0	search with cache (only 1: unfold to_Z, zdigits; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: auto with zarith).	1.27008891106	3978
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	4	search with cache (only 1: auto).	0.00594305992126	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40	7.15.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: rewrite Zplus_mod; only 1: lia).	3.54522013664	5340
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	5.0.7.1	search with cache (only 1: unfold pred, to_Z, Z.pred; only 1: intros a Ha; only 1: rewrite Zminus_mod; only 1: auto).	0.624048948288	995
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	6.0.0	search with cache (only 1: intros; only 1: generalize wB_pos; only 1: auto).	0.102599143982	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	11	search with cache (only 1: auto).	0.00917196273804	57
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	2.9974770546	1493
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	0.0.2.17.0.24.1	search with cache (only 1: intuition; only 1: case_eq (Z.div_eucl a b); only 1: intros; only 1: now apply Z.mod_pos_bound; only 1: apply Z.mod_le; only 1: trivial; only 1: trivial).	21.1826150417	24132
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.00821685791016	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	1.4	search with cache (only 1: intro; only 1: now elim (Z.lt_irrefl 0)).	0.0203340053558	7
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	3	search with cache (only 1: now apply Z.divide_0_l).	0.0179479122162	4
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	1	search with cache (only 1: trivial).	0.00626492500305	2
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	6	search with cache (only 1: congruence).	0.00730299949646	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0516979694366	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0146791934967	14
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	12.2.30	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: now intros ->).	1.26977992058	4530
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	1.18.7	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: split).	0.347023010254	600
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0170750617981	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.1.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.0513999462128	7
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	1	search with cache (only 1: tauto).	0.00671696662903	2
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	5.3	search with cache (only 1: intuition; only 1: destr_bool).	0.0221190452576	10
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: rewrite andb_false_r; only 1: auto).	0.00932097434998	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	12	search with cache (only 1: firstorder).	0.612334012985	178
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0169959068298	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	3.0.15.0.6	search with cache (only 1: intro H; only 1: intros; only 1: apply Nat.eqb_eq; only 1: unfold eqb, eq; only 1: easy').	2.79693984985	8153
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	2	search with cache (only 1: solve_proper).	0.00708794593811	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	9	search with cache (only 1: auto).	0.0151829719543	10
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	1	search with cache (only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.00775122642517	2
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.00551199913025	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	1	search with cache (only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.00549292564392	2
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	1.1.0.11.2.4.15	search with cache (only 1: split; only 1: destruct (lt_ge_cases n 0); only 1: rewrite <- (mul_0_r n)  at 1; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: order; only 1: order).	3.15198707581	8623
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	6.7.1	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.195220947266	432
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	1.5.7.17.0	search with cache (only 1: intro n; only 1: destruct (lt_ge_cases n 0); only 1: intros; only 1: false_hyp ltac:(H) nlt_0_r; only 1: order).	3.03845000267	8743
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.0.1.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intro n; only 1: now rewrite pred_succ).	0.0233769416809	9
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.15.1.1.0.2.0.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: intro H; only 1: apply le_succ_l; only 1: now rewrite pred_succ).	3.281042099	8030
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	1.8.0.0.1.0.3.0	search with cache (only 1: cases ltac:(n); only 1: intros n H; only 1: rewrite pred_0; only 1: order; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_succ_l in H; only 1: order).	1.99042701721	3279
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	2.0.1.6.0.0.14.0.1.0.16.1.0	search with cache (only 1: cases ltac:(n); only 1: intro n; only 1: induct ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intro p; only 1: rewrite 2!lt_succ_r; only 1: rewrite pred_0; only 1: order; only 1: intros n m H; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	35.9381890297	111536
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	1.0.8.2.12.12	search with cache (only 1: intro H; only 1: intro; only 1: intros n IH; only 1: apply div_unique_exact; only 1: auto'; only 1: auto').	29.1235558987	51795
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	21.0.6.0.1.6	search with cache (only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: tauto; only 1: nzsimpl; only 1: order).	19.4910678864	43461
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.0.3.3	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.112154006958	62
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.3.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.0124900341034	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.00992608070374	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0086350440979	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00777697563171	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.0.0.1.17	search with cache (only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.395951986313	1051
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	1.4.1.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0996208190918	45
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0190000534058	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.2.12.2.3.2.0.4	search with cache (only 1: intro n; only 1: intros; only 1: rewrite mod_add; only 1: reflexivity; only 1: apply le_0_l; only 1: apply add_nonneg_nonneg; only 1: apply le_0_l; only 1: auto'; only 1: auto').	4.66960096359	7747
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	1.2.1.14.0	search with cache (only 1: intros; only 1: intuition; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	22.8117289543	6327
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.0.0.12.11.7.12	search with cache (only 1: cases ltac:(n); only 1: order; only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: apply mod_bound_pos; only 1: auto'; only 1: apply lt_0_succ).	11.3847649097	29812
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.0.0.3.0.4	search with cache (only 1: intro n; only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.141582965851	273
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	6.6.7.2.0.2	search with cache (only 1: intro n; only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	1.28200387955	3049
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.2.2.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: auto; only 1: auto; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.160946130753	106
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.9.5.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: now rewrite pred_succ).	0.439059972763	802
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	5.0.0.0.49.14	search with cache (only 1: intro H; only 1: intro A; only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_0; only 1: split).	5.58433103561	15899
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.3.6	search with cache (only 1: intro H; only 1: unfold pow; only 1: now rewrite recursion_0).	0.0442759990692	80
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	3.0.2.12.6	search with cache (only 1: intro; only 1: intro H; only 1: intro; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l).	4.54594111443	7326
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	3.1.2.4.2	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: trivial).	0.372148990631	657
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	3	search with cache (only 1: solve_proper).	0.0371959209442	12
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.2	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.011314868927	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.1.3.0.0.0.1.26.12	search with cache (only 1: intro H; only 1: destruct H as [[n' H]| [m' H]]; only 1: simpl; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_0_l; only 1: intro n; only 1: order_nz).	4.5995361805	12221
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.15.1.0.0.3.2	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: order'; only 1: order'; only 1: order_nz).	0.892404079437	2209
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0155711174011	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.2	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.00571298599243	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	11.7.0.18.1.2.4.2.126	search with cache (only 1: split; only 1: intros Hb; only 1: intro n; only 1: solve_proper; only 1: firstorder; only 1: intro H1; only 1: destr_bool; only 1: intro Hxz; only 1: eauto).	36.0600788593	79283
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.0.6.1.7.1.0.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: bitwise; only 1: apply testbit_false; only 1: nzsimpl; only 1: order_nz; only 1: order_nz; only 1: order_nz; only 1: order_nz).	2.66197991371	2267
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0106799602509	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0111820697784	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	29.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	3.93349313736	6971
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40	30.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	4.58608293533	8357
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0132610797882	13
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	2.3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: destr_bool; only 1: apply xorb_false_r).	0.0114560127258	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	30.1.1	search with cache (only 1: intro n; only 1: bitwise; only 1: intuition).	4.30196690559	7273
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	0.22.1.37	search with cache (only 1: intros; only 1: apply succ_inj; only 1: unfold ones; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	2.80155110359	3670
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	4.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0133030414581	13
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.1.0.0.0.0.0.0.7.7	search with cache (only 1: simpl_relation; only 1: split; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: intro n; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.789578914642	1802
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.0.1.3.6.2.7.1.6	search with cache (only 1: intro p; only 1: intro n; only 1: nzinduct n; only 1: nzsimpl; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.65835690498	13936
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	15.9	search with cache (only 1: intros m H; only 1: apply lt_lt_add_r).	9.06301093102	6057
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	4.0.2.3.0.0	search with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: trivial; only 1: apply le_0_l).	2.88607788086	1452
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	6.5.0.17	search with cache (only 1: intros n IH; only 1: nzsimpl; only 1: order; only 1: apply le_0_l).	0.871072053909	1197
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.1.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0174181461334	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	4.17.12.11	search with cache (only 1: intros H; only 1: nzsimpl; only 1: now f_equiv; only 1: apply le_0_l).	7.00743508339	8530
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	1.1.1.2.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.92097902298	1906
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.2.3.0.0.2.0.0.3.4.9.4	search with cache (only 1: intros; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order'; only 1: now rewrite <- H).	37.69114995	37199
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.5.0.0.4.7.13.2	search with cache (only 1: intros; only 1: generalize (le_0_l b); only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	4.34201097488	9976
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	2.0.0.0.2.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	5.15973186493	3583
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	1.0.0.1.2.1.0.0.0.2.2.3	search with cache (only 1: intros n m; only 1: destruct (le_ge_cases n m); only 1: intro p; only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l; only 1: intro p; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?add_le_mono_l).	24.0458729267	7885
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	2.0.0.1.2.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	5.43793201447	2027
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.3.1.1.0.3.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r).	8.42171692848	7197
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	1	search with cache (only 1: simpl_relation).	0.00894284248352	2
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	10.16.3	search with cache (only 1: intros n; only 1: intro H1; only 1: now apply divide_mul_l).	0.734090805054	2222
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	3.0.3	search with cache (only 1: intro H; only 1: unfold lcm; only 1: now nzsimpl).	0.0151319503784	17
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.2.2.8.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: intuition; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.161927938461	691
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.3.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	0.0710649490356	60
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.3.3.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: intro; only 1: trivial).	0.124577045441	282
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	3.0.1.0.4.5.0.3.18	search with cache (only 1: intro p; only 1: intro n; only 1: rewrite sub_succ_r; only 1: induct ltac:(n); only 1: now nzsimpl'; only 1: intros n IH; only 1: rewrite sub_succ_r; only 1: rewrite IH; only 1: now nzsimpl').	17.5433609486	34415
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	0.3.1.3.3	search with cache (only 1: intros n m IH H1; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	0.92671585083	819
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.1.0.0.4.3.1	search with cache (only 1: intros n m p; only 1: intros LE; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	3.67650818825	4893
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.2.2.10.28.9	search with cache (only 1: apply sqrt_unique; only 1: split; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: nzsimpl; only 1: apply lt_succ_diag_r).	3.04712700844	6083
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	0.0.0.2.1.8.0	search with cache (only 1: rewrite one_succ; only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_2; only 1: now nzsimpl).	0.34875702858	316
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.4.21.0.0.0.5	search with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros EQ; only 1: now apply lt_le_incl, lt_succ_r, sqrt_nonneg; only 1: order).	1.5846850872	4763
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	9.0.0.1.5	search with cache (only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: now nzsimpl).	0.23966383934	461
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	2.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: order).	0.0141150951385	10
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	8.0.6.4.0.1.5	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	12.1404848099	10514
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.1.0.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: order'; only 1: order).	0.0240061283112	44
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0422010421753	52
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	1.0.0.0.0.1.7.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: apply mul_comm).	3.10492110252	3776
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	1.2.2.5.6.0	search with cache (only 1: intros a b Ha Hb; only 1: apply mod_small; only 1: destruct (mod_bound_pos a b); only 1: trivial; only 1: trivial; only 1: auto).	12.5861518383	12440
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.1.0.3	search with cache (only 1: intros; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.308472156525	151
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.046807050705	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0185751914978	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.050940990448	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.110101222992	19
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.1.2.7.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_shuffle0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.29975199699	1884
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.3.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0639660358429	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0199890136719	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	21.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: simpl_relation).	0.503225803375	834
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	1.1.30.0.52	search with cache (only 1: intro p; only 1: apply lt_eq_cases; only 1: constructor 1; only 1: rewrite lt_succ_r; only 1: apply le_refl).	2.25971007347	19653
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	15.4.3.2.0	search with cache (only 1: intro; only 1: intro; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: trivial).	7.91411805153	4229
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	1.0.0.1	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.00959515571594	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	5.1.1	search with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0114710330963	19
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.101189136505	39
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.1	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.123321056366	49
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0102422237396	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	2.1	search with cache (only 1: intros x y; only 1: order).	0.0193409919739	34
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	17.0.1	search with cache (only 1: intro n; only 1: intro m; only 1: order).	3.7730679512	5709
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	7.0	search with cache (only 1: intros x y H; only 1: order).	0.145447015762	90
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	search with cache (only 1: order).	0.302554130554	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	0.11.0.5.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite lt_eq_cases; only 1: left; only 1: now rewrite lt_succ_r).	8.049669981	4943
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	4.0.5.1.3	search with cache (only 1: intros n H; only 1: intro m; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: intuition order).	1.59778785706	1782
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	1.0.15.1.0	search with cache (only 1: intro m; only 1: intro n; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	2.3710129261	3336
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	0.0.0.1.0.0.0.6.0.3.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: rewrite <- le_succ_l; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	30.7673578262	20204
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.0.8.7.0.0	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite lt_eq_cases; only 1: left; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).	0.4459400177	977
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	2.0.1.8.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.468347072601	720
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.1.0.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.0258538722992	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	6.0.1.0.16	search with cache (only 1: compute; only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	1.54854011536	1782
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	4.4.2.0.1.0	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: intuition order; only 1: split; only 1: intuition order; only 1: intuition order).	0.684378862381	1249
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.00809907913208	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.00769686698914	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.00849199295044	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.0.1.11.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_succ_r; only 1: split; only 1: order; only 1: order).	0.378082036972	1108
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	26.11	search with cache (only 1: intros RS' n; only 1: intuition order).	0.150810956955	1314
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40	57.10	search with cache (only 1: intros m H1 H2; only 1: firstorder).	7.67079210281	28954
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40	9.2.2.16	search with cache (only 1: intro; only 1: intros IH m H1 H2; only 1: compute; only 1: intuition order).	18.5961651802	12406
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	1.5.19	search with cache (only 1: intro; only 1: compute; only 1: intuition order).	2.92279314995	2224
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	2.4.3.5	search with cache (only 1: induction n; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.550680160522	684
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	34	search with cache (only 1: firstorder).	1.62402892113	6201
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	23	search with cache (only 1: now rewrite ?Ha).	0.0321729183197	255
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	5.4	search with cache (only 1: intros; only 1: now rewrite <- ?PeanoNat.Nat.succ_le_mono).	0.0134289264679	26
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40	2.43.24.11	search with cache (only 1: intros a H; only 1: contradict H; only 1: fix gcd_greatest 1; only 1: tauto).	19.5535690784	31095
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	7.8	search with cache (only 1: fix le_div2 1; only 1: trivial).	1.21098399162	2366
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	1.2.20.0.18	search with cache (only 1: intros x; only 1: nzsimpl'; only 1: order; only 1: now apply eq_le_incl; only 1: now apply le_le_succ_r).	1.32366609573	2892
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	4.9.2.19.0.0.0.0.0.0.0.1	search with cache (only 1: assert (AUX : forall a b, 0 < a -> 0 < b -> S a + S b <= S a * S b); only 1: intros a b Ha Hb; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: apply le_succ_l; only 1: rewrite <- add_assoc, <- (add_0_l (a + b)), (add_comm b); only 1: apply add_lt_mono_r; only 1: now apply mul_pos_pos; only 1: red; only 1: intro n; only 1: exists n; only 1: now nzsimpl).	38.3590419292	44856
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	1.6.27	search with cache (only 1: compute; only 1: exists 0; only 1: now nzsimpl).	0.442364931107	716
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.5.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.646153926849	783
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.1.0.12.2	search with cache (only 1: intros n; only 1: intro p; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	6.47719597816	3003
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.1.0.1.12.3	search with cache (only 1: intros n; only 1: intro p; only 1: rewrite mul_comm; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	9.65067410469	4815
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.2.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.00717306137085	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0303978919983	12
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.181113004684	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.670954227448	539
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.2.0.7.2	search with cache (only 1: intros n m Hm; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n), (even m)).	5.6505188942	5818
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.06591796875	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0724899768829	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0186851024628	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	1.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.019702911377	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.11.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: nzinduct n; only 1: tauto; only 1: now apply bi_induction).	2.04891204834	1439
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.0.0.0.2.9	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.127223968506	140
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0192718505859	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	2.14.0.0.1.0.2	search with cache (only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order_pos; only 1: order_pos; only 1: rewrite <- add_0_r  at 1; only 1: now nzsimpl).	10.9251918793	6668
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.0.0.1.0.4.2.8	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	1.55985093117	969
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	1.3.1.0.1.5.39.12	search with cache (only 1: intros a Ha; only 1: rewrite <- add_0_r  at 1; only 1: generalize (lt_succ_diag_r 0); only 1: unfold log2_up; only 1: case compare_spec; only 1: now nzsimpl; only 1: order'; only 1: now nzsimpl).	7.76183199883	10974
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0.0.0.1	search with cache (only 1: intros; only 1: compute; only 1: repeat split; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _)).	0.0118138790131	6
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	11.3	search with cache (only 1: intros x y H; only 1: firstorder).	0.0848908424377	326
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.1.4.1	search with cache (only 1: intros; only 1: transitivity x; only 1: firstorder; only 1: firstorder).	0.063708782196	183
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	3.6.0.0.0.0.11.1.0.0.0.0	search with cache (only 1: intros n m p H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: nzsimpl; only 1: order).	38.8954780102	25627
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.5.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	3.48421907425	2326
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	1.0.0.5.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.168225049973	107
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	2.1.0.1.2.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: order).	0.680613040924	385
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	2.6.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.130680084229	95
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.6.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0692789554596	58
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.9.2.2	search with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.790057182312	1447
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.9.2	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.292815923691	515
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	0.2	search with cache (only 1: intros p n m Hp; only 1: now apply mul_lt_mono_nonneg).	0.00862193107605	12
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	2.2.2.2.5.1	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	1.15854406357	1227
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	14	search with cache (only 1: intuition).	0.0198678970337	115
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	2.24.12.2	search with cache (only 1: unfold not; only 1: intros; only 1: elim (StrictOrder_Irreflexive x); only 1: trivial).	1.46956419945	9336
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	16	search with cache (only 1: intuition).	0.041296005249	239
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.3	search with cache (only 1: intros A C h1 h2; only 1: auto with *).	0.0168960094452	19
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.00672888755798	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.2.1.0.2.1.0	search with cache (only 1: intros x y z; only 1: destruct (P.lt_total x y); only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.13923192024	1068
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.3.2	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.0290651321411	52
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0	search with cache (only 1: eauto with *).	0.0177280902863	1
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	20.11	search with cache (only 1: intros m IH H; only 1: Nat.order).	3.66176795959	7752
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	6.1	search with cache (only 1: intros; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0992629528046	33
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	3.1	search with cache (only 1: intros n m; only 1: intuition Z.order).	0.10503411293	57
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.2	search with cache (only 1: intros; only 1: now f_equiv).	0.0164668560028	4
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	14.2.8	search with cache (only 1: intros a; only 1: inversion 1; only 1: now Z.nzsimpl').	4.05295610428	6054
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40	11.18	search with cache (only 1: fix le_div2 1; only 1: auto).	0.786223173141	1096
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	1.5.1.0	search with cache (only 1: induction x; only 1: auto; only 1: auto; only 1: now Z.nzsimpl).	0.0386469364166	50
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	4	search with cache (only 1: decide equality).	0.126381874084	13
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	1.2	search with cache (only 1: compute; only 1: intuition).	0.0248091220856	53
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.16	search with cache (only 1: destruct x; only 1: easy || now destruct Hb).	0.0219910144806	136
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	4.0.9.0.2.0	search with cache (only 1: intros (x1, x2); only 1: intro H; only 1: red; only 1: destruct 1; only 1: simpl; only 1: auto).	1.63063597679	1719
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	7.15.9.3.2.3.7.42	search with cache (only 1: constructor; only 1: hnf; only 1: simpl_relation; only 1: red; only 1: simpl_relation; only 1: intro H; only 1: intros x' x'' Hx' Hx''; only 1: eauto).	5.84828591347	42441
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	4.1.8	search with cache (only 1: split; only 1: tauto; only 1: Bool.destr_bool).	0.097265958786	210
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.00720620155334	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.00864696502686	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00682878494263	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00627088546753	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00620889663696	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.00626397132874	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00601196289062	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00635695457458	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00548791885376	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0060760974884	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0063328742981	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00578284263611	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00573205947876	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00559496879578	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	3.2.0.0.1.0.0.1.0.2.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.3046901226	2836
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	1.6.0.2.2.1.8	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: rewrite <- H0; only 1: intuition).	0.674527168274	2395
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	0.2.9.5	search with cache (only 1: intros l2; only 1: intros x H2; only 1: intros H; only 1: now rewrite H).	0.248306035995	719
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	5.1.0.1.5	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: firstorder  (subst; auto); only 1: simpl in *; only 1: auto).	0.213286876678	312
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	10.6.5.7.12	search with cache (only 1: intro H2; only 1: elim H2; only 1: auto; only 1: intros; only 1: intuition).	1.6657409668	6155
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40	0.66.2.6	search with cache (only 1: induction l; only 1: trivial; only 1: fix le_div2 1; only 1: auto).	10.4914059639	46943
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	1.7	search with cache (only 1: induction 1; only 1: auto).	0.00981903076172	10
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	2	search with cache (only 1: tauto).	0.00701117515564	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0049409866333	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	2.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0082221031189	4
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.6	search with cache (only 1: intros; only 1: intuition).	0.117386817932	8
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.112599134445	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.5	search with cache (only 1: induction 1; only 1: intuition).	0.0140798091888	7
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	9.11.9.15.1	search with cache (only 1: unfold eqk, eqke; only 1: intro y0; only 1: compute; only 1: simpl_relation; only 1: now rewrite H).	11.6103332043	42460
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	1.11.26	search with cache (only 1: intros y Hy; only 1: intuition; only 1: eauto with ordered_type).	1.35674381256	4276
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	2	search with cache (only 1: eauto with ordered_type).	0.0112760066986	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	4.0.7.0.0.0.2.23	search with cache (only 1: split; only 1: intro H; only 1: destruct H; only 1: eauto with ordered_type; only 1: intuition; only 1: intros x y H; only 1: destruct H; only 1: eauto with ordered_type).	1.61001300812	3647
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	1.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0197298526764	5
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.00605201721191	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	2	search with cache (only 1: eauto with ordered_type).	0.0100200176239	12
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	1	search with cache (only 1: eauto with ordered_type).	0.00780415534973	11
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	3.0.3.1.3	search with cache (only 1: simple induction l; only 1: auto; only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	1.33988189697	699
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	2.2.0.19	search with cache (only 1: intro x; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder).	2.7254178524	3471
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.4.0.0.0	search with cache (only 1: inversion_clear 1; only 1: unfold eqke; only 1: induction 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.0203750133514	10
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.0.1.0.1.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0160088539124	10
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.00894498825073	2
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	0.33.4.6.46	search with cache (only 1: constructor; only 1: red; only 1: iorder; only 1: intros H H'; only 1: iorder).	2.52466487885	14358
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.0.13	search with cache (only 1: red; only 1: compute; only 1: iorder).	0.0201811790466	92
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.15	search with cache (only 1: intro H; only 1: iorder).	0.0841269493103	352
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	9.14	search with cache (only 1: intros z Hz; only 1: iorder).	0.555512189865	970
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.18	search with cache (only 1: intro H; only 1: iorder).	0.101603984833	325
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	2.2.2.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: intuition; only 1: intuition).	3.70654892921	1009
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	2.2.5	search with cache (only 1: split; only 1: iorder; only 1: iorder).	0.0580880641937	73
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.00960278511047	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	4.1	search with cache (only 1: intro H; only 1: order).	0.00737404823303	7
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0125350952148	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0103399753571	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.79908084869	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0061719417572	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	search with cache (only 1: order).	0.0061149597168	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.00686192512512	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.00598096847534	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.00507497787476	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.00538206100464	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	search with cache (only 1: order).	0.00674200057983	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.0126619338989	12
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	3.1	search with cache (only 1: intro H; only 1: order).	0.00792407989502	14
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	4	search with cache (only 1: order).	0.0571579933167	14
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2.1	search with cache (only 1: intro H; only 1: order).	0.00574803352356	5
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	1	search with cache (only 1: order).	0.00518202781677	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	1	search with cache (only 1: order).	0.00535917282104	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	4	search with cache (only 1: order).	0.05628490448	14
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	12.5.1.5.1.0	search with cache (only 1: intuition; only 1: eapply OrderTac.lt_irrefl; only 1: order; only 1: eapply OrderTac.lt_irrefl; only 1: order; only 1: order).	3.06997299194	5170
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	4.4.11.15.2.24.10.9.12.8	search with cache (only 1: compute; only 1: constructor 1; only 1: intro x; only 1: intro y0; only 1: elim (StrictOrder_Irreflexive x); only 1: trivial; only 1: CRelationClasses.reduce; only 1: transitivity y; only 1: auto with sets; only 1: auto with sets).	22.5109469891	153163
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00491499900818	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00771808624268	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	3.11	search with cache (only 1: compute; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.149289131165	208
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.5.6	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.12334394455	112
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.6.0.2.2.1.7	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: rewrite <- H0; only 1: intuition).	0.669979095459	1828
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.2.9.5	search with cache (only 1: intros l2; only 1: intros x H2; only 1: intros H; only 1: now rewrite H).	0.232910871506	720
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	5.1.0.1.5	search with cache (only 1: intros; only 1: induction l as [| a l' Hrec]; only 1: firstorder  (subst; auto); only 1: simpl in *; only 1: auto).	0.189857006073	312
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	10.0.4.7.11	search with cache (only 1: intro H2; only 1: elim H2; only 1: auto; only 1: intros; only 1: intuition).	1.18118882179	3989
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	0.65.0.5	search with cache (only 1: induction l; only 1: trivial; only 1: fix le_div2 1; only 1: auto).	9.23781299591	34662
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	13.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: eauto).	0.0250399112701	130
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	1	search with cache (only 1: now intros <-).	0.024188041687	2
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40	1.1.0.0.1.3.3.5.0	search with cache (only 1: intros; only 1: invlist InA; only 1: auto with *; only 1: constructor; only 1: invlist Sorted; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: eauto; only 1: eauto).	6.59522914886	4898
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	1	search with cache (only 1: firstorder).	0.00675392150879	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: repeat split).	0.00465297698975	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	3	search with cache (only 1: intuition).	0.00772213935852	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	3.13	search with cache (only 1: compute; only 1: easy).	0.116446971893	234
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.00651597976685	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	21	search with cache (only 1: trivial).	0.426918029785	1151
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	2	search with cache (only 1: auto).	0.00534605979919	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	10	search with cache (only 1: firstorder).	0.0158109664917	37
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.0.2	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros (x1, (H2, H3)); only 1: elim H2; only 1: firstorder).	0.0855691432953	7
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0827767848969	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	6.97.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	30.4315178394	113163
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	5.1.0.12.55.5	search with cache (only 1: intuition; only 1: elim H; only 1: intro; only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	6.39467191696	25029
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	1.18.6.7.7.4	search with cache (only 1: red; only 1: induction l; only 1: now intros ->; only 1: intro; only 1: rewrite H; only 1: firstorder).	34.7393770218	12842
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.0.13.14	search with cache (only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now compute; only 1: now compute).	7.40345191956	4035
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.14	search with cache (only 1: inversion 1; only 1: auto).	0.122251033783	202
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	13	search with cache (only 1: intuition).	0.016706943512	63
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00785088539124	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.00450611114502	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0119919776917	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	4.2	search with cache (only 1: intros x y H; only 1: eauto).	0.0168430805206	13
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.0.0.0.0	search with cache (only 1: split; only 1: auto; only 1: intros x x' Hxx'; only 1: auto; only 1: eauto).	0.0115630626678	6
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.1.0.3.0.0.0.5.0.0.1.0	search with cache (only 1: split; only 1: red; only 1: unfold eqke; only 1: intuition; only 1: intros EQ; only 1: unfold eqke; only 1: intuition; only 1: unfold eqke; only 1: intros a Ha; only 1: intuition; only 1: eauto; only 1: congruence).	5.09052586555	3857
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.16.6.16	search with cache (only 1: intro x; only 1: intros; only 1: rewrite <- H; only 1: intuition).	2.84439611435	8327
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	1.3.11.0	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: intuition).	3.02850985527	2459
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.4.0.0.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: unfold eqke; only 1: compute in H0; only 1: intuition; only 1: intuition).	0.0263919830322	10
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	29	search with cache (only 1: intuition).	0.140175104141	1265
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	2.2.3.0.0.2.0.29	search with cache (only 1: compute; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	2.36079502106	16524
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	2.2.2.1.0.2.0.0	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	1.16661596298	5796
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	2.0.2.0.0.0.3.0.0.3.4.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	31.7568080425	32426
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	3.0.3.0.13	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.750734090805	632
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.00857710838318	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	16	search with cache (only 1: solve_max).	0.886466026306	665
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.015105009079	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	1.1.1.0.2.1.1.1.0.1.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	12.7824869156	8069
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	4	search with cache (only 1: solve_max).	0.0279648303986	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	3	search with cache (only 1: solve_max).	0.0235829353333	18
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	3.0	search with cache (only 1: intuition; only 1: solve_max).	0.0129780769348	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	3.0.3.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.033350944519	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0161139965057	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0957059860229	41
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0148010253906	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	2.2.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0505199432373	12
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	2.0.2.0.0.2.0.2.4.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	10.8344578743	7573
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	6.6.3	search with cache (only 1: destruct (min_spec n m); only 1: intuition order; only 1: intuition order).	0.614408016205	1162
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	1.1	search with cache (only 1: apply min_l; only 1: order).	0.0437409877777	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	3.3.0.4	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.219447851181	154
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.00843286514282	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	8	search with cache (only 1: solve_min).	0.114696979523	59
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0114321708679	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	13.4	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition order).	7.26242208481	4635
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.010488986969	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.00968813896179	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.0106599330902	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.1.0	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.0269739627838	14
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.10	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.133286952972	100
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0316348075867	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0151519775391	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0768690109253	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.2	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0464489459991	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	3.3.1.0.1.1.0.0.0.3	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: simpl_relation; only 1: simpl_relation).	0.648869991302	2618
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	1.12	search with cache (only 1: apply min_mono; only 1: congruence).	0.0228610038757	76
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.1.6	search with cache (only 1: intros x y Hxy Hyz Hy; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0389249324799	79
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	4.4.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0277149677277	76
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	11.11.3.11.3	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	22.4437811375	68471
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	3.3.4.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: congruence; only 1: congruence).	0.124481916428	261
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	4.4.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0501179695129	134
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	41.4.1.6	search with cache (only 1: intros H; only 1: unfold eq; only 1: intros N; only 1: congruence).	5.05589199066	14759
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	1.0.0.0.97	search with cache (only 1: Nat.cases ltac:(n); only 1: simpl; only 1: tauto; only 1: intro n; only 1: trivial).	30.3091080189	53178
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0103521347046	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.00488710403442	1
Coq.ZArith.Znat.positive_N_nat	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00542593002319	2
Coq.ZArith.Znat.positive_nat_N	40	2.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0118489265442	13
Coq.ZArith.Znat.Z_N_nat	40	1.0.4.1	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0126161575317	11
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0.1.0.0.3.0.2	search with cache (only 1: induction n; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.053230047226	119
Coq.ZArith.Znat.Zabs_nat_N	40
Coq.ZArith.Znat.N2Z.id	40	3.0.0.3.7	search with cache (only 1: destruct n as [| [n| n| ]]; only 1: now Morphisms.f_equiv; only 1: now N.nzsimpl'; only 1: now N.nzsimpl'; only 1: reflexivity).	0.370511054993	210
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.2.0.0.0.2.0.1.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	1.70655417442	3564
Coq.ZArith.Znat.N2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0101869106293	1
Coq.ZArith.Znat.N2Z.inj_0	40	2	search with cache (only 1: tauto).	0.00479698181152	3
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00506901741028	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl in *; only 1: trivial; only 1: simpl in *; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	0.0102210044861	10
Coq.ZArith.Znat.N2Z.inj_le	40
Coq.ZArith.Znat.N2Z.inj_lt	40
Coq.ZArith.Znat.N2Z.inj_ge	40
Coq.ZArith.Znat.N2Z.inj_gt	40
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	0.0.2.2.3.3	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.160189151764	229
Coq.ZArith.Znat.N2Z.inj_mul	40	0.3.1.42.2.21	search with cache (only 1: destruct n; only 1: now N.nzsimpl; only 1: destruct m; only 1: reflexivity; only 1: simpl; only 1: f_equal).	6.92889595032	11002
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.6.3.1.4	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl in *; only 1: now rewrite Pos.add_1_r).	0.279927968979	352
Coq.ZArith.Znat.N2Z.inj_pred_max	40
Coq.ZArith.Znat.N2Z.inj_pred	40
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40
Coq.ZArith.Znat.N2Z.inj_quot2	40
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.6.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.164206027985	319
Coq.ZArith.Znat.Z2N.id	40	2.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0113589763641	6
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.0.5	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.268958091736	196
Coq.ZArith.Znat.Z2N.inj_0	40	3.0	search with cache (only 1: simpl; only 1: trivial).	0.0046329498291	5
Coq.ZArith.Znat.Z2N.inj_pos	40	0.1	search with cache (only 1: simpl Z.to_N; only 1: split).	0.00529003143311	3
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00396919250488	1
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	1.4.2	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.0384311676025	10
Coq.ZArith.Znat.Z2N.inj_succ	40
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40
Coq.ZArith.Znat.Z2N.inj_compare	40
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40
Coq.ZArith.Znat.Z2N.inj_quot2	40	0.0.0.20.9.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.50893497467	7347
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.6	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0154800415039	27
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	2.1.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: easy).	0.0127539634705	8
Coq.ZArith.Znat.Zabs2N.id_abs	40	6.13	search with cache (only 1: Z.bitwise; only 1: now destruct n, m).	0.20720911026	207
Coq.ZArith.Znat.Zabs2N.id	40	24	search with cache (only 1: now destruct n).	0.0313730239868	284
Coq.ZArith.Znat.Zabs2N.inj_0	40	1	search with cache (only 1: split).	0.00413203239441	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	1	search with cache (only 1: trivial).	0.00514197349548	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.0.0.0.0.2	search with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.00803780555725	8
Coq.ZArith.Znat.Zabs2N.inj_opp	40	8	search with cache (only 1: now destruct n).	0.00760817527771	9
Coq.ZArith.Znat.Zabs2N.inj_succ	40	6.7.0.1.0	search with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: now destruct 1 || intros _; only 1: now destruct p; only 1: easy).	0.897500038147	892
Coq.ZArith.Znat.Zabs2N.inj_add	40	1.1.0.4.0.0.0.0.0.22	search with cache (only 1: destruct n as [| n| n], m as [| m| m]; only 1: easy || now destruct Hm; only 1: easy || now destruct Hm; only 1: easy || now destruct Hm; only 1: trivial; only 1: trivial; only 1: easy || now destruct Hm; only 1: easy || now destruct Hm; only 1: easy || now destruct Hm; only 1: trivial).	2.70246195793	3562
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40
Coq.ZArith.Znat.Zabs2N.inj_compare	40
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.1.6.6.4.12.2.0.2	search with cache (only 1: intros Hn Hm; only 1: rewrite !abs_N_nonneg; only 1: destruct m; only 1: simpl Z.to_N; only 1: now destruct n; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct n; only 1: now destruct Hn; only 1: trivial; only 1: trivial).	30.0590589046	49349
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.1.3.0.7.2.0	search with cache (only 1: intros; only 1: rewrite !abs_N_nonneg; only 1: symmetry; only 1: unfold Z.lt, N.lt; only 1: do 2 Morphisms.f_equiv; only 1: now apply Z2N.inj_compare; only 1: trivial; only 1: trivial).	1.22247505188	2665
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.00904107093811	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: now f_equal).	0.00482392311096	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40
Coq.ZArith.Znat.Nat2Z.id	40
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.0109570026398	7
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	2.0.2.0.1.0.0.1.0.0.0.11	search with cache (only 1: destruct n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: intros; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: now destruct 1 || trivial).	3.46116304398	6508
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	2.0.0.1.0.9	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.222348928452	221
Coq.ZArith.Znat.Z2Nat.inj_0	40	9	search with cache (only 1: now Nat.nzsimpl).	0.0259850025177	10
Coq.ZArith.Znat.Z2Nat.inj_pos	40	1	search with cache (only 1: trivial).	0.00539302825928	2
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.00525808334351	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	53	search with cache (only 1: now destruct n).	0.593245029449	1440
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.00923013687134	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.2.0.0.0.0.0.2.0.0.0.43	search with cache (only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.01183390617	10197
Coq.ZArith.Znat.Zabs2Nat.id	40	1.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.015762090683	16
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	3	search with cache (only 1: trivial).	0.00428700447083	4
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	1	search with cache (only 1: trivial).	0.00480508804321	2
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.00433611869812	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.2.0.1.0.0.1.1.0.0.1.0.0.5	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	3.59960103035	7218
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.2.0.1.0.0.1.2.1.0.0.1.2.0.0.6	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hz; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hz; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	9.58434891701	17729
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.6.10.2	search with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: auto; only 1: now apply Zlt_0_rec).	1.11275315285	2315
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.2.5.2.1.0.0.0.5	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	26.6652669907	41448
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	8.02362799644	17611
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.7.0.25.46	search with cache (only 1: intros EQ; only 1: intros n m; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	7.27200102806	24370
Coq.ZArith.Zcompare.Zge_compare	40	1.13	search with cache (only 1: intros a b; only 1: now case Z.compare_spec).	0.127996921539	239
Coq.ZArith.Zcompare.Zgt_compare	40	2.21.22	search with cache (only 1: intros a0 a; only 1: intros ->; only 1: now Z.nzsimpl).	11.5972411633	27563
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	0.0.1.148	search with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	27.0718939304	104586
Coq.ZArith.Zquot.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.00775384902954	3
Coq.ZArith.Zquot.Zquot_0_l	40	2.2.1	search with cache (only 1: Z.pos_or_neg a; only 1: now destruct a; only 1: trivial).	0.013023853302	8
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	24.8130578995	46787
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40	0.0.1.0.0.1.0.0.0.1.0.0.1.0.0.0.0.1	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	23.2292351723	41431
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.5.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.166925191879	62
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.1.0	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0488820075989	7
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.3.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0707311630249	32
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.3.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0550870895386	21
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	1.0.0.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.197582006454	110
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	1.0	search with cache (only 1: intro n; only 1: firstorder).	0.011027097702	3
Coq.ZArith.Zdigits.two_compl_value	40	8.20.15	search with cache (only 1: intros EQ; only 1: fix gcd_divide 1; only 1: auto).	1.07202291489	7300
Coq.ZArith.Zdigits.Zmod2_twice	40	11.70	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	10.1697609425	12335
Coq.ZArith.Zdigits.Z_to_binary	40	3.1.7	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	0.142704963684	369
Coq.ZArith.Zdigits.Z_to_two_compl	40	10.21.16	search with cache (only 1: intros EQ; only 1: fix gcd_divide 1; only 1: auto).	3.40529417992	28731
Coq.ZArith.Zdigits.binary_value_Sn	40	3.0.0	search with cache (only 1: intros a n; only 1: simpl in *; only 1: reflexivity).	0.0153830051422	6
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40	0.0.17.8	search with cache (only 1: intros Hz; only 1: fix le_div2 1; only 1: intros; only 1: easy).	1.07552194595	2166
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0	search with cache (only 1: auto).	0.0127239227295	1
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1.2	search with cache (only 1: simpl; only 1: auto).	0.0267698764801	35
Coq.ZArith.Zdigits.Z_div2_value	40	11.10.35.3	search with cache (only 1: simpl; only 1: compute; only 1: intros n Hn; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	10.9638290405	26965
Coq.ZArith.Zdigits.Pdiv2	40	15.13.12.10.2	search with cache (only 1: intros a n Ha; only 1: absurd (1 < 1)%Z; only 1: Nat.order; only 1: constructor; only 1: now destruct a as [| [| | ]| ]).	4.20430111885	12539
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	3.0	search with cache (only 1: intros; only 1: auto).	0.0107390880585	5
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.1	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0133450031281	4
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	3.0.0.8.40	search with cache (only 1: destruct n; only 1: solve_proper; only 1: simpl; only 1: trivial; only 1: now subst).	0.702411174774	3689
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0.0.0.2	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.00648093223572	6
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1.21	search with cache (only 1: simpl; only 1: now destruct n).	0.0409069061279	256
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: trivial).	0.00485301017761	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.00430297851562	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00524187088013	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00478601455688	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40
Coq.ZArith.BinInt.Z.sub_0_r	40
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00548386573792	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40	8.14.59	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: trivial).	11.2761440277	39284
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	20	search with cache (only 1: reflexivity).	0.0336780548096	235
Coq.ZArith.BinInt.Z.compare_le_iff	40	4	search with cache (only 1: reflexivity).	0.0532729625702	56
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.139281988144	99
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	0.1.9.28.12	search with cache (only 1: rewrite <- (mul_0_r n)  at 1; only 1: destruct n; only 1: now f_equal; only 1: trivial; only 1: now nzsimpl).	23.2405409813	28704
Coq.ZArith.BinInt.Z.abs_neq	40
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.1.9.49.0	search with cache (only 1: intro H; only 1: induction n; only 1: now nzsimpl; only 1: destr_eq H; only 1: simpl; only 1: congruence).	9.89978599548	22322
Coq.ZArith.BinInt.Z.sgn_pos	40
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.00940799713135	1
Coq.ZArith.BinInt.Z.pow_0_r	40	10	search with cache (only 1: intuition).	0.0140011310577	21
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	3	search with cache (only 1: auto).	0.00566101074219	4
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0.5.6.0.0	search with cache (only 1: destruct n; only 1: now repeat split; only 1: simpl; only 1: now repeat split; only 1: now destruct 1).	0.273591995239	346
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.0.3.0.1.11.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: rewrite <- (add_0_l 0); only 1: easy; only 1: induction p using Pos.peano_ind; only 1: reflexivity; only 1: rewrite <- Pos.add_1_r; only 1: easy).	0.669888973236	2839
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	5.0	search with cache (only 1: simpl; only 1: split).	0.00558805465698	7
Coq.ZArith.BinInt.Z.succ_double_spec	40	6.0.6.1.11.1.2.3.0.0.0.0	search with cache (only 1: simpl; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: split; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now destruct pos_sub; only 1: trivial).	38.7962629795	137349
Coq.ZArith.BinInt.Z.pred_double_spec	40	10.1	search with cache (only 1: simpl; only 1: now destruct n).	0.173166036606	77
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.038477897644	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	6	search with cache (only 1: trivial).	0.00610685348511	7
Coq.ZArith.BinInt.Z.testbit_0_l	40	1.0.3.96	search with cache (only 1: induction n; only 1: trivial; only 1: now split; only 1: trivial).	13.6886680126	19018
Coq.ZArith.BinInt.Z.testbit_neg_r	40	66	search with cache (only 1: now destruct n).	4.62989592552	8394
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.00627303123474	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00433993339539	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.612215042114	104
Coq.ZArith.BinInt.Z.le_ge	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.615163803101	104
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40	1.3.2.0	search with cache (only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: unfold leb, le; only 1: now case compare).	0.598993062973	107
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	2	search with cache (only 1: apply add_cancel_l).	0.186887025833	19
Coq.ZArith.BinInt.Z.mul_reg_l	40	0.4.0	search with cache (only 1: intro H; only 1: apply mul_cancel_l; only 1: now nzsimpl).	0.0239679813385	7
Coq.ZArith.BinInt.Z.mul_reg_r	40	3.4	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0381391048431	26
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	12	search with cache (only 1: now nzsimpl').	0.1717710495	46
Coq.ZArith.BinInt.Z.compare_opp	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym).	5.59216618538	13788
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.4.0.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	0.341335058212	295
Coq.ZArith.BinInt.Pos2Z.id	40	1	search with cache (only 1: trivial).	0.00552797317505	2
Coq.ZArith.BinInt.Pos2Z.inj	40
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.2.6.0.79	search with cache (only 1: split; only 1: now injection 1; only 1: intros H; only 1: destruct H; only 1: trivial).	5.01039505005	6054
Coq.ZArith.BinInt.Pos2Z.is_pos	40	31	search with cache (only 1: now Z.nzsimpl).	0.18474817276	483
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	1	search with cache (only 1: easy).	0.00853800773621	2
Coq.ZArith.BinInt.Pos2Z.inj_1	40	3	search with cache (only 1: reflexivity).	0.0149228572845	4
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1	search with cache (only 1: trivial).	0.0651059150696	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.00591206550598	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.0	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: easy).	0.00590491294861	2
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0	search with cache (only 1: trivial).	0.00456094741821	1
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1	search with cache (only 1: now destruct p).	0.00815582275391	2
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.00564217567444	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00574493408203	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00500798225403	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: trivial).	0.00537180900574	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	3	search with cache (only 1: reflexivity).	0.013347864151	20
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	7.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: trivial).	0.00684189796448	18
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: trivial).	0.00444102287292	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	1.0.0	search with cache (only 1: simpl; only 1: revert q; only 1: easy).	0.00675511360168	4
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	1	search with cache (only 1: reflexivity).	0.00617909431458	2
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	search with cache (only 1: split).	0.0058159828186	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40
Coq.ZArith.BinInt.Pos2Z.inj_neg	40
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	13.12.0.5	search with cache (only 1: split; only 1: now injection 1; only 1: intro H; only 1: now f_equiv).	0.892375946045	1515
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	1	search with cache (only 1: now injection 1).	0.0148379802704	2
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.2.1.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0196061134338	7
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: easy).	0.00534296035767	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1.9.11	search with cache (only 1: intros EQ; only 1: simpl in *; only 1: easy').	0.111160993576	322
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.00540804862976	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	1	search with cache (only 1: easy).	0.0088210105896	2
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	6.8	search with cache (only 1: intros H; only 1: now f_equal).	0.0209128856659	112
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	4	search with cache (only 1: now split).	0.00484800338745	5
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0	search with cache (only 1: trivial).	0.00430488586426	1
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0	search with cache (only 1: easy).	0.00465416908264	1
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00462293624878	2
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	8	search with cache (only 1: split).	0.00484609603882	9
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0049090385437	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00420713424683	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0048840045929	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.00381898880005	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: trivial).	0.00456881523132	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2	search with cache (only 1: trivial).	0.00430917739868	3
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	3	search with cache (only 1: trivial).	0.00453090667725	4
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00380706787109	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.00512385368347	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.00447010993958	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: trivial; only 1: easy).	0.0108029842377	4
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.0.2.1.0.3	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: simpl; only 1: easy).	0.150228977203	134
Coq.ZArith.BinInt.Z2Pos.inj_succ	40
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40
Coq.ZArith.BinInt.Z2Pos.inj_mul	40
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40
Coq.ZArith.BinInt.Z2Pos.inj_leb	40
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.12.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: simpl; only 1: easy || now destruct y; only 1: simpl; only 1: easy || now destruct y).	0.911195993423	669
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.1	search with cache (only 1: apply Pos2Z.inj; only 1: now destruct x as [| [x| x| ]| ]).	0.00707411766052	3
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	5.0	search with cache (only 1: intros _ H ->; only 1: trivial).	0.00750494003296	7
Coq.ZArith.BinInt.ZL0	40	5.2	search with cache (only 1: symmetry; only 1: now PeanoNat.Nat.nzsimpl').	0.049595117569	14
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	13	search with cache (only 1: now Z.nzsimpl').	1.82986998558	261
Coq.ZArith.BinInt.Z_eq_mult	40	3.40.2	search with cache (only 1: intro H1; only 1: rewrite H1; only 1: now Z.nzsimpl).	0.944859027863	3190
Coq.ZArith.Zcomplements.floor_gt0	40	1	search with cache (only 1: easy).	0.00659584999084	2
Coq.ZArith.Zcomplements.floor_ok	40	3.0.3.0.3.0.6.5.0.9.9.8	search with cache (only 1: simpl; only 1: unfold Z.le; only 1: intros; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: induction p as [p IH| p IH| ]; only 1: trivial; only 1: apply IH; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	19.9536411762	25896
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	33.4	search with cache (only 1: intro H; only 1: now destruct n as [| [| | ]| [| | ]]).	1.54505181313	1779
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	1	search with cache (only 1: Morphisms.solve_proper).	0.00532412528992	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	8.63454818726	8943
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0186870098114	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	0.0.0.0.0.0.2.2.2.0.3.3.48.0.34	search with cache (only 1: intros Hb; only 1: boolify_even_odd; only 1: destruct n; only 1: now Z.nzsimpl; only 1: induction p; only 1: simpl; only 1: congruence; only 1: easy; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	13.829005003	52879
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0117859840393	1
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	4.0.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [| | ]| [| | ]]).	0.483110904694	38
Coq.ZArith.Zeven.Zodd_quot2	40
Coq.ZArith.Zeven.Zodd_quot2_neg	40
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40
Coq.ZArith.Zeven.Zodd_ex	40
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.1.0.9.6	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).	0.461708068848	468
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	2.2.0.6.0.1.1.0.1.45.3	search with cache (only 1: boolify_even_odd; only 1: induction p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: easy'; only 1: split; only 1: split).	34.0758111477	18910
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40	12.21.0	search with cache (only 1: boolify_even_odd; only 1: fix even_spec 1; only 1: easy).	1.55086493492	2589
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.00619101524353	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0061559677124	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00536417961121	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	22.0	search with cache (only 1: intros x y H; only 1: firstorder).	4.19530916214	3224
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.1.21.44	search with cache (only 1: split; only 1: reflexivity; only 1: apply Z.divide_0_r; only 1: auto).	2.5334610939	4356
Coq.ZArith.Znumtheory.Zis_gcd_1	40
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	6.5	search with cache (only 1: intros; only 1: easy).	0.0553600788116	95
Coq.ZArith.Znumtheory.Zis_gcd_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_opp	40
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.00708389282227	4
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	2.8	search with cache (only 1: intros f Hf H0; only 1: firstorder).	0.502177000046	169
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	25.5	search with cache (only 1: intros m H1 H2; only 1: apply H2).	17.0356669426	16937
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40
Coq.ZArith.Znumtheory.not_prime_1	40	18.54.12	search with cache (only 1: intro H; only 1: elim H; only 1: easy || now destruct y).	0.801016807556	6959
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	1	search with cache (only 1: trivial).	0.00689792633057	11
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.3.1	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0111157894135	17
Coq.ZArith.Zdiv.Zdiv_0_l	40	4.0	search with cache (only 1: intros; only 1: trivial).	0.0116600990295	13
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.2.1	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0135412216187	23
Coq.ZArith.Zdiv.Zmod_1_r	40	2.24	search with cache (only 1: intro n; only 1: now Z.nzsimpl).	1.28431916237	4173
Coq.ZArith.Zdiv.Zdiv_1_r	40	2.1.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.037841796875	11
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.00955200195312	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	1.1.2.1	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: trivial; only 1: trivial).	0.0122148990631	9
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.4.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0197768211365	25
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.1.0.1.1.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: replace (a - b) with a + -1 * b; only 1: rewrite Zplus_mod; only 1: rewrite Zplus_mod; only 1: auto with zarith; only 1: auto with zarith).	0.0326600074768	34
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	0.1.5.0.1.10.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.mul_mod; only 1: tauto).	1.73974490166	3386
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.00784492492676	3
Coq.ZArith.Zdiv.eqm_refl	40	2.28	search with cache (only 1: intros H; only 1: easy).	0.23345708847	1222
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.00649404525757	2
Coq.ZArith.Zdiv.eqm_trans	40	6.3.0	search with cache (only 1: unfold eqm; only 1: intros a b Hb; only 1: Z.order).	0.256962060928	170
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.2.3.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: trivial).	0.0638430118561	87
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.1.2.4.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: trivial; only 1: tauto).	0.226938962936	113
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.3.6.3	search with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: trivial; only 1: now destruct b).	1.9687640667	605
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	2.2.4.2.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: trivial; only 1: trivial).	0.255773067474	402
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0	search with cache (only 1: solve_proper).	0.031543970108	1
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.00647687911987	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	1.2.0.21.1	search with cache (only 1: intros a; only 1: destruct n as [| n| n]; only 1: now Z.nzsimpl; only 1: trivial; only 1: trivial).	1.02268505096	3869
Coq.ZArith.Zabs.Zabs_dec	40	5.4.5.43.2	search with cache (only 1: intros n; only 1: destruct n; only 1: now left || now right; only 1: intuition; only 1: tauto).	3.5215780735	7338
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40	0.20.0.20.2	search with cache (only 1: split; only 1: fix even_spec 1; only 1: easy; only 1: fix even_spec 1; only 1: easy).	3.04707407951	4920
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	6	search with cache (only 1: trivial).	0.0571258068085	11
Coq.ZArith.Int.Z_as_Int.i2z_0	40	2	search with cache (only 1: tauto).	0.00741815567017	3
Coq.ZArith.Int.Z_as_Int.i2z_1	40	6	search with cache (only 1: trivial).	0.00826096534729	15
Coq.ZArith.Int.Z_as_Int.i2z_2	40	1	search with cache (only 1: now Z.nzsimpl).	0.0500800609589	2
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: trivial).	0.00685715675354	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	13	search with cache (only 1: intuition).	5.74296498299	1020
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	8	search with cache (only 1: trivial).	0.00751495361328	13
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	1	search with cache (only 1: trivial).	0.00680208206177	2
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00622010231018	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	3	search with cache (only 1: trivial).	0.00646090507507	4
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	2	search with cache (only 1: split).	0.00609803199768	3
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	5	search with cache (only 1: split).	0.00674486160278	6
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00596380233765	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	6.6	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0375769138336	81
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: now Z.nzsimpl).	0.0192320346832	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	1.0.1.11.66	search with cache (only 1: induction n; only 1: trivial; only 1: intros Hn; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1).	4.45924901962	7287
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: now subst).	0.00563406944275	1
Coq.ZArith.Zpower.shift_pos_equiv	40	5	search with cache (only 1: now f_equal).	0.00799417495728	11
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40
Coq.ZArith.Zpower.two_p_equiv	40
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: trivial).	0.00458598136902	1
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.1.2.0	search with cache (only 1: destruct x; only 1: Morphisms.solve_proper; only 1: easy; only 1: easy).	0.0301010608673	15
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.00968599319458	1
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00562906265259	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.00489497184753	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40
Coq.ZArith.auxiliary.Zgt_left	40
Coq.ZArith.auxiliary.Zgt_left_gt	40
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0691020488739	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	88.47	search with cache (only 1: Z.bitwise; only 1: now destruct p).	22.5681610107	49304
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	8	search with cache (only 1: Z.solve_min).	0.0279848575592	18
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.00708293914795	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.00752782821655	1
Coq.ZArith.Zorder.Zle_not_gt	40	2.1.0	search with cache (only 1: intro H; only 1: intro H1; only 1: now Z.nzsimpl).	0.0596570968628	6
Coq.ZArith.Zorder.Zgt_not_le	40	3.2.1	search with cache (only 1: intro H; only 1: intro H1; only 1: now Z.nzsimpl).	0.0604639053345	9
Coq.ZArith.Zorder.Znot_ge_lt	40
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0122601985931	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.00417399406433	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0111870765686	2
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	2.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0152590274811	5
Coq.ZArith.Zorder.Zgt_irrefl	40	20	search with cache (only 1: now Nat.nzsimpl).	0.231495857239	536
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: now transitivity m).	0.0219941139221	2
Coq.ZArith.Zorder.Zle_gt_trans	40
Coq.ZArith.Zorder.Zgt_le_trans	40	9.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0341281890869	31
Coq.ZArith.Zorder.Zge_trans	40	12.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.190791130066	138
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0139780044556	3
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.013375043869	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0606470108032	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.00430202484131	1
Coq.ZArith.Zorder.Zgt_succ	40	1.0.4.82	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	2.0727159977	5751
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00493097305298	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.00502800941467	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.00927400588989	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00519394874573	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0100300312042	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0049250125885	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	search with cache (only 1: intros; only 1: easy).	0.00963497161865	3
Coq.ZArith.Zorder.Zgt_pos_0	40	3.2	search with cache (only 1: intros; only 1: reflexivity).	0.00724005699158	7
Coq.ZArith.Zorder.Zle_0_pos	40	1.8	search with cache (only 1: intros; only 1: easy).	0.0150811672211	22
Coq.ZArith.Zorder.Zlt_neg_0	40	0.7	search with cache (only 1: intros; only 1: reflexivity).	0.0171871185303	16
Coq.ZArith.Zorder.Zle_0_nat	40	145	search with cache (only 1: now destruct n).	19.1537380219	80758
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00499391555786	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.00582194328308	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	9	search with cache (only 1: apply Z.add_le_mono_l).	0.327539920807	34
Coq.ZArith.Zorder.Zplus_le_reg_r	40	6	search with cache (only 1: apply Z.add_le_mono_r).	0.33463716507	31
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00477004051208	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.00599408149719	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0141429901123	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0146448612213	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00621390342712	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.00625395774841	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0206680297852	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	8.2.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.177915096283	97
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.1	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0223209857941	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0137860774994	5
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	3	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00636506080627	4
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0103669166565	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0056848526001	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0215721130371	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0224320888519	5
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	12.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.188984155655	102
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	9.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0392920970917	30
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00505900382996	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	3.6.38.10.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: intro H'; only 1: intros H; only 1: rewrite H in H'; only 1: easy').	8.73566699028	24287
Coq.ZArith.Zbool.Zle_imp_le_bool	40	2	search with cache (only 1: apply Z.leb_le).	0.0157558917999	12
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	1.3	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0480179786682	23
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	4	search with cache (only 1: trivial).	0.00545907020569	5
Coq.ZArith.Zbool.Zone_min_pos	40	0.1.1.0.0.2.59.5.6	search with cache (only 1: destruct n; only 1: easy; only 1: now destruct 1 || intros _; only 1: unfold Z.leb, Z.le; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: now destruct Hn || easy).	10.5899958611	27133
Coq.ZArith.Zbool.Zle_is_le_bool	40	3.3	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.0206379890442	22
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.5.0.5.9	search with cache (only 1: repeat split; only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater; only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	5.20915198326	7497
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	5.0	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: now case Z.compare_spec).	0.249149799347	7
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.0.0.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: easy'; only 1: easy').	0.0203218460083	7
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	3.3.3.32.18	search with cache (only 1: intros a; only 1: destruct a as [| a| a]; only 1: auto; only 1: auto; only 1: auto).	5.80105805397	12600
Coq.ZArith.ZArith_dec.Zcompare_rect	40
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0103600025177	4
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.142516136169	59
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.1.2	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.153082132339	51
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.1.1.2.0.1.0.2.0.1.0.4	search with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: right; only 1: intuition).	30.1133580208	55052
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.00524878501892	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.1.2.0.0.2.0	search with cache (only 1: destruct b as [| b| b]; only 1: simpl; only 1: Z.order; only 1: intros Hb; only 1: now elim Hb; only 1: simpl; only 1: trivial).	0.733807086945	428
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.00873494148254	2
Coq.Program.Wf.Fix_F_inv	40	0.3.8.3.0.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: simpl; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	1.15910506248	2055
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0110630989075	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40
Coq.Program.Wf.Fix_F_sub_rect	40	5.25.5.0.2	search with cache (only 1: intro x; only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	1.47179389	7344
Coq.Program.Wf.eq_Fix_F_sub	40	6.2.0.4	search with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: rewrite F_unfold; only 1: auto).	0.240900993347	453
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	17.0.3.10.23.4.37	search with cache (only 1: intros Hfst Hsnd; only 1: intro H; only 1: intro p; only 1: intro z; only 1: destruct z; only 1: subst; only 1: reflexivity).	10.4695198536	152244
Coq.Program.Equality.JMeq_eq_refl	40
Coq.Program.Equality.UIP_refl_refl	40	3	search with cache (only 1: apply UIP).	0.00690388679504	4
Coq.Program.Equality.inj_pairT2_refl	40	10	search with cache (only 1: apply UIP_refl).	0.00855207443237	21
Coq.Program.Equality.solution_left	40	0.5.9.9	search with cache (only 1: intro; only 1: intro; only 1: destruct 1; only 1: trivial).	0.100844860077	655
Coq.Program.Equality.solution_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00721883773804	3
Coq.Program.Equality.deletion	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.00637483596802	3
Coq.Program.Equality.simplification_heq	40	31.13.25	search with cache (only 1: intros; only 1: subst; only 1: auto).	2.58525586128	28743
Coq.Program.Equality.simplification_existT2	40
Coq.Program.Equality.simplification_existT1	40	13.10.58.13	search with cache (only 1: intro; only 1: inversion 1; only 1: subst; only 1: auto).	3.14782786369	34441
Coq.Program.Equality.simplification_K	40	10.1.8	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: trivial).	0.0634791851044	591
Coq.Program.Combinators.compose_id_left	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00651407241821	3
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00709199905396	2
Coq.Program.Combinators.compose_assoc	40	1	search with cache (only 1: trivial).	0.00702309608459	2
Coq.Program.Combinators.flip_flip	40	0	search with cache (only 1: reflexivity).	0.00689196586609	1
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00755190849304	2
Coq.Program.Combinators.prod_curry_uncurry	40	0.11.10.3.10.0.9	search with cache (only 1: intro H; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intro a; only 1: apply functional_extensionality_dep_good; only 1: intros [? ?]; only 1: reflexivity).	1.03153300285	10281
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0238840579987	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40	4.24.20	search with cache (only 1: intros n IH; only 1: fix even_spec 1; only 1: auto).	1.16991901398	7995
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40	1.0.8	search with cache (only 1: fix le_div2 1; only 1: intros l; only 1: intuition).	0.0386168956757	128
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40	1.50	search with cache (only 1: fix le_div2 1; only 1: trivial).	8.42430901527	42084
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	3.11.4.0	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: auto).	0.147974014282	952
Coq.Sorting.Permutation.Permutation_sym	40	35.1.0.0.3.0.8	search with cache (only 1: intros l2; only 1: intro Dec; only 1: induction 1; only 1: constructor; only 1: discriminate || auto; only 1: discriminate || auto; only 1: eauto).	21.4080579281	116782
Coq.Sorting.Permutation.Permutation_trans	40	1.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.00691318511963	3
Coq.Sorting.Permutation.Permutation_cons	40	4.8.3	search with cache (only 1: intros P x0 xs H; only 1: subst; only 1: auto with arith).	0.336381912231	325
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40	4.1.0.0.1.0.0.13.1.6.3	search with cache (only 1: intros x y; only 1: intros; only 1: subst; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: tauto; only 1: simpl in *; only 1: tauto; only 1: simpl; only 1: tauto; only 1: intuition).	39.7142031193	42039
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	3	search with cache (only 1: auto).	0.00864410400391	4
Coq.Sorting.Permutation.Permutation_rev	40	2.1.10.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	0.23433804512	516
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.3.0.3.2	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	7.94303607941	97
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40	2.58	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	30.4314920902	116846
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	7	search with cache (only 1: constructor 1).	0.0180368423462	24
Coq.Sorting.PermutSetoid.permut_sym	40	1.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0126249790192	3
Coq.Sorting.PermutSetoid.permut_trans	40
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: auto with datatypes).	0.0140299797058	3
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.1.0.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	1.93579816818	858
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	9.0.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: simpl_relation).	0.238244056702	376
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.0286870002747	5
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.9.3.7.6	search with cache (only 1: intro; only 1: intros x; only 1: intros; only 1: inversion H; only 1: trivial).	0.944171905518	3837
Coq.Sorting.Sorted.Sorted_inv	40	4.30.1	search with cache (only 1: intro; only 1: inversion 1 as [H1| ?]; only 1: auto).	2.73330998421	11831
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.5.2.6.0.6	search with cache (only 1: intros; only 1: split; only 1: inversion_clear H; only 1: eassumption; only 1: inversion H; only 1: auto).	0.374863862991	1022
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0142059326172	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	1	search with cache (only 1: split).	0.00668406486511	2
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.00628590583801	2
Coq.Sorting.Heap.invert_heap	40
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	1.1.0.5.6.3.3.5.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H3 H4; only 1: elim H4; only 1: intros H1 H2; only 1: elim H2; only 1: auto with datatypes; only 1: auto with datatypes).	14.1349859238	34454
Coq.Sorting.Heap.low_trans	40	11.0.0.0.26.20	search with cache (only 1: intros H; only 1: induction H as [| a l Hal Hl IH]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: eauto with *).	16.6914920807	20783
Coq.Sorting.Heap.Equivalence_instance_0	40	22.0.1.5	search with cache (only 1: split; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	1.93031096458	2995
Coq.Sorting.Heap.Proper_instance_0	40	7.6.12.21	search with cache (only 1: intros n m Hn H; only 1: intros Compat Hl Hr; only 1: simpl; only 1: auto with arith).	18.1880209446	7275
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40
Coq.Sorting.Heap.list_to_heap	40
Coq.Sorting.Heap.heap_to_list	40	0.8.77	search with cache (only 1: intros H; only 1: fix merge 1; only 1: auto with datatypes).	4.3049030304	13867
Coq.Sorting.Heap.treesort	40	1.3	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.00993084907532	13
Coq.Init.Wf.Acc_inv	40	6.0.10	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0553159713745	535
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00797414779663	5
Coq.Init.Wf.well_founded_ind	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00862288475037	5
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	10.2.6.8.16.14.36	search with cache (only 1: intros H; only 1: intro p; only 1: destruct p; only 1: trivial; only 1: intro A; only 1: induction n; only 1: trivial).	18.0463058949	248917
Coq.Init.Tactics.decide_right	40	1.0.13.3.1.17.8.6	search with cache (only 1: intro z; only 1: intro H; only 1: unfold not; only 1: intro A; only 1: intros h1 h2; only 1: destruct H; only 1: contradiction; only 1: auto).	8.59618997574	122055
Coq.Init.Peano.pred_Sn	40	5.1	search with cache (only 1: intros; only 1: repeat split).	0.00402903556824	8
Coq.Init.Peano.not_eq_S	40	39	search with cache (only 1: auto).	0.88156414032	9475
Coq.Init.Peano.O_S	40	6	search with cache (only 1: discriminate).	0.00707697868347	23
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.1.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0147850513458	44
Coq.Init.Peano.plus_O_n	40	0.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00632882118225	6
Coq.Init.Peano.plus_n_Sm	40	1.1.0.2	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00780701637268	8
Coq.Init.Peano.plus_Sn_m	40	0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.007404088974	8
Coq.Init.Peano.mult_n_O	40	0.1.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0064001083374	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.2.2	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00558996200562	8
Coq.Init.Peano.le_n_S	40	2.3.6.2.1.5.6	search with cache (only 1: induction n as [| p H]; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	2.12714600563	21092
Coq.Init.Peano.nat_case	40	0.1.2.5	search with cache (only 1: induction n; only 1: intros n m; only 1: auto; only 1: auto).	0.0273139476776	124
Coq.Init.Peano.nat_double_ind	40	0.0.2.5.1.0	search with cache (only 1: induction n; only 1: auto; only 1: intros; only 1: destruct m; only 1: auto; only 1: auto).	0.0444149971008	177
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40	0.1.2.0.1.0.1.0.0.1.2.0	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.66853284836	9788
Coq.Init.Peano.nat_rect_succ_r	40	1.1.3.3.10	search with cache (only 1: induction n as [| p H]; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: auto).	0.273977994919	915
Coq.Init.Peano.nat_rect_plus	40	0.1.4.2.0.1.0.0	search with cache (only 1: induction n; only 1: intros; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.01584601402	3023
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	1.1.4.12.69	search with cache (only 1: intros H ?; only 1: intros [? ?]; only 1: destruct H; only 1: assumption; only 1: assumption).	1.75800299644	31605
Coq.Init.Datatypes.eq_true_ind_r	40	0.33.7	search with cache (only 1: intros A P H; only 1: destruct 1; only 1: trivial).	0.142200946808	2916
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00623297691345	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00614714622498	3
Coq.Init.Datatypes.surjective_pairing	40	0.0.2	search with cache (only 1: intros; only 1: destruct p; only 1: trivial).	0.00713706016541	5
Coq.Init.Datatypes.injective_projections	40	0.3.2.4.32.29	search with cache (only 1: intros A B [H1 H2]; only 1: intros [HypL HypR]; only 1: simpl in *; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.7551150322	76964
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	1.2	search with cache (only 1: destruct H; only 1: reflexivity).	0.00934600830078	5
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	2.2.2.3.1	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0252552032471	209
Coq.Init.Datatypes.CompOpp_inj	40	0.2.2.2.0.2.2.2.0.2	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	1.14785194397	9730
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00507616996765	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.2.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0222909450531	95
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.0066020488739	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0589330196381	625
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.2.2.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.229526996613	2959
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	4.1.4.0.1.4.1.4.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.69936299324	13174
Coq.Init.Logic.imp_iff_compat_l	40	4.4.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0289649963379	233
Coq.Init.Logic.imp_iff_compat_r	40	5.5.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0396950244904	357
Coq.Init.Logic.not_iff_compat	40	8.8.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0721719264984	721
Coq.Init.Logic.neg_false	40	2.11.9.2.2.2.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: trivial).	1.01601290703	11890
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	1.1.6.3.1.1.6.3.3	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.352288007736	5162
Coq.Init.Logic.and_assoc	40	14.14.14.5.5.14.14.5.14.5.1.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: apply H; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	13.4971740246	230147
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.1.4.6.1.2.0.4.6.1	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.609753131866	13342
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	2.2	search with cache (only 1: intros; only 1: assumption).	0.00741696357727	12
Coq.Init.Logic.iff_to_and	40	0.0.0.3.0.0.1.3.2	search with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: trivial).	0.138528823853	723
Coq.Init.Logic.inst	40	11	search with cache (only 1: auto).	0.00797295570374	57
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00580310821533	3
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40	1.15	search with cache (only 1: destruct 1; only 1: trivial).	0.0214579105377	199
Coq.Init.Logic.eq_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00641894340515	2
Coq.Init.Logic.eq_trans_r	40	1.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00619697570801	3
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00721001625061	3
Coq.Init.Logic.not_eq_sym	40	0.28.2	search with cache (only 1: destruct 2; only 1: apply H; only 1: trivial).	0.312700033188	3215
Coq.Init.Logic.eq_sind_r	40	2.6	search with cache (only 1: destruct 2; only 1: auto).	0.00717496871948	16
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00654697418213	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00686502456665	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0072910785675	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.1.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: trivial).	0.0103299617767	4
Coq.Init.Logic.rew_opp_r	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.00689601898193	3
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00711894035339	3
Coq.Init.Logic.f_equal2	40	0.1.2.0.8	search with cache (only 1: intros h1 h2; only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: destruct H; only 1: trivial).	0.078045129776	456
Coq.Init.Logic.f_equal3	40	0.1.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00964498519897	15
Coq.Init.Logic.f_equal4	40	0.1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0105881690979	16
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.011705160141	17
Coq.Init.Logic.f_equal_compose	40	0.4.7.2	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0654950141907	440
Coq.Init.Logic.eq_trans_refl_l	40	0.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.00693798065186	3
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0066180229187	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00655317306519	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00655293464661	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00653791427612	2
Coq.Init.Logic.eq_trans_assoc	40	0.4.8.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0627179145813	352
Coq.Init.Logic.rew_map	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0081090927124	4
Coq.Init.Logic.eq_trans_map	40	3.0.10.22.5.9.23.6	search with cache (only 1: intros A x P H y H0; only 1: intro H1; only 1: intros h1 h2; only 1: destruct h2; only 1: intro H; only 1: destruct 2; only 1: destruct H; only 1: assumption).	11.6638109684	129921
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00731492042542	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00758504867554	2
Coq.Init.Logic.rew_swap	40	1.2	search with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0120940208435	32
Coq.Init.Logic.rew_compose	40	9.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0175740718842	92
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00631713867188	2
Coq.Init.Logic.eq_trans_map_distr	40	0.1.1.5.14.1	search with cache (only 1: destruct e; only 1: intros; only 1: unfold f_equal; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.57784819603	3679
Coq.Init.Logic.eq_sym_map_distr	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.00915694236755	14
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.6	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0188219547272	61
Coq.Init.Logic.eq_trans_rew_distr	40	0.4	search with cache (only 1: destruct e'; only 1: reflexivity).	0.00839304924011	14
Coq.Init.Logic.rew_const	40	0.14	search with cache (only 1: destruct e; only 1: reflexivity).	0.0233538150787	174
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	10.7.8	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.10685300827	1588
Coq.Init.Logic.inhabited_covariant	40	0.1.14	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.0285310745239	174
Coq.Init.Logic.eq_stepl	40	0.3.13	search with cache (only 1: symmetry; only 1: destruct H; only 1: trivial).	0.0399589538574	346
Coq.Init.Logic.iff_stepl	40	11.11.4.2	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	1.60411810875	10089
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40
Coq.Init.Logic.rew_ex2	40	0.0.0	search with cache (only 1: destruct H, u; only 1: simpl in *; only 1: reflexivity).	0.00741600990295	3
Coq.Init.Logic_Type.identity_sym	40
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00637888908386	2
Coq.Init.Logic_Type.identity_congr	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00664615631104	3
Coq.Init.Logic_Type.not_identity_sym	40
Coq.Init.Logic_Type.identity_ind_r	40	2.6.7	search with cache (only 1: intros A P H; only 1: destruct 2; only 1: trivial).	0.0336029529572	315
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00657081604004	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00631999969482	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40
Coq.Init.Specif.sigT2_eta	40	0.9	search with cache (only 1: destruct p; only 1: reflexivity).	0.0116059780121	21
Coq.Init.Specif.sig2_eta	40	0.10	search with cache (only 1: destruct p; only 1: reflexivity).	0.0119349956512	33
Coq.Init.Specif.exists_to_inhabited_sig	40	1.10.13.13	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.186156988144	2411
Coq.Init.Specif.inhabited_sig_to_exists	40	3.4.0.31.29	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: auto).	0.404000997543	8638
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0105621814728	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00931191444397	3
Coq.Init.Specif.eq_existT_curried_map	40
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.6.10.12	search with cache (only 1: intros; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	2.29460406303	6095
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00912809371948	2
Coq.Init.Specif.eq_exist_uncurried	40	0.3.10.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p; only 1: subst; only 1: reflexivity).	0.0431399345398	208
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.3	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0709280967712	98
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.4.9.5.2.1	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	1.04711604118	5605
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0106511116028	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.0.0.11.0.5.30.14	search with cache (only 1: split; only 1: intros; only 1: destruct H, u; only 1: simpl in *; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	17.7135980129	103015
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00954985618591	2
Coq.Init.Specif.eq_exist2_uncurried	40
Coq.Init.Specif.eq_sig2_uncurried	40	1.0.3.4.2	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct r, q, p; only 1: reflexivity).	0.229310035706	199
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.5.1.8.0.14.0.10.4	search with cache (only 1: split; only 1: intro; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct H; only 1: simpl in *; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	20.5508019924	99531
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0107038021088	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00563406944275	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0266580581665	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40	0.21.11	search with cache (only 1: intros; only 1: destruct p; only 1: apply Qred_correct).	0.802566051483	1084
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	0.5.1.47.33.0	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: simpl; only 1: easy || now destruct 1; only 1: auto with qarith).	17.0376977921	24013
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0132348537445	1
Coq.QArith.Qfield.ex2	40
Coq.QArith.Qfield.ex3	40	0.0.0.0.2	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.125102043152	15
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: auto with *).	0.0129101276398	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0209090709686	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0399701595306	1
Coq.QArith.Qfield.ex7	40	6.0.27.17	search with cache (only 1: intros (Hr, Hr'); only 1: red; only 1: simpl in *; only 1: ring).	3.21510314941	3515
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0216948986053	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0214049816132	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	19.2.2.6	search with cache (only 1: intros a n; only 1: unfold Qeq; only 1: simpl in *; only 1: ring).	4.98859286308	6049
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0275411605835	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	5	search with cache (only 1: easy').	0.00835990905762	6
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	0	search with cache (only 1: auto with *).	0.00581789016724	1
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: discriminate).	0.00645589828491	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40
Coq.QArith.Qcanon.Qcmult_comm	40
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40
Coq.QArith.Qcanon.Qcle_antisym	40	12	search with cache (only 1: auto with *).	0.106886863708	150
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40
Coq.QArith.Qcanon.Qcnot_lt_le	40	6.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: Z.order).	0.0143260955811	19
Coq.QArith.Qcanon.Qcnot_le_lt	40	3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intuition).	0.0168128013611	26
Coq.QArith.Qcanon.Qclt_not_le	40
Coq.QArith.Qcanon.Qcle_not_lt	40
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.9.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: unfold Qle, Qlt; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.514696121216	134
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.7.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: unfold Q2Qc; only 1: Nat.order; only 1: simpl; only 1: auto with qarith).	0.274327993393	536
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	2.0.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.599565982819	816
Coq.QArith.Qreals.IZR_nz	40	0	search with cache (only 1: auto with real).	0.00759506225586	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	4	search with cache (only 1: reflexivity).	0.00688195228577	5
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3	search with cache (only 1: intuition).	0.00876116752625	4
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	14	search with cache (only 1: now f_equal).	0.0106451511383	75
Coq.QArith.QArith_base.Qeq_sym	40	3	search with cache (only 1: intuition).	0.00659990310669	4
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.0258038043976	75
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.00543808937073	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.00562906265259	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	2	search with cache (only 1: auto with qarith).	0.00643992424011	3
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.00611019134521	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	2.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.0260691642761	26
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.2.0.3	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.21693110466	104
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40	1.8.14.7.4	search with cache (only 1: repeat red; only 1: destruct 1; only 1: fix gcd_divide 1; only 1: intro; only 1: auto with qarith).	36.4769608974	21891
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	2.33.4.8.1	search with cache (only 1: intros m Hm; only 1: intros; only 1: intros f Hf; only 1: fix even_spec 1; only 1: trivial).	21.7417070866	43688
Coq.QArith.QArith_base.Qleb_comp	40	0.20.0.20.4.0.25.0	search with cache (only 1: intros p q H r s H'; only 1: apply eq_iff_eq_true; only 1: destruct p; only 1: split; only 1: fix even_spec 1; only 1: easy; only 1: fix even_spec 1; only 1: easy).	34.4271390438	45140
Coq.QArith.QArith_base.Q_apart_0_1	40	13.3	search with cache (only 1: setoid_replace 1%Z with (1 * 1)%Z by now Z.nzsimpl; only 1: easy).	0.239836931229	202
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	6.29.1.9	search with cache (only 1: red; only 1: simpl; only 1: intros Hn; only 1: now Z.nzsimpl).	3.36801218987	5527
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0172510147095	5
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40	1.1.0.0	search with cache (only 1: unfold Qeq; only 1: intros; only 1: simpl in *; only 1: ring).	0.0144901275635	6
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.40.17	search with cache (only 1: symmetry; only 1: red; only 1: simpl in *; only 1: ring).	2.99412202835	7201
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	4.6.0.4.16.7	search with cache (only 1: red; only 1: intros GT; only 1: simpl in *; only 1: intros; only 1: simpl_mult; only 1: ring).	17.2696838379	19824
Coq.QArith.QArith_base.Qmult_0_l	40	23	search with cache (only 1: auto with *).	0.0598661899567	283
Coq.QArith.QArith_base.Qmult_0_r	40	2.0.70.17	search with cache (only 1: intro n; only 1: reduce; only 1: simpl in *; only 1: now Z.nzsimpl).	13.991943121	20262
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	5.4.0.0.12.0	search with cache (only 1: intro; only 1: induction n; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: now Z.nzsimpl).	17.4520449638	15132
Coq.QArith.QArith_base.Qmult_comm	40	1.3.0.46.4	search with cache (only 1: intros n m; only 1: repeat red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	12.6362760067	31628
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0386459827423	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2	search with cache (only 1: now f_equal).	0.00557899475098	3
Coq.QArith.QArith_base.inject_Z_opp	40	3	search with cache (only 1: auto).	0.00507712364197	4
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.1	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0904769897461	30
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	20	search with cache (only 1: intuition).	0.317577123642	186
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	6.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	0.00793099403381	8
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	17	search with cache (only 1: Z.Private_Tac.order).	0.509068965912	822
Coq.QArith.QArith_base.Qnot_le_lt	40	18	search with cache (only 1: Z.Private_Tac.order).	0.213322162628	369
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.00553798675537	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.00529503822327	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40	6.46	search with cache (only 1: fix le_div2 1; only 1: trivial).	4.26712393761	5067
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40	2.9.6.5	search with cache (only 1: intros a; only 1: intros Hz; only 1: fix le_div2 1; only 1: auto).	3.73422694206	1980
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40	0.33	search with cache (only 1: fix odd_spec 1; only 1: trivial).	5.71385097504	6664
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40	2.11.6.9	search with cache (only 1: intros Hz; only 1: intros a; only 1: fix le_div2 1; only 1: auto).	32.0843110085	41287
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	7.4.32	search with cache (only 1: fix gcd_divide 1; only 1: unfold Qle, Qlt; only 1: now f_equiv).	10.2337141037	12164
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40	3.45	search with cache (only 1: fix gcd_greatest 1; only 1: assumption).	31.9072809219	34794
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40	4.46	search with cache (only 1: fix gcd_greatest 1; only 1: assumption).	37.649687767	59827
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	0.33.2	search with cache (only 1: intros; only 1: simpl; only 1: now Z.nzsimpl).	0.356709003448	1376
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.4.0.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.0139338970184	10
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.0.0.1.0.0.1.1	search with cache (only 1: intros; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	1.04810595512	1829
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	4.1.13.3.1.8.0.10	search with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: rewrite <- Qmult_1_l; only 1: simpl; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl; only 1: red; only 1: now subst).	5.12994003296	7349
Coq.QArith.Qabs.Qabs_neg	40	1.2.13.17.0.4	search with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl; only 1: red; only 1: now subst).	3.71163105965	6808
Coq.QArith.Qabs.Qabs_nonneg	40	1.3.1.1.0.12	search with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: simpl; only 1: abstract (compute; discriminate)).	0.439241886139	1039
Coq.QArith.Qabs.Zabs_Qabs	40	2.0.0	search with cache (only 1: simpl; only 1: intros; only 1: easy).	0.0066921710968	5
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	1.3	search with cache (only 1: red; only 1: trivial).	0.00666999816895	6
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00593495368958	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00568199157715	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	3.1.33.13.9	search with cache (only 1: split; only 1: intro; only 1: destruct 1; only 1: firstorder; only 1: firstorder).	13.1259770393	58093
Coq.Classes.CMorphisms.subrelation_id_proper	40	19	search with cache (only 1: auto).	0.0269711017609	165
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0103950500488	1
Coq.Classes.CMorphisms.subrelation_refl	40	3.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.00758194923401	6
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.0110619068146	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	3	search with cache (only 1: simpl_crelation).	0.0103139877319	4
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0120170116425	1
Coq.Classes.CMorphisms.forall_subrelation	40	0.25	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.305036067963	827
Coq.Classes.CMorphisms.iff_impl_subrelation	40	7.5.0.6	search with cache (only 1: intro A; only 1: intros; only 1: red; only 1: apply H).	0.140372991562	522
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00728797912598	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00831604003906	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00960397720337	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	5	search with cache (only 1: firstorder).	0.0308020114899	6
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	0.154657125473	2
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	1.39277100563	364
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	1.06537389755	719
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	2.2.0	search with cache (only 1: assert (R x0 x0); only 1: firstorder; only 1: firstorder).	0.0714068412781	102
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	4.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	2.10318899155	449
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.152592182159	52
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	1.42950797081	175
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	5.11697101593	339
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	4.0	search with cache (only 1: hnf; only 1: firstorder).	0.0107798576355	6
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.0197131633759	2
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	2	search with cache (only 1: simpl_crelation).	0.0113010406494	3
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40
Coq.Classes.CMorphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00931215286255	1
Coq.Classes.CMorphisms.flip1	40	0	search with cache (only 1: simpl_crelation).	0.0101201534271	1
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00571012496948	1
Coq.Classes.CMorphisms.eq_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00880098342896	1
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00591111183167	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00543403625488	1
Coq.Classes.CMorphisms.proper_proper	40	0.3	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0162780284882	5
Coq.Classes.CMorphisms.proper_normalizes_proper	40	8	search with cache (only 1: firstorder).	0.0469768047333	27
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00724196434021	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.0.0	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: reduce; only 1: simpl_crelation).	0.0185899734497	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	7.13.4	search with cache (only 1: simpl_crelation; only 1: red in H, H0; only 1: firstorder).	7.91894817352	4993
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0121541023254	6
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.3	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0322289466858	58
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	5.5.1.7	search with cache (only 1: intuition; only 1: transitivity y; only 1: auto; only 1: auto).	9.583340168	765
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	1.5	search with cache (only 1: reduce; only 1: auto).	0.0084822177887	19
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00499510765076	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00632095336914	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.285485982895	1
Coq.Classes.CRelationClasses.complement_inverse	40	9	search with cache (only 1: reflexivity).	0.00893092155457	10
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1.9.6	search with cache (only 1: intro x; only 1: intros; only 1: auto).	0.0407590866089	209
Coq.Classes.CRelationClasses.flip_Reflexive	40	3.2	search with cache (only 1: red; only 1: trivial).	0.00994491577148	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	3.24	search with cache (only 1: intros n m; only 1: auto).	0.245839118958	1841
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0151519775391	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1.18	search with cache (only 1: destruct H; only 1: firstorder).	0.0422649383545	187
Coq.Classes.CRelationClasses.flip_PER	40	1.1.1.25	search with cache (only 1: split; only 1: intros x y H'; only 1: firstorder; only 1: firstorder).	0.122008085251	533
Coq.Classes.CRelationClasses.flip_Equivalence	40	0.0.1.36	search with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.186249017715	1123
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00728011131287	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00732898712158	2
Coq.Classes.CRelationClasses.iffT_Reflexive	40	8.8.4.5	search with cache (only 1: intro H; only 1: split; only 1: trivial; only 1: trivial).	0.214412927628	1308
Coq.Classes.CRelationClasses.iffT_Symmetric	40	3	search with cache (only 1: firstorder).	0.0195960998535	15
Coq.Classes.CRelationClasses.iffT_Transitive	40	0.6	search with cache (only 1: red; only 1: firstorder).	0.0110239982605	8
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0110709667206	2
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0146269798279	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0.1	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0349390506744	3
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.2.5.3	search with cache (only 1: simpl_relation; only 1: apply PreOrder_Transitive with y; only 1: auto; only 1: auto).	0.103016138077	274
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40	6.16	search with cache (only 1: compute; only 1: firstorder).	13.9817991257	2332
Coq.Classes.Equivalence.pointwise_reflexive	40	1	search with cache (only 1: simpl_relation).	0.00723218917847	2
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00439500808716	1
Coq.Classes.Equivalence.pointwise_transitive	40	6	search with cache (only 1: firstorder).	0.0142331123352	13
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.255686998367	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	26.69	search with cache (only 1: extensionality x; only 1: destr_bool).	18.022837162	55140
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	7	search with cache (only 1: reflexivity).	0.00642108917236	8
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0.10	search with cache (only 1: intro; only 1: firstorder).	0.0161597728729	33
Coq.Classes.RelationClasses.flip_Reflexive	40	0.0.1.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.00676298141479	5
Coq.Classes.RelationClasses.flip_Antisymmetric	40	5.0.0.1	search with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: firstorder).	0.0116739273071	10
Coq.Classes.RelationClasses.flip_PreOrder	40	5.15.0.21.3	search with cache (only 1: destruct H; only 1: split; only 1: tauto; only 1: intro H; only 1: firstorder).	0.867136955261	5669
Coq.Classes.RelationClasses.flip_StrictOrder	40	2	search with cache (only 1: firstorder).	0.0185680389404	3
Coq.Classes.RelationClasses.flip_PER	40	2	search with cache (only 1: firstorder).	0.0284729003906	3
Coq.Classes.RelationClasses.flip_Equivalence	40	2	search with cache (only 1: firstorder).	0.0273468494415	3
Coq.Classes.RelationClasses.complement_Irreflexive	40	0.22	search with cache (only 1: intro; only 1: firstorder).	0.0302419662476	255
Coq.Classes.RelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00743293762207	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0164752006531	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	2.0.0.4	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: firstorder).	0.00966501235962	12
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.4	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0132839679718	12
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	0	search with cache (only 1: firstorder).	0.00576615333557	1
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00855493545532	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	2.1	search with cache (only 1: pose proof partial_order_equivalence as poe; only 1: firstorder).	0.0579490661621	40
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.00860118865967	1
Coq.Classes.Morphisms.eq_proper_proxy	40	5	search with cache (only 1: reflexivity).	0.00864100456238	13
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0061240196228	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00581312179565	1
Coq.Classes.Morphisms.pointwise_pointwise	40	7.4.0.2.35	search with cache (only 1: intro z; only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.790621042252	3340
Coq.Classes.Morphisms.subrelation_id_proper	40	3.1	search with cache (only 1: reduce; only 1: firstorder).	0.0109272003174	6
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0132899284363	1
Coq.Classes.Morphisms.subrelation_refl	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.00671195983887	2
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00736713409424	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	3.12.4.8	search with cache (only 1: intro; only 1: reduce_goal; only 1: subst; only 1: firstorder).	4.77830505371	4097
Coq.Classes.Morphisms.pointwise_subrelation	40	4	search with cache (only 1: firstorder).	0.00736117362976	5
Coq.Classes.Morphisms.forall_subrelation	40	0.4	search with cache (only 1: compute; only 1: firstorder).	0.0119421482086	6
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00696492195129	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00731801986694	2
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	1	search with cache (only 1: firstorder).	0.00546193122864	2
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	5.3	search with cache (only 1: symmetry; only 1: firstorder).	0.0360631942749	83
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	6.1	search with cache (only 1: symmetry; only 1: firstorder).	0.469620943069	451
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	5.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0417261123657	16
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	4.4.2	search with cache (only 1: transitivity y; only 1: assumption; only 1: assumption).	0.399202823639	1471
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	2.29216980934	908
Coq.Classes.Morphisms.symmetric_equiv_flip	40	1	search with cache (only 1: firstorder).	0.00602602958679	2
Coq.Classes.Morphisms.compose_proper_obligation_1	40	3	search with cache (only 1: firstorder).	0.006098985672	4
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.1.1	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.00616812705994	5
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	5	search with cache (only 1: firstorder).	0.00663805007935	11
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00630402565002	1
Coq.Classes.Morphisms.flip1	40	3.2	search with cache (only 1: reduce; only 1: firstorder).	0.00646901130676	7
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00479006767273	1
Coq.Classes.Morphisms.eq_subrelation	40	4.1	search with cache (only 1: unfold subrelation; only 1: simpl_relation).	0.0155630111694	20
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00455594062805	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00460314750671	2
Coq.Classes.Morphisms.proper_proper	40	0.0.0.0.2	search with cache (only 1: split; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0940299034119	41
Coq.Classes.Morphisms.proper_normalizes_proper	40	6.0	search with cache (only 1: simpl_relation; only 1: firstorder).	0.018434047699	8
Coq.Classes.Morphisms.flip_atom	40	1.1	search with cache (only 1: unfold flip, respectful; only 1: firstorder).	0.00650000572205	4
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	1.0.0	search with cache (only 1: intros; only 1: unfold respectful; only 1: simpl_relation).	0.0105481147766	4
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.0.4.2.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: reduce; only 1: apply H1; only 1: auto; only 1: auto).	0.242211103439	117
Coq.Classes.Morphisms.proper_sym_impl_iff	40	6.0.4	search with cache (only 1: unfold respectful; only 1: simpl_relation; only 1: firstorder).	0.698203802109	546
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	13	search with cache (only 1: firstorder).	0.0202851295471	70
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00587606430054	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	8	search with cache (only 1: firstorder  (subst; auto)).	0.0274710655212	9
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00606894493103	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	20	search with cache (only 1: firstorder).	0.279785871506	249
Coq.Classes.RelationPairs.RelProd_Symmetric	40	2	search with cache (only 1: firstorder).	0.0136671066284	3
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.307897090912	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	10	search with cache (only 1: firstorder).	0.0876038074493	38
Coq.Classes.RelationPairs.SndRel_ProdRel	40
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00675797462463	1
Coq.Classes.RelationPairs.SndRel_sub	40	0.0.1	search with cache (only 1: simpl_relation; only 1: simpl; only 1: firstorder).	0.0145168304443	4
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.00622296333313	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00686597824097	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.00617599487305	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.19.6	search with cache (only 1: intros x y Hxy Hyz Hy; only 1: compute; only 1: firstorder).	1.65240883827	794
Coq.Classes.DecidableClass.Decidable_sound	40	56.5.38.2	search with cache (only 1: intro z; only 1: intros [Hl Hr]; only 1: simpl; only 1: apply Hr).	29.5586559772	541561
Coq.Classes.DecidableClass.Decidable_complete	40	58.5.40.5	search with cache (only 1: intro z; only 1: intros [Hl Hr]; only 1: simpl; only 1: apply Hr).	33.7450520992	488598
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.6.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: intuition; only 1: tauto).	0.0608770847321	79
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	8	search with cache (only 1: apply Nat.leb_le).	0.0171060562134	29
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	11	search with cache (only 1: easy).	0.0111429691315	48
Coq.Classes.SetoidClass.setoid_sym	40	8	search with cache (only 1: now simpl).	0.00981593132019	9
Coq.Classes.SetoidClass.setoid_trans	40	15	search with cache (only 1: intuition).	0.113821983337	147
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	8.15.5	search with cache (only 1: simpl_relation; only 1: rewrite <- H1 in H2; only 1: auto).	5.81681704521	5592
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	30.0.14	search with cache (only 1: intros n' (HPn', Hn'); only 1: intuition; only 1: now rewrite H).	25.7300651073	19006
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	2.0.0	search with cache (only 1: simpl_relation; only 1: unfold relation_equivalence in *; only 1: firstorder).	0.143242835999	5
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	1	search with cache (only 1: firstorder).	0.453634023666	11
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	4.5	search with cache (only 1: intros m; only 1: intuition).	0.0193481445312	29
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.2	search with cache (only 1: intros m; only 1: auto).	0.0328469276428	4
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	1.0	search with cache (only 1: simpl_relation; only 1: apply H).	0.0472249984741	3
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: reduce; only 1: auto with sets).	0.00669288635254	5
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.0	search with cache (only 1: unfold flip in *; only 1: firstorder).	0.00615501403809	2
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	22	search with cache (only 1: now Nat.nzsimpl').	0.183627843857	310
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.1.0.1.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.00862693786621	7
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.0.1.0.1.0.2.0.0.3	search with cache (only 1: simpl; only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: f_equal; only 1: trivial).	0.30521607399	775
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.00749897956848	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.36.0.0.0.1.0.14	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: f_equal; only 1: trivial).	8.55823993683	48598
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.0	search with cache (only 1: simpl; only 1: now subst).	0.00605916976929	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	15.1.22	search with cache (only 1: intros H; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.434941053391	1777
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40
Coq.PArith.BinPos.Pos.xI_succ_xO	40	9	search with cache (only 1: trivial).	0.00557899475098	10
Coq.PArith.BinPos.Pos.succ_discr	40	9.3.34.8.31	search with cache (only 1: destruct p; only 1: red; only 1: easy; only 1: easy; only 1: easy || now destruct 1).	3.23061013222	13658
Coq.PArith.BinPos.Pos.pred_double_spec	40	10	search with cache (only 1: auto).	0.0085129737854	30
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40
Coq.PArith.BinPos.Pos.double_succ	40	7.0	search with cache (only 1: simpl; only 1: reflexivity).	0.00761389732361	11
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0145769119263	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.1.0.0.0.2.1	search with cache (only 1: induction p; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: now f_equal).	0.663645982742	528
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	0.0.2.0.5.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: intro H; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).	0.772258996964	1493
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00567388534546	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	1.9.7.0.3.14.0	search with cache (only 1: revert q; only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).	36.1488699913	46104
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40	0.96	search with cache (only 1: fix gcd_divide 1; only 1: auto using add_carry_add).	4.44257712364	20967
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	search with cache (only 1: simpl; only 1: f_equal).	0.00640988349915	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.00684905052185	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	1.0.0.0	search with cache (only 1: induction p; only 1: trivial; only 1: now destruct p; only 1: trivial).	0.00976514816284	5
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	3.0.1.6.22.2.1	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: auto using add_no_neutral).	38.1823260784	43331
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.029139995575	46
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.1.0.0.0.11.0.7.4	search with cache (only 1: intros; only 1: destruct p; only 1: simpl in H; only 1: destruct q; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: discriminate; only 1: reflexivity || apply f_equal || exfalso).	6.19255208969	21319
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	2.11	search with cache (only 1: revert q; only 1: now destruct p, q).	0.0935969352722	238
Coq.PArith.BinPos.Pos.square_xO	40	0.8.1	search with cache (only 1: simpl; only 1: rewrite (PeanoNat.Nat.mul_comm p); only 1: reflexivity || apply f_equal || exfalso).	0.0657088756561	131
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.00930905342102	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40
Coq.PArith.BinPos.Pos.compare_xO_xO	40	2	search with cache (only 1: intuition).	0.0121760368347	12
Coq.PArith.BinPos.Pos.compare_xI_xI	40	3	search with cache (only 1: now rewrite ?Ha).	0.00519800186157	4
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.0.5.11.0.0.16	search with cache (only 1: revert p q; only 1: unfold compare; only 1: simpl; only 1: intros; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	9.90240311623	22204
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.5	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.00632286071777	8
Coq.PArith.BinPos.Pos.compare_le_iff	40	1	search with cache (only 1: now split).	0.00613403320312	2
Coq.PArith.BinPos.Pos.gt_lt_iff	40
Coq.PArith.BinPos.Pos.gt_lt	40	1.0.76	search with cache (only 1: etransitivity; only 1: trivial; only 1: now rewrite compare_antisym, CompOpp_iff).	1.10556817055	10746
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00483703613281	1
Coq.PArith.BinPos.Pos.ge_le_iff	40
Coq.PArith.BinPos.Pos.ge_le	40
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00501489639282	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	10.20.6.4.41	search with cache (only 1: intro H; only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: discriminate).	10.968198061	65087
Coq.PArith.BinPos.Pos.nlt_1_r	40	12	search with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.0346441268921	98
Coq.PArith.BinPos.Pos.lt_1_succ	40	9	search with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.0154120922089	25
Coq.PArith.BinPos.Pos.le_nlt	40	1.1.2.0.0	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_lt_iff; only 1: split; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	0.118654966354	44
Coq.PArith.BinPos.Pos.lt_nle	40
Coq.PArith.BinPos.Pos.lt_le_incl	40	1.2.2	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).	0.263797044754	77
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	3.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: now f_equiv).	0.0227379798889	5
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	20.7.3.5	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: easy).	1.16380286217	6133
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.1.0.6	search with cache (only 1: repeat red; only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.319019079208	176
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40
Coq.PArith.BinPos.Pos.add_le_mono_r	40
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.3.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0166149139404	23
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	2.0.3.2.0.3.23.0	search with cache (only 1: unfold le; only 1: split; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	27.5750899315	33083
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.3	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.00892305374146	5
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.1.0.2.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now f_equal).	0.0104610919952	9
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0059118270874	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	3.1.25	search with cache (only 1: fix odd_spec 1; only 1: unfold compare; only 1: now rewrite ?Ha).	11.2697360516	14664
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.1.3.0	search with cache (only 1: unfold sub; only 1: intros H; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.142433166504	15
Coq.PArith.BinPos.Pos.sub_xI_xO	40
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.1.0.0.18.0	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: simpl; only 1: trivial; only 1: easy'; only 1: trivial).	5.5950460434	10305
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.2.1.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: now subst; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.228086948395	179
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	1.0.0.2.0.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0370349884033	93
Coq.PArith.BinPos.Pos.min_1_l	40
Coq.PArith.BinPos.Pos.min_1_r	40	1.0.0.2.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0336668491364	78
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40
Coq.PArith.BinPos.Pos.mul_min_distr_r	40
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.3.2.0.0.1.0.0.1.2	search with cache (only 1: induction n; only 1: intro H; only 1: simpl; only 1: now destruct H; only 1: intro H; only 1: simpl; only 1: f_equal; only 1: induction n; only 1: now f_equal; only 1: now rewrite IHn).	1.1154589653	2692
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	4.80	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	8.49259305	42189
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40	16.27.14	search with cache (only 1: intros P H0 HS; only 1: fix le_div2 1; only 1: trivial).	12.2202949524	26540
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	2.1	search with cache (only 1: revert q; only 1: now destruct compare || now destruct p).	0.00755000114441	5
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	6	search with cache (only 1: apply Nat.min_r).	0.0148000717163	29
Coq.Arith.Le.le_elim_rel	40	3.6.17.0.1.12.3	search with cache (only 1: intros H x0; only 1: induction n; only 1: intros a Ha; only 1: trivial; only 1: intros a; only 1: fix le_div2 1; only 1: trivial).	19.7473409176	72055
Coq.Arith.Even.even_equiv	40	6.18	search with cache (only 1: fix le_div2 1; only 1: intuition Nat.order).	0.638883829117	1068
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40	9.19.10.11	search with cache (only 1: nzinduct n; only 1: auto with arith; only 1: fix le_div2 1; only 1: trivial).	16.0801179409	17377
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.111032962799	1
Coq.Arith.Even.even_even_plus	40
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0752301216125	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.037810087204	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0388350486755	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.211249113083	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0388288497925	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0380620956421	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0653529167175	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0373811721802	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0373420715332	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0540659427643	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0373690128326	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0375959873199	1
Coq.Arith.Even.even_mult_aux	40
Coq.Arith.Even.even_mult_l	40
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0440409183502	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0412111282349	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0402641296387	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0686960220337	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0261738300323	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0266380310059	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.00582504272461	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0173690319061	1
Coq.Arith.Minus.minus_diag_reverse	40	5.1.15.36	search with cache (only 1: Nat.induct ltac:(n); only 1: tauto; only 1: intros n IH; only 1: now rewrite IH).	1.92201089859	10007
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	16.5.4	search with cache (only 1: Nat.induct p; only 1: reflexivity; only 1: auto).	0.999908208847	1702
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	11.21.6.30	search with cache (only 1: revert m; only 1: induction n; only 1: apply Nat.sub_0_r; only 1: now Nat.nzsimpl').	2.44500803947	11809
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.1.8.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	0.0794460773468	300
Coq.Arith.Minus.lt_O_minus_lt	40	16.67	search with cache (only 1: fix odd_spec 1; only 1: assumption).	1.75987291336	8892
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	9.5.20.2	search with cache (only 1: intro n; only 1: intros a Ha; only 1: subst; only 1: auto with *).	2.95793890953	9548
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.2.0	search with cache (only 1: induction 1; only 1: trivial; only 1: auto with arith).	0.0903549194336	5
Coq.Arith.Between.exists_le_S	40
Coq.Arith.Between.exists_S_le	40	0.1.21	search with cache (only 1: intro RS'; only 1: fix le_div2 1; only 1: trivial).	0.100085020065	557
Coq.Arith.Between.in_int_intro	40	0.0.3.1	search with cache (only 1: intro n; only 1: constructor; only 1: assumption; only 1: assumption).	0.0111091136932	29
Coq.Arith.Between.in_int_lt	40	4.13.0	search with cache (only 1: intros n m H1; only 1: intros (p, H); only 1: PeanoNat.Nat.Private_Tac.order).	0.627048969269	1489
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.4.5	search with cache (only 1: red; only 1: intros a b Hb (LEb, LTb); only 1: auto).	0.342521905899	213
Coq.Arith.Between.in_int_Sp_q	40	5.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.00671792030334	7
Coq.Arith.Between.between_in_int	40	0.8.30.12	search with cache (only 1: intros a; only 1: intros x y; only 1: fix even_spec 1; only 1: intuition).	24.6885061264	145196
Coq.Arith.Between.in_int_between	40	2.2.1.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).	0.00905108451843	11
Coq.Arith.Between.exists_in_int	40	6.26.10	search with cache (only 1: intros Base Step; only 1: fix gcd_divide 1; only 1: trivial).	5.21128797531	22026
Coq.Arith.Between.in_int_exists	40	5.37	search with cache (only 1: fix gcd_greatest 1; only 1: auto with arith).	5.83323097229	39984
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40	2.3.12.11	search with cache (only 1: intro; only 1: intro; only 1: fix le_div2 1; only 1: trivial).	3.10272598267	8283
Coq.Arith.Between.event_O	40	8.40.19.67	search with cache (only 1: firstorder; only 1: PeanoNat.Nat.le_elim H; only 1: now subst; only 1: now subst).	5.91611289978	32472
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40	0.4.6	search with cache (only 1: fix le_div2 1; only 1: intros a b Ha Hb; only 1: trivial).	0.243534088135	396
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40	9.44	search with cache (only 1: fix even_spec 1; only 1: trivial).	11.6210520267	28614
Coq.Arith.Mult.mult_lt_compat_r	40	11.45	search with cache (only 1: fix even_spec 1; only 1: trivial).	14.7123200893	38099
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	0.4.2.44.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: right; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	15.4310839176	86300
Coq.Arith.Div2.even_div2	40	0.16	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.247470140457	692
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	3.14.0	search with cache (only 1: rewrite even_equiv; only 1: fix le_div2 1; only 1: trivial).	0.303601026535	845
Coq.Arith.Div2.div2_odd	40	1.11.0.23.11.0	search with cache (only 1: rewrite odd_equiv; only 1: simpl; only 1: Nat.cases ltac:(n); only 1: now f_equal; only 1: fix le_div2 1; only 1: trivial).	31.7717308998	117058
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40	2.0.19.2.1	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: fix even_spec 1; only 1: intro; only 1: trivial).	28.8431539536	27592
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	6.0	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.0151519775391	21
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.00638222694397	3
Coq.Arith.Div2.div2_double	40
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	11	search with cache (only 1: apply Nat.add_le_mono_l).	0.263265132904	63
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	6	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0924179553986	14
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	18.0.1.0.18	search with cache (only 1: Nat.induct ltac:(m); only 1: now Nat.nzsimpl; only 1: intro p; only 1: Nat.nzsimpl; only 1: auto).	4.18735599518	5709
Coq.Arith.Plus.le_plus_r	40	16.2.0.12	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: simpl; only 1: auto).	0.857393980026	1175
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	4	search with cache (only 1: Nat.order).	0.00713992118835	5
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.00478506088257	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.4.1	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.00751090049744	8
Coq.Arith.Lt.le_not_lt	40	2	search with cache (only 1: Nat.order).	0.00658488273621	3
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: intuition Nat.order).	0.00740504264832	1
Coq.Arith.Lt.neq_0_lt	40	2.0	search with cache (only 1: intro H1; only 1: Nat.auto').	0.00815510749817	4
Coq.Arith.Lt.lt_0_neq	40	5.0	search with cache (only 1: intro H1; only 1: Nat.order).	0.00856494903564	7
Coq.Arith.Lt.lt_n_S	40	21	search with cache (only 1: intuition).	0.0499188899994	321
Coq.Arith.Lt.lt_S_n	40	1	search with cache (only 1: apply Nat.succ_lt_mono).	0.00507783889771	2
Coq.Arith.Lt.S_pred	40	46	search with cache (only 1: now destruct n).	0.494996786118	2360
Coq.Arith.Lt.S_pred_pos	40	8.4.37	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: trivial).	0.841491937637	2133
Coq.Arith.Lt.lt_pred	40	1.7.4.11.59	search with cache (only 1: inversion 1; only 1: left; only 1: apply Nat.succ_lt_mono; only 1: right; only 1: trivial).	30.44688797	105547
Coq.Arith.Lt.lt_pred_n_n	40	13.1.6.4.20	search with cache (only 1: Nat.cases ltac:(n); only 1: intros; only 1: inversion H; only 1: intros n m; only 1: auto).	1.85586500168	4581
Coq.Arith.Lt.le_lt_or_eq	40	0.2.15.0.22.6	search with cache (only 1: intuition; only 1: destruct H; only 1: intuition; only 1: left; only 1: apply Nat.lt_succ_r; only 1: trivial).	14.3840510845	10569
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00333309173584	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00378680229187	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00469088554382	1
Coq.Arith.Wf_nat.gt_wf_rec	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.1.0.1.1	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0239069461823	21
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	16.0.17.17	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	0.909080028534	4211
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40
Coq.Arith.Compare_dec.le_gt_dec	40
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40
Coq.Arith.Compare_dec.ge_dec	40
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	2	search with cache (only 1: apply Nat.lt_gt_cases).	0.0487899780273	3
Coq.Arith.Compare_dec.not_le	40	1	search with cache (only 1: apply Nat.lt_nge).	0.0445640087128	2
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.008455991745	1
Coq.Arith.Compare_dec.not_ge	40	4	search with cache (only 1: Nat.order).	0.0115129947662	5
Coq.Arith.Compare_dec.not_lt	40	13	search with cache (only 1: Nat.order).	0.0242650508881	105
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	3.0.0.0.0.3.0.24	search with cache (only 1: Nat.double_induct n m; only 1: destruct m; only 1: auto; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: auto).	20.7571079731	59920
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.010302066803	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00991415977478	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	0.0196959972382	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0103631019592	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	2.1.17.76.47	search with cache (only 1: RelationClasses.simpl_relation; only 1: Nat.induct ltac:(n); only 1: trivial; only 1: intro H; only 1: auto).	4.33618211746	20616
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	1.0.1.0.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply eq_nat_refl).	0.0429661273956	98
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.166217803955	112
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	8.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: tauto; only 1: now f_equal).	0.0324559211731	160
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	12.1.2	search with cache (only 1: Bool.destr_bool; only 1: apply Nat.eqb_eq; only 1: easy).	0.184808969498	761
Coq.Arith.Euclid.eucl_dev	40	4.46.0	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	10.5481240749	51512
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	6.1.0	search with cache (only 1: induction n; only 1: intuition; only 1: firstorder).	0.0131499767303	10
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	4	search with cache (only 1: reflexivity).	0.00583505630493	5
Coq.Arith.PeanoNat.Nat.recursion_succ	40	7.0.4.19	search with cache (only 1: compute; only 1: induction n; only 1: auto; only 1: auto).	3.90262079239	17373
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00603413581848	2
Coq.Arith.PeanoNat.Nat.pred_0	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.00565004348755	3
Coq.Arith.PeanoNat.Nat.one_succ	40	1	search with cache (only 1: trivial).	0.00501084327698	2
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00553703308105	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: auto).	0.00482511520386	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0.0	search with cache (only 1: simpl; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.00750303268433	6
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.1.1.4	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: trivial).	0.0066819190979	10
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00512313842773	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	2.0.1.15.1.0	search with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: induction 1; only 1: auto; only 1: constructor; only 1: trivial).	0.783254861832	3231
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.1.1	search with cache (only 1: simpl; only 1: revert m; only 1: trivial).	0.0061821937561	7
Coq.Arith.PeanoNat.Nat.max_l	40	0.1.2.0.0.0.0.1.0.0.0.0.4	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.85561299324	7801
Coq.Arith.PeanoNat.Nat.max_r	40	0.1.2.0.1.0.0.2.5	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.01032781601	5790
Coq.Arith.PeanoNat.Nat.min_l	40	0.1.2.0.1.0.0.2.7	search with cache (only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.51052093506	10767
Coq.Arith.PeanoNat.Nat.min_r	40	0.1.2.0.0.0.0.1.0.0.1.8	search with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.57866191864	6982
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	20	search with cache (only 1: now nzsimpl).	0.235640048981	420
Coq.Arith.PeanoNat.Nat.pow_0_r	40	15	search with cache (only 1: now split).	0.0166280269623	91
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	13	search with cache (only 1: now nzsimpl').	0.041218996048	60
Coq.Arith.PeanoNat.Nat.square_spec	40	2.1	search with cache (only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: now f_equal).	0.0219860076904	16
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	0.0.0.13.29.7.8	search with cache (only 1: intro H1; only 1: elim H1; only 1: intro n; only 1: induction n; only 1: simpl; only 1: now apply (neq_succ_diag_l 0); only 1: now nzsimpl').	5.02384901047	11416
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	10.5	search with cache (only 1: destruct 1; only 1: now rewrite <- plus_n_Sm in H).	0.173626184464	494
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	27	search with cache (only 1: easy).	0.155976057053	798
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	4.5.38.4.2.0	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: induction n; only 1: now elim H; only 1: elim (neq_succ_0 _ H)).	5.24511194229	19728
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	1.7.3	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	0.327001094818	429
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.2	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0211629867554	20
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	1.8.4	search with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	2.8483440876	1002
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40
Coq.Arith.PeanoNat.Nat.div2_double	40	0.7.3.10.4.8.3	search with cache (only 1: simpl; only 1: nzinduct n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	11.4790551662	13767
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.1.4.0.1.2.1	search with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now f_equal; only 1: nzsimpl; only 1: simpl; only 1: now f_equal).	0.955426931381	709
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	1.3.1.48	search with cache (only 1: nzinduct n; only 1: easy; only 1: fix le_div2 1; only 1: trivial).	6.66436910629	16062
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	3.4.0	search with cache (only 1: intro n; only 1: simpl mul; only 1: now rewrite add_0_r).	0.0275239944458	23
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	1.3.32	search with cache (only 1: induction n; only 1: intuition; only 1: intuition).	1.20767807961	4523
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	2.5.2.4.18.0	search with cache (only 1: nzsimpl'; only 1: apply eq_iff_eq_true; only 1: split; only 1: trivial; only 1: fix even_spec 1; only 1: trivial).	22.2782330513	37725
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40	0.6.14.6.4	search with cache (only 1: nzsimpl'; only 1: simpl; only 1: revert n; only 1: fix odd_spec 1; only 1: trivial).	20.9739618301	34731
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	0.1.1	search with cache (only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	0.0310599803925	39
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	2.3.0.9	search with cache (only 1: intro H; only 1: unfold odd; only 1: fix even_spec 1; only 1: trivial).	3.7549431324	5077
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	1	search with cache (only 1: trivial).	0.00530791282654	2
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	16	search with cache (only 1: now destruct compare).	0.0483059883118	108
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40	0.57.2.24	search with cache (only 1: nzinduct n; only 1: auto; only 1: fix odd_spec 1; only 1: auto).	15.9771511555	19686
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	5.0	search with cache (only 1: intros a b Ha Hb; only 1: Nat.order).	0.00687503814697	7
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	61	search with cache (only 1: firstorder).	1.56060576439	3820
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00497198104858	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	1	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.00579404830933	2
Coq.Arith.Gt.le_not_gt	40
Coq.Arith.Gt.gt_not_le	40
Coq.Arith.Gt.le_S_gt	40	14	search with cache (only 1: auto).	0.101962089539	232
Coq.Arith.Gt.gt_S_le	40	0.18.30	search with cache (only 1: intro; only 1: apply Nat.lt_eq_cases; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.565791130066	1576
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00488805770874	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.00527906417847	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	9.3.1.5.1	search with cache (only 1: Nat.induct ltac:(n); only 1: right; only 1: trivial; only 1: intros EQ; only 1: intuition).	1.44804096222	1555
Coq.Arith.Gt.plus_gt_reg_l	40
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00513386726379	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00750494003296	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00681900978088	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00753116607666	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00768709182739	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00769996643066	4
Coq.Logic.JMeq.JMeq_congr	40	1.38.8.35.2	search with cache (only 1: intro p; only 1: intros A C h1 h2; only 1: intros; only 1: rewrite H; only 1: reflexivity).	15.1017510891	176623
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0120630264282	4
Coq.Logic.JMeq.eq_dep_id_JMeq	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00785303115845	3
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00789904594421	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	2.4.17.0	search with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.345459938049	1964
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.7.10	search with cache (only 1: intros n m; only 1: destruct m; only 1: auto).	0.0705738067627	604
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.4.2.10.3.9	search with cache (only 1: red; only 1: intro x; only 1: split; only 1: reflexivity; only 1: intros; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.320431947708	2785
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	0.2	search with cache (only 1: intros; only 1: tauto).	0.00935101509094	4
Coq.Logic.Classical_Prop.not_imply_elim	40	0.4.5	search with cache (only 1: unfold not; only 1: intros P H; only 1: tauto).	0.0555338859558	99
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.0	search with cache (only 1: unfold not; only 1: tauto).	0.00659394264221	2
Coq.Logic.Classical_Prop.imply_to_or	40	0.8.14	search with cache (only 1: intro A; only 1: intros; only 1: tauto).	0.253811836243	1019
Coq.Logic.Classical_Prop.imply_to_and	40	0.1	search with cache (only 1: intros a b; only 1: tauto).	0.0359349250793	3
Coq.Logic.Classical_Prop.or_to_imply	40	0	search with cache (only 1: tauto).	0.0288650989532	1
Coq.Logic.Classical_Prop.not_and_or	40	0.2	search with cache (only 1: intros; only 1: tauto).	0.0134770870209	4
Coq.Logic.Classical_Prop.or_not_and	40	0	search with cache (only 1: tauto).	0.00758194923401	1
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.00697803497314	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.00705480575562	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.00630593299866	1
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.00758099555969	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	2.2.50	search with cache (only 1: intro p; only 1: destruct p; only 1: eauto).	0.616644859314	6250
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40	0.7	search with cache (only 1: subst; only 1: reflexivity).	0.0124309062958	14
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	1.23.17.40	search with cache (only 1: intros H x0; only 1: intro p; only 1: destruct p; only 1: reflexivity).	1.71189594269	14260
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	16.2	search with cache (only 1: intro y; only 1: CRelationClasses.simpl_crelation).	0.211755990982	356
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	4.12	search with cache (only 1: intros; only 1: apply H).	0.242210865021	932
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	14.16.2.32	search with cache (only 1: intro H; only 1: intros m IH; only 1: intro; only 1: apply H).	28.0831859112	61332
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40	12.15.8.1.11.0.22.13	search with cache (only 1: intros; only 1: intro z; only 1: destruct (H z); only 1: subst; only 1: left; only 1: exact I; only 1: subst; only 1: auto).	9.24916577339	201042
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	15.0.0.3.4.29	search with cache (only 1: red; only 1: intros Ext A Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.602461099625	9445
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	1.1.0.11.27	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	0.223392963409	2674
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40	7.3.4.16.0.0.4.0	search with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: firstorder; only 1: apply NNPP; only 1: red; only 1: apply H).	20.6837909222	27433
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.2.3.4.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.049341917038	197
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	1.2.3.3.7.10.1	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: apply abs).	3.05004787445	14423
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	4.1	search with cache (only 1: unfold not; only 1: firstorder).	0.019994020462	34
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	5.0	search with cache (only 1: unfold not; only 1: firstorder).	0.0154011249542	26
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40	182.57	search with cache (only 1: RelationClasses.reduce; only 1: eauto with *).	24.2231991291	74707
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.00724387168884	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.1.0	search with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.0070960521698	4
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.2.0	search with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.0093400478363	12
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.008141040802	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00799107551575	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	3.2	search with cache (only 1: apply functional_extensionality_dep_good; only 1: reflexivity).	0.00825905799866	13
Coq.Logic.FunctionalExtensionality.eta_expansion	40	2	search with cache (only 1: reflexivity).	0.00539803504944	3
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	11.1.2.5.15.0	search with cache (only 1: intros; only 1: intro H1; only 1: intro; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: auto).	0.397760152817	4340
Coq.Logic.HLevels.false_hprop	40	7.0	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00740504264832	9
Coq.Logic.HLevels.true_hprop	40	5.0.0.25.7	search with cache (only 1: intro H; only 1: intro p; only 1: destruct p; only 1: destruct H; only 1: trivial).	0.215204954147	2668
Coq.Logic.HLevels.not_hprop	40	1.0.4.1.2	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: contradiction).	0.0310928821564	200
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	13.2.2.4.14.5	search with cache (only 1: intro a; only 1: intros A x P H y H0; only 1: destruct H; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: auto).	3.02883601189	26582
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40	1.5.2	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	0.0412480831146	79
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct epsilon_statement with (P := P); only 1: destruct epsilon_statement with (P := P); only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.0444741249084	39
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.21.12	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0969240665436	1125
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00706887245178	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	0.10.0.3.13	search with cache (only 1: intro A; only 1: intro x; only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.213485956192	1499
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.35.7	search with cache (only 1: intro p; only 1: inversion 1; only 1: reflexivity).	0.427609920502	3935
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	2.14.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0636210441589	347
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.24.0.0.18.4.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.63309407234	28335
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.22.3.22	search with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: dependent rewrite H; only 1: reflexivity).	1.89025998116	19406
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.12	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0573499202728	231
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.9.0.0.8.7	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.358433008194	2297
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.26.10	search with cache (only 1: intro p; only 1: inversion 1; only 1: reflexivity).	0.479695081711	4129
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	3.12.13.17.43.18	search with cache (only 1: intro p; only 1: intros H ?; only 1: intro x; only 1: intro; only 1: inversion 1; only 1: reflexivity).	10.8756129742	144772
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	26.11.30.13	search with cache (only 1: intros; only 1: destruct H0 in H; only 1: subst; only 1: auto).	1.4453599453	14497
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	15.2.0	search with cache (only 1: red; only 1: intros; only 1: auto).	0.104051828384	985
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	12.5.2.0	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	0.431087970734	4770
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	19.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.0711679458618	625
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.011785030365	2
Coq.Logic.EqdepFacts.f_eq_dep	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0172431468964	14
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.11	search with cache (only 1: destruct 1; only 1: trivial).	0.0248839855194	82
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.2	search with cache (only 1: intros * []; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0152151584625	12
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	11.9	search with cache (only 1: intros ? ? ? Fl Fr; only 1: auto).	0.369091033936	2841
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	8	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.492259979248	12
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	4.1.0	search with cache (only 1: intro A; only 1: intros; only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.484574079514	8
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	6.16	search with cache (only 1: intros [Hl Hr]; only 1: auto).	0.062420129776	394
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	1.0.7.1	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: auto; only 1: contradiction).	0.016939163208	77
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00652718544006	2
Coq.Logic.Decidable.dec_False	40	3.1.33	search with cache (only 1: right; only 1: intro H; only 1: destruct H).	0.0626590251923	1300
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0157029628754	2
Coq.Logic.Decidable.dec_and	40	1.1.0	search with cache (only 1: unfold decidable; only 1: intros; only 1: tauto).	0.0180521011353	5
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00973200798035	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0127608776093	2
Coq.Logic.Decidable.dec_iff	40	6.0.3	search with cache (only 1: intros A P; only 1: unfold decidable, not; only 1: tauto).	0.050411939621	186
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00791096687317	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00964379310608	1
Coq.Logic.Decidable.not_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0120000839233	2
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0142810344696	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0104959011078	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0304880142212	2
Coq.Logic.Decidable.not_true_iff	40	1.1.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00921893119812	7
Coq.Logic.Decidable.not_false_iff	40	0.0.12	search with cache (only 1: split; only 1: tauto; only 1: tauto).	0.0237560272217	76
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0129418373108	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0154609680176	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0185990333557	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0807890892029	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0145168304443	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0146818161011	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0170259475708	2
Coq.Logic.Decidable.not_or_iff	40	4.0	search with cache (only 1: intros; only 1: tauto).	0.0126800537109	20
Coq.Logic.Decidable.not_and_iff	40	1	search with cache (only 1: tauto).	0.00998020172119	2
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0191819667816	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0196559429169	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition_in).	0.00964498519897	4
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.8.0.3.5	search with cache (only 1: induction s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	1.05398392677	844
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	3.0.0.5	search with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: auto; only 1: simpl; only 1: intuition_in).	2.06448578835	460
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.3.0.0.0.1	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: ok; only 1: simpl; only 1: auto).	0.191930055618	65
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0200169086456	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0	search with cache (only 1: eauto with *).	0.00745010375977	1
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	1.32	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.38561296463	586
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00626301765442	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	2.2.0.66	search with cache (only 1: red in H; only 1: destruct s; only 1: ok; only 1: ok).	1.87705802917	3268
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	1.3.13	search with cache (only 1: split; only 1: auto with arith; only 1: auto with arith).	0.0259609222412	181
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.7.0.0.6.0.3.6	search with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: split; only 1: Nat.order'; only 1: Nat.order_pos; only 1: simpl; only 1: auto).	3.01457190514	3323
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	0.51.9.0	search with cache (only 1: intro H; only 1: revert n; only 1: fix gcd_divide 1; only 1: auto).	20.0141909122	71844
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40	0.63.2	search with cache (only 1: revert l; only 1: fix gcd_divide 1; only 1: auto).	25.9016239643	117090
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.00987696647644	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40	0.36.0.36.27	search with cache (only 1: split; only 1: fix le_div2 1; only 1: tauto; only 1: fix le_div2 1; only 1: tauto).	35.7054998875	66672
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.3.0.0.0.0.1	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition_in; only 1: apply maxdepth_cardinal).	0.251513004303	292
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	101.49	search with cache (only 1: exists 1; only 1: now constructor).	3.10391497612	20082
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.2.0.1.11.0	search with cache (only 1: destruct t; only 1: simpl; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.194684028625	422
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	6.0	search with cache (only 1: intros; only 1: auto).	0.0306539535522	12
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	12	search with cache (only 1: easy).	0.049852848053	93
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.2.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.00888800621033	6
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.1	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0140578746796	17
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0135300159454	7
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.2.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.110540151596	308
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	2.2.9.0.0	search with cache (only 1: unfold union; only 1: destruct compare_height; only 1: ok; only 1: auto_tc; only 1: auto_tc).	0.686500072479	1552
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	25	search with cache (only 1: intuition).	0.519876003265	1158
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	26	search with cache (only 1: solve_proper).	0.0885720252991	631
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	search with cache (only 1: intro H; only 1: trivial).	0.0114481449127	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	33.22	search with cache (only 1: intros Base Step; only 1: now Z_as_OT.nzsimpl').	1.15367293358	2310
Coq.MSets.MSetPositive.PositiveSet.mem_node	40	0.14	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.414341926575	491
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	3.9	search with cache (only 1: intro H; only 1: now N_as_OT.nzsimpl).	0.198444128036	101
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.1.25	search with cache (only 1: intros n m; only 1: destruct n, m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.277806997299	886
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	3.0.0.2.6.0.0.19	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: now split; only 1: easy'; only 1: split; only 1: now split; only 1: easy').	3.45006990433	5972
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	14.0.0.14.21	search with cache (only 1: destr_bool; only 1: intuition; only 1: easy'; only 1: easy'; only 1: intuition).	2.27435612679	5314
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0130870342255	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00974202156067	5
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00968480110168	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	5.86.31	search with cache (only 1: intros EQ; only 1: rewrite <- EQ; only 1: auto).	18.8938369751	96334
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40	4.6.29	search with cache (only 1: red; only 1: fix even_spec 1; only 1: intuition).	2.53438901901	5079
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0104961395264	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0121297836304	4
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0179870128632	13
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	3.1.0	search with cache (only 1: rewrite singleton_spec; only 1: intros; only 1: auto with relations).	0.0145800113678	7
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0127291679382	2
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0126910209656	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0124509334564	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0148279666901	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0120480060577	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0152230262756	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0152628421783	5
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.092395067215	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40	2.3.2.15.12.4.49	search with cache (only 1: compute; only 1: intros; only 1: apply eq_iff_eq_true; only 1: split; only 1: trivial; only 1: fix even_spec 1; only 1: trivial).	13.2367379665	33227
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	6.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.0137259960175	10
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	2.1.27	search with cache (only 1: split; only 1: apply <- mem_spec; only 1: apply -> mem_spec).	0.831583976746	1069
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	2.1.8	search with cache (only 1: split; only 1: apply <- equal_spec; only 1: apply -> equal_spec).	0.217036008835	110
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	0.2.12	search with cache (only 1: split; only 1: apply <- subset_spec; only 1: apply -> subset_spec).	0.215537071228	145
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	2.0.13	search with cache (only 1: split; only 1: apply <- is_empty_spec; only 1: apply -> is_empty_spec).	0.221832990646	165
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	3.0.4	search with cache (only 1: compute; only 1: rewrite singleton_spec; only 1: auto with relations).	0.0207960605621	19
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	4.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0191559791565	6
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	0.3.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.139672040939	9
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0189819335938	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	15	search with cache (only 1: intuition).	0.478097915649	171
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	0.2.0.1.12	search with cache (only 1: constructor; only 1: apply <- exists_spec; only 1: intuition; only 1: apply -> exists_spec; only 1: intuition).	0.838788032532	508
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	4.10	search with cache (only 1: red; only 1: intuition).	0.460513830185	219
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	1.7.2	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto with *).	0.832576036453	220
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0	search with cache (only 1: firstorder).	0.00628113746643	1
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.0410211086273	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	9.0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: rewrite !remove_iff, Hx, Hs; only 1: firstorder).	0.397962808609	167
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	5.0.6.1.29	search with cache (only 1: reduce; only 1: rewrite filter_spec; only 1: eauto with set; only 1: intros P; only 1: intuition).	7.3384680748	6387
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.122405052185	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	1.1.1.0	search with cache (only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0175831317902	7
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	0	search with cache (only 1: intuition).	0.00947904586792	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	4	search with cache (only 1: intuition).	0.011134147644	5
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	1.17	search with cache (only 1: intros p q H; only 1: auto).	0.382300853729	166
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	2.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0346741676331	4
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0197629928589	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.01460313797	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	1.0	search with cache (only 1: intuition; only 1: fsetdec).	0.282529115677	3
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0264241695404	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	1.0	search with cache (only 1: intuition; only 1: fsetdec).	0.0502281188965	3
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0.21	search with cache (only 1: intros p H0 H2; only 1: fsetdec).	0.490763902664	430
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0401871204376	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.0611019134521	4
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.023640871048	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0	search with cache (only 1: fsetdec).	0.136036157608	1
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	0.3	search with cache (only 1: compute; only 1: fsetdec).	0.101506948471	5
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	1	search with cache (only 1: fsetdec).	0.0590159893036	2
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	14.2	search with cache (only 1: intuition; only 1: now f_equiv).	0.164942979813	217
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.0862329006195	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.0773220062256	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.174746990204	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	1.42.4	search with cache (only 1: intros; only 1: intro H1; only 1: fsetdec).	9.95928120613	5064
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0580658912659	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0950930118561	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0.0.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.10487985611	3
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.0917308330536	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.175418138504	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	1	search with cache (only 1: fsetdec).	0.0188930034637	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0181839466095	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0309250354767	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0423119068146	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0312769412994	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0384731292725	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0485169887543	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	2.0	search with cache (only 1: rewrite union_spec; only 1: intuition).	0.0214381217957	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	7.0.1.0.1	search with cache (only 1: intros EQ; only 1: rewrite inter_spec; only 1: split; only 1: intuition; only 1: fsetdec).	0.500824928284	224
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0493099689484	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0522210597992	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0508089065552	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0744600296021	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	1	search with cache (only 1: fsetdec).	0.114612102509	2
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.121375799179	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	3.0	search with cache (only 1: intuition; only 1: fsetdec).	0.115360975266	5
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	1	search with cache (only 1: fsetdec).	0.0767529010773	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	2	search with cache (only 1: fsetdec).	0.0273571014404	3
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0361878871918	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	3	search with cache (only 1: fsetdec).	2.01408076286	660
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0170459747314	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0276238918304	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0332419872284	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0493969917297	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0201051235199	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	2.15.17	search with cache (only 1: intros; only 1: intros Hab; only 1: fsetdec).	1.19844889641	1067
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.068186044693	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	1.47	search with cache (only 1: intros H; only 1: fsetdec).	0.73290514946	1975
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0833210945129	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	2.1.1.20	search with cache (only 1: constructor; only 1: rewrite add_spec; only 1: intuition; only 1: intuition).	0.957742929459	682
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	2.43.24	search with cache (only 1: intros H; only 1: intros Hb; only 1: fsetdec).	2.43714499474	4167
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.207999944687	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40	25.0.0.9.0.0.2	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: firstorder; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: firstorder).	25.2146990299	14486
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	0.16.0.0.0.0.31	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: fsetdec; only 1: auto with set).	10.0930678844	13867
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.2.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set).	0.0181109905243	13
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.8.0.5.1.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: set (l := rev (elements s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	22.8088331223	40037
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	3	search with cache (only 1: intuition).	0.0100109577179	4
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto with set relations).	0.00737595558167	3
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	5.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: Dec.fsetdec).	0.0646858215332	12
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.00946092605591	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	6.2	search with cache (only 1: red; only 1: eauto with *).	0.021014213562	10
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	3.0.0.3.0.0.0.0.0.1.0.1	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: eauto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	12.4783420563	3168
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	1.2.2.2	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0733289718628	97
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.951776981354	235
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	6	search with cache (only 1: intuition).	0.0366818904877	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	4.3	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	1.32748699188	451
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	1.1.0.1.1.0.1.0.1	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	10.1526639462	3692
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.1.1.0.2	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.651479005814	234
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	7	search with cache (only 1: intuition).	0.0251779556274	20
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0237789154053	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0262830257416	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	2	search with cache (only 1: auto with set).	0.00804901123047	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.2.0.0	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.139220952988	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	2.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0149419307709	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	3.0.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0158550739288	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	0.2	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0167717933655	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.0198059082031	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.00833797454834	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	5.3	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: intuition).	0.0502309799194	28
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0	search with cache (only 1: auto with set).	0.00679278373718	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	7.11	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: eauto with set).	1.65329289436	1369
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0179281234741	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	6	search with cache (only 1: intuition).	0.0223100185394	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	8.0.0.1.0.0	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: intuition; only 1: intuition; only 1: discriminate).	7.43263411522	5095
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: intuition).	0.0200700759888	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0171520709991	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0101089477539	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00943517684937	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.00668215751648	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0178949832916	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.00733804702759	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.00781011581421	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00815105438232	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0168991088867	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	5	search with cache (only 1: auto with set).	0.010134935379	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.00836706161499	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.00831985473633	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00820112228394	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00776100158691	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0872230529785	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00707602500916	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0762860774994	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00641798973083	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.00646209716797	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0158638954163	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	6	search with cache (only 1: auto with set).	2.11410689354	928
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00872015953064	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0631411075592	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.00670599937439	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00684905052185	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0100800991058	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.00867104530334	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.1.3.20.9	search with cache (only 1: intros H; only 1: intros x; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *).	11.3502810001	18154
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	6.0	search with cache (only 1: intros; only 1: auto with set).	0.0983209609985	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	12	search with cache (only 1: solve_proper).	0.222081184387	49
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	5	search with cache (only 1: intuition).	0.0283870697021	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: intuition).	0.0243449211121	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	5.0.6.1.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: intuition; only 1: red; only 1: intuition).	0.675477027893	544
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: intuition).	0.0597310066223	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: intuition).	0.47342300415	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.137221097946	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0.1	search with cache (only 1: red; only 1: now subst).	0.0188589096069	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.18.0	search with cache (only 1: intro n; only 1: intro A; only 1: fsetdec).	0.870671033859	775
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	2.4.12.5.5.0	search with cache (only 1: intros x y H; only 1: compute; only 1: intros P; only 1: intros x' x'' Hx' Hx''; only 1: rewrite remove_spec; only 1: fsetdec).	14.1722400188	12950
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0.0.16	search with cache (only 1: intros; only 1: rewrite singleton_spec; only 1: now subst).	0.035621881485	146
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	4.0.12.22	search with cache (only 1: intros x y; only 1: intro; only 1: rewrite add_spec; only 1: intuition).	4.75197505951	7875
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0.7.16	search with cache (only 1: intros n m; only 1: intros EQ; only 1: fsetdec).	2.34963011742	1809
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0946650505066	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.128945112228	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.153566122055	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0.43	search with cache (only 1: intros a b c0; only 1: fsetdec).	4.01607203484	4871
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0.2.0	search with cache (only 1: intros x y H s s' H0; only 1: intro; only 1: fsetdec).	0.276509046555	5
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0	search with cache (only 1: fsetdec).	0.174776077271	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0.59	search with cache (only 1: intros n IH; only 1: fsetdec).	29.5521509647	37330
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.058739900589	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	1.1.0	search with cache (only 1: intros; only 1: intuition; only 1: intuition_in).	0.0396909713745	5
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.16	search with cache (only 1: intro n; only 1: intuition_in).	0.0529611110687	424
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.7	search with cache (only 1: intros Base Step; only 1: intuition_in).	0.0105209350586	9
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.00836205482483	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.7.0.1	search with cache (only 1: intros x y; only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.35303401947	302
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.6.0	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0574769973755	14
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1.8	search with cache (only 1: intros H; only 1: intuition_in; only 1: order).	0.24653506279	156
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	1.3.0	search with cache (only 1: unfold lt_tree; only 1: intros x y H; only 1: eauto).	0.0170300006866	14
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0	search with cache (only 1: intuition_in; only 1: order).	0.0202739238739	2
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00631093978882	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	1.0.2.0.13.0.0.0.3	search with cache (only 1: repeat red; only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros Az LS n H1 H2; only 1: intros; only 1: intros x y z; only 1: subst; only 1: order).	5.16487598419	9518
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.2.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.198001861572	237
Coq.MSets.MSetGenTree.Props.empty_spec	40	9.2	search with cache (only 1: intros l'; only 1: auto).	0.0620441436768	101
Coq.MSets.MSetGenTree.Props.empty_ok	40	11	search with cache (only 1: auto with *).	0.0140910148621	33
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	3.23.4.0.7.26.7	search with cache (only 1: constructor; only 1: intros a n; only 1: intuition; only 1: firstorder; only 1: intros a b; only 1: intros; only 1: firstorder).	34.4526062012	80629
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	1.1.0.0.2.2.17.2.49	search with cache (only 1: intros [| n]; only 1: constructor; only 1: red; only 1: intros; only 1: split; only 1: auto with relations; only 1: auto with relations; only 1: simpl; only 1: auto).	1.86734819412	12742
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	54	search with cache (only 1: firstorder).	1.73701381683	2158
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40	1.62	search with cache (only 1: fix gcd_divide 1; only 1: easy).	6.47500109673	20787
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40	2.63	search with cache (only 1: fix gcd_divide 1; only 1: easy).	6.37651395798	21780
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	10.3.5.4.14.30.1	search with cache (only 1: constructor; only 1: CRelationClasses.reduce; only 1: now split; only 1: intro H; only 1: red; only 1: now f_equal; only 1: firstorder).	2.76504588127	15911
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	31	search with cache (only 1: firstorder).	0.411905050278	1248
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0	search with cache (only 1: Dec.fsetdec).	0.093917131424	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	search with cache (only 1: Dec.fsetdec).	0.0951459407806	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.13.2	search with cache (only 1: intro n; only 1: red; only 1: firstorder).	0.191357135773	348
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	7.13.32.1.25.5	search with cache (only 1: intros; only 1: red; only 1: intuition; only 1: intros a b; only 1: compute; only 1: intuition).	39.9085841179	34854
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.8.0.0.1.0.1.0.0.0.0.0.29	search with cache (only 1: revert l; only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	9.81855511665	22819
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition).	0.0102381706238	4
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	5	search with cache (only 1: intuition).	0.0089271068573	6
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.5.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intuition; only 1: inv).	0.0176818370819	10
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	9.1	search with cache (only 1: intros; only 1: intuition).	0.184018135071	383
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	0.2.0	search with cache (only 1: unfold elements; only 1: intros; only 1: auto).	0.0081799030304	5
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0	search with cache (only 1: constructor).	0.0058901309967	1
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40	2.4.1.3.0.2.0	search with cache (only 1: induction s; only 1: auto; only 1: intros; only 1: simpl; only 1: inv; only 1: red; only 1: firstorder).	3.07801008224	4562
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	1.0.0.0.5.3.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intros; only 1: intro; only 1: intuition; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	1.13568401337	1948
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	5.1.0	search with cache (only 1: unfold elements; only 1: intros; only 1: auto).	0.137171030045	25
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: tauto).	0.00468111038208	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.2.18.8	search with cache (only 1: intro z; only 1: intros n; only 1: fix even_spec 1; only 1: trivial).	3.92670893669	4927
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40	1.35	search with cache (only 1: fix le_div2 1; only 1: trivial).	1.95847916603	3230
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	9	search with cache (only 1: apply CMorphisms.reflexive_proper).	0.00752282142639	10
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	11.15.0	search with cache (only 1: intros x Hs; only 1: rewrite InA_alt; only 1: firstorder  (subst; auto)).	1.24904918671	2529
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	5.18	search with cache (only 1: fix le_div2 1; only 1: intuition).	8.6732108593	3400
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	18	search with cache (only 1: easy).	0.0503318309784	280
Coq.MSets.MSetList.MakeRaw.empty_spec	40	20	search with cache (only 1: now simpl).	0.358633041382	446
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	1.1.0	search with cache (only 1: induction s; only 1: intuition; only 1: intuition).	0.00999212265015	5
Coq.MSets.MSetList.MakeRaw.elements_spec2	40
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	1.10.11	search with cache (only 1: simpl_relation; only 1: inv; only 1: intuition).	0.476488828659	586
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40	2.12.0.0.0.0	search with cache (only 1: induction s; only 1: intros x Hs; only 1: discriminate; only 1: intros; only 1: inversion H; only 1: auto).	3.84831285477	2651
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	4.21	search with cache (only 1: intros x y z; only 1: now destruct 1).	3.01634287834	3956
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	3.0	search with cache (only 1: intro s; only 1: intuition).	0.00998282432556	5
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1.0	search with cache (only 1: intro s; only 1: intuition).	0.00781393051147	3
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	6.2	search with cache (only 1: simpl; only 1: now repeat split).	0.00862002372742	10
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	1.1.8.6.0	search with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: auto with sets; only 1: auto with sets).	0.0904531478882	489
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	4.1.4.3.2.1.4	search with cache (only 1: induction 1 as [? ?| ]; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	1.0633289814	8207
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.2.4.3	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0284380912781	101
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	3.3.5.0.2	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.159090995789	901
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.3.3.0.3	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0448110103607	263
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	4.4.11.7.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	1.07888102531	7096
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	2.3.0.2.5.2.3.31.16.4	search with cache (only 1: intros y0 z D H0 H1; only 1: induction H1; only 1: split; only 1: intro x; only 1: auto with sets; only 1: intros n m; only 1: intros; only 1: eauto; only 1: intro x; only 1: auto with sets).	9.22805905342	61258
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.0.0.2.0.0.0.21	search with cache (only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial; only 1: red; only 1: destruct 1; only 1: trivial).	0.321133136749	2690
Coq.Sets.Uniset.leb_refl	40	5.7.7	search with cache (only 1: intros; only 1: red; only 1: destr_bool).	0.0561718940735	443
Coq.Sets.Uniset.incl_left	40	1.8.16.3.6.41	search with cache (only 1: intro p; only 1: destruct p; only 1: intros Hfst Hsnd; only 1: intro H; only 1: rewrite Hsnd; only 1: auto).	21.8316059113	119317
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00870513916016	5
Coq.Sets.Uniset.seq_refl	40	3	search with cache (only 1: auto).	0.00726890563965	4
Coq.Sets.Uniset.seq_trans	40	0.22.2.5	search with cache (only 1: unfold seq; only 1: destr_bool; only 1: rewrite H; only 1: auto).	4.78322291374	16789
Coq.Sets.Uniset.seq_sym	40	0.0.0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0111858844757	9
Coq.Sets.Uniset.union_empty_left	40	1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00844502449036	4
Coq.Sets.Uniset.union_empty_right	40	7.7.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: destr_bool; only 1: intuition).	0.582807064056	2473
Coq.Sets.Uniset.union_comm	40	8.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros x a; only 1: intuition).	0.159555196762	492
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.0162630081177	14
Coq.Sets.Uniset.seq_left	40	0.0.1.0.0.0.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.13211607933	196
Coq.Sets.Uniset.seq_right	40	1.0.0.0.0.0.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: elim H; only 1: auto).	0.133165836334	201
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	2	search with cache (only 1: split).	0.00416898727417	3
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: auto).	0.0097541809082	7
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.00637722015381	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: simpl; only 1: auto).	0.00895714759827	8
Coq.Sets.Multiset.munion_comm	40	2.1.4.0	search with cache (only 1: unfold meq; only 1: intros; only 1: compute; only 1: firstorder).	0.481885910034	319
Coq.Sets.Multiset.munion_ass	40	0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.00944805145264	6
Coq.Sets.Multiset.meq_left	40	1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0107729434967	8
Coq.Sets.Multiset.meq_right	40	0.0.1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0107390880585	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0123870372772	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	2.31	search with cache (only 1: intros Hab; only 1: trivial).	0.0665011405945	693
Coq.Sets.Integers.le_antisym	40	12.4	search with cache (only 1: intro H; only 1: intuition PeanoNat.Nat.Private_Tac.order).	0.0922038555145	318
Coq.Sets.Integers.le_trans	40	17	search with cache (only 1: exact PeanoNat.Nat.le_trans).	0.214480876923	299
Coq.Sets.Integers.le_Order	40	5.0.0.1.4.0.7.0.76	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros n m LE; only 1: intuition PeanoNat.Nat.order; only 1: red; only 1: intros a b Ha Hb; only 1: PeanoNat.Nat.order).	2.00033283234	9742
Coq.Sets.Integers.triv_nat	40	23.18	search with cache (only 1: intro n; only 1: split).	0.475792884827	3818
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	5.1.6.12.13.13	search with cache (only 1: intros; only 1: intro z; only 1: intros; only 1: red; only 1: unfold not; only 1: auto).	0.821933031082	9200
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	8.1.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	0.129432916641	326
Coq.Sets.Relations_1_facts.contains_is_preorder	40	10	search with cache (only 1: auto  10 with sets).	0.0127801895142	21
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	9.6.7	search with cache (only 1: red; only 1: destruct 1; only 1: auto  10 with sets).	1.47116494179	9879
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.0101909637451	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.0247600078583	57
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.00638699531555	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	2.4.9	search with cache (only 1: intros; only 1: intros H'3 H'4; only 1: auto with sets).	0.0275499820709	193
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40	2.2.0.4.2.2.2.0.2.6.0.1	search with cache (only 1: intros U R; only 1: red; only 1: intro H; only 1: intros x y H'; only 1: elim H'; only 1: generalize Rstar_contains_R; only 1: auto with sets; only 1: generalize Rstar_contains_R; only 1: intuition; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	32.6789259911	149702
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.1.0.1.3.3.3.4.5.3	search with cache (only 1: intuition; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	5.62967514992	38413
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.3.1.0.6.1	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	2.43015503883	10795
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	11.1.1	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.144979000092	894
Coq.Sets.Permut.comm_left	40	16.1	search with cache (only 1: intros; only 1: auto).	0.089870929718	603
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	2.11.19	search with cache (only 1: intros t H'2 H'3; only 1: fix gcd_greatest 1; only 1: auto with sets).	1.01930999756	7254
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40	1.35.7	search with cache (only 1: intros x H'2; only 1: fix gcd_divide 1; only 1: auto with sets).	2.34808516502	16952
Coq.Sets.Powerset.Empty_set_minimal	40	4	search with cache (only 1: induction 1).	0.0119740962982	38
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	19	search with cache (only 1: auto  10 with sets).	0.0447669029236	254
Coq.Sets.Powerset.Inclusion_is_transitive	40	2.0.0.0	search with cache (only 1: red; only 1: intro X; only 1: red; only 1: auto with sets).	0.0118579864502	13
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	1	search with cache (only 1: auto with sets).	0.00775194168091	11
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40	0.9.0.0.6.3.1.0	search with cache (only 1: intro X; only 1: red; only 1: intros; only 1: reflexivity || destruct H; only 1: intuition; only 1: elim Inclusion_is_an_order; only 1: subst; only 1: auto with sets).	16.8285431862	13556
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.0.2.0.1.0.0.1.1	search with cache (only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel_left with (y := y); only 1: apply H'1; only 1: auto with sets; only 1: auto with sets).	0.480013847351	614
Coq.Sets.Powerset.Empty_set_is_Bottom	40	1.6.0.0.7.18.1	search with cache (only 1: intro X; only 1: split; only 1: simpl; only 1: auto with sets; only 1: intros x H'; only 1: simpl; only 1: auto with sets).	1.55327916145	3327
Coq.Sets.Powerset.Union_minimal	40	0.0.10.1	search with cache (only 1: intros x y z H' H'0; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	7.50536108017	934
Coq.Sets.Powerset.Intersection_maximal	40	0	search with cache (only 1: auto with sets).	0.00795698165894	1
Coq.Sets.Powerset.Union_increases_l	40	1.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00777387619019	5
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00710201263428	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.1.0.1.3.3	search with cache (only 1: intro X; only 1: intro A; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.813839912415	369
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.00932288169861	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	5.3.4	search with cache (only 1: split; only 1: trivial with sets; only 1: auto with sets).	0.124198913574	281
Coq.Sets.Classical_sets.Subtract_inv	40	1.6.2.0.3.0	search with cache (only 1: unfold Subtract at 1; only 1: intro H'1; only 1: intros x H'0; only 1: intros; only 1: destruct H; only 1: auto with sets).	0.471287965775	926
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.37.1	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets).	5.36287784576	12467
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.0.10.0.2.1.2.6	search with cache (only 1: red; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros U R; only 1: red in T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	4.14209985733	26003
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	1.0.0.0.3	search with cache (only 1: intros X Y H'; only 1: intros x H'0; only 1: elim H'0; only 1: red; only 1: auto with sets).	0.0110239982605	19
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.0.0.9	search with cache (only 1: intros B C x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	2.82677793503	1189
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40	16.1.3.2.1.0	search with cache (only 1: intros X Y x H'; only 1: elim H'; only 1: intro H'1; only 1: elim H'1; only 1: auto with sets; only 1: intuition).	9.18938708305	29282
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.10.1.5.2	search with cache (only 1: intros A x y H'; only 1: split; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	24.5375649929	19110
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.1.0.0.1.0.1.2.0.0.7	search with cache (only 1: unfold Add; only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	4.84261393547	16844
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	37.13.4	search with cache (only 1: intro H; only 1: apply Singleton_inv; only 1: auto  10 with sets).	1.94444012642	7000
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0119910240173	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.4	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0212500095367	15
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0113739967346	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.0120968818665	1
Coq.Sets.Powerset_facts.Union_associative	40	17.10.3.21	search with cache (only 1: intro x; only 1: intros y H'1; only 1: apply Singleton_inv; only 1: auto  10 with sets).	9.50473690033	19400
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0125920772552	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0140850543976	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.306082010269	743
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.0.0.0.5.2.0.0.0.0.4.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	7.39232611656	21281
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	6.11.1.0	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: intros B C H'; only 1: auto  9 with sets).	14.8764600754	18514
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.1.0.1.1.0.0.9.7.2	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	4.54307293892	9378
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.14.7.1.1.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intro H'4; only 1: destruct 1; only 1: auto with sets).	3.10524296761	9545
Coq.Sets.Powerset_facts.incl_add	40	0.0.1.0.6.2.1.0.7	search with cache (only 1: red; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: intros x0 H'0; only 1: intros x y; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	6.17828798294	7709
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	3.0.0.6	search with cache (only 1: intro x; only 1: intros; only 1: unfold Add; only 1: auto  9 with sets).	0.474132061005	572
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	2.0	search with cache (only 1: intro X; only 1: auto with sets).	0.00596809387207	4
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.00676298141479	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.00754618644714	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.3.8.0.0.8	search with cache (only 1: intros A B; only 1: apply Extensionality_Ensembles; only 1: split; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.905742168427	1827
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0132200717926	9
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.2.1.3.0.0.0.2.0.8	search with cache (only 1: intros a b; only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: red; only 1: exfalso; only 1: auto using Noone_in_empty with sets; only 1: intros x H1; only 1: inversion_clear H1).	5.79920291901	11780
Coq.Sets.Constructive_sets.Extension	40	0.4.0.4.10.0.8	search with cache (only 1: inversion 1; only 1: destruct H; only 1: repeat split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).	0.820297002792	7980
Coq.Sets.Constructive_sets.Noone_in_empty	40	4.2.2.0	search with cache (only 1: intros; only 1: unfold not; only 1: intro H1; only 1: elim H1).	0.0258150100708	176
Coq.Sets.Constructive_sets.Included_Empty	40	5	search with cache (only 1: induction 1).	0.0079460144043	6
Coq.Sets.Constructive_sets.Add_intro1	40	0.40.0	search with cache (only 1: intros x H; only 1: constructor; only 1: auto with sets).	0.962835073471	9870
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00627708435059	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.17.35.0	search with cache (only 1: unfold Add at 1; only 1: intros H ?; only 1: exists x; only 1: auto with sets).	0.656956911087	9436
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	0.1.8.10.18.8	search with cache (only 1: intros; only 1: intro z; only 1: subst; only 1: destruct H; only 1: elim (Noone_in_empty x); only 1: auto with sets).	0.867981910706	9672
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.3.1.0.56.3.7	search with cache (only 1: red; only 1: unfold Add at 1; only 1: intro p; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto with sets).	13.6359372139	191039
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	8.0.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0392589569092	218
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.00807499885559	4
Coq.Sets.Constructive_sets.Union_inv	40	0.0.28	search with cache (only 1: inversion 1; only 1: auto with sets; only 1: auto with sets).	0.564329862595	2823
Coq.Sets.Constructive_sets.Add_inv	40	3.10.3.17.3	search with cache (only 1: intros x y H'; only 1: destruct 1; only 1: auto with sets; only 1: destruct H; only 1: auto with sets).	10.9198009968	50061
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0	search with cache (only 1: destruct 1; only 1: auto with sets).	0.00815892219543	2
Coq.Sets.Constructive_sets.Couple_inv	40	0.2.0.1.3.0	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.0503389835358	272
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00697183609009	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0.0	search with cache (only 1: intros x H'0; only 1: red; only 1: auto with sets).	0.00680208206177	4
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.10.3	search with cache (only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.100453853607	732
Coq.Sets.Finite_sets_facts.finite_cardinal	40	1.12.39	search with cache (only 1: intro HnotA; only 1: fix gcd_greatest 1; only 1: auto with sets).	2.0139670372	7855
Coq.Sets.Finite_sets_facts.cardinal_finite	40	1.1.3.4.2.2.4.26	search with cache (only 1: intros A; only 1: intros x0 H'0; only 1: generalize H'0; only 1: generalize H'0; only 1: intros H'1 H'2; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	3.5668888092	11998
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.5.8	search with cache (only 1: intuition; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	0.0432138442993	140
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40	0.3	search with cache (only 1: inversion 1; only 1: trivial with sets).	0.0216290950775	19
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40	11.0.2.1.0.0.6.0.4	search with cache (only 1: intros x H'0; only 1: red; only 1: intros a; only 1: red; only 1: intro H'3; only 1: elim H'0; only 1: elim H'3; only 1: induction 1; only 1: auto with arith).	10.1160199642	49856
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40	0.24.9	search with cache (only 1: intros x0 H'0; only 1: fix gcd_greatest 1; only 1: auto with sets).	7.52880001068	40838
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	4.1.0.1.4	search with cache (only 1: intros x H'0; only 1: destruct 1; only 1: auto; only 1: exists x; only 1: auto using Add_intro2 with sets).	0.0535409450531	219