
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	57.0.48.10	synth with cache (only 1: intros x y H; only 1: intro; only 1: apply H; only 1: now subst).	10.9336428642	59973
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0761890411377	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0219769477844	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	12.1.7	synth with cache (only 1: intro; only 1: intro; only 1: ring).	0.200884819031	413
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0217649936676	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0248970985413	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	6.0.1.1.0.3.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: left; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: auto).	6.80093789101	5019
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	0.2.2.1	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0447778701782	30
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.2.3.0.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.316322088242	115
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.1	synth with cache (only 1: intros x IH Hx; only 1: now subst).	0.0230369567871	3
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	4.0	synth with cache (only 1: intros; only 1: Z.order).	0.061989068985	24
Coq.micromega.Ztac.elim_concl_lt	40	4.0	synth with cache (only 1: intros; only 1: Z.order).	0.0883328914642	50
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	1.1	synth with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.018138885498	4
Coq.micromega.Ztac.mul_le	40	13.5	synth with cache (only 1: intros x IH Hx; only 1: Z.order_pos).	1.54046702385	2034
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.0832889080048	2
Coq.micromega.ZifyInst.PropArrow	40	0.1	synth with cache (only 1: constructor; only 1: tauto).	0.0338680744171	3
Coq.micromega.ZifyInst.PropIff	40	0.0	synth with cache (only 1: constructor; only 1: tauto).	0.0558881759644	2
Coq.micromega.ZifyInst.PropNot	40	28.3.0	synth with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.935639858246	2174
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.6.0.45	synth with cache (only 1: destruct x; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	1.85942196846	4706
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	4.4.4.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: intuition subst; try ring; auto with real; only 1: auto with real).	0.672404050827	606
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.2.1.0	synth with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.0920100212097	18
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.0	synth with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.141512155533	18
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.0.1.0.21.2.2.1.0.3	synth with cache (only 1: split; only 1: intro; only 1: split; only 1: Z.order; only 1: Z.order; only 1: destruct x; only 1: intros; only 1: trivial; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	18.5154180527	52963
Coq.micromega.ZMicromega.lt_le_iff	40	1.1.0.1.0.3.1.3.3.2.3.7	synth with cache (only 1: destruct x; only 1: split; only 1: apply Zlt_left; only 1: now destruct 1; only 1: split; only 1: intros Hn Hm; only 1: assert (EQ : 0 <= Z.pred (Z.pos p)) by now apply Z.lt_le_pred; only 1: easy; only 1: intros Hz; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r).	19.3651590347	25857
Coq.micromega.ZMicromega.le_0_iff	40	4.0	synth with cache (only 1: intros; only 1: now rewrite Z.le_0_sub).	0.0128619670868	6
Coq.micromega.ZMicromega.le_neg	40	13.0.10.14.0.2.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: rewrite ?Z.opp_pos_neg; only 1: intros; only 1: Z.order).	21.6744551659	45915
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.7.0	synth with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0116729736328	10
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0381050109863	7
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.0158770084381	4
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40	4.1.3.0.0.0	synth with cache (only 1: unfold agree_env; only 1: intros; only 1: apply H; only 1: apply Pos.add_le_mono; only 1: eauto; only 1: apply Pos.le_refl).	0.664546966553	567
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	1.0.1.25.1.11.14.0	synth with cache (only 1: intros x y; only 1: split; only 1: destruct x; only 1: intuition congruence; only 1: destruct y; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	13.9223301411	18692
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	0.0.0.6.12.14	synth with cache (only 1: destruct x; only 1: compute; only 1: split; only 1: congruence; only 1: congruence; only 1: auto with zarith).	2.05830812454	3752
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	0.0.1.9	synth with cache (only 1: destruct x; only 1: intuition try easy; only 1: intuition try easy; only 1: intuition try easy).	0.247809171677	162
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40	0.0.0.26.14.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: simpl in *; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: f_equal).	9.66509985924	23886
Coq.micromega.Env.S.jump_succ	40	1.0.0.28.16.1	synth with cache (only 1: rewrite <- ?jump_add; only 1: simpl in *; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: f_equal).	11.7176058292	29037
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0237371921539	3
Coq.micromega.Env.S.nth_pred_double	40	0.0.0	synth with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0252251625061	3
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	4.0	synth with cache (only 1: intros Q H H'; only 1: now induction l).	0.0636019706726	38
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.0.14.7	synth with cache (only 1: intros H; only 1: intros [| ]; only 1: congruence; only 1: congruence).	0.367480039597	582
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.0127859115601	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.0125811100006	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	6.0.20	synth with cache (only 1: intros [| ]; only 1: reflexivity; only 1: now simpl).	0.735450029373	1384
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	2.0.0.1.8.0	synth with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.396549940109	339
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	4.4.0.11.1.2.11	synth with cache (only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	18.7242159843	33905
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.0.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: reflexivity).	0.32605099678	141
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0335187911987	3
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	93	synth with cache (only 1: firstorder).	11.1582419872	23664
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	1.0.0.0.0.0.4.11.1.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: unfold eval_clause; only 1: generalize nil as acc; only 1: simpl; only 1: induction f; only 1: intros; only 1: simpl; only 1: tauto; only 1: tauto).	33.7738440037	12781
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.252924203873	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	2	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0164620876312	3
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	3	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0177850723267	4
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	4	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0183999538422	5
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	3.34	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.875380039215	888
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40	1.0.10.0.0	synth with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.993387937546	383
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	4.87937903404	1362
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.1.0.0.0.0.0.4.0.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	4.82112693787	1816
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0517530441284	4
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0597908496857	5
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	3.0.7.3.1.7	synth with cache (only 1: induction M; only 1: simpl; only 1: rsimpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl).	1.53582906723	966
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	38.13.3.0	synth with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	17.8179528713	18278
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	39.15.4.0	synth with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	22.0232729912	21998
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	3.12.1.1	synth with cache (only 1: induction l as [| x xs Hrec]; only 1: constructor; only 1: simpl; only 1: trivial).	0.662521839142	1038
Coq.micromega.Refl.make_impl_map	40	15.0.0.9	synth with cache (only 1: induction l; only 1: simpl; only 1: firstorder; only 1: firstorder).	3.16602110863	3939
Coq.micromega.Refl.make_conj_cons	40	3.0.3.1.0.0.1.8.2.2	synth with cache (only 1: intros Q H H'; only 1: simpl; only 1: destruct l as [| x xs]; only 1: split; only 1: simpl; only 1: intro; only 1: firstorder; only 1: intros (N, IN); only 1: auto; only 1: reflexivity).	13.1363508701	24786
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	0.2.0.4.0	synth with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: split; only 1: tauto; only 1: firstorder).	0.473175048828	125
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.10.2	synth with cache (only 1: intros; only 1: rewrite Rinv_1; only 1: auto with real).	0.54336309433	200
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	1.2.0.1	synth with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qden, Qnum; only 1: rewrite RIneq.Rinv_1; only 1: reflexivity).	0.037132024765	8
Coq.micromega.RMicromega.Q2R_1	40	10	synth with cache (only 1: apply RIneq.Rinv_1).	0.1492228508	21
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	3.3.11	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	1.18955397606	708
Coq.rtauto.Bintree.map_app	40	4.10.20	synth with cache (only 1: intros LE p Hp1 Hp2; only 1: fix sqrtrem_spec 1; only 1: contradiction || auto).	1.43872690201	3566
Coq.rtauto.Bintree.length_map	40	6.0.0.0	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: contradiction || auto).	0.0280249118805	13
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	0.1.0.8.0.0.4.2	synth with cache (only 1: induction l; only 1: induction i; only 1: trivial; only 1: trivial; only 1: induction i; only 1: trivial; only 1: simpl; only 1: auto).	3.52069401741	3987
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.3.3	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0413460731506	35
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	0.0.0.5	synth with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0285799503326	9
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.0.4.6.10	synth with cache (only 1: unfold empty, index, get, contents; only 1: unfold index, get, push; only 1: intros a S; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	0.746056079865	1138
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40
Coq.rtauto.Rtauto.with_env.compose1	40
Coq.rtauto.Rtauto.with_env.compose2	40	0.0.8.2.1.1.2.0	synth with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intro i; only 1: apply IHF; only 1: auto).	7.25553488731	9929
Coq.rtauto.Rtauto.with_env.compose3	40	0.0.7.1.0.3.0	synth with cache (only 1: induction F; only 1: auto; only 1: intros A B C H; only 1: simpl; only 1: intro i; only 1: apply IHF; only 1: auto).	3.71014904976	4094
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	0.2.0	synth with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.166280031204	5
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	9.1	synth with cache (only 1: intros; only 1: tauto).	0.573443889618	88
Coq.nsatz.Nsatz.nsatz1.Rext	40
Coq.nsatz.Nsatz.nsatz1.Rset	40	0.0.1.3.0.2.1.0.0.1.0.2.1.3.1.0	synth with cache (only 1: constructor; only 1: intro; only 1: cring; only 1: intro; only 1: intros; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: cring; only 1: intro; only 1: intros; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: cring; only 1: cring).	29.1851191521	5420
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.4.0.0.3.9.3.3.114	synth with cache (only 1: split; only 1: auto with real; only 1: auto with real; only 1: intros eps H9; only 1: intros F1 H1; only 1: intro; only 1: rewrite H1; only 1: elim H; only 1: ring).	2.02640509605	12974
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	synth with cache (only 1: Lra.lra).	0.0302288532257	1
Coq.nsatz.Nsatz.Rcri	40	13.0.1.2.12	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: auto with real).	1.27122712135	2096
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	synth with cache (only 1: auto with *).	0.0543529987335	1
Coq.nsatz.Nsatz.Zcri	40	1	synth with cache (only 1: auto with *).	0.0354859828949	14
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3.1.1	synth with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: now Z.nzsimpl).	0.860603809357	45
Coq.omega.OmegaLemmas.Zred_factor4	40	0.1	synth with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.0774149894714	3
Coq.omega.OmegaLemmas.Zred_factor5	40	3.1.1.1	synth with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: now Z.nzsimpl).	0.0789170265198	12
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now Z.nzsimpl).	0.154527902603	1
Coq.omega.OmegaLemmas.new_var	40	2.1.0	synth with cache (only 1: intros; only 1: exists x; only 1: now Z.nzsimpl).	0.0363738536835	6
Coq.omega.OmegaLemmas.OMEGA1	40	1.0	synth with cache (only 1: intros; only 1: Z.order).	0.0196931362152	3
Coq.omega.OmegaLemmas.OMEGA2	40	1.0	synth with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.017541885376	3
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	26.1	synth with cache (only 1: intros Hx Hxy; only 1: now subst).	3.87099599838	1860
Coq.omega.OmegaLemmas.OMEGA6	40	1.1.9.0.29.3.2	synth with cache (only 1: intros LT -> EQ; only 1: revert LT; only 1: unfold Z.le, BinNat.N.le; only 1: intros; only 1: destruct EQ; only 1: revert LT; only 1: now Z.nzsimpl).	18.1411640644	12954
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.5.1	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.154653072357	27
Coq.omega.OmegaLemmas.OMEGA12	40	2.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.03302693367	4
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.137158155441	13
Coq.omega.OmegaLemmas.OMEGA15	40	1.0.1.5	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.735594034195	80
Coq.omega.OmegaLemmas.OMEGA16	40	8.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0593829154968	10
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0635180473328	2
Coq.omega.OmegaLemmas.OMEGA18	40	0.0.3.0	synth with cache (only 1: unfold Zne, not; only 1: intros; only 1: subst; only 1: now Z.nzsimpl).	0.351912021637	22
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0729389190674	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: trivial).	0.0306930541992	6
Coq.omega.PreOmega.Z.rem_0_r_ext	40	1.0.0.11.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.66042304039	825
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.0.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: trivial).	0.0308799743652	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	26.73.3	synth with cache (only 1: intros; only 1: revert H0; only 1: apply H).	37.8383579254	284633
Coq.btauto.Algebra.Decidable_complete	40	1.18.0	synth with cache (only 1: intros P H Hp; only 1: apply H; only 1: assumption).	1.28362298012	1242
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.0488538742065	9
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.1.0.5	synth with cache (only 1: intros; only 1: induction H; only 1: simpl in *; only 1: tauto).	0.714695930481	45
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40	8.0.0.0.7.0	synth with cache (only 1: intros; only 1: induction p; only 1: simpl in *; only 1: first [ intuition congruence | auto ]; only 1: simpl in *; only 1: congruence).	2.81129384041	2566
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	1.0	synth with cache (only 1: intros i p var; only 1: auto).	0.0226578712463	3
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	2.3	synth with cache (only 1: intros; only 1: auto with arith).	0.0225460529327	7
Coq.funind.Recdef.Splus_lt	40	5	synth with cache (only 1: auto with arith).	0.0224947929382	6
Coq.funind.Recdef.SSplus_lt	40	2.0.8.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_neq; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).	0.924997091293	726
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0247738361359	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	2.6	synth with cache (only 1: red; only 1: now Z.nzsimpl).	0.0659129619598	10
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	7	synth with cache (only 1: assumption).	0.0193068981171	8
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0156509876251	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	0.0.3.0.0.0.0.0.2	synth with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	18.692412138	676
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	15.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	2.33353590965	698
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.03877210617	43
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40	0.2.33.11.29.2	synth with cache (only 1: intros x y H; only 1: destruct x; only 1: auto; only 1: destruct y; only 1: trivial; only 1: trivial).	5.11938309669	35634
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	7	synth with cache (only 1: trivial).	0.0279998779297	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	8	synth with cache (only 1: eauto).	0.0651819705963	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	28	synth with cache (only 1: eauto).	1.43449616432	890
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	1.0.2.0.2.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).	1.14179778099	130
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.124746799469	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.124985933304	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	6.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.131810903549	10
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.2.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	0.163900136948	10
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	3.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.119299173355	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.2.3.0	synth with cache (only 1: destruct l1; only 1: trivial; only 1: destruct 1; only 1: trivial).	1.68053913116	66
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	0.0	synth with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.150167942047	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	1	synth with cache (only 1: now destruct 1).	0.0859959125519	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	1.18.2.14.1.14.1.14.1.14.188	synth with cache (only 1: split; only 1: intro; only 1: trivial; only 1: intro; only 1: intros; only 1: destruct H; only 1: trivial; only 1: intro; only 1: intros; only 1: subst; only 1: trivial).	37.4453911781	99135
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	8.8.8.0.1.1	synth with cache (only 1: intros x y H7; only 1: induction x; only 1: intros; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	7.11850905418	8507
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	1.11.0	synth with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.900499105453	379
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.4.0.0.3.9.3.3.114	synth with cache (only 1: split; only 1: auto with real; only 1: auto with real; only 1: intros eps H9; only 1: intros F1 H1; only 1: intro; only 1: rewrite H1; only 1: elim H; only 1: ring).	2.44341802597	12974
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	13.0.1.2.11	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: intros; only 1: auto with real).	1.46075415611	2045
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: Lra.lra).	0.0310251712799	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	2	synth with cache (only 1: reflexivity).	0.0141282081604	3
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	59	synth with cache (only 1: now repeat split).	0.293224096298	1785
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	35.3.3.3.3.3.3.13	synth with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	30.8101799488	100121
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	36.0.32.25.24	synth with cache (only 1: repeat split; only 1: now repeat split; only 1: intros a b; only 1: intros; only 1: now destruct H).	18.0586690903	108074
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	0.0.18	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	0.150516033173	187
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.0	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0805501937866	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	58.17	synth with cache (only 1: intros; only 1: trivial).	7.79019784927	25617
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.0.2.2.5	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.218017101288	132
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	7	synth with cache (only 1: solve_proper).	0.014545917511	8
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0127189159393	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.012720823288	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	19	synth with cache (only 1: trivial).	0.990056037903	710
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0253491401672	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.0272920131683	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0177299976349	1
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	1.8.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.670001029968	266
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0185170173645	1
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0212800502777	3
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0168249607086	2
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0183231830597	3
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0167407989502	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0178270339966	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.127478837967	10
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	2.0.7	synth with cache (only 1: induction x; only 1: norm; only 1: norm).	0.128154039383	71
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0220620632172	2
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.023904800415	3
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	2	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0217900276184	3
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0242409706116	4
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40	0.0.0.135	synth with cache (only 1: repeat split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	38.383562088	9755
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	28	synth with cache (only 1: let rec Esimpl3 := let rec Esimpl2 := let rec Esimpl := let rec rsimpl := repeat gen_rewrite || rewrite phiCR_comm in repeat progress match goal with | |- context [ @Pphi ?l ?P ] => match P with | P0 => rewrite (Pphi0 (C:=l)) | P1 => rewrite (Pphi1 (C:=l)) | @mkPX ?P ?i ?n ?Q => rewrite (@mkPX_ok l P i n Q) end | |- context [ [?c] ] => match c with | 0 => rewrite ring_morphism0 | 1 => rewrite ring_morphism1 | ?x + ?y => rewrite ring_morphism_add | ?x * ?y => rewrite ring_morphism_mul | ?x - ?y => rewrite ring_morphism_sub | - ?x => rewrite ring_morphism_opp end end; simpl; rsimpl in Esimpl; repeat progress match goal with | |- context [ @Pphi ?l (@PaddCl ?c ?P) ] => rewrite (@PaddCl_ok c P l) | |- context [ @Pphi ?l (@PmulC ?P ?c) ] => rewrite (@PmulC_ok c P l) | |- context [ @Pphi ?l (@Popp ?P) ] => rewrite (@Popp_ok P l) end; Esimpl in repeat match goal with | |- context [ @Pphi ?l (@Padd ?P1 ?P2) ] => rewrite (@Padd_ok P1 P2 l) | |- context [ @Pphi ?l (@Psub ?P1 ?P2) ] => rewrite (@Psub_ok P1 P2 l) end; try Esimpl2; try reflexivity; try apply ring_add_comm in now Esimpl3).	2.78458714485	390
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	35.3.8.23	synth with cache (only 1: intros n; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	21.7547540665	10859
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	2	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0147569179535	3
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	3	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0163581371307	4
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	4	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0168302059174	5
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	3.23	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.733850955963	493
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.1	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	1.54533410072	514
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	13.4	synth with cache (only 1: unfold Pequiv; only 1: solve_proper).	2.34698486328	627
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	4.73869800568	1269
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	1.1.0.0.0.0.0.3.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	4.72949814796	2161
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.0.1.2.0.0.0.0.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: Esimpl).	6.21138906479	797
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	2	synth with cache (only 1: reflexivity).	0.0149400234222	3
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.1.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0397441387177	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.2.1.6.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.53303694725	178
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.0.0.1.7	synth with cache (only 1: intros x y H7; only 1: apply Zsth; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	0.392182826996	174
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	4.35.3	synth with cache (only 1: intros p Hp; only 1: rewrite Qmult_comm; only 1: apply Q_Setoid).	5.39659285545	5657
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0171098709106	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	synth with cache (only 1: tauto).	0.00736808776855	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	synth with cache (only 1: unlock; only 1: discriminate).	0.0286769866943	14
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	synth with cache (only 1: by case : k ).	0.00926685333252	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	3.13.0	synth with cache (only 1: intro; only 1: destruct H; only 1: trivial).	0.271954059601	1172
Coq.ssr.ssreflect.ApplyIff.iffLR	40	1	synth with cache (only 1: tauto).	0.0100610256195	2
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	synth with cache (only 1: by case : eqPQ ).	0.00897598266602	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	5.4	synth with cache (only 1: destr_bool; only 1: intuition).	0.0544970035553	34
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0100119113922	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0111889839172	1
Coq.ssr.ssrbool.is_true_true	40	7	synth with cache (only 1: reflexivity).	0.00580406188965	8
Coq.ssr.ssrbool.not_false_is_true	40	0	synth with cache (only 1: discriminate).	0.00513696670532	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	synth with cache (only 1: unlock; only 1: by [  ]).	0.00684785842896	2
Coq.ssr.ssrbool.negbT	40	0	synth with cache (only 1: Bool.destr_bool).	0.00664401054382	1
Coq.ssr.ssrbool.negbTE	40	0	synth with cache (only 1: by case : b ).	0.00710511207581	1
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.00738191604614	1
Coq.ssr.ssrbool.negbFE	40	0	synth with cache (only 1: by case : b ).	0.00746393203735	1
Coq.ssr.ssrbool.negbK	40	2	synth with cache (only 1: by case).	0.00663900375366	3
Coq.ssr.ssrbool.negbNE	40	0	synth with cache (only 1: by case : b ).	0.00623512268066	1
Coq.ssr.ssrbool.negb_inj	40	0.44	synth with cache (only 1: red; only 1: Bool.destr_bool).	0.578438043594	1543
Coq.ssr.ssrbool.negbLR	40	4	synth with cache (only 1: Bool.destr_bool).	0.0160579681396	5
Coq.ssr.ssrbool.negbRL	40	5	synth with cache (only 1: Bool.destr_bool).	0.0154168605804	6
Coq.ssr.ssrbool.contra	40	0.0.0.0.2	synth with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0123128890991	7
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.00932908058167	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.00973796844482	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.00978112220764	1
Coq.ssr.ssrbool.contraT	40	5.7	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.173580884933	80
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.00853705406189	1
Coq.ssr.ssrbool.contraFT	40	2.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.211898088455	36
Coq.ssr.ssrbool.contraFN	40	2.9	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.288604974747	49
Coq.ssr.ssrbool.contraTF	40	0.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0865910053253	10
Coq.ssr.ssrbool.contraNF	40	0.11	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.274541854858	46
Coq.ssr.ssrbool.contraFF	40	0.1.34.12	synth with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: intuition; only 1: intuition).	3.72726202011	6042
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0129809379578	1
Coq.ssr.ssrbool.BoolIf.ifT	40	0	synth with cache (only 1: by case : b ).	0.0144379138947	1
Coq.ssr.ssrbool.BoolIf.ifF	40	0	synth with cache (only 1: by move ->).	0.011283159256	1
Coq.ssr.ssrbool.BoolIf.ifN	40	1	synth with cache (only 1: by case : b ).	0.0148208141327	2
Coq.ssr.ssrbool.BoolIf.if_same	40	0	synth with cache (only 1: by case  def_b: b ; constructor).	0.0125279426575	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	0	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0711190700531	1
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0127010345459	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.0121250152588	1
Coq.ssr.ssrbool.BoolIf.ifE	40	15	synth with cache (only 1: intuition).	0.234649896622	91
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0172300338745	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	synth with cache (only 1: by case c; case Hb).	0.0170228481293	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.0115699768066	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.32	synth with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	26.6830148697	592
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.22	synth with cache (only 1: destruct 1; only 1: by case : Pb ; constructor; auto).	0.266665935516	255
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	9	synth with cache (only 1: by case : Pb ; constructor; auto).	0.0254409313202	10
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	2.73	synth with cache (only 1: induction 1; only 1: by [  ]).	1.33874607086	5106
Coq.ssr.ssrbool.impliesPn	40	5.26.6	synth with cache (only 1: red; only 1: destruct 1; only 1: tauto).	1.648042202	3617
Coq.ssr.ssrbool.unlessL	40	22.84.108	synth with cache (only 1: constructor; only 1: intros n m; only 1: intuition).	6.31211709976	34532
Coq.ssr.ssrbool.unlessR	40	22.85.109	synth with cache (only 1: constructor; only 1: intros n m; only 1: intuition).	6.37355685234	35026
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	53	synth with cache (only 1: by move  =>b b' ->).	1.15557909012	4347
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0168972015381	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0195820331573	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0226690769196	1
Coq.ssr.ssrbool.pair_andP	40	0	synth with cache (only 1: intuition).	0.0161151885986	1
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.0110070705414	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0111420154572	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.013622045517	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.0110321044922	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	synth with cache (only 1: by case b1; constructor; auto).	0.0118610858917	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0179629325867	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0177209377289	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0125691890717	1
Coq.ssr.ssrbool.andTb	40	14	synth with cache (only 1: by [  ]).	0.0287871360779	75
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.00982904434204	1
Coq.ssr.ssrbool.andbT	40	73	synth with cache (only 1: case  =>// undecP).	0.748167037964	2730
Coq.ssr.ssrbool.andbF	40	1	synth with cache (only 1: by case).	0.0126428604126	2
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.0105130672455	1
Coq.ssr.ssrbool.andbC	40	0.0.70	synth with cache (only 1: case  =>// undecP; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.81445813179	2657
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.0113160610199	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.0133368968964	1
Coq.ssr.ssrbool.andbAC	40	1	synth with cache (only 1: by do 3!case).	0.0210320949554	2
Coq.ssr.ssrbool.andbACA	40	6	synth with cache (only 1: by do 3!case).	0.0254731178284	7
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: reflexivity).	0.00975894927979	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by [  ]).	0.0101220607758	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: Bool.destr_bool).	0.0132920742035	3
Coq.ssr.ssrbool.orbF	40	0	synth with cache (only 1: by case).	0.0108370780945	1
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0106279850006	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.0125510692596	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.0170691013336	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.017009973526	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0169970989227	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.0241401195526	1
Coq.ssr.ssrbool.andbN	40	0	synth with cache (only 1: by case : b ).	0.0117661952972	1
Coq.ssr.ssrbool.andNb	40	0	synth with cache (only 1: by case : b ).	0.0119390487671	1
Coq.ssr.ssrbool.orbN	40	0	synth with cache (only 1: by case : b ).	0.0118379592896	1
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.0116288661957	1
Coq.ssr.ssrbool.andb_orl	40	5	synth with cache (only 1: by do 3!case).	0.0261740684509	6
Coq.ssr.ssrbool.andb_orr	40	0	synth with cache (only 1: by do 3!case).	0.017333984375	1
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.0156791210175	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0185868740082	1
Coq.ssr.ssrbool.andb_idl	40	3.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.423755884171	171
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0179479122162	1
Coq.ssr.ssrbool.andb_id2l	40	9	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0273089408875	10
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0249481201172	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0178320407867	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0177848339081	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0251760482788	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.025062084198	1
Coq.ssr.ssrbool.negb_and	40	1	synth with cache (only 1: Bool.destr_bool).	0.0133740901947	2
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0141479969025	1
Coq.ssr.ssrbool.andbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0136849880219	1
Coq.ssr.ssrbool.andKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0138559341431	1
Coq.ssr.ssrbool.orbK	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0137989521027	1
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0136389732361	1
Coq.ssr.ssrbool.implybT	40	0	synth with cache (only 1: by case : b ).	0.0110030174255	1
Coq.ssr.ssrbool.implybF	40	1	synth with cache (only 1: by case : b ).	0.0118691921234	2
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0110230445862	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: by case : b ).	0.0115439891815	1
Coq.ssr.ssrbool.implybb	40	1	synth with cache (only 1: by case : b ).	0.0129799842834	2
Coq.ssr.ssrbool.negb_imply	40	2	synth with cache (only 1: by case : a ; case : b ).	0.0198540687561	3
Coq.ssr.ssrbool.implybE	40	2	synth with cache (only 1: by case : a ; case : b ).	0.019572019577	3
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0140430927277	1
Coq.ssr.ssrbool.implybN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0137629508972	1
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.013839006424	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0176219940186	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.0178799629211	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0248939990997	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.00986409187317	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0107369422913	1
Coq.ssr.ssrbool.addbb	40	1	synth with cache (only 1: by case).	0.0128128528595	2
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.0126159191132	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0171060562134	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.0170199871063	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.0170850753784	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.0250291824341	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.0173330307007	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.0173859596252	1
Coq.ssr.ssrbool.addKb	40	1	synth with cache (only 1: by do 2!case).	0.0149569511414	2
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0129461288452	1
Coq.ssr.ssrbool.addIb	40	2	synth with cache (only 1: by do 3!case).	0.0222079753876	3
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	0.0195879936218	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: by case : b ).	0.0115988254547	1
Coq.ssr.ssrbool.addbT	40	1	synth with cache (only 1: by case : b ).	0.0136079788208	2
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0140161514282	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.0141150951385	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.46	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: intuition; only 1: now constructor; only 1: now constructor).	1.54167985916	1291
Coq.ssr.ssrbool.subrelUl	40	6.1.7.93	synth with cache (only 1: red; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	8.44961690903	41336
Coq.ssr.ssrbool.subrelUr	40	6.2.8.94	synth with cache (only 1: red; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	8.82397294044	42654
Coq.ssr.ssrbool.sub_refl	40	4.16	synth with cache (only 1: intro x; only 1: intuition).	0.103223085403	218
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	synth with cache (only 1: by case : pT pp ).	0.0126540660858	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	synth with cache (only 1: by case : msp  => _ /= ->).	0.0129489898682	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	3	synth with cache (only 1: by rewrite -mem_topred).	0.0122790336609	4
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0	synth with cache (only 1: by [  ]).	0.00995492935181	1
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	1	synth with cache (only 1: by [  ]).	0.0104701519012	2
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	synth with cache (only 1: by rewrite -mem_topred).	0.0121591091156	1
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	6	synth with cache (only 1: by [  ]).	0.0122849941254	7
Coq.ssr.ssrbool.LocalGlobal.in1W	40	2.45	synth with cache (only 1: intros; only 1: by rewrite -mem_topred).	0.803158044815	1183
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.012323141098	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0128209590912	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	12	synth with cache (only 1: auto).	0.0573399066925	46
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0189900398254	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0137360095978	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0121347904205	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0165998935699	2
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	2	synth with cache (only 1: by move  =>? ?; auto).	0.0203750133514	3
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	0.0127642154694	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	0.0130519866943	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0134282112122	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0185699462891	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0133228302002	1
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0138471126556	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.019455909729	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0159029960632	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	3	synth with cache (only 1: by move  =>? ?; auto).	0.0266981124878	4
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	11.15.15	synth with cache (only 1: intros; only 1: subst; only 1: auto).	1.29215288162	1879
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0209920406342	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0155720710754	1
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0164139270782	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0166249275208	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0216970443726	2
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0203859806061	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.104	synth with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	6.71104097366	12878
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0246608257294	1
Coq.ssr.ssrbool.sub_in2	40	0.19.2	synth with cache (only 1: intros; only 1: intro x; only 1: auto).	0.52787399292	696
Coq.ssr.ssrbool.sub_in3	40	15.5	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	0.589016914368	415
Coq.ssr.ssrbool.sub_in12	40	9.4	synth with cache (only 1: intros; only 1: by move  =>? ?; auto).	0.37576508522	140
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0149610042572	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	40	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	1.13045620918	1600
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0114719867706	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0141470432281	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	13	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.093652009964	60
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0238258838654	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	synth with cache (only 1: tauto).	0.00462293624878	1
Coq.ssr.ssrfun.unitE	40	3.38.11	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	1.09302306175	5522
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.11	synth with cache (only 1: intro H; only 1: trivial).	0.0216841697693	46
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.7	synth with cache (only 1: intro H; only 1: by [  ]).	0.0157160758972	9
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	0.35.8.30	synth with cache (only 1: intros n m; only 1: intro H; only 1: elim m; only 1: trivial).	12.2274739742	43864
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	synth with cache (only 1: by [  ]).	0.00951600074768	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.0.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0186231136322	5
Coq.ssr.ssrfun.all_tag2	40	2	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0161888599396	3
Coq.ssr.ssrfun.Sig.svalP	40	3	synth with cache (only 1: apply proj2_sig).	0.00951910018921	4
Coq.ssr.ssrfun.Sig.s2valP	40	14	synth with cache (only 1: by case : u ).	0.0303318500519	75
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.0108480453491	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0126881599426	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0180552005768	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.0144259929657	2
Coq.ssr.ssrfun.Injections.canLR	40	2.6	synth with cache (only 1: intro H; only 1: by move ->).	0.018257856369	10
Coq.ssr.ssrfun.Injections.canRL	40	5.26.8.9	synth with cache (only 1: intro z; only 1: intro H; only 1: destruct H; only 1: auto).	2.4328751564	11422
Coq.ssr.ssrfun.Some_inj	40	1.8.19	synth with cache (only 1: inversion 1; only 1: subst; only 1: trivial).	0.589578866959	925
Coq.ssr.ssrfun.of_voidK	40	26.12	synth with cache (only 1: intro x; only 1: intuition).	0.419058084488	1148
Coq.ssr.ssrfun.esymK	40	0.3.14	synth with cache (only 1: intro p; only 1: subst; only 1: reflexivity).	0.0842649936676	176
Coq.ssr.ssrfun.etrans_id	40	1.27	synth with cache (only 1: subst; only 1: intuition).	0.175705909729	421
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	1	synth with cache (only 1: by move  =>x y []).	0.0110440254211	2
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	10.31	synth with cache (only 1: red; only 1: auto).	0.901780128479	1623
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	7.28	synth with cache (only 1: red; only 1: auto).	0.681465864182	1168
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	15.10.33	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	2.81259012222	6599
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40	3.3.38	synth with cache (only 1: exists f; only 1: trivial; only 1: trivial).	0.386152029037	1117
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	2.1	synth with cache (only 1: intros; only 1: auto).	0.0103311538696	5
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: now trivial).	0.00803899765015	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	synth with cache (only 1: now trivial).	0.00826692581177	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	synth with cache (only 1: now trivial).	0.00792598724365	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	synth with cache (only 1: now unfold Over_rel).	0.00815200805664	1
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	8.2.24.0	synth with cache (only 1: intros m n v1; only 1: intros H v; only 1: induction v; only 1: now simpl).	32.8199698925	60113
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.6	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.519248008728	157
Coq.Vectors.VectorSpec.const_nth	40	1.1.1.4	synth with cache (only 1: induction p; only 1: now split; only 1: generalize dependent n; only 1: now simpl).	0.0449521541595	30
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	5.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0177428722382	8
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.045361995697	9
Coq.Vectors.VectorSpec.uncons_cons	40	1.0	synth with cache (only 1: intros; only 1: now simpl).	0.0170152187347	3
Coq.Vectors.VectorSpec.append_comm_cons	40	2.0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: reflexivity).	0.0249090194702	6
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	18.7.2.1.37	synth with cache (only 1: destruct n; only 1: auto; only 1: simpl; only 1: destruct (to_nat p); only 1: left).	11.4328200817	24824
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	4.8	synth with cache (only 1: intros p q r []; only 1: easy).	0.375519990921	468
Coq.Setoids.Setoid.Seq_refl	40	2	synth with cache (only 1: firstorder).	0.0114758014679	3
Coq.Setoids.Setoid.Seq_sym	40	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0133118629456	2
Coq.Setoids.Setoid.Seq_trans	40	4.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.131640911102	27
Coq.Setoids.Setoid.gen_st	40	3	synth with cache (only 1: simpl_relation).	0.0139651298523	4
Coq.Bool.IfProp.Iftrue_inv	40	1.0.2	synth with cache (only 1: destruct 1; only 1: intuition; only 1: discriminate).	0.0275869369507	26
Coq.Bool.IfProp.Iffalse_inv	40	1.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.022528886795	11
Coq.Bool.IfProp.IfProp_true	40	1.20.15	synth with cache (only 1: intro H; only 1: inversion 1; only 1: auto with bool).	6.96829891205	29354
Coq.Bool.IfProp.IfProp_false	40	0.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.01265001297	3
Coq.Bool.IfProp.IfProp_or	40	1.1.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: auto).	0.0124888420105	5
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	26.0	synth with cache (only 1: intros; only 1: now subst).	0.260159015656	731
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0207831859589	3
Coq.Bool.Zerob.zerob_false_intro	40	1.20.6.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now elim H; only 1: trivial with bool).	0.860803842545	2339
Coq.Bool.Zerob.zerob_false_elim	40	4.0.1.3	synth with cache (only 1: inversion 1; only 1: destruct n; only 1: auto with bool; only 1: inversion 1).	0.396266937256	275
Coq.Bool.DecBool.ifdec_left	40	6.8.27	synth with cache (only 1: destruct H; only 1: auto; only 1: contradiction).	5.62761807442	40800
Coq.Bool.DecBool.ifdec_right	40	0.6.0.0	synth with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.0680711269379	53
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.15.0	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0909070968628	326
Coq.Bool.Sumbool.bool_eq_rec	40	1.2.4	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.020644903183	26
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0126099586487	3
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0176908969879	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0156331062317	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	3	synth with cache (only 1: discriminate).	0.00671482086182	12
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00486016273499	1
Coq.Bool.Bool.eq_true_false_abs	40	2.19.0	synth with cache (only 1: intro H; only 1: inversion 1; only 1: discriminate).	0.239801883698	1160
Coq.Bool.Bool.not_true_is_false	40	2.6.0	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.0204010009766	45
Coq.Bool.Bool.not_false_is_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00767183303833	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.1.7.1	synth with cache (only 1: intro H; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.230756044388	436
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0102980136871	3
Coq.Bool.Bool.leb_implb	40	0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0256431102753	22
Coq.Bool.Bool.eqb_subst	40	0.1	synth with cache (only 1: intro H; only 1: destr_bool).	0.00880789756775	3
Coq.Bool.Bool.eqb_reflx	40	0	synth with cache (only 1: destr_bool).	0.00554895401001	1
Coq.Bool.Bool.eqb_prop	40	0	synth with cache (only 1: destr_bool).	0.00674891471863	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.013573884964	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0167889595032	6
Coq.Bool.Bool.negb_orb	40	0	synth with cache (only 1: destr_bool).	0.006756067276	1
Coq.Bool.Bool.negb_andb	40	0	synth with cache (only 1: destr_bool).	0.00661706924438	1
Coq.Bool.Bool.negb_involutive	40	2	synth with cache (only 1: destr_bool).	0.00622391700745	3
Coq.Bool.Bool.negb_involutive_reverse	40	0	synth with cache (only 1: destr_bool).	0.00552988052368	1
Coq.Bool.Bool.negb_sym	40	0	synth with cache (only 1: destr_bool).	0.00709009170532	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	synth with cache (only 1: destr_bool).	0.00595498085022	1
Coq.Bool.Bool.eqb_negb1	40	0	synth with cache (only 1: destr_bool).	0.00584411621094	1
Coq.Bool.Bool.eqb_negb2	40	0	synth with cache (only 1: destr_bool).	0.00571799278259	1
Coq.Bool.Bool.if_negb	40	0.0.0.0	synth with cache (only 1: intros; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: destr_bool; only 1: destr_bool).	0.00870013237	4
Coq.Bool.Bool.negb_true_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00959515571594	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00916004180908	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0169250965118	7
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.083172082901	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.012323141098	4
Coq.Bool.Bool.orb_prop	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0118191242218	5
Coq.Bool.Bool.orb_true_intro	40	2.2.1.0	synth with cache (only 1: intros; only 1: intuition; only 1: destr_bool; only 1: destr_bool).	0.0299558639526	27
Coq.Bool.Bool.orb_false_intro	40	3.0	synth with cache (only 1: intros; only 1: destr_bool).	0.00984883308411	5
Coq.Bool.Bool.orb_false_elim	40	0.0.3.0.1	synth with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0231130123138	28
Coq.Bool.Bool.orb_diag	40	0	synth with cache (only 1: destr_bool).	0.00597310066223	1
Coq.Bool.Bool.orb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00549602508545	1
Coq.Bool.Bool.orb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00536513328552	1
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00545406341553	2
Coq.Bool.Bool.orb_false_l	40	0	synth with cache (only 1: destr_bool).	0.0055079460144	1
Coq.Bool.Bool.orb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00551700592041	1
Coq.Bool.Bool.orb_comm	40	0	synth with cache (only 1: destr_bool).	0.0069420337677	1
Coq.Bool.Bool.orb_assoc	40	0	synth with cache (only 1: destr_bool).	0.00878000259399	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0154690742493	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0171151161194	5
Coq.Bool.Bool.andb_true_eq	40	0.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.0192399024963	18
Coq.Bool.Bool.andb_false_intro1	40	0	synth with cache (only 1: destr_bool).	0.00662517547607	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00730085372925	3
Coq.Bool.Bool.andb_false_r	40	0	synth with cache (only 1: destr_bool).	0.00550508499146	1
Coq.Bool.Bool.andb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00547790527344	1
Coq.Bool.Bool.andb_diag	40	0	synth with cache (only 1: destr_bool).	0.00530099868774	1
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.00551986694336	2
Coq.Bool.Bool.andb_true_l	40	0	synth with cache (only 1: destr_bool).	0.00546002388	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.019119977951	14
Coq.Bool.Bool.andb_negb_r	40	0	synth with cache (only 1: destr_bool).	0.00614809989929	1
Coq.Bool.Bool.andb_comm	40	0	synth with cache (only 1: destr_bool).	0.00643610954285	1
Coq.Bool.Bool.andb_assoc	40	0	synth with cache (only 1: destr_bool).	0.00812888145447	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.00841283798218	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.00883007049561	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	synth with cache (only 1: destr_bool).	0.00836586952209	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	synth with cache (only 1: destr_bool).	0.00888705253601	1
Coq.Bool.Bool.absorption_andb	40	0	synth with cache (only 1: destr_bool).	0.00710201263428	1
Coq.Bool.Bool.absorption_orb	40	0	synth with cache (only 1: destr_bool).	0.00660800933838	1
Coq.Bool.Bool.xorb_false_r	40	0	synth with cache (only 1: destr_bool).	0.0252809524536	1
Coq.Bool.Bool.xorb_false_l	40	0	synth with cache (only 1: destr_bool).	0.00568389892578	1
Coq.Bool.Bool.xorb_true_r	40	0	synth with cache (only 1: destr_bool).	0.00539183616638	1
Coq.Bool.Bool.xorb_true_l	40	0	synth with cache (only 1: reflexivity).	0.00466704368591	1
Coq.Bool.Bool.xorb_nilpotent	40	0	synth with cache (only 1: destr_bool).	0.00545692443848	1
Coq.Bool.Bool.xorb_comm	40	0	synth with cache (only 1: destr_bool).	0.00683879852295	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	synth with cache (only 1: destr_bool).	0.00865912437439	1
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.00708198547363	1
Coq.Bool.Bool.xorb_move_l_r_1	40	2.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0113179683685	4
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.00912809371948	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.00912308692932	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.00914120674133	1
Coq.Bool.Bool.negb_xorb_l	40	0	synth with cache (only 1: destr_bool).	0.00677108764648	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	synth with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0106749534607	5
Coq.Bool.Bool.xorb_negb_negb	40	0	synth with cache (only 1: destr_bool).	0.00662183761597	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0197069644928	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0243399143219	20
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00884699821472	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00777816772461	2
Coq.Bool.Bool.absurd_eq_bool	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00939297676086	3
Coq.Bool.Bool.absurd_eq_true	40	0.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00679302215576	2
Coq.Bool.Bool.trans_eq_bool	40	0	synth with cache (only 1: destr_bool).	0.0090799331665	1
Coq.Bool.Bool.Is_true_eq_true	40	0.1	synth with cache (only 1: destr_bool; only 1: intuition).	0.00774216651917	3
Coq.Bool.Bool.Is_true_eq_left	40	0	synth with cache (only 1: destr_bool).	0.00640296936035	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00652980804443	3
Coq.Bool.Bool.eqb_refl	40	0	synth with cache (only 1: destr_bool).	0.00528812408447	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0100030899048	3
Coq.Bool.Bool.orb_prop_elim	40	0.1.1.1.0.2	synth with cache (only 1: destr_bool; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition; only 1: tauto).	0.113748073578	81
Coq.Bool.Bool.orb_prop_intro	40	3.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00879216194153	5
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00983095169067	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0117828845978	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.012491941452	4
Coq.Bool.Bool.eq_bool_prop_elim	40	1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0823438167572	5
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.00768995285034	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00666785240173	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00720310211182	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00761485099792	3
Coq.Bool.Bool.andb_if	40	1	synth with cache (only 1: destr_bool).	0.00706601142883	2
Coq.Bool.Bool.negb_if	40	0	synth with cache (only 1: destr_bool).	0.00636100769043	1
Coq.Bool.Bool.andb_lazy_alt	40	0	synth with cache (only 1: destr_bool).	0.00683999061584	1
Coq.Bool.Bool.orb_lazy_alt	40	0	synth with cache (only 1: reflexivity).	0.00479412078857	1
Coq.Bool.Bool.reflect_iff	40	2.0.8.0.13	synth with cache (only 1: induction 1; only 1: intuition; only 1: split; only 1: intuition; only 1: discriminate).	6.14626908302	12910
Coq.Bool.Bool.iff_reflect	40	1.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0162019729614	14
Coq.Bool.Bool.reflect_dec	40	2.3.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0096218585968	8
Coq.Bool.Bool.eqb_spec	40	0.1.1.0.8	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0679259300232	103
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.5	synth with cache (only 1: destruct 1; only 1: intuition).	0.0447020530701	31
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	11.52.1	synth with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	28.7936418056	90638
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	0.3.0.4.0.6.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: discriminate H; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto with datatypes).	3.49657201767	3748
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	0.0.0.1.3.0.3.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro Ha; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).	14.5350871086	8501
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	2.2.3	synth with cache (only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	0.355206012726	143
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	3.46492695808	1782
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	1.1.0.0.1.0.3.5.8.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros H; only 1: discriminate H; only 1: unfold not; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: unfold not; only 1: intros _ _ [=]).	4.56630086899	4885
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	1.0.4.0.5.0	synth with cache (only 1: simple induction y; only 1: destruct 1; only 1: simpl; only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	3.937032938	2018
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.2.1.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.141186952591	26
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	0.0665550231934	9
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	synth with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0315749645233	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	4.1.1.0	synth with cache (only 1: simple induction y; only 1: eauto with datatypes; only 1: intros; only 1: eauto with datatypes).	0.716202020645	44
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	0.0.0.0.1	synth with cache (only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	0.932461977005	221
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.0.3.36	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: firstorder; only 1: simpl in *; only 1: intuition).	6.29588103294	6250
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	6.38	synth with cache (only 1: intros [? ?]; only 1: trivial).	0.885931015015	5325
Coq.Lists.Streams.Streams.tl_nth_tl	40	2.0.1.5	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.297371149063	286
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	4.0.15	synth with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto with datatypes).	0.557493925095	1416
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	0.4.2.4.0.1.30	synth with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: auto with datatypes).	16.7448170185	53193
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	3.3.17	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto with datatypes; only 1: auto with datatypes).	0.358749866486	666
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0200560092926	5
Coq.Lists.Streams.Map.Str_nth_map	40	1.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0183358192444	6
Coq.Lists.Streams.Map.ForAll_map	40	1.11.23.1.9.23.1	synth with cache (only 1: split; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption).	15.0054478645	105697
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	3.1.2.0.1	synth with cache (only 1: simple induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.283453941345	264
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0250489711761	7
Coq.Lists.List.Facts.nil_cons	40	7.9	synth with cache (only 1: intros a n Ha; only 1: discriminate).	0.257355928421	270
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.0.1.0.0.0	synth with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: intros a r; only 1: discriminate; only 1: intros; only 1: discriminate).	0.026673078537	7
Coq.Lists.List.Facts.length_zero_iff_nil	40	3.0.3.1.0.3.2	synth with cache (only 1: split; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: firstorder  discriminate; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.717179059982	818
Coq.Lists.List.Facts.hd_error_nil	40	1.0	synth with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).	0.0149400234222	3
Coq.Lists.List.Facts.hd_error_cons	40	2.0.0.0.0	synth with cache (only 1: destruct l as [| x xs]; only 1: intros; only 1: split; only 1: intros; only 1: split).	0.0265820026398	11
Coq.Lists.List.Facts.in_eq	40	4.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder  discriminate).	0.018326997757	7
Coq.Lists.List.Facts.in_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0151998996735	2
Coq.Lists.List.Facts.not_in_cons	40	0.0.0.9.4.1.0.5	synth with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intros (H1, H2); only 1: inversion 1; only 1: subst; only 1: auto; only 1: auto).	2.38256502151	3764
Coq.Lists.List.Facts.in_nil	40	2.0.2	synth with cache (only 1: simpl; only 1: intros; only 1: firstorder  discriminate).	0.016713142395	7
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.012834072113	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: firstorder  discriminate).	0.0170791149139	3
Coq.Lists.List.Facts.app_nil_r	40	0.0.3.0.9	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.200944900513	173
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0837578773499	7
Coq.Lists.List.Facts.app_assoc	40	4.0.0.3.0.0.0	synth with cache (only 1: induction l; only 1: intros a r; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: auto).	1.03227806091	1004
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0303640365601	7
Coq.Lists.List.Facts.app_comm_cons	40	0	synth with cache (only 1: auto using app_assoc).	0.0132088661194	1
Coq.Lists.List.Facts.app_eq_nil	40	0.2.3.3	synth with cache (only 1: destruct l as [| x xs]; only 1: firstorder  discriminate; only 1: intros; only 1: discriminate H).	0.138347148895	114
Coq.Lists.List.Facts.app_eq_unit	40	0.0.0.0.8.2.0.2.4.1.0	synth with cache (only 1: destruct x as [| a l]; only 1: simpl; only 1: auto; only 1: destruct l as [| x l]; only 1: simpl; only 1: intros; only 1: inversion_clear H; only 1: intuition; only 1: simpl; only 1: intros; only 1: discriminate H).	11.748292923	19838
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	3.0.1.14	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	2.53730797768	3367
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	0.2.0.1.0.3.4.1.1.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: intro H; only 1: intuition; only 1: destruct 1; only 1: simpl; only 1: inversion_clear H; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	27.3304231167	47152
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.app_inv_head	40	0.5.5.5.0.1.0.9	synth with cache (only 1: induction l as [| a tail]; only 1: simpl; only 1: auto using app_assoc; only 1: simpl; only 1: intro H; only 1: intros E; only 1: inversion 1; only 1: auto).	12.6140880585	24243
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0164349079132	2
Coq.Lists.List.Elts.nth_default_eq	40	2.3.0.1.1.0.0.1.0.2.0	synth with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: trivial; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	15.5766370296	15844
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40	0.0.1.0.3.2.1.3	synth with cache (only 1: induction l; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: intros d ie; only 1: auto with arith).	6.35005402565	6763
Coq.Lists.List.Elts.app_nth1	40	0.0.0.0.4.0.0.3	synth with cache (only 1: unfold lt; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	3.70012283325	3315
Coq.Lists.List.Elts.app_nth2	40	0.0.0.0.4.1.0.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	2.85665988922	1970
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: revert l; only 1: induction n as [| n IH]; only 1: intros [| a l] H; only 1: easy; only 1: now simpl; only 1: intros [| a l] H; only 1: easy; only 1: simpl; only 1: auto with arith).	0.608429908752	136
Coq.Lists.List.Elts.nth_error_app2	40	0.0.0.1.0.0.2.1.0.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: inversion H; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	2.42618489265	1456
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	0.0.0.0.1.0.0.4.2	synth with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).	5.06974983215	3478
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	3.1	synth with cache (only 1: simpl; only 1: intuition).	0.0580310821533	6
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	0.2.0.13	synth with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	0.554975032806	345
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0247921943665	3
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.0.0.0.0.0.1.13	synth with cache (only 1: induction l; only 1: intro y; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	9.08288908005	9368
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	1.4.0.2	synth with cache (only 1: simpl; only 1: induction l; only 1: auto; only 1: firstorder).	0.0713739395142	46
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0150120258331	2
Coq.Lists.List.ListOps.concat_cons	40	0.0.2.0.0.0.0	synth with cache (only 1: simpl; only 1: induction x as [| a l IHl]; only 1: intro y; only 1: simpl; only 1: reflexivity; only 1: intro y; only 1: trivial).	0.0323069095612	9
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40
Coq.Lists.List.Map.map_cons	40	1	synth with cache (only 1: auto).	0.0128309726715	2
Coq.Lists.List.Map.in_map	40	0.3.1.2.1.0.0.2	synth with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: intros; only 1: firstorder; only 1: subst; only 1: intuition).	4.92571997643	4832
Coq.Lists.List.Map.in_map_iff	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.133292913437	3
Coq.Lists.List.Map.map_length	40	2.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0474319458008	17
Coq.Lists.List.Map.map_nth	40	1.0.0.6.0.0.4.1.0	synth with cache (only 1: induction l; only 1: simpl; only 1: induction n as [| n IH]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: destruct n; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	15.938806057	13711
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	0.0.0.0.0.1.2	synth with cache (only 1: induction l; only 1: intros l2; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	0.261765956879	86
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	1.0.0.0.0.0.6	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: discriminate).	0.446745872498	295
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.8.0.0.3.3	synth with cache (only 1: intros l2; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.32888197899	1504
Coq.Lists.List.concat_map	40	0.0.1.0.0.0.5	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	0.588282108307	425
Coq.Lists.List.map_id	40	1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0297498703003	7
Coq.Lists.List.map_map	40	0.1.0.0.0.2	synth with cache (only 1: induction l as [| x l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IH; only 1: reflexivity).	0.111509084702	82
Coq.Lists.List.map_ext_in	40	2.1.2.4.0.10.0.0	synth with cache (only 1: induction l; only 1: auto; only 1: generalize (app_nil_r (A:=l)); only 1: simpl; only 1: intros d ie; only 1: f_equal; only 1: auto; only 1: auto).	34.9510188103	41851
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	2.1.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).	0.0334031581879	10
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	2.1.2.0.0.4	synth with cache (only 1: induction l; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).	0.742317199707	578
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.3.0.0.0.0.6.2	synth with cache (only 1: intros; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros y H0 H1; only 1: f_equal; only 1: auto).	5.61832308769	6249
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40	1.12.0.1.0.0.8.1	synth with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto with arith; only 1: intro y; only 1: simpl; only 1: rewrite IH; only 1: firstorder).	14.4609668255	15176
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.707828044891	235
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40	1.0.0.0.1.0.0.0.0.0.23	synth with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: case_eq (f a); only 1: intros l2; only 1: simpl; only 1: rewrite IHl; only 1: auto; only 1: intros l2; only 1: auto).	32.4259030819	26087
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40	0.0.1.0.1.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	1.33750486374	334
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0199100971222	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40	9.0.0.0.0.4.2.3.6	synth with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	7.16981196404	9021
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.2.1.0.0.0.0.0.0	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto; only 1: auto).	0.845808982849	430
Coq.Lists.List.Filtering.ext_in_filter	40	5.10.0.1	synth with cache (only 1: induction l as [| a l IHl]; only 1: intros [=] ? []; only 1: rewrite filter_map; only 1: apply ext_in_map).	15.0217208862	9941
Coq.Lists.List.Filtering.filter_ext_in_iff	40	0.0.0.1.0.0.0.1.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	6.31012701988	1408
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0249030590057	4
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	9.65592193604	4871
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	0.2.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.328691005707	152
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0420079231262	8
Coq.Lists.List.ListPairs.split_combine	40	0.1.0.1.0.2.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct (split l); only 1: destruct (split l); only 1: destruct a; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.05646395683	716
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40	4.0.0.0.0.0.0.0.3	synth with cache (only 1: induction l, l'; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	2.41142916679	1881
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.0.4	synth with cache (only 1: induction l; only 1: easy; only 1: firstorder  (subst; auto)).	0.0282220840454	16
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	21.83	synth with cache (only 1: generalize (rev_involutive (A:=l)); only 1: left).	4.60869288445	14213
Coq.Lists.List.length_order.lel_trans	40	0.8.1.5	synth with cache (only 1: unfold lel; only 1: firstorder  (subst; auto); only 1: rewrite H; only 1: auto with arith).	0.550252914429	289
Coq.Lists.List.length_order.lel_cons_cons	40	0.1.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0304770469666	4
Coq.Lists.List.length_order.lel_cons	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0183651447296	3
Coq.Lists.List.length_order.lel_tail	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0186121463776	3
Coq.Lists.List.length_order.lel_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	0	synth with cache (only 1: auto).	0.0116460323334	1
Coq.Lists.List.SetIncl.incl_tl	40	1.1.5	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.280714988708	24
Coq.Lists.List.SetIncl.incl_tran	40	0	synth with cache (only 1: auto with datatypes).	0.0127899646759	1
Coq.Lists.List.SetIncl.incl_appl	40	0	synth with cache (only 1: auto with datatypes).	0.0137410163879	1
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0135750770569	1
Coq.Lists.List.SetIncl.incl_cons	40	23	synth with cache (only 1: firstorder  (subst; auto)).	1.03692507744	1327
Coq.Lists.List.SetIncl.incl_app	40	7.2.0.4	synth with cache (only 1: induction l; only 1: auto with datatypes; only 1: intros l1 l2 Eq x; only 1: firstorder).	12.2145168781	2094
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.35	synth with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: auto; only 1: simpl in *; only 1: auto).	0.631698131561	1193
Coq.Lists.List.Cutting.firstn_cons	40	0	synth with cache (only 1: now simpl).	0.0135490894318	1
Coq.Lists.List.Cutting.firstn_all	40	0.1.2.1.18	synth with cache (only 1: induction l; only 1: now simpl; only 1: simpl in *; only 1: rewrite IHl; only 1: auto).	0.991702079773	1092
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0	synth with cache (only 1: now simpl).	0.0130009651184	1
Coq.Lists.List.Cutting.firstn_le_length	40	4.0.4.1.2.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: auto with arith; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	4.55079889297	4840
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40	0.2.0.0.0.1.0.2.0	synth with cache (only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: f_equal; only 1: apply IHn).	2.67590308189	1229
Coq.Lists.List.Cutting.firstn_app_2	40
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40	1.1.5.0.0.1.1.5.7	synth with cache (only 1: unfold firstn at 2; only 1: induction n as [| k iHk]; only 1: intro H; only 1: now simpl; only 1: simpl; only 1: destruct l as [| x xs]; only 1: apply firstn_all2; only 1: auto with arith; only 1: now simpl).	38.4951701164	45284
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0	synth with cache (only 1: auto).	0.0122830867767	1
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.12	synth with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.108584880829	165
Coq.Lists.List.Cutting.skipn_cons	40	0	synth with cache (only 1: now simpl).	0.0133159160614	1
Coq.Lists.List.Cutting.skipn_none	40	2.0.0.2.2	synth with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: now rewrite H).	0.12659406662	67
Coq.Lists.List.Cutting.skipn_all2	40	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	1.03836297989	402
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40	1.0.0.0.0.1.0.0.8	synth with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now simpl; only 1: simpl; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	14.6080100536	12295
Coq.Lists.List.Cutting.skipn_length	40	1.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.19126796722	1684
Coq.Lists.List.Cutting.skipn_all	40	2.0.0.0.1.1	synth with cache (only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: rewrite <- (firstn_all l)  at 1; only 1: now induction l).	0.733806848526	13
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.4.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.30848002434	710
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0	synth with cache (only 1: now intros []).	0.0137701034546	1
Coq.Lists.List.Combining.combine_firstn_l	40	5.0.0.0.0.0.1.4	synth with cache (only 1: induction l; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	3.92265915871	2362
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.0.1.1.0.0.0.2.0.0	synth with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	3.98069906235	2453
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.17401099205	3
Coq.Lists.List.Add.Add_length	40	0.0.2.0	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto with arith).	0.0264539718628	6
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.0	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0177550315857	2
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0396628379822	4
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	1.1.0.0.24.10	synth with cache (only 1: intro l'; only 1: induction l' as [| x' l' IHl']; only 1: now simpl; only 1: simpl; only 1: intro H; only 1: auto).	12.3178060055	21735
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40	3.2.4.0.1.0.9	synth with cache (only 1: induction len; only 1: intro; only 1: auto; only 1: simpl; only 1: intro H; only 1: f_equal; only 1: auto).	6.09735608101	6092
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.2.0.0	synth with cache (only 1: split; only 1: firstorder; only 1: inversion_clear H; only 1: firstorder).	0.027400970459	6
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	0.0.1.2.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: firstorder).	0.0481898784637	25
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	0.0.1.0.0.0.0.0.1.1	synth with cache (only 1: split; only 1: induction 1; only 1: simpl; only 1: inversion 1; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.783464193344	509
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.3.0.0.2.4	synth with cache (only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: subst; only 1: now simpl; only 1: inversion 1; only 1: auto).	0.414650917053	405
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40	0.2.0.0.9.0.2.0.2.2.0.0	synth with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: left; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: firstorder; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	12.9957699776	13436
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.0.3	synth with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.107569932938	42
Coq.Lists.List.Exists_Forall.Exists_impl	40	2.0.13.7.0	synth with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now apply Exists_cons_tl).	9.04586100578	16107
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	2.06046390533	178
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40	3.2.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	11.467318058	6872
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.0.0.0.4.3.0	synth with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.00635910034	927
Coq.Lists.List.Forall2.Forall2_refl	40	1	synth with cache (only 1: auto).	0.0118169784546	2
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40	0.2.0.8.1.0.1.0.0.0.1.0.1	synth with cache (only 1: induction l1; only 1: simpl; only 1: induction l1'; only 1: intros; only 1: trivial; only 1: intros; only 1: inversion H; only 1: simpl; only 1: intros; only 1: inversion H; only 1: subst; only 1: simpl; only 1: auto).	36.296448946	49525
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	2.0.0.12	synth with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: auto).	0.267984867096	154
Coq.Lists.List.Repeat.repeat_spec	40	11.0.7.0.0	synth with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.05704402924	2569
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.1	synth with cache (only 1: repeat red; only 1: intuition).	0.0244898796082	4
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	1.1.2.3	synth with cache (only 1: induction l; only 1: eauto; only 1: intuition; only 1: now apply permA_skip).	1.05433607101	197
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.0.0.0.0.1.0.0.3	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).	1.51843285561	623
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	4.1.0.4.3.8	synth with cache (only 1: induction l; only 1: easy; only 1: etransitivity; only 1: now apply permA_swap; only 1: rewrite <- !app_comm_cons; only 1: intuition).	3.24825906754	1205
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	1.0.10.14.2	synth with cache (only 1: intros E; only 1: etransitivity; only 1: now rewrite E; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	10.4796040058	7537
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.023610830307	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	0.104328155518	5
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	2.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip).	0.0274319648743	5
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	2.0.0.0.1.0.0.5.0.0	synth with cache (only 1: intros Pdec l; only 1: split; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto).	5.23756098747	5238
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.0.0.0.0.0.3	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: inversion 1; only 1: auto; only 1: auto).	0.157183885574	61
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.2.1.0	synth with cache (only 1: intros; only 1: split; only 1: inversion 1; only 1: induction 1).	0.0261678695679	13
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.0500128269196	10
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	1	synth with cache (only 1: now simpl).	0.0229780673981	2
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	4.3.1.0.1.1.0	synth with cache (only 1: split; only 1: induction 1; only 1: apply Forall2_nil; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	1.42345094681	1577
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	8	synth with cache (only 1: firstorder).	0.0416600704193	18
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.1.0	synth with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.540256977081	24
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.2.1	synth with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.0252201557159	7
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.5	synth with cache (only 1: intuition; only 1: inv; only 1: auto).	1.90194201469	28
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	1.0	synth with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.0556700229645	3
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0.0.0.1.0	synth with cache (only 1: rewrite 2!InA_cons; only 1: intuition; only 1: invlist InA; only 1: tauto; only 1: tauto; only 1: auto).	0.10657787323	7
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.1.0	synth with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.0268268585205	5
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).	0.0573148727417	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.1	synth with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.075935125351	4
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.2.1.0.0.1.0	synth with cache (only 1: destruct l; only 1: intros H; only 1: rewrite InA_app_iff; only 1: tauto; only 1: intros H; only 1: rewrite InA_app_iff; only 1: tauto).	0.531071186066	163
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	1.0.0.1.0.5.1.3.1.7	synth with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	3.24828386307	3787
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	1.4.3.1.10.2.0	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: destruct IHl; only 1: auto).	8.09935688972	9639
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40	11.5.17.5	synth with cache (only 1: intros x y z H; only 1: induction 1; only 1: auto; only 1: eauto).	3.93850493431	7203
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	1.1.3.1	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: intuition).	0.53823018074	122
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0353610515594	8
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	1.0.1.0.1.24	synth with cache (only 1: induction 1; only 1: intro; only 1: eauto; only 1: intro; only 1: constructor; only 1: eauto).	5.08172416687	4435
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	5.8.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto).	1.31356716156	603
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	1.2.6.1.2	synth with cache (only 1: repeat red; only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto).	1.76265692711	703
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0313899517059	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	3.0.4.1.2.3	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.988570928574	844
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	0.0.11.0.8.7	synth with cache (only 1: destruct n; only 1: fix sqrtrem_spec 1; only 1: trivial; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	1.30538606644	2687
Coq.NArith.BinNat.N.discr	40	2.2.7.0.9.15	synth with cache (only 1: right; only 1: induction n; only 1: auto; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	0.743443012238	1809
Coq.NArith.BinNat.N.peano_rect_base	40	1	synth with cache (only 1: auto).	0.0122079849243	2
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0118839740753	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0265381336212	5
Coq.NArith.BinNat.N.bi_induction	40	0.18.4	synth with cache (only 1: intros Eqf Lef x y; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.95311498642	2419
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	4	synth with cache (only 1: auto).	0.0128190517426	5
Coq.NArith.BinNat.N.recursion_succ	40	4.25.20	synth with cache (only 1: intros x x'; only 1: fix sqrtrem_spec 1; only 1: assumption).	9.3474957943	27515
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: trivial).	0.0118980407715	1
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0118179321289	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0117020606995	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0	synth with cache (only 1: reflexivity).	0.0124568939209	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.2	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0181980133057	5
Coq.NArith.BinNat.N.pos_pred_succ	40	0.6.10.1.3	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now destruct p).	1.15039205551	1406
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.9.15	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: now destruct p).	0.541345834732	587
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0881440639496	3
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0194430351257	3
Coq.NArith.BinNat.N.succ_0_discr	40	1	synth with cache (only 1: now destruct n).	0.0332610607147	13
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.018385887146	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.0146949291229	2
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0133459568024	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.1.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.108141183853	23
Coq.NArith.BinNat.N.compare_le_iff	40	1	synth with cache (only 1: easy').	0.264699220657	86
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	1.0.0.0.0	synth with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.026792049408	6
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	11	synth with cache (only 1: split).	0.0474939346313	54
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40
Coq.NArith.BinNat.N.succ_double_add	40	0	synth with cache (only 1: now destruct n, m).	0.0180690288544	1
Coq.NArith.BinNat.N.double_mul	40	4	synth with cache (only 1: now destruct n, m).	0.0682480335236	19
Coq.NArith.BinNat.N.succ_double_mul	40	1.12	synth with cache (only 1: rewrite add_comm; only 1: now destruct n, m).	0.685116052628	213
Coq.NArith.BinNat.N.div2_double	40	7	synth with cache (only 1: now destruct n).	0.016939163208	8
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0144999027252	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	7	synth with cache (only 1: now destruct n, m).	0.385778903961	203
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0335149765015	9
Coq.NArith.BinNat.N.succ_double_lt_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0328938961029	9
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0343389511108	9
Coq.NArith.BinNat.N.compare_0_r	40	10	synth with cache (only 1: now destruct n).	0.0379438400269	24
Coq.NArith.BinNat.N.pow_0_r	40	0	synth with cache (only 1: reflexivity).	0.0128421783447	1
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	0.2.0.1.0.11.1	synth with cache (only 1: intro; only 1: destruct n, p; only 1: simpl; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	2.01441407204	2433
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	11.0.1.35	synth with cache (only 1: destruct n; only 1: order; only 1: simpl; only 1: now destruct p).	4.4291138649	9819
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.1.0.1.0.0	synth with cache (only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).	0.0300958156586	9
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40	0.0.0.5.0.1.0.2.1.2.0.1.0.0.0	synth with cache (only 1: destruct n; only 1: split; only 1: now exists 0; only 1: intros (m, H); only 1: now destruct m; only 1: split; only 1: destruct p; only 1: now exists (pos p); only 1: easy; only 1: now exists 0; only 1: intros (m, H); only 1: destruct p; only 1: now destruct m; only 1: now destruct m; only 1: now destruct m).	15.2452909946	17125
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.7.0	synth with cache (only 1: unfold div, modulo; only 1: generalize (div_eucl_spec a b); only 1: now destruct div_eucl).	0.0460498332977	12
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	1.0.0.0.0	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: reflexivity; only 1: intros Hn; only 1: easy).	0.0296139717102	6
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1.0.0.0.0.0.0.1	synth with cache (only 1: destruct a as [| p], b as [| q]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).	0.229213953018	132
Coq.NArith.BinNat.N.testbit_even_0	40	1.1.20	synth with cache (only 1: induction a; only 1: trivial; only 1: split).	0.277701854706	473
Coq.NArith.BinNat.N.testbit_odd_0	40	0	synth with cache (only 1: now destruct a).	0.0137920379639	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.0	synth with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0263290405273	4
Coq.NArith.BinNat.N.testbit_neg_r	40	5	synth with cache (only 1: now destruct n).	0.0782449245453	40
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0145170688629	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0196080207825	2
Coq.NArith.BinNat.N.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00781798362732	1
Coq.NArith.BinNat.N.ge_le_iff	40	0.12.4.7.17.3.4	synth with cache (only 1: split; only 1: intros H; only 1: apply le_ngt; only 1: trivial; only 1: intros H; only 1: apply le_ngt; only 1: trivial).	11.8008289337	19095
Coq.NArith.BinNat.N.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0169079303741	2
Coq.NArith.BinNat.N.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00822591781616	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0306949615479	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0303549766541	1
Coq.NArith.Ndec.Neqb_complete	40	1	synth with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0296549797058	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	0.13.0.13.0.0.1	synth with cache (only 1: intros m H; only 1: eqb2eq; only 1: intros <-; only 1: absurd (false = true); only 1: auto with bool; only 1: destruct m; only 1: apply Ndouble_plus_one_bit0).	9.50184583664	21586
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	0.0.0.3.0.0.8.0.0.0	synth with cache (only 1: intros H; only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: eqb2eq; only 1: intro; only 1: subst; only 1: now rewrite N.lxor_nilpotent in *; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	4.39184617996	4448
Coq.NArith.Ndec.Ndiv2_eq	40	0.0.0.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: subst; only 1: reflexivity).	0.0300860404968	4
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).	0.0362019538879	3
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.1.0.2	synth with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.475239038467	115
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	synth with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0194790363312	1
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	1.31.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intros <-; only 1: trivial).	34.675508976	47222
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	0.0.0.0.15.0	synth with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	10.7433111668	10214
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.3.1.3.0.0.0.0.1	synth with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: rewrite !N2Nat.inj_succ_double; only 1: trivial).	6.59176015854	5632
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	1	synth with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0366790294647	2
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0556681156158	3
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: induction a as [| p]; only 1: intro H; only 1: reflexivity; only 1: intro H; only 1: exfalso; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate || simpl).	0.0423610210419	10
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.0.0.2	synth with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0439729690552	31
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.1.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0319209098816	7
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	0.0247321128845	4
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.0.1	synth with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	0.0250589847565	5
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40	2.1.9.0.0.1	synth with cache (only 1: simple induction d'; only 1: trivial; only 1: intros; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: trivial).	2.11305999756	2970
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.1.2.0.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0479218959808	28
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.3.4.0.0	synth with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.226846933365	198
Coq.NArith.Ndigits.Nshiftr_nat_S	40	3	synth with cache (only 1: trivial).	0.017646074295	4
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0170629024506	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.1	synth with cache (only 1: simpl; only 1: reflexivity).	0.0192527770996	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0168371200562	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.0.0.0.19.2.0.5	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.72408795357	6255
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0249109268188	3
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0245070457458	3
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	2.0.1.0.1.0.0.2.1.0	synth with cache (only 1: destruct n; only 1: intro H; only 1: now try rewrite H; only 1: destruct p; only 1: intro H; only 1: reflexivity; only 1: intros; only 1: discriminate H; only 1: intro H; only 1: reflexivity).	2.93623209	2514
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.0.0.0.4.0.0.4	synth with cache (only 1: destruct a; only 1: simpl; only 1: auto; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	2.10185003281	1635
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0287458896637	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	4.22701406479	3389
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.550472974777	226
Coq.NArith.Ndigits.Nless_def_3	40	0.0.5.4.1.0.0.1.0.0.2.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: simpl; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	35.2004299164	37709
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40	2.3.0.29.1.2.0.18	synth with cache (only 1: intros [| n]; only 1: unfold Nless; only 1: reflexivity; only 1: unfold Nless; only 1: induction n; only 1: reflexivity; only 1: trivial; only 1: reflexivity).	27.5677549839	79626
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	1.0.0.0.0.0.0.1.1.7	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: trivial).	1.74365711212	2696
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.0.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	1.22017598152	863
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	0.0.0.3.0.0.3.0.0.0.0.0.4	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).	4.14363312721	4697
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.1.0.0.1.1.1.0.1	synth with cache (only 1: destruct a; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	0.906517982483	693
Coq.NArith.NArith.TestOrder.test	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	1.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now subst).	0.0294189453125	8
Coq.NArith.Nnat.N2Nat.inj_double	40	0.3.4.20.4.0.6.1	synth with cache (only 1: simpl; only 1: destruct a as [| p]; only 1: now rewrite Nat.add_0_r; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	3.23769807816	9673
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	0.3.0.2.11.0.1.1.1	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: f_equal; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	3.48512506485	5507
Coq.NArith.Nnat.N2Nat.inj_succ	40	1.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0308499336243	7
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.7.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl N.to_nat; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.26288485527	353
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now subst).	0.0292057991028	6
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	synth with cache (only 1: nat2N).	0.0353481769562	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	synth with cache (only 1: nat2N).	0.0295739173889	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	synth with cache (only 1: nat2N).	0.0298128128052	1
Coq.NArith.Nnat.Nat2N.inj_add	40	1.0.2	synth with cache (only 1: destruct n as [| n]; only 1: nat2N; only 1: nat2N).	0.0573110580444	6
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	synth with cache (only 1: nat2N).	0.0329859256744	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0324401855469	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0298039913177	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	synth with cache (only 1: nat2N).	0.0318050384521	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.032203912735	1
Coq.NArith.Nnat.Nat2N.inj_iter	40	2.0.15.3.0.7.0.12	synth with cache (only 1: destruct n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.iter_succ; only 1: f_equal; only 1: trivial).	17.4142718315	44173
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	1	synth with cache (only 1: t_eqb).	0.0219311714172	2
Coq.Strings.Ascii.eqb_eq	40	0	synth with cache (only 1: t_eqb).	0.0204291343689	1
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: t_eqb).	0.108556985855	1
Coq.Strings.Ascii.eqb_compat	40	0	synth with cache (only 1: t_eqb).	0.0142390727997	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	1	synth with cache (only 1: t_eqb).	0.021998167038	2
Coq.Strings.String.eqb_eq	40	0	synth with cache (only 1: t_eqb).	0.0207848548889	1
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: t_eqb).	0.0211861133575	1
Coq.Strings.String.eqb_compat	40	0	synth with cache (only 1: t_eqb).	0.0152769088745	1
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	3.2.1.0.2.26	synth with cache (only 1: elim s; only 1: auto; only 1: simpl; only 1: intros m s1; only 1: intros ->; only 1: auto).	0.911023139954	1361
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	1.0.2.2	synth with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.0258960723877	9
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40	0.3	synth with cache (only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.769186973572	22
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	14	synth with cache (only 1: auto).	0.103432178497	139
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	14	synth with cache (only 1: auto).	0.0997998714447	139
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	14	synth with cache (only 1: auto).	0.0991020202637	139
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	11.3	synth with cache (only 1: intuition; only 1: lra).	1.28533816338	379
Coq.Reals.Ratan.pos_half_prf	40	0	synth with cache (only 1: lra).	0.0331418514252	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	0.0.3.0.3.4.6.12	synth with cache (only 1: intros x; only 1: destruct (Rle_lt_dec 0 x); only 1: rewrite Rabs_pos_eq; only 1: lra; only 1: assumption; only 1: rewrite <- Rabs_Ropp, Rabs_pos_eq; only 1: lra; only 1: lra).	7.73576903343	4321
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	21.0	synth with cache (only 1: intros x pr; only 1: lra).	3.63015985489	2585
Coq.Reals.Ratan.pos_opp_lt	40	0.0	synth with cache (only 1: intros x h; only 1: lra).	0.0378510951996	2
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.5.3	synth with cache (only 1: intros x n hx; only 1: apply pow_lt; only 1: intuition).	0.166177988052	48
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	3.0.4.0.0	synth with cache (only 1: intros n; only 1: unfold Ratan_seq, PI_tg; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: ring).	0.847023963928	307
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40	0.0.0.0.23	synth with cache (only 1: reg; only 1: intros x; only 1: solve [ apply Rgt_not_eq, plus_Rsqr_gt_0 ]; only 1: intros x; only 1: solve [ apply Rgt_not_eq, plus_Rsqr_gt_0 ]).	32.7196340561	15644
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	1.3.0.0.1.0	synth with cache (only 1: intros; only 1: simpl; only 1: induction l as [| r l Hrecl]; only 1: simpl in H; only 1: easy; only 1: split).	0.539976835251	270
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40	0.1.6.0.1.1.3.0.3	synth with cache (only 1: simple induction l; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: apply H; only 1: apply lt_S_n; only 1: assumption).	19.1050548553	14902
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.1.0.2.2.4	synth with cache (only 1: intro; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: intro; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	2.54747581482	2488
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.2.0.1.7.1	synth with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	5.65313482285	4467
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.5.0	synth with cache (only 1: intros; only 1: elim H; only 1: reflexivity).	0.0875689983368	20
Coq.Reals.RList.RList_P22	40	0.0.1.2.0	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	0.1378428936	47
Coq.Reals.RList.RList_P23	40	0.0.0.10.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: ring).	6.31832098961	5193
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.0.0.0.1.0.1.0.1	synth with cache (only 1: simple induction l1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	1.31413292885	603
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40	0.19.0.0.0.8.16	synth with cache (only 1: simple induction l; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	20.0393559933	28546
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0869920253754	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	0.0.1.0.0.0.2	synth with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.109266042709	66
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	1.4.0.0.0.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: intro; only 1: auto with zarith real).	0.23929810524	142
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.1.2.0.16.3.0	synth with cache (only 1: intros r1 r2 r; only 1: intros; only 1: elim H; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto).	25.4417908192	63478
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0460450649261	13
Coq.Reals.Rbasic_fun.Rmin_left	40	5.0.1.0.2	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2); only 1: reflexivity; only 1: auto with real).	0.767592191696	468
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0323960781097	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0857779979706	6
Coq.Reals.Rbasic_fun.Rmin_comm	40
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.0.0.5.0	synth with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: assumption; only 1: assumption).	0.0471920967102	19
Coq.Reals.Rbasic_fun.Rmin_glb	40	1.0.2.0.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2); only 1: eauto using Rle_trans, Rle_refl; only 1: assumption).	0.0465140342712	20
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0381071567535	9
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	synth with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0986490249634	31
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	0.0695340633392	18
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.0474259853363	8
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0375988483429	6
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0322160720825	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0390260219574	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0924360752106	7
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0921449661255	7
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.9.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	1.94096589088	1515
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	1.0.0.0.0.0.4.0.3.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intro; only 1: apply Rmax_case_strong; only 1: intros; only 1: auto with real; only 1: intros; only 1: auto with real; only 1: intro; only 1: apply Rmax_r).	5.98485803604	7195
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	7	synth with cache (only 1: auto with *).	0.0264239311218	8
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.2.0	synth with cache (only 1: intuition eauto; only 1: auto with *; only 1: auto with *).	0.0542080402374	5
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.5.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.14705491066	53
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.2.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0805649757385	8
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	2.0	synth with cache (only 1: intros f a b; only 1: split).	0.0319728851318	4
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	2.1.7.1	synth with cache (only 1: unfold IZR at 1; only 1: red; only 1: fix ind_0_1_SS 1; only 1: auto with arith).	0.558428049088	393
Coq.Reals.Rfunctions.fact_simpl	40	9	synth with cache (only 1: auto with arith).	0.0226130485535	11
Coq.Reals.Rfunctions.simpl_fact	40	3.49	synth with cache (only 1: fix even_odd_double 1; only 1: assumption).	6.08997797966	11953
Coq.Reals.Rfunctions.pow_O	40	5.0.1	synth with cache (only 1: unfold IZR at 1; only 1: intros; only 1: auto).	0.0699620246887	33
Coq.Reals.Rfunctions.pow_1	40	2.1	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0304298400879	5
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	0.0.0.3.2.2	synth with cache (only 1: intro; only 1: intro; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: auto with real).	1.94742083549	366
Coq.Reals.Rfunctions.pow_RN_plus	40	1.4.5.0.1.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: repeat rewrite Rmult_assoc; only 1: auto with real).	12.6375300884	5019
Coq.Reals.Rfunctions.pow_lt	40	3.1.3.0.0.3.1.0.0	synth with cache (only 1: intro; only 1: simple induction n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto; only 1: auto).	3.94246506691	4005
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: auto).	0.0271182060242	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.0804259777069	9
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.0.0.0.1.0.0.1	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 1 with (1 * 1); only 1: auto with real; only 1: auto with real).	1.38521695137	496
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.4.2.3.2.0	synth with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: auto with real rorders; only 1: simpl; only 1: rewrite Hrecn; only 1: auto with real).	1.74019098282	664
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.21.1.0	synth with cache (only 1: simpl; only 1: intro; only 1: rewrite Rmult_1_r; only 1: reflexivity).	1.68034100533	1899
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0195701122284	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.1	synth with cache (only 1: simpl; only 1: auto with real).	0.0269939899445	3
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	0.1.3.1.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	3.84638905525	1529
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0625030994415	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	0.0.0.0.0.0.2	synth with cache (only 1: elim n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros m1 H'; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	0.0512428283691	9
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	11.11.2.0.0	synth with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	6.80712294579	9945
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	1.0.1.8.0	synth with cache (only 1: intro; only 1: case n; only 1: reflexivity; only 1: intro; only 1: lia).	0.294474124908	231
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: replace (2 * S N)%nat with (S (S (2 * N))); only 1: simpl; only 1: simpl in HrecN; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	0.113873958588	27
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	0.15.4.4	synth with cache (only 1: apply exp_inv; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: apply Rlt_0_1).	2.94781804085	2692
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros f g D l x H; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	1.82463383675	809
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	2.1.1.0.0.0.0.1.0.2.0.0	synth with cache (only 1: intros f g D D1 x H; only 1: unfold D_in; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps H1); only 1: intros alpha [H2 H3]; only 1: exists alpha; only 1: split; only 1: auto; only 1: intros d [H4 H5]; only 1: rewrite <- H; only 1: auto).	21.9316380024	10270
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40	1.0.1.0.2.0.0.0.3.0.5	synth with cache (only 1: intros H2; only 1: intros H1; only 1: case H1; only 1: intros; only 1: unfold Rpower; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: assumption; only 1: apply ln_increasing; only 1: assumption; only 1: assumption).	9.17942094803	8385
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	3.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0423939228058	13
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	0.0.2.0	synth with cache (only 1: intros; only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.0237979888916	22
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0107650756836	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	2.0.0.0	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0202782154083	11
Coq.Reals.RIneq.Rlt_not_eq	40	1.0.0.1.2.1	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0544970035553	44
Coq.Reals.RIneq.Rgt_not_eq	40	1.0.0.2.4.2	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	0.659650087357	1019
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.0.0.2.1.0.0.5.2	synth with cache (only 1: intros x y [H| H] abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with real).	3.31169199944	5476
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.8.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.555716991425	388
Coq.Reals.RIneq.Rdichotomy	40	0.0.0	synth with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.027755022049	3
Coq.Reals.RIneq.Rlt_le	40	1.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: left; only 1: auto with real).	0.0180058479309	5
Coq.Reals.RIneq.Rgt_ge	40	0.3.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.0156447887421	6
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	2.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: right; only 1: auto with real).	0.0214290618896	7
Coq.Reals.RIneq.Rlt_gt	40	1.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0148639678955	4
Coq.Reals.RIneq.Rgt_lt	40	0	synth with cache (only 1: trivial).	0.00974082946777	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0245261192322	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0156950950623	3
Coq.Reals.RIneq.Rnot_lt_le	40	2.0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition eauto  3).	0.0281128883362	6
Coq.Reals.RIneq.Rnot_gt_le	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.0276980400085	8
Coq.Reals.RIneq.Rnot_gt_ge	40	1.2.0.1	synth with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0330610275269	8
Coq.Reals.RIneq.Rnot_lt_ge	40	1.0.0.0.0.0	synth with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0244779586792	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.024444103241	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0199019908905	5
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0239241123199	4
Coq.Reals.RIneq.Rge_not_lt	40	2.0.0.1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0786700248718	11
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.0315430164337	5
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.1.1.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0618281364441	8
Coq.Reals.RIneq.Req_le	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.015380859375	3
Coq.Reals.RIneq.Req_ge	40	0.0.1	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.015321969986	4
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	synth with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0176520347595	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0155749320984	3
Coq.Reals.RIneq.Rgt_asym	40	1.2.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0213310718536	6
Coq.Reals.RIneq.Rle_antisym	40	0.0.2.7	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.611753940582	607
Coq.Reals.RIneq.Rge_antisym	40	1.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.0339000225067	4
Coq.Reals.RIneq.Rle_le_eq	40	0.0.4.0	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.0460588932037	8
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0213181972504	1
Coq.Reals.RIneq.Rlt_eq_compat	40	1.12.0	synth with cache (only 1: intuition eauto  3; only 1: subst; only 1: auto with real).	0.282724142075	328
Coq.Reals.RIneq.Rgt_eq_compat	40	2.1.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace y with y'; only 1: replace x with x'; only 1: assumption).	0.0207948684692	8
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	0.6.1.0	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: red; only 1: intuition eauto  3).	0.195152997971	86
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0608549118042	37
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.022677898407	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.0.0.5.0.1.0.0.4.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: right; only 1: intuition; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: unfold Rle; only 1: auto with real).	24.8395171165	8944
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0645480155945	3
Coq.Reals.RIneq.Rgt_dec	40	3.0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.0636358261108	7
Coq.Reals.RIneq.Rge_dec	40	1.1.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.154653787613	13
Coq.Reals.RIneq.Rlt_le_dec	40	1.2.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.33543586731	84
Coq.Reals.RIneq.Rgt_ge_dec	40	1.0.0	synth with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0404241085052	4
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.060054063797	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.150444984436	62
Coq.Reals.RIneq.Rlt_or_le	40	1.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0814528465271	4
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.1.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.239587783813	37
Coq.Reals.RIneq.Rle_or_lt	40	1.1.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.232836961746	34
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.120527029037	43
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.5.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0753319263458	30
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	11	synth with cache (only 1: intuition).	0.110074996948	109
Coq.Reals.RIneq.Rplus_opp_l	40	5.0	synth with cache (only 1: intros; only 1: ring).	5.00063681602	32
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	2.0	synth with cache (only 1: intros; only 1: auto with real).	1.03478288651	22
Coq.Reals.RIneq.Rplus_eq_compat_r	40
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	1.0.0.1.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	2.12586116791	14
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	1.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	2.49730682373	568
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0290279388428	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0284628868103	4
Coq.Reals.RIneq.Rmult_0_r	40	4.1.1.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: field).	0.0455870628357	16
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0191118717194	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.0.0.0	synth with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	1.61087203026	50
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.104974985123	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0126931667328	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.0	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: auto with real).	0.0178389549255	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0121169090271	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	8	synth with cache (only 1: intuition eauto  4 with real).	0.179683923721	80
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.1.0	synth with cache (only 1: intros r1 r2 H; only 1: intro Hnotz; only 1: auto with real).	0.106165885925	4
Coq.Reals.RIneq.Rmult_plus_distr_r	40	8.0	synth with cache (only 1: intros; only 1: ring).	1.65807104111	102
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	1.1.0.1.0.0	synth with cache (only 1: intros r b; only 1: pattern r at 2; only 1: intuition eauto  3; only 1: pattern r at 2; only 1: intuition eauto  3; only 1: eauto with real).	0.591690778732	66
Coq.Reals.RIneq.Ropp_0	40	1	synth with cache (only 1: ring).	0.0149428844452	2
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.0.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.020852804184	4
Coq.Reals.RIneq.Ropp_involutive	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0184290409088	2
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	2.2	synth with cache (only 1: intros; only 1: ring).	0.0222418308258	6
Coq.Reals.RIneq.Ropp_mult_distr_l	40	1.0	synth with cache (only 1: intros; only 1: ring).	0.0203058719635	3
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0204541683197	2
Coq.Reals.RIneq.Rmult_opp_opp	40	1.0	synth with cache (only 1: intros; only 1: ring).	1.0507311821	24
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0203549861908	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0207970142365	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	synth with cache (only 1: intros; only 1: ring).	2.10194993019	25
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0193948745728	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0204660892487	3
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0202701091766	2
Coq.Reals.RIneq.Rminus_diag_eq	40	3.2.2	synth with cache (only 1: intros x y H; only 1: rewrite H; only 1: ring).	0.614995002747	103
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	0.0.1	synth with cache (only 1: intros; only 1: unfold Rminus; only 1: ring).	0.0524199008942	4
Coq.Reals.RIneq.Rminus_eq_contra	40	2.0.0.2.0	synth with cache (only 1: red; only 1: intros r1 r2; only 1: unfold Rminus; only 1: intro; only 1: auto with real).	0.0546638965607	31
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0213022232056	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0211448669434	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	5.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.547525882721	32
Coq.Reals.RIneq.Rinv_1	40	2.1	synth with cache (only 1: unfold IZR, IPR; only 1: field).	0.0276799201965	12
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0400190353394	4
Coq.Reals.RIneq.Rinv_mult_distr	40	1.15.1.1	synth with cache (only 1: intros r1 r2 H; only 1: intro Hnotz; only 1: field; only 1: auto).	11.1359829903	2705
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0291500091553	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.0311272144318	3
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.152941942215	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.4.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.315631866455	55
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	0.6.0	synth with cache (only 1: intros; only 1: apply Rplus_lt_compat_l; only 1: auto with real).	0.0216538906097	9
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.1.0.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0191218852997	9
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.0.4.2	synth with cache (only 1: do 3 intro; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.0485889911652	18
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.0.0.1.0.0.0.0.18	synth with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: auto with zarith real).	7.44699788094	4316
Coq.Reals.RIneq.Rplus_le_compat_r	40	3.1.0.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.558107852936	198
Coq.Reals.RIneq.Rplus_ge_compat_r	40	2.1.0.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0192430019379	9
Coq.Reals.RIneq.Rplus_lt_compat	40	19.0.2	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: eauto with real).	30.1061148643	7218
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	1.1.0.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.132887125015	84
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	3.0.1.2	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.170776128769	78
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.3.2.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.680511951447	405
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.1.0.0.1.0	synth with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real).	0.0234060287476	8
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.0.1	synth with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	0.105251073837	57
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	3.3.1	synth with cache (only 1: intuition eauto  2; only 1: auto with real; only 1: auto with real).	0.214134931564	49
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.3	synth with cache (only 1: red; only 1: auto with real).	0.534723043442	50
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0312888622284	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0331561565399	10
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.2.0.4.2	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.885584115982	370
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.0	synth with cache (only 1: unfold Rge; only 1: intuition).	0.0243670940399	2
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0408639907837	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	synth with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0416610240936	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0178470611572	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0174589157104	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.01740193367	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0161991119385	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0180859565735	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.1	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0150620937347	5
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.1	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0344281196594	25
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.1	synth with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.021950006485	5
Coq.Reals.RIneq.Rmult_lt_compat_r	40	12.1.2	synth with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	2.86911416054	2756
Coq.Reals.RIneq.Rmult_gt_compat_r	40	2	synth with cache (only 1: eauto using Rlt_trans with rorders).	0.0579750537872	65
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.0.17	synth with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	1.3310739994	2083
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	7.17.6	synth with cache (only 1: intros x y z; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: eauto using Rmult_lt_compat_l with rorders).	13.3694448471	18629
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.1.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0458788871765	24
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.2.0.7.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.231930971146	211
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto).	0.0201818943024	5
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0242848396301	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.0.4	synth with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.12638092041	49
Coq.Reals.RIneq.Rge_minus	40	0.0.0.0.10.0.7	synth with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: auto with real).	8.70651912689	5861
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.310344934464	106
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40	0.0.0.0.0.0.2.1.3.3	synth with cache (only 1: intros a b; only 1: red; only 1: intros; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	17.3651299477	6357
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0135328769684	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0146200656891	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.644646883011	258
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.19.0	synth with cache (only 1: intros; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: auto with real).	16.1658601761	9556
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	0.0.0.5.0.2.6	synth with cache (only 1: intros x y H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	6.81888580322	6782
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.0.4.0	synth with cache (only 1: intro; only 1: rewrite Rplus_comm; only 1: case n; only 1: auto with real; only 1: auto with real).	0.291804790497	103
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	13.0.0	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: auto with arith real).	3.9407389164	3123
Coq.Reals.RIneq.INR_not_0	40	0.0.1.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: simpl; only 1: reflexivity).	0.0212731361389	7
Coq.Reals.RIneq.not_0_INR	40	2.3.4.1.6.10	synth with cache (only 1: intro; only 1: case n; only 1: auto with real; only 1: intros; only 1: rewrite S_INR; only 1: auto with real).	38.7666270733	27905
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	14.0.2	synth with cache (only 1: red; only 1: intros n H H1; only 1: now apply not_INR in H).	35.3876929283	16901
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	0.0.7.1.1.3.1	synth with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: ring).	0.914501905441	831
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.5.1.0.0.0	synth with cache (only 1: intros n m H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto with zarith real).	0.587589025497	603
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	11.1424040794	7687
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.1.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.235720157623	142
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	9.1	synth with cache (only 1: intro; only 1: ring).	0.136653900146	67
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	3.4.1.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.750638961792	471
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	2.2.4.0.3.8	synth with cache (only 1: intro; only 1: unfold Rdiv; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: auto with real).	14.4222390652	15367
Coq.Reals.RIneq.Rdiv_plus_distr	40	0.1.0.0	synth with cache (only 1: intros a b; only 1: intro; only 1: unfold Rdiv; only 1: ring).	0.0194399356842	5
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.1.0.7	synth with cache (only 1: unfold Rminus; only 1: intros a b c; only 1: unfold Rdiv; only 1: ring).	0.366297006607	262
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	4.38	synth with cache (only 1: fix even_odd_double 1; only 1: trivial).	19.6673099995	50193
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	3.1.2	synth with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: auto with arith).	0.0382130146027	20
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	7.0	synth with cache (only 1: intros; only 1: auto with arith).	0.0451719760895	28
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	146	synth with cache (only 1: auto with real).	8.7479968071	65062
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	4.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.123006820679	26
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.1	synth with cache (only 1: intro; only 1: field).	0.0460329055786	4
Coq.Reals.Ranalysis2.quadruple_var	40	15.0	synth with cache (only 1: intro; only 1: field).	0.508694887161	256
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	6.1	synth with cache (only 1: unfold interior; only 1: auto).	0.102159976959	93
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	7.0.2.0.4	synth with cache (only 1: intros Ext A Ha; only 1: intros; only 1: unfold included in H0; only 1: unfold included; only 1: auto).	0.669975996017	1213
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	5.28.6	synth with cache (only 1: unfold intersection_domain; only 1: simple induction 1; only 1: intuition).	13.8781700134	27807
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40	8	synth with cache (only 1: firstorder using PropExtensionalityFacts.PredExt_imp_PropExt, PropExtensionalityFacts.PredExt_imp_PropFunExt, PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt).	18.5326268673	2267
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	5.0.7.1	synth with cache (only 1: unfold open_set, interior; only 1: unfold neighbourhood; only 1: intros; only 1: elim H).	0.680136203766	1111
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40	0.11.0.4.14.1	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: ring_simplify; only 1: reflexivity).	2.00977110863	4457
Coq.Reals.Raxioms.Rplus_assoc	40	0.14.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: ring_simplify; only 1: reflexivity).	4.7299861908	2573
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	1.0.0.4.0.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: apply Pn; only 1: auto with arith).	0.425280094147	167
Coq.Reals.Rseries.Un_growing_shift	40	0.6.4.2.9.1.9	synth with cache (only 1: intros x z; only 1: intros n nN; only 1: simpl; only 1: apply Rge_le; only 1: apply growing_prop; only 1: auto with arith; only 1: auto with arith).	21.8960859776	28269
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40	9.105	synth with cache (only 1: destruct (exist_exp (-1)) as (?, e); only 1: assumption).	9.12548089027	13867
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.1.0.0.0.0.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.0500729084015	8
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	6.0.0	synth with cache (only 1: intros; only 1: unfold inv_fct; only 1: split).	0.0288591384888	9
Coq.Reals.Ranalysis1.continuity_pt_div	40	0.0.1.0.1.0.0.5	synth with cache (only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	1.51428413391	555
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40	4.5.0.4.2.1	synth with cache (only 1: intros; only 1: intro; only 1: unfold continuity_pt, plus_fct; only 1: apply limit_plus; only 1: apply H; only 1: apply H0).	3.03972005844	1780
Coq.Reals.Ranalysis1.continuity_opp	40	5.0.0.0.0.9	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, opp_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_Ropp; only 1: apply H).	3.38168501854	2226
Coq.Reals.Ranalysis1.continuity_minus	40	2.3.0.1.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	1.95040011406	785
Coq.Reals.Ranalysis1.continuity_mult	40	2.3.0.1.1.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	2.14806604385	989
Coq.Reals.Ranalysis1.continuity_const	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	6.90943193436	3461
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.116235971451	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0378761291504	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.2	synth with cache (only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0754518508911	48
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.0	synth with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0285670757294	5
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0296540260315	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	2.3.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.125451087952	47
Coq.Reals.Ranalysis1.derive_pt_scal	40	2.0.0.3.8.0.3	synth with cache (only 1: unfold continuity_pt, mult_real_fct; only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_scal; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: assumption).	6.79503512383	7606
Coq.Reals.Ranalysis1.derive_pt_id	40	1.5.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.0447130203247	12
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.5.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.133591175079	45
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.1	synth with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0501389503479	29
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.0.0.0.0.0.5.0.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	4.31346511841	2940
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0282700061798	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.1.3.6.7.0.7.0	synth with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite Rmult_0_r; only 1: rewrite cos_PI; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	17.5514438152	8738
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.2.0.2.1.5.0.8.17	synth with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite Rmult_0_r; only 1: rewrite neg_cos; only 1: rewrite cos_PI; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: ring).	35.5420210361	9087
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.21	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI2_RGT_0).	0.486876964569	440
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.2	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.0225410461426	5
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.14.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	7.76882386208	6376
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.3	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0414519309998	8
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0385780334473	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0375649929047	5
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.668241024017	104
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.673745155334	106
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	2.4.3	synth with cache (only 1: intros; only 1: subst; only 1: now ring).	0.133721828461	92
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.2.0.0.2.1	synth with cache (only 1: constructor; only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	0.13797211647	150
Coq.Reals.ConstructiveReals.CReq_sym	40	0.0.1.5	synth with cache (only 1: simple induction 1; only 1: split; only 1: assumption; only 1: assumption).	0.0779662132263	62
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: split; only 1: split; only 1: apply CRle_refl; only 1: apply CRle_refl; only 1: split; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: split; only 1: destruct H, H0; only 1: destruct (CRltLinear R), p; only 1: intro abs; only 1: destruct (s _ y _ abs); only 1: contradiction; only 1: contradiction; only 1: destruct H, H0; only 1: destruct (CRltLinear R), p; only 1: intro abs; only 1: destruct (s _ y _ abs); only 1: contradiction; only 1: contradiction).	20.3727231026	28169
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	2.4.2.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.701916217804	513
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	3.2.1.0.3.2.4.0.0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: assumption; only 1: intro abs; only 1: apply H0; only 1: apply CRplus_lt_compat_l; only 1: assumption).	33.9087560177	37006
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	0.2.0.0.2.1.1.0.0.0.11	synth with cache (only 1: intros; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: simpl; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: assumption; only 1: apply Nat.le_refl).	2.72203779221	3019
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	19.6	synth with cache (only 1: destruct x as [xn limx]; only 1: assumption).	0.928957939148	1797
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	2	synth with cache (only 1: apply CReal_isRingExt).	5.2277739048	188
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	2	synth with cache (only 1: apply CReal_isRingExt).	3.560806036	82
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	synth with cache (only 1: apply CReal_isRingExt).	3.11692094803	81
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.1.0.1	synth with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.0599148273468	6
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0302679538727	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	1.2	synth with cache (only 1: intro; only 1: ring).	2.74975776672	166
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0338850021362	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	16	synth with cache (only 1: assumption).	2.70208597183	1136
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	9	synth with cache (only 1: apply CReal_mult_proper_l).	0.0833990573883	31
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0415279865265	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.038754940033	2
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0387630462646	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	4.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0339801311493	6
Coq.Reals.R_sqr.Rsqr_1	40
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	4.6.3	synth with cache (only 1: case (Rcase_abs 0); only 1: auto with real; only 1: auto with real).	2.01027488708	2049
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.034588098526	2
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	synth with cache (only 1: intros; only 1: ring_Rsqr).	0.0357100963593	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.0.2.4	synth with cache (only 1: intros a b; only 1: unfold Rsqr; only 1: intros; only 1: auto with real).	0.101482868195	69
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.5.5.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intros H1; only 1: ring_Rsqr; only 1: trivial).	0.659070014954	484
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.0.0.0.2	synth with cache (only 1: unfold Rsqr; only 1: intro; only 1: intros; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.0727360248566	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0292601585388	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0289561748505	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0290529727936	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0290288925171	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.5.1.0.0.1.0	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold Rle; only 1: intros v w; only 1: intuition).	10.710370779	2203
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0716700553894	8
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.034649848938	8
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0375258922577	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	synth with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0382440090179	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.0.73.0.0	synth with cache (only 1: intro; only 1: intro; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	16.2677052021	34472
Coq.Reals.Rlimit.eps2	40	0.14.1	synth with cache (only 1: intro H; only 1: field_simplify_eq; only 1: ring).	0.264672994614	330
Coq.Reals.Rlimit.eps4	40	4.0	synth with cache (only 1: intro esp; only 1: lra).	0.0266780853271	6
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.0225841999054	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	synth with cache (only 1: intros; only 1: lra).	0.0229949951172	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.2.0.0.0.2.5	synth with cache (only 1: intro; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [H| H]; only 1: intro; only 1: apply Rle_refl; only 1: intros; only 1: apply Rsqrt_positivity).	1.12422990799	677
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40	0.1.0.4.2.0.2.2.0	synth with cache (only 1: intros; only 1: apply Rsqr_inj; only 1: apply sqrt_pos; only 1: assumption; only 1: unfold Rsqr; only 1: rewrite sqrt_sqrt; only 1: rewrite <- H1; only 1: reflexivity; only 1: assumption).	13.4677159786	3964
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0468149185181	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.034166097641	4
Coq.Reals.R_sqrt.sqrt_pow2	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0290579795837	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	4.4.4.0.1	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	8.18767809868	5675
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.6.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	0.7608730793	250
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.1.1.0.1.0.2	synth with cache (only 1: intros x H1; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	8.42953395844	2556
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	2.4.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	1.29534506798	299
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0828049182892	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0526111125946	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	1.7.3	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.249754905701	126
Coq.Reals.Rtrigo1.PI_4	40	0.1.20	synth with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	1.1852209568	996
Coq.Reals.Rtrigo1.PI_neq0	40	0.0.1.8	synth with cache (only 1: red; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.865820884705	368
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40	2.1.4.2.2.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: unfold Rsqr; only 1: rewrite cos_plus; only 1: ring).	10.9689099789	3781
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.0.1.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.254421949387	26
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.2.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.21027803421	41
Coq.Reals.Rtrigo1.sin_PI_x	40	0.5.0.0.0.9.0	synth with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_neg; only 1: ring).	6.04499793053	2882
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.14.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	9.77409100533	2211
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.0.1.0	synth with cache (only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.0589740276337	6
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.5.2	synth with cache (only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: destruct pi2_int; only 1: lra).	0.968903064728	170
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.20	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.335870981216	410
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.12432217598	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	7.3369038105	1674
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0280439853668	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	3.0	synth with cache (only 1: intros; only 1: assumption).	0.0289008617401	5
Coq.Reals.PartSum.scal_sum	40	9.15.0.1.2.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply Rmult_comm; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	14.0387420654	17296
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.129498004913	8
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.130589962006	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40	1.0.2.2.7.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite Rmult_1_r; only 1: reflexivity).	4.148209095	3672
Coq.Reals.PartSum.sum_growing	40	0.2.1.0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.29289293289	1838
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.839730024338	272
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.2	synth with cache (only 1: intros [| n| n]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0338799953461	6
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	3.11721205711	1950
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.3	synth with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0392439365387	27
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.3.0.3.1.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.484521150589	346
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	3.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: apply H; only 1: apply H).	0.438189983368	119
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	1.5.4.0.1.1.2	synth with cache (only 1: intros x y lpo; only 1: intro; only 1: destruct H; only 1: intro; only 1: apply (CReal_lt_le_trans _ x); only 1: assumption; only 1: assumption).	11.6515069008	3112
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	3.0.5.0.5.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: apply H; only 1: assumption).	1.71316790581	1494
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	3.0.4.0.6.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	1.56664896011	1324
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.1.0.0.0.0.0.1.0.0.1	synth with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	1.36033916473	949
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	40	synth with cache (only 1: assumption).	0.302237033844	1251
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.4.0.0.0.0.0.14	synth with cache (only 1: intros; only 1: rewrite <- (Nat.mul_1_l n); only 1: apply Nat.mul_le_mono_nonneg; only 1: auto; only 1: apply H; only 1: apply Nat.le_0_l; only 1: rewrite Nat.mul_1_l; only 1: apply Nat.le_refl).	1.60761499405	1834
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	4.1.9.6.0	synth with cache (only 1: intros x y z H; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	4.7753341198	3776
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.242280960083	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	1.57802009583	619
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	0.2.0.0.0.0.0.0.0.1.0.3	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).	18.8900790215	4510
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	11	synth with cache (only 1: apply CReal_plus_0_l).	3.1956410408	209
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	0.0.0.0.1.0.0.0.0.1.1	synth with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	26.1134009361	1594
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	synth with cache (only 1: reflexivity).	0.0186109542847	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	3.4.15.33	synth with cache (only 1: unfold SFL, sin; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	2.87346601486	4746
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0495641231537	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	2.0.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	1.11743593216	118
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.0.0	synth with cache (only 1: intro; only 1: apply pow_nonzero; only 1: discrR).	0.0357220172882	3
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	0.0813689231873	10
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	3.8.2.1.1.1	synth with cache (only 1: intro; only 1: destruct (Rsqrt_exists x (cond_nonneg x)) as (x0, (H1, H2)); only 1: unfold Rsqrt; only 1: destruct (Rsqrt_exists x (cond_nonneg x)) as (?, []); only 1: symmetry; only 1: assumption).	15.1842319965	6020
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0.1	synth with cache (only 1: intros; only 1: intuition).	0.035612821579	3
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	3	synth with cache (only 1: auto).	0.0239229202271	4
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0257759094238	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros m1 m2; only 1: functional induction (merge m1 m2); only 1: intros; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	5.58136796951	2264
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0455868244171	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	48.10	synth with cache (only 1: intros z Hz; only 1: inversion_clear 1).	13.8042759895	18365
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	8.0.0.4	synth with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	1.05873894691	1226
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	0.0.0.0.2.3.0.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	2.25655984879	1328
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	9.9.9.58.0.23	synth with cache (only 1: intros m; only 1: intuition; only 1: induction m; only 1: LO.cmp_solve; only 1: LO.cmp_solve; only 1: LO.cmp_solve).	24.5008859634	92526
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.2	synth with cache (only 1: red; only 1: intuition).	0.0400660037994	4
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1	synth with cache (only 1: intuition).	0.0491251945496	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	3.3.2.8.26.1.2	synth with cache (only 1: intros; only 1: induction m; only 1: inversion_clear H; only 1: inversion_clear H; only 1: auto; only 1: intuition; only 1: intuition).	5.76727581024	11921
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	0.1.2.0.1.2.0.1.3.0.0.0.11.30.5.3.11	synth with cache (only 1: split; only 1: induction 1; only 1: induction m; only 1: inversion_clear H; only 1: inversion_clear H; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	19.8785362244	79145
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.0.0.0.2	synth with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.441130876541	17
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	6	synth with cache (only 1: intuition_in).	0.0940971374512	12
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	11.84	synth with cache (only 1: intros m x y; only 1: intuition_in).	4.58501601219	12634
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	0.84	synth with cache (only 1: intros m x y; only 1: intuition_in).	4.67769193649	12219
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	0.0.22.6	synth with cache (only 1: intros m x y; only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	8.86747002602	2105
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0.0	synth with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0305740833282	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0252079963684	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0254950523376	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0255858898163	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40	0.13.0.0.7	synth with cache (only 1: induction m; only 1: unfold lt_tree; only 1: intuition_in; only 1: intuition; only 1: order).	26.1027710438	3624
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	1.1.0.3.0	synth with cache (only 1: intros m x y; only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0441701412201	10
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0394020080566	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0381691455841	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	11	synth with cache (only 1: trivial).	0.0289278030396	33
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	1.48.0	synth with cache (only 1: unfold empty; only 1: intros m x y; only 1: intuition_in).	1.24908590317	3254
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	7.0.0.0.1.5.0	synth with cache (only 1: destruct m as [| r x e l h]; only 1: intro H; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: intro H; only 1: discriminate).	1.9019370079	1300
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	1.0.1.0.0.1.0	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.114667892456	19
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	0.0.0.11.0.2.0	synth with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: intros; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	4.55859804153	1778
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40	0.0.0.4.0.0.0.0.0.0.4.1	synth with cache (only 1: split; only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	5.23242998123	3201
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.0.0.0.8.0.1	synth with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: constructor 2; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	7.32008600235	1345
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	0.1	synth with cache (only 1: unfold create; only 1: intuition_in).	0.149538040161	12
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40	6.5.0.0.0.0.0.0	synth with cache (only 1: induction s as [| l Hl x e r Hr h]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: rewrite Hl; only 1: simpl; only 1: intuition).	13.3707880974	8224
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.0.0	synth with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.055449962616	5
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	0.2.0.0.0.5.0.2.8	synth with cache (only 1: intros x e0 y0 H H6; only 1: intros; only 1: red; only 1: simpl; only 1: destruct X.compare; only 1: auto; only 1: rewrite H0; only 1: auto; only 1: auto).	22.1488900185	12304
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.0.0.0.0.0.4.2.3.0.4	synth with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: intros Bs; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	5.05194091797	3941
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	0.0.0.0.0.4.0	synth with cache (only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.499767065048	122
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.108709812164	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	49.9	synth with cache (only 1: intros z Hz; only 1: inversion_clear 1).	7.60208487511	9511
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	1.6.0.1	synth with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros; only 1: rewrite <- elements_mapsto; only 1: auto).	0.203309059143	176
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	1.0.0.1.0.2.0.0	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion_clear H).	0.240703821182	187
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	0.3.0	synth with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0545680522919	22
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	0	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0258591175079	1
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.4.0.18.34.54	synth with cache (only 1: intros m; only 1: induction m; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: auto).	2.00233101845	14759
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1.1	synth with cache (only 1: intros; only 1: intuition).	0.0771610736847	26
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1	synth with cache (only 1: intuition).	0.0414597988129	2
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	6	synth with cache (only 1: intuition).	0.0592901706696	31
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	14.39	synth with cache (only 1: Ndec.eqb2eq; only 1: intuition).	10.7836551666	35997
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	3.3.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0442008972168	11
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	2	synth with cache (only 1: intuition).	0.0627310276031	17
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	3.3.1	synth with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.197948932648	60
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	3.3.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0274720191956	9
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.17	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	1.24125790596	2482
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	1	synth with cache (only 1: intuition).	0.136955022812	33
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	4	synth with cache (only 1: intuition).	0.153532028198	38
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	6	synth with cache (only 1: intuition).	0.126996040344	32
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	5.2	synth with cache (only 1: rewrite mem_iff; only 1: intuition).	0.129199028015	33
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.1.1	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.139910936356	10
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.65392708778	243
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	10.2.0.1.0.0.1.0.0.1	synth with cache (only 1: constructor; only 1: red; only 1: intros; only 1: auto; only 1: red; only 1: intros x y H; only 1: auto; only 1: red; only 1: intros; only 1: eauto).	1.20933794975	3573
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.0.4.10	synth with cache (only 1: intros; only 1: unfold Equal, Subset; only 1: intros; only 1: auto).	0.0953040122986	170
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.14.9	synth with cache (only 1: intros y z H1 H2; only 1: red; only 1: auto).	1.01368689537	1426
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	2.0.0.2.1	synth with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: clear H0; only 1: rewrite (In_eq_iff s' H); only 1: intuition).	0.0950448513031	24
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.4.11	synth with cache (only 1: unfold Empty; only 1: red; only 1: eauto).	4.07197213173	1712
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	4.0.0.2	synth with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: intuition; only 1: eauto with set).	0.333921194077	37
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.3.2.0.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: rewrite H; only 1: do 2 rewrite remove_iff; only 1: intuition).	0.210230112076	20
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	0.0.0.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.0828719139099	4
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.2.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.100538015366	26
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.5.1	synth with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0869028568268	18
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	6.0.4	synth with cache (only 1: repeat red; only 1: intros; only 1: eauto with set).	1.00563406944	385
Coq.FSets.FSetPositive.PositiveSet.In_1	40	3.0.17.3	synth with cache (only 1: intros; only 1: inversion H; only 1: subst y; only 1: auto).	15.7718219757	3997
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0.2.13	synth with cache (only 1: intros y LT; only 1: constructor; only 1: trivial; only 1: trivial).	0.0536229610443	285
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	29	synth with cache (only 1: now subst).	1.88028216362	5253
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.0.0.7	synth with cache (only 1: induction x; only 1: trivial; only 1: trivial; only 1: trivial).	0.0372629165649	42
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	synth with cache (only 1: unfold In; only 1: trivial).	0.0091860294342	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	3.2	synth with cache (only 1: intros; only 1: trivial).	0.00925707817078	7
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	6.0.1	synth with cache (only 1: intros EQ; only 1: unfold In; only 1: intuition).	0.0147650241852	11
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.0	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0146548748016	3
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	32	synth with cache (only 1: now subst).	5.37796998024	9481
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.1.0	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0388300418854	7
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.2.0	synth with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0341219902039	8
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	0.0.0.3.1.3.28.5.5	synth with cache (only 1: intros x l o r; only 1: intros H; only 1: subst; only 1: intros H; only 1: inversion H; only 1: destruct o; only 1: auto; only 1: auto; only 1: auto).	17.1326088905	65868
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0108458995819	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.4.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0112869739532	8
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0102980136871	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0106010437012	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0104150772095	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	3.0.1.5	synth with cache (only 1: intros [| l' o' r']; only 1: simpl; only 1: tauto; only 1: trivial).	0.419527053833	349
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	5.8.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: unfold In; only 1: intuition discriminate).	0.842147827148	1258
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	3.3.0	synth with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0196189880371	9
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	2.2.17	synth with cache (only 1: intros a b c; only 1: rewrite remove_spec; only 1: tauto).	1.74549007416	2770
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	synth with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0222618579865	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.9.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.716253995895	557
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0142738819122	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	1.0.2	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.273098945618	154
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0146300792694	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.2	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.268681049347	122
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0171799659729	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0203769207001	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.1.1.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0171499252319	6
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.2.2.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0171658992767	8
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0101270675659	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	0.2.25.0.25.0.13.0	synth with cache (only 1: intros; only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	16.032212019	56628
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0349998474121	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.1.1.2	synth with cache (only 1: induction i; only 1: now simpl; only 1: now simpl; only 1: now simpl).	0.0315968990326	17
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0338928699493	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0361199378967	8
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	13.370912075	7750
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	2.0.0.0.0.1	synth with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto).	0.224909067154	68
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	16	synth with cache (only 1: congruence).	0.167917013168	246
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	2	synth with cache (only 1: auto).	0.0199069976807	3
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0232310295105	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	2.6	synth with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.13719201088	71
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	0.0.2.3.0	synth with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0617051124573	26
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: unfold map; only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	5.41977000237	3822
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	33.8362908363	21360
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40	0.0.13.0.1.1.3	synth with cache (only 1: induction m; only 1: simpl; only 1: intros; only 1: auto; only 1: intuition; only 1: simpl; only 1: congruence).	3.76648688316	7312
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	1.4.0.4.0	synth with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.105494976044	183
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	7.5	synth with cache (only 1: intros; only 1: intuition).	0.272308111191	292
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	7.0.0	synth with cache (only 1: intros; only 1: generalize (mem_in_iff m x); only 1: intuition).	0.153532028198	27
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.1.17.2.5.3.0	synth with cache (only 1: intuition; only 1: elim H; only 1: intuition; only 1: elim H; only 1: clear H H0; only 1: intuition; only 1: apply (empty_1 H)).	19.4194629192	25314
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	3.2	synth with cache (only 1: intros; only 1: intuition).	0.0590829849243	18
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.2.1	synth with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.0679638385773	35
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	0.0.0.4.3.0.0.0.6.4.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	20.424339056	33114
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.8	synth with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.253236055374	179
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.1.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	0.483855009079	420
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	0.0.1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: elim H; only 1: discriminate).	0.597004890442	334
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0.0	synth with cache (only 1: intros; only 1: auto with map).	0.0208268165588	2
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	1.0.0.2.0.7.2	synth with cache (only 1: intros; only 1: intuition; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply (add_3 H H0)).	0.903212070465	760
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	0.0.0.0.0.1.11.1	synth with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	6.73693799973	4132
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.0.1.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.104383945465	12
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.103479146957	12
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	0.0.0.0.0.0.0.1.2.1.0.1	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: simpl; only 1: rewrite remove_eq_o; only 1: auto; only 1: auto; only 1: simpl; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	4.1167910099	2084
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro k; only 1: rewrite eq_option_alt; only 1: intro e; only 1: split; only 1: auto; only 1: auto).	0.0333819389343	7
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	1.0.1	synth with cache (only 1: intuition; only 1: intro k; only 1: auto).	0.125739097595	36
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.2.3.0	synth with cache (only 1: unfold Equal; only 1: intuition; only 1: rewrite <- H0; only 1: auto with map).	0.0861880779266	24
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	5	synth with cache (only 1: dintuition).	0.102910995483	25
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.2.0.4.0	synth with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	0.63985991478	190
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40	12.0.28	synth with cache (only 1: compute; only 1: dintuition; only 1: eauto).	3.90854787827	5053
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	1.0.2.0.0.0	synth with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0342690944672	9
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40	0.0.0.0.0.0.1.8.5.0	synth with cache (only 1: intros i m k e Hnotin; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Add; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: red; only 1: auto).	3.22927594185	2818
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	0.1.11	synth with cache (only 1: intros e'; only 1: rewrite <- cardinal_Empty; only 1: intuition).	2.02520012856	1157
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	3.0.0.6	synth with cache (only 1: unfold Disjoint; only 1: intuition; only 1: apply H with k; only 1: auto).	1.09464812279	546
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.206301927567	87
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40	1.0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite elements_Empty; only 1: unfold min_elt in *; only 1: destruct (elements m); only 1: auto; only 1: destruct p; only 1: discriminate).	0.628334999084	303
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	7.2.40	synth with cache (only 1: red; only 1: unfold PX.MapsTo in *; only 1: inversion 1).	3.239798069	3631
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.22	synth with cache (only 1: unfold Empty, empty; only 1: intuition).	0.0831370353699	255
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	0.4.3.0.6.1	synth with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: destruct p; only 1: intros p l inlist; only 1: intuition).	8.89076900482	6670
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.In, PX.MapsTo; only 1: functional induction (remove x m); only 1: auto; only 1: intros NoDup hyp; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	7.31683087349	2480
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.0984208583832	8
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	2.1.0	synth with cache (only 1: intros m; only 1: unfold PX.MapsTo; only 1: auto).	0.0245800018311	6
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0147631168365	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	1.0	synth with cache (only 1: intros; only 1: auto).	0.0205199718475	3
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	81	synth with cache (only 1: inversion_clear 1).	0.383659124374	3368
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	1	synth with cache (only 1: auto).	0.0217049121857	11
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0176668167114	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	6.50	synth with cache (only 1: induction m; only 1: auto).	1.03902888298	5448
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	6	synth with cache (only 1: auto).	0.020271062851	16
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.2.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite elements_iff; only 1: apply elements_iff).	0.0558159351349	15
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: compute; only 1: auto with extcore).	0.0200109481812	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	2.2.4.1	synth with cache (only 1: compute; only 1: intuition; only 1: eauto with set; only 1: eauto with set).	1.80224084854	483
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	3.0.4.0.1	synth with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.333927869797	137
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.5.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	1.02528691292	496
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.5.1	synth with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.348374128342	61
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	1.971118927	602
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.0.0.0.2.0.1.0.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	4.53814506531	1674
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.9.5.1	synth with cache (only 1: generalize (mem_iff s x), (mem_iff s' y); only 1: intuition; only 1: rewrite <- H1; only 1: auto).	6.69810605049	4867
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	3.3	synth with cache (only 1: intros; only 1: auto with set).	0.171532869339	75
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.0211730003357	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	1	synth with cache (only 1: auto with set).	0.0218291282654	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	3.4.14.0	synth with cache (only 1: intro H; only 1: apply eq_true_iff_eq; only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	11.2807431221	5792
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: eauto with set).	0.0249619483948	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.0190169811249	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0682859420776	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto).	0.181473970413	72
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0712640285492	29
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	4.1.0.4.1.0.0.11	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	1.6033680439	1363
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0291728973389	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0280590057373	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	1.0.1.0.0.0.0	synth with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: apply subset_2; only 1: apply subset_1; only 1: unfold Subset; only 1: intuition).	0.0358688831329	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0295159816742	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	22.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: do 2 rewrite mem_iff; only 1: eauto with set).	32.6349141598	22303
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	4.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0368010997772	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0.1	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.0616819858551	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.0196919441223	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	1.3.2	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: apply subset_2; only 1: auto with set).	0.143940925598	14
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	0.7	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.118995904922	23
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40	1.11	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.907784938812	259
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40	0.0.0.0.0.0.9.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	2.77929615974	1806
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	0	synth with cache (only 1: auto with set).	0.0185370445251	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0282869338989	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	0.3.0.0.1.2	synth with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: auto; only 1: intuition; only 1: discriminate).	0.244920015335	165
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: auto with set).	0.0185589790344	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0270071029663	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0198690891266	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0199179649353	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0179059505463	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0988349914551	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0183520317078	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: auto with set).	0.017578125	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.017765045166	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0907809734344	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0183990001678	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0219810009003	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0198180675507	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0200591087341	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0179328918457	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0181868076324	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0180299282074	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0268130302429	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.9	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.339824914932	81
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0178549289703	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0178430080414	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0478870868683	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0177907943726	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0219128131866	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0183629989624	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0180299282074	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0180480480194	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0236101150513	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.0551760196686	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.2.0.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.777017831802	288
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	synth with cache (only 1: auto with set fset).	0.0196959972382	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0492780208588	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0493330955505	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	2.8.2	synth with cache (only 1: intros H a; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.608552932739	302
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.214071035385	126
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	1	synth with cache (only 1: auto with set fset).	0.0550289154053	20
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0.7.0.11	synth with cache (only 1: repeat red; only 1: intros; only 1: rewrite H; only 1: auto).	1.31117606163	345
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	16.0	synth with cache (only 1: intros; only 1: auto with set).	12.3466711044	5842
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0571050643921	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	0.0.0.0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: unfold Add, MP.Add; only 1: red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	15.1104362011	2868
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40	0.0.0.1.0.0.0.2.1	synth with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	1.7488219738	411
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	5.0.0.0.0.0.1.0.0.4.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: auto with set).	6.33659005165	4563
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.11.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	1.26239299774	1173
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.0.0.1	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0306558609009	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40	2.0.1.3.0.9.1.0.6	synth with cache (only 1: intro H; only 1: intros; only 1: apply fold_rel with (R := eqA); only 1: auto with *; only 1: intros; only 1: rewrite <- H2; only 1: auto; only 1: auto with *; only 1: auto).	10.6870720387	15176
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	20.0.16	synth with cache (only 1: simpl; only 1: intros; only 1: eauto with set).	38.0943307877	43875
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	9.1.8	synth with cache (only 1: simpl; only 1: intros; only 1: eauto with set).	0.51801109314	613
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	1.0.0.2.0.1	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intuition; only 1: discriminate H).	0.0792632102966	43
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.3.1.1	synth with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.4920399189	270
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	1.4.0.0.0.0.1	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.617824077606	507
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.2.1	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0372180938721	17
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.0.0	synth with cache (only 1: firstorder; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0227580070496	4
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0	synth with cache (only 1: intros; only 1: firstorder).	0.034078836441	26
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.0380790233612	9
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	38.8863489628	1739
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.2.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.0571072101593	18
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0240330696106	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.4.1	synth with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0581760406494	37
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.1.0.0.1.0	synth with cache (only 1: intros s x y; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.034952878952	9
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.1.1	synth with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0342559814453	16
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	synth with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0195150375366	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0.1	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.singleton x); only 1: case (M.union s s'); only 1: firstorder).	0.0491721630096	22
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0209231376648	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0209920406342	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.1.0.0.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.union s s'); only 1: firstorder; only 1: case (M.remove x s); only 1: firstorder; only 1: case (M.inter s s'); only 1: firstorder).	0.415569067001	13
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0221860408783	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.2.0.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.inter s s'); only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).	0.356737852097	31
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	2.1.7.4.14.1	synth with cache (only 1: intros; only 1: intros s x; only 1: intros; only 1: intros H'; only 1: rewrite <- (H _ _ H0); only 1: auto).	3.81587719917	5768
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.295168161392	6
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.33727812767	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0359079837799	6
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0342998504639	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	5.9.2	synth with cache (only 1: simpl_relation; only 1: rewrite H; only 1: intuition).	1.1901948452	1952
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	3.41.1	synth with cache (only 1: intuition; only 1: repeat red; only 1: intuition).	7.45141887665	29093
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	0.1.2.7	synth with cache (only 1: intuition; only 1: apply MF.mem_iff; only 1: apply MF.mem_iff; only 1: intuition).	0.54853105545	405
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.167906045914	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.0.0.0.2	synth with cache (only 1: split; only 1: apply In_1; only 1: auto; only 1: apply In_1; only 1: auto).	0.0536370277405	33
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.130919218063	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.0628907680511	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.028039932251	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0484919548035	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0500459671021	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.041974067688	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0312860012054	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.073902130127	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.054673910141	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0763401985168	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0478150844574	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0429849624634	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.4.1	synth with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.214619159698	16
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0594251155853	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0495529174805	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.0835359096527	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	1	synth with cache (only 1: intuition fsetdec).	0.180024862289	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.107432842255	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.130843877792	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.136359930038	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.142472028732	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0948431491852	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.293010950089	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0942230224609	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0756521224976	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.113546133041	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.110029935837	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: intuition fsetdec).	0.167695999146	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.09623503685	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.180855989456	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.324228048325	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.293552160263	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0387189388275	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.038321018219	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0605380535126	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0621249675751	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0655159950256	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0766201019287	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0737679004669	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	3	synth with cache (only 1: fsetdec).	0.134325027466	20
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0856220722198	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.073860168457	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.10608792305	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.105421066284	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.149046182632	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.198858976364	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.212193012238	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.182572126389	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.146586894989	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0539720058441	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0522439479828	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0385730266571	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0428609848022	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0554339885712	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0627880096436	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.076339006424	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0473778247833	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.110924959183	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.114280939102	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.171608924866	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.144455909729	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	1.3	synth with cache (only 1: red; only 1: fsetdec).	0.0880320072174	6
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.2	synth with cache (only 1: expAdd; only 1: fsetdec).	0.168220043182	4
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.238770961761	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.393967866898	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.34074306488	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.284064054489	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	1.0.0.1.0.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.175182819366	59
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	5.1.0.0.0.2.2	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	6.13656997681	2478
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	4.5.0.3.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: fsetdec).	2.20534420013	2144
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	1.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto with set; only 1: auto with *; only 1: auto with set).	0.0457589626312	15
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40	5.3.12.3.0.2.1.0.6.0	synth with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: simpl; only 1: auto with *; only 1: apply Comp; only 1: auto with *; only 1: auto).	8.66060090065	15414
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	5.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold Add in *; only 1: intros; only 1: fsetdec).	2.79576802254	1484
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0547111034393	9
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0308771133423	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	0.0.0.5.1.0	synth with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.317851066589	123
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.328832864761	141
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0	synth with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0188639163971	2
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	3.4.0	synth with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0489611625671	31
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	0.7	synth with cache (only 1: intro; only 1: intuition).	0.0664081573486	27
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0311040878296	5
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.5.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.661290884018	324
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.0447201728821	7
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0291101932526	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0296921730042	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	synth with cache (only 1: eauto).	0.0184500217438	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.165381908417	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0	synth with cache (only 1: intuition).	0.0149219036102	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	3.8	synth with cache (only 1: intro H; only 1: fsetdec).	1.4595990181	334
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	synth with cache (only 1: fsetdec).	0.0658149719238	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	synth with cache (only 1: fsetdec).	0.235247850418	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	1	synth with cache (only 1: fsetdec).	0.0234081745148	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	synth with cache (only 1: fsetdec).	0.0545380115509	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	1	synth with cache (only 1: fsetdec).	0.173854112625	66
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.0842959880829	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.127222061157	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.129801034927	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	synth with cache (only 1: fsetdec).	0.071524143219	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	synth with cache (only 1: fsetdec).	0.217717170715	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.27578997612	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	3.0.1	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0817730426788	25
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	0	synth with cache (only 1: fsetdec).	0.0808398723602	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.0809819698334	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0592498779297	1
Coq.FSets.FMapList.Raw.Elt.empty_1	40	1.1.26	synth with cache (only 1: compute; only 1: intros; only 1: invlist InA).	0.247087001801	472
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	4	synth with cache (only 1: constructor).	0.0130250453949	5
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	2.0.4.0.5.1	synth with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: unfold Empty, PX.MapsTo; only 1: intros (k, e) l inlist; only 1: intuition).	6.12178587914	1551
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40	1.4.0.0.0.1.0.0.0.0	synth with cache (only 1: intros m x y e e'; only 1: functional induction (add x e m); only 1: auto with ordered_type; only 1: intros sorted hyp; only 1: auto with ordered_type; only 1: intros sorted hyp; only 1: auto with ordered_type; only 1: intros sorted hyp; only 1: inversion_clear sorted; only 1: auto with ordered_type).	11.0956799984	2095
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	0.0.0.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	7.94684910774	3500
Coq.FSets.FMapList.Raw.Elt.elements_1	40	2.1.0	synth with cache (only 1: intros m; only 1: unfold PX.MapsTo; only 1: auto).	0.0224661827087	6
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: auto).	0.0133948326111	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	2.1.0.1.0	synth with cache (only 1: intros; only 1: generalize Hm; only 1: clear Hm; only 1: intros; only 1: auto).	0.0513792037964	23
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	11.5.0.0.0.2	synth with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: simpl; only 1: destruct a as (a', b'); only 1: auto).	17.2738289833	17848
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	2.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).	0.508788108826	151
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.0.0.0.1.0.0.1.4	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros y' e'' eqky'; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.43573594093	595
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	1.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear Hm; only 1: auto).	0.079302072525	12
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	6.9.20.20	synth with cache (only 1: red; only 1: red; only 1: unfold Raw.PX.MapsTo in *; only 1: inversion_clear 1).	0.909197807312	3029
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.016371011734	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0201981067657	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	5.43	synth with cache (only 1: induction m; only 1: auto).	0.852065086365	4525
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	5	synth with cache (only 1: auto).	0.0276660919189	20
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	1.17.2.20.0	synth with cache (only 1: intro x; only 1: apply Acc_rect; only 1: intros; only 1: split; only 1: auto).	1.48022985458	9082
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.0.10.3	synth with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).	0.0937299728394	200
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	2.14.1.5	synth with cache (only 1: simple induction 1; only 1: intros a l HInd; only 1: inversion_clear H; only 1: auto with sets).	10.6614379883	14279
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.1.2.1.1.6	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.187224149704	378
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	6.101	synth with cache (only 1: constructor; only 1: trivial).	3.77613282204	38263
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.0.4.2.11	synth with cache (only 1: induction 1; only 1: intros; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.941164016724	2474
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	4.1.1.0	synth with cache (only 1: red; only 1: intros y H2; only 1: apply Acc_intro; only 1: auto).	0.0155560970306	10
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	7.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: auto).	3.96209192276	4778
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.0.0.0.0.0.0.0.0.6.14	synth with cache (only 1: induction d; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	33.1880531311	42869
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	15.9772620201	14502
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.4.0	synth with cache (only 1: unfold unorm; only 1: destruct nzhead; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	10.7181630135	9271
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0	synth with cache (only 1: now induction d).	0.0155911445618	1
Coq.Numbers.DecimalFacts.norm_invol	40	4.4.34	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	1.74226903915	4564
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0184028148651	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2	synth with cache (only 1: auto).	0.0169389247894	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	synth with cache (only 1: reflexivity).	0.0169928073883	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0321600437164	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	10	synth with cache (only 1: now induction d).	1.27465510368	618
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	13.1.1.1	synth with cache (only 1: destruct d; only 1: unfold Pos.to_int, Pos.of_int, norm; only 1: now induction d; only 1: now induction d).	7.61784601212	7467
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.0	synth with cache (only 1: simpl; only 1: easy).	0.0169429779053	2
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.0.0.0	synth with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: simpl; only 1: f_equal).	0.0290439128876	5
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	2.6.0.0.0.0.2.1	synth with cache (only 1: destruct d; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: unfold Nat.of_uint; only 1: now induction d).	5.7402279377	4678
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	6.6.1.3	synth with cache (only 1: destruct n; only 1: split; only 1: simpl; only 1: now rewrite Unsigned.of_to).	2.3197259903	2144
Coq.Numbers.DecimalN.Unsigned.to_of	40	0.22	synth with cache (only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	2.20553898811	1925
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0233178138733	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0293049812317	3
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.0639641284943	13
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	1.0.0.2.0	synth with cache (only 1: simpl; only 1: exists (N.of_uint d); only 1: unfold N.to_int; only 1: f_equal; only 1: exact (DecimalPos.Unsigned.to_of d)).	0.0347871780396	8
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	2.0	synth with cache (only 1: intros m IH; only 1: tauto).	0.0179150104523	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	3.4.2.0.2.10	synth with cache (only 1: unfold Reflexive, Z.eq; only 1: intros x x' Hx y y' Hy; only 1: simpl in *; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *).	14.1311180592	2738
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.260883808136	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	7.0	synth with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: now nzsimpl).	0.25199007988	23
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0955281257629	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	3.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0977118015289	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	1.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.268177032471	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.0.0.0	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.270430088043	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	10.0.0	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl).	1.84184002876	502
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.181238174438	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.39244890213	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.0	synth with cache (only 1: intro n; only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.27009510994	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	8.8	synth with cache (only 1: intros n H; only 1: false_hyp H lt_irrefl).	1.42733311653	780
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0247790813446	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0246248245239	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0292510986328	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0241780281067	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.46.12	synth with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	6.46669602394	5297
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.2.15	synth with cache (only 1: intros p n m; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	9.30568885803	3267
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.10.0.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	11.1662168503	3628
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.046578168869	16
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.6.0	synth with cache (only 1: intros n m; only 1: apply opp_inj_wd; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0376689434052	9
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	5.9.2	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (mul_0_r a); only 1: now apply mul_le_mono_nonpos_l).	30.7707970142	12205
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0269701480865	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.0.14.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	28.2029509544	10477
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.2.0.1.0	synth with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	2.28743600845	709
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	3.51190495491	1404
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.3	synth with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.0940389633179	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.14.0	synth with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	6.24239110947	2980
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.061872959137	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0624821186066	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0729730129242	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	1.0.13.1.0.0.0.3.1	synth with cache (only 1: split; only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros EQ; only 1: rewrite EQ; only 1: bitwise; only 1: apply xorb_nilpotent).	35.8638081551	21277
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0261359214783	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	8.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: split).	0.154232025146	80
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0264990329742	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	2.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: split).	0.745842933655	357
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0260808467865	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0270209312439	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.0.0.16	synth with cache (only 1: unfold setbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	5.98789620399	3161
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.16	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	3.542937994	1797
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	27.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.58490109444	2705
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	10.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.394964933395	214
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0267448425293	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.039831161499	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0327541828156	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0277910232544	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	11.4.0.0.0.3.1	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro EQ; only 1: now rewrite EQ).	7.47113180161	7782
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.109930992126	14
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	5.0.0.0.5.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	2.95158600807	2005
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.1.8.1.0	synth with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	4.72660207748	3187
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.3.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0841958522797	21
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.1.1.14.0	synth with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	37.888092041	14210
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	1.0.2.7.1	synth with cache (only 1: intros a b Hb; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: order; only 1: apply gcd_divide_r).	14.0451610088	4653
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	9.0	synth with cache (only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	0.22393989563	110
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.1.1.6.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.505200147629	239
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0377540588379	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.1.0.3.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.457614898682	216
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0290532112122	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0284519195557	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.4.0.1.0.1	synth with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	3.74226307869	1908
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	1.0.0.0.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: now transitivity m; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	10.4596269131	5547
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0318899154663	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.4.4.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	13.2273271084	11655
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	6.0.0.0.6.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	4.91569805145	3802
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.3.0.4.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	0.518886089325	284
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	0.1.5.0.0.2.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	1.56729483604	1123
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.0.4.2.0	synth with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	0.308805942535	155
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.107394933701	25
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	0.86493396759	306
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	6.68093395233	3644
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.7264790535	1317
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.3.1.0.1.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	9.32820987701	6320
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.5.0.0.0.6.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	6.74606800079	4941
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	9.97566986084	6943
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	0.0.0.3.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	6.46526503563	3997
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.46829891205	831
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.0.1.0.3.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r).	3.90281200409	2061
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	3.3.3.7.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	1.00880098343	1117
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	4.5.4.9.0	synth with cache (only 1: intro; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	1.78561782837	2450
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.0.0	synth with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0796060562134	4
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	16.1.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.19431304932	944
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	22.0.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	2.02975678444	2062
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	2.0.9.0.1	synth with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: rewrite lt_succ_r; only 1: now nzsimpl).	3.68948197365	2153
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.21.0	synth with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	2.55474305153	2792
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0226309299469	4
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	1.1.8.3	synth with cache (only 1: intros n m; only 1: rewrite <- lt_le_pred; only 1: intro H; only 1: now apply lt_le_incl).	2.04937314987	1707
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0206201076508	3
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0677139759064	15
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.8.0	synth with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	1.04763007164	452
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.3.3	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.143643856049	53
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0208270549774	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0217509269714	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.0.0	synth with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0261170864105	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.0.2	synth with cache (only 1: rewrite abs_eq; only 1: order; only 1: order).	0.0133669376373	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	0.2.11.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: reflexivity).	0.959364891052	675
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	27.11.0.1.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: now rewrite opp_involutive).	12.799120903	22189
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0745780467987	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.5.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0203549861908	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.2.3.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0302159786224	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0132791996002	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.0352330207825	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).	0.242575883865	46
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.7.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	1.12927699089	924
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0535368919373	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.42680501938	388
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.3.0.0.0.1.0.2.0.1.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	4.44722104073	2770
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0252480506897	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	11.215970993	6060
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.5.2.0.2.1.0.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	9.46632289886	7334
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0253748893738	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.0.3.0.1.2.5.0	synth with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: apply mod_pos_bound; only 1: order; only 1: right; only 1: apply mod_neg_bound; only 1: order).	5.65200901031	4511
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0472550392151	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.131448984146	28
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.0998909473419	38
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0253849029541	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0254130363464	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.1.0.1.0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	6.75833106041	3593
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.0.0.2.1.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	1.40879297256	692
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.477606058121	148
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.619356870651	95
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.5.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.554150104523	133
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: trivial).	0.0512969493866	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0818932056427	22
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0353310108185	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0318109989166	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.0309889316559	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0423631668091	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.1.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	18.5203211308	8264
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.5.1.0.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.22331905365	1244
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.147986888885	47
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	1.9.2	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	1.16681599617	705
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	3.83263397217	816
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto).	1.80881786346	450
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.365651845932	43
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.2.3.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.579050064087	89
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.0497679710388	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.6.5.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	7.53418207169	2294
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.1.7.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.353581905365	180
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	1.0.2.1.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	1.06483888626	188
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: trivial; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: trivial; only 1: apply Private_NZDiv.mul_div_le; only 1: trivial).	0.0654950141907	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	3.5.1.9.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzsimpl; only 1: rewrite <- add_opp_r; only 1: now f_equiv).	9.42811083794	6594
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.2.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0364429950714	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.4.2.3	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	4.01409316063	1679
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.12.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite !add_assoc; only 1: now rewrite add_comm).	4.00646090508	1514
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.0.0.1.0.0	synth with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	0.0412969589233	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0208630561829	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0370681285858	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.12.3.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite !add_assoc; only 1: now rewrite opp_involutive).	9.84086918831	3205
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.1.22.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	18.6174399853	11059
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0324039459229	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.5.2.2.10.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: rewrite add_pred_l; only 1: now rewrite pred_inj_wd).	10.1676018238	5423
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	3.0.0.5.15.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	6.83421707153	8702
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	3.34.0	synth with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	38.1640901566	35263
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.8.0	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.221105098724	56
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	1.8.0	synth with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.748945951462	209
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	14.0	synth with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	2.49872779846	1191
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.19.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	6.94906210899	4362
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.0.0.2	synth with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.16735291481	36
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0260329246521	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.13.0	synth with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	1.73969316483	830
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.13.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.02949500084	450
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	1.2.0.0.14.1.10	synth with cache (only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: now nzsimpl).	8.15277814865	16637
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.0.1.8	synth with cache (only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.58503985405	449
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.4.0.0.1	synth with cache (only 1: intros a b (Hb, Hab); only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.700335979462	178
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.434286832809	105
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0999300479889	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	1.0.0.7.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	9.76285481453	8194
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0832028388977	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0267038345337	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0260441303253	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.13698887825	68
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.2.0.0.2.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	0.501903772354	146
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.578401088715	89
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.5.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.528016090393	133
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	5.0.3.2.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	0.832985162735	358
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0366997718811	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0353720188141	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	0.0366780757904	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0455729961395	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	22.7550001144	8623
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.157984972	37
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0932569503784	23
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	1.8.2	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	1.47949504852	687
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.3.4.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	2.12517404556	544
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: order).	0.448312997818	62
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.475466966629	44
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.4.6.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	6.01975393295	1899
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.0518519878387	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.5.6.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	11.07158494	3376
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.1.6.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.211847066879	107
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.2.1.0.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	1.12137317657	191
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: trivial; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: trivial; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.898056983948	230
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	3.0	synth with cache (only 1: intros a b Ha H; only 1: BinInt.Z.order).	0.0197620391846	5
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.0.0.0.1.0.0	synth with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.0832991600037	10
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	35.1	synth with cache (only 1: intros; only 1: ring).	9.27477812767	7451
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	3.1.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0312299728394	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0298550128937	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0.0	synth with cache (only 1: destruct x; only 1: auto).	0.040335893631	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.0.1	synth with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0327620506287	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0188798904419	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.0.0.0.0.0.1	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0463149547577	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0427429676056	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0335550308228	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.0.1	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	1.04137516022	13
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0339291095734	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct x; only 1: simpl; only 1: intro H; only 1: injection H; only 1: intros; only 1: subst; only 1: auto).	0.0517461299896	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	3.8.0.0.4	synth with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	4.95697784424	3045
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40	1.1.0.2.2	synth with cache (only 1: destruct x; only 1: compute; only 1: intros; only 1: rewrite H; only 1: auto).	0.698296070099	128
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40	0.9.1	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.745465993881	194
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	0.0.1	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.0296890735626	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	6.2	synth with cache (only 1: intros; only 1: now split).	0.024759054184	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.0	synth with cache (only 1: destruct x; only 1: auto).	0.0253961086273	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	2.1.0	synth with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0308260917664	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	1.9	synth with cache (only 1: destruct x; only 1: auto).	7.11678099632	104
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	0.0.0	synth with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.032478094101	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	synth with cache (only 1: auto with zarith).	0.0546050071716	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0	synth with cache (only 1: auto).	0.0177979469299	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0	synth with cache (only 1: reflexivity).	0.0180020332336	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0	synth with cache (only 1: auto).	0.0171728134155	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.0172829627991	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.1	synth with cache (only 1: simpl; only 1: reflexivity).	0.0351409912109	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.0.0	synth with cache (only 1: intros n; only 1: elim n; only 1: auto).	0.0289671421051	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	2.0.2.0	synth with cache (only 1: intros; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: auto with zarith).	0.0422730445862	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0231258869171	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.0.2	synth with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.203175067902	22
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	3.1.0	synth with cache (only 1: intros; only 1: pattern x at 1; only 1: apply phi_phi_inv).	0.0715219974518	17
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	synth with cache (only 1: intros; only 1: apply spec_sub_c).	0.0243878364563	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0823400020599	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.023738861084	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40	1.1.9.0.0.0.0	synth with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: intros; only 1: nia).	22.1048109531	5186
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0504682064056	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	15	synth with cache (only 1: lia).	0.172863960266	91
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0351748466492	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0367550849915	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.3.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0465059280396	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40	0.0.3.0.3.2.2.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: easy; only 1: auto with zarith).	7.04181599617	5070
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.2.0.0	synth with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.115149974823	32
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0	synth with cache (only 1: auto).	0.0205788612366	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	2.10.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	1.0912399292	624
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	2.4.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0468389987946	10
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	2.4.12.0.0	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite Zminus_mod_idemp_r; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	5.64269685745	4210
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40	0.0.0.0.1.0.13	synth with cache (only 1: destruct 1; only 1: intros; only 1: apply Zmod_small; only 1: assert ([|b|] > 0) by lia; only 1: generalize (Z_mod_lt [|a|] [|b|] H0), (Z_mod_lt b wB wB_pos); only 1: fold [|b|]; only 1: lia).	27.7801380157	9964
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.1.0	synth with cache (only 1: intros; only 1: unfold add_carry, to_Z; only 1: auto).	0.0493719577789	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	5.0.9	synth with cache (only 1: compute; only 1: intros x ->; only 1: apply spec_zdigits).	5.92908191681	627
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	5.84692215919	1101
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	2.3.1	synth with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: auto with zarith).	0.0342018604279	9
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	8.5.8	synth with cache (only 1: intro; only 1: Ztac.normZ; only 1: auto).	0.678216934204	555
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.2	synth with cache (only 1: compute; only 1: auto).	0.0736830234528	4
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	12	synth with cache (only 1: auto).	0.0601940155029	46
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: trivial).	0.0199220180511	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	1	synth with cache (only 1: congruence).	0.0197830200195	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	2.1.0	synth with cache (only 1: intros x y H; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0817358493805	6
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0326890945435	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	0.0.0.0.0.14.4.2.0.0.0.1	synth with cache (only 1: intros; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: generalize (eqb_correct i i); only 1: intros; only 1: compute; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).	30.8292639256	34126
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.1.2.0.2	synth with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.260287046432	92
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	23.0.1	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: apply f_equal).	17.0104539394	3120
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	synth with cache (only 1: apply subc_spec).	0.0202131271362	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	synth with cache (only 1: apply sub_spec).	0.0331280231476	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.022961139679	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0438148975372	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	15.0.0	synth with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: auto with zarith).	0.944135904312	1190
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	15.0.0	synth with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: now case eqbP).	1.41584992409	1261
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	3.1.1.0	synth with cache (only 1: unfold is_even; only 1: apply eq_sym; only 1: apply eq_sym; only 1: auto).	0.0476861000061	16
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40	4.0.0.1.7.12	synth with cache (only 1: case (to_Z_bounded j); only 1: intros _ Hj1; only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: ring).	39.4463448524	26791
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.0.0.5.1.8.2.11	synth with cache (only 1: case (to_Z_bounded i); only 1: intros H1i H2i; only 1: pose proof (to_Z_bounded i) as W; only 1: assert (0 <= φ (i) / 2) by (apply Z_div_pos; auto with zarith); only 1: assert (0 <= φ (i) / 2) by (apply Z_div_pos; auto with zarith); only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: ring).	26.6338531971	30682
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	3.2.0.0.7.16	synth with cache (only 1: case (to_Z_bounded j); only 1: intros _ Hj1; only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lxor_spec, xorb_comm; only 1: ring).	17.4688301086	15800
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	4.33.1.1	synth with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: auto with zarith).	7.86527991295	13285
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	1.26.0.0	synth with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: auto with zarith).	4.60630202293	5272
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	1.1.1.0.0.0.1	synth with cache (only 1: intros f w; only 1: unfold eqb, eq; only 1: rewrite ZnZ.spec_compare; only 1: case Z.compare_spec; only 1: easy || lia; only 1: easy || lia; only 1: easy || lia).	0.446563005447	152
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.0.0.1.1.0.78	synth with cache (only 1: repeat split; only 1: compute; only 1: intros n w1; only 1: auto with zarith; only 1: compute; only 1: intros f1 Hf1 f2 Hf2; only 1: auto with zarith).	9.75399899483	12553
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	0.0.1.3	synth with cache (only 1: unfold base; only 1: apply Z.pow_gt_1; only 1: easy; only 1: lia).	0.058669090271	8
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	1.0	synth with cache (only 1: unfold base; only 1: auto with zarith).	0.0219049453735	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	0.0.1.12.1	synth with cache (only 1: zify; only 1: pose proof gt_wB_1; only 1: rewrite Zmod_small; only 1: lia; only 1: lia).	0.908672094345	584
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	5.0	synth with cache (only 1: zify; only 1: auto).	0.588716030121	32
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	3	synth with cache (only 1: eauto).	0.0412650108337	4
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	3.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: apply NZ_to_Z_mod).	0.104462862015	11
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	13.0.0	synth with cache (only 1: intro n; only 1: zify; only 1: auto with zarith).	1.15968298912	663
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.2	synth with cache (only 1: simpl; only 1: auto).	0.0208160877228	4
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	3.0	synth with cache (only 1: unfold int_of_string; only 1: trivial).	0.0240478515625	5
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.016371011734	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: constructor; only 1: now exists 0; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).	1.71801304817	1308
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: now rewrite <- PeanoNat.Nat.odd_spec; only 1: inversion_clear 1; only 1: split; only 1: do 2 constructor; only 1: now exists 0; only 1: rewrite PeanoNat.Nat.Odd_succ_succ, <- odd_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1; only 1: now inversion_clear H0).	1.36050081253	1189
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	1.6.0	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.0396709442139	23
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.6.21.0	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	3.27432084084	6030
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.11.0.0.1.0.1.0	synth with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).	17.4454929829	19548
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.0.3.1	synth with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.145128011703	95
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.0.0.0.0.0.0.18.0.3	synth with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: now apply eq_le_incl).	34.4633078575	41853
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	3.0.13.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).	7.30725693703	2525
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intros; only 1: now rewrite pred_succ).	0.038213968277	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	0.3.8.0.0.2.6	synth with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: nzsimpl; only 1: apply le_le_succ_r; only 1: order).	19.9522049427	24737
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.0.4.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.119608879089	30
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	4.4.0.0.9.0.2	synth with cache (only 1: cases ltac:(n); only 1: intros m H; only 1: apply le_0_l; only 1: intro n; only 1: intros H; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	24.3673801422	32512
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	0.6.5.0.0.0.0.2	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros H; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	9.91917800903	9487
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.1.0.0.0.2.0.0.12.0.3	synth with cache (only 1: intros n IH; only 1: intro H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply eq_le_incl; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_trans with (P m); only 1: assumption; only 1: apply le_pred_l).	38.6939351559	47479
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	3.0.0.2.1	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.146871089935	72
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	12.4.3.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl).	4.7867910862	7664
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.11.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	1.17830395699	1580
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: assumption; only 1: now nzsimpl).	0.0693199634552	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: assumption; only 1: now nzsimpl).	0.0692811012268	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0204498767853	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0503709316254	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.1.21.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: apply lt_0_1; only 1: now nzsimpl).	4.37693786621	7906
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.1.0.2	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0708239078522	27
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0194201469421	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0190532207489	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	15.4.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	5.27489590645	10170
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.4.0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.0674040317535	31
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.23.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	1.08022093773	1737
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.5.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.517807006836	127
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.9.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.244065999985	162
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0549750328064	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0369238853455	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0706040859222	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0723810195923	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.0.0.6.3	synth with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: intros; only 1: apply Private_NZDiv.div_add; only 1: order).	0.78314781189	622
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.0.1.2.0	synth with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.234530925751	76
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.0839321613312	23
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.2.0.1.1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: auto'; only 1: auto'; only 1: auto').	1.40573787689	780
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	1.1.1.2.0.1.2.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.37476110458	808
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small_iff; only 1: order; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0371170043945	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0486309528351	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.1.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.0347430706024	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0502758026123	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0307919979095	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0387969017029	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.3.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0359401702881	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	1.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.168161153793	15
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.123837947845	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.6.0.1.0.0.0.0.1	synth with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	3.74431490898	1945
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0341439247131	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	15.0	synth with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.218044042587	326
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.19.0.31.0	synth with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: now exists n).	4.05223989487	13806
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	0.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.0348920822144	6
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	8.9.0.0.5.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: apply H2; only 1: auto).	10.9633369446	9588
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.0.0.1	synth with cache (only 1: intros n m H; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.019073009491	5
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	0.0.0.2.0.0	synth with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.0305750370026	8
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	1.3.19	synth with cache (only 1: unfold def_add; only 1: intro n; only 1: now rewrite recursion_0).	1.13183116913	1347
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	0.2.28	synth with cache (only 1: unfold def_mul; only 1: intro m; only 1: now rewrite recursion_0).	0.950796842575	3198
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	0.0.0.0.7.0	synth with cache (only 1: intros x y; only 1: unfold def_mul; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: reflexivity; only 1: f_equiv').	5.10071802139	575
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	0.1.1.1	synth with cache (only 1: unfold ltb; only 1: intros; only 1: rewrite recursion_0; only 1: f_equiv').	1.03123784065	7
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	2.5.5.0	synth with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.763921022415	752
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.12	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0396680831909	60
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.0.0.1.0.0	synth with cache (only 1: intro n; only 1: unfold even; only 1: rewrite recursion_succ; only 1: auto with *; only 1: reflexivity; only 1: f_equiv').	0.0345330238342	7
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	0.0	synth with cache (only 1: compute in *; only 1: now rewrite recursion_0).	0.0155200958252	2
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.4.1.25	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl in *; only 1: auto with *).	0.521967887878	1053
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	0.0.0.1.9.0.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	2.52414894104	1961
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	0.5.26	synth with cache (only 1: unfold pow; only 1: intro y; only 1: now rewrite recursion_0).	9.03254199028	13717
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.0.1.0.11.0.0	synth with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply eq_le_incl; only 1: now rewrite H2).	7.05235910416	2913
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.429468154907	227
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.1.2.0.2.0.1.0.1.0	synth with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: now apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: assumption; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: assumption).	3.29016494751	2570
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.4	synth with cache (only 1: intros a a' Ha; only 1: now rewrite ?Ha).	0.180047988892	103
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	1.82000112534	839
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.2	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.071259021759	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.1.0.0.4.0	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: now rewrite ?Ha; only 1: order'; only 1: order_nz).	0.344133138657	121
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0441660881042	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0143129825592	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	0.1.0.3.10.0.0.2	synth with cache (only 1: repeat red; only 1: intros; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: f_equiv; only 1: f_equiv; only 1: f_equiv; only 1: trivial).	31.5571410656	17636
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.0780801773071	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0338730812073	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.0537960529327	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.1.1	synth with cache (only 1: intros a n; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.189750909805	18
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0583939552307	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0756809711456	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0691270828247	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0237998962402	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	0.9.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: trivial).	0.508399963379	416
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0240619182587	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	2.9.0	synth with cache (only 1: intros; only 1: bitwise; only 1: split).	0.452586174011	236
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0244891643524	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	2.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0244100093842	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.0.12	synth with cache (only 1: unfold setbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	2.45080399513	871
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.13	synth with cache (only 1: unfold clearbit; only 1: solve_proper).	1.46488285065	551
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.0.0.13	synth with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	5.27066206932	2378
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0249528884888	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.2.0.0.0.2.0.0.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	2.07273006439	1591
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.1.7.5	synth with cache (only 1: intros a n; only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	8.98047304153	7978
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.1.0.0.3	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.403223991394	362
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.1.1.7	synth with cache (only 1: intros EQ; only 1: rewrite sqrt_square; only 1: intuition; only 1: apply le_0_l).	0.263539075851	79
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	0.0.17.0	synth with cache (only 1: intros n m; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply le_0_l).	11.0562820435	8262
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	0.0.18.2	synth with cache (only 1: intros n m; only 1: apply sqrt_lt_square; only 1: apply le_0_l; only 1: apply le_0_l).	13.4549999237	13973
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	5.3.0.0.0.1.5	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros m H2 H3; only 1: nzsimpl; only 1: now f_equiv).	7.85555791855	5239
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	7.7.1.0.0.2.0	synth with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intros; only 1: nzsimpl; only 1: now f_equiv).	16.0728969574	14384
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0450670719147	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	1.12358593941	556
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.1.0	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.0935649871826	25
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	2.1.1.1	synth with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.517075061798	79
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.0862309932709	22
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	2.7.6.0	synth with cache (only 1: intros n m; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	12.2725298405	3135
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0340151786804	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.0.11.0	synth with cache (only 1: intros; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.801369905472	207
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	4.78133106232	1369
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.12.0	synth with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).	2.41403222084	1327
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	6.1.0.2.0	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: order').	1.66146087646	1011
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	0.3.0.12.0.0	synth with cache (only 1: intros a b c Hc; only 1: intro LT; only 1: apply pow_lt_mono_r; only 1: order; only 1: apply le_0_l; only 1: order).	12.5393519402	7031
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.2.0.2.1.0.0	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.633108854294	394
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.6.2.0.5.5.7	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	5.19924807549	8767
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.1.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.0365130901337	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.3.1.0.0.0.0.5	synth with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	1.55221509933	980
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.1.2.1.0.0.1.0.2.0.1.0.0.0.4	synth with cache (only 1: intros; only 1: split; only 1: intro LE; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: rewrite (pow_neg_r _ _ Hb); only 1: apply pow_nonneg; only 1: order'; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: order'; only 1: intro LE; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	32.7607419491	14283
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	12.1545250416	5041
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.80072402954	1473
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	4.22436881065	2452
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	2.0.0.1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	5.63225698471	2564
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	0.671289920807	277
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	6.1.0	synth with cache (only 1: intros Base Step; only 1: intro n; only 1: split).	0.0194511413574	10
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	0.0.0.0.1.0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	36.9634640217	487
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0370178222656	8
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.0	synth with cache (only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.0127999782562	2
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.0.1.1.6.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: now nzsimpl; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.3913397789	212
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0345678329468	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: exists n; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.046854019165	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0343170166016	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.0232682228088	6
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.5.1.0	synth with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	0.058454990387	35
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	1.1.0.0.0.0.0.0.0.0.0.7.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: now transitivity m; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	16.8188261986	13775
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	3.4.8.0.6.12.0.0.5	synth with cache (only 1: induct ltac:(n); only 1: nzsimpl; only 1: reflexivity; only 1: intro n; only 1: nzsimpl; only 1: intro H; only 1: rewrite H; only 1: rewrite pred_0; only 1: reflexivity).	38.2569930553	95981
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.0.0.0.0.0.1	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: order; only 1: now nzsimpl).	0.0372340679169	8
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.8.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite <- add_0_r  at 1; only 1: now nzsimpl).	3.60711097717	2038
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.1.0	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0322618484497	7
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.3.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.303045034409	169
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0213639736176	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	4.10.4.4.1.0.9.0	synth with cache (only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_up_eqn; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: order'; only 1: order'; only 1: nzsimpl; only 1: order').	27.2711350918	24355
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.510882854462	228
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.0.0.0.38.13	synth with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: solve_proper).	1.30435395241	3665
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	1.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: solve_proper).	0.0373909473419	9
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.16.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	16.2107419968	10678
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.5.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	1.23119115829	851
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	1.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.0273509025574	5
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.155430078506	55
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	1.0.0.0.0.1.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: apply mul_comm).	6.19626998901	1932
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.1.0.0.2.2.0.2.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: contradict Hab; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	18.2173058987	11960
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	1.1.0.0.1.14.1	synth with cache (only 1: intros; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	23.9064059258	11107
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.2.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0735549926758	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.1.0.0.2.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0708658695221	10
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0558898448944	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.4.5.1	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.0413980484	955
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.109299898148	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.2.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.155339956284	20
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.0.0.1.2.4.1.5.0	synth with cache (only 1: intros n m p q; only 1: nzinduct n; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: nzsimpl; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	23.0989398956	8057
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.10876083374	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0351638793945	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	9.0.0.1	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	1.8535349369	418
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.1.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	0.0248129367828	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	1.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0228021144867	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0210680961609	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0232179164886	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0219080448151	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0241761207581	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	1	synth with cache (only 1: order).	0.0299270153046	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	1	synth with cache (only 1: order).	0.0328938961029	23
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	synth with cache (only 1: order).	0.184069156647	93
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.1.0	synth with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.015634059906	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	1.1.3.0	synth with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	0.0310590267181	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.1.0	synth with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0185170173645	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.5.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0272500514984	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.3.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0397710800171	17
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.5.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.233728170395	140
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.3.0.1	synth with cache (only 1: intro n; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.446578025818	256
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	1.1.3.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0662770271301	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	17.0.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	17.8218691349	4595
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.1.2	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0437309741974	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1	synth with cache (only 1: intuition order).	0.32915186882	97
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0165109634399	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.0.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0243229866028	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.168855190277	95
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0168190002441	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0170049667358	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.0.0.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: left; only 1: apply lt_eq_cases; only 1: now left; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0661709308624	31
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.161811113358	52
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.0.1.0.0.2.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).	0.523576021194	222
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.1	synth with cache (only 1: intros RS' n; only 1: intuition order).	5.00037193298	3510
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	8.0.2	synth with cache (only 1: intros z Base Step; only 1: apply strong_right_induction; only 1: now apply rs_rs').	0.405664205551	432
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	3.3.0.33.0	synth with cache (only 1: intros n n' Hn m m' Hm; only 1: compute; only 1: split; only 1: now rewrite <- !lt_succ_r, Hn, Hm; only 1: now rewrite <- !lt_succ_r, Hn, Hm).	9.09168505669	10251
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	1.0.37.0	synth with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: compute; only 1: rewrite H1; only 1: now rewrite H2).	10.2696261406	7347
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	2.1.2.0.0.7.5	synth with cache (only 1: intros a a' Ha; only 1: intro m; only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: intros LT; only 1: auto).	12.761619091	1204
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	25	synth with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.243062973022	534
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.1	synth with cache (only 1: intro m; only 1: reflexivity).	0.0157079696655	3
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.0.3.0.1.2	synth with cache (only 1: unfold ofnat; only 1: induction n; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	0.940498113632	833
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.27.1.16.4	synth with cache (only 1: unfold divide; only 1: intro n; only 1: exists n; only 1: nzsimpl; only 1: reflexivity).	2.19371318817	10082
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.3.4	synth with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	0.129155874252	42
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.9.1.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	4.54872488976	3606
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.2.21.5	synth with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	17.5418908596	7159
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.15.0	synth with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.274317979813	308
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	0.2.2.6.0.0.0	synth with cache (only 1: intros n m; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	1.73865103722	1535
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	0.2.0.0.0.0.9	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	1.07812190056	933
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0247750282288	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.05952501297	15
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0331840515137	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0246632099152	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.2.1.0.1.0	synth with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	0.0298640727997	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	9.0.0.6.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: intro H; only 1: apply le_succ_l; only 1: rewrite <- succ_le_mono; only 1: now apply add_le_mono).	28.0573329926	3179
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.18464589119	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.29974603653	584
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.5.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.0445790290833	13
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.027890920639	13
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	5.6.0.0	synth with cache (only 1: intros; only 1: rewrite <- even_spec in H; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	3.14929986	1173
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.5.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0837318897247	28
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	1.27.0.2	synth with cache (only 1: intros; only 1: apply even_add_even; only 1: exists m; only 1: now nzsimpl).	38.9138739109	12387
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.141497135162	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.113680124283	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.1.1.1.0.1.9.6	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	8.47471404076	6009
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0321218967438	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0324928760529	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.072968006134	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	3.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.108954906464	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.1.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0646591186523	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.036544084549	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.1.0.4.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	1.62258291245	432
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.1.7.0.0.1.0.2	synth with cache (only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order_pos; only 1: order_pos; only 1: rewrite <- add_0_r  at 1; only 1: nzsimpl; only 1: now f_equiv).	4.53751301765	2147
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	1.0.0.1.0.2	synth with cache (only 1: apply log2_unique' with 0; only 1: order'; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	0.277412891388	70
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.033979177475	6
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.9.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	2.07225608826	991
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.1.0.0.1.0	synth with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	0.288548946381	136
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.2	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0337839126587	21
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	0.0.0.3.2.6.1.0.1.1	synth with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: order'; only 1: split; only 1: nzsimpl; only 1: rewrite one_succ; only 1: nzsimpl; only 1: order_pos; only 1: nzsimpl; only 1: order).	13.3144938946	11707
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	4	synth with cache (only 1: firstorder).	0.0185990333557	20
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	5.0	synth with cache (only 1: intros; only 1: intuition).	0.0177760124207	7
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	3.36514878273	875
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0.5	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	6.40841293335	2928
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.0.5.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	3.90859293938	1709
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0220701694489	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0183238983154	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	1.18.3	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	16.12104702	15107
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	1.0.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.01509308815	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	17.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	1.04372406006	1163
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	3.1.0.7.5.0	synth with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonneg; only 1: apply eq_le_incl; only 1: now rewrite H2).	6.03244900703	4237
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	3	synth with cache (only 1: solve_proper).	0.0135850906372	13
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	3.59.5.0	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: tauto).	12.8618700504	57568
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	3	synth with cache (only 1: now symmetry).	0.0181939601898	20
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.0118811130524	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	synth with cache (only 1: eauto using eq_trans, eq_sym).	0.0149929523468	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.0.4.1.0	synth with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	0.0839610099792	41
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.0	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition).	0.0476009845734	4
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	1.82.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).	13.2999069691	19667
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	18	synth with cache (only 1: now subst).	0.178238868713	390
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.7.2.3	synth with cache (only 1: intros x y H; only 1: destruct H; only 1: red; only 1: auto with ordered_type).	0.302743196487	312
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	3.3.1.0.11	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	1.55775880814	2419
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	0.0.0.0.1.4	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq, lt; only 1: simpl; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	0.695475101471	145
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.0.4	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0275230407715	31
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	6.10	synth with cache (only 1: induction x; only 1: now subst).	0.0989239215851	264
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.3.0.0.11	synth with cache (only 1: induction y; only 1: red; only 1: simpl; only 1: intros (x1, x2); only 1: auto).	0.863645792007	1548
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.0.4.18	synth with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).	12.4415121078	24854
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	1.8	synth with cache (only 1: red; only 1: auto).	0.136133909225	94
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	synth with cache (only 1: order).	0.0168058872223	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: order).	0.016942024231	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	synth with cache (only 1: order).	0.0172278881073	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	synth with cache (only 1: order).	0.015928030014	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	synth with cache (only 1: order).	0.015435218811	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	synth with cache (only 1: order).	0.015851020813	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	synth with cache (only 1: order).	0.0165541172028	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0159239768982	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.0156140327454	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	synth with cache (only 1: order).	0.0151422023773	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.0157849788666	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0159289836884	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0160610675812	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0152049064636	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	4.15.4.2.1	synth with cache (only 1: intros; only 1: destruct (compare x y); only 1: order; only 1: eauto; only 1: order).	1.68323278427	2881
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.637807130814	415
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.788490056992	516
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	6.5.3	synth with cache (only 1: intros x y z; only 1: intros H; only 1: now rewrite H).	1.76874899864	1444
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	13.5.0.1.0.1	synth with cache (only 1: destruct l; only 1: constructor; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: order).	27.3784909248	28188
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	0.0.8	synth with cache (only 1: intros x y z; only 1: intros H; only 1: now rewrite H).	0.278114080429	120
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	1.0.0.0.0.0.0.1	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.0358459949493	10
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	5.0.0.3	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.142714977264	112
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	0.0.0.0.0.0.0.0.2.0.0.0.0.0.2.2.5.0.1	synth with cache (only 1: split; only 1: intros; only 1: eapply SortA_InfA_InA; only 1: split; only 1: exact eq_refl; only 1: auto with *; only 1: exact eq_trans; only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans; only 1: auto with *; only 1: eauto; only 1: eauto; only 1: eauto; only 1: apply InA_InfA; only 1: split; only 1: exact eq_refl; only 1: auto with *; only 1: exact eq_trans).	33.2778930664	34917
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	4.8	synth with cache (only 1: induction 1; only 1: auto with ordered_type).	0.0926020145416	76
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	2	synth with cache (only 1: intuition).	0.0179500579834	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.013237953186	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	2.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0191090106964	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	synth with cache (only 1: auto with ordered_type).	0.013534784317	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0203928947449	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0274560451508	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	10.3	synth with cache (only 1: unfold eqk, eqke; only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.369843006134	327
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	8.3.2.16.8.2.2	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: order; only 1: simpl; only 1: destruct H2; only 1: auto).	38.2108020782	54953
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	synth with cache (only 1: eauto with ordered_type).	0.019996881485	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	2.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0399270057678	12
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	3.1.2.0	synth with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	0.0474970340729	10
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	5.0.0.1	synth with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: eauto with ordered_type).	0.0311410427094	10
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0416371822357	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.4.1.21.7.0	synth with cache (only 1: constructor; only 1: unfold eqk, ltk; only 1: compute; only 1: intuition; only 1: order; only 1: eauto with ordered_type).	2.08026695251	5106
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40	8.0.1.4.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).	10.5960040092	7441
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0175120830536	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0169279575348	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0167992115021	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	1.1.3.19	synth with cache (only 1: induction 1; only 1: destruct H; only 1: auto; only 1: auto).	2.9038040638	5321
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	1.4.11.0.0.4	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: unfold eqk, ltk; only 1: eauto with ordered_type).	13.7872228622	7440
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	0.3.10.0.0.5	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: unfold eqk, ltk; only 1: eauto with ordered_type).	30.8211109638	4258
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40	1.1.0.0.0.3.0.1.0.8.0.0.2	synth with cache (only 1: simple induction l; only 1: auto; only 1: intros x l' H H0; only 1: constructor; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: apply (StrictOrder_Irreflexive x); only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: intuition; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition).	16.8114690781	13803
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.6.0	synth with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with *).	0.0368890762329	9
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.0.1.5	synth with cache (only 1: unfold eqke; only 1: inversion 1; only 1: intuition; only 1: eauto).	0.293735027313	48
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0266559123993	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.1.0.0.0.0.0.1.0.0.0.0.1.0.2.0.0.1.0	synth with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	24.1357140541	22833
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.1.1.0.0.1.0.0.2.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	12.7195420265	6458
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.0.0.1.1.1.0.0.0.2.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	15.0135111809	8865
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.1	synth with cache (only 1: autorewrite with order; only 1: easy).	0.1194190979	106
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	1.0.1	synth with cache (only 1: red; only 1: compute; only 1: iorder).	0.0229449272156	5
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	4.0	synth with cache (only 1: compute; only 1: order).	0.134078025818	90
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	22	synth with cache (only 1: iorder).	1.00522899628	1371
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0154659748077	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.17148900032	51
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.1.1.0.0	synth with cache (only 1: intros; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0439279079437	8
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	3.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.172168970108	32
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0203819274902	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	2.0	synth with cache (only 1: intro H; only 1: order).	0.0142619609833	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0208349227905	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0183660984039	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	synth with cache (only 1: order).	1.01027703285	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	synth with cache (only 1: order).	0.0129199028015	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	synth with cache (only 1: order).	0.012766122818	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	synth with cache (only 1: order).	0.0128121376038	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.1217918396	66
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.325117111206	159
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	synth with cache (only 1: order).	0.012234210968	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	synth with cache (only 1: order).	0.0134789943695	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0122950077057	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	5.0	synth with cache (only 1: intro H; only 1: order).	0.0799560546875	51
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0	synth with cache (only 1: order).	0.0110528469086	1
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0116999149323	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0118188858032	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0118100643158	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.0112497806549	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	9.3.3.3	synth with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	11.2569200993	13240
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.7.13	synth with cache (only 1: unfold flip, respectful; only 1: unfold lt; only 1: auto with *).	5.5576839447	5169
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0125169754028	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	6	synth with cache (only 1: now apply compare_eq_iff).	0.0334188938141	25
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0160820484161	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0196120738983	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.2.2.9	synth with cache (only 1: case leb_spec0; only 1: symmetry; only 1: intuition; only 1: constructor; only 1: trivial; only 1: trivial).	6.6637699604	4410
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.1.0.1.1.4.6	synth with cache (only 1: case leb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: trivial).	3.17948889732	1587
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.6.15	synth with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	2.10927391052	1788
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.11	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.704424142838	236
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	0.3.16.0	synth with cache (only 1: apply leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	1.69219493866	2054
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.4.5.5.0.13	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	9.58757185936	11750
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.5.14	synth with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.800904989243	715
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	1.6.7.6.0.16	synth with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: symmetry; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	38.7288269997	43951
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.2.1.0.2.20	synth with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	3.36729812622	4275
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.0.4.13	synth with cache (only 1: intros s; only 1: induction 1; only 1: intros; only 1: auto).	10.0876049995	8712
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.4.2.0	synth with cache (only 1: intros; only 1: apply In_InA; only 1: intuition; only 1: auto).	0.0584099292755	56
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	4.2.0.0.1	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	0.413588047028	274
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	4.2.0.0.2	synth with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: now rewrite H).	0.414730072021	277
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	1.0.0.0.0.0.0.1	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.0335290431976	10
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	6.0.0.4	synth with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.325783967972	214
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.5.3.1	synth with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	0.841907978058	399
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	0.5.3.3	synth with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	4.8561899662	988
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0	synth with cache (only 1: firstorder).	0.0153260231018	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	1.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0289340019226	4
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0262131690979	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	synth with cache (only 1: firstorder).	0.015007019043	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	1	synth with cache (only 1: intuition).	0.0165038108826	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	synth with cache (only 1: reflexivity).	0.0133600234985	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	synth with cache (only 1: firstorder).	0.0159070491791	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	synth with cache (only 1: now destruct 1).	0.0148220062256	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	synth with cache (only 1: reflexivity).	0.0127110481262	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: reflexivity).	0.0126669406891	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	synth with cache (only 1: firstorder).	0.0147469043732	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	10.5	synth with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.757570028305	549
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0314130783081	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	10.20	synth with cache (only 1: intros H; only 1: now rewrite H).	1.27814483643	1967
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	3.0.0.1.0	synth with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: invlist InA).	0.0437569618225	13
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0	synth with cache (only 1: now intros <-).	0.026997089386	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0267491340637	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	synth with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0537071228027	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.8.18.2	synth with cache (only 1: intros; only 1: invlist InA; only 1: firstorder; only 1: auto).	30.2790820599	18718
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	1.0.13.2	synth with cache (only 1: intuition; only 1: invlist InA; only 1: firstorder; only 1: auto).	3.01687598228	1566
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	14.1	synth with cache (only 1: induction 1; only 1: intuition).	0.225841999054	306
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0183238983154	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.0139510631561	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.020868062973	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0271210670471	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	14	synth with cache (only 1: eauto).	0.422068119049	397
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	7.2.2.6.8.2.2	synth with cache (only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: eauto; only 1: simpl; only 1: destruct H2; only 1: auto).	26.9667229652	23506
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.0.0.20.3	synth with cache (only 1: unfold eqk, eqke; only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.211657047272	654
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0417239665985	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	1.1.3.9	synth with cache (only 1: induction 1; only 1: destruct H; only 1: auto; only 1: auto).	0.908227920532	913
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.2.5.16.4	synth with cache (only 1: unfold eqk, eqke; only 1: intros x l' H H0; only 1: do 2 rewrite InA_alt; only 1: destruct 1 as (y, (H1, H2)); only 1: eauto).	1.94241404533	2573
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	1.6.0.5.43.6	synth with cache (only 1: intros; only 1: elim H0; only 1: unfold eqke; only 1: induction 1; only 1: eauto; only 1: auto).	36.6830949783	45225
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.3.0	synth with cache (only 1: inversion 1; only 1: intuition; only 1: eauto).	0.0411829948425	6
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.0.0.1.5	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: compute in H0; only 1: intuition).	0.76500916481	236
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.7.5.0	synth with cache (only 1: intros x y L E; only 1: intuition; only 1: rewrite E; only 1: auto).	0.103610038757	193
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	0.0.0.0.0.0.2.0.0.0.9.0.0.1	synth with cache (only 1: split; only 1: red; only 1: red; only 1: compute; only 1: intros x; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: red; only 1: apply compare_trans).	3.05622506142	4795
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0159080028534	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	0.722029924393	638
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	3.3.0.4	synth with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: intuition; only 1: order; only 1: order).	0.62202501297	464
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	5.4.0.4.5.0.8	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	15.5519750118	9578
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	2.0	synth with cache (only 1: apply max_r; only 1: order).	0.00787997245789	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	0.2.1.0.0.1.1.1.0.1.1.0.1.1.2.1.5	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: destruct (max_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: apply max_l; only 1: order; only 1: rewrite E', ?E; only 1: apply max_r; only 1: easy; only 1: intuition; only 1: destruct (max_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: apply max_l; only 1: easy; only 1: rewrite E', ?E; only 1: apply max_r; only 1: order).	22.5589721203	20295
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	1.0.1.0.18	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.274275064468	416
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0104639530182	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	13	synth with cache (only 1: solve_max).	0.324634790421	310
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.0169188976288	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	0.9.1.6.1.1	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: right; only 1: order; only 1: left; only 1: order).	8.41335201263	7042
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.4.0.0.0.0.0.0.0.7	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: solve_max; only 1: solve_max).	17.8597650528	11219
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.0313010215759	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.2.0.2.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0175130367279	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0111591815948	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.2.0.2.1	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0171430110931	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	synth with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.110902070999	27
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	synth with cache (only 1: solve_max).	0.0116000175476	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0760879516602	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0189249515533	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.3.3	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0358979701996	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	2.15414690971	1404
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.2.0.2.0.0.11	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	10.9928948879	8830
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	synth with cache (only 1: apply min_l; only 1: order).	0.00708889961243	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	0.1.1.0.0.1.1.1.0.1.1.0.2.1.1.1.6	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: destruct (min_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: apply min_r; only 1: order; only 1: rewrite E', ?E; only 1: apply min_l; only 1: easy; only 1: intuition; only 1: destruct (min_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: apply min_r; only 1: easy; only 1: rewrite E', ?E; only 1: apply min_l; only 1: order).	11.5809879303	16163
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.2.1.22	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.365000009537	591
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0107190608978	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	14	synth with cache (only 1: solve_min).	0.250912904739	284
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	synth with cache (only 1: solve_min).	0.0131721496582	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.1.7	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.510221004486	320
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.1.2.0.0.1.2.2	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	11.6611502171	7785
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	1.51142501831	714
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	5	synth with cache (only 1: solve_min).	0.0340769290924	22
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	synth with cache (only 1: solve_min).	0.0110950469971	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	6	synth with cache (only 1: solve_min).	0.028657913208	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.6.1	synth with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0451369285583	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	synth with cache (only 1: solve_min).	0.0115990638733	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0334990024567	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0180621147156	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.7.0	synth with cache (only 1: intros Hnm Hpq; only 1: apply min_glb_iff; only 1: solve_min).	0.0267531871796	23
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.11	synth with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0546450614929	46
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.13	synth with cache (only 1: apply min_l; only 1: solve_max).	0.579070091248	470
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.2.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	12.308647871	6812
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	1.1.1.0.1.1.0.0.0.13	synth with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	28.3142998219	26580
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	1.0.27.2	synth with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).	2.29014801979	4248
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.0.28.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	1.41534018517	2827
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	4.0.2.4.1	synth with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto).	0.363075971603	560
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00885701179504	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.4	synth with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.011873960495	8
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.5.2	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	0.0455479621887	47
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.00904488563538	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0106229782104	6
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	5.0.2.0	synth with cache (only 1: intros; only 1: unfold eq; only 1: rewrite H; only 1: discriminate).	0.366255998611	127
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: trivial).	0.0288178920746	6
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.0.0.0.2.2.1.13	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	1.05389595032	1033
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.134088039398	7
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: trivial).	0.116504907608	1
Coq.ZArith.Znat.positive_N_nat	40	0	synth with cache (only 1: trivial).	0.114695072174	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0377380847931	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0.0.20	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.196475982666	393
Coq.ZArith.Znat.Z_nat_N	40	0.0.5.0.40	synth with cache (only 1: induction n; only 1: trivial; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).	1.3809671402	1431
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.0180108547211	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0363931655884	10
Coq.ZArith.Znat.N2Z.id	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0263929367065	6
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.1.2.0	synth with cache (only 1: split; only 1: apply N2Nat.inj; only 1: intros; only 1: now subst).	0.263023138046	120
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.2.0.3.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: easy).	0.0413129329681	10
Coq.ZArith.Znat.N2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0168650150299	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0169670581818	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.8	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.487782001495	255
Coq.ZArith.Znat.N2Z.inj_le	40	0	synth with cache (only 1: now destruct n, m).	0.0207500457764	1
Coq.ZArith.Znat.N2Z.inj_lt	40	1	synth with cache (only 1: now destruct n, m).	0.020651102066	2
Coq.ZArith.Znat.N2Z.inj_ge	40	2	synth with cache (only 1: now destruct n, m).	0.0207769870758	3
Coq.ZArith.Znat.N2Z.inj_gt	40	3	synth with cache (only 1: now destruct n, m).	0.0210149288177	4
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	1	synth with cache (only 1: now destruct n, m).	0.0209708213806	2
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0206499099731	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0323588848114	6
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.0.0.0.0.0.18.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.60528802872	2537
Coq.ZArith.Znat.N2Z.inj_pred	40	0.0.0.0.2.0.0.4	synth with cache (only 1: destruct n; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max).	1.82655501366	679
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.37.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	9.8980410099	22754
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0288119316101	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.21.0.2.0.1.5.89	synth with cache (only 1: destruct n; only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: apply Z.testbit_Zpos; only 1: reflexivity; only 1: destruct a as [| a]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	34.3800001144	67401
Coq.ZArith.Znat.Z2N.id	40	7	synth with cache (only 1: now destruct n).	0.0405030250549	12
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2Pos.inj; only 1: intros; only 1: now f_equal).	0.045774936676	8
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0201880931854	2
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0	synth with cache (only 1: simpl; only 1: f_equal).	0.0213539600372	2
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0204629898071	2
Coq.ZArith.Znat.Z2N.inj_add	40	23.9.0	synth with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	3.91833305359	2693
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	0.954372882843	172
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: easy).	0.037132024765	7
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.9.1.2	synth with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: simpl; only 1: trivial).	1.65765404701	756
Coq.ZArith.Znat.Z2N.inj_compare	40	1.1	synth with cache (only 1: intros; only 1: now destruct n, m).	0.0327560901642	4
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.5.0.5	synth with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.713781118393	198
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0322508811951	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	0.0.0.3.34.3	synth with cache (only 1: intros; only 1: destruct a as [| a]; only 1: autorewrite with bitwise; only 1: trivial; only 1: apply Z.testbit_Zpos; only 1: trivial).	7.73939800262	12295
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.036899805069	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0233020782471	3
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	synth with cache (only 1: now destruct n).	0.0178709030151	2
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0172159671783	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0185530185699	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	synth with cache (only 1: trivial).	0.0162739753723	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0174419879913	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0357580184937	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.0.1.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.256094932556	57
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	1.47564411163	490
Coq.ZArith.Znat.Zabs2N.inj_mul	40	15	synth with cache (only 1: now destruct n, m).	21.8859930038	14438
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.3.0.2.1.4	synth with cache (only 1: destruct n; only 1: easy; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).	2.40835404396	1764
Coq.ZArith.Znat.Zabs2N.inj_compare	40	3.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.0402870178223	11
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0245659351349	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0247440338135	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.2.0.2.2.6	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.26747298241	844
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	6	synth with cache (only 1: now destruct n, m).	0.171648979187	75
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.0224139690399	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: trivial).	0.0149199962616	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.0.0.3.1	synth with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0356678962708	10
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	synth with cache (only 1: now destruct n).	0.0228710174561	1
Coq.ZArith.Znat.Nat2Z.id	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0272431373596	6
Coq.ZArith.Znat.Nat2Z.inj	40	0.6.1	synth with cache (only 1: intros H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0288698673248	10
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now subst).	0.0288460254669	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.1.0.0.0.1.0.6.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: intros _; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	2.0730099678	1665
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.023097038269	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now subst).	0.0269689559937	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0.2	synth with cache (only 1: simpl; only 1: trivial).	0.0167028903961	4
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0147459506989	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.014496088028	1
Coq.ZArith.Znat.Z2Nat.inj_add	40	0.1.0.1.1.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	16.9935338497	10915
Coq.ZArith.Znat.Z2Nat.inj_mul	40	1.0.0.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	6.22463393211	3946
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0167279243469	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	1.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0217039585114	3
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.4	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	3.75733995438	4778
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0249898433685	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0140111446381	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0142800807953	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0141220092773	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40	1.1.0.1.1.0.0.1.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	23.0252070427	16397
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.17	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	5.14080810547	6305
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0233240127563	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0215318202972	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	1.1.0.1	synth with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.0580058097839	17
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: destruct n, m; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add).	1.02102708817	242
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	4.38360905647	4292
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.2.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0264070034027	7
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	0.0.0.0.1.5.1.0.0.0.0.0.1.0.0	synth with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: intros Hz; only 1: destruct z; only 1: apply Ho; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: now destruct Hz).	10.21510005	12353
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	0.1.0.0.4.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	0.855247974396	367
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	4.70557284355	3507
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0243690013885	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	11.5646679401	7931
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	0.32.0	synth with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: now apply Z.pow_gt_lin_r).	2.51727795601	4202
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	19.4806768894	19021
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40	0.5.0.0.0.1.4	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: intros; only 1: now f_equal; only 1: now Z.swap_greater; only 1: intros; only 1: Z.order).	0.603187084198	472
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.0.1.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: intros; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0305190086365	8
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0248291492462	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.0264489650726	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	1	synth with cache (only 1: now destruct a).	0.0214071273804	2
Coq.ZArith.Zquot.Zrem_0_l	40	0	synth with cache (only 1: now destruct a).	0.010390996933	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	synth with cache (only 1: now destruct a).	0.0103061199188	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.1.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0687780380249	12
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0234501361847	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.2.1.1.0.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.075747013092	16
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.2.1.1.0.0	synth with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.0788080692291	12
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0233719348907	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	2.1.2.2.0.9	synth with cache (only 1: intros [| p| p]; only 1: auto with zarith; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even).	3.69026398659	4282
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	synth with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.109618902206	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.3.1	synth with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.0516998767853	21
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	9	synth with cache (only 1: constructor).	0.0225491523743	19
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	0.0.0.2.0.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0370678901672	8
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	4.0.0.0	synth with cache (only 1: simpl; only 1: generalize 1%positive; only 1: intros; only 1: trivial).	0.0445218086243	8
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.0	synth with cache (only 1: intros; only 1: auto).	0.0235891342163	2
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	1.0.1.0.1.0.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0440189838409	10
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	0.2.0.1.0.0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro H; only 1: elim H; only 1: trivial).	36.3299279213	18940
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	1.0	synth with cache (only 1: intros; only 1: auto).	0.0229089260101	3
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	0.0.0.0.0.0.0.0.0.0.2.0.0	synth with cache (only 1: destruct z; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	3.57342004776	1644
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.0652348995209	10
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.1.0.0.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.600857019424	351
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.00906205177307	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	synth with cache (only 1: now destruct n).	0.00926113128662	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2	synth with cache (only 1: trivial).	0.00945401191711	3
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0084400177002	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0107338428497	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0099790096283	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now f_equal).	1.36084699631	819
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0122048854828	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.00987505912781	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0103340148926	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.1.0.0.0	synth with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0199987888336	6
Coq.ZArith.BinInt.Z.compare_le_iff	40	1	synth with cache (only 1: easy').	0.25927400589	65
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.2.0.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.0583078861237	26
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.017068862915	5
Coq.ZArith.BinInt.Z.sgn_null	40	13.1.4.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros; only 1: now f_equiv; only 1: congruence).	2.97687602043	1742
Coq.ZArith.BinInt.Z.sgn_pos	40	5.0.0.1.1	synth with cache (only 1: destruct n; only 1: intros; only 1: order'; only 1: trivial; only 1: now subst).	0.238685846329	188
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0145328044891	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: now destruct n).	0.00917291641235	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.1.1.3.0	synth with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct 1 || intros _).	0.0756320953369	35
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	synth with cache (only 1: trivial).	0.00851106643677	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	synth with cache (only 1: now destruct n).	0.0124189853668	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	synth with cache (only 1: now destruct n).	0.0103888511658	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0122380256653	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	7	synth with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.161040067673	153
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.00878405570984	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0479691028595	17
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: now destruct 1 || intros _).	2.97666501999	2118
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.0.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0228538513184	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	2	synth with cache (only 1: trivial).	0.00875496864319	3
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.1.0.2.4.0.6	synth with cache (only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: split; only 1: simpl; only 1: trivial; only 1: unfold testbit; only 1: trivial).	0.319009065628	475
Coq.ZArith.BinInt.Z.testbit_neg_r	40	1.0	synth with cache (only 1: intro Hn; only 1: now destruct n).	0.0773620605469	15
Coq.ZArith.BinInt.Z.testbit_odd_0	40	1.3.0.1.3.1.27.15	synth with cache (only 1: rewrite <- succ_double_spec; only 1: destruct a as [| a| a]; only 1: unfold testbit; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	2.01821398735	6364
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	synth with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.00762581825256	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0155420303345	2
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.00770115852356	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.1	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0162260532379	3
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.00774812698364	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.2.2.1	synth with cache (only 1: unfold gtb, ltb; only 1: unfold lt, gt; only 1: rewrite compare_antisym; only 1: now case compare).	0.199752807617	90
Coq.ZArith.BinInt.Z.geb_le	40	1.5.3.3	synth with cache (only 1: unfold geb, leb; only 1: unfold le, ge; only 1: rewrite compare_antisym; only 1: now case compare).	0.741640090942	678
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40
Coq.ZArith.BinInt.Pos2Z.id	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0134680271149	2
Coq.ZArith.BinInt.Pos2Z.inj	40
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	2.8.4.0.6	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: trivial).	0.584391117096	933
Coq.ZArith.BinInt.Pos2Z.is_pos	40	0	synth with cache (only 1: reflexivity).	0.00926208496094	1
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	8.21	synth with cache (only 1: intros Ha'; only 1: discriminate).	0.283490896225	487
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: Z.order').	0.00883102416992	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1	synth with cache (only 1: trivial).	0.0773079395294	17
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0	synth with cache (only 1: reflexivity).	0.00908613204956	1
Coq.ZArith.BinInt.Pos2Z.inj_succ	40
Coq.ZArith.BinInt.Pos2Z.inj_add	40	1	synth with cache (only 1: split).	0.0108940601349	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	synth with cache (only 1: reflexivity).	0.0106530189514	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0109300613403	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	3.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0109069347382	5
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: trivial).	0.00785398483276	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	synth with cache (only 1: reflexivity).	0.00856399536133	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	synth with cache (only 1: reflexivity).	0.00848507881165	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.00871300697327	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	synth with cache (only 1: reflexivity).	0.0117101669312	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	synth with cache (only 1: reflexivity).	0.00876903533936	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: now injection 1).	0.0108079910278	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0146758556366	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1).	0.00926899909973	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0142109394073	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: reflexivity).	0.0089430809021	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	synth with cache (only 1: easy).	0.0115540027618	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.00938892364502	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0121359825134	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	synth with cache (only 1: easy).	0.0123898983002	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.00952291488647	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	1.1.43	synth with cache (only 1: unfold Z.le, Z.ge; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	2.9912879467	3112
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.0.0.40	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: intros; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	1.85934281349	2181
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.0157611370087	8
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	5.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.014347076416	9
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0092568397522	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	synth with cache (only 1: reflexivity).	0.00916290283203	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.00898504257202	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.00819396972656	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: reflexivity).	0.00863409042358	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.00792407989502	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.00902700424194	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	3	synth with cache (only 1: easy).	0.0699419975281	44
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.00882291793823	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.00852084159851	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	synth with cache (only 1: apply Z.testbit_Zpos).	0.0113229751587	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40	2.1.0.0.8.7	synth with cache (only 1: split; only 1: apply Pos2Z.inj; only 1: trivial; only 1: trivial; only 1: intros EQ; only 1: now f_equal).	14.2619609833	9708
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	3	synth with cache (only 1: now destruct x).	0.0170228481293	4
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: reflexivity).	0.00827598571777	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	2.0.0.0.2.0	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	0.0576839447021	33
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0159301757812	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	3.0.0.0.3.1	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	0.280936002731	166
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.0.0.0.0.0.1.0	synth with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: trivial; only 1: easy).	0.0610401630402	27
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0383679866791	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.2	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0471332073212	14
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0417289733887	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.122396945953	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.040778875351	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	6	synth with cache (only 1: now destruct x as [| [x| x| ]| ]).	0.0318810939789	18
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.158792972565	49
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.2	synth with cache (only 1: intros _ H ->; only 1: now f_equal).	0.0178389549255	4
Coq.ZArith.BinInt.ZL0	40	4	synth with cache (only 1: now f_equal).	0.00883412361145	5
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	12.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl').	0.583983182907	239
Coq.ZArith.BinInt.Z_eq_mult	40	8.0.0	synth with cache (only 1: intros EQ; only 1: rewrite EQ in *; only 1: now destruct n).	0.0438859462738	60
Coq.ZArith.Zcomplements.floor_gt0	40	1.1	synth with cache (only 1: intros; only 1: easy).	0.0208380222321	4
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	22	synth with cache (only 1: now destruct n).	0.637817144394	458
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	1.0	synth with cache (only 1: unfold Zlength; only 1: auto with zarith).	0.0195820331573	3
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	3.36806082726	1934
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	10.2116861343	7849
Coq.ZArith.Zeven.Zeven_not_Zodd	40	1.0.1.0.1.0.0.1.0.1.1.0.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	16.8822250366	19102
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.040776014328	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	3.1.1.1.1.0.0.0.3.2	synth with cache (only 1: destruct n as [| p| p]; only 1: easy || now destruct 1; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	20.4085519314	17026
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	3.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.217634916306	11
Coq.ZArith.Zeven.Zodd_quot2	40	3.0.0	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0504279136658	6
Coq.ZArith.Zeven.Zodd_quot2_neg	40	5.0.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.536285161972	61
Coq.ZArith.Zeven.Zquot2_opp	40	0.6	synth with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.109063148499	16
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0	synth with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.02330493927	3
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.1	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.085972070694	31
Coq.ZArith.Zeven.Zeven_2p	40
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.0.1.0.0.0.0.3.5.21.9	synth with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: intuition; only 1: intuition).	5.71713089943	4552
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0905179977417	14
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0630729198456	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0643608570099	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	synth with cache (only 1: apply Z.divide_opp_r).	0.0168509483337	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	1	synth with cache (only 1: apply Z.divide_opp_l).	0.0195739269257	2
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	2	synth with cache (only 1: apply Z.divide_abs_l).	0.0205490589142	3
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.0.2.0.1.2	synth with cache (only 1: intros a b; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.mod_divide; only 1: intros; only 1: auto; only 1: trivial).	0.57558298111	223
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.0.0.1.0.0	synth with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).	0.0401661396027	7
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	0.1	synth with cache (only 1: intros H Hb; only 1: Z.order).	0.0208249092102	3
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	3.1.0.5.1.0.0	synth with cache (only 1: intros Hb; only 1: intros (c, Hc); only 1: rewrite Z.div_exact; only 1: subst; only 1: apply Z.mod_mul; only 1: now intros ->; only 1: now intros ->).	2.17614102364	1789
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	18.0	synth with cache (only 1: intros; only 1: now apply Z.divide_pos_le).	1.7505261898	1395
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.3.2.4	synth with cache (only 1: constructor; only 1: intuition; only 1: auto with zarith; only 1: intuition).	0.298000097275	166
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.1.1.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0252358913422	6
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0235450267792	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0557930469513	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.145190000534	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0330770015717	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	2.0.0.0.2	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: auto with zarith).	0.0654361248016	23
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	0.0.0.3	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.029942035675	15
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	2.0.6	synth with cache (only 1: simple induction 1; only 1: intros H1 H2 H3; only 1: intuition).	5.58604502678	477
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.8.15	synth with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	0.579341888428	617
Coq.ZArith.Znumtheory.not_prime_1	40	1.34.18	synth with cache (only 1: destruct 1; only 1: contradict H; only 1: apply Z.lt_irrefl).	4.69538807869	6569
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.0.6.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply Zgcd_is_gcd; only 1: auto with zarith; only 1: auto with zarith).	0.108140945435	10
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hb; only 1: unfold Z.modulo; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	2.92167496681	1412
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.8.1.0	synth with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	1.03934383392	511
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	6.2	synth with cache (only 1: intros; only 1: trivial).	0.0263571739197	16
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.025787115097	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0259289741516	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.061005115509	4
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.0.2.0	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.0336630344391	7
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0241289138794	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.0.1.0	synth with cache (only 1: intros a b; only 1: unfold Z.modulo; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0567891597748	25
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0204560756683	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0206351280212	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.020791053772	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: trivial).	0.0172700881958	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	2	synth with cache (only 1: easy).	0.0358810424805	18
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	10.3.0.0.8.2.3	synth with cache (only 1: unfold eqm; only 1: intros x H; only 1: case Z.quotrem; only 1: auto with zarith; only 1: auto with zarith; only 1: intros a b; only 1: Z.order).	10.6118969917	20794
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	0.30.1.0	synth with cache (only 1: unfold eqm; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: trivial).	6.26771807671	16020
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.1.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0267050266266	4
Coq.ZArith.Zdiv.Zeven_mod	40	1.1.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0471119880676	15
Coq.ZArith.Zdiv.Z_mod_same	40	1.0.0	synth with cache (only 1: intros; only 1: apply Z.mod_same; only 1: now intros ->).	0.0214319229126	4
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	1.0.1	synth with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).	0.0317208766937	5
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.1.1	synth with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: now destruct b).	0.0661947727203	27
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: now destruct b).	0.0429809093475	5
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.1.0.1	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0305149555206	7
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0	synth with cache (only 1: solve_proper).	0.0568249225616	1
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	synth with cache (only 1: congruence).	0.0166249275208	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	4.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0145959854126	6
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0.4	synth with cache (only 1: intros; only 1: trivial).	0.0177319049835	6
Coq.ZArith.Int.Z_as_Int.i2z_0	40	5	synth with cache (only 1: now Z.nzsimpl').	0.0665588378906	6
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: reflexivity).	0.0148980617523	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	synth with cache (only 1: reflexivity).	0.015172958374	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0146181583405	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	5.10	synth with cache (only 1: Z.bitwise; only 1: Morphisms.f_equiv).	0.144886016846	123
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	1	synth with cache (only 1: now destruct n).	0.0170238018036	2
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	synth with cache (only 1: reflexivity).	0.0151300430298	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	synth with cache (only 1: reflexivity).	0.0151088237762	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	synth with cache (only 1: reflexivity).	0.0149610042572	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	synth with cache (only 1: reflexivity).	0.0151031017303	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0154118537903	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0151038169861	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: constructor).	0.0144741535187	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.0.1.0	synth with cache (only 1: generalize 1; only 1: simpl; only 1: intros; only 1: trivial).	0.0233540534973	5
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	6.0.3.4.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: intros; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: now f_equal).	2.13772416115	1913
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	1.1.0	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0214939117432	5
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	6.1	synth with cache (only 1: simpl; only 1: reflexivity).	0.0534551143646	32
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	9	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0303888320923	13
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40	2.0.2.61	synth with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	1.15469408035	3560
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	2.1.1	synth with cache (only 1: induction n; only 1: trivial; only 1: auto).	0.0238008499146	7
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	3.0.1.6.3.5	synth with cache (only 1: generalize 1; only 1: intros; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.669068098068	734
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	1	synth with cache (only 1: apply Pos2Nat.inj_iter).	0.0154509544373	2
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.0167260169983	1
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	0.2.0.1.3	synth with cache (only 1: destruct x; only 1: reflexivity; only 1: intros; only 1: easy; only 1: now destruct 1).	0.143934965134	65
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	synth with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0225732326508	2
Coq.ZArith.auxiliary.Zle_left	40	2	synth with cache (only 1: apply Z.le_0_sub).	0.0176479816437	3
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.017040014267	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	2	synth with cache (only 1: apply Z.lt_0_sub).	0.0186579227448	3
Coq.ZArith.auxiliary.Zlt_left_lt	40	3	synth with cache (only 1: apply Z.lt_0_sub).	0.0194690227509	4
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.2.3.3	synth with cache (only 1: intros; only 1: apply Z.le_0_sub; only 1: Z.swap_greater; only 1: auto).	0.0786581039429	51
Coq.ZArith.auxiliary.Zgt_left	40	0.0.4.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: Z.swap_greater; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.191160917282	52
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0362339019775	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0376200675964	4
Coq.ZArith.auxiliary.Zle_mult_approx	40	24.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	3.34636807442	1667
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.127	synth with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	6.98366212845	22150
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.128	synth with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	18.4528679848	63034
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	2.2.0.0.1.46	synth with cache (only 1: destruct a; only 1: simpl; only 1: auto; only 1: auto with zarith; only 1: simpl; only 1: auto).	0.99290895462	1948
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	1.1.1.8.1.11	synth with cache (only 1: destruct n; only 1: auto; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	2.91857814789	2845
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	1.0.0.0.0.1.1.0.0.0	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: auto).	1.61082792282	1087
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	17	synth with cache (only 1: Z.order).	0.34938287735	232
Coq.ZArith.Zorder.Zlt_not_le	40	14	synth with cache (only 1: Z.order).	0.133014202118	85
Coq.ZArith.Zorder.Zle_not_gt	40	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.031937122345	6
Coq.ZArith.Zorder.Zgt_not_le	40	5	synth with cache (only 1: auto).	0.0193359851837	6
Coq.ZArith.Zorder.Znot_ge_lt	40	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.029876947403	6
Coq.ZArith.Zorder.Znot_lt_ge	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0297849178314	3
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.0157470703125	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0304539203644	4
Coq.ZArith.Zorder.not_Zne	40	11.0.0.8	synth with cache (only 1: destruct (Z.eq_decidable n m); only 1: subst; only 1: auto; only 1: easy || now destruct 1).	0.870247125626	850
Coq.ZArith.Zorder.Zgt_asym	40	7.0.8	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.order).	0.88156080246	330
Coq.ZArith.Zorder.Zgt_irrefl	40	12	synth with cache (only 1: now destruct n).	0.119181871414	136
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0469279289246	3
Coq.ZArith.Zorder.Zle_gt_trans	40	7.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.0536580085754	10
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0378680229187	2
Coq.ZArith.Zorder.Zge_trans	40	0.1.0	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: now transitivity m).	0.028146982193	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0376269817352	4
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0343158245087	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0161240100861	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0163149833679	1
Coq.ZArith.Zorder.Zgt_succ	40	0.1	synth with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.0181910991669	3
Coq.ZArith.Zorder.Znot_le_succ	40	0.12	synth with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.0550701618195	60
Coq.ZArith.Zorder.Zgt_le_succ	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0284841060638	4
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0161221027374	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0162680149078	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0273630619049	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0168199539185	1
Coq.ZArith.Zorder.Zle_succ_gt	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.031583070755	4
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.0167920589447	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.4.5.3.7.0.42.4	synth with cache (only 1: intros; only 1: induction n; only 1: now apply Z.lt_le_incl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy || now destruct 1; only 1: discriminate).	8.58020591736	8640
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.027615070343	4
Coq.ZArith.Zorder.Zle_neg_pos	40	0	synth with cache (only 1: easy).	0.0271909236908	1
Coq.ZArith.Zorder.Zgt_pos_0	40	0.4	synth with cache (only 1: intros; only 1: easy).	0.0199530124664	6
Coq.ZArith.Zorder.Zle_0_pos	40	0	synth with cache (only 1: easy).	0.023943901062	1
Coq.ZArith.Zorder.Zlt_neg_0	40	1	synth with cache (only 1: easy).	0.0168459415436	2
Coq.ZArith.Zorder.Zle_0_nat	40	1.0.2.0.21	synth with cache (only 1: intros; only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).	0.736926794052	590
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0168471336365	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0187709331512	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	synth with cache (only 1: apply Z.add_le_mono_l).	0.0180990695953	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	synth with cache (only 1: apply Z.add_le_mono_r).	0.0179781913757	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0161321163177	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0176367759705	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0342700481415	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0357060432434	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.24095416069	24
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.190239906311	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.4.0.4.1	synth with cache (only 1: intros; only 1: destruct p; only 1: discriminate; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: discriminate).	0.710202932358	341
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0175349712372	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0173330307007	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0465741157532	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0720970630646	25
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0472369194031	3
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	0.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0197410583496	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0296628475189	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.016459941864	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0280239582062	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0165050029755	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0459740161896	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0457270145416	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0315871238708	4
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.029235124588	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	0.0.35	synth with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	25.9372279644	21470
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0455679893494	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0165882110596	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	1.0.5	synth with cache (only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: discriminate).	0.0539240837097	21
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	synth with cache (only 1: apply Z.leb_le).	0.0162169933319	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.0	synth with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0447068214417	2
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	14	synth with cache (only 1: now subst).	0.069797039032	85
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	1.9	synth with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.04727602005	34
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.9.1	synth with cache (only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.leb_le).	0.244626998901	150
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.3.1.7	synth with cache (only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.ltb_lt).	0.95406293869	490
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0284481048584	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.1.0.0.0.0	synth with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: reflexivity; only 1: discriminate; only 1: discriminate).	0.0389637947083	8
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	2.2.1.0	synth with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0534000396729	22
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0285589694977	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	0.0.0.0.12	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.19980406761	487
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	0.0.0.0.4.2	synth with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.30164694786	217
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40	0.0.0.0.6.1	synth with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.21883201599	435
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.0.1.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: auto; only 1: now left).	0.0402281284332	11
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	2.9.7.1.1.2.9.0	synth with cache (only 1: intros x y H; only 1: destruct x; only 1: right; only 1: trivial; only 1: right; only 1: symmetry; only 1: easy || now destruct y; only 1: now left).	20.8082559109	19407
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	1.2.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: auto).	3.07354998589	2256
Coq.ZArith.ZArith_dec.Z_dec'	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: case (Z_lt_ge_dec x y); only 1: intro H; only 1: left; only 1: left; only 1: auto; only 1: intro H; only 1: generalize (Z.ge_le _ _ H); only 1: intro H0; only 1: case (Z_le_lt_eq_dec y x H0); only 1: intro H1; only 1: left; only 1: right; only 1: assumption; only 1: intro; only 1: right; only 1: symmetry; only 1: assumption).	18.1726269722	19685
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: trivial).	0.0158619880676	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.0.0.0.3.0.0	synth with cache (only 1: destruct b as [| b| b]; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb; only 1: intros Hb; only 1: now elim Hb).	0.092581987381	21
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0154058933258	2
Coq.Program.Wf.Well_founded.Fix_F_inv	40	0.8.8.2.0	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	3.28580594063	4242
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0265882015228	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	1.4.1	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: induction (Rwf x); only 1: auto).	0.0237221717834	9
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	2.8.9.2	synth with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.648451805115	1105
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	1.5.0	synth with cache (only 1: apply Fix_F_inv; only 1: induction (Rwf x); only 1: auto).	0.0202322006226	9
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	12.29.10.9.3.7.5	synth with cache (only 1: intros H x0; only 1: intro x; only 1: intro; only 1: intro z; only 1: destruct z; only 1: subst; only 1: reflexivity).	19.947840929	164686
Coq.Program.Equality.JMeq_eq_refl	40	0	synth with cache (only 1: apply UIP).	0.00834107398987	1
Coq.Program.Equality.UIP_refl_refl	40	5	synth with cache (only 1: apply UIP).	0.128352880478	147
Coq.Program.Equality.inj_pairT2_refl	40	1	synth with cache (only 1: apply UIP).	0.00871992111206	2
Coq.Program.Equality.solution_left	40	1.5.0.0	synth with cache (only 1: intro eq_rect_eq; only 1: intros; only 1: destruct H; only 1: trivial).	0.015321969986	10
Coq.Program.Equality.solution_right	40	1.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0125889778137	4
Coq.Program.Equality.deletion	40	3	synth with cache (only 1: auto).	0.00880408287048	4
Coq.Program.Equality.simplification_heq	40	13.14.17	synth with cache (only 1: intros; only 1: subst; only 1: auto).	0.667132139206	3300
Coq.Program.Equality.simplification_existT2	40	0.0.0.10.14	synth with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.481505870819	1511
Coq.Program.Equality.simplification_existT1	40	0.1.0.81.8	synth with cache (only 1: intro H; only 1: inversion 1; only 1: apply H; only 1: assumption; only 1: assumption).	9.17180204391	74720
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0131220817566	3
Coq.Program.Combinators.compose_id_left	40	0.1	synth with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0099470615387	3
Coq.Program.Combinators.compose_id_right	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00967216491699	2
Coq.Program.Combinators.compose_assoc	40	0	synth with cache (only 1: split).	0.00838303565979	1
Coq.Program.Combinators.flip_flip	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.010017156601	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0100607872009	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0515601634979	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.1.0.1.0.0.0.0.3.1.0	synth with cache (only 1: induction stack as [| [| ]]; only 1: intros; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	8.44474697113	5847
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	7.0	synth with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0224311351776	13
Coq.Sorting.Permutation.Permutation_cons	40	3.2.2.4	synth with cache (only 1: intros a; only 1: simple destruct 1; only 1: constructor; only 1: discriminate || auto).	0.335647821426	253
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros H y; only 1: intros l l' x Hperm; only 1: subst; only 1: induction Hperm; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	0.594637870789	328
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	0.0.2.0.4	synth with cache (only 1: induction l; only 1: intros l l' Hperm; only 1: auto using perm_skip; only 1: simpl; only 1: auto).	4.13374590874	113
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	23.1.0.3.3	synth with cache (only 1: induction l; only 1: intros h; only 1: repeat constructor; only 1: simpl; only 1: eauto using Permutation_in).	11.00502491	20977
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.1.5	synth with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0569221973419	18
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	1.5.5.2.1	synth with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	5.46364092827	1001
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.0554759502411	10
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	11	synth with cache (only 1: split).	0.063481092453	78
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.2	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0245659351349	4
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	14.1.2	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: congruence).	6.58901596069	4804
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	synth with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0344851016998	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40	0.0.1.0.0.2.3.5.0.2	synth with cache (only 1: unfold permutation, meq; only 1: intros; only 1: simpl in *; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: destruct (eqA_dec a a0) as [Ha| Ha]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	35.0001780987	15471
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40	1.0.1.4.3	synth with cache (only 1: unfold permutation, meq; only 1: symmetry; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.705599069595	292
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	0.11021900177	10
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	8.1.0.0.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	0.373557090759	237
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: inversion 1; only 1: auto with arith).	0.0586609840393	5
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	1.0.1.2.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive).	0.0410878658295	10
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.10.0	synth with cache (only 1: intros P x0 xs H; only 1: inversion H; only 1: auto).	0.127271175385	95
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.7.0	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0687170028687	14
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.0.0	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0245380401611	3
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0241088867188	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	0.0.2.0.0.1.2	synth with cache (only 1: intro l'; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	0.779376029968	389
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	6.4.0	synth with cache (only 1: intros; only 1: simpl in *; only 1: auto with *).	0.246929883957	106
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	synth with cache (only 1: simpl; only 1: auto with datatypes).	0.0334768295288	2
Coq.Sorting.Heap.defs.invert_heap	40	0.6.12.2	synth with cache (only 1: intros H; only 1: intros a'; only 1: inversion_clear 1; only 1: auto with datatypes).	1.8241341114	1180
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.2.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	2.93705892563	884
Coq.Sorting.Heap.defs.low_trans	40
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	1.6.2.2.0.1	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	2.05256605148	699
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	1.1	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.036523103714	4
Coq.Sorting.Heap.defs.list_to_heap	40	2.0.2	synth with cache (only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.059807062149	16
Coq.Sorting.Heap.defs.heap_to_list	40	0.2.9	synth with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.370872020721	172
Coq.Sorting.Heap.defs.treesort	40	2.8	synth with cache (only 1: fix merge0 1; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.258454084396	68
Coq.Init.Wf.Well_founded.Acc_inv	40	8.5.2	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.103327035904	386
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00787496566772	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00812101364136	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.101	synth with cache (only 1: intros f [x]; only 1: trivial).	3.02111911774	37081
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	4.0.5.0.3.8.37	synth with cache (only 1: intro; only 1: intros H x0; only 1: intro; only 1: reflexivity || destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).	3.6878759861	41880
Coq.Init.Tactics.decide_right	40	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00993800163269	6
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00440311431885	2
Coq.Init.Peano.not_eq_S	40	0.8	synth with cache (only 1: intro H; only 1: auto).	0.00849199295044	19
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.00680494308472	14
Coq.Init.Peano.n_Sn	40	3.0.4.27.5	synth with cache (only 1: red; only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: auto).	0.637464046478	7437
Coq.Init.Peano.plus_n_O	40	0.4.0.2	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0111358165741	15
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00763583183289	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.00893902778625	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00907897949219	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0079710483551	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00784301757812	6
Coq.Init.Peano.le_n_S	40	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.015830039978	23
Coq.Init.Peano.nat_case	40	0.1.5.5	synth with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.065395116806	256
Coq.Init.Peano.nat_double_ind	40	3.2.8.2.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.324605941772	1034
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.19784212112	8938
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.3.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.65863609314	5168
Coq.Init.Peano.min_r	40	0.0.1.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.64605498314	4004
Coq.Init.Peano.nat_rect_succ_r	40	0.2.1.0.5	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	0.166538953781	301
Coq.Init.Peano.nat_rect_plus	40	0.0.2.0.1.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.0164120197296	9
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.0.7.35	synth with cache (only 1: intro H; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	0.965393066406	10198
Coq.Init.Datatypes.eq_true_ind_r	40	0.5.10.11.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: assumption).	0.223005056381	2279
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00629305839539	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00628399848938	3
Coq.Init.Datatypes.surjective_pairing	40	0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: trivial).	0.00895309448242	12
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	2.0.1	synth with cache (only 1: destruct H; only 1: simpl in *; only 1: reflexivity).	0.00908994674683	6
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.00996208190918	6
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	4.52093911171	23666
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	11.2.1.0.11.2.1.0.11.2.1.0.1.14	synth with cache (only 1: intros A C h1 h2; only 1: destruct c; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: assumption; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: assumption; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: assumption).	33.7856910229	323673
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00285410881042	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	0.0.0.2.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00573897361755	12
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00387692451477	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.0.0.1.0.0.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0574381351471	503
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.0.2.2.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.405210971832	5025
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	2.1.2.1.0.0.2.1.2.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.52228307724	8691
Coq.Init.Logic.imp_iff_compat_l	40	8.8.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0570249557495	615
Coq.Init.Logic.imp_iff_compat_r	40	3.0.1.0.3.2.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.110443115234	1298
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00494384765625	4
Coq.Init.Logic.neg_false	40	0.9.11.0.0.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.341135978699	3739
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0206429958344	74
Coq.Init.Logic.and_assoc	40	3.3.3.0.2.7.1.2.1.2.4.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: assumption; only 1: intros; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	6.2065320015	52567
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.125622034073	608
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00567293167114	3
Coq.Init.Logic.iff_to_and	40	0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.0684540271759	296
Coq.Init.Logic.universal_quantification.inst	40	8	synth with cache (only 1: auto).	0.00739288330078	26
Coq.Init.Logic.universal_quantification.gen	40	1.0	synth with cache (only 1: unfold all; only 1: auto).	0.00546002388	3
Coq.Init.Logic.Logic_lemmas.absurd	40	6.3.7.0.3.1	synth with cache (only 1: intro A; only 1: intro H; only 1: unfold not; only 1: intros; only 1: elim H1; only 1: assumption).	0.457556962967	5969
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.9	synth with cache (only 1: destruct 1; only 1: trivial).	0.00953102111816	30
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00695395469666	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00612902641296	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00607681274414	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	20.1	synth with cache (only 1: destruct 2; only 1: auto).	0.131431102753	1084
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.4.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0121309757233	35
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00679087638855	4
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00675797462463	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00700092315674	4
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.3.7	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).	0.0418291091919	107
Coq.Init.Logic.rew_opp_r	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0072238445282	2
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00777316093445	3
Coq.Init.Logic.f_equal2	40	0.2.4	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.0150480270386	38
Coq.Init.Logic.f_equal3	40	0.2.0.1	synth with cache (only 1: destruct 1; only 1: destruct 2; only 1: destruct H; only 1: reflexivity).	0.0097439289093	7
Coq.Init.Logic.f_equal4	40	1.1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0108869075775	7
Coq.Init.Logic.f_equal5	40	1.1.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0125958919525	8
Coq.Init.Logic.f_equal_compose	40	0.9.3.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.110798835754	643
Coq.Init.Logic.eq_trans_refl_l	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00799202919006	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00777506828308	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00779604911804	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00798392295837	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00790309906006	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0109558105469	8
Coq.Init.Logic.rew_map	40	0.11	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0457229614258	102
Coq.Init.Logic.eq_trans_map	40	4.26.2.3.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	3.78116297722	35479
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00862908363342	2
Coq.Init.Logic.map_subst_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0101199150085	3
Coq.Init.Logic.rew_swap	40	5.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0104379653931	8
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00975799560547	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.00828504562378	2
Coq.Init.Logic.eq_trans_map_distr	40	1.1.1.8.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.195313930511	369
Coq.Init.Logic.eq_sym_map_distr	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00976800918579	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.6.0	synth with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.0136151313782	13
Coq.Init.Logic.eq_trans_rew_distr	40	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0115129947662	14
Coq.Init.Logic.rew_const	40	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0115389823914	15
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	7.0.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0106971263885	10
Coq.Init.Logic.inhabited_covariant	40	0.3.9	synth with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: auto).	0.0275859832764	124
Coq.Init.Logic.eq_stepl	40	2.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0484991073608	117
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0113911628723	4
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.2.2.2.6	synth with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.0825130939484	207
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0146291255951	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00572109222412	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00706195831299	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00573396682739	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.00801301002502	5
Coq.Init.Logic_Type.identity_ind_r	40	0.18.7	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).	0.19149684906	1425
Coq.Init.Logic_Type.identity_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00678610801697	4
Coq.Init.Logic_Type.identity_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00696206092834	4
Coq.Init.Specif.sigT_eta	40	0.19	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0412220954895	231
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.00700998306274	2
Coq.Init.Specif.sigT2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.00792193412781	2
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.00791692733765	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.6	synth with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: trivial).	0.0201270580292	41
Coq.Init.Specif.inhabited_sig_to_exists	40	2.0.0.37.38	synth with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: trivial).	0.807579994202	14085
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0110771656036	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00970911979675	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0	synth with cache (only 1: destruct p, q; only 1: reflexivity).	0.0150141716003	2
Coq.Init.Specif.sigT.eq_existT_curried_trans	40	0.35	synth with cache (only 1: subst; only 1: reflexivity).	1.37094306946	5007
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.11.9.2.24	synth with cache (only 1: intro H; only 1: destruct p', q'; only 1: destruct H; only 1: destruct r, q, p; only 1: reflexivity).	5.62948489189	18186
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0125579833984	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0134918689728	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0205061435699	6
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	10.5.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	1.49922704697	4387
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0140218734741	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.9.9.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.955803155899	1954
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	4.1.0.0.3.1.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	0.946046113968	1532
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0185780525208	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0169658660889	3
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0309641361237	6
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	6.6.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	2.60992407799	3459
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0218930244446	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0109598636627	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	1.1.0.0.0.0.3.2.0.0.1	synth with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.829705953598	693
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0343611240387	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.0163979530334	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.0164530277252	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	1.0.3.0	synth with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	0.0804510116577	8
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	1.0.4.0	synth with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H, H0; only 1: auto with qarith).	0.0847969055176	9
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	4.0	synth with cache (only 1: intros; only 1: now rewrite !Qred_correct).	0.0261340141296	6
Coq.QArith.Qreduction.Qred_le	40	3	synth with cache (only 1: now rewrite !Qred_correct).	0.241610050201	38
Coq.QArith.Qreduction.Qred_lt	40	4	synth with cache (only 1: now rewrite !Qred_correct).	0.227683067322	32
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.0.0.7.0.1.13	synth with cache (only 1: unfold Qcle, Qcminus; only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qabs_case; only 1: simpl; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	5.69651293755	2159
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40	0.0.0.0.4.0.0.0.0.0.1.0.0	synth with cache (only 1: apply Qc_decomp; only 1: Qc_unfolds; only 1: case Qred_abs; only 1: fold (this x) (this y); only 1: case Qred_abs; only 1: apply Qred_complete; only 1: repeat rewrite Qred_correct; only 1: simpl in *; only 1: unfold Qeq in *; only 1: simpl; only 1: rewrite Pos.mul_comm, <- Z.abs_opp; only 1: do 2 f_equal; only 1: ring).	11.5239639282	4976
Coq.QArith.Qcabs.Qcle_Qcabs	40	13.0.5	synth with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qle_Qabs).	2.62660503387	2805
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	1.0.3.10.1.0	synth with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: repeat rewrite Qred_correct; only 1: rewrite Qabs_Qle_condition; only 1: fold (this x) (this y) (this (- x)) (this (- y)); only 1: intuition).	19.2353439331	8643
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0638279914856	9
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40	3.0.0.4.1.1.0.1.1.2.8	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite Qinv_mult_distr; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: reflexivity; only 1: reflexivity).	23.2444040775	14415
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.0.1.1.0.0.0.4	synth with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto with *; only 1: red; only 1: simpl; only 1: trivial).	0.527204990387	327
Coq.QArith.Qfield.Examples.ex1	40	0	synth with cache (only 1: exact Qmult_plus_distr_l).	0.0136511325836	1
Coq.QArith.Qfield.Examples.ex2	40	0	synth with cache (only 1: exact Qplus_comm).	0.0139498710632	1
Coq.QArith.Qfield.Examples.ex3	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0321109294891	3
Coq.QArith.Qfield.Examples.ex4	40	0	synth with cache (only 1: ring).	0.0232548713684	1
Coq.QArith.Qfield.Examples.ex5	40	0	synth with cache (only 1: ring).	0.0233459472656	1
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.023766040802	1
Coq.QArith.Qfield.Examples.ex7	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0272731781006	3
Coq.QArith.Qfield.Examples.ex8	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0247600078583	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0249049663544	2
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	3.0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: ring).	0.108716964722	9
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0357868671417	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.0	synth with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.110759019852	7
Coq.QArith.Qcanon.Qred_involutive	40	1.6.5	synth with cache (only 1: intros p; only 1: apply Qred_complete; only 1: apply Qred_correct).	1.00986599922	1456
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	2.2.1.0.0	synth with cache (only 1: unfold Qccompare; only 1: intros; only 1: split; only 1: now intros <-; only 1: auto).	0.101012945175	15
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	6.0	synth with cache (only 1: intros; only 1: intuition).	0.0894930362701	15
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	3.3.1	synth with cache (only 1: intro H; only 1: contradict H; only 1: discriminate).	0.0207250118256	12
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40	18.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	1.79081702232	2036
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40	6.0.19.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	5.48787593842	5421
Coq.QArith.Qcanon.Qcmult_assoc	40	36.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	21.7667529583	29899
Coq.QArith.Qcanon.Qcmult_0_l	40	2.1.0	synth with cache (only 1: intros; only 1: unfold Q2Qc; only 1: auto with qarith).	0.0465049743652	19
Coq.QArith.Qcanon.Qcmult_0_r	40	8.0.34.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	27.0590848923	29467
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0225458145142	5
Coq.QArith.Qcanon.Qcmult_comm	40
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	39.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	36.7261111736	29333
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	40.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	36.9001061916	30488
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.6.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.180474042892	83
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.25.0	synth with cache (only 1: intros; only 1: red; only 1: auto with qarith).	0.40030503273	1400
Coq.QArith.Qcanon.Qcle_antisym	40	2.0.0	synth with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: auto with qarith).	0.0170791149139	5
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	1.0.3.0	synth with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.137444019318	45
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	0.0.7.3.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros p q H H0; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: auto).	1.47161197662	1537
Coq.QArith.Qcanon.Qcnot_lt_le	40	3.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.0323331356049	19
Coq.QArith.Qcanon.Qcnot_le_lt	40	10.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.890295982361	516
Coq.QArith.Qcanon.Qclt_not_le	40	4.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.012904882431	7
Coq.QArith.Qcanon.Qcle_not_lt	40	6.0.0	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.0134580135345	9
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.11.1.1	synth with cache (only 1: induction n; only 1: intros; only 1: tauto; only 1: simpl; only 1: auto with qarith).	1.73396992683	2196
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.13.0	synth with cache (only 1: unfold Q2Qc; only 1: split; only 1: intros; only 1: qc; only 1: apply Qplus_0_l; only 1: intros; only 1: qc; only 1: apply Qplus_comm; only 1: intros; only 1: qc; only 1: apply Qplus_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_1_l; only 1: intros; only 1: qc; only 1: apply Qmult_comm; only 1: intros; only 1: qc; only 1: apply Qmult_assoc; only 1: intros; only 1: qc; only 1: apply Qmult_plus_distr_l; only 1: unfold Qcle, Qcminus; only 1: intros; only 1: split; only 1: intros; only 1: qc; only 1: apply Qplus_opp_r).	37.8630461693	34041
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.2.4.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.192327976227	155
Coq.QArith.Qreals.IZR_nz	40	0	synth with cache (only 1: auto with real).	0.0192120075226	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	8	synth with cache (only 1: reflexivity).	0.0867071151733	42
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0438060760498	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1.1.0	synth with cache (only 1: apply Z.compare_eq_iff; only 1: apply Z.compare_eq_iff; only 1: trivial).	0.0271921157837	5
Coq.QArith.QArith_base.Qeq_sym	40	1.4	synth with cache (only 1: symmetry; only 1: trivial).	0.0267617702484	7
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	synth with cache (only 1: apply Zeq_is_eq_bool).	0.042417049408	14
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	synth with cache (only 1: apply Qeq_bool_iff).	0.0176048278809	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	1	synth with cache (only 1: apply Zle_is_le_bool).	0.0196869373322	2
Coq.QArith.QArith_base.Qnot_eq_sym	40	2	synth with cache (only 1: auto with qarith).	0.0543320178986	20
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.2.0.0.0.0.0.0	synth with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0669760704041	18
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.1	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0354070663452	3
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.3	synth with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.196238994598	57
Coq.QArith.QArith_base.Qmake_Qdiv	40	3.0.18.1.1.3	synth with cache (only 1: unfold Qeq; only 1: simpl; only 1: generalize 1%Z; only 1: rewrite !Z.mul_1_r; only 1: intros; only 1: trivial).	29.9437389374	20580
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	4.6.0.0.3	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	4.04179906845	2915
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	4.2	synth with cache (only 1: rewrite <- Qeq_bool_iff; only 1: auto with qarith).	0.0285739898682	8
Coq.QArith.QArith_base.Qplus_assoc	40	2.3.3.0.1.1	synth with cache (only 1: destruct x; only 1: unfold Qeq; only 1: simpl; only 1: intros XY YZ; only 1: simpl_mult; only 1: ring).	6.01470184326	509
Coq.QArith.QArith_base.Qplus_0_l	40	0.8.0.9	synth with cache (only 1: unfold Qeq; only 1: simpl in *; only 1: intros; only 1: ring).	2.75817394257	340
Coq.QArith.QArith_base.Qplus_0_r	40	0.26.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	16.9113759995	14614
Coq.QArith.QArith_base.Qplus_comm	40	2.0.0.2.0.4	synth with cache (only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: intros XY YZ; only 1: simpl_mult; only 1: ring_simplify; only 1: ring).	1.72428607941	182
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0370278358459	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0401048660278	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	1.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.0635697841644	6
Coq.QArith.QArith_base.Qmult_0_l	40	0.1.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0293228626251	5
Coq.QArith.QArith_base.Qmult_0_r	40	1.0.4.0	synth with cache (only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.0651268959045	17
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.2	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.89879822731	210
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0651819705963	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	3.2.0.0.0	synth with cache (only 1: intros; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.415744066238	42
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.110696077347	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40	7.0.0.5	synth with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: now subst).	3.00042486191	3086
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.0.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: f_equal).	0.0247929096222	4
Coq.QArith.QArith_base.inject_Z_opp	40	0.0.2	synth with cache (only 1: unfold Qplus, inject_Z; only 1: compute; only 1: f_equal).	0.0227098464966	5
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	2.10.3.0.1	synth with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	7.16091704369	5069
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0494441986084	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	20.5	synth with cache (only 1: red; only 1: now reflexivity).	1.06857204437	1395
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.4.12	synth with cache (only 1: compute; only 1: apply Z.ge_le_iff; only 1: auto with zarith).	0.264791965485	245
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	0.1.1.13.9.6.1	synth with cache (only 1: unfold Qplus, inject_Z; only 1: generalize 1%Z; only 1: intros; only 1: unfold Qle; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: trivial).	12.3786408901	16703
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	6	synth with cache (only 1: apply Z.ge_le_iff).	0.021152973175	7
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.0148470401764	2
Coq.QArith.QArith_base.Qle_not_lt	40	1	synth with cache (only 1: apply Z.nlt_ge).	0.0160329341888	2
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	7.21261620522	1607
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	6.55822205544	1974
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.2	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.224284887314	46
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	1.1.2.1.2.0.1.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: intros; only 1: now apply Z.mul_nonneg_nonneg).	9.04211211205	5550
Coq.QArith.QArith_base.Qinv_le_0_compat	40	0.0.0.0.1.1.8.0	synth with cache (only 1: intros (x1, x2); only 1: case x1; only 1: intros; only 1: auto with qarith; only 1: intros; only 1: auto with qarith; only 1: intros; only 1: auto with qarith).	4.91263389587	4811
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0225901603699	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.1.3.0	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.549114942551	80
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.1.0.2.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.557769060135	83
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	3.1.22	synth with cache (only 1: simpl in *; only 1: intros; only 1: auto with zarith).	2.91310191154	5036
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.1.1.1.0	synth with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.220829963684	37
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.412715911865	54
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	6.1.0.0.0.2.0.4.0.2	synth with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: unfold Qeq in *; only 1: simpl; only 1: ring; only 1: simpl; only 1: unfold Qeq in *; only 1: simpl in *; only 1: ring; only 1: intuition).	13.5450320244	13420
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0476760864258	9
Coq.QArith.Qabs.Qabs_nonneg	40	3.2.4.0.5.0	synth with cache (only 1: intros x H; only 1: destruct x as [[| xn| xn] xd]; only 1: simpl in *; only 1: discriminate; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	0.900870084763	1051
Coq.QArith.Qabs.Zabs_Qabs	40	7.0	synth with cache (only 1: intros x H; only 1: reflexivity).	0.0246260166168	12
Coq.QArith.Qabs.Qabs_opp	40	2.1.1.4.1.6	synth with cache (only 1: simpl; only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	16.6120779514	14879
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	3.5.0.1.0	synth with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qred, Qeq in *; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).	0.638110876083	332
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.1.2.0	synth with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: auto with *; only 1: reflexivity).	0.817023992538	204
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	2.0.1.2.0.1.0.0.3.1.0	synth with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: unfold Qle; only 1: simpl; only 1: reflexivity; only 1: unfold Qle; only 1: apply Z.mul_le_mono_nonneg_r; only 1: abstract (compute; discriminate); only 1: simpl; only 1: abstract (compute; discriminate)).	9.29693984985	7487
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: split).	0.00790905952454	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.00872302055359	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00766706466675	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	15.0.3.1.20.5	synth with cache (only 1: split; only 1: intro; only 1: hnf; only 1: induction 1; only 1: firstorder; only 1: firstorder).	17.6489100456	78923
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3	synth with cache (only 1: apply H).	0.00855302810669	4
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.0.6	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: simpl_crelation).	0.0306959152222	13
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	1.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0129809379578	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00944805145264	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	3	synth with cache (only 1: simpl_crelation).	0.0392069816589	4
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.010155916214	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.0.2	synth with cache (only 1: intro p; only 1: reduce; only 1: firstorder).	0.0155107975006	5
Coq.Classes.CMorphisms.iff_impl_subrelation	40	2.4.1	synth with cache (only 1: hnf; only 1: induction 1; only 1: simpl_crelation).	0.0195088386536	17
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	synth with cache (only 1: firstorder).	0.00976419448853	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	1	synth with cache (only 1: firstorder).	0.0151219367981	19
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	synth with cache (only 1: firstorder).	0.0100510120392	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	6	synth with cache (only 1: firstorder).	0.0169441699982	12
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	2	synth with cache (only 1: firstorder).	0.145087003708	3
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	1.1297519207	362
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	7	synth with cache (only 1: firstorder).	1.13865184784	712
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	3.3.0	synth with cache (only 1: transitivity y; only 1: firstorder; only 1: firstorder).	1.99166107178	477
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	4.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	2.74141788483	580
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	5	synth with cache (only 1: firstorder).	0.0982959270477	6
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	0.412286996841	316
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	3.63921403885	469
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0141730308533	4
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	4.6	synth with cache (only 1: apply X; only 1: auto).	0.0693261623383	40
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	4.2	synth with cache (only 1: intros; only 1: simpl_crelation).	0.0226669311523	8
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	2	synth with cache (only 1: firstorder).	0.010440826416	3
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0137939453125	1
Coq.Classes.CMorphisms.GenericInstances.flip1	40	2.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: auto).	0.0138990879059	5
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0098569393158	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_crelation).	0.0148949623108	2
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00982594490051	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	2	synth with cache (only 1: firstorder).	0.00992894172668	3
Coq.Classes.CMorphisms.proper_proper	40	0.0.1.0.0.1.0.0	synth with cache (only 1: reduce; only 1: split; only 1: reduce; only 1: subst; only 1: firstorder; only 1: reduce; only 1: subst; only 1: firstorder).	0.110378026962	31
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.2	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.0210590362549	4
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0106751918793	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.2	synth with cache (only 1: reduce; only 1: simpl_crelation).	0.0242171287537	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.13.4	synth with cache (only 1: intros x x' Hxx'; only 1: unfold flip, respectful; only 1: firstorder).	11.2591421604	3049
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	7.10	synth with cache (only 1: simpl_crelation; only 1: firstorder).	3.51884007454	1584
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0214169025421	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.025349855423	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.12.5	synth with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	4.35577201843	6558
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	1	synth with cache (only 1: simpl_crelation).	0.015692949295	2
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0107409954071	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0120990276337	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.395033836365	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	6	synth with cache (only 1: reflexivity).	0.00883197784424	7
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.00901079177856	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	2.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0100648403168	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	7.0.0	synth with cache (only 1: hnf; only 1: intros x y H'; only 1: firstorder).	0.0189080238342	17
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	3	synth with cache (only 1: firstorder).	0.0208809375763	4
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0212249755859	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0291700363159	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0367619991302	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0110259056091	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0109539031982	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.0.6.5.10	synth with cache (only 1: intro H; only 1: hnf; only 1: split; only 1: tauto; only 1: tauto).	0.25283908844	635
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0103311538696	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	synth with cache (only 1: firstorder).	0.0121779441833	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.0131869316101	1
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0181639194489	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0475430488586	3
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.1.3.8	synth with cache (only 1: reduce_goal; only 1: apply PreOrder_Transitive with y; only 1: auto; only 1: auto).	1.22358989716	1928
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	1	synth with cache (only 1: simpl_relation).	0.00979208946228	2
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.00503706932068	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.00919008255005	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.261500120163	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	6	synth with cache (only 1: reflexivity).	0.00941300392151	7
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.00901794433594	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	3.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0143399238586	7
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	4.0.0.0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: apply symmetry; only 1: apply symmetry; only 1: apply symmetry; only 1: firstorder).	0.0431349277496	27
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	3	synth with cache (only 1: firstorder).	0.0241248607635	4
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	synth with cache (only 1: firstorder).	0.0250539779663	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	synth with cache (only 1: firstorder).	0.0361161231995	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	synth with cache (only 1: firstorder).	0.0374159812927	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	synth with cache (only 1: firstorder).	0.0110468864441	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0110499858856	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.02419090271	3
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0181930065155	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0334329605103	7
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.0132551193237	1
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0189459323883	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0518069267273	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0195760726929	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	4	synth with cache (only 1: reflexivity).	0.00813984870911	5
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	1	synth with cache (only 1: firstorder).	0.00856399536133	2
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00745820999146	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	0.0.3.0.1.0.1	synth with cache (only 1: unfold relation_equivalence in *; only 1: compute; only 1: split; only 1: intro H; only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.132694959641	138
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	1.2	synth with cache (only 1: reduce; only 1: firstorder).	0.0109021663666	5
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	1.0	synth with cache (only 1: reduce_goal; only 1: firstorder).	0.0125548839569	3
Coq.Classes.Morphisms.Relations.subrelation_refl	40	1.1	synth with cache (only 1: reduce; only 1: firstorder).	0.0100660324097	4
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.00894403457642	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.0.0.6	synth with cache (only 1: compute; only 1: intros; only 1: subst; only 1: firstorder).	0.156058073044	26
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.00948405265808	1
Coq.Classes.Morphisms.Relations.forall_subrelation	40	3.2	synth with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0126957893372	7
Coq.Classes.Morphisms.iff_impl_subrelation	40	6.0.1	synth with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0177631378174	38
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.0110599994659	3
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	10	synth with cache (only 1: firstorder).	0.034795999527	29
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	3	synth with cache (only 1: firstorder).	0.108597993851	4
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	8	synth with cache (only 1: firstorder).	0.600607872009	363
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	9	synth with cache (only 1: firstorder).	0.887704849243	725
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	4.3.0	synth with cache (only 1: transitivity y; only 1: auto; only 1: intuition).	0.732352972031	453
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	10	synth with cache (only 1: firstorder).	2.7014439106	2183
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	5.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0775129795074	19
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	4.4.0	synth with cache (only 1: transitivity y; only 1: auto; only 1: auto).	0.309818029404	286
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	11	synth with cache (only 1: firstorder).	5.56362700462	3689
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	2.0.1.0.1.0	synth with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0219030380249	10
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	21	synth with cache (only 1: firstorder).	0.136604070663	208
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.0.4	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.016674041748	7
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	4	synth with cache (only 1: firstorder).	0.0106840133667	5
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0	synth with cache (only 1: firstorder).	0.0136132240295	1
Coq.Classes.Morphisms.GenericInstances.flip1	40	3.2.0	synth with cache (only 1: reduce; only 1: apply H; only 1: firstorder).	0.0140779018402	8
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.00976490974426	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	synth with cache (only 1: simpl_relation).	0.0175189971924	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.00973510742188	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: simpl_relation).	0.013121843338	1
Coq.Classes.Morphisms.proper_proper	40	1.5.1	synth with cache (only 1: intros; only 1: simpl_relation; only 1: firstorder).	0.366405010223	97
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	6	synth with cache (only 1: firstorder).	0.0326941013336	11
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.011223077774	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	synth with cache (only 1: simpl_relation).	0.018709897995	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.10.3	synth with cache (only 1: intros x x' Hxx'; only 1: unfold flip, respectful; only 1: firstorder).	3.58407521248	968
Coq.Classes.Morphisms.proper_sym_impl_iff	40	11.4	synth with cache (only 1: simpl_relation; only 1: firstorder).	1.73472690582	1003
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	3.41.41	synth with cache (only 1: intros x; only 1: red; only 1: reflexivity).	2.39542889595	9559
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0145399570465	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0802130699158	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.0133700370789	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0	synth with cache (only 1: firstorder).	0.0145270824432	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	synth with cache (only 1: firstorder).	0.02263712883	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.320070028305	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0181720256805	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0	synth with cache (only 1: firstorder).	0.0180730819702	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	synth with cache (only 1: firstorder).	0.0151951313019	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0154550075531	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.0	synth with cache (only 1: repeat red; only 1: firstorder).	0.0181310176849	2
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	synth with cache (only 1: firstorder).	0.0154490470886	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.0.0	synth with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.022490978241	3
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	3.0.0.1.1	synth with cache (only 1: repeat red; only 1: intros s; only 1: intros; only 1: compute in *; only 1: auto).	0.074254989624	10
Coq.Classes.DecidableClass.Decidable_sound	40	0.70.8.3	synth with cache (only 1: intro H; only 1: inversion 1; only 1: apply H0; only 1: assumption).	36.2924489975	319408
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	0.39.49	synth with cache (only 1: destruct x; only 1: destruct y; only 1: trivial).	5.32603096962	48971
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	0	synth with cache (only 1: now f_equal).	0.015408039093	1
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0129511356354	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0127210617065	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	6.3	synth with cache (only 1: intros Pdec l; only 1: firstorder).	0.361577987671	58
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.571164131165	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	synth with cache (only 1: firstorder).	0.0154669284821	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0159900188446	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	synth with cache (only 1: firstorder).	0.0142359733582	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.3.1.1.0	synth with cache (only 1: intro; only 1: intro; only 1: intro; only 1: do 2 red; only 1: auto).	0.054230928421	16
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	3	synth with cache (only 1: now f_equal).	0.0503988265991	19
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	0.9.17	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.180302858353	519
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1.0	synth with cache (only 1: unfold to_nat; only 1: trivial).	0.00877594947815	3
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40	4.16.6.1	synth with cache (only 1: unfold to_nat; only 1: simpl; only 1: f_equal; only 1: exact (inj_mul 2 p)).	7.24170303345	10420
Coq.PArith.Pnat.Pos2Nat.is_succ	40	0.0.20	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.767752885818	2141
Coq.PArith.Pnat.Pos2Nat.is_pos	40	2.2.2.19	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.729731082916	1386
Coq.PArith.Pnat.Pos2Nat.id	40	5.14.25	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	5.34354901314	16464
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	0.0.20.1	synth with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	8.52350783348	13473
Coq.PArith.Pnat.Pos2Nat.inj_compare	40	0.0.23.4	synth with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	10.3085198402	17135
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	0.0.0.0.0.3.10.13	synth with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply H).	1.58323001862	2636
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	8.1.1.7.8	synth with cache (only 1: split; only 1: apply Pos2Nat.inj; only 1: trivial; only 1: trivial; only 1: now destruct 1).	7.69269323349	13030
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0122940540314	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	7.0.21.53	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros q; only 1: trivial).	30.7450509071	113861
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40	4.15.38	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	5.32051897049	19088
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	4.3.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.202637910843	179
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.0.2.1.7.1	synth with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	0.298038959503	326
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: now subst).	0.0205450057983	8
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	2.4.0	synth with cache (only 1: apply Pos2Nat.inj; only 1: unfold Pos.to_nat; only 1: trivial).	0.024973154068	18
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40	0.0.22.9.1.8	synth with cache (only 1: intros q; only 1: intros; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	5.22076702118	15786
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	14.6.2	synth with cache (only 1: intros n; only 1: fix sqrtrem_spec 1; only 1: trivial).	22.7084460258	10000
Coq.PArith.BinPos.Pos.eq_dec	40
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	synth with cache (only 1: trivial).	0.0116498470306	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0117359161377	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.0.1.0.1	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0289618968964	9
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0146718025208	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1.0.0.0.1.0.1	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0440559387207	10
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.0278830528259	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.92372703552	936
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	2.2.0.0.0.0.5	synth with cache (only 1: intros; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	10.1440989971	9033
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.2.3.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.625492811203	381
Coq.PArith.BinPos.Pos.add_1_r	40	0	synth with cache (only 1: now destruct p).	0.0130817890167	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0129878520966	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	5.2.0.1.4	synth with cache (only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: now f_equal).	8.92082095146	5006
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0	synth with cache (only 1: simpl; only 1: f_equal).	0.014937877655	2
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40	0.0.0.1.0.10.4.1.0	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	6.30365920067	7041
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	synth with cache (only 1: revert P a f; only 1: trivial).	0.0145108699799	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0268001556396	7
Coq.PArith.BinPos.Pos.mul_1_r	40	0.1.1.1.1.11	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	1.51225304604	1649
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.0.2.1.16	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	21.256592989	15557
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.244093894958	93
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.237583875656	100
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.2.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: intros H; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: intros H; only 1: destr_eq H; only 1: reflexivity).	3.42128801346	2534
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0336859226227	1
Coq.PArith.BinPos.Pos.square_xO	40	2.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0486509799957	21
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: trivial).	0.115008831024	8
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0287339687347	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	1.0.1.0.1.9.1.0.0	synth with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	8.75042796135	8244
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.1.0.0.2.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.23436498642	39
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.4.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.102410793304	19
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0527350902557	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0476999282837	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0501961708069	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.3	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0579419136047	9
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.5	synth with cache (only 1: unfold compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.0174551010132	7
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0120940208435	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.0.3.14.4	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	2.89526391029	3752
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.0.3.16.5	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	2.78356003761	3963
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	8.5.5.3.0.2	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	1.77672290802	3578
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	1.0.0.0.0	synth with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0985600948334	36
Coq.PArith.BinPos.Pos.compare_le_iff	40	1.0.1.0.2	synth with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: easy').	0.0671479701996	24
Coq.PArith.BinPos.Pos.gt_lt_iff	40	1.1	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.304386854172	28
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	synth with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0212891101837	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0119309425354	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	0.2	synth with cache (only 1: unfold ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0230000019073	4
Coq.PArith.BinPos.Pos.ge_le	40	0.0	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0215229988098	2
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.011843919754	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	13	synth with cache (only 1: now destruct compare || now destruct p).	0.262359857559	206
Coq.PArith.BinPos.Pos.nlt_1_r	40	2.2	synth with cache (only 1: unfold lt, le; only 1: now destruct compare || now destruct p).	0.0773561000824	14
Coq.PArith.BinPos.Pos.lt_1_succ	40	0	synth with cache (only 1: now destruct p).	0.0155291557312	1
Coq.PArith.BinPos.Pos.le_nlt	40	1	synth with cache (only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0217881202698	2
Coq.PArith.BinPos.Pos.lt_nle	40	0.1	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.141129016876	35
Coq.PArith.BinPos.Pos.lt_le_incl	40	2.4.5	synth with cache (only 1: unfold lt, le; only 1: generalize (compare_succ_r p q); only 1: now do 2 destruct compare).	0.644476175308	195
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	1.10	synth with cache (only 1: unfold lt, le; only 1: now rewrite compare_succ_succ).	0.354104042053	78
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	8.2.13	synth with cache (only 1: intros r H; only 1: intros <-; only 1: reflexivity).	7.54175400734	5789
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0148651599884	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40	0.0.12.5.1.7.0	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: destruct H; only 1: rewrite compare_gt_iff; only 1: trivial; only 1: now subst).	22.886977911	25521
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	0.0.0.3.0.0.2.2	synth with cache (only 1: revert p q r; only 1: unfold lt; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	1.73988509178	1177
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.4.0	synth with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0354931354523	14
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.2.4	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.214980840683	50
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.4.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0398240089417	7
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.3	synth with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0757520198822	47
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.6.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0406651496887	9
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.6.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.04088306427	9
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0160999298096	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	9	synth with cache (only 1: now destruct p).	0.0158030986786	10
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0134329795837	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.0.0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0283920764923	5
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40	0.1.0.0.0.0.1.3.1.5.1.7	synth with cache (only 1: rewrite add_comm; only 1: unfold sub; only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: apply add_cancel_l in H; only 1: auto; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	11.0715670586	15691
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40	4.10.0.3.0.3	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: apply sub_mask_pos_iff in Hr; only 1: unfold sub; only 1: simpl; only 1: now rewrite Hr).	3.90389490128	6776
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0250120162964	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0255749225616	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40	0.10.5.0.18.11.0.0	synth with cache (only 1: unfold sub; only 1: simpl; only 1: rewrite sub_mask_carry_spec; only 1: destruct sub_mask; only 1: auto; only 1: simpl in *; only 1: now destruct p; only 1: auto).	22.3386199474	48869
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	1.0.4.3.6.0.0.0.0.0	synth with cache (only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: subst; only 1: apply lt_add_r; only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	31.0799238682	30051
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0.2	synth with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0811381340027	15
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.1.6.0.6.0.3.0	synth with cache (only 1: unfold le, sub; only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: case sub_mask_spec; only 1: trivial; only 1: intros; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: trivial).	17.2418231964	22510
Coq.PArith.BinPos.Pos.sub_diag	40	1.1.3.1.0.22.5	synth with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: congruence; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: trivial).	33.2806069851	13521
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40	1.2.0.0.4.0.0.0.5.0.4.9.11	synth with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff; only 1: induction p; only 1: simpl; only 1: rewrite pow_succ_r; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: rewrite pow_succ_r; only 1: simpl; only 1: now rewrite ?IHp; only 1: apply sub_mask_neg_iff'; only 1: now rewrite pow_1_r).	23.8658971786	39283
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0318579673767	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	0.0.8.1.0.0.1.0	synth with cache (only 1: unfold le, min; only 1: intros x y H; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	9.96515202522	9267
Coq.PArith.BinPos.Pos.max_1_l	40	4.0.2.0.0.0.27	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros; only 1: easy; only 1: intros H; only 1: elim (nlt_1_r _ H)).	1.19240307808	2966
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.1.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0749530792236	40
Coq.PArith.BinPos.Pos.min_1_l	40	0.3	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0152761936188	5
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.1.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.073832988739	40
Coq.PArith.BinPos.Pos.succ_max_distr	40	0.0.10.0.0.1.2	synth with cache (only 1: symmetry; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold le, max; only 1: intros x y; only 1: now rewrite compare_succ_succ).	1.49446606636	1562
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.0.3.1	synth with cache (only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply succ_le_mono).	0.0407350063324	21
Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.0.1.0.0	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: intros; only 1: now apply add_le_mono_l).	0.0536260604858	19
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0480971336365	16
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0240211486816	6
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	3.1.1.5	synth with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).	0.556077957153	276
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.7	synth with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0222299098969	10
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0240261554718	5
Coq.PArith.BinPos.Pos.iter_op_succ	40	1.1.2.13.1.6.2	synth with cache (only 1: intros x y z; only 1: induction p; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto; only 1: auto).	2.9970240593	4496
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	0.1.0.3.0.1.1	synth with cache (only 1: destruct n; only 1: easy'; only 1: simpl; only 1: induction n; only 1: easy'; only 1: simpl; only 1: now rewrite IHn).	0.369704008102	272
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	4.18.4	synth with cache (only 1: intros x y; only 1: fix sqrtrem_spec 1; only 1: trivial).	17.5452849865	10505
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	7	synth with cache (only 1: intuition).	0.0225780010223	11
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.6	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intuition).	0.0228409767151	13
Coq.Arith.Le.le_n_0_eq	40
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	12.0	synth with cache (only 1: fix even_equiv 1; only 1: trivial).	0.611577987671	738
Coq.Arith.Even.even_or_odd	40	4.4.1.0.3.32	synth with cache (only 1: Nat.induct n; only 1: constructor; only 1: constructor; only 1: inversion_clear 1; only 1: now do 2 constructor; only 1: now do 2 constructor).	1.62026906013	2523
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0253310203552	5
Coq.Arith.Even.not_even_and_odd	40	1.0.2.2.0.12.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto with arith).	4.42862796783	8904
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	synth with cache (only 1: parity_binop).	0.128087043762	1
Coq.Arith.Even.even_even_plus	40	0	synth with cache (only 1: parity_binop).	0.113996982574	1
Coq.Arith.Even.odd_plus_l	40	0	synth with cache (only 1: parity_binop).	0.0678179264069	1
Coq.Arith.Even.odd_plus_r	40	0	synth with cache (only 1: parity_binop).	0.068332195282	1
Coq.Arith.Even.odd_even_plus	40	0	synth with cache (only 1: parity_binop).	0.0687170028687	1
Coq.Arith.Even.even_plus_aux	40	8	synth with cache (only 1: parity_binop).	0.231662988663	9
Coq.Arith.Even.even_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0705690383911	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0679149627686	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0680069923401	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0714869499207	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0695018768311	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0670990943909	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0676448345184	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0677320957184	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.159113883972	1
Coq.Arith.Even.even_mult_l	40	3	synth with cache (only 1: parity_binop).	0.0668940544128	12
Coq.Arith.Even.even_mult_r	40	0	synth with cache (only 1: parity_binop).	0.0459928512573	1
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0675609111786	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0675451755524	1
Coq.Arith.Even.odd_mult	40	0	synth with cache (only 1: parity_binop).	0.0673489570618	1
Coq.Arith.Even.odd_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0456070899963	1
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0596468448639	1
Coq.Arith.Minus.minus_n_O	40	11	synth with cache (only 1: now Nat.nzsimpl).	0.0960431098938	93
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	19	synth with cache (only 1: now Nat.nzsimpl).	0.366143941879	730
Coq.Arith.Minus.minus_diag_reverse	40	0.0.0.9.32.3	synth with cache (only 1: Nat.bitwise; only 1: Nat.induct ltac:(n); only 1: autorewrite with bitwise; only 1: trivial; only 1: intros n IH; only 1: trivial).	14.3882420063	39608
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	13	synth with cache (only 1: now apply Nat.add_sub_eq_l).	0.0833780765533	108
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.6.1.2.0	synth with cache (only 1: rewrite Nat.add_comm; only 1: intros; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	1.38179016113	1193
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	55.1.0.2	synth with cache (only 1: intros a b; only 1: intros EQ; only 1: rewrite EQ; only 1: now left).	5.37165498734	28273
Coq.Arith.Between.Between.between_le	40
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	0.0.3.0.2	synth with cache (only 1: intros H a b; only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0405120849609	19
Coq.Arith.Between.Between.exists_le_S	40	1.1.1.0	synth with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0287787914276	7
Coq.Arith.Between.Between.exists_S_le	40
Coq.Arith.Between.Between.in_int_intro	40	0.0.29.8	synth with cache (only 1: intros a b c0; only 1: split; only 1: PeanoNat.Nat.order'; only 1: trivial).	8.81390094757	22696
Coq.Arith.Between.Between.in_int_lt	40	2.4	synth with cache (only 1: induction 1; only 1: PeanoNat.Nat.order').	0.0645580291748	36
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	2.0	synth with cache (only 1: intros p q r []; only 1: auto with arith).	0.0182919502258	4
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0.0.0.0	synth with cache (only 1: intros * []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0299670696259	5
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.0.1.0.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0308539867401	6
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40	2.0.1.0.15	synth with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: apply le_S_n; only 1: auto with arith; only 1: eauto with arith).	11.4191310406	9289
Coq.Arith.Between.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.0.5.10.0.1.0	synth with cache (only 1: destruct n; only 1: intros H; only 1: now left; only 1: destruct m; only 1: auto; only 1: intros H; only 1: now left).	3.32210111618	3430
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	1.5	synth with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	0.0367691516876	20
Coq.Arith.Div2.odd_S2n	40	0.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.019054889679	3
Coq.Arith.Div2.div2_double	40	0	synth with cache (only 1: apply Nat.div2_double).	0.0118010044098	1
Coq.Arith.Div2.div2_double_plus_one	40	1.0.2	synth with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.bitwise; only 1: trivial).	0.0464010238647	33
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0141389369965	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0144100189209	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	synth with cache (only 1: apply Nat.add_le_mono).	0.0134689807892	2
Coq.Arith.Plus.plus_lt_compat	40	1.5.48	synth with cache (only 1: intros EQ; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order').	2.15732884407	5502
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	2	synth with cache (only 1: Nat.order).	0.0142560005188	3
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	1	synth with cache (only 1: apply Nat.lt_succ_r).	0.0144138336182	2
Coq.Arith.Lt.le_not_lt	40	3.3	synth with cache (only 1: intros EQ; only 1: Nat.order_nz).	0.0265951156616	17
Coq.Arith.Lt.lt_not_le	40	4.4	synth with cache (only 1: intro H'; only 1: Nat.order_nz).	0.0278639793396	10
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	0.1	synth with cache (only 1: intros; only 1: Nat.order).	0.0188550949097	3
Coq.Arith.Lt.lt_n_S	40	4	synth with cache (only 1: apply Nat.lt_succ_r).	0.0173540115356	5
Coq.Arith.Lt.lt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0132360458374	1
Coq.Arith.Lt.S_pred	40	0.8.2.44	synth with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl'; only 1: trivial).	4.39320683479	8645
Coq.Arith.Lt.S_pred_pos	40	2.4.0.9	synth with cache (only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl'; only 1: trivial).	0.746762037277	1187
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	5.5.2.6.17	synth with cache (only 1: Nat.induct n; only 1: trivial; only 1: intros; only 1: apply Nat.lt_succ_r; only 1: Morphisms.solve_proper).	2.14850997925	3743
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	9.38661384583	9316
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	12.3036367893	12173
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.316509008408	163
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0130541324615	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0130548477173	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0131528377533	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0130398273468	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0330510139465	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.0.0.10.54	synth with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	30.7692511082	65290
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	0.9.8.0	synth with cache (only 1: destruct n; only 1: auto; only 1: right; only 1: apply Nat.lt_0_succ).	1.28055906296	1359
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.789796829224	207
Coq.Arith.Compare_dec.le_lt_dec	40	1.1.2.0.2.1.3	synth with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	3.73233604431	1818
Coq.Arith.Compare_dec.le_le_S_dec	40	0.1.0.0.0.0.0.0.0.0.18	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.42152905464	1838
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.443290948868	181
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.395554065704	102
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.4	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.142596960068	69
Coq.Arith.Compare_dec.lt_dec	40	0.0.1.0.0.0.0.0.3	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	1.48975110054	922
Coq.Arith.Compare_dec.gt_dec	40	1	synth with cache (only 1: apply le_dec).	0.0129818916321	2
Coq.Arith.Compare_dec.ge_dec	40	1	synth with cache (only 1: apply le_dec).	0.0129520893097	2
Coq.Arith.Compare_dec.dec_le	40	0.1.2.5	synth with cache (only 1: destruct (le_gt_dec n m); only 1: now left; only 1: right; only 1: now apply gt_not_le).	0.333410024643	200
Coq.Arith.Compare_dec.dec_lt	40	0	synth with cache (only 1: apply Nat.le_decidable).	0.0126671791077	1
Coq.Arith.Compare_dec.dec_gt	40	1	synth with cache (only 1: apply Nat.lt_decidable).	0.0129299163818	2
Coq.Arith.Compare_dec.dec_ge	40	2	synth with cache (only 1: apply Nat.le_decidable).	0.0441179275513	21
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0144560337067	1
Coq.Arith.Compare_dec.not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.0136780738831	1
Coq.Arith.Compare_dec.not_gt	40	1	synth with cache (only 1: apply Nat.le_ngt).	0.0148408412933	2
Coq.Arith.Compare_dec.not_ge	40	1	synth with cache (only 1: apply Nat.nle_gt).	0.0151569843292	2
Coq.Arith.Compare_dec.not_lt	40	1	synth with cache (only 1: apply Nat.nlt_ge).	0.0152270793915	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	synth with cache (only 1: apply Nat.compare_lt_iff).	0.0156869888306	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2	synth with cache (only 1: apply Nat.compare_gt_iff).	0.017030954361	3
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	synth with cache (only 1: apply Nat.leb_le).	0.0145490169525	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0262160301208	3
Coq.Arith.Compare_dec.leb_complete_conv	40	1	synth with cache (only 1: apply leb_iff_conv).	0.0159728527069	2
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	2.27.16	synth with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: trivial).	1.0677189827	1810
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0230219364166	6
Coq.Arith.EqNat.eq_nat_eq	40	2	synth with cache (only 1: apply eq_nat_is_eq).	0.492079019547	147
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	3.2.4.0.4.1.0.9.9.14.12	synth with cache (only 1: induction n as [| n IH]; only 1: intros n; only 1: induction n; only 1: now left; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial).	23.1869180202	60718
Coq.Arith.EqNat.beq_nat_refl	40	1.0.8.34	synth with cache (only 1: Nat.induct n; only 1: split; only 1: intros; only 1: now rewrite H).	0.60706281662	1318
Coq.Arith.EqNat.beq_nat_true	40	0.0.4.4.0.0.9.0.1.0.0.16	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: contradiction || auto).	9.95515012741	21303
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	0.0.4.4.0.0.12.2.0.57	synth with cache (only 1: induction n as [| n IH]; only 1: destruct m; only 1: trivial; only 1: discriminate; only 1: destruct m; only 1: simpl; only 1: intros; only 1: discriminate; only 1: simpl; only 1: contradiction || auto).	39.572204113	206741
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	synth with cache (only 1: destr_bool).	0.0117728710175	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.1.2.3.1.14.0	synth with cache (only 1: intros A A_wd A0 AS; only 1: unfold Basics.flip, respectful; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	10.0782310963	19521
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.013482093811	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: reflexivity).	0.0115058422089	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: reflexivity).	0.0114228725433	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0113348960876	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	synth with cache (only 1: reflexivity).	0.0116000175476	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	synth with cache (only 1: reflexivity).	0.0116159915924	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.5	synth with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0176689624786	8
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0128412246704	2
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40	0.0.0.0.0.0.0.0.1.0.2.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).	11.0117430687	10123
Coq.Arith.PeanoNat.Nat.compare_antisym	40	3.0.0.0.0.2.0.1.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	4.31250190735	4676
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.2.0.1	synth with cache (only 1: revert m; only 1: destruct m; only 1: split; only 1: trivial).	0.108358860016	36
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	35.0	synth with cache (only 1: intro; only 1: false_hyp ltac:(H) nle_succ_0).	2.15334916115	4106
Coq.Arith.PeanoNat.Nat.pow_0_r	40	1	synth with cache (only 1: split).	0.0127170085907	2
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	9.0	synth with cache (only 1: intro; only 1: reflexivity).	0.0532250404358	58
Coq.Arith.PeanoNat.Nat.square_spec	40	7	synth with cache (only 1: reflexivity).	0.0151529312134	8
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.9	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0597538948059	50
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	7.0	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.134547948837	72
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0	synth with cache (only 1: inversion 1).	0.0139498710632	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	1.0	synth with cache (only 1: inversion 1; only 1: split).	0.0172820091248	3
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	4.6	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	0.0439419746399	56
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0144398212433	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	0.31	synth with cache (only 1: fix gcd_divide 1; only 1: eauto using Private_Tac.eq_trans, Private_Tac.eq_sym).	2.96253108978	5338
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	1	synth with cache (only 1: apply le_0_l).	0.0137839317322	2
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0311210155487	6
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	1.7.5.5	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: fix le_div2 1; only 1: trivial).	10.4533789158	10454
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.1.0.1.1.1	synth with cache (only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: destruct n; only 1: trivial; only 1: trivial).	0.110903978348	69
Coq.Arith.PeanoNat.Nat.double_twice	40	3.2.7	synth with cache (only 1: simpl; only 1: intros Hy; only 1: now rewrite !add_0_r).	0.91908288002	538
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	3.8	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.0903789997101	142
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	12.2.2	synth with cache (only 1: unfold testbit, odd; only 1: fix odd_spec 1; only 1: trivial).	27.8858101368	17421
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	4.9.3.2	synth with cache (only 1: intros x y; only 1: intros H; only 1: fix le_div2 1; only 1: trivial).	2.78228282928	3433
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0174460411072	4
Coq.Arith.PeanoNat.Nat.lor_spec	40	1.0.15.1	synth with cache (only 1: apply testbit_bitwise_1; only 1: fix even_spec 1; only 1: trivial; only 1: solve_max).	0.583121061325	797
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.0.5.1.5.0.2	synth with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: rewrite max_le_iff; only 1: auto; only 1: rewrite max_le_iff; only 1: right; only 1: trivial).	13.4041829109	9043
Coq.Arith.PeanoNat.Nat.div2_spec	40	6.2	synth with cache (only 1: simpl; only 1: eauto).	0.0201089382172	10
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0136060714722	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	4.0	synth with cache (only 1: intros; only 1: Nat.order').	0.0278611183167	16
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0137259960175	1
Coq.Arith.Gt.gt_S_n	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.012815952301	1
Coq.Arith.Gt.gt_S	40	0.13.6	synth with cache (only 1: intros H; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	0.770626068115	932
Coq.Arith.Gt.gt_pred	40	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0137009620667	1
Coq.Arith.Gt.le_not_gt	40	0	synth with cache (only 1: apply Nat.le_ngt).	0.0132961273193	1
Coq.Arith.Gt.gt_not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.0137140750885	1
Coq.Arith.Gt.le_S_gt	40	2	synth with cache (only 1: apply Nat.le_succ_l).	0.0157961845398	3
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Nat.lt_succ_r).	0.013612985611	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.0131969451904	1
Coq.Arith.Gt.le_gt_S	40	0	synth with cache (only 1: apply Nat.lt_succ_r).	0.0130500793457	1
Coq.Arith.Gt.le_gt_trans	40	0.1.80.10.4	synth with cache (only 1: intros; only 1: apply Nat.le_succ_l; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: Nat.order').	20.4079480171	76027
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0134608745575	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0142230987549	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	2.7.3	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0794129371643	204
Coq.Logic.JMeq.JMeq_trans	40	1.0.2	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0126531124115	6
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0124289989471	4
Coq.Logic.JMeq.JMeq_rect	40	0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0126309394836	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.2.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0132241249084	5
Coq.Logic.JMeq.JMeq_rect_r	40	0.2.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0133409500122	5
Coq.Logic.JMeq.JMeq_congr	40	0.2.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0138840675354	5
Coq.Logic.JMeq.JMeq_eq_dep_id	40	1.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: apply eq_dep_intro).	0.0140669345856	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0116798877716	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0119309425354	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.3.10.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.444947957993	570
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.1.9.14	synth with cache (only 1: intro z; only 1: intros [x y]; only 1: simpl in *; only 1: trivial).	0.269280195236	989
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	1.12.3.13.5.13	synth with cache (only 1: red; only 1: repeat split; only 1: intro x; only 1: destruct x as (a1, a2, Heq); only 1: subst; only 1: reflexivity).	7.98533701897	49174
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0155398845673	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40
Coq.Logic.Classical_Prop.not_imply_elim	40	8.0.5	synth with cache (only 1: intro not_eq_b1_b2; only 1: intros a; only 1: tauto).	0.239606142044	365
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.1.1.0	synth with cache (only 1: intros; only 1: intro HA; only 1: apply H; only 1: intro; only 1: trivial).	0.0417511463165	15
Coq.Logic.Classical_Prop.imply_to_or	40	2.0.0.0.2.9.1	synth with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: assert (h : P 1); only 1: unfold P; only 1: intuition; only 1: tauto).	2.4811398983	2828
Coq.Logic.Classical_Prop.imply_to_and	40	1.0.1.1	synth with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: tauto).	0.0950019359589	59
Coq.Logic.Classical_Prop.or_to_imply	40	3.2	synth with cache (only 1: intros A; only 1: intuition).	0.0268521308899	20
Coq.Logic.Classical_Prop.not_and_or	40	0.3	synth with cache (only 1: intros; only 1: tauto).	0.05721616745	20
Coq.Logic.Classical_Prop.or_not_and	40	0.0	synth with cache (only 1: intros; only 1: tauto).	0.0206670761108	2
Coq.Logic.Classical_Prop.not_or_and	40	0.0.0.0	synth with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0238020420074	4
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.0185599327087	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	synth with cache (only 1: tauto).	0.0164670944214	1
Coq.Logic.Classical_Prop.imply_and_or2	40	0.2	synth with cache (only 1: intro HAB; only 1: tauto).	0.0382480621338	26
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.31	synth with cache (only 1: intros [x y]; only 1: eauto).	0.411339998245	951
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	3.134	synth with cache (only 1: red; only 1: eauto).	0.940363883972	9691
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	0.81.0	synth with cache (only 1: intro z; only 1: subst; only 1: reflexivity).	4.44509506226	32809
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	4.30.1.4	synth with cache (only 1: intro x; only 1: intros; only 1: subst; only 1: reflexivity).	0.577774047852	2598
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.0265419483185	10
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	0.0.0.0.0.0.0.0.0.1.0.0.0.1.0.0.0.5.19.0	synth with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).	33.8787539005	28066
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	1.2.3.5.2.0.1.20.2.3.2	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: firstorder).	18.5611040592	40553
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.0.1.0.0	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0276780128479	12
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	3.15	synth with cache (only 1: compute; only 1: firstorder).	0.559529066086	1288
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.2.0.8.0	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.168401002884	200
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.2.0	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0245900154114	6
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.14	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	10.3572621346	17805
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.2.2	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0309450626373	33
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	17	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	2.1203789711	1249
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	3.0.0.1	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.781167984009	22
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.7.0.0.0.1	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	1.93350601196	660
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	4.16.4.103	synth with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	1.2074201107	11035
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40	11.2.11.2.13.5.7.29	synth with cache (only 1: red; only 1: intro H; only 1: intro z; only 1: destruct (H z); only 1: rewrite H0; only 1: auto; only 1: rewrite H0; only 1: auto).	30.7183279991	146961
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	9.0.0.4.2	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.192010164261	655
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	29.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.518267869949	2270
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	0.0.1.0.0	synth with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0232200622559	6
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	0.0.0.1.0.0.0.0.7.1	synth with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	1.28605604172	2895
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	13.14	synth with cache (only 1: intros x [n fxn]; only 1: auto with arith).	12.4320011139	26563
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	5.6.13.5	synth with cache (only 1: intro abs; only 1: red; only 1: simple induction 2; only 1: auto).	19.240803957	47652
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.2.14.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.490370035172	907
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	9.50418114662	10182
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0210161209106	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.5.4	synth with cache (only 1: intros; only 1: rewrite H; only 1: trivial).	0.0403199195862	84
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	4.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.0114598274231	7
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0122489929199	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0123701095581	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	4.11.0.0	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.188660144806	384
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	2	synth with cache (only 1: reflexivity).	0.00867700576782	3
Coq.Logic.FunctionalExtensionality.eta_expansion	40	2	synth with cache (only 1: trivial).	0.00856900215149	3
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0	synth with cache (only 1: intros A P H p q; only 1: eauto using @functional_extensionality_dep).	0.0116338729858	2
Coq.Logic.HLevels.false_hprop	40	2.1	synth with cache (only 1: intros H H'; only 1: destruct H).	0.0127170085907	14
Coq.Logic.HLevels.true_hprop	40	0.20.0	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: reflexivity || destruct H).	0.154003858566	563
Coq.Logic.HLevels.not_hprop	40	0.0.25.14.0	synth with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: intros; only 1: contradiction).	1.26767802238	8049
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	0.23.18.0.3	synth with cache (only 1: unfold eq_trans, eq_sym, eq_ind; only 1: intros A B f g <- H; only 1: destruct r, 1; only 1: destruct H; only 1: reflexivity).	10.3618330956	52396
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	6.0.0.0.53.1	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	3.7230629921	14762
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.0.0.11.0	synth with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: firstorder; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.437204837799	497
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	3.4.6.5	synth with cache (only 1: intro x; only 1: intro p; only 1: induction 1; only 1: reflexivity).	0.220342874527	693
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.9.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0583808422089	140
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	0.34.0	synth with cache (only 1: destruct 1; only 1: subst; only 1: reflexivity).	0.679798126221	3433
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.36.1	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.615859985352	3193
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	2.57	synth with cache (only 1: inversion 1; only 1: reflexivity).	1.94297504425	12371
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.8	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0192611217499	24
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.9.0.1.8.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.565367937088	1508
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0135958194733	4
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0189230442047	17
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.7.0.1.6.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.48625421524	776
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	0.1.4.4.18.3.4.2.0.0	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct 1; only 1: apply eq_existT_uncurried; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).	10.1499099731	36999
Coq.Logic.EqdepFacts.eq_sigT_fst	40	2.0.2.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0216600894928	16
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.2.2.1.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0217800140381	10
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	34.5.7.0	synth with cache (only 1: intro x; only 1: destruct 1 as (eq_qp, H); only 1: rewrite H; only 1: auto).	1.49766492844	7656
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	4.5.1.9.12.12.20.26	synth with cache (only 1: red; only 1: subst; only 1: intros eq_rect_eq; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: reflexivity; only 1: destruct H; only 1: apply eq_dep_intro).	6.21717095375	48900
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	10.1	synth with cache (only 1: red; only 1: auto).	0.181396007538	390
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	4.19.0.0.5.0	synth with cache (only 1: red; only 1: intro; only 1: intro eq_dep_eq; only 1: intros; only 1: rewrite H; only 1: apply eq_dep_eq).	1.51553487778	10867
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	28.11.0	synth with cache (only 1: intro H; only 1: red; only 1: auto).	1.57523298264	7643
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	9.0	synth with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.163514852524	230
Coq.Logic.EqdepFacts.f_eq_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0288701057434	21
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.0229339599609	20
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).	0.0130310058594	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	7.1	synth with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.0205850601196	35
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	synth with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.022577047348	31
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	0.5.7.10	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: contradiction).	0.204747915268	905
Coq.Logic.Decidable.dec_True	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.00816798210144	2
Coq.Logic.Decidable.dec_False	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.00775599479675	2
Coq.Logic.Decidable.dec_or	40	0.0.7	synth with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).	0.0286228656769	22
Coq.Logic.Decidable.dec_and	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0238089561462	2
Coq.Logic.Decidable.dec_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0129179954529	2
Coq.Logic.Decidable.dec_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0184009075165	2
Coq.Logic.Decidable.dec_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0269620418549	2
Coq.Logic.Decidable.not_not	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0119199752808	2
Coq.Logic.Decidable.not_or	40	0	synth with cache (only 1: tauto).	0.0125410556793	1
Coq.Logic.Decidable.not_and	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0216219425201	3
Coq.Logic.Decidable.not_imp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0208668708801	2
Coq.Logic.Decidable.imp_simp	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0155220031738	2
Coq.Logic.Decidable.not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0718529224396	2
Coq.Logic.Decidable.not_true_iff	40	3	synth with cache (only 1: tauto).	0.00965213775635	4
Coq.Logic.Decidable.not_false_iff	40	0	synth with cache (only 1: tauto).	0.00898289680481	1
Coq.Logic.Decidable.not_not_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.015969991684	2
Coq.Logic.Decidable.contrapositive	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0195450782776	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0231909751892	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0230958461761	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0225219726562	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0231130123138	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0245759487152	2
Coq.Logic.Decidable.not_or_iff	40	0	synth with cache (only 1: tauto).	0.017284154892	1
Coq.Logic.Decidable.not_and_iff	40	0	synth with cache (only 1: tauto).	0.0144028663635	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0290751457214	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0293910503387	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.0196769237518	2
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0752801895142	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	2.2.3.8	synth with cache (only 1: destruct s; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	2.71427702904	269
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0352787971497	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.748558044434	672
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0149350166321	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0158531665802	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0464880466461	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.0.0.1.3	synth with cache (only 1: unfold add; only 1: destruct s; only 1: simpl; only 1: auto; only 1: ok).	0.356398105621	50
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2	synth with cache (only 1: exact (rmatch _ _ _)).	0.0163922309875	3
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0157639980316	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0.0	synth with cache (only 1: unfold remove; only 1: auto_tc).	0.0196208953857	2
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	0.3.1.0.0	synth with cache (only 1: unfold remove_min; only 1: destruct s as [| c l y r]; only 1: easy; only 1: destruct delmin as (x0, s0); only 1: easy).	0.0928101539612	24
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.0.0.6	synth with cache (only 1: split; only 1: simpl; only 1: auto; only 1: auto).	0.024111032486	10
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.3.2.5.0.1.12	synth with cache (only 1: intros s Hs; only 1: induction s; only 1: simpl; only 1: split; only 1: intuition; only 1: auto; only 1: simpl; only 1: auto).	1.17546105385	2169
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	2.2.0	synth with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.121562004089	7
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.0176720619202	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0194749832153	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.1.0.0.5	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	6.04355502129	1722
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0418548583984	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	0.0.25.4.0.0	synth with cache (only 1: destruct 1; only 1: auto; only 1: invrb; only 1: revert H; only 1: destruct 1 as [l x r Hl Hr]; only 1: invrb).	2.33687496185	6293
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.3.0.3.3	synth with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.568468093872	503
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	12.1.0.0.2.1.4	synth with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: invrb; only 1: intuition_in; only 1: descolor; only 1: destruct 1; only 1: invrb; only 1: intuition).	8.81222200394	8647
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.0.0.0.1.1.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0601260662079	10
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	3.5	synth with cache (only 1: invrb; only 1: auto).	0.0267820358276	10
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	33	synth with cache (only 1: now auto_tc).	0.198442935944	550
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	22.0	synth with cache (only 1: unfold partition, filter; only 1: inA).	0.992364883423	1804
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.6.2.0	synth with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0845930576324	81
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0262460708618	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.2.0.0.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.608640909195	345
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0440239906311	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.5.0.0.0.5	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.951565980911	881
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0347650051117	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	0.0.0.10.0.0.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	1.34212207794	1318
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	4.0.2.0	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: subst; only 1: intuition).	0.0730719566345	21
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	3.5.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.389549016953	261
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	3.0.2.0.0	synth with cache (only 1: intros x y; only 1: constructor; only 1: intuition; only 1: intros; only 1: intuition).	0.0312550067902	10
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.1.1	synth with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0241851806641	5
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	5.45	synth with cache (only 1: compute; only 1: discriminate).	0.591871976852	1414
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	8.5	synth with cache (only 1: intuition; only 1: discriminate).	0.107417821884	155
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0303771495819	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.4.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0312111377716	8
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0297811031342	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0299670696259	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0296719074249	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	2.0.1.4	synth with cache (only 1: intros [| l' o' r']; only 1: simpl; only 1: tauto; only 1: trivial).	0.198807954788	103
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	1.2.0.0.13	synth with cache (only 1: unfold lt; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	11.3426849842	4197
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0285909175873	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	3.3.34.41	synth with cache (only 1: intro H; only 1: rewrite H; only 1: intros EQ; only 1: auto).	1.12775301933	10953
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0270891189575	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.2.0.1	synth with cache (only 1: intros E; only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.037994146347	8
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	5.4	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.393514871597	113
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.5.0	synth with cache (only 1: intros; only 1: rewrite singleton_spec; only 1: intuition).	0.0933871269226	8
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	0.7.0	synth with cache (only 1: intros; only 1: rewrite union_spec; only 1: auto).	0.0538120269775	15
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.0	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0268518924713	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0257968902588	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0.1	synth with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: auto).	0.0301558971405	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0274510383606	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.034805059433	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0371141433716	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0453789234161	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	3.0.0	synth with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.0283181667328	6
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	7	synth with cache (only 1: intuition).	0.0398471355438	8
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	4.44	synth with cache (only 1: Ndec.eqb2eq; only 1: intuition).	7.04188203812	7531
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	3	synth with cache (only 1: intuition).	0.036817073822	4
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	4	synth with cache (only 1: intuition).	0.0391199588776	5
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	6	synth with cache (only 1: intuition).	0.0932519435883	28
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.0231690406799	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40	2.0	synth with cache (only 1: rewrite add_spec; only 1: intuition).	0.037948846817	4
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	0.0.2.0	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.0537087917328	6
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.6	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.430899143219	53
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	0.1	synth with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0382268428802	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.074737071991	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	2.0	synth with cache (only 1: intros; only 1: intuition).	0.0782189369202	4
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	8	synth with cache (only 1: intuition).	0.0357019901276	11
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.0.0.0.0.1.2	synth with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.773066997528	147
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.61034798622	251
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	8.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.0412089824677	14
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	7.0	synth with cache (only 1: unfold Equal; only 1: firstorder).	0.096776008606	43
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.0.1	synth with cache (only 1: constructor; only 1: firstorder; only 1: firstorder).	0.0190689563751	4
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.14.0.1	synth with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: intros P; only 1: intuition).	23.4581079483	6886
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	2.4	synth with cache (only 1: unfold Equal, Subset; only 1: firstorder).	0.327239990234	104
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.062618970871	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.2.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.23135304451	22
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: auto).	0.0659539699554	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0581870079041	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.4.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.106257915497	7
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0551540851593	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.165898799896	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	9	synth with cache (only 1: intuition).	0.174853086472	68
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: fsetdec).	0.0411469936371	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.104068040848	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0236070156097	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0362200737	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0371341705322	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.031063079834	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0275590419769	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.109910964966	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.0500469207764	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0726139545441	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0420889854431	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0384039878845	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.12	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.619566917419	165
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	1.0	synth with cache (only 1: intros; only 1: fsetdec).	0.0467281341553	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0390498638153	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.0795359611511	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	1	synth with cache (only 1: intuition fsetdec).	0.163718938828	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	0	synth with cache (only 1: fsetdec).	0.077378988266	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.107410907745	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.108197927475	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.13663315773	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.0822789669037	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.261627912521	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: fsetdec).	0.0843489170074	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0557250976562	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0977711677551	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.102722167969	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: intuition fsetdec).	0.137616872787	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.0869209766388	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.171839952469	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.266862154007	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.2407579422	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0336780548096	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.033656835556	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0548861026764	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0576000213623	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0471279621124	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0566940307617	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.0706241130829	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	1.0	synth with cache (only 1: rewrite union_spec; only 1: fsetdec).	0.0671129226685	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0797169208527	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0682430267334	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.0840060710907	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.0813989639282	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: intuition fsetdec).	0.144207000732	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.148703098297	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.20396399498	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.136009931564	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.140934944153	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0485019683838	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0469400882721	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0316061973572	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0316009521484	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.042897939682	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0478060245514	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.0752968788147	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0399010181427	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.10768699646	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.0915088653564	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.157079935074	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.141760110855	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	1.0.2	synth with cache (only 1: red; only 1: intuition; only 1: fsetdec).	0.0946400165558	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.2	synth with cache (only 1: expAdd; only 1: fsetdec).	0.151343107224	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.20881986618	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.354909896851	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.318215847015	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.273126125336	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	1.0.0.1.0.1.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.192029953003	63
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	3.1.0.0.0.2.2	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	2.95482301712	1146
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	4.2.0.3.0	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with relations; only 1: fsetdec).	1.1848859787	812
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.1.0.7.0	synth with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: auto with set; only 1: fsetdec).	3.68071007729	2141
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40	5.3.13.4.0.4.1.0.20.0	synth with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: simpl; only 1: auto; only 1: apply Comp; only 1: auto with relations; only 1: auto).	13.097921133	24428
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	0.5.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: unfold Add in *; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	5.99793505669	3134
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.0289130210876	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	0.0.0.5.1.0	synth with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.288198947906	123
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	0.301461935043	141
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0	synth with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0189568996429	2
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	3.4.0	synth with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0485548973083	37
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	1.0	synth with cache (only 1: symmetry; only 1: auto with set).	0.0222070217133	3
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0266501903534	5
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.5.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set relations; only 1: auto with set relations).	0.603473901749	363
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_equal; only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto with set).	0.0385439395905	7
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40	7.3.0.0	synth with cache (only 1: red; only 1: red; only 1: unfold gtb; only 1: Dec.fsetdec).	0.460466146469	375
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.1.0.3.1.1	synth with cache (only 1: red; only 1: red; only 1: unfold leb, gtb; only 1: intros; only 1: rewrite H; only 1: auto).	0.785126924515	178
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0280780792236	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0262529850006	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	0.10.1.1.0.1.2	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: inv; only 1: inv; only 1: constructor; only 1: auto).	24.0099508762	4699
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.3	synth with cache (only 1: unfold singleton; only 1: intuition_in).	0.0319747924805	17
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.1.0.0.1	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0323879718781	8
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	2.66861391068	228
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.023542881012	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	0.0.0.0	synth with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0276029109955	4
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	0.0.0.2	synth with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.273111104965	76
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0495021343231	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	0.4.1	synth with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intros; only 1: intuition).	1.2633099556	286
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.033215045929	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	2.0.2.0.0	synth with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: rewrite InA_alt; only 1: intros; only 1: destruct H0 as (H0, _); only 1: intuition).	1.02146482468	120
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.1	synth with cache (only 1: rewrite <- not_mem_iff; only 1: eauto with set relations).	0.0299279689789	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: auto with set).	0.020968914032	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0703420639038	23
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.3	synth with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.552546977997	87
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	1.0	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.11212182045	36
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	1.0.2	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0329179763794	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0304501056671	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	0.1.0.1.0.0.0.0	synth with cache (only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: apply subset_2; only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: auto with *).	0.0407049655914	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0368399620056	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	4.1.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.112941026688	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.0	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.0660490989685	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: auto with set).	0.022313117981	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	1.2.1	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: apply subset_2; only 1: auto with set).	0.0669288635254	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	0.4	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0877730846405	15
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40	1.9	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.731880903244	132
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40	0.0.0.0.0.0.10.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	3.80958890915	1927
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	0	synth with cache (only 1: auto with set relations).	0.0224640369415	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.1.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0303380489349	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.3.0.0.1.2	synth with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: auto; only 1: intuition; only 1: discriminate).	0.265949964523	175
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	synth with cache (only 1: auto with set).	0.0209522247314	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0386300086975	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: auto with set).	0.0226140022278	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0226480960846	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: auto with set).	0.0205180644989	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.1	synth with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.151220083237	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: auto with set).	0.0208640098572	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: auto with set).	0.0201199054718	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: auto with set).	0.020073890686	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	synth with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.145187139511	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: auto with set).	0.0209240913391	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0258140563965	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0746040344238	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.022430896759	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: auto with set).	0.0206120014191	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: auto with set).	0.0206859111786	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: auto with set).	0.0206460952759	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	3.0.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0296471118927	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	0.8	synth with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.320811986923	36
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: auto with set).	0.0199811458588	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: auto with set).	0.0199961662292	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0589940547943	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: auto with set).	0.0198931694031	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0254139900208	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0	synth with cache (only 1: auto with set).	0.0206820964813	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: auto with set).	0.0204911231995	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: auto with set).	0.0206961631775	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0301141738892	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.0.2.0.0.0.0.1	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.532603025436	130
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	0.3.0.0.0.2.1	synth with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	1.60307693481	620
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	synth with cache (only 1: auto with set).	0.0201761722565	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.053750038147	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0544390678406	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	2.8.2	synth with cache (only 1: intros H a; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.77369594574	308
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.0.4.1.1.4.0.0.1.0	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	2.35621094704	2124
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	6.0	synth with cache (only 1: intros; only 1: auto with set).	0.0554928779602	16
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	16.0	synth with cache (only 1: intros; only 1: auto with set).	12.093765974	5515
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	synth with cache (only 1: auto with set).	0.0299680233002	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.2.0.0.0.2.0	synth with cache (only 1: unfold Add, MP.Add; only 1: red; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	22.7587659359	2851
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40	0.0.0.0.0.0.0.2.1	synth with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	1.6359360218	231
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	5.0.0.0.0.0.1.0.0.4.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto with set; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: auto with set).	8.86464190483	5921
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.10.10.1.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	1.29751086235	1165
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.037257194519	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40	5.6.4.0.0.4.8.0	synth with cache (only 1: intros; only 1: generalize (choose_spec1 (s:=filter f s)), (choose_spec2 (s:=filter f s)); only 1: intros; only 1: apply exists_1; only 1: auto; only 1: red; only 1: exists x; only 1: auto with set).	26.4991629124	23484
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	synth with cache (only 1: eauto).	0.0201399326324	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.168489933014	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	synth with cache (only 1: intuition).	0.0178718566895	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.0.4.32.2	synth with cache (only 1: intros; only 1: red; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	1.93072199821	2919
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	3	synth with cache (only 1: fsetdec).	0.52109003067	58
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	synth with cache (only 1: fsetdec).	0.102949142456	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	synth with cache (only 1: fsetdec).	0.244210004807	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	1	synth with cache (only 1: fsetdec).	0.0248739719391	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	synth with cache (only 1: fsetdec).	0.0621290206909	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	1	synth with cache (only 1: fsetdec).	0.256242990494	73
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	synth with cache (only 1: fsetdec).	0.0887157917023	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	synth with cache (only 1: fsetdec).	0.131321907043	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	synth with cache (only 1: fsetdec).	0.136394023895	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	synth with cache (only 1: fsetdec).	0.0708131790161	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	synth with cache (only 1: fsetdec).	0.22331404686	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	synth with cache (only 1: fsetdec).	0.278769016266	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	1.3.4.6.3	synth with cache (only 1: intros x y H s s' H0; only 1: intros E; only 1: rewrite E; only 1: intuition; only 1: intuition).	5.46589899063	2161
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	0	synth with cache (only 1: fsetdec).	0.0798590183258	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	synth with cache (only 1: fsetdec).	0.0862309932709	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0694210529327	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition_in).	0.0597920417786	2
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	synth with cache (only 1: intuition_in).	0.0277438163757	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.0.0	synth with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in).	0.0248351097107	3
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0164389610291	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.6.0	synth with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.080274105072	13
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.3	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.191787004471	17
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.0.2	synth with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.0494830608368	5
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.0.3.0.0.2	synth with cache (only 1: intros x y z; only 1: intro H; only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.18924498558	68
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0181069374084	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	synth with cache (only 1: eauto).	0.0152950286865	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0378859043121	8
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	1.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.091922044754	32
Coq.MSets.MSetGenTree.Props.empty_spec	40	6.21	synth with cache (only 1: intro H; only 1: auto).	0.327709913254	442
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	synth with cache (only 1: intuition_in).	0.0115180015564	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.130653142929	71
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1.13.1.9.45	synth with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.92368221283	3493
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	2.5.2.8.47	synth with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	1.33371806145	2720
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	35.37.6	synth with cache (only 1: intuition; only 1: contradict ltac:(H); only 1: firstorder).	9.05024313927	27696
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.2.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: rewrite elements_iff; only 1: apply elements_iff).	0.0605418682098	15
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: compute; only 1: auto with extcore).	0.0243999958038	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	2.2.4.1	synth with cache (only 1: compute; only 1: intuition; only 1: eauto with set; only 1: eauto with set).	2.3131070137	516
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	3.0.4.0.1	synth with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.251819849014	137
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.5.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: Dec.fsetdec; only 1: intro; only 1: inversion 1).	0.743478059769	462
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.5.1	synth with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.461519002914	70
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	2.28434586525	568
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.0.0.0.3.0.2.0.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	6.79324698448	3095
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	2.2.7.5.2.2	synth with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: split; only 1: now rewrite H; only 1: now rewrite H).	20.9647541046	6073
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	0.0.0.0.0.0.0.0.0.0.1.6	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	1.93905997276	1229
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.2.1	synth with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.0272538661957	6
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	3	synth with cache (only 1: intuition).	0.0190069675446	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.6.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.063884973526	43
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.0.0.0.2	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.232142925262	79
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	6.0.0.0	synth with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).	0.0576779842377	17
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2.1.3.0	synth with cache (only 1: unfold elements; only 1: destruct s; only 1: intuition; only 1: split).	0.158205032349	48
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	0.0.1.2.0.2.3	synth with cache (only 1: unfold Empty; only 1: destruct s; only 1: intros; only 1: intro; only 1: inv; only 1: intros; only 1: discriminate).	3.08528709412	1231
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	1.0	synth with cache (only 1: unfold elements; only 1: auto).	0.0254900455475	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0	synth with cache (only 1: tauto).	0.0132529735565	1
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	5.45850610733	1436
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0	synth with cache (only 1: intuition).	0.0168159008026	1
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.0.2.14.0	synth with cache (only 1: intros x Hs; only 1: unfold singleton; only 1: rewrite InA_cons; only 1: intuition; only 1: inv).	0.730916976929	909
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.141262054443	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	4	synth with cache (only 1: intuition).	0.0176150798798	5
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	30	synth with cache (only 1: easy).	1.32068490982	1455
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	2.2.0	synth with cache (only 1: split; only 1: intuition; only 1: intuition).	0.023246049881	7
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	0.0.1.1	synth with cache (only 1: intro l; only 1: intro H; only 1: inv; only 1: tauto).	0.0245800018311	6
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0262567996979	3
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.1.2	synth with cache (only 1: destruct s; only 1: inversion 2; only 1: simpl; only 1: discriminate).	0.0438859462738	22
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.0	synth with cache (only 1: intro s; only 1: auto).	0.0188148021698	3
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	0.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0293068885803	3
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: auto).	0.0199489593506	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.012363910675	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	1.1.3.3.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.961428880692	1660
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.0.2.1.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.0279009342194	26
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.8.2	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0461020469666	125
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	1.0.7.20.16	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).	5.10596299171	16529
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	2.3.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.28578710556	581
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.0.1.2.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	0.0213098526001	20
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.0.2.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	4.72673177719	10163
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	3.4.5.7.13	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	3.95407509804	16320
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.1.0.0.1.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	2.91344594955	3853
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	5.4.0.0.2.0.0.2.3	synth with cache (only 1: intros; only 1: elim H; only 1: constructor 1; only 1: intro y0; only 1: auto; only 1: intro y0; only 1: intros; only 1: eauto; only 1: auto with sets).	2.84709095955	4470
Coq.Relations.Relations.inverse_image_of_eq	40	1.2.5.12.2.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: induction 1; only 1: auto; only 1: red; only 1: auto).	4.34924006462	19683
Coq.Sets.Uniset.defs.leb_refl	40	0	synth with cache (only 1: destr_bool).	0.0100879669189	1
Coq.Sets.Uniset.defs.incl_left	40	2.4.8.5	synth with cache (only 1: intros; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.374182939529	801
Coq.Sets.Uniset.defs.incl_right	40	1.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0157420635223	5
Coq.Sets.Uniset.defs.seq_refl	40	4	synth with cache (only 1: auto).	0.00967001914978	5
Coq.Sets.Uniset.defs.seq_trans	40	1.0.2.10.0.3	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: intro x; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.0698530674	2165
Coq.Sets.Uniset.defs.seq_sym	40	1.0.1	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0150861740112	5
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0149428844452	3
Coq.Sets.Uniset.defs.union_empty_right	40	16.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	1.69691610336	4155
Coq.Sets.Uniset.defs.union_comm	40	16.1.2	synth with cache (only 1: unfold seq; only 1: simpl; only 1: intuition).	2.89396214485	5730
Coq.Sets.Uniset.defs.union_ass	40	1.0.1.1.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: auto with bool).	0.067862033844	35
Coq.Sets.Uniset.defs.seq_left	40	0.4.0.0.1.1.1.0	synth with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto with bool).	3.01141190529	3373
Coq.Sets.Uniset.defs.seq_right	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0309071540833	10
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.11	synth with cache (only 1: intros n IH; only 1: trivial).	0.0577659606934	82
Coq.Sets.Multiset.multiset_defs.meq_trans	40	3.35.3.1.5	synth with cache (only 1: intros; only 1: unfold meq; only 1: intros; only 1: rewrite ?PeanoNat.Nat.add_0_l, ?PeanoNat.Nat.add_0_r, ?H; only 1: trivial).	21.3045809269	83601
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.1.0.0	synth with cache (only 1: destruct y; only 1: unfold meq; only 1: intros; only 1: auto).	0.0244340896606	5
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.020085811615	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0237390995026	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40
Coq.Sets.Multiset.multiset_defs.munion_ass	40	1.1.0.0.0.3	synth with cache (only 1: unfold munion; only 1: destruct x; only 1: unfold meq; only 1: unfold multiplicity; only 1: destruct y; only 1: auto with arith).	0.829242944717	473
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.2.2.1.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct z; only 1: simpl; only 1: auto).	0.141280889511	61
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: auto with arith).	0.0382070541382	8
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	5.0.1.1.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	1.39993810654	1065
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	5	synth with cache (only 1: auto with sets).	0.0139429569244	6
Coq.Sets.Integers.Integers_sect.le_antisym	40	1.0.0	synth with cache (only 1: red; only 1: intros Y c2 H'0; only 1: auto with sets arith).	0.0287351608276	11
Coq.Sets.Integers.Integers_sect.le_trans	40
Coq.Sets.Integers.Integers_sect.le_Order	40	1.1.0.0.0.1.0.0.0.0.105	synth with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: intros Y c2 H'0; only 1: auto with sets arith).	1.49319601059	7955
Coq.Sets.Integers.Integers_sect.triv_nat	40	6.0.3.0.4.2.8	synth with cache (only 1: intro H'3; only 1: red; only 1: apply NNPP; only 1: red; only 1: intro H'1; only 1: apply H'1; only 1: split).	1.33158993721	2619
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	2.11.2.7.52	synth with cache (only 1: red; only 1: intro p; only 1: intro x; only 1: red; only 1: auto).	4.33029508591	37500
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.3.0.0.0	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.124206066132	66
Coq.Sets.Relations_1_facts.contains_is_preorder	40	7	synth with cache (only 1: auto  10 with sets).	0.0222361087799	12
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.0.2.8	synth with cache (only 1: unfold same_relation at 1; only 1: intros x y z h; only 1: elim h; only 1: auto  10 with sets).	0.331723928452	541
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0137898921967	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	4.0	synth with cache (only 1: compute; only 1: intuition).	0.0740840435028	66
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.2	synth with cache (only 1: intros U R H'; only 1: auto with sets).	0.00970888137817	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	synth with cache (only 1: auto with sets).	0.0079140663147	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.1.9.1.7.1.2.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	24.2511198521	79877
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.1.0.0.3.1.0.0.0.3.0	synth with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	3.17762112617	6485
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.3.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	5.0310189724	7995
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	6	synth with cache (only 1: auto).	0.0182559490204	18
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.5.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0138790607452	12
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40	6.0.2.0.8.1.19.1	synth with cache (only 1: intros X Y x H'; only 1: elim (classic (In U X x)); only 1: intro H'2; only 1: exists x; only 1: auto with sets; only 1: auto with sets; only 1: intro H'0; only 1: intuition).	25.0247840881	63196
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	0.0.5.0.0.1.0.0.0	synth with cache (only 1: intro H'2; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: exfalso; only 1: contradict H; only 1: intuition).	1.46016192436	1073
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	0.2.0.4.0.1.8.3	synth with cache (only 1: intros H'6 H'7; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros; only 1: elim H'0; only 1: intros; only 1: exists x; only 1: auto using Im_def with sets).	5.16353702545	8645
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	2.3.9	synth with cache (only 1: intro p; only 1: intro h; only 1: contradiction).	0.0552549362183	142
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	7.89.37	synth with cache (only 1: intro x; only 1: exists x; only 1: auto with sets).	5.9300069809	69530
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	2.2.2.98	synth with cache (only 1: split; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	3.4260430336	6367
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.00924110412598	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.0	synth with cache (only 1: red; only 1: intuition).	0.0124328136444	2
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	1.3.1.0.0.2.4	synth with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	12.7898378372	3693
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	0.1.4.0.0.0.7.2.6.9.0	synth with cache (only 1: intro X; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold Strict_Rel_of at 1; only 1: split; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: red; only 1: simpl; only 1: auto with sets).	20.1599159241	42761
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	1.1.0.0.0.6	synth with cache (only 1: intros; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	1.00491499901	861
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	1.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0158679485321	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	1	synth with cache (only 1: auto with sets).	0.0102829933167	2
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.00980687141418	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.3.1	synth with cache (only 1: intro X; only 1: intro A; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0328919887543	21
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0166540145874	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.2.2.0.1	synth with cache (only 1: intros; only 1: red; only 1: red; only 1: red; only 1: auto with sets).	0.163695812225	10
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	1.13.7	synth with cache (only 1: intros A NI; only 1: intros n' (HPn', Hn'); only 1: auto with sets).	14.6999380589	18436
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40	9.1.15.16	synth with cache (only 1: simple induction 1; only 1: split; only 1: auto with sets; only 1: auto  7 using Inhabited_Setminus with sets).	34.6615390778	37829
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.2.0.7.5	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	10.8733940125	16905
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.1.0.4.1.2.0.2	synth with cache (only 1: intros U R x y H'; only 1: red; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'5; only 1: intros H'8 H'10; only 1: exists z1; only 1: auto with sets).	6.04130101204	8824
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.5.0.0.1.1	synth with cache (only 1: unfold Subtract at 1; only 1: intros A NI; only 1: intros H'1 H'2; only 1: intro H'0; only 1: elim H'0; only 1: auto with sets).	0.76257109642	629
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.3.0.1.1.5	synth with cache (only 1: unfold Subtract at 1; only 1: intros X Y I NI; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	5.35588097572	1344
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	1.0.4.4.1.1.1.1.2	synth with cache (only 1: red; only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: apply NNPP; only 1: elim H'; only 1: intro H'3; only 1: elim H'3; only 1: auto with sets; only 1: auto with sets).	35.9232349396	34672
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	1.0.8.0.0.1.0.0.1.1.2	synth with cache (only 1: red; only 1: unfold Subtract at 1; only 1: intros X x H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets).	36.5073399544	50019
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	9.22.1	synth with cache (only 1: intro A; only 1: generalize Inclusion_is_transitive; only 1: auto  10 with sets).	1.62295818329	2750
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.011766910553	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.16	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.418316841125	393
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.0104739665985	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	1	synth with cache (only 1: auto with sets).	0.0120630264282	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	11.7.4	synth with cache (only 1: intros B C H'; only 1: generalize Inclusion_is_transitive; only 1: auto  10 with sets).	2.0389649868	1599
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	synth with cache (only 1: auto  6 with sets).	0.0125949382782	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0	synth with cache (only 1: auto  9 with sets).	0.0152518749237	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.1.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.842968940735	1247
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	1.0.0.1.1.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	15.2824208736	17491
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.0.0.0.0.0.0.5.1.9	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.72556090355	2775
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.0.8.0.0.0.0.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros y H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	35.0007190704	36126
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	2.0.2.7	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	1.21476507187	1302
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	2.1.4.0	synth with cache (only 1: intros x y H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	0.181489229202	126
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	1.2	synth with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.0464859008789	37
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.0	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.063688993454	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	15.3.1.1.11	synth with cache (only 1: intros A B; only 1: unfold Add; only 1: intros x y z; only 1: rewrite (Union_associative A (Singleton U x) (Singleton U y)); only 1: auto  9 with sets).	36.3545548916	36785
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	4.0	synth with cache (only 1: intros x y z H' H'0; only 1: auto with sets).	0.0121331214905	6
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.0140969753265	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0157289505005	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	1.0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.406859874725	260
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.1.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: auto with sets; only 1: intuition).	0.0284070968628	10
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: elim H'; only 1: intros x0 H'0 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	9.49055504799	11668
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.0.5.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: auto with sets; only 1: intuition).	0.909543037415	946
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	6.20.2.6.20.2.7	synth with cache (only 1: split; only 1: subst; only 1: intro x; only 1: trivial; only 1: subst; only 1: intro x; only 1: trivial).	32.0989181995	281211
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	48	synth with cache (only 1: destruct 1).	0.407940864563	1709
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	1.0.0	synth with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0114507675171	4
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0106508731842	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.1.25.3	synth with cache (only 1: intros; only 1: exists x; only 1: unfold Add at 1; only 1: auto with sets).	2.98238921165	18691
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.6.1.1.0	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.582941055298	1023
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	2.2.4	synth with cache (only 1: intro x; only 1: destruct 1; only 1: trivial).	0.0323438644409	48
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	1.6	synth with cache (only 1: destruct 1; only 1: auto with sets).	0.0280799865723	39
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	2.2.4.4	synth with cache (only 1: intros X H'; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.367303133011	569
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	0.16.0.5.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	8.56200003624	13844
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0133981704712	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.3.0.2.1.0	synth with cache (only 1: intros B C x H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.295892000198	295
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.0	synth with cache (only 1: intros B C x H'; only 1: auto with sets).	0.011748790741	2
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0114948749542	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.2.5	synth with cache (only 1: red; only 1: destruct 1; only 1: auto).	0.133605003357	278
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	0.0.11.2	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.214574098587	340
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	1.1.28	synth with cache (only 1: intro; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	0.37420296669	1784
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.0172700881958	11