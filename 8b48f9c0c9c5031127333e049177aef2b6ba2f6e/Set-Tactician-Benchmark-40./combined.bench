
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	18.42.16	search with cache (only 1: intros; only 1: intros H0; only 1: now elim H).	3.71701097488	10681
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0238859653473	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0237350463867	2
Coq.micromega.OrderedRing.Rplus_comm	40	3.4.5	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.100087881088	111
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0239329338074	2
Coq.micromega.OrderedRing.Rtimes_comm	40	1.1	search with cache (only 1: intros; only 1: ring).	0.0277798175812	4
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.3.0.0	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.0518710613251	17
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	0.0.0.4.2.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.836983919144	286
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0	search with cache (only 1: intros; only 1: now subst).	0.0219769477844	2
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	1.1	search with cache (only 1: intros x IH Hx; only 1: Z.order).	0.0174369812012	4
Coq.micromega.Ztac.elim_concl_lt	40	0.0	search with cache (only 1: intros; only 1: Z.order).	0.0173320770264	2
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	1.4	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.0525958538055	18
Coq.micromega.Ztac.mul_le	40	5.0.0	search with cache (only 1: intros; only 1: change 0 with (0 + 0); only 1: Z.order_pos).	0.0891389846802	29
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0285239219666	2
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0267770290375	2
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0484051704407	2
Coq.micromega.ZifyInst.PropNot	40	5.2.150	search with cache (only 1: constructor; only 1: intros x y H; only 1: tauto).	3.88089895248	13560
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.2.0.53	search with cache (only 1: destruct x; only 1: trivial; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	2.05684304237	6653
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40	0.0.1.68	search with cache (only 1: split; only 1: exact (SORplus_wd sor); only 1: exact (SORtimes_wd sor); only 1: exact (SORopp_wd sor)).	4.15850400925	11678
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.1.1.2.0	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	0.033998966217	10
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.2.1.0	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.0894100666046	18
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.144176959991	18
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.8.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: apply Z.eq_le_incl; only 1: subst; only 1: trivial; only 1: apply Z.eq_le_incl; only 1: subst; only 1: trivial; only 1: intros (Hn, H); only 1: Z.order).	2.67762994766	4375
Coq.micromega.ZMicromega.lt_le_iff	40
Coq.micromega.ZMicromega.le_0_iff	40	1.0.0.0	search with cache (only 1: split; only 1: intros; only 1: now rewrite Z.le_0_sub; only 1: now rewrite Z.le_0_sub).	0.158197879791	32
Coq.micromega.ZMicromega.le_neg	40	5.1.20.0.7.1	search with cache (only 1: intros; only 1: rewrite ?Z.opp_pos_neg; only 1: split; only 1: Z.order; only 1: intros; only 1: Z.order).	23.253371954	36662
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	6.0	search with cache (only 1: intros; only 1: split).	0.0190780162811	8
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0687279701233	7
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: easy).	0.0338850021362	4
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40	12.1.4.0.3	search with cache (only 1: intros until 2; only 1: apply H; only 1: apply Pos.add_le_mono; only 1: eauto; only 1: apply Pos.le_refl).	20.1777079105	16030
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	2.0.0.5.6.37.6	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: repeat split; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	6.56965708733	26503
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	0.10.0.10.0.3.1	search with cache (only 1: destruct x; only 1: compute; only 1: intuition congruence; only 1: compute; only 1: intuition congruence; only 1: compute; only 1: intuition congruence).	4.41896414757	6376
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	0.0.0.11.8.0.0	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: simpl; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: f_equal).	2.63179397583	4801
Coq.micromega.Env.jump_succ	40	0.0.0.11.10.1	search with cache (only 1: rewrite <- ?jump_add; only 1: simpl; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: f_equal).	2.74263310432	5101
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0201461315155	3
Coq.micromega.Env.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.022383928299	3
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	2.0.1.1.5.0	search with cache (only 1: intros Q H H'; only 1: intros; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: auto).	0.169380903244	203
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	0.0.4.11.25	search with cache (only 1: intros l'; only 1: intros l; only 1: destruct l; only 1: congruence; only 1: congruence).	0.971948862076	3409
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00924897193909	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00805687904358	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	1.2.0.23.6	search with cache (only 1: intros H; only 1: induction H as [| a l Hal Hl IH]; only 1: reflexivity; only 1: simpl; only 1: congruence).	0.86754488945	2253
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.0.0.1.8.0	search with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.249220848083	248
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	4.4.0.12.2.2.12	search with cache (only 1: destruct f; only 1: reflexivity; only 1: destruct c; only 1: destruct f; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	16.1935219765	32946
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.0.0.0.0.0.7.4.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: reflexivity).	1.39932608604	1572
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	39.1	search with cache (only 1: intros; only 1: firstorder).	4.3279671669	7796
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0275621414185	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	58	search with cache (only 1: firstorder).	4.52327394485	4832
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.0.0.6.3.1.0.3	search with cache (only 1: unfold eval_cnf; only 1: simpl; only 1: intros; only 1: unfold eval_clause; only 1: induction f; only 1: simpl; only 1: tauto; only 1: tauto).	3.55757904053	1386
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0759620666504	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	8	search with cache (only 1: exact (Radd_ext Reqe)).	0.0459840297699	16
Coq.micromega.EnvRing.rmul_ext_Proper	40	9	search with cache (only 1: exact (Rmul_ext Reqe)).	0.03355717659	16
Coq.micromega.EnvRing.ropp_ext_Proper	40	4	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0300529003143	12
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.4	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0496850013733	9
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	7.0637140274	1376
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.1.2.0.0.0.0.0.1.1.0.0.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	11.5405511856	2521
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.09068608284	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.109405040741	8
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.5.0.5.3	search with cache (only 1: induction M; only 1: rsimpl; only 1: simpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl).	1.62477993965	416
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	36.1.4.0	search with cache (only 1: intros; only 1: unfold eval_pol in *; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).	8.37147593498	6482
Coq.micromega.RingMicromega.eval_pol_mul	40	37.3.5.0	search with cache (only 1: intros; only 1: unfold eval_pol in *; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: now try discriminate).	10.7922799587	8492
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	12.1.2	search with cache (only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: firstorder).	0.980085849762	1531
Coq.micromega.Refl.make_impl_map	40	9.4.0.2.13	search with cache (only 1: intros Q H H'; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: firstorder).	9.02438402176	14868
Coq.micromega.Refl.make_conj_cons	40	0.0.5.15	search with cache (only 1: induction l; only 1: now constructor; only 1: simpl in *; only 1: intuition).	3.33608794212	4552
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	1.2.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.10692691803	14
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.5	search with cache (only 1: rewrite Rinv_1; only 1: auto with real).	0.0290780067444	12
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	1.0.2.0	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qnum, Qden; only 1: rewrite Rmult_0_l; only 1: auto).	0.0161790847778	7
Coq.micromega.RMicromega.Q2R_1	40	0.1.2.1	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qnum, Qden; only 1: rewrite RIneq.Rinv_1; only 1: easy).	0.0165429115295	8
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	6.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.85235214233	1436
Coq.rtauto.Bintree.map_app	40	2.9.47.1	search with cache (only 1: intros EQ; only 1: intros Compat Hl Hr; only 1: fix sqrtrem_spec 1; only 1: trivial).	2.76406598091	5798
Coq.rtauto.Bintree.length_map	40
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	0.1.0.8.0.0.4.5	search with cache (only 1: induction l; only 1: induction i; only 1: trivial; only 1: trivial; only 1: induction i; only 1: trivial; only 1: simpl; only 1: auto).	3.2178440094	4001
Coq.rtauto.Bintree.Lget_app_Some	40	0.1.0.6.0.13.0.0	search with cache (only 1: induction l; only 1: simpl Lget; only 1: discriminate; only 1: simpl Lget; only 1: intro m; only 1: intros [| i]; only 1: auto; only 1: auto).	12.8534698486	23668
Coq.rtauto.Bintree.Tget_Tempty	40	0.2.0.50.24	search with cache (only 1: intros; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	1.54693293571	5906
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.2.2.4	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.107870817184	73
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	2.0.17.7.15	search with cache (only 1: unfold empty, get; only 1: intros; only 1: unfold get, push; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	5.16954994202	13916
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	0.0.2.0.1.12.4	search with cache (only 1: induction F; only 1: unfold empty, get; only 1: simpl; only 1: intros i e; only 1: congruence; only 1: simpl; only 1: eauto).	2.06259799004	5532
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	1.0.6.0.1.7.1.1.0	search with cache (only 1: induction F; only 1: intros; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intro i; only 1: apply IHF; only 1: auto).	3.85025000572	9709
Coq.rtauto.Rtauto.compose3	40
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	0.0.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.0993411540985	3
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	17.1	search with cache (only 1: intros; only 1: auto).	2.43190598488	738
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40	0.0.0.3.0.3.7.0.0.8.3.7.0	search with cache (only 1: constructor; only 1: intro; only 1: cring; only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring; only 1: intro; only 1: intros; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: setoid_rewrite H0; only 1: cring; only 1: cring).	30.6512219906	8625
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	13.0.19.1.6.0.19.0.19.20	search with cache (only 1: split; only 1: intro; only 1: auto with real; only 1: intro; only 1: intros; only 1: case H; only 1: ring; only 1: intro; only 1: intros; only 1: Lra.lra).	24.4037351608	63577
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	2	search with cache (only 1: Lra.lra).	0.0385608673096	3
Coq.nsatz.Nsatz.Rcri	40	9.0.4.7	search with cache (only 1: intros x H; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: auto with real).	0.569777011871	597
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.0600879192352	1
Coq.nsatz.Nsatz.Zcri	40	1	search with cache (only 1: auto with *).	0.0550019741058	25
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.271842002869	15
Coq.omega.OmegaLemmas.Zred_factor4	40	0.1	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.0826630592346	3
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.070013999939	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0596928596497	1
Coq.omega.OmegaLemmas.new_var	40	1.3.11	search with cache (only 1: intros; only 1: exists x; only 1: now Z.nzsimpl).	0.0885779857635	162
Coq.omega.OmegaLemmas.OMEGA1	40	5.0	search with cache (only 1: intros; only 1: Z.order).	0.0283410549164	7
Coq.omega.OmegaLemmas.OMEGA2	40	2	search with cache (only 1: now apply Z.add_nonneg_nonneg).	0.319295883179	3
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	7.0	search with cache (only 1: intros Hx Hxy; only 1: now subst).	0.0221002101898	9
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0745100975037	29
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.018923997879	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.112026929855	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0303540229797	4
Coq.omega.OmegaLemmas.OMEGA16	40	6.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0770680904388	8
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.080549955368	2
Coq.omega.OmegaLemmas.OMEGA18	40	1.3.2.0	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: subst; only 1: now Z.nzsimpl).	0.0813701152802	25
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.300045013428	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.mod_0_r_ext	40	0.0.3.2.4.0.0.0.12	search with cache (only 1: destruct x; only 1: intros Hm; only 1: subst; only 1: trivial; only 1: intros Hm; only 1: now subst; only 1: intros Hm; only 1: subst; only 1: trivial).	1.49103212357	3381
Coq.omega.PreOmega.div_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0243690013885	6
Coq.omega.PreOmega.rem_0_r_ext	40	1.0.2.0.0.1.1.0.5	search with cache (only 1: destruct x; only 1: intro; only 1: now subst; only 1: intro; only 1: subst; only 1: trivial; only 1: intro; only 1: subst; only 1: trivial).	0.821732997894	1047
Coq.omega.PreOmega.quot_0_r_ext	40	0.0.3.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0250418186188	9
Coq.omega.PreOmega.rem_bound_pos_pos	40
Coq.omega.PreOmega.rem_bound_neg_pos	40
Coq.omega.PreOmega.rem_bound_pos_neg	40
Coq.omega.PreOmega.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	11.68.8	search with cache (only 1: intros; only 1: revert H0; only 1: apply H).	16.0959038734	125056
Coq.btauto.Algebra.Decidable_complete	40	1.14.0	search with cache (only 1: intros P H Hp; only 1: apply H; only 1: assumption).	4.09803318977	655
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	1.1.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.209370851517	116
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.9.4	search with cache (only 1: intros l; only 1: inversion 1; only 1: trivial).	0.459233045578	206
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	1	search with cache (only 1: auto).	0.0204470157623	2
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	0.0.0.0.10.1.8.5.2.0.0	search with cache (only 1: intros A n; only 1: induction n using Pos.peano_rect; only 1: unfold make_last; only 1: unfold list_nth; only 1: reflexivity; only 1: unfold make_last; only 1: zify; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ; only 1: apply IHn).	24.7297668457	47824
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	0.1.1.0	search with cache (only 1: right; only 1: generalize dependent x; only 1: intros m Le; only 1: auto with arith).	0.027489900589	6
Coq.funind.Recdef.Splus_lt	40	4	search with cache (only 1: auto with arith).	0.0415360927582	14
Coq.funind.Recdef.SSplus_lt	40	1.0.8.0	search with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_neq; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).	2.12609291077	1484
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0184679031372	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	8.3	search with cache (only 1: intros Hx; only 1: now Z.nzsimpl).	0.121949911118	70
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	69	search with cache (only 1: auto).	1.09858107567	2440
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0142500400543	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	31.0.0	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	32.3628480434	6837
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.90641713142	48
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40	1.0.24.3.58.38	search with cache (only 1: intros x y; only 1: destruct x; only 1: auto; only 1: destruct y; only 1: auto; only 1: auto).	22.0956618786	196341
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	4	search with cache (only 1: trivial).	0.0175640583038	5
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	7	search with cache (only 1: eauto).	0.0501940250397	8
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	27	search with cache (only 1: eauto).	1.84816598892	1107
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40	0.3.2.3.2.5	search with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	5.75498485565	755
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.214149951935	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.216531038284	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.268136024475	9
Coq.setoid_ring.Field_theory.PEpow_0_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.210180044174	3
Coq.setoid_ring.Field_theory.PEpow_1_r	40	3.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.186015129089	6
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.0.0.3.0.1	search with cache (only 1: simpl; only 1: destruct l1; only 1: intro; only 1: trivial; only 1: destruct 1; only 1: trivial).	3.29532289505	62
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	4.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: now destruct 1).	2.26148200035	30
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	1	search with cache (only 1: now destruct 1).	0.182451963425	2
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	3.3.3.4.2	search with cache (only 1: intros x y H7; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.72194194794	1373
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.5.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.062567949295	8
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	13.0.19.1.6.0.19.0.19.20	search with cache (only 1: split; only 1: intro; only 1: auto with real; only 1: intro; only 1: intros; only 1: case H; only 1: ring; only 1: intro; only 1: intros; only 1: Lra.lra).	22.694715023	63577
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	9.0.4.6	search with cache (only 1: intros x H; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: auto with real).	0.507388114929	571
Coq.setoid_ring.Rings_R.R_one_zero	40	3.0	search with cache (only 1: red; only 1: Lra.lra).	0.0324509143829	5
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.0119879245758	2
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	47	search with cache (only 1: now repeat split).	0.267605066299	1131
Coq.setoid_ring.Ring_theory.IDmorph	40
Coq.setoid_ring.Ring_theory.Eqsth	40
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	0.0.275	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	7.74139809608	38737
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.081228017807	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	16.17	search with cache (only 1: intros n m H; only 1: trivial).	1.15213012695	1543
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.2.2.4	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.19806098938	110
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	11	search with cache (only 1: reflexivity).	0.0253767967224	33
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0123400688171	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	1	search with cache (only 1: reflexivity).	0.0125758647919	2
Coq.setoid_ring.Ring_theory.SRIDmorph	40	49.0.0.0.0.2.2.3	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	17.4220151901	52664
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0243887901306	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0266170501709	1
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0118460655212	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	0.4.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0300920009613	7
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0115308761597	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0121259689331	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00903582572937	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.00831007957458	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00821304321289	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0116140842438	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.120095968246	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.3.0.13	search with cache (only 1: induction x; only 1: norm; only 1: simpl; only 1: norm).	0.518090009689	334
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0159668922424	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.01615691185	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0164058208466	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0181238651276	4
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	73	search with cache (only 1: let rec Esimpl3 := let rec Esimpl2 := let rec Esimpl := let rec rsimpl := repeat gen_rewrite || rewrite phiCR_comm in repeat progress match goal with | |- context [ @Pphi ?l ?P ] => match P with | P0 => rewrite (Pphi0 (C:=l)) | P1 => rewrite (Pphi1 (C:=l)) | @mkPX ?P ?i ?n ?Q => rewrite (@mkPX_ok l P i n Q) end | |- context [ [?c] ] => match c with | 0 => rewrite ring_morphism0 | 1 => rewrite ring_morphism1 | ?x + ?y => rewrite ring_morphism_add | ?x * ?y => rewrite ring_morphism_mul | ?x - ?y => rewrite ring_morphism_sub | - ?x => rewrite ring_morphism_opp end end; simpl; rsimpl in Esimpl; repeat progress match goal with | |- context [ @Pphi ?l (@PaddCl ?c ?P) ] => rewrite (@PaddCl_ok c P l) | |- context [ @Pphi ?l (@PmulC ?P ?c) ] => rewrite (@PmulC_ok c P l) | |- context [ @Pphi ?l (@Popp ?P) ] => rewrite (@Popp_ok P l) end; Esimpl in repeat match goal with | |- context [ @Pphi ?l (@Padd ?P1 ?P2) ] => rewrite (@Padd_ok P1 P2 l) | |- context [ @Pphi ?l (@Psub ?P1 ?P2) ] => rewrite (@Psub_ok P1 P2 l) end; try Esimpl2; try reflexivity; try apply ring_add_comm in now Esimpl3).	12.0670478344	2730
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	18.3.9.15	search with cache (only 1: intros n; only 1: intros; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	4.1754629612	2132
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	7	search with cache (only 1: exact (Radd_ext Reqe)).	0.0421290397644	15
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	8	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0306000709534	15
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	4	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0354399681091	12
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.4	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0466759204865	9
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40
Coq.setoid_ring.Ring_polynom.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	8.76864790916	1691
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	0.1.2.0.0.0.0.0.1.1.0.0.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	10.4298148155	2358
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40	0.0.0.1.2.0.0.0.1.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: now rewrite ?local_mkpow_ok).	24.816423893	1241
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.016047000885	1
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.1.14	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.488932847977	155
Coq.setoid_ring.Ncring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.1.0.11.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.839388132095	303
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.0.0.0.13	search with cache (only 1: intros x y H7; only 1: apply Zsth; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	0.330482959747	253
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	8.31.3	search with cache (only 1: intros p Hp; only 1: rewrite Qmult_comm; only 1: apply Q_Setoid).	9.63690900803	8215
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0193328857422	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	1	search with cache (only 1: tauto).	0.00517821311951	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: discriminate).	0.0264880657196	12
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.00733399391174	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.2.18	search with cache (only 1: intros; only 1: destruct H; only 1: tauto).	0.109598875046	290
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.00818014144897	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.00744700431824	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.015958070755	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.00819206237793	1
Coq.ssr.ssreflect.abstract_context	40	0.152.122	search with cache (only 1: intro H; only 1: apply H; only 1: split).	15.2503871918	196434
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.010694026947	1
Coq.ssr.ssrbool.is_true_true	40	7	search with cache (only 1: reflexivity).	0.00795483589172	8
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: by [  ]).	0.00834202766418	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00957608222961	2
Coq.ssr.ssrbool.negbT	40	3	search with cache (only 1: Bool.destr_bool).	0.0129380226135	12
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.00965309143066	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.00978207588196	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.00980496406555	1
Coq.ssr.ssrbool.negbK	40	0.31	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.130346059799	516
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00852799415588	1
Coq.ssr.ssrbool.negb_inj	40	0.38	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.412542104721	985
Coq.ssr.ssrbool.negbLR	40	2	search with cache (only 1: Bool.destr_bool).	0.0137979984283	3
Coq.ssr.ssrbool.negbRL	40	5	search with cache (only 1: Bool.destr_bool).	0.018235206604	6
Coq.ssr.ssrbool.contra	40	6.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.509538173676	434
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.012943983078	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0131020545959	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0130879878998	1
Coq.ssr.ssrbool.contraT	40	1.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.290673017502	119
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  => // ->).	0.0112371444702	1
Coq.ssr.ssrbool.contraFT	40	0.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.465259075165	108
Coq.ssr.ssrbool.contraFN	40	0.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.496486902237	126
Coq.ssr.ssrbool.contraTF	40	1.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.529425859451	166
Coq.ssr.ssrbool.contraNF	40	1.18	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.615277051926	187
Coq.ssr.ssrbool.contraFF	40	0.0.37.27	search with cache (only 1: Bool.destr_bool; only 1: destruct H; only 1: intuition; only 1: intuition).	7.29334902763	17430
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0112171173096	1
Coq.ssr.ssrbool.ifT	40	1	search with cache (only 1: by case : b ).	0.0140910148621	2
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by case : b ).	0.0141739845276	2
Coq.ssr.ssrbool.ifN	40	2	search with cache (only 1: by case : b ).	0.0144140720367	3
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0111429691315	3
Coq.ssr.ssrbool.if_neg	40	2	search with cache (only 1: by case : b ).	0.0109429359436	3
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.0107011795044	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.010143995285	1
Coq.ssr.ssrbool.ifE	40	6	search with cache (only 1: trivial).	0.0154030323029	7
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0143361091614	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0138330459595	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0139019489288	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.14.6.4	search with cache (only 1: intro; only 1: intro; only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.695338010788	793
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.24	search with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.292905092239	306
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	14	search with cache (only 1: by case Pb).	0.0673480033875	75
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	6.9.47	search with cache (only 1: intro H; only 1: destruct H; only 1: auto).	1.1430580616	6276
Coq.ssr.ssrbool.impliesPn	40	8.14.10	search with cache (only 1: intro; only 1: destruct H; only 1: auto).	0.627899885178	1086
Coq.ssr.ssrbool.unlessL	40	4.10.15.54	search with cache (only 1: split; only 1: red; only 1: intros; only 1: auto).	0.932375907898	4810
Coq.ssr.ssrbool.unlessR	40	4.11.7	search with cache (only 1: split; only 1: red; only 1: auto).	0.258533000946	709
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.6	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.0127391815186	8
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0147080421448	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0166668891907	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0196039676666	1
Coq.ssr.ssrbool.pair_andP	40	7	search with cache (only 1: intuition).	0.0419318675995	16
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00994300842285	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00974488258362	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0121722221375	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00982809066772	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.0106980800629	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0176591873169	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0173709392548	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0123009681702	1
Coq.ssr.ssrbool.andTb	40	11	search with cache (only 1: repeat split).	0.019740819931	33
Coq.ssr.ssrbool.andFb	40	3	search with cache (only 1: by [  ]).	0.0105369091034	4
Coq.ssr.ssrbool.andbT	40	1.19	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.0839078426361	209
Coq.ssr.ssrbool.andbF	40	4	search with cache (only 1: by case).	0.0135099887848	5
Coq.ssr.ssrbool.andbb	40	5	search with cache (only 1: by case).	0.0127940177917	6
Coq.ssr.ssrbool.andbC	40	0.52	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.6028881073	1440
Coq.ssr.ssrbool.andbA	40	1	search with cache (only 1: by case).	0.0110621452332	2
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by do 2!case).	0.0142741203308	1
Coq.ssr.ssrbool.andbAC	40	4	search with cache (only 1: by do 3!case).	0.0257971286774	5
Coq.ssr.ssrbool.andbACA	40	28	search with cache (only 1: by do 3!case).	0.382947206497	390
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00989007949829	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00981712341309	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0129420757294	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0103318691254	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.010281085968	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by do 2!case).	0.0118379592896	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by do 3!case).	0.0147941112518	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by do 3!case).	0.01486992836	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by do 3!case).	0.0147721767426	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by do 4!case).	0.0213830471039	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0116078853607	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.011176109314	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0116338729858	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0120151042938	1
Coq.ssr.ssrbool.andb_orl	40	5	search with cache (only 1: by do 3!case).	0.023097038269	6
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by do 3!case).	0.0159847736359	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by do 3!case).	0.0175309181213	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by do 3!case).	0.0169298648834	1
Coq.ssr.ssrbool.andb_idl	40	3.23	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.46901512146	367
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0171458721161	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0180730819702	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0244579315186	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0163080692291	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0163071155548	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0241639614105	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0249750614166	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.01322722435	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: Bool.destr_bool).	0.013256072998	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0139110088348	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135769844055	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135068893433	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135397911072	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: Bool.destr_bool).	0.0103940963745	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.0113799571991	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0103979110718	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.0111770629883	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : b ).	0.0124461650848	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0137658119202	1
Coq.ssr.ssrbool.implybE	40	2	search with cache (only 1: by case : a ; case : b ).	0.0192170143127	3
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0135049819946	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0137860774994	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0138959884644	1
Coq.ssr.ssrbool.implyb_idl	40	4	search with cache (only 1: by case : a ; case : b  => // ->).	0.0401210784912	5
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.017138004303	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0245871543884	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00935482978821	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0103979110718	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0124080181122	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by do 2!case).	0.0121748447418	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by do 3!case).	0.016065120697	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by do 3!case).	0.0159239768982	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by do 3!case).	0.0175879001617	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by do 4!case).	0.0223050117493	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by do 3!case).	0.0167050361633	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by do 3!case).	0.0179281234741	1
Coq.ssr.ssrbool.addKb	40	0	search with cache (only 1: by do 2!case).	0.0137009620667	1
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by do 2!case).	0.0135390758514	1
Coq.ssr.ssrbool.addIb	40	3	search with cache (only 1: by do 3!case).	0.0253648757935	4
Coq.ssr.ssrbool.addbI	40	1	search with cache (only 1: by do 3!case).	0.0214149951935	2
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.0125651359558	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.0145590305328	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.0191428661346	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0143299102783	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.46	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	1.78917503357	1291
Coq.ssr.ssrbool.subrelUl	40	18.17.47.30	search with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	7.94427394867	30209
Coq.ssr.ssrbool.subrelUr	40	19.18.48.31	search with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	8.72398281097	33211
Coq.ssr.ssrbool.sub_refl	40	41	search with cache (only 1: by [  ]).	0.44712805748	1072
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.0122511386871	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  => _ /= ->).	0.0129919052124	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.0126810073853	5
Coq.ssr.ssrbool.simpl_predE	40	3	search with cache (only 1: by [  ]).	0.0104198455811	4
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.0102109909058	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	search with cache (only 1: by [  ]).	0.0103089809418	1
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	1	search with cache (only 1: reflexivity).	0.0101790428162	2
Coq.ssr.ssrbool.in1W	40	0.16	search with cache (only 1: intros; only 1: by [  ]).	0.199361085892	126
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.013072013855	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0134789943695	1
Coq.ssr.ssrbool.in1T	40	33	search with cache (only 1: auto).	0.444580078125	671
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0185799598694	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0192451477051	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0181729793549	2
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0222151279449	3
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0267779827118	4
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.0115969181061	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0120089054108	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.012195110321	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0184309482574	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0177521705627	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.019565820694	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0190241336823	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0146610736847	1
Coq.ssr.ssrbool.subon2	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0256769657135	4
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	46.14.31	search with cache (only 1: intros; only 1: subst; only 1: auto).	4.06435894966	9233
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0205228328705	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0146510601044	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0150318145752	3
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0154180526733	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0198431015015	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0184090137482	1
Coq.ssr.ssrbool.sub_in_bij	40	3.66	search with cache (only 1: intro H; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	2.92304611206	3843
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0208170413971	1
Coq.ssr.ssrbool.sub_in2	40	11.35	search with cache (only 1: red; only 1: auto).	1.83588910103	3816
Coq.ssr.ssrbool.sub_in3	40	3.34.18	search with cache (only 1: intros; only 1: intro z; only 1: auto).	2.33622694016	4071
Coq.ssr.ssrbool.sub_in12	40	1.15	search with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.279057979584	127
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0140221118927	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	27	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.489515066147	481
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0120649337769	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0145151615143	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0130989551544	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.024069070816	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: tauto).	0.00480198860168	1
Coq.ssr.ssrfun.unitE	40	2.12.12	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.145894050598	543
Coq.ssr.ssrfun.frefl	40	4	search with cache (only 1: repeat split).	0.00779795646667	5
Coq.ssr.ssrfun.fsym	40	6.3	search with cache (only 1: intros; only 1: by [  ]).	0.0224781036377	32
Coq.ssr.ssrfun.ftrans	40	1.41.25.25	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	3.45875287056	22284
Coq.ssr.ssrfun.rrefl	40	0	search with cache (only 1: repeat split).	0.00763297080994	1
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.0.1	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0186409950256	6
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0152411460876	1
Coq.ssr.ssrfun.svalP	40	6	search with cache (only 1: apply proj2_sig).	0.00928688049316	7
Coq.ssr.ssrfun.s2valP	40	1	search with cache (only 1: by case : u ).	0.010379076004	2
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.0104951858521	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0120029449463	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0174460411072	1
Coq.ssr.ssrfun.can_pcan	40	3.83.17.8	search with cache (only 1: red; only 1: intros; only 1: rewrite H; only 1: trivial).	11.9617378712	77894
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.015212059021	2
Coq.ssr.ssrfun.canLR	40	6.8.6	search with cache (only 1: intros h1 h2; only 1: subst; only 1: trivial).	0.316645860672	548
Coq.ssr.ssrfun.canRL	40	11.16	search with cache (only 1: destruct 2; only 1: auto).	0.453464984894	982
Coq.ssr.ssrfun.Some_inj	40	0.9.51	search with cache (only 1: intros n m; only 1: inversion 1; only 1: auto).	2.82477593422	9864
Coq.ssr.ssrfun.of_voidK	40	0.13	search with cache (only 1: intro H; only 1: destruct H).	0.0317161083221	75
Coq.ssr.ssrfun.esymK	40	0.2.21	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.275227069855	604
Coq.ssr.ssrfun.etrans_id	40	0.17	search with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.0668048858643	151
Coq.ssr.ssrfun.inj_id	40	14	search with cache (only 1: by move  =>x y []).	0.0334930419922	75
Coq.ssr.ssrfun.inj_can_sym	40	4.30	search with cache (only 1: red; only 1: auto).	0.474538087845	862
Coq.ssr.ssrfun.inj_comp	40	19.13.20	search with cache (only 1: intros; only 1: red; only 1: auto).	0.965856075287	2826
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	5.18.40	search with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	1.42417001724	6095
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	28.28.193	search with cache (only 1: exists f; only 1: trivial; only 1: trivial).	6.65414905548	63165
Coq.ssr.ssrunder.Under_rel_from_rel	40	0.2	search with cache (only 1: intros; only 1: trivial).	0.00819110870361	4
Coq.ssr.ssrunder.Under_relE	40	0	search with cache (only 1: now trivial).	0.00661396980286	1
Coq.ssr.ssrunder.over_rel	40	0	search with cache (only 1: now trivial).	0.00695013999939	1
Coq.ssr.ssrunder.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00641989707947	1
Coq.ssr.ssrunder.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.0065131187439	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	9.2.11.12	search with cache (only 1: intros n1 le_mn1; only 1: intros m w le; only 1: subst; only 1: auto).	11.3134460449	30302
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.5	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.184299945831	48
Coq.Vectors.VectorSpec.const_nth	40	0.3.12.7	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.380183935165	667
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	1	search with cache (only 1: reflexivity).	0.0059289932251	2
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0244870185852	9
Coq.Vectors.VectorSpec.uncons_cons	40	1	search with cache (only 1: reflexivity).	0.0056459903717	2
Coq.Vectors.VectorSpec.append_comm_cons	40	1.0.0.1.0	search with cache (only 1: intros m w le; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: reflexivity).	0.0218670368195	12
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	13.2.2.0.0	search with cache (only 1: intros m n p; only 1: revert n; only 1: intros; only 1: subst p; only 1: trivial).	2.15262198448	5052
Coq.Setoids.Setoid.Seq_refl	40	1	search with cache (only 1: firstorder).	0.00691413879395	2
Coq.Setoids.Setoid.Seq_sym	40	2.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.0101611614227	5
Coq.Setoids.Setoid.Seq_trans	40	2.0.0.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0228989124298	13
Coq.Setoids.Setoid.gen_st	40	5	search with cache (only 1: simpl_relation).	0.00805687904358	6
Coq.Bool.IfProp.Iftrue_inv	40	1.0.1	search with cache (only 1: destruct 1; only 1: intuition; only 1: discriminate).	0.0206429958344	24
Coq.Bool.IfProp.Iffalse_inv	40	1.0.1.0	search with cache (only 1: destruct 1; only 1: intros; only 1: discriminate; only 1: trivial).	0.0136017799377	6
Coq.Bool.IfProp.IfProp_true	40	0.10.66	search with cache (only 1: intros n m; only 1: inversion 1; only 1: trivial).	9.37537693977	70813
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0302309989929	11
Coq.Bool.IfProp.IfProp_or	40	0.1.5.0	search with cache (only 1: destruct 1; only 1: auto with bool; only 1: right; only 1: trivial).	0.0260109901428	32
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	1.7.5	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0628249645233	132
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.018434047699	3
Coq.Bool.Zerob.zerob_false_intro	40	2.21.0	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial with bool).	0.454822063446	820
Coq.Bool.Zerob.zerob_false_elim	40	1.1.3.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: inversion 1; only 1: inversion 1).	0.0368359088898	24
Coq.Bool.DecBool.ifdec_left	40	10.0.6.1.4.0.2	search with cache (only 1: intro A; only 1: intro H; only 1: intros h1 h2; only 1: intro z; only 1: destruct h2; only 1: split; only 1: contradiction).	4.53631186485	18392
Coq.Bool.DecBool.ifdec_right	40	0.6.1.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	0.378633975983	343
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.7.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0150690078735	35
Coq.Bool.Sumbool.bool_eq_rec	40	0.2.4	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0115940570831	31
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00618600845337	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0117540359497	7
Coq.Bool.Sumbool.sumbool_not	40	1.1.1.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: case H2; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0553090572357	48
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	5	search with cache (only 1: discriminate).	0.00787782669067	14
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00475597381592	1
Coq.Bool.Bool.eq_true_false_abs	40	1.2.1.2.10.0	search with cache (only 1: intro H; only 1: destruct H; only 1: intro z; only 1: discriminate; only 1: intro z; only 1: discriminate).	0.314476966858	1082
Coq.Bool.Bool.not_true_is_false	40	3.12.1	search with cache (only 1: destr_bool; only 1: apply False_rec; only 1: auto).	0.189716100693	561
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00878000259399	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.13	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.322124004364	544
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0133600234985	3
Coq.Bool.Bool.leb_implb	40	1.0.1.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0164229869843	7
Coq.Bool.Bool.eqb_subst	40	0.1	search with cache (only 1: intro H; only 1: destr_bool).	0.0109169483185	3
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00710320472717	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.007896900177	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0169670581818	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0216701030731	5
Coq.Bool.Bool.negb_orb	40	2	search with cache (only 1: destr_bool).	0.00997495651245	3
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00916600227356	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00772500038147	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00697016716003	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00863194465637	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00833988189697	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00739598274231	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00704503059387	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00732803344727	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.012323141098	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0136439800262	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.1.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.212131977081	126
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: split; only 1: repeat split; only 1: repeat split).	0.0243759155273	8
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0188508033752	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0185098648071	4
Coq.Bool.Bool.orb_true_intro	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0443160533905	38
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0106289386749	1
Coq.Bool.Bool.orb_false_elim	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0140850543976	2
Coq.Bool.Bool.orb_diag	40	6.0	search with cache (only 1: intros; only 1: destr_bool).	0.0135409832001	8
Coq.Bool.Bool.orb_true_r	40	1	search with cache (only 1: destr_bool).	0.00901699066162	2
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00846695899963	1
Coq.Bool.Bool.orb_false_r	40	2	search with cache (only 1: destr_bool).	0.00844311714172	3
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00899481773376	1
Coq.Bool.Bool.orb_negb_r	40	1	search with cache (only 1: destr_bool).	0.00950598716736	2
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0104629993439	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0138850212097	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.343985080719	183
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0880620479584	15
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0243980884552	9
Coq.Bool.Bool.andb_false_intro1	40	2	search with cache (only 1: destr_bool).	0.0296239852905	18
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0139307975769	3
Coq.Bool.Bool.andb_false_r	40	4	search with cache (only 1: destr_bool).	0.0120041370392	5
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00930404663086	1
Coq.Bool.Bool.andb_diag	40	4.0	search with cache (only 1: intros; only 1: destr_bool).	0.0144469738007	6
Coq.Bool.Bool.andb_true_r	40	2	search with cache (only 1: destr_bool).	0.00979208946228	3
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00960803031921	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0209481716156	4
Coq.Bool.Bool.andb_negb_r	40	1	search with cache (only 1: destr_bool).	0.0106627941132	2
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0118789672852	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0161271095276	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0165891647339	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0166170597076	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.016655921936	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0166521072388	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0127749443054	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0124011039734	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.0104460716248	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00981307029724	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00976896286011	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00767993927002	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00961804389954	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0115990638733	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0160610675812	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0134072303772	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0172500610352	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0176379680634	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0177030563354	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0175800323486	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.0131661891937	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0180790424347	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0309700965881	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.13528585434	83
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.3.0.5	search with cache (only 1: destruct b1; only 1: intuition; only 1: destruct b2; only 1: intuition; only 1: intuition).	0.310047864914	256
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.01424908638	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0143320560455	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0164539813995	5
Coq.Bool.Bool.absurd_eq_true	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0118651390076	4
Coq.Bool.Bool.trans_eq_bool	40	8	search with cache (only 1: destr_bool).	0.0250570774078	19
Coq.Bool.Bool.Is_true_eq_true	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0126981735229	4
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0104792118073	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0117070674896	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00932502746582	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0160539150238	3
Coq.Bool.Bool.orb_prop_elim	40	4.0.0.5.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: tauto).	0.362267017365	310
Coq.Bool.Bool.orb_prop_intro	40	4.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0169539451599	6
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.018856048584	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0211479663849	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.020229101181	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0189778804779	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0145580768585	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.012852191925	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0126550197601	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0142920017242	3
Coq.Bool.Bool.andb_if	40	1	search with cache (only 1: destr_bool).	0.0130870342255	2
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.0106198787689	1
Coq.Bool.Bool.andb_lazy_alt	40	0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: repeat split; only 1: repeat split).	0.0171301364899	5
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.010272026062	2
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	8.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.14350104332	123
Coq.Bool.Bool.reflect_dec	40	1.5.1	search with cache (only 1: destruct 1; only 1: auto; only 1: intuition).	0.017156124115	10
Coq.Bool.Bool.eqb_spec	40	0.2.2.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.090635061264	62
Coq.Bool.BoolEq.beq_eq_true	40	2.16	search with cache (only 1: destruct 1; only 1: intuition).	0.319036960602	537
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40	9.19.2.25.29.8	search with cache (only 1: intros H; only 1: intros N; only 1: intuition; only 1: induction N as [| a l Hal N IH]; only 1: auto; only 1: firstorder).	35.0044238567	76547
Coq.Lists.ListSet.set_mem_ind	40	3.2.4.4.0.0.1	search with cache (only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto; only 1: auto with datatypes).	24.9877240658	20058
Coq.Lists.ListSet.set_mem_ind2	40	6.0.0.0.0.0.1.1	search with cache (only 1: simple induction x; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	15.2511630058	7517
Coq.Lists.ListSet.set_mem_correct1	40	0.2.1.0.3.2.18.7.0	search with cache (only 1: simple induction x; only 1: intros; only 1: now inversion H; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: intro; only 1: auto with datatypes; only 1: auto with datatypes).	17.8198058605	45555
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	0.0.0.0.2.0.2.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro Hneg; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).	5.22099113464	2610
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	0.2.2	search with cache (only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.143085002899	77
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.1.0.0.0.0.0.0.4.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	7.93489789963	4300
Coq.Lists.ListSet.set_add_not_empty	40	10.6.1.1.0.2.0.2	search with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: discriminate).	10.0418198109	9767
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.4.0.7.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	4.76014280319	2952
Coq.Lists.ListSet.set_union_intro	40	0.2.4	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.189913034439	58
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.0.1.0.0.0.0.0.3	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	2.58885502815	861
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0288169384003	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	6.1	search with cache (only 1: intros; only 1: eauto with datatypes).	0.380787134171	78
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40	0.2.0.0.3.5	search with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	21.0127999783	8509
Coq.Lists.ListDec.In_decidable	40	3.0.0.34	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intuition).	22.2431001663	2453
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.7.8	search with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.0538020133972	183
Coq.Lists.Streams.tl_nth_tl	40	0.0.1.0.11	search with cache (only 1: induction n; only 1: trivial; only 1: intros; only 1: simpl; only 1: trivial).	1.5992808342	2098
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	7.6.13.9	search with cache (only 1: intros n m; only 1: inversion 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	16.5944020748	13865
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	19.5.9	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.40146780014	1469
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0136609077454	5
Coq.Lists.Streams.Str_nth_map	40	0.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0120899677277	5
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	1.0.0.5	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.116991043091	114
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.0.0.1.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.0310690402985	27
Coq.Lists.List.nil_cons	40	1.9	search with cache (only 1: intros a n Ha; only 1: discriminate).	0.0717880725861	58
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.1.5.0	search with cache (only 1: unfold hd_error, tl; only 1: destruct l as [| x xs]; only 1: firstorder  discriminate; only 1: discriminate).	0.0411880016327	27
Coq.Lists.List.length_zero_iff_nil	40	0.0.2.1.1.2.2	search with cache (only 1: destruct l; only 1: split; only 1: reflexivity; only 1: reflexivity; only 1: split; only 1: now discriminate; only 1: now discriminate).	0.295392036438	262
Coq.Lists.List.hd_error_nil	40	1.0	search with cache (only 1: unfold hd_error, tl; only 1: firstorder  discriminate).	0.0153460502625	3
Coq.Lists.List.hd_error_cons	40	3.1.0	search with cache (only 1: intros; only 1: simpl; only 1: split).	0.0189790725708	7
Coq.Lists.List.in_eq	40	4.2.0	search with cache (only 1: intros; only 1: simpl; only 1: firstorder  discriminate).	0.0198299884796	9
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0153560638428	2
Coq.Lists.List.not_in_cons	40
Coq.Lists.List.in_nil	40	6	search with cache (only 1: intuition).	0.0167632102966	16
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0136308670044	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	1.0.0	search with cache (only 1: simpl; only 1: intros; only 1: split).	0.0185129642487	4
Coq.Lists.List.app_nil_r	40	0.2.1.0.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.140926837921	117
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0313971042633	7
Coq.Lists.List.app_assoc	40	0.0.0.0.14.2.3.0.0.0.0.0	search with cache (only 1: destruct l; only 1: intros a r; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	24.4737439156	50531
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0370790958405	7
Coq.Lists.List.app_comm_cons	40	0.0.0	search with cache (only 1: intros; only 1: simpl; only 1: f_equal).	0.0212941169739	3
Coq.Lists.List.app_eq_nil	40	0.3.0.4.11	search with cache (only 1: destruct l as [| x xs]; only 1: destruct 1; only 1: firstorder  discriminate; only 1: simpl; only 1: inversion 1).	1.21020102501	1553
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	2.0.1.10	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	1.83417797089	1364
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	7.0.2.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.49606800079	1494
Coq.Lists.List.in_app_iff	40	11.0.3.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	3.59698390961	3335
Coq.Lists.List.app_inv_head	40	1.20.2.4.4	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: auto).	11.9240019321	20709
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0185649394989	2
Coq.Lists.List.nth_default_eq	40	0.5.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	7.89421200752	6680
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	2.0.0.1.0.0.1.4.3.0	search with cache (only 1: unfold lt; only 1: induction l; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros d ie; only 1: auto with arith).	38.0658240318	31617
Coq.Lists.List.app_nth1	40	0.0.0.0.8.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	3.62002897263	2403
Coq.Lists.List.app_nth2	40	0.0.0.0.4.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	2.00737500191	1032
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.2.2.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	4.99301695824	1905
Coq.Lists.List.nth_error_app2	40	0.0.0.1.0.1.1.1.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	1.72789812088	889
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	1.0.0.0.0.0.1.5.1	search with cache (only 1: unfold lt; only 1: induction l; only 1: simpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	15.4775338173	7430
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4.1	search with cache (only 1: simpl; only 1: split).	0.0205719470978	7
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	0.2.0.4	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	0.100749969482	31
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0299119949341	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.0.0.1.1.0.13	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	7.44955301285	6815
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	5.7.0.2.3	search with cache (only 1: intro y; only 1: simpl; only 1: induction l; only 1: auto; only 1: firstorder).	2.01680994034	2713
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0170619487762	2
Coq.Lists.List.concat_cons	40	0.0.0.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0829319953918	57
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	1.2	search with cache (only 1: simpl; only 1: auto).	0.0190901756287	5
Coq.Lists.List.in_map	40	0.0.0.1.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto).	0.693610906601	291
Coq.Lists.List.in_map_iff	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0814578533173	3
Coq.Lists.List.map_length	40	1.0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto).	0.0289239883423	5
Coq.Lists.List.map_nth	40	0.0.2.0.0.2.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.845088005066	374
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	1.0.0.0.0.4	search with cache (only 1: induction l; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	0.310010194778	112
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	3.4.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: discriminate).	1.03629183769	643
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.0.1.1.5.2	search with cache (only 1: intros l2; only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.455743074417	271
Coq.Lists.List.concat_map	40	0.0.3.0.0.0.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	0.263309001923	134
Coq.Lists.List.map_id	40	0.0.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.201829910278	90
Coq.Lists.List.map_map	40	0.3.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.0477051734924	21
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40	3.17.4.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: inversion 1; only 1: firstorder  (subst; auto)).	22.961014986	21744
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.2.2.1.3.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.72431397438	480
Coq.Lists.List.fold_left_app	40	2.0.0.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	0.0319309234619	7
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.0.1.2.1	search with cache (only 1: induction l; only 1: now simpl; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.216816902161	99
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40	3.0.0.3.10.3	search with cache (only 1: firstorder; only 1: induction l1 as [| x l1 IH]; only 1: auto; only 1: simpl; only 1: rewrite IH; only 1: firstorder).	0.857023000717	900
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: solve [ auto ]).	0.559015989304	188
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	0.0.1.0.0.0.2.2	search with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	1.99562191963	488
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.023423910141	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	11.0.0.0.1.1.4.0.5	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	7.24716615677	7536
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.1.1.0.0.0.0.0	search with cache (only 1: induction l as [| a l IHl]; only 1: firstorder; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	0.0560359954834	10
Coq.Lists.List.ext_in_filter	40	10.8.0.1	search with cache (only 1: induction l as [| a l IHl]; only 1: firstorder; only 1: rewrite filter_map; only 1: apply ext_in_map).	33.2946710587	20668
Coq.Lists.List.filter_ext_in_iff	40	0.0.0.0.0.0.0.0.4	search with cache (only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	1.92299604416	733
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0286359786987	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.0.3.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.537009000778	110
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0550360679626	8
Coq.Lists.List.split_combine	40	6.0.2.0.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: now f_equal).	6.28384685516	3490
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40	2.0.0.0.0.0.2.1.0.0.0.0.1	search with cache (only 1: induction l, l'; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct H; only 1: injection H; only 1: auto; only 1: firstorder).	31.6394748688	17909
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	1.0.2.0.1.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.999121189117	475
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	0.2.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0448949337006	19
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40	12.0	search with cache (only 1: unfold lel; only 1: now intros -> ->).	0.283200025558	123
Coq.Lists.List.lel_cons_cons	40	0.0.3	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.15119099617	13
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0216898918152	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0229270458221	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: solve [ auto ]).	0.0138380527496	1
Coq.Lists.List.incl_tl	40	10.2	search with cache (only 1: intros; only 1: intuition).	0.159120082855	173
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto with arith).	0.0153720378876	1
Coq.Lists.List.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.0176649093628	1
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0179708003998	1
Coq.Lists.List.incl_cons	40	4.1	search with cache (only 1: intros f g l H; only 1: firstorder  (subst; auto)).	0.0417969226837	12
Coq.Lists.List.incl_app	40	2.1.1.2	search with cache (only 1: induction l; only 1: auto with datatypes; only 1: intro y; only 1: firstorder).	0.386104106903	17
Coq.Lists.List.firstn_nil	40	1.0.0.66	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.649490118027	2521
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.0170319080353	1
Coq.Lists.List.firstn_all	40	0.2.0.1.5	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.178094148636	106
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.0154330730438	2
Coq.Lists.List.firstn_le_length	40	7.0.3.0.1.2.0.6	search with cache (only 1: induction n; only 1: intro; only 1: auto with arith; only 1: simpl; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	39.0468678474	44934
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0298089981079	6
Coq.Lists.List.skipn_nil	40	0.0.6	search with cache (only 1: induction n; only 1: reflexivity; only 1: now simpl).	0.0351529121399	17
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.0166809558868	1
Coq.Lists.List.skipn_none	40	0.1.1.7	search with cache (only 1: intro; only 1: induction l as [| x l]; only 1: now simpl; only 1: trivial).	0.252990007401	143
Coq.Lists.List.skipn_all2	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	0.066291809082	10
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40
Coq.Lists.List.skipn_length	40	0.0.0.0.0.0.2	search with cache (only 1: induction n as [| k iHk]; only 1: auto with arith; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	0.0622699260712	23
Coq.Lists.List.skipn_all	40	0	search with cache (only 1: now induction l).	0.0181570053101	1
Coq.Lists.List.skipn_app	40	0.0.0.5.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.95886421204	1080
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.0.0.3	search with cache (only 1: induction l; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: f_equal).	0.0339920520782	8
Coq.Lists.List.combine_firstn_l	40	2.0.0.0.0.1.0.1	search with cache (only 1: induction l; only 1: now simpl; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	1.03503918648	347
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.0.0.0.0.3.0	search with cache (only 1: induction l as [| x l IHl]; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: simpl; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	2.8588681221	1307
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	13.0.0	search with cache (only 1: induction 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	4.48374295235	2154
Coq.Lists.List.Add_length	40	4.1.1.4	search with cache (only 1: induction 1; only 1: trivial; only 1: simpl; only 1: auto).	0.225013971329	131
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0212309360504	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.1.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.162216901779	5
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	2.0	search with cache (only 1: firstorder; only 1: now simpl).	0.0275559425354	4
Coq.Lists.List.Exists_cons	40	2.0.0.21.3	search with cache (only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder).	4.68827199936	7163
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.2.0.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.554536104202	203
Coq.Lists.List.Forall_inv	40	0.13	search with cache (only 1: inversion 1; only 1: auto).	0.574344873428	510
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40	0.0.1.1.10.0.0.1.4.1.1.0	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: left; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: destruct Hrec as [Hl'| Hl']; only 1: left; only 1: firstorder; only 1: right; only 1: abstract now inversion 1; only 1: right; only 1: abstract now inversion 1).	29.1029140949	19309
Coq.Lists.List.Forall_inv_tail	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.0263810157776	3
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	9.4155960083	226
Coq.Lists.List.Forall_Exists_dec	40	4.0.1.0.0.0.1.0.0.1.1.1	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: apply Forall_nil; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	38.7907691002	17792
Coq.Lists.List.Forall_impl	40	0.0.0.0.2.1.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.177495002747	49
Coq.Lists.List.Forall2_refl	40	4	search with cache (only 1: constructor).	0.0167000293732	5
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	2.1.0.0.4.0.0.0.1.1.1	search with cache (only 1: induction l1; only 1: induction l1'; only 1: auto; only 1: intros; only 1: inversion H; only 1: intros; only 1: inversion H; only 1: subst; only 1: clear H; only 1: simpl; only 1: auto).	10.8036808968	9840
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	2.1.0.3	search with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: auto).	0.0288400650024	10
Coq.Lists.List.repeat_spec	40	0.1.0.6.1.1	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: intuition).	0.319185018539	252
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.0206639766693	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	1.0.2.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl in *; only 1: intuition).	0.957690000534	364
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.0.0.0.0.9	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).	2.82376003265	1382
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	6.4.0.1.1.2.23	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: etransitivity; only 1: now apply permA_swap; only 1: rewrite <- !app_comm_cons; only 1: intuition).	11.6554100513	10382
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0225648880005	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	3.1.0.3.0.0.2.2.6	search with cache (only 1: intros E; only 1: revert l₁ E; only 1: intros E P; only 1: induction P; only 1: intuition; only 1: now apply permA_skip; only 1: eauto; only 1: clear P1 P2; only 1: eauto).	21.5511448383	14520
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now constructor).	0.0258679389954	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.4.8.0.1.8.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: firstorder; only 1: auto).	35.7590010166	35379
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.2.0	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.0440998077393	17
Coq.Lists.SetoidList.InA_nil	40	0.0	search with cache (only 1: intuition; only 1: invlist InA).	0.0239419937134	2
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.2.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.428176879883	186
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	7	search with cache (only 1: now simpl).	0.110956907272	27
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.1.1.0.1.0	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto).	0.0564432144165	10
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.1.0	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.0867249965668	4
Coq.Lists.SetoidList.In_InA	40	4.3.0	search with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.0171279907227	10
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.3	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	1.82621502876	22
Coq.Lists.SetoidList.InA_double_head	40	0.1	search with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.0376260280609	3
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0511429309845	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.0	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.0176739692688	5
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.1.1	search with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).	0.0406060218811	6
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.1	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0544679164886	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.3.0.0.0.1	search with cache (only 1: destruct l; only 1: simpl; only 1: intuition; only 1: intros H; only 1: rewrite InA_app_iff; only 1: tauto).	0.0436718463898	14
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.0.0.0.0.1.0.0.0.0	search with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	1.58176493645	885
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	3.2.0.3.8.2.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct IHl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: auto).	5.99270892143	5517
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	7.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	1.11647701263	254
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.0.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0301718711853	7
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.0.0.1.1.20	search with cache (only 1: induction l1; only 1: intros; only 1: eauto; only 1: constructor; only 1: inv; only 1: auto).	2.7270989418	2021
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	1.6.0.26	search with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: intuition).	17.6089699268	21003
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.2.1.0.1.2.1.7	search with cache (only 1: induction 1; only 1: induction 1; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro; only 1: auto).	7.19360303879	1015
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0300598144531	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.0.4.1.0.4	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	1.14788293839	713
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.eq_dec	40	1.19.23	search with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: trivial).	3.79673695564	13594
Coq.NArith.BinNat.discr	40	30.19.13.26	search with cache (only 1: induction n; only 1: auto; only 1: revert p; only 1: eauto with *).	9.22321200371	61032
Coq.NArith.BinNat.peano_rect_base	40	9	search with cache (only 1: auto).	0.0184669494629	34
Coq.NArith.BinNat.peano_rect_succ	40
Coq.NArith.BinNat.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00586295127869	1
Coq.NArith.BinNat.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0127837657928	5
Coq.NArith.BinNat.bi_induction	40
Coq.NArith.BinNat.recursion_wd	40
Coq.NArith.BinNat.recursion_0	40	0	search with cache (only 1: trivial).	0.00545787811279	1
Coq.NArith.BinNat.recursion_succ	40
Coq.NArith.BinNat.one_succ	40	2	search with cache (only 1: trivial).	0.0058319568634	3
Coq.NArith.BinNat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0043580532074	1
Coq.NArith.BinNat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00359201431274	1
Coq.NArith.BinNat.pos_pred_spec	40	0	search with cache (only 1: reflexivity).	0.00424599647522	1
Coq.NArith.BinNat.succ_pos_spec	40	0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.00805807113647	4
Coq.NArith.BinNat.pos_pred_succ	40	1.8.15.1.7	search with cache (only 1: destruct n; only 1: reflexivity; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now destruct p).	1.26850104332	3171
Coq.NArith.BinNat.succ_pos_pred	40	1.2.14.17	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: now destruct p).	0.388161897659	1126
Coq.NArith.BinNat.pred_succ	40	0.0.3	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.009850025177	6
Coq.NArith.BinNat.pred_sub	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.00859594345093	3
Coq.NArith.BinNat.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0114982128143	1
Coq.NArith.BinNat.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00579190254211	1
Coq.NArith.BinNat.add_succ_l	40
Coq.NArith.BinNat.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.00666499137878	1
Coq.NArith.BinNat.sub_succ_r	40
Coq.NArith.BinNat.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00649499893188	1
Coq.NArith.BinNat.mul_succ_l	40
Coq.NArith.BinNat.eqb_eq	40
Coq.NArith.BinNat.ltb_lt	40
Coq.NArith.BinNat.leb_le	40
Coq.NArith.BinNat.compare_eq_iff	40
Coq.NArith.BinNat.compare_lt_iff	40	0.2.0.0.1	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.190012931824	143
Coq.NArith.BinNat.compare_le_iff	40	1	search with cache (only 1: easy').	0.188092947006	85
Coq.NArith.BinNat.compare_antisym	40
Coq.NArith.BinNat.min_l	40
Coq.NArith.BinNat.min_r	40
Coq.NArith.BinNat.max_l	40
Coq.NArith.BinNat.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0144031047821	7
Coq.NArith.BinNat.lt_succ_r	40
Coq.NArith.BinNat.double_spec	40	35	search with cache (only 1: reflexivity).	0.832792043686	1544
Coq.NArith.BinNat.succ_double_spec	40
Coq.NArith.BinNat.double_add	40
Coq.NArith.BinNat.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.00749206542969	1
Coq.NArith.BinNat.double_mul	40	2	search with cache (only 1: now destruct n, m).	0.00703001022339	3
Coq.NArith.BinNat.succ_double_mul	40	1.28	search with cache (only 1: rewrite add_comm; only 1: now destruct n, m).	1.69360804558	898
Coq.NArith.BinNat.div2_double	40	0.0.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.012195110321	7
Coq.NArith.BinNat.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00524282455444	1
Coq.NArith.BinNat.double_inj	40
Coq.NArith.BinNat.succ_double_inj	40
Coq.NArith.BinNat.succ_double_lt	40
Coq.NArith.BinNat.double_lt_mono	40	5.1	search with cache (only 1: intro H; only 1: now destruct n, m).	0.387155056	227
Coq.NArith.BinNat.double_le_mono	40	0.0.0.0.1.0	search with cache (only 1: intro H; only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0139088630676	7
Coq.NArith.BinNat.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0191390514374	11
Coq.NArith.BinNat.succ_double_le_mono	40	0.0.0.0.1.0	search with cache (only 1: intro H; only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0132780075073	7
Coq.NArith.BinNat.compare_0_r	40	23.2.4	search with cache (only 1: intro H; only 1: eapply Private_Tac.lt_irrefl; only 1: now elim (nlt_0_r n)).	0.533107995987	1110
Coq.NArith.BinNat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.00550603866577	1
Coq.NArith.BinNat.pow_succ_r	40
Coq.NArith.BinNat.pow_neg_r	40	0.2.0.1.0.2.6	search with cache (only 1: intro H; only 1: destruct n, p; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: easy; only 1: easy).	1.90438508987	2387
Coq.NArith.BinNat.square_spec	40
Coq.NArith.BinNat.size_log2	40	21.2.0.0.1.44	search with cache (only 1: destruct n; only 1: intro H; only 1: destruct H; only 1: trivial; only 1: simpl; only 1: now destruct p).	9.23719501495	29593
Coq.NArith.BinNat.size_gt	40
Coq.NArith.BinNat.size_le	40
Coq.NArith.BinNat.log2_spec	40
Coq.NArith.BinNat.log2_nonpos	40	0.0.1.0.2.0.0	search with cache (only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).	0.0181529521942	10
Coq.NArith.BinNat.even_spec	40
Coq.NArith.BinNat.odd_spec	40
Coq.NArith.BinNat.pos_div_eucl_spec	40
Coq.NArith.BinNat.div_eucl_spec	40
Coq.NArith.BinNat.div_mod'	40
Coq.NArith.BinNat.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.00997281074524	3
Coq.NArith.BinNat.pos_div_eucl_remainder	40
Coq.NArith.BinNat.mod_lt	40
Coq.NArith.BinNat.mod_bound_pos	40
Coq.NArith.BinNat.sqrtrem_sqrt	40
Coq.NArith.BinNat.sqrtrem_spec	40
Coq.NArith.BinNat.sqrt_spec	40
Coq.NArith.BinNat.sqrt_neg	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold sqrtrem, sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r).	0.0213928222656	5
Coq.NArith.BinNat.ggcd_gcd	40
Coq.NArith.BinNat.ggcd_correct_divisors	40
Coq.NArith.BinNat.gcd_divide_l	40
Coq.NArith.BinNat.gcd_divide_r	40
Coq.NArith.BinNat.gcd_greatest	40
Coq.NArith.BinNat.gcd_nonneg	40	2.0.2.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: apply le_0_l).	0.135107040405	139
Coq.NArith.BinNat.testbit_even_0	40	0.0.28	search with cache (only 1: destruct a as [| a]; only 1: reflexivity; only 1: reflexivity).	0.25933098793	998
Coq.NArith.BinNat.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.00559592247009	1
Coq.NArith.BinNat.testbit_succ_r_div2	40
Coq.NArith.BinNat.testbit_odd_succ	40
Coq.NArith.BinNat.testbit_even_succ	40	0.0.0.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0138349533081	4
Coq.NArith.BinNat.testbit_neg_r	40	10	search with cache (only 1: now destruct n).	0.153727769852	113
Coq.NArith.BinNat.shiftr_succ_r	40
Coq.NArith.BinNat.shiftl_succ_r	40
Coq.NArith.BinNat.shiftr_spec	40
Coq.NArith.BinNat.shiftl_spec_high	40
Coq.NArith.BinNat.shiftl_spec_low	40
Coq.NArith.BinNat.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00716614723206	2
Coq.NArith.BinNat.pos_lxor_spec	40
Coq.NArith.BinNat.lxor_spec	40
Coq.NArith.BinNat.pos_lor_spec	40
Coq.NArith.BinNat.lor_spec	40
Coq.NArith.BinNat.pos_land_spec	40
Coq.NArith.BinNat.land_spec	40
Coq.NArith.BinNat.pos_ldiff_spec	40
Coq.NArith.BinNat.ldiff_spec	40
Coq.NArith.BinNat.gt_lt_iff	40
Coq.NArith.BinNat.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0102260112762	2
Coq.NArith.BinNat.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00483012199402	1
Coq.NArith.BinNat.ge_le_iff	40
Coq.NArith.BinNat.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.011011838913	2
Coq.NArith.BinNat.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00481820106506	1
Coq.NArith.BinNat.pos_pred_shiftl_low	40
Coq.NArith.BinNat.pos_pred_shiftl_high	40
Coq.NArith.BinNat.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0321578979492	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0335330963135	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.033478975296	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	1.2.1.9.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite H, H0; only 1: reflexivity).	3.30480289459	1500
Coq.NArith.Ndec.Ndiv2_eq	40	3.0.0.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: subst; only 1: reflexivity).	0.0329179763794	7
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.358543157578	4
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.0.2	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.469822883606	113
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.021959066391	1
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	0.0.0.0.3.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.126403808594	60
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	1.3.2.4.0.0.1.0.1	search with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: rewrite !N2Nat.inj_succ_double; only 1: trivial).	34.5802919865	27171
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0395269393921	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0598950386047	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: reflexivity; only 1: intro H; only 1: exfalso; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate || simpl).	0.044420003891	10
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.0.1	search with cache (only 1: simple induction d; only 1: unfold ni_min; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	0.0293209552765	6
Coq.NArith.Ndist.ni_min_O_r	40	0.0.1.1.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0335440635681	8
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.0174970626831	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.2.1	search with cache (only 1: intros; only 1: rewrite ni_min_comm; only 1: trivial).	0.0242428779602	6
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40	2.1.5.2.3.0.1	search with cache (only 1: simple induction d'; only 1: trivial; only 1: intros; only 1: generalize H0; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: trivial).	1.37374591827	2728
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.3.0.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0376300811768	12
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.14.0.2	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.837377071381	1693
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	search with cache (only 1: trivial).	0.0089910030365	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0088632106781	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1.2	search with cache (only 1: intros; only 1: trivial).	0.0108001232147	5
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.00791311264038	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40	0.1.5.0.0.12	search with cache (only 1: induction n; only 1: unfold N.shiftl_nat; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).	2.22288799286	3042
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.0.0.0.8.4.0.2	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.844108104706	1646
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0130438804626	3
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0120298862457	3
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	3.0.2.0.2.0.0.5.5.0	search with cache (only 1: destruct n; only 1: intro H; only 1: now try rewrite H; only 1: destruct p; only 1: intro H; only 1: reflexivity; only 1: intros; only 1: discriminate H; only 1: intro H; only 1: reflexivity).	11.0913460255	13793
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.0.0.0.5.0.0.4	search with cache (only 1: destruct a; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.920191049576	1081
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0157070159912	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	7.57049679756	6106
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	0.382433176041	271
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	2.0.0.0.0.0.0.0.4.7	search with cache (only 1: destruct a; only 1: reflexivity; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: trivial).	1.27353405952	1233
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: trivial).	2.6432659626	1966
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	0.0.0.3.0.0.3.0.0.0.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).	1.78123307228	2155
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.1.0.1.0.0	search with cache (only 1: destruct a; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	0.717038869858	539
Coq.NArith.NArith.test	40
Coq.NArith.Nnat.id	40
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	1.0.0.0.0.2	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	0.0400981903076	9
Coq.NArith.Nnat.inj_double	40	0.3.13.15.1.2.1.33	search with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: split; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	5.8694050312	13982
Coq.NArith.Nnat.inj_succ_double	40	1.7.0.10.0.1.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	4.11835598946	6713
Coq.NArith.Nnat.inj_succ	40	2.0.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0302469730377	8
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_mul	40
Coq.NArith.Nnat.inj_sub	40
Coq.NArith.Nnat.inj_pred	40
Coq.NArith.Nnat.inj_div2	40
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_max	40
Coq.NArith.Nnat.inj_min	40
Coq.NArith.Nnat.inj_iter	40
Coq.NArith.Nnat.id	40	0.0.3.0.22	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.245199918747	457
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	1.0.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.0303640365601	8
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.035404920578	1
Coq.NArith.Nnat.inj_succ	40	0	search with cache (only 1: nat2N).	0.0793528556824	1
Coq.NArith.Nnat.inj_pred	40	0	search with cache (only 1: nat2N).	0.0293099880219	1
Coq.NArith.Nnat.inj_add	40	4	search with cache (only 1: nat2N).	0.0326778888702	5
Coq.NArith.Nnat.inj_sub	40	0	search with cache (only 1: nat2N).	0.0317199230194	1
Coq.NArith.Nnat.inj_mul	40	0	search with cache (only 1: nat2N).	0.0319819450378	1
Coq.NArith.Nnat.inj_div2	40	0	search with cache (only 1: nat2N).	0.0293190479279	1
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_min	40	0	search with cache (only 1: nat2N).	0.0316371917725	1
Coq.NArith.Nnat.inj_max	40	0	search with cache (only 1: nat2N).	0.0315198898315	1
Coq.NArith.Nnat.inj_iter	40	3.0.11.3.0.10.0.7	search with cache (only 1: induction n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.iter_succ; only 1: f_equal; only 1: trivial).	3.65152287483	7252
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0218849182129	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0205790996552	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0211968421936	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0153040885925	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.012109041214	1
Coq.Strings.String.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.010036945343	1
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0116641521454	1
Coq.Strings.String.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.00804686546326	1
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.0.5.2.2.0.10	search with cache (only 1: elim s; only 1: constructor; only 1: simpl; only 1: intros n; only 1: intros H0; only 1: intros ->; only 1: t_eqb).	0.889488935471	1393
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.1.2.0	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.0146048069	7
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.3	search with cache (only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.70462679863	22
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.to_N_of_pos	40	12	search with cache (only 1: now subst).	0.103862047195	140
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.to_N_of_pos	40	12	search with cache (only 1: now subst).	0.0921950340271	140
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.to_N_of_pos	40	12	search with cache (only 1: now subst).	0.0821928977966	140
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	11.4	search with cache (only 1: intros eps eps_pos; only 1: lra).	2.12616419792	654
Coq.Reals.Ratan.pos_half_prf	40	0	search with cache (only 1: lra).	0.029139995575	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	4.8	search with cache (only 1: intros Pc; only 1: lra).	0.890455961227	459
Coq.Reals.Ratan.pos_opp_lt	40	2.0	search with cache (only 1: intros x h; only 1: lra).	0.023316860199	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.5.0	search with cache (only 1: intros x n hx; only 1: apply pow_lt; only 1: assumption).	0.022488117218	8
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	0.0.0.2.1.8.6	search with cache (only 1: unfold Ratan_seq, PI_tg; only 1: intro Hyp; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).	11.3702819347	3513
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.0.3.3.7.1	search with cache (only 1: intros; only 1: elim H; only 1: simpl; only 1: ring; only 1: simpl; only 1: intros; only 1: auto).	1.63028407097	2203
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.0.0.0.6	search with cache (only 1: induction l as [| r l Hrecl]; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	1.19342398643	605
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.0.0.1.7.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	1.69952607155	1929
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	2.5.0	search with cache (only 1: intros; only 1: elim H; only 1: reflexivity).	0.0462272167206	34
Coq.Reals.RList.RList_P22	40	2.0.1.4.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	0.53666305542	322
Coq.Reals.RList.RList_P23	40	0.0.0.9.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: ring).	6.47909998894	5506
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction l1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	0.916332006454	555
Coq.Reals.RList.RList_P27	40	2.13.4.0.0.1.17	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	4.21362400055	13020
Coq.Reals.RList.RList_P28	40	1.4.0.0.1.14	search with cache (only 1: simple induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	1.84696102142	3751
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0777969360352	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.0531809329987	17
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	11.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	3.14498901367	2803
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0360760688782	7
Coq.Reals.Rbasic_fun.Rmin_left	40	1.1.0.3.2	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.368036031723	285
Coq.Reals.Rbasic_fun.Rmin_right	40	1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real).	0.0299000740051	5
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0364370346069	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0.0.0.0.0.8.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto using Rle_antisym; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto using Rle_antisym).	2.06250405312	1663
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	5.3.0.5.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: assumption; only 1: assumption).	2.44689297676	2063
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: eauto using Rle_trans, Rle_refl).	0.0350890159607	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0359709262848	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0371959209442	5
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	0.0375800132751	9
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0430729389191	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0373959541321	7
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0316488742828	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0368280410767	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.038006067276	9
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.095242023468	38
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	2.2.1.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.0293750762939	9
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	0.0.0.0.0.3.1.1	search with cache (only 1: intros x y; only 1: unfold Rmax; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	2.26626491547	1685
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.lt_strorder	40
Coq.Reals.ROrderedType.lt_compat	40	9	search with cache (only 1: auto with *).	0.0149831771851	15
Coq.Reals.ROrderedType.le_lteq	40	6.1	search with cache (only 1: intros; only 1: auto with *).	0.0215470790863	20
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.5.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.177879095078	84
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0491819381714	6
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	2.0	search with cache (only 1: intros f a b; only 1: split).	0.0307741165161	4
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40	5.2.5.5.10.8.0	search with cache (only 1: intros f a; only 1: intros g H; only 1: elim H; only 1: intros; only 1: simpl; only 1: unfold Rminus; only 1: field).	39.928401947	59480
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	0.26	search with cache (only 1: fix ind_0_1_SS 1; only 1: reflexivity || assumption).	0.856276988983	2513
Coq.Reals.Rfunctions.fact_simpl	40	3.1.4	search with cache (only 1: simpl; only 1: intros; only 1: f_equal).	0.0404407978058	29
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	5.1.7	search with cache (only 1: unfold IZR at 1; only 1: intros p0; only 1: reflexivity).	0.174902915955	202
Coq.Reals.Rfunctions.pow_1	40	9.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0791490077972	55
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	0.0.5.5.0.2	search with cache (only 1: intro; only 1: intro; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: auto with real).	4.99678397179	1827
Coq.Reals.Rfunctions.pow_RN_plus	40	1.11.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: repeat rewrite Rmult_assoc; only 1: auto with real).	25.2074818611	13515
Coq.Reals.Rfunctions.pow_lt	40	2.1.15.0	search with cache (only 1: intro; only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto).	25.2138388157	31186
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.021448135376	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.1.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	1.35140395164	572
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.2.2.0.1.0.0.4	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: intros; only 1: replace 1 with (1 * 1); only 1: unfold pow; only 1: auto with real; only 1: auto with real).	4.93318414688	3462
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.0.0.1.0.2.0.0.2.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: reflexivity; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	4.49577689171	2034
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.18.5.1	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: reflexivity).	1.25850105286	1796
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.0199601650238	1
Coq.Reals.Rfunctions.powerRZ_1	40	0.1	search with cache (only 1: simpl; only 1: auto with real).	0.0256540775299	3
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.0.0.0.0.1.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.474920034409	170
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0581810474396	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.0.0.0.0.0.0	search with cache (only 1: case n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros m2; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.0477352142334	7
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	2.8.8	search with cache (only 1: intros n GE; only 1: apply Rle_ge; only 1: apply Rabs_pos).	2.55451607704	1951
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	3.4.0.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	0.374422073364	195
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40	0.1.5.6.2.1.5.7	search with cache (only 1: intros x n; only 1: unfold R_dist; only 1: symmetry; only 1: rewrite <- Rmult_1_r; only 1: rewrite <- Rmult_minus_distr_l; only 1: rewrite Rmult_1_r; only 1: symmetry; only 1: apply Rabs_mult).	21.3246109486	19741
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	17	search with cache (only 1: lia).	0.518799066544	418
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	0.0.0.0.0.1.0.1.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: replace (2 * S N)%nat with (S (S (2 * N))); only 1: simpl; only 1: simpl in HrecN; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	0.346958875656	210
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	0.10.1.17	search with cache (only 1: apply exp_inv; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: apply Rlt_0_1).	1.20993089676	1599
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros f g D l x H; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	1.27111101151	547
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	3.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0459668636322	15
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	4.1.7.1	search with cache (only 1: intros; only 1: unfold Rle; only 1: right; only 1: auto).	1.24701619148	1155
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0231380462646	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	search with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	0.0256330966949	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.14.1.4.10	search with cache (only 1: intros r H; only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	22.5017459393	13717
Coq.Reals.RIneq.Rgt_not_eq	40	3.0.0.11.3.2	search with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: apply (Rlt_irrefl r1); only 1: pattern r1 at 2; only 1: trivial).	21.3074069023	15415
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.6.0	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.16149520874	45
Coq.Reals.RIneq.Rdichotomy	40	0.0.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0448920726776	3
Coq.Reals.RIneq.Rlt_le	40	0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0361759662628	5
Coq.Reals.RIneq.Rgt_ge	40	0.0.3.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0360209941864	7
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0370769500732	6
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0215549468994	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0183880329132	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0398509502411	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0252919197083	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.2.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0813000202179	8
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0431268215179	6
Coq.Reals.RIneq.Rnot_gt_ge	40	1.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0523271560669	9
Coq.Reals.RIneq.Rnot_lt_ge	40	2.0.0.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0388059616089	8
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.024405002594	2
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	4.0	search with cache (only 1: intros; only 1: auto with real).	0.0324380397797	13
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0320241451263	5
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.2	search with cache (only 1: intros r1 r2 H; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.412537813187	54
Coq.Reals.RIneq.Rle_not_gt	40	0.6.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.140427112579	23
Coq.Reals.RIneq.Rge_not_gt	40	0.1.0.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.0275130271912	5
Coq.Reals.RIneq.Req_le	40	0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0246071815491	3
Coq.Reals.RIneq.Req_ge	40	0.1	search with cache (only 1: red; only 1: intuition eauto  3).	0.0248441696167	3
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0290699005127	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: intuition eauto  3).	0.0285270214081	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0382099151611	5
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1	search with cache (only 1: intuition).	0.0997169017792	26
Coq.Reals.RIneq.Rle_le_eq	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.102214097977	4
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0397899150848	1
Coq.Reals.RIneq.Rlt_eq_compat	40	2.3.1	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: tauto).	0.0551249980927	24
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	search with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0304780006409	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	4.8.0	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros n0 H' m; only 1: eauto using Rle_trans with rorders).	0.909106016159	951
Coq.Reals.RIneq.Rle_lt_trans	40	3.0.13	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  3).	15.4036989212	7753
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0371119976044	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.3.7.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	3.52900409698	1146
Coq.Reals.RIneq.Rle_dec	40	0.3.1.0	search with cache (only 1: intros; only 1: unfold Rle; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	2.41078090668	75
Coq.Reals.RIneq.Rgt_dec	40	2.0.3.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.0955231189728	9
Coq.Reals.RIneq.Rge_dec	40	1.1.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.195227861404	14
Coq.Reals.RIneq.Rlt_le_dec	40	0.5.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.769873857498	110
Coq.Reals.RIneq.Rgt_ge_dec	40	1.0.0.9	search with cache (only 1: unfold Rge; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	2.56636595726	994
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0958840847015	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.279022216797	74
Coq.Reals.RIneq.Rlt_or_le	40	1.1.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0467081069946	6
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.4.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.424539804459	153
Coq.Reals.RIneq.Rle_or_lt	40	0.1.0.1	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.386934995651	70
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.141300916672	59
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.8.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	1.88141894341	227
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	7.1	search with cache (only 1: intros; only 1: auto with real).	0.0594589710236	38
Coq.Reals.RIneq.Rplus_opp_l	40	4.0	search with cache (only 1: intros; only 1: ring).	3.26921105385	38
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	5.1	search with cache (only 1: intros; only 1: auto with real).	0.025936126709	8
Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.1.10.2	search with cache (only 1: intros; only 1: subst; only 1: apply f_equal; only 1: reflexivity).	1.08095288277	561
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.0.0.1.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0581178665161	6
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	3.25815701485	907
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0420458316803	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0424220561981	4
Coq.Reals.RIneq.Rmult_0_r	40	4.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: field).	0.0872778892517	26
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0285151004791	2
Coq.Reals.RIneq.Rmult_ne	40	2.2.0.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	1.58477783203	50
Coq.Reals.RIneq.Rmult_1_r	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0967690944672	17
Coq.Reals.RIneq.Rmult_eq_compat_l	40	1.6.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto with real).	0.0721039772034	17
Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.6.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto with real).	0.190413951874	64
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0288438796997	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0211660861969	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	8.4	search with cache (only 1: intros a b; only 1: intuition).	0.925264120102	850
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.3.0	search with cache (only 1: red; only 1: intros; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.0932290554047	21
Coq.Reals.RIneq.Rmult_plus_distr_r	40	10.0	search with cache (only 1: intros; only 1: ring).	22.5895588398	689
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	1.0	search with cache (only 1: intros r b; only 1: eauto with real).	0.934830904007	98
Coq.Reals.RIneq.Ropp_0	40	1	search with cache (only 1: ring).	0.0253739356995	2
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.6.2	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.0670959949493	28
Coq.Reals.RIneq.Ropp_involutive	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0292510986328	2
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.3	search with cache (only 1: intros; only 1: ring).	0.0354039669037	5
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.035817861557	3
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0330891609192	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.1.0	search with cache (only 1: intro; only 1: intros; only 1: ring).	0.0360879898071	4
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0339851379395	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0327949523926	2
Coq.Reals.RIneq.Rminus_0_r	40	3.1	search with cache (only 1: intros; only 1: ring).	0.428704977036	11
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0307199954987	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0360960960388	5
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0338850021362	2
Coq.Reals.RIneq.Rminus_diag_eq	40	8.5.1	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: ring).	30.6221120358	5967
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.0.2	search with cache (only 1: intros; only 1: unfold Rminus; only 1: ring).	0.0816290378571	15
Coq.Reals.RIneq.Rminus_eq_contra	40	8.0	search with cache (only 1: intros; only 1: auto with real).	0.197276115417	58
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.034511089325	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0331239700317	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	2.0	search with cache (only 1: intros; only 1: ring).	0.999685049057	17
Coq.Reals.RIneq.Rinv_1	40	9	search with cache (only 1: field).	0.0400519371033	11
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0427629947662	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.043426990509	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	4.0.0.0.1	search with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: auto with real).	0.0521152019501	10
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.13894200325	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.385238170624	59
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	6	search with cache (only 1: intuition).	0.323045969009	31
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	7	search with cache (only 1: intuition).	0.144478082657	62
Coq.Reals.RIneq.Rplus_le_compat_l	40	2.0.10	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	1.128439188	439
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.0.0.0.3.0.0.0.0.11	search with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	14.8004260063	3762
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.6.0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	5.66077589989	2471
Coq.Reals.RIneq.Rplus_ge_compat_r	40	2.1.0.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0305860042572	9
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0402920246124	14
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.3	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.106993913651	32
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.4	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.136372089386	38
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40	1.0.0.0.0.0.0.1.0.8	search with cache (only 1: intro r; only 1: intros x y; only 1: rewrite Rplus_comm; only 1: intros; only 1: apply Rle_lt_trans with x; only 1: assumption; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: assumption).	20.0663120747	18603
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0	search with cache (only 1: intuition).	0.0272161960602	1
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40	3.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: now rewrite 2!(Rplus_comm r)).	1.51207089424	131
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.3	search with cache (only 1: red; only 1: auto with real).	0.604349851608	57
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0532250404358	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.05797290802	10
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.0.3.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.0670812129974	8
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	3.0	search with cache (only 1: unfold Rge; only 1: intuition).	0.268525123596	73
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0684838294983	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0701270103455	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0331530570984	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0336019992828	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0323040485382	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0322358608246	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0360858440399	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0246319770813	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.5	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.500343084335	139
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.3	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.235606908798	46
Coq.Reals.RIneq.Rmult_lt_compat_r	40	6.1.0	search with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	0.0524868965149	12
Coq.Reals.RIneq.Rmult_gt_compat_r	40	2.0.4	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.586285114288	202
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.0.5	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.164348125458	63
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.0.1.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.108318805695	23
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.4.0.8.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.588615894318	473
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	3.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0673179626465	13
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.042484998703	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	2.4.1.2	search with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	1.16681408882	433
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.7.0.0.0.0	search with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: apply (Rplus_lt_reg_l r2); only 1: auto with real; only 1: auto with real; only 1: ring).	3.35955500603	2217
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.3	search with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.689062833786	228
Coq.Reals.RIneq.Rminus_ge	40	0.0.0.1.2.7.4	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	17.4611799717	10749
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.1.0.0.0.0.1	search with cache (only 1: replace 1 with (0 + 1); only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0544919967651	15
Coq.Reals.RIneq.Rle_0_1	40	3.3	search with cache (only 1: red; only 1: auto with real).	0.0420799255371	8
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.617055892944	175
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.0346548557281	4
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.0.7.0	search with cache (only 1: intro; only 1: rewrite Rplus_comm; only 1: case n; only 1: auto with real; only 1: auto with real).	1.76901912689	424
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	2.3.4	search with cache (only 1: simple induction 1; only 1: auto with real; only 1: auto with arith real).	0.797982931137	513
Coq.Reals.RIneq.INR_not_0	40	3.0.0.0.1.0	search with cache (only 1: intros; only 1: red; only 1: intro; only 1: elim H; only 1: rewrite H0; only 1: trivial).	0.0444030761719	10
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	0.0.1.4.0	search with cache (only 1: intro n; only 1: red; only 1: intros; only 1: apply H; only 1: now apply not_INR in H).	0.651408195496	162
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	2.3.0.0.0.1.1.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	1.03900289536	871
Coq.Reals.RIneq.opp_IZR	40	1.2.0.1.1.1.1.3.4	search with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: intro; only 1: ring).	4.73001694679	3392
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.0.0.0.0.5	search with cache (only 1: intro n; only 1: intros z H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	1.88187599182	612
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	12.3734769821	6906
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.8.1	search with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	1.70427393913	1131
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	12.7	search with cache (only 1: intro H1; only 1: ring).	0.397670030594	287
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.1.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.21965098381	59
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	3.1.2.2.1.2	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto; only 1: auto with real).	2.96817994118	2169
Coq.Reals.RIneq.Rdiv_plus_distr	40	0.0.1.1	search with cache (only 1: intro; only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0435950756073	6
Coq.Reals.RIneq.Rdiv_minus_distr	40	11.0.4	search with cache (only 1: unfold Rdiv; only 1: intros a b c; only 1: ring).	0.891892910004	672
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	0.22	search with cache (only 1: fix even_odd_double 1; only 1: trivial).	1.9111790657	3433
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	4.1.2	search with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: auto with arith).	0.0590109825134	20
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	12.9	search with cache (only 1: intro; only 1: auto with arith).	6.27698802948	9858
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	87	search with cache (only 1: auto with real).	2.41768407822	11218
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1.0.1	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.132974863052	55
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	4.2	search with cache (only 1: symmetry; only 1: ring).	0.0506319999695	13
Coq.Reals.Ranalysis2.quadruple_var	40	12.32.1	search with cache (only 1: intro; only 1: rewrite double_var; only 1: field).	3.1480178833	5498
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4	search with cache (only 1: tauto).	0.0452330112457	107
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.0.11.6	search with cache (only 1: intro A; only 1: unfold included; only 1: intros; only 1: eauto).	0.692842006683	2088
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	3.7.2	search with cache (only 1: unfold not; only 1: unfold intersection_domain; only 1: firstorder).	0.231439113617	481
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	14.6.4.0	search with cache (only 1: unfold included; only 1: unfold neighbourhood; only 1: unfold included; only 1: firstorder using PropExtensionalityFacts.PredExt_imp_PropExt, PropExtensionalityFacts.PredExt_imp_PropFunExt, PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt).	11.7669429779	19493
Coq.Reals.Rtopology.open_set_P2	40	13.3.6	search with cache (only 1: intro; only 1: unfold open_set, complementary, point_adherent; only 1: firstorder).	2.25442099571	5213
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	3.16.3.0	search with cache (only 1: unfold open_set, complementary, point_adherent; only 1: red; only 1: intros del2 H0; only 1: elim H0).	1.73527789116	6511
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	14.3.7	search with cache (only 1: intro; only 1: unfold eq_Dom; only 1: firstorder).	36.4344220161	49069
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40	0.11.0.16.3.1	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: ring_simplify; only 1: reflexivity).	11.5316541195	21181
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.6.0.0.0.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	0.681582927704	450
Coq.Reals.Rseries.Un_growing_shift	40	2.2.4.2	search with cache (only 1: intros; only 1: intro H'; only 1: simpl; only 1: auto with arith).	0.198745012283	188
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	0.0.1.3.0.6.4.22	search with cache (only 1: intros y h; only 1: destruct h; only 1: unfold Boule; only 1: simpl; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	15.3776738644	37454
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.2.0.0.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.0547370910645	9
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	8.0	search with cache (only 1: intros; only 1: reflexivity).	0.0483660697937	19
Coq.Reals.Ranalysis1.continuity_pt_div	40	0.0.1.0.4.0.1.0	search with cache (only 1: intros; only 1: unfold continuity_pt; only 1: unfold continue_in; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	0.604514122009	214
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40	4.3.2.1.4.7.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: intros delta1 H2; only 1: intros; only 1: intro; only 1: apply limit_plus; only 1: apply H; only 1: apply H0).	12.5760400295	7925
Coq.Reals.Ranalysis1.continuity_opp	40	3.0.0.1.6.3	search with cache (only 1: intros; only 1: intro; only 1: unfold continuity_pt, opp_fct; only 1: unfold continue_in; only 1: apply limit_Ropp; only 1: apply H).	0.844685077667	1068
Coq.Reals.Ranalysis1.continuity_minus	40	4.3.0.1.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	4.50872802734	2146
Coq.Reals.Ranalysis1.continuity_mult	40	4.3.0.2.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	5.30735778809	2662
Coq.Reals.Ranalysis1.continuity_const	40	0.0.0.0.0.0.0.0.0.2.3.0	search with cache (only 1: unfold constant, continuity_pt; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	6.18132090569	3548
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.0683288574219	12
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0414600372314	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold fct_cte, derivable_pt_lim; only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0402040481567	8
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0329639911652	5
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0343050956726	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	3.3.0.0	search with cache (only 1: intro; only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	0.0837581157684	23
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	2.13.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.273471832275	342
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	2.12.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	1.05714917183	549
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.2	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.167771100998	33
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.0.1.1.1.0.0.0.2.1.3.0	search with cache (only 1: intros; only 1: pose proof (derivable_derive (- f)%F x (derivable_pt_opp _ _ pr1)) as H0; only 1: elim H0; only 1: elim H0; only 1: clear H0; only 1: intros l2 H0; only 1: intros l1 H; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr1) as H3; only 1: pose proof (proj2_sig pr2) as H4; only 1: unfold derive_pt in H0; only 1: assumption).	7.87481617928	7225
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.0.0.0.0.0.2.0.2.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	0.732093811035	501
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: intros; only 1: elim (H eps H0); only 1: unfold R_dist; only 1: intros; only 1: exists x; only 1: elim (H eps H0); only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with (Un n - Un m); only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	27.4136850834	15348
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40	0.0.0.0.0.0.0.0.0.1.0.0.1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: induction m as [| m Hrecm]; only 1: right; only 1: reflexivity; only 1: elim (Nat.nle_succ_0 _ H0); only 1: cut ((m <= n)%nat \/ m = S n); only 1: inversion H0; only 1: right; only 1: reflexivity; only 1: intro; only 1: apply Rle_trans with (Un n); only 1: apply H; only 1: apply Hrecn; only 1: assumption; only 1: inversion H0; only 1: right; only 1: reflexivity; only 1: left; only 1: assumption).	39.5171029568	26685
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	5.0.0.0.3	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.143238782883	121
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.0.1.4.6.0.5.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite Rmult_0_r; only 1: rewrite cos_PI; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	10.6911158562	3875
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.2.5.6	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_cos; only 1: rewrite neg_sin; only 1: rewrite cos_sin; only 1: replace (PI / 2 + PI / 4) with (- (PI / 4) + PI) by field; only 1: rewrite neg_sin, sin_neg; only 1: ring).	1.67439198494	549
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.0.18	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.87033700943	531
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.0292949676514	3
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.555913925171	339
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.2	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0189890861511	7
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.2	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0193271636963	7
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.2	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0179200172424	7
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	2.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.450931072235	122
Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.434450864792	117
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	4.6	search with cache (only 1: intros f w; only 1: intuition congruence).	0.0985219478607	77
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.13.0.13.12.1.0	search with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: split; only 1: intro; only 1: exact (f x x H H); only 1: intro; only 1: exact (f x x H H)).	2.64977097511	9423
Coq.Reals.ConstructiveReals.CReq_sym	40	0.1.0.7	search with cache (only 1: simple induction 1; only 1: split; only 1: assumption; only 1: exact H0).	0.410676002502	282
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: split; only 1: apply CRle_refl; only 1: apply CRle_refl; only 1: split; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: split; only 1: destruct H, H0; only 1: destruct (CRltLinear R), p; only 1: intro abs; only 1: destruct (s _ y _ abs); only 1: contradiction; only 1: contradiction; only 1: destruct H, H0; only 1: destruct (CRltLinear R), p; only 1: intro abs; only 1: destruct (s _ y _ abs); only 1: contradiction; only 1: contradiction).	30.260463953	33200
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	2.4.2.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.597661018372	339
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	1.5.0.0.1.3.1.0.0.12	search with cache (only 1: intros; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: assumption; only 1: apply Nat.le_refl).	4.09482812881	7135
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	26.5	search with cache (only 1: destruct x as [xn limx]; only 1: assumption).	0.686422109604	1827
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	11.678757906	262
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	17.5455029011	290
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	16.6459650993	223
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.2.0.1	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	6.42506313324	82
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0259881019592	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	3.4	search with cache (only 1: intro; only 1: ring).	6.00207996368	176
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.029069185257	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	11	search with cache (only 1: assumption).	0.881586074829	320
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.4	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	0.106158971786	44
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0276141166687	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	27.0	search with cache (only 1: intros; only 1: ring_Rsqr).	2.35937595367	4074
Coq.Reals.R_sqr.Rsqr_plus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0420770645142	2
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0422210693359	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.2	search with cache (only 1: intros p q; only 1: ring_Rsqr).	0.0398640632629	13
Coq.Reals.R_sqr.Rsqr_1	40	12.22	search with cache (only 1: unfold IZR at 1; only 1: apply Rmult_1_l).	22.9347381592	27405
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	16	search with cache (only 1: auto with real).	4.06292700768	3290
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0561909675598	20
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0354909896851	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	8.0.2.2	search with cache (only 1: intro X; only 1: unfold Rsqr; only 1: intros; only 1: auto with real).	2.63801693916	2597
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: auto with real).	0.0889019966125	6
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	1.1.0.0.2.0.0	search with cache (only 1: intro; only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.522404909134	219
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	5.1.0	search with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intro y_encad1; only 1: intuition).	0.108994960785	18
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.020133972168	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0218288898468	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0225670337677	4
Coq.Reals.Rminmax.Rmin_r	40	0.1.0.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec as [H'| H']; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0236401557922	6
Coq.Reals.Rminmax.plus_max_distr_l	40	0.0.0.0.4.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply max_unicity; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: right; only 1: intuition).	5.64283108711	621
Coq.Reals.Rminmax.plus_max_distr_r	40	0.0.0.0.4.2.7	search with cache (only 1: symmetry; only 1: apply max_unicity; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: right; only 1: intuition).	15.4532160759	1471
Coq.Reals.Rminmax.plus_min_distr_l	40	0.0.1.4.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0530219078064	13
Coq.Reals.Rminmax.plus_min_distr_r	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0231599807739	8
Coq.Reals.Rminmax.opp_max_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0221130847931	4
Coq.Reals.Rminmax.opp_min_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0224938392639	4
Coq.Reals.Rminmax.minus_max_distr_l	40	1.0.0.3.0.1.0	search with cache (only 1: intros; only 1: apply max_min_antimonotone; only 1: do 3 red; only 1: intros Compat Hl Hr; only 1: unfold Rminus; only 1: apply Rplus_le_compat_l; only 1: auto with real).	1.67233681679	604
Coq.Reals.Rminmax.minus_max_distr_r	40
Coq.Reals.Rminmax.minus_min_distr_l	40	1.0.0.2.0.2.1	search with cache (only 1: intros; only 1: apply min_max_antimonotone; only 1: do 3 red; only 1: intros Compat Hl Hr; only 1: unfold Rminus; only 1: apply Rplus_le_compat_l; only 1: auto with real).	0.765949010849	995
Coq.Reals.Rminmax.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.0.39.15.3.0	search with cache (only 1: intro; only 1: intro; only 1: unfold Rgt in H; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	3.88632798195	12129
Coq.Reals.Rlimit.eps2	40	3.11	search with cache (only 1: intros; only 1: field).	0.131609916687	97
Coq.Reals.Rlimit.eps4	40	6.5	search with cache (only 1: intro esp; only 1: field).	0.156207799911	74
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0287411212921	3
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0294659137726	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.2.0.0.0.0.0	search with cache (only 1: intros x; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [H| H]; only 1: intros; only 1: apply Rle_refl; only 1: intro; only 1: apply Rsqrt_positivity).	0.051255941391	9
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0521779060364	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0406332015991	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.25.0.1	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	11.9190731049	11729
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.2.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0325629711151	5
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.5.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.262261152267	43
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.1.1.0.1.4.1	search with cache (only 1: intros x H1; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	4.83361983299	1772
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.5.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: reflexivity).	1.78650903702	347
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0808980464935	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0466010570526	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	1.5.10	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.540764808655	214
Coq.Reals.Rtrigo1.PI_4	40	0.15.9.0	search with cache (only 1: replace 4 with (2 ^ 2) by field; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	3.47465801239	1613
Coq.Reals.Rtrigo1.PI_neq0	40	0.1.0.13	search with cache (only 1: apply Rgt_not_eq; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	1.46578001976	1532
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40	4.5.1.0.6.1.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: unfold Rsqr; only 1: rewrite cos_plus; only 1: unfold Rminus; only 1: ring).	36.8726689816	17562
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite Rmult_assoc; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.103056907654	10
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40	0.5.13	search with cache (only 1: intro H1; only 1: rewrite <- cos_sym; only 1: reflexivity).	4.22153496742	2621
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40	0.12.0.1.7	search with cache (only 1: rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	14.8409440517	8596
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.2.1	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.196463108063	42
Coq.Reals.Rtrigo1.sin_PI_x	40	0.3.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_neg; only 1: ring).	0.0927381515503	12
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.12.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	10.0784640312	3791
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.13.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	4.3481528759	1577
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.3.3	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.241794109344	43
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.3.1	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.403495073318	68
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.10	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0768580436707	63
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.126353025436	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	11.4439809322	2776
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0	search with cache (only 1: reflexivity).	0.0227661132812	1
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	8.0	search with cache (only 1: intros; only 1: assumption).	0.0287680625916	10
Coq.Reals.PartSum.scal_sum	40	14.0.11.1.1.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite HrecN; only 1: rewrite tech5; only 1: ring).	9.40471220016	14416
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	0.0.1.0.1.2.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.137720108032	49
Coq.Reals.PartSum.sum_eq	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: do 2 rewrite tech5; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	2.42997789383	1672
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.122438192368	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40	0.0.1.0.3.12.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite Rmult_plus_distr_l; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: reflexivity).	34.0504930019	21826
Coq.Reals.PartSum.sum_growing	40	1.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	2.27264499664	724
Coq.Reals.PartSum.Rabs_triang_gen	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.542358875275	258
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.4	search with cache (only 1: intros [| n| n]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0326180458069	8
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.1.4.0.0.0.0.0.0.0.0.1.5.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	14.0313980579	9868
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.3	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0372569561005	17
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.6.0.6.2	search with cache (only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.772822856903	1016
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	4.4.1.0	search with cache (only 1: intros; only 1: split; only 1: apply H; only 1: apply H).	2.11955213547	984
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	0.0.6.12.0.1	search with cache (only 1: intros x y lpo; only 1: intros; only 1: destruct H; only 1: apply (CReal_lt_le_trans _ x); only 1: assumption; only 1: assumption).	35.192278862	7602
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	4.0.8.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: apply H; only 1: assumption).	2.62787413597	2124
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	4.0.7.0.3.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	3.42193412781	2849
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	0.946258068085	467
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	2.50	search with cache (only 1: pose proof (CRealLe_not_lt x y) as [_ H2]; only 1: assumption).	0.320703983307	1443
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	1.1.0.2.0.0.0.14	search with cache (only 1: intros; only 1: rewrite <- (Nat.mul_1_l n); only 1: apply Nat.mul_le_mono_nonneg; only 1: auto; only 1: auto; only 1: apply Nat.le_0_l; only 1: rewrite Nat.mul_1_l; only 1: apply Nat.le_refl).	1.00987100601	1062
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.410264015198	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	4.09308314323	660
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).	6.39680409431	1746
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	8.11	search with cache (only 1: simpl; only 1: apply CReal_plus_0_l).	28.3151431084	1269
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	search with cache (only 1: reflexivity).	0.0174629688263	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	2.3.9.33	search with cache (only 1: unfold SFL, sin; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	1.57384300232	3018
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0359771251678	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	3.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	1.0267329216	140
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.0.2.1.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: repeat rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	5.16331315041	6346
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.3.0.0	search with cache (only 1: red; only 1: intro H9; only 1: apply pow_nonzero; only 1: discrR).	0.0372428894043	12
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	0.085590839386	19
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.height_non_negative	40
Coq.FSets.FMapFullAVL.avl_node	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0223472118378	2
Coq.FSets.FMapFullAVL.height_0	40
Coq.FSets.FMapFullAVL.empty_avl	40	3	search with cache (only 1: auto).	0.0147819519043	4
Coq.FSets.FMapFullAVL.create_avl	40	0.0.0.0.10.0.1	search with cache (only 1: intros m1 m2; only 1: intros; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	10.7921009064	3584
Coq.FSets.FMapFullAVL.create_height	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0201940536499	2
Coq.FSets.FMapFullAVL.bal_avl	40
Coq.FSets.FMapFullAVL.bal_height_1	40
Coq.FSets.FMapFullAVL.bal_height_2	40
Coq.FSets.FMapFullAVL.add_avl_1	40
Coq.FSets.FMapFullAVL.add_avl	40
Coq.FSets.FMapFullAVL.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.remove_min_avl	40
Coq.FSets.FMapFullAVL.merge_avl_1	40
Coq.FSets.FMapFullAVL.merge_avl	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: intros m1 m2; only 1: functional induction (merge m1 m2); only 1: intros; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	7.35987997055	2651
Coq.FSets.FMapFullAVL.remove_avl_1	40
Coq.FSets.FMapFullAVL.remove_avl	40
Coq.FSets.FMapFullAVL.join_avl_1	40
Coq.FSets.FMapFullAVL.join_avl	40
Coq.FSets.FMapFullAVL.concat_avl	40
Coq.FSets.FMapFullAVL.split_avl	40
Coq.FSets.FMapFullAVL.map_height	40
Coq.FSets.FMapFullAVL.map_avl	40
Coq.FSets.FMapFullAVL.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0269379615784	5
Coq.FSets.FMapFullAVL.mapi_avl	40
Coq.FSets.FMapFullAVL.map_option_avl	40
Coq.FSets.FMapFullAVL.map2_opt_avl	40
Coq.FSets.FMapFullAVL.map2_avl	40
Coq.FSets.FMapFullAVL.MapsTo_1	40
Coq.FSets.FMapFullAVL.mem_1	40
Coq.FSets.FMapFullAVL.mem_2	40
Coq.FSets.FMapFullAVL.empty_1	40	2.4.29	search with cache (only 1: intros m x; only 1: intuition; only 1: inversion_clear H).	0.600478887558	961
Coq.FSets.FMapFullAVL.is_empty_1	40
Coq.FSets.FMapFullAVL.is_empty_2	40
Coq.FSets.FMapFullAVL.add_1	40
Coq.FSets.FMapFullAVL.add_2	40
Coq.FSets.FMapFullAVL.add_3	40
Coq.FSets.FMapFullAVL.remove_1	40
Coq.FSets.FMapFullAVL.remove_2	40
Coq.FSets.FMapFullAVL.remove_3	40
Coq.FSets.FMapFullAVL.find_1	40
Coq.FSets.FMapFullAVL.find_2	40
Coq.FSets.FMapFullAVL.fold_1	40
Coq.FSets.FMapFullAVL.elements_1	40
Coq.FSets.FMapFullAVL.elements_2	40	11.0.0.3	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.973479032516	1674
Coq.FSets.FMapFullAVL.elements_3	40
Coq.FSets.FMapFullAVL.elements_3w	40
Coq.FSets.FMapFullAVL.cardinal_1	40
Coq.FSets.FMapFullAVL.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.equal_1	40
Coq.FSets.FMapFullAVL.equal_2	40	0.0.0.0.1.2.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	0.983982086182	507
Coq.FSets.FMapFullAVL.map_1	40
Coq.FSets.FMapFullAVL.map_2	40
Coq.FSets.FMapFullAVL.mapi_1	40
Coq.FSets.FMapFullAVL.mapi_2	40
Coq.FSets.FMapFullAVL.map2_1	40
Coq.FSets.FMapFullAVL.map2_2	40
Coq.FSets.FMapFullAVL.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.cons_Cmp	40	1.3.1.3.1.3.23.39	search with cache (only 1: intros m; only 1: induction m; only 1: intuition; only 1: LO.cmp_solve; only 1: intuition; only 1: LO.cmp_solve; only 1: intuition; only 1: LO.cmp_solve).	3.55461287498	14358
Coq.FSets.FMapFullAVL.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.compare_Cmp	40
Coq.FSets.FMapFullAVL.compare	40
Coq.FSets.FMapFullAVL.eq_seq	40	6.2	search with cache (only 1: red; only 1: intuition).	0.02237200737	16
Coq.FSets.FMapFullAVL.lt_slt	40	1	search with cache (only 1: intuition).	0.0329711437225	2
Coq.FSets.FMapFullAVL.eq_1	40
Coq.FSets.FMapFullAVL.eq_2	40
Coq.FSets.FMapFullAVL.eq_refl	40
Coq.FSets.FMapFullAVL.eq_sym	40
Coq.FSets.FMapFullAVL.eq_trans	40
Coq.FSets.FMapFullAVL.lt_trans	40
Coq.FSets.FMapFullAVL.lt_not_eq	40
Coq.FSets.FMapAVL.MapsTo_In	40
Coq.FSets.FMapAVL.In_MapsTo	40
Coq.FSets.FMapAVL.In_alt	40	0.0.0.0.0.0.0.0.2.0.0.0.3.5.2.20.21	search with cache (only 1: compute; only 1: split; only 1: induction 1; only 1: generalize H; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	22.6025371552	70415
Coq.FSets.FMapAVL.MapsTo_1	40	0.0.5.5.11.6.11.0.2	search with cache (only 1: intros m x e f; only 1: induction m; only 1: inversion_clear 2; only 1: intuition; only 1: inversion_clear H0; only 1: constructor; only 1: L.MX.order; only 1: auto; only 1: auto).	19.8796129227	31410
Coq.FSets.FMapAVL.In_1	40	0.0.0.0.0.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.4187541008	6
Coq.FSets.FMapAVL.In_node_iff	40	5	search with cache (only 1: intuition_in).	0.163060903549	15
Coq.FSets.FMapAVL.lt_leaf	40	6.8.8.23	search with cache (only 1: red; only 1: intuition; only 1: generalize H; only 1: intuition_in).	1.68516993523	3680
Coq.FSets.FMapAVL.gt_leaf	40	0.0.24	search with cache (only 1: red; only 1: intros; only 1: intuition_in).	0.486334085464	856
Coq.FSets.FMapAVL.lt_tree_node	40	0.5.4.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	1.01492714882	110
Coq.FSets.FMapAVL.gt_tree_node	40	0.6.5.1	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	10.0561349392	221
Coq.FSets.FMapAVL.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0293018817902	2
Coq.FSets.FMapAVL.lt_right	40	0	search with cache (only 1: intuition_in).	0.0232858657837	1
Coq.FSets.FMapAVL.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.029825925827	2
Coq.FSets.FMapAVL.gt_right	40	0	search with cache (only 1: intuition_in).	0.0243220329285	1
Coq.FSets.FMapAVL.lt_tree_not_in	40
Coq.FSets.FMapAVL.lt_tree_trans	40	0.0.0.0.0	search with cache (only 1: intros m x y; only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0378170013428	5
Coq.FSets.FMapAVL.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0276641845703	3
Coq.FSets.FMapAVL.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0359690189362	1
Coq.FSets.FMapAVL.empty_bst	40	14	search with cache (only 1: intuition).	0.0379569530487	75
Coq.FSets.FMapAVL.empty_1	40	15.41	search with cache (only 1: intro; only 1: inversion_clear 1).	1.02638697624	3704
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40	7.0.0.0.13.0.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: simpl; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: intro H; only 1: discriminate).	3.71334385872	3433
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40	1.0.1.2.0.0.0	search with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.254467964172	90
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.find_iff	40
Coq.FSets.FMapAVL.find_in	40	2.2.2.7.0.0	search with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	7.55282521248	1804
Coq.FSets.FMapAVL.in_find	40
Coq.FSets.FMapAVL.find_in_iff	40	0.0.0.4.0.0.0.0.0.0.4.1	search with cache (only 1: split; only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	5.32814383507	2595
Coq.FSets.FMapAVL.not_find_iff	40
Coq.FSets.FMapAVL.find_find	40
Coq.FSets.FMapAVL.find_mapsto_equiv	40
Coq.FSets.FMapAVL.find_in_equiv	40
Coq.FSets.FMapAVL.create_bst	40	2.2.2.2.9.1	search with cache (only 1: intros; only 1: constructor 2; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	14.8189020157	7738
Coq.FSets.FMapAVL.create_in	40	0.1	search with cache (only 1: unfold create; only 1: intuition_in).	0.293002843857	20
Coq.FSets.FMapAVL.bal_bst	40
Coq.FSets.FMapAVL.bal_in	40
Coq.FSets.FMapAVL.bal_mapsto	40
Coq.FSets.FMapAVL.bal_find	40
Coq.FSets.FMapAVL.add_in	40
Coq.FSets.FMapAVL.add_bst	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.add_find	40
Coq.FSets.FMapAVL.remove_min_in	40
Coq.FSets.FMapAVL.remove_min_mapsto	40
Coq.FSets.FMapAVL.remove_min_bst	40
Coq.FSets.FMapAVL.remove_min_gt_tree	40
Coq.FSets.FMapAVL.remove_min_find	40
Coq.FSets.FMapAVL.merge_in	40
Coq.FSets.FMapAVL.merge_mapsto	40
Coq.FSets.FMapAVL.merge_bst	40
Coq.FSets.FMapAVL.remove_in	40
Coq.FSets.FMapAVL.remove_bst	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.join_in	40
Coq.FSets.FMapAVL.join_bst	40
Coq.FSets.FMapAVL.join_find	40
Coq.FSets.FMapAVL.split_in_1	40
Coq.FSets.FMapAVL.split_in_2	40
Coq.FSets.FMapAVL.split_in_3	40
Coq.FSets.FMapAVL.split_bst	40
Coq.FSets.FMapAVL.split_lt_tree	40
Coq.FSets.FMapAVL.split_gt_tree	40
Coq.FSets.FMapAVL.split_find	40
Coq.FSets.FMapAVL.concat_in	40
Coq.FSets.FMapAVL.concat_bst	40
Coq.FSets.FMapAVL.concat_find	40
Coq.FSets.FMapAVL.elements_aux_mapsto	40
Coq.FSets.FMapAVL.elements_mapsto	40
Coq.FSets.FMapAVL.elements_in	40
Coq.FSets.FMapAVL.elements_aux_sort	40
Coq.FSets.FMapAVL.elements_sort	40
Coq.FSets.FMapAVL.elements_nodup	40
Coq.FSets.FMapAVL.elements_aux_cardinal	40
Coq.FSets.FMapAVL.elements_cardinal	40
Coq.FSets.FMapAVL.elements_app	40
Coq.FSets.FMapAVL.elements_node	40
Coq.FSets.FMapAVL.fold_equiv_aux	40	3.9.0.0.0.0.0.0	search with cache (only 1: induction s as [| l Hl x e r Hr h]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite Hl; only 1: simpl; only 1: auto with *).	20.9594569206	11095
Coq.FSets.FMapAVL.fold_equiv	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.flatten_e_elements	40	0.0.0.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0614700317383	5
Coq.FSets.FMapAVL.cons_1	40
Coq.FSets.FMapAVL.cons_IfEq	40
Coq.FSets.FMapAVL.equal_end_IfEq	40
Coq.FSets.FMapAVL.equal_more_IfEq	40	3.1.0.1.3.4.7	search with cache (only 1: intros x e0 y0 H H6; only 1: simpl flatten_e; only 1: unfold IfEq; only 1: simpl; only 1: intros; only 1: rewrite H0; only 1: auto).	25.3779709339	9419
Coq.FSets.FMapAVL.equal_cont_IfEq	40
Coq.FSets.FMapAVL.equal_IfEq	40
Coq.FSets.FMapAVL.Equivb_elements	40
Coq.FSets.FMapAVL.equal_Equivb	40
Coq.FSets.FMapAVL.map_1	40	1.1.0.4.0.26	search with cache (only 1: simple induction m; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: solve [ inv MapsTo; auto ]).	18.4712831974	14844
Coq.FSets.FMapAVL.map_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0874018669128	8
Coq.FSets.FMapAVL.map_bst	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0911920070648	8
Coq.FSets.FMapAVL.mapi_bst	40
Coq.FSets.FMapAVL.map_option_2	40
Coq.FSets.FMapAVL.map_option_bst	40
Coq.FSets.FMapAVL.map_option_find	40
Coq.FSets.FMapAVL.map2_opt_2	40
Coq.FSets.FMapAVL.map2_opt_bst	40
Coq.FSets.FMapAVL.map2_opt_1	40
Coq.FSets.FMapAVL.map2_bst	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40
Coq.FSets.FMapAVL.empty_1	40	18.32	search with cache (only 1: intros z Hz; only 1: inversion_clear 1).	0.724241018295	1854
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.elements_1	40
Coq.FSets.FMapAVL.elements_2	40	2.10.1.1	search with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros; only 1: rewrite <- elements_mapsto; only 1: auto).	0.761263847351	692
Coq.FSets.FMapAVL.elements_3	40	4.0.0.1.0.2.0.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion_clear H).	0.75634598732	518
Coq.FSets.FMapAVL.elements_3w	40	0.2.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0508320331573	19
Coq.FSets.FMapAVL.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0215871334076	1
Coq.FSets.FMapAVL.Equivb_Equivb	40
Coq.FSets.FMapAVL.equal_1	40
Coq.FSets.FMapAVL.equal_2	40	0.0.0.0.1.2.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto using map_option_bst; only 1: auto).	2.70051407814	543
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.cons_Cmp	40
Coq.FSets.FMapAVL.compare_end_Cmp	40	1.0.0.0.0.18.4.0	search with cache (only 1: destruct e2; only 1: simpl; only 1: trivial; only 1: red; only 1: red; only 1: red; only 1: red; only 1: auto).	5.42184305191	18585
Coq.FSets.FMapAVL.compare_more_Cmp	40
Coq.FSets.FMapAVL.compare_cont_Cmp	40
Coq.FSets.FMapAVL.compare_Cmp	40
Coq.FSets.FMapAVL.compare	40
Coq.FSets.FMapAVL.eq_seq	40	6.1	search with cache (only 1: intros; only 1: P.intuition_in).	0.0305600166321	9
Coq.FSets.FMapAVL.lt_slt	40	1	search with cache (only 1: intuition).	0.0290410518646	2
Coq.FSets.FMapAVL.eq_1	40
Coq.FSets.FMapAVL.eq_2	40
Coq.FSets.FMapAVL.eq_refl	40
Coq.FSets.FMapAVL.eq_sym	40
Coq.FSets.FMapAVL.eq_trans	40
Coq.FSets.FMapAVL.lt_trans	40
Coq.FSets.FMapAVL.lt_not_eq	40
Coq.FSets.FSetFacts.In_eq_iff	40
Coq.FSets.FSetFacts.mem_iff	40	4	search with cache (only 1: intuition).	0.0448088645935	24
Coq.FSets.FSetFacts.not_mem_iff	40	6.30	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	1.79908490181	3954
Coq.FSets.FSetFacts.equal_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.198574066162	68
Coq.FSets.FSetFacts.subset_iff	40	5	search with cache (only 1: intuition).	0.177513837814	58
Coq.FSets.FSetFacts.empty_iff	40
Coq.FSets.FSetFacts.is_empty_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.108692169189	57
Coq.FSets.FSetFacts.singleton_iff	40	2	search with cache (only 1: intuition).	0.0279910564423	15
Coq.FSets.FSetFacts.add_iff	40
Coq.FSets.FSetFacts.add_neq_iff	40
Coq.FSets.FSetFacts.remove_iff	40
Coq.FSets.FSetFacts.remove_neq_iff	40	0.0.17	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.84708404541	2131
Coq.FSets.FSetFacts.union_iff	40	5	search with cache (only 1: intuition).	0.0873939990997	76
Coq.FSets.FSetFacts.inter_iff	40
Coq.FSets.FSetFacts.diff_iff	40
Coq.FSets.FSetFacts.filter_iff	40
Coq.FSets.FSetFacts.for_all_iff	40	2	search with cache (only 1: intuition).	0.0428049564362	14
Coq.FSets.FSetFacts.exists_iff	40	4	search with cache (only 1: intuition).	0.0440099239349	20
Coq.FSets.FSetFacts.elements_iff	40	1	search with cache (only 1: intuition).	0.0358338356018	17
Coq.FSets.FSetFacts.mem_b	40
Coq.FSets.FSetFacts.empty_b	40
Coq.FSets.FSetFacts.add_b	40
Coq.FSets.FSetFacts.add_neq_b	40	0.0.0.0.0.0.1.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.110933065414	9
Coq.FSets.FSetFacts.remove_b	40
Coq.FSets.FSetFacts.remove_neq_b	40	0.0.0.0.0.0.1.0	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.106403827667	9
Coq.FSets.FSetFacts.singleton_b	40
Coq.FSets.FSetFacts.union_b	40
Coq.FSets.FSetFacts.inter_b	40
Coq.FSets.FSetFacts.diff_b	40
Coq.FSets.FSetFacts.elements_b	40
Coq.FSets.FSetFacts.filter_b	40
Coq.FSets.FSetFacts.for_all_b	40
Coq.FSets.FSetFacts.exists_b	40
Coq.FSets.FSetFacts.E_ST	40	7.1.15.3.3.9	search with cache (only 1: split; only 1: intuition; only 1: intuition; only 1: intro H; only 1: intros y z H1 H2; only 1: eauto).	0.946772098541	3800
Coq.FSets.FSetFacts.Equal_ST	40
Coq.FSets.FSetFacts.In_m	40
Coq.FSets.FSetFacts.is_empty_m	40
Coq.FSets.FSetFacts.Empty_m	40
Coq.FSets.FSetFacts.mem_m	40
Coq.FSets.FSetFacts.singleton_m	40
Coq.FSets.FSetFacts.add_m	40
Coq.FSets.FSetFacts.remove_m	40
Coq.FSets.FSetFacts.union_m	40
Coq.FSets.FSetFacts.inter_m	40
Coq.FSets.FSetFacts.diff_m	40
Coq.FSets.FSetFacts.Subset_m	40
Coq.FSets.FSetFacts.subset_m	40
Coq.FSets.FSetFacts.equal_m	40
Coq.FSets.FSetFacts.Subset_refl	40	1.2.3	search with cache (only 1: unfold Equal, Subset; only 1: intros s s' H; only 1: auto).	0.0188698768616	9
Coq.FSets.FSetFacts.Subset_trans	40	1.1.14	search with cache (only 1: intros EQ; only 1: repeat red; only 1: auto).	0.139717102051	243
Coq.FSets.FSetFacts.In_s_m	40	0.0.0.8	search with cache (only 1: repeat red; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: auto).	1.42238903046	317
Coq.FSets.FSetFacts.Empty_s_m_Proper	40	0.3.12.1	search with cache (only 1: red; only 1: unfold Empty; only 1: intuition; only 1: eauto with set).	2.944024086	3002
Coq.FSets.FSetFacts.add_s_m_Proper	40	0.0.0.0.0	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.0736999511719	5
Coq.FSets.FSetFacts.remove_s_m_Proper	40	2.0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0599529743195	7
Coq.FSets.FSetFacts.union_s_m_Proper	40	2.0.2.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.146059036255	16
Coq.FSets.FSetFacts.inter_s_m_Proper	40	0.0.0.0.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.0508601665497	6
Coq.FSets.FSetFacts.diff_s_m_Proper	40	0.0.0.0.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.0800240039825	6
Coq.FSets.FSetFacts.filter_equal	40
Coq.FSets.FSetFacts.filter_ext	40
Coq.FSets.FSetFacts.filter_subset	40	8.7	search with cache (only 1: intros x y H s s' H0 a; only 1: eauto with set).	2.25579285622	1446
Coq.FSets.FSetPositive.In_1	40	1.1.19.4.0	search with cache (only 1: intros; only 1: red; only 1: inversion H; only 1: subst y; only 1: auto with arith).	3.03734302521	2923
Coq.FSets.FSetPositive.eq_refl	40	0.0.0.2.1.3	search with cache (only 1: intros; only 1: intros EQ; only 1: compute; only 1: split; only 1: auto; only 1: auto).	0.108116865158	60
Coq.FSets.FSetPositive.eq_sym	40	13.5	search with cache (only 1: intros; only 1: now subst).	1.4634001255	1974
Coq.FSets.FSetPositive.eq_trans	40
Coq.FSets.FSetPositive.mem_1	40	5	search with cache (only 1: now inversion x).	0.077831029892	6
Coq.FSets.FSetPositive.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0199348926544	2
Coq.FSets.FSetPositive.mem_Leaf	40	5.1	search with cache (only 1: intros; only 1: now inversion x).	0.0223081111908	8
Coq.FSets.FSetPositive.empty_1	40	5.0.0	search with cache (only 1: intros EQ; only 1: unfold In; only 1: discriminate).	0.0219609737396	8
Coq.FSets.FSetPositive.mem_node	40
Coq.FSets.FSetPositive.is_empty_spec	40
Coq.FSets.FSetPositive.is_empty_1	40
Coq.FSets.FSetPositive.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.297504901886	53
Coq.FSets.FSetPositive.subset_Leaf_s	40	10.3.5	search with cache (only 1: intro; only 1: intro; only 1: discriminate).	0.422936916351	649
Coq.FSets.FSetPositive.subset_spec	40
Coq.FSets.FSetPositive.subset_1	40
Coq.FSets.FSetPositive.subset_2	40
Coq.FSets.FSetPositive.equal_subset	40
Coq.FSets.FSetPositive.equal_spec	40
Coq.FSets.FSetPositive.equal_1	40	0.0.0.0.0.3	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.512310028076	187
Coq.FSets.FSetPositive.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0950729846954	20
Coq.FSets.FSetPositive.eq_dec	40
Coq.FSets.FSetPositive.lex_Opp	40	0.0.0.0.5.20.10.1	search with cache (only 1: intros x l o r; only 1: intro H; only 1: subst; only 1: destruct o; only 1: auto; only 1: auto; only 1: intros H; only 1: auto).	29.041713953	105348
Coq.FSets.FSetPositive.compare_bool_inv	40
Coq.FSets.FSetPositive.compare_inv	40
Coq.FSets.FSetPositive.lex_Eq	40
Coq.FSets.FSetPositive.compare_bool_Eq	40
Coq.FSets.FSetPositive.compare_equal	40
Coq.FSets.FSetPositive.compare_gt	40
Coq.FSets.FSetPositive.compare_eq	40
Coq.FSets.FSetPositive.compare	40
Coq.FSets.FSetPositive.ct_cxe	40
Coq.FSets.FSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0244710445404	4
Coq.FSets.FSetPositive.ct_lxl	40	0.4.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.071252822876	8
Coq.FSets.FSetPositive.ct_gxg	40	5.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0712311267853	9
Coq.FSets.FSetPositive.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0244369506836	4
Coq.FSets.FSetPositive.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0235469341278	4
Coq.FSets.FSetPositive.ct_lex	40
Coq.FSets.FSetPositive.ct_compare_bool	40
Coq.FSets.FSetPositive.compare_x_Leaf	40	0.0.0.0.0.0.5	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: tauto; only 1: unfold compare_fun, equal; only 1: case is_empty; only 1: intuition discriminate; only 1: intuition discriminate).	0.218378067017	186
Coq.FSets.FSetPositive.compare_empty_x	40
Coq.FSets.FSetPositive.compare_x_empty	40
Coq.FSets.FSetPositive.ct_compare_fun	40
Coq.FSets.FSetPositive.lt_trans	40
Coq.FSets.FSetPositive.lt_not_eq	40
Coq.FSets.FSetPositive.add_spec	40
Coq.FSets.FSetPositive.add_1	40
Coq.FSets.FSetPositive.add_2	40	4.3.0.1	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: unfold In; only 1: intuition congruence).	0.343966007233	246
Coq.FSets.FSetPositive.add_3	40
Coq.FSets.FSetPositive.remove_spec	40
Coq.FSets.FSetPositive.remove_1	40
Coq.FSets.FSetPositive.remove_2	40	1.1.1	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0634479522705	28
Coq.FSets.FSetPositive.remove_3	40	1.0.28	search with cache (only 1: intros s i Hi; only 1: rewrite remove_spec; only 1: tauto).	11.7775988579	15113
Coq.FSets.FSetPositive.singleton_1	40
Coq.FSets.FSetPositive.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0407919883728	6
Coq.FSets.FSetPositive.union_spec	40
Coq.FSets.FSetPositive.union_1	40
Coq.FSets.FSetPositive.union_2	40
Coq.FSets.FSetPositive.union_3	40	0.6.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.402052879333	197
Coq.FSets.FSetPositive.inter_spec	40
Coq.FSets.FSetPositive.inter_1	40
Coq.FSets.FSetPositive.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0303950309753	3
Coq.FSets.FSetPositive.inter_3	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.345608949661	171
Coq.FSets.FSetPositive.diff_spec	40
Coq.FSets.FSetPositive.diff_1	40
Coq.FSets.FSetPositive.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.212651968002	118
Coq.FSets.FSetPositive.diff_3	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.370824813843	145
Coq.FSets.FSetPositive.fold_1	40
Coq.FSets.FSetPositive.cardinal_1	40
Coq.FSets.FSetPositive.xfilter_spec	40
Coq.FSets.FSetPositive.filter_1	40
Coq.FSets.FSetPositive.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0362701416016	4
Coq.FSets.FSetPositive.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.042533159256	4
Coq.FSets.FSetPositive.xforall_spec	40
Coq.FSets.FSetPositive.for_all_1	40
Coq.FSets.FSetPositive.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0346930027008	4
Coq.FSets.FSetPositive.xexists_spec	40
Coq.FSets.FSetPositive.exists_1	40
Coq.FSets.FSetPositive.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0360150337219	4
Coq.FSets.FSetPositive.partition_filter	40
Coq.FSets.FSetPositive.partition_1	40
Coq.FSets.FSetPositive.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0258059501648	3
Coq.FSets.FSetPositive.xelements_spec	40
Coq.FSets.FSetPositive.elements_1	40
Coq.FSets.FSetPositive.elements_2	40
Coq.FSets.FSetPositive.lt_rev_append	40
Coq.FSets.FSetPositive.elements_3	40
Coq.FSets.FSetPositive.elements_3w	40
Coq.FSets.FSetPositive.choose_1	40
Coq.FSets.FSetPositive.choose_2	40
Coq.FSets.FSetPositive.choose_empty	40
Coq.FSets.FSetPositive.choose_3'	40
Coq.FSets.FSetPositive.choose_3	40
Coq.FSets.FSetPositive.min_elt_1	40
Coq.FSets.FSetPositive.min_elt_3	40
Coq.FSets.FSetPositive.min_elt_2	40
Coq.FSets.FSetPositive.max_elt_1	40
Coq.FSets.FSetPositive.max_elt_3	40
Coq.FSets.FSetPositive.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0262331962585	9
Coq.FSets.FMapPositive.gempty	40
Coq.FSets.FMapPositive.gss	40
Coq.FSets.FMapPositive.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0272860527039	7
Coq.FSets.FMapPositive.gso	40
Coq.FSets.FMapPositive.rleaf	40	1.0.2.2.1	search with cache (only 1: induction i; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	0.189970016479	88
Coq.FSets.FMapPositive.grs	40
Coq.FSets.FMapPositive.gro	40
Coq.FSets.FMapPositive.xelements_correct	40
Coq.FSets.FMapPositive.elements_correct	40
Coq.FSets.FMapPositive.xfind_left	40
Coq.FSets.FMapPositive.xelements_ii	40
Coq.FSets.FMapPositive.xelements_io	40
Coq.FSets.FMapPositive.xelements_oo	40
Coq.FSets.FMapPositive.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	24.0371379852	10354
Coq.FSets.FMapPositive.xelements_ih	40
Coq.FSets.FMapPositive.xelements_oh	40
Coq.FSets.FMapPositive.xelements_hi	40
Coq.FSets.FMapPositive.xelements_ho	40
Coq.FSets.FMapPositive.find_xfind_h	40	1.0.0.0.1.0.1.0.5	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct m; only 1: simpl; only 1: congruence; only 1: auto).	12.4085280895	6874
Coq.FSets.FMapPositive.xelements_complete	40
Coq.FSets.FMapPositive.elements_complete	40
Coq.FSets.FMapPositive.cardinal_1	40
Coq.FSets.FMapPositive.mem_find	40
Coq.FSets.FMapPositive.Empty_alt	40
Coq.FSets.FMapPositive.Empty_Node	40
Coq.FSets.FMapPositive.mem_1	40
Coq.FSets.FMapPositive.mem_2	40
Coq.FSets.FMapPositive.MapsTo_1	40	4.0.0	search with cache (only 1: destruct m; only 1: congruence; only 1: congruence).	0.0587158203125	14
Coq.FSets.FMapPositive.find_1	40	0	search with cache (only 1: auto).	0.0146191120148	1
Coq.FSets.FMapPositive.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.017254114151	2
Coq.FSets.FMapPositive.empty_1	40	3.9	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.876334905624	514
Coq.FSets.FMapPositive.is_empty_1	40
Coq.FSets.FMapPositive.is_empty_2	40
Coq.FSets.FMapPositive.add_1	40
Coq.FSets.FMapPositive.add_2	40
Coq.FSets.FMapPositive.add_3	40	0.0.0.1.3.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: intros; only 1: auto; only 1: auto).	0.0802900791168	26
Coq.FSets.FMapPositive.remove_1	40
Coq.FSets.FMapPositive.remove_2	40
Coq.FSets.FMapPositive.remove_3	40
Coq.FSets.FMapPositive.elements_1	40
Coq.FSets.FMapPositive.elements_2	40
Coq.FSets.FMapPositive.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.xelements_sort	40
Coq.FSets.FMapPositive.elements_3	40
Coq.FSets.FMapPositive.elements_3w	40
Coq.FSets.FMapPositive.xgmapi	40
Coq.FSets.FMapPositive.gmapi	40
Coq.FSets.FMapPositive.mapi_1	40
Coq.FSets.FMapPositive.mapi_2	40
Coq.FSets.FMapPositive.map_1	40
Coq.FSets.FMapPositive.map_2	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: unfold map; only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	10.0001831055	5397
Coq.FSets.FMapPositive.xgmap2_l	40
Coq.FSets.FMapPositive.xgmap2_r	40
Coq.FSets.FMapPositive.gmap2	40
Coq.FSets.FMapPositive.map2_1	40
Coq.FSets.FMapPositive.map2_2	40
Coq.FSets.FMapPositive.xfoldi_1	40
Coq.FSets.FMapPositive.fold_1	40
Coq.FSets.FMapPositive.equal_1	40
Coq.FSets.FMapPositive.equal_2	40
Coq.FSets.FMapPositive.gsspec	40
Coq.FSets.FMapPositive.gsident	40
Coq.FSets.FMapPositive.xmap2_lr	40	1.0.4.0.20.1	search with cache (only 1: intros; only 1: induction m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	20.6752409935	26686
Coq.FSets.FMapPositive.map2_commut	40
Coq.FSets.FMapFacts.eq_bool_alt	40
Coq.FSets.FMapFacts.eq_option_alt	40
Coq.FSets.FMapFacts.MapsTo_fun	40
Coq.FSets.FMapFacts.In_iff	40
Coq.FSets.FMapFacts.MapsTo_iff	40	0.0.10	search with cache (only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.186359167099	181
Coq.FSets.FMapFacts.mem_in_iff	40	2	search with cache (only 1: intuition).	0.06183385849	29
Coq.FSets.FMapFacts.not_mem_in_iff	40	13.34.8	search with cache (only 1: intros; only 1: Ndec.eqb2eq; only 1: intuition).	25.4147059917	72117
Coq.FSets.FMapFacts.In_dec	40
Coq.FSets.FMapFacts.find_mapsto_iff	40	17	search with cache (only 1: intuition).	0.476119995117	681
Coq.FSets.FMapFacts.not_find_in_iff	40
Coq.FSets.FMapFacts.in_find_iff	40
Coq.FSets.FMapFacts.equal_iff	40
Coq.FSets.FMapFacts.empty_mapsto_iff	40
Coq.FSets.FMapFacts.empty_in_iff	40	0.0.17.0.0.8.0	search with cache (only 1: intuition; only 1: elim H; only 1: intuition; only 1: elim H; only 1: clear H H0; only 1: intuition; only 1: apply (empty_1 H)).	14.8700377941	15082
Coq.FSets.FMapFacts.is_empty_iff	40	6.1	search with cache (only 1: intros; only 1: intuition).	0.0534839630127	18
Coq.FSets.FMapFacts.add_mapsto_iff	40
Coq.FSets.FMapFacts.add_in_iff	40
Coq.FSets.FMapFacts.add_neq_mapsto_iff	40	0.0.0.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.0455470085144	7
Coq.FSets.FMapFacts.add_neq_in_iff	40
Coq.FSets.FMapFacts.remove_mapsto_iff	40
Coq.FSets.FMapFacts.remove_in_iff	40
Coq.FSets.FMapFacts.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: intuition; only 1: intuition).	0.050616979599	9
Coq.FSets.FMapFacts.remove_neq_in_iff	40	0.0.0.1.0.0.4.0.0.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	0.602367162704	712
Coq.FSets.FMapFacts.elements_mapsto_iff	40
Coq.FSets.FMapFacts.elements_in_iff	40
Coq.FSets.FMapFacts.map_mapsto_iff	40
Coq.FSets.FMapFacts.map_in_iff	40
Coq.FSets.FMapFacts.mapi_in_iff	40
Coq.FSets.FMapFacts.mapi_inv	40
Coq.FSets.FMapFacts.mapi_1bis	40
Coq.FSets.FMapFacts.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.mem_find_b	40	0.0.0.0.0.0.3.11.0.19.1	search with cache (only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply mem_1; only 1: exists e; only 1: apply find_2; only 1: auto with map; only 1: rewrite <- not_find_in_iff, mem_in_iff; only 1: destruct (mem x m); only 1: intuition; only 1: intuition).	8.7371070385	9100
Coq.FSets.FMapFacts.mem_b	40
Coq.FSets.FMapFacts.find_o	40
Coq.FSets.FMapFacts.empty_o	40	0.0.11.1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: intuition; only 1: rewrite empty_mapsto_iff in H; only 1: elim H; only 1: discriminate).	3.39760684967	3476
Coq.FSets.FMapFacts.empty_a	40
Coq.FSets.FMapFacts.add_eq_o	40	0.0.1	search with cache (only 1: intros; only 1: apply find_1; only 1: auto with map).	0.0286741256714	4
Coq.FSets.FMapFacts.add_neq_o	40	1.5.1.4.5.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply (add_3 H H0)).	1.60925006866	1424
Coq.FSets.FMapFacts.add_o	40	0.0.0.0.0.3.15.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	13.8636329174	10153
Coq.FSets.FMapFacts.add_eq_b	40
Coq.FSets.FMapFacts.add_neq_b	40
Coq.FSets.FMapFacts.add_b	40
Coq.FSets.FMapFacts.remove_eq_o	40
Coq.FSets.FMapFacts.remove_neq_o	40	0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0788178443909	14
Coq.FSets.FMapFacts.remove_o	40	3.4.0.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.262147903442	93
Coq.FSets.FMapFacts.remove_eq_b	40
Coq.FSets.FMapFacts.remove_neq_b	40
Coq.FSets.FMapFacts.remove_b	40
Coq.FSets.FMapFacts.map_o	40
Coq.FSets.FMapFacts.map_b	40
Coq.FSets.FMapFacts.mapi_b	40
Coq.FSets.FMapFacts.mapi_o	40
Coq.FSets.FMapFacts.map2_1bis	40
Coq.FSets.FMapFacts.elements_o	40
Coq.FSets.FMapFacts.elements_b	40
Coq.FSets.FMapFacts.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.Equal_Equiv	40
Coq.FSets.FMapFacts.Equiv_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.Equal_refl	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: intro k; only 1: rewrite eq_option_alt; only 1: intro e; only 1: split; only 1: auto; only 1: auto).	0.0432279109955	7
Coq.FSets.FMapFacts.Equal_sym	40	1.1.0.2.0	search with cache (only 1: intros m1 m2; only 1: intro e; only 1: intros Hiff; only 1: intro k; only 1: auto).	0.0425701141357	11
Coq.FSets.FMapFacts.Equal_trans	40	1.6.1.0.2	search with cache (only 1: intros EQ; only 1: unfold Equal; only 1: intros; only 1: rewrite <- H0; only 1: auto with map).	3.3903529644	1667
Coq.FSets.FMapFacts.Equal_ST	40	3	search with cache (only 1: dintuition).	0.0701448917389	13
Coq.FSets.FMapFacts.In_m_Proper	40
Coq.FSets.FMapFacts.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.Empty_m_Proper	40
Coq.FSets.FMapFacts.is_empty_m_Proper	40
Coq.FSets.FMapFacts.mem_m_Proper	40
Coq.FSets.FMapFacts.find_m_Proper	40	0.0.3.1.8.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	4.89416790009	1871
Coq.FSets.FMapFacts.add_m_Proper	40
Coq.FSets.FMapFacts.remove_m_Proper	40
Coq.FSets.FMapFacts.map_m_Proper	40
Coq.FSets.FMapFacts.eqk_equiv	40	0.0.23	search with cache (only 1: compute; only 1: dintuition; only 1: eauto).	0.794560909271	472
Coq.FSets.FMapFacts.eqke_equiv	40
Coq.FSets.FMapFacts.InA_eqke_eqk	40
Coq.FSets.FMapFacts.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.findA_rev	40
Coq.FSets.FMapFacts.elements_Empty	40
Coq.FSets.FMapFacts.elements_empty	40
Coq.FSets.FMapFacts.of_list_1	40
Coq.FSets.FMapFacts.of_list_1b	40
Coq.FSets.FMapFacts.of_list_2	40
Coq.FSets.FMapFacts.of_list_3	40
Coq.FSets.FMapFacts.fold_spec_right	40
Coq.FSets.FMapFacts.fold_rec	40
Coq.FSets.FMapFacts.fold_rec_bis	40
Coq.FSets.FMapFacts.fold_rec_nodep	40	1.0.1.0.1.1	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.228464841843	57
Coq.FSets.FMapFacts.fold_rec_weak	40
Coq.FSets.FMapFacts.fold_rel	40
Coq.FSets.FMapFacts.map_induction	40
Coq.FSets.FMapFacts.map_induction_bis	40
Coq.FSets.FMapFacts.fold_identity	40
Coq.FSets.FMapFacts.fold_init	40
Coq.FSets.FMapFacts.fold_Empty	40
Coq.FSets.FMapFacts.fold_commutes	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Equal2	40
Coq.FSets.FMapFacts.fold_Add	40
Coq.FSets.FMapFacts.fold_add	40
Coq.FSets.FMapFacts.cardinal_fold	40
Coq.FSets.FMapFacts.cardinal_Empty	40
Coq.FSets.FMapFacts.Equal_cardinal	40
Coq.FSets.FMapFacts.cardinal_1	40
Coq.FSets.FMapFacts.cardinal_2	40	0.0.0.0.0.0.1.4.1.7	search with cache (only 1: intros i m k e Hnotin; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Add; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: red; only 1: auto).	2.06404995918	1374
Coq.FSets.FMapFacts.cardinal_inv_1	40
Coq.FSets.FMapFacts.cardinal_inv_2	40
Coq.FSets.FMapFacts.cardinal_inv_2b	40
Coq.FSets.FMapFacts.filter_iff	40
Coq.FSets.FMapFacts.for_all_iff	40
Coq.FSets.FMapFacts.exists_iff	40
Coq.FSets.FMapFacts.Disjoint_alt	40
Coq.FSets.FMapFacts.partition_iff_1	40
Coq.FSets.FMapFacts.partition_iff_2	40
Coq.FSets.FMapFacts.partition_Partition	40
Coq.FSets.FMapFacts.Partition_In	40
Coq.FSets.FMapFacts.Disjoint_sym	40	8.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Disjoint_alt; only 1: intros Hiff; only 1: intros k e e'; only 1: firstorder).	0.600677013397	365
Coq.FSets.FMapFacts.Partition_sym	40
Coq.FSets.FMapFacts.Partition_Empty	40
Coq.FSets.FMapFacts.Partition_Add	40
Coq.FSets.FMapFacts.Partition_fold	40
Coq.FSets.FMapFacts.Partition_cardinal	40
Coq.FSets.FMapFacts.Partition_partition	40
Coq.FSets.FMapFacts.update_mapsto_iff	40
Coq.FSets.FMapFacts.update_dec	40
Coq.FSets.FMapFacts.update_in_iff	40
Coq.FSets.FMapFacts.diff_mapsto_iff	40
Coq.FSets.FMapFacts.diff_in_iff	40
Coq.FSets.FMapFacts.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.restrict_in_iff	40
Coq.FSets.FMapFacts.cardinal_m_Proper	40	3.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.727260112762	365
Coq.FSets.FMapFacts.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.Partition_m_Proper	40
Coq.FSets.FMapFacts.update_m_Proper	40
Coq.FSets.FMapFacts.restrict_m_Proper	40
Coq.FSets.FMapFacts.diff_m_Proper	40
Coq.FSets.FMapFacts.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.gtb_1	40
Coq.FSets.FMapFacts.leb_1	40
Coq.FSets.FMapFacts.gtb_compat	40
Coq.FSets.FMapFacts.leb_compat	40
Coq.FSets.FMapFacts.elements_split	40
Coq.FSets.FMapFacts.elements_Add	40
Coq.FSets.FMapFacts.elements_Add_Above	40
Coq.FSets.FMapFacts.elements_Add_Below	40
Coq.FSets.FMapFacts.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.max_elt_Above	40
Coq.FSets.FMapFacts.max_elt_MapsTo	40
Coq.FSets.FMapFacts.max_elt_Empty	40
Coq.FSets.FMapFacts.min_elt_Below	40
Coq.FSets.FMapFacts.min_elt_MapsTo	40
Coq.FSets.FMapFacts.min_elt_Empty	40	3.0.0.0.5.1.0	search with cache (only 1: intros; only 1: rewrite elements_Empty; only 1: unfold min_elt in *; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	5.73857188225	3911
Coq.FSets.FMapFacts.map_induction_max	40
Coq.FSets.FMapFacts.map_induction_min	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Add_Above	40
Coq.FSets.FMapFacts.fold_Add_Below	40
Coq.FSets.FMapWeakList.empty_1	40	4.0.45	search with cache (only 1: compute; only 1: firstorder; only 1: invlist InA).	0.512115955353	1370
Coq.FSets.FMapWeakList.empty_NoDup	40	1.21	search with cache (only 1: unfold Empty, empty; only 1: intuition).	0.118173122406	277
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40	4.2.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: unfold Empty, PX.MapsTo; only 1: firstorder).	1.21841311455	575
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_eq	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.add_3'	40
Coq.FSets.FMapWeakList.add_NoDup	40
Coq.FSets.FMapWeakList.add_eq	40
Coq.FSets.FMapWeakList.add_not_eq	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40	0.0.1.1.0.0.0.1.0	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	5.02670502663	1535
Coq.FSets.FMapWeakList.remove_3'	40	0.0.0.0.0.0.3.1.2	search with cache (only 1: intros m Hm x y e; only 1: generalize y, e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	5.31547093391	1834
Coq.FSets.FMapWeakList.remove_NoDup	40
Coq.FSets.FMapWeakList.elements_1	40	0.0.0.0.0.0	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: intros NoDup hyp; only 1: auto).	0.0380229949951	6
Coq.FSets.FMapWeakList.elements_2	40	0	search with cache (only 1: auto).	0.014032125473	1
Coq.FSets.FMapWeakList.elements_3w	40	5.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: auto).	0.137632846832	32
Coq.FSets.FMapWeakList.fold_1	40	7.5.0.0.9.3	search with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).	27.0036931038	27822
Coq.FSets.FMapWeakList.submap_1	40
Coq.FSets.FMapWeakList.submap_2	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.map_NoDup	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.mapi_NoDup	40	1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	37.1109368801	10718
Coq.FSets.FMapWeakList.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.combine_NoDup	40
Coq.FSets.FMapWeakList.combine_l_1	40
Coq.FSets.FMapWeakList.combine_r_1	40
Coq.FSets.FMapWeakList.combine_1	40
Coq.FSets.FMapWeakList.map2_NoDup	40
Coq.FSets.FMapWeakList.map2_0	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FMapWeakList.MapsTo_1	40	2.1.12.4.0	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: auto; only 1: auto).	5.92635798454	4566
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.empty_1	40	12.35	search with cache (only 1: compute; only 1: inversion 1).	0.772557020187	2040
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.elements_1	40	0	search with cache (only 1: auto).	0.0161027908325	1
Coq.FSets.FMapWeakList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0201277732849	2
Coq.FSets.FMapWeakList.elements_3w	40	2.26	search with cache (only 1: induction m; only 1: auto).	0.641157150269	1102
Coq.FSets.FMapWeakList.cardinal_1	40	14	search with cache (only 1: auto).	0.070130109787	144
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FSetToFiniteSet.In_In	40	0.1.0.1	search with cache (only 1: intros s Hsame; only 1: rewrite elements_iff; only 1: symmetry; only 1: apply elements_iff).	0.0305979251862	6
Coq.FSets.FSetToFiniteSet.Subset_Included	40	4.0	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.0336937904358	6
Coq.FSets.FSetToFiniteSet.Equal_Same_set	40	6.14	search with cache (only 1: repeat red; only 1: firstorder).	9.67378997803	5373
Coq.FSets.FSetToFiniteSet.empty_Empty_Set	40	7.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.330530881882	313
Coq.FSets.FSetToFiniteSet.Empty_Empty_set	40	1.0.0.0.1.0.2.1.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: rewrite elements_Empty in H; only 1: intros; only 1: rewrite elements_iff in H0; only 1: destruct H0; only 1: discriminate; only 1: discriminate; only 1: intro; only 1: inversion 1).	2.47291302681	2170
Coq.FSets.FSetToFiniteSet.singleton_Singleton	40	0.5.1	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.25760102272	56
Coq.FSets.FSetToFiniteSet.union_Union	40
Coq.FSets.FSetToFiniteSet.inter_Intersection	40	0.0.0.1.0.0.2.0.0.1.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	4.14108300209	2176
Coq.FSets.FSetToFiniteSet.add_Add	40
Coq.FSets.FSetToFiniteSet.Add_Add	40
Coq.FSets.FSetToFiniteSet.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.mem_eq	40
Coq.FSets.FSetEqProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.empty_mem	40
Coq.FSets.FSetEqProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.choose_mem_1	40	0.0.0.0.2	search with cache (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: generalize (FM.mem_iff s x), (FM.mem_iff s' y); only 1: destruct (mem y s'); only 1: intuition; only 1: intuition).	0.165782928467	69
Coq.FSets.FSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0226809978485	1
Coq.FSets.FSetEqProperties.add_mem_1	40	0	search with cache (only 1: auto with set).	0.0223300457001	1
Coq.FSets.FSetEqProperties.add_mem_2	40
Coq.FSets.FSetEqProperties.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0235931873322	2
Coq.FSets.FSetEqProperties.remove_mem_2	40
Coq.FSets.FSetEqProperties.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0196449756622	1
Coq.FSets.FSetEqProperties.union_mem	40
Coq.FSets.FSetEqProperties.inter_mem	40
Coq.FSets.FSetEqProperties.diff_mem	40
Coq.FSets.FSetEqProperties.mem_3	40	0.0.0.0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: generalize (FM.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.137862920761	37
Coq.FSets.FSetEqProperties.mem_4	40	0.0.0.0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: generalize (FM.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.157009840012	60
Coq.FSets.FSetEqProperties.equal_refl	40	1	search with cache (only 1: auto with set).	0.018697977066	2
Coq.FSets.FSetEqProperties.equal_sym	40
Coq.FSets.FSetEqProperties.equal_trans	40
Coq.FSets.FSetEqProperties.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0304689407349	3
Coq.FSets.FSetEqProperties.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0762469768524	3
Coq.FSets.FSetEqProperties.subset_refl	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0752549171448	2
Coq.FSets.FSetEqProperties.subset_antisym	40	3.3.0	search with cache (only 1: destruct (subset s s''); only 1: auto with set fset; only 1: auto with set fset).	0.296682834625	113
Coq.FSets.FSetEqProperties.subset_trans	40
Coq.FSets.FSetEqProperties.subset_equal	40	3.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0336711406708	7
Coq.FSets.FSetEqProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.add_mem_3	40	1	search with cache (only 1: auto with set).	0.0207929611206	2
Coq.FSets.FSetEqProperties.add_equal	40	2.1	search with cache (only 1: intros; only 1: auto with set).	0.0258150100708	5
Coq.FSets.FSetEqProperties.remove_mem_3	40	2.5	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: eauto with set).	0.0583219528198	9
Coq.FSets.FSetEqProperties.remove_equal	40	1.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.182874917984	18
Coq.FSets.FSetEqProperties.add_remove	40
Coq.FSets.FSetEqProperties.remove_add	40	0.0.2.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: Dec.fsetdec).	0.371104955673	27
Coq.FSets.FSetEqProperties.is_empty_cardinal	40	0.0.0.0.0.0.7.0	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	2.38627505302	1280
Coq.FSets.FSetEqProperties.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0192840099335	1
Coq.FSets.FSetEqProperties.singleton_mem_2	40	5.7	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.648095846176	182
Coq.FSets.FSetEqProperties.singleton_mem_3	40	6.0.0.2.3.3.0.0.1	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: intros; only 1: auto; only 1: destruct (FM.eq_dec x y); only 1: intuition; only 1: intuition; only 1: discriminate).	28.8781731129	15858
Coq.FSets.FSetEqProperties.union_sym	40	0	search with cache (only 1: auto with set fset).	0.0200588703156	1
Coq.FSets.FSetEqProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0285589694977	1
Coq.FSets.FSetEqProperties.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0213539600372	1
Coq.FSets.FSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0206661224365	1
Coq.FSets.FSetEqProperties.union_assoc	40	1	search with cache (only 1: auto with set).	0.0411260128021	2
Coq.FSets.FSetEqProperties.add_union_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.102872848511	3
Coq.FSets.FSetEqProperties.union_add	40	1	search with cache (only 1: auto with set).	0.0416839122772	2
Coq.FSets.FSetEqProperties.union_subset_1	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0443079471588	2
Coq.FSets.FSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0188548564911	1
Coq.FSets.FSetEqProperties.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0374660491943	1
Coq.FSets.FSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0199210643768	1
Coq.FSets.FSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0228312015533	1
Coq.FSets.FSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0212450027466	1
Coq.FSets.FSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0220839977264	1
Coq.FSets.FSetEqProperties.inter_assoc	40	1	search with cache (only 1: auto with set).	0.0382180213928	2
Coq.FSets.FSetEqProperties.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0407209396362	2
Coq.FSets.FSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0203981399536	1
Coq.FSets.FSetEqProperties.inter_add_1	40	4.0.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.219424962997	8
Coq.FSets.FSetEqProperties.inter_add_2	40	1.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.255005121231	22
Coq.FSets.FSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0184078216553	1
Coq.FSets.FSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0186760425568	1
Coq.FSets.FSetEqProperties.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0499839782715	4
Coq.FSets.FSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.0183851718903	1
Coq.FSets.FSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0228559970856	1
Coq.FSets.FSetEqProperties.remove_inter_singleton	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.109838008881	2
Coq.FSets.FSetEqProperties.diff_inter_empty	40	3	search with cache (only 1: auto with set).	0.0371210575104	4
Coq.FSets.FSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0192708969116	1
Coq.FSets.FSetEqProperties.set_rec	40
Coq.FSets.FSetEqProperties.exclusive_set	40
Coq.FSets.FSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.025454044342	2
Coq.FSets.FSetEqProperties.fold_equal	40	2.0.0.0.1.4	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.79390001297	1187
Coq.FSets.FSetEqProperties.fold_add	40	0.0.0.0.0.0.0.1.2	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.9462890625	347
Coq.FSets.FSetEqProperties.add_fold	40
Coq.FSets.FSetEqProperties.remove_fold_1	40	0.0.0.0.0.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0550630092621	8
Coq.FSets.FSetEqProperties.remove_fold_2	40
Coq.FSets.FSetEqProperties.fold_union	40
Coq.FSets.FSetEqProperties.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.0209259986877	1
Coq.FSets.FSetEqProperties.add_cardinal_2	40	0.0.0.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.0823650360107	49
Coq.FSets.FSetEqProperties.remove_cardinal_1	40	0.0.0.6.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.527704000473	399
Coq.FSets.FSetEqProperties.remove_cardinal_2	40	2.0.0.5.13.1.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	13.5133049488	14106
Coq.FSets.FSetEqProperties.union_cardinal	40	0.4.4.4.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.17075800896	1043
Coq.FSets.FSetEqProperties.subset_cardinal	40	10	search with cache (only 1: auto with set fset).	0.0867030620575	59
Coq.FSets.FSetEqProperties.Comp'	40	0.4.1	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: auto).	0.0802109241486	8
Coq.FSets.FSetEqProperties.filter_mem	40
Coq.FSets.FSetEqProperties.for_all_filter	40
Coq.FSets.FSetEqProperties.exists_filter	40
Coq.FSets.FSetEqProperties.partition_filter_1	40	15.0	search with cache (only 1: intros; only 1: auto with set).	7.04871082306	4019
Coq.FSets.FSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0239579677582	1
Coq.FSets.FSetEqProperties.filter_add_1	40
Coq.FSets.FSetEqProperties.filter_add_2	40
Coq.FSets.FSetEqProperties.add_filter_1	40
Coq.FSets.FSetEqProperties.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	7.62419700623	1556
Coq.FSets.FSetEqProperties.union_filter	40
Coq.FSets.FSetEqProperties.filter_union	40	0.0.0.3.4.1.0.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	26.7677211761	4185
Coq.FSets.FSetEqProperties.for_all_mem_1	40	0.0.0.0.0.0.0.1.0.4.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: auto with set).	1.34545302391	1003
Coq.FSets.FSetEqProperties.for_all_mem_2	40	0.1.13.1.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.467653989792	444
Coq.FSets.FSetEqProperties.for_all_mem_3	40
Coq.FSets.FSetEqProperties.for_all_mem_4	40
Coq.FSets.FSetEqProperties.for_all_exists	40
Coq.FSets.FSetEqProperties.Comp'	40	0.0.0.1	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.030965089798	5
Coq.FSets.FSetEqProperties.exists_mem_1	40
Coq.FSets.FSetEqProperties.exists_mem_2	40
Coq.FSets.FSetEqProperties.exists_mem_3	40
Coq.FSets.FSetEqProperties.exists_mem_4	40
Coq.FSets.FSetEqProperties.sum_plus	40
Coq.FSets.FSetEqProperties.sum_filter	40
Coq.FSets.FSetEqProperties.fold_compat	40
Coq.FSets.FSetEqProperties.sum_compat	40
Coq.FSets.FSetBridge.empty	40
Coq.FSets.FSetBridge.is_empty	40
Coq.FSets.FSetBridge.mem	40
Coq.FSets.FSetBridge.add	40
Coq.FSets.FSetBridge.singleton	40
Coq.FSets.FSetBridge.remove	40
Coq.FSets.FSetBridge.union	40
Coq.FSets.FSetBridge.inter	40
Coq.FSets.FSetBridge.diff	40
Coq.FSets.FSetBridge.equal	40
Coq.FSets.FSetBridge.subset	40
Coq.FSets.FSetBridge.elements	40
Coq.FSets.FSetBridge.fold	40	16.11.0	search with cache (only 1: intros; only 1: simpl; only 1: eauto with set).	0.700787067413	1294
Coq.FSets.FSetBridge.cardinal	40	18.0.9	search with cache (only 1: simpl; only 1: intros; only 1: eauto with set).	0.711652994156	1490
Coq.FSets.FSetBridge.compat_P_aux	40
Coq.FSets.FSetBridge.filter	40
Coq.FSets.FSetBridge.for_all	40
Coq.FSets.FSetBridge.exists_	40
Coq.FSets.FSetBridge.partition	40
Coq.FSets.FSetBridge.choose_aux	40
Coq.FSets.FSetBridge.choose	40
Coq.FSets.FSetBridge.choose_ok1	40
Coq.FSets.FSetBridge.choose_ok2	40
Coq.FSets.FSetBridge.choose_equal	40
Coq.FSets.FSetBridge.min_elt	40
Coq.FSets.FSetBridge.max_elt	40
Coq.FSets.FSetBridge.empty_1	40
Coq.FSets.FSetBridge.is_empty_1	40
Coq.FSets.FSetBridge.is_empty_2	40
Coq.FSets.FSetBridge.mem_1	40
Coq.FSets.FSetBridge.mem_2	40
Coq.FSets.FSetBridge.equal_1	40
Coq.FSets.FSetBridge.equal_2	40	1.0.0.0.0.3	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intuition; only 1: discriminate H).	0.0831120014191	50
Coq.FSets.FSetBridge.subset_1	40
Coq.FSets.FSetBridge.subset_2	40	1.0.0.0.0.2	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.0808510780334	43
Coq.FSets.FSetBridge.choose_1	40
Coq.FSets.FSetBridge.choose_2	40	1.0.0.0.0.0.1.4	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: intros; only 1: auto).	0.403403043747	449
Coq.FSets.FSetBridge.choose_3	40
Coq.FSets.FSetBridge.elements_1	40
Coq.FSets.FSetBridge.elements_2	40	0.0.0.2	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0341329574585	24
Coq.FSets.FSetBridge.elements_3	40	0.0.1.0	search with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0241708755493	5
Coq.FSets.FSetBridge.elements_3w	40	4.0	search with cache (only 1: intros; only 1: firstorder).	0.0436108112335	35
Coq.FSets.FSetBridge.min_elt_1	40
Coq.FSets.FSetBridge.min_elt_2	40
Coq.FSets.FSetBridge.min_elt_3	40	0.0.0.0.0.0.1.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.0412399768829	9
Coq.FSets.FSetBridge.max_elt_1	40
Coq.FSets.FSetBridge.max_elt_2	40
Coq.FSets.FSetBridge.max_elt_3	40	0.0.0.0.1.2.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.153495073318	36
Coq.FSets.FSetBridge.add_1	40
Coq.FSets.FSetBridge.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0239281654358	5
Coq.FSets.FSetBridge.add_3	40	0.0.0.0.14	search with cache (only 1: intros s x; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	2.27043199539	2315
Coq.FSets.FSetBridge.remove_1	40
Coq.FSets.FSetBridge.remove_2	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0256209373474	4
Coq.FSets.FSetBridge.remove_3	40	0.0.0.1	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.100521087646	31
Coq.FSets.FSetBridge.singleton_1	40
Coq.FSets.FSetBridge.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0596859455109	4
Coq.FSets.FSetBridge.union_1	40
Coq.FSets.FSetBridge.union_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0215129852295	4
Coq.FSets.FSetBridge.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0218350887299	4
Coq.FSets.FSetBridge.inter_1	40
Coq.FSets.FSetBridge.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0223829746246	4
Coq.FSets.FSetBridge.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0231070518494	4
Coq.FSets.FSetBridge.diff_1	40
Coq.FSets.FSetBridge.diff_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0250649452209	4
Coq.FSets.FSetBridge.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0244791507721	4
Coq.FSets.FSetBridge.cardinal_1	40
Coq.FSets.FSetBridge.fold_1	40
Coq.FSets.FSetBridge.f_dec	40
Coq.FSets.FSetBridge.compat_P_aux	40	11.8.2.17.0	search with cache (only 1: intros; only 1: intro s; only 1: intros; only 1: rewrite <- (H _ _ H0); only 1: intuition).	7.10768818855	11219
Coq.FSets.FSetBridge.filter_1	40
Coq.FSets.FSetBridge.filter_2	40	0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.502138137817	7
Coq.FSets.FSetBridge.filter_3	40	0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.345201015472	7
Coq.FSets.FSetBridge.for_all_1	40
Coq.FSets.FSetBridge.for_all_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0375788211823	6
Coq.FSets.FSetBridge.exists_1	40
Coq.FSets.FSetBridge.exists_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0314660072327	6
Coq.FSets.FSetBridge.partition_1	40
Coq.FSets.FSetBridge.partition_2	40
Coq.FSets.FSetCompat.lt_not_eq	40
Coq.FSets.FSetCompat.compare	40
Coq.FSets.FSetCompat.In_compat	40	0.0.3.0	search with cache (only 1: intros x y H s s' H0; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.0366480350494	7
Coq.FSets.FSetCompat.mem_spec	40	2.14.5	search with cache (only 1: intuition; only 1: repeat red; only 1: intuition).	2.40420508385	4463
Coq.FSets.FSetCompat.equal_spec	40
Coq.FSets.FSetCompat.subset_spec	40
Coq.FSets.FSetCompat.is_empty_spec	40
Coq.FSets.FSetCompat.add_spec	40
Coq.FSets.FSetCompat.remove_spec	40
Coq.FSets.FSetCompat.singleton_spec	40
Coq.FSets.FSetCompat.elements_spec1	40	6.6.29.0	search with cache (only 1: split; only 1: red; only 1: intuition; only 1: intuition).	13.7715520859	40151
Coq.FSets.FSetCompat.for_all_spec	40
Coq.FSets.FSetCompat.exists_spec	40
Coq.FSets.FSetCompat.lt_strorder	40
Coq.FSets.FSetCompat.lt_compat	40
Coq.FSets.FSetCompat.compare_spec	40
Coq.FSets.FSetProperties.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.109163999557	5
Coq.FSets.FSetProperties.Add_Equal	40
Coq.FSets.FSetProperties.equal_refl	40	4.2	search with cache (only 1: apply equal_2; only 1: intuition).	0.055379152298	26
Coq.FSets.FSetProperties.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0493159294128	1
Coq.FSets.FSetProperties.equal_trans	40	0	search with cache (only 1: fsetdec).	0.0642611980438	1
Coq.FSets.FSetProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.02956199646	1
Coq.FSets.FSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0499670505524	1
Coq.FSets.FSetProperties.subset_antisym	40	1.1.1.0.0	search with cache (only 1: destruct (equal s s''); only 1: destruct (equal s s''); only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.922096014023	155
Coq.FSets.FSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0436880588531	1
Coq.FSets.FSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0425670146942	1
Coq.FSets.FSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0567238330841	1
Coq.FSets.FSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0567209720612	1
Coq.FSets.FSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0763020515442	1
Coq.FSets.FSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0493149757385	1
Coq.FSets.FSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0460021495819	1
Coq.FSets.FSetProperties.double_inclusion	40	0.0.0.2.2	search with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.208503961563	15
Coq.FSets.FSetProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.060084104538	1
Coq.FSets.FSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0506019592285	1
Coq.FSets.FSetProperties.add_equal	40	6.0.0.0	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: fsetdec).	0.152966022491	23
Coq.FSets.FSetProperties.add_add	40	0	search with cache (only 1: fsetdec).	0.158374071121	1
Coq.FSets.FSetProperties.remove_equal	40	0	search with cache (only 1: fsetdec).	0.104748010635	1
Coq.FSets.FSetProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.127635955811	1
Coq.FSets.FSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.132379055023	1
Coq.FSets.FSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.136968851089	1
Coq.FSets.FSetProperties.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0920538902283	1
Coq.FSets.FSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.267081022263	1
Coq.FSets.FSetProperties.union_sym	40	0	search with cache (only 1: fsetdec).	0.091784954071	1
Coq.FSets.FSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0756769180298	1
Coq.FSets.FSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.108111858368	1
Coq.FSets.FSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.106927156448	1
Coq.FSets.FSetProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.159075975418	1
Coq.FSets.FSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0946369171143	1
Coq.FSets.FSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.167298078537	1
Coq.FSets.FSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.293187141418	1
Coq.FSets.FSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.261363983154	1
Coq.FSets.FSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0403270721436	1
Coq.FSets.FSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0400590896606	1
Coq.FSets.FSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0606369972229	1
Coq.FSets.FSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0659039020538	1
Coq.FSets.FSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0625379085541	1
Coq.FSets.FSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0756900310516	1
Coq.FSets.FSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0735058784485	1
Coq.FSets.FSetProperties.not_in_union	40	5	search with cache (only 1: fsetdec).	0.124711036682	31
Coq.FSets.FSetProperties.inter_sym	40	1	search with cache (only 1: fsetdec).	0.0877039432526	2
Coq.FSets.FSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0734560489655	1
Coq.FSets.FSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.102959156036	1
Coq.FSets.FSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0986459255219	1
Coq.FSets.FSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.13779091835	1
Coq.FSets.FSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.186769008636	1
Coq.FSets.FSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.197392940521	1
Coq.FSets.FSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.171258926392	1
Coq.FSets.FSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.137408971786	1
Coq.FSets.FSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0543241500854	1
Coq.FSets.FSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0563519001007	1
Coq.FSets.FSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0412518978119	1
Coq.FSets.FSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0415289402008	1
Coq.FSets.FSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0567951202393	1
Coq.FSets.FSetProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0635488033295	1
Coq.FSets.FSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0763540267944	1
Coq.FSets.FSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0459570884705	1
Coq.FSets.FSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.108725070953	1
Coq.FSets.FSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.109536886215	1
Coq.FSets.FSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.163164138794	1
Coq.FSets.FSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.139001846313	1
Coq.FSets.FSetProperties.Add_add	40	1.2	search with cache (only 1: intro H; only 1: fsetdec).	0.116595029831	11
Coq.FSets.FSetProperties.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.161807060242	3
Coq.FSets.FSetProperties.union_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.22329211235	3
Coq.FSets.FSetProperties.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.35707616806	2
Coq.FSets.FSetProperties.union_Equal	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.364518880844	3
Coq.FSets.FSetProperties.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.260666847229	2
Coq.FSets.FSetProperties.elements_Empty	40
Coq.FSets.FSetProperties.elements_empty	40
Coq.FSets.FSetProperties.of_list_1	40
Coq.FSets.FSetProperties.of_list_2	40
Coq.FSets.FSetProperties.of_list_3	40
Coq.FSets.FSetProperties.fold_spec_right	40
Coq.FSets.FSetProperties.fold_rec	40
Coq.FSets.FSetProperties.fold_rec_bis	40
Coq.FSets.FSetProperties.fold_rec_nodep	40	0.1.0.0.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: eapply Pstep; only 1: eauto; only 1: eauto).	0.522514820099	218
Coq.FSets.FSetProperties.fold_rec_weak	40
Coq.FSets.FSetProperties.fold_rel	40
Coq.FSets.FSetProperties.set_induction	40
Coq.FSets.FSetProperties.set_induction_bis	40
Coq.FSets.FSetProperties.fold_identity	40	0.1.0.4.5.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: fsetdec; only 1: intuition; only 1: intros; only 1: auto with set).	1.39732098579	1000
Coq.FSets.FSetProperties.fold_0	40	13.0.13.6.22.5	search with cache (only 1: intros; only 1: rewrite fold_spec_right; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_3w, NoDupA_rev with *); only 1: assert (Hsame : forall x, In x s <-> InA x l) by (unfold l; intros; rewrite elements_iff, InA_rev; intuition); only 1: eauto).	28.0235059261	57412
Coq.FSets.FSetProperties.fold_1	40	9.8.1.1.1	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: fsetdec).	6.07641983032	9710
Coq.FSets.FSetProperties.fold_2	40
Coq.FSets.FSetProperties.fold_1b	40	0.0.0.0.0.1.0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: split; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	6.91672492027	5339
Coq.FSets.FSetProperties.fold_commutes	40
Coq.FSets.FSetProperties.fold_init	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.fold_empty	40	14.1.1.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_1; only 1: auto with *; only 1: auto with *).	18.9285519123	16950
Coq.FSets.FSetProperties.fold_add	40	3.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with *; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.434662103653	191
Coq.FSets.FSetProperties.add_fold	40
Coq.FSets.FSetProperties.remove_fold_1	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0693371295929	21
Coq.FSets.FSetProperties.remove_fold_2	40	2.2.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.181999206543	49
Coq.FSets.FSetProperties.fold_union_inter	40
Coq.FSets.FSetProperties.fold_diff_inter	40
Coq.FSets.FSetProperties.fold_union	40
Coq.FSets.FSetProperties.fold_plus	40	0.0.1.4.1.0.8.0	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	4.32442808151	5775
Coq.FSets.FSetProperties.cardinal_fold	40
Coq.FSets.FSetProperties.cardinal_0	40
Coq.FSets.FSetProperties.cardinal_1	40	0.0.0.7.3.0	search with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.560135126114	393
Coq.FSets.FSetProperties.cardinal_2	40
Coq.FSets.FSetProperties.cardinal_Empty	40
Coq.FSets.FSetProperties.cardinal_inv_1	40
Coq.FSets.FSetProperties.cardinal_inv_2	40
Coq.FSets.FSetProperties.cardinal_inv_2b	40	1.1.4.1.1.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	2.40060091019	2232
Coq.FSets.FSetProperties.Equal_cardinal	40
Coq.FSets.FSetProperties.cardinal_m_Proper	40
Coq.FSets.FSetProperties.empty_cardinal	40	0.2	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0199339389801	4
Coq.FSets.FSetProperties.singleton_cardinal	40
Coq.FSets.FSetProperties.diff_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal_lt	40
Coq.FSets.FSetProperties.union_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal_inter	40
Coq.FSets.FSetProperties.union_cardinal_le	40	2.1.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.052992105484	31
Coq.FSets.FSetProperties.add_cardinal_1	40	0.3	search with cache (only 1: intro; only 1: intuition).	0.0580611228943	21
Coq.FSets.FSetProperties.add_cardinal_2	40	0.0.0.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0307400226593	5
Coq.FSets.FSetProperties.remove_cardinal_1	40	0.0.3.9.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	1.01895809174	949
Coq.FSets.FSetProperties.remove_cardinal_2	40	0.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.0767419338226	22
Coq.FSets.FSetProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.gtb_1	40
Coq.FSets.FSetProperties.leb_1	40
Coq.FSets.FSetProperties.gtb_compat	40
Coq.FSets.FSetProperties.leb_compat	40
Coq.FSets.FSetProperties.elements_split	40
Coq.FSets.FSetProperties.elements_Add	40
Coq.FSets.FSetProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.set_induction_max	40
Coq.FSets.FSetProperties.set_induction_min	40
Coq.FSets.FSetProperties.fold_3	40
Coq.FSets.FSetProperties.fold_4	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.031112909317	3
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.032299041748	3
Coq.FSets.FSetProperties.choose_equal	40
Coq.FSets.FSetDecide.test_push	40	0	search with cache (only 1: auto).	0.00979495048523	1
Coq.FSets.FSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.106443166733	3
Coq.FSets.FSetDecide.eq_refl_iff	40	3	search with cache (only 1: intuition).	0.0164799690247	30
Coq.FSets.FSetDecide.dec_In	40
Coq.FSets.FSetDecide.dec_eq	40
Coq.FSets.FSetDecide.test_eq_trans_1	40
Coq.FSets.FSetDecide.test_eq_trans_2	40	16	search with cache (only 1: fsetdec).	1.01440095901	536
Coq.FSets.FSetDecide.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0344040393829	1
Coq.FSets.FSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.133526802063	1
Coq.FSets.FSetDecide.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0112240314484	1
Coq.FSets.FSetDecide.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0356540679932	1
Coq.FSets.FSetDecide.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0289649963379	1
Coq.FSets.FSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0438749790192	1
Coq.FSets.FSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0727989673615	1
Coq.FSets.FSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0687401294708	1
Coq.FSets.FSetDecide.test_iff_conj	40	5	search with cache (only 1: fsetdec).	0.0870518684387	31
Coq.FSets.FSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.118181943893	1
Coq.FSets.FSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.148243188858	1
Coq.FSets.FSetDecide.test_too_complex	40	0.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0365958213806	5
Coq.FSets.FSetDecide.function_test_1	40	0.1	search with cache (only 1: intros s s' H; only 1: fsetdec).	0.0469028949738	17
Coq.FSets.FSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0433080196381	1
Coq.FSets.FSetDecide.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0432910919189	1
Coq.FSets.FMapList.empty_1	40
Coq.FSets.FMapList.empty_sorted	40	12	search with cache (only 1: constructor).	0.0136790275574	46
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40	0.3.0.0.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: absurd (InA eqke (k, e) ((k, e) :: l)); only 1: intuition; only 1: auto with ordered_type).	1.61874198914	177
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.add_Inf	40
Coq.FSets.FMapList.add_sorted	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.remove_Inf	40
Coq.FSets.FMapList.remove_sorted	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	4.51679205894	2367
Coq.FSets.FMapList.elements_1	40	0.0.0.0.0.0	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: intros sorted hyp; only 1: auto with ordered_type).	0.0242869853973	6
Coq.FSets.FMapList.elements_2	40	0	search with cache (only 1: auto).	0.00533294677734	1
Coq.FSets.FMapList.elements_3	40	1.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0204300880432	7
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.fold_1	40	8.7.2.0.3	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).	6.64924192429	8942
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.equal_cons	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.map_lelistA	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: auto).	0.0494811534882	10
Coq.FSets.FMapList.map_sorted	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.mapi_lelistA	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.0473070144653	8
Coq.FSets.FMapList.mapi_sorted	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.721045970917	183
Coq.FSets.FMapList.map2_alt_equiv	40
Coq.FSets.FMapList.combine_lelistA	40
Coq.FSets.FMapList.combine_sorted	40
Coq.FSets.FMapList.map2_sorted	40
Coq.FSets.FMapList.combine_1	40
Coq.FSets.FMapList.map2_0	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.MapsTo_1	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.empty_1	40	6.31	search with cache (only 1: compute; only 1: inversion 1).	0.394253969193	1356
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.elements_1	40	0	search with cache (only 1: auto).	0.00707793235779	1
Coq.FSets.FMapList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00986003875732	2
Coq.FSets.FMapList.elements_3	40	1.14	search with cache (only 1: induction m; only 1: auto).	0.182095050812	295
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.cardinal_1	40	7	search with cache (only 1: intuition).	0.0112900733948	17
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.eq_equal	40
Coq.FSets.FMapList.eq_1	40
Coq.FSets.FMapList.eq_2	40
Coq.FSets.FMapList.eq_refl	40
Coq.FSets.FMapList.eq_sym	40
Coq.FSets.FMapList.eq_trans	40
Coq.FSets.FMapList.lt_trans	40
Coq.FSets.FMapList.lt_not_eq	40
Coq.FSets.FMapList.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.3	search with cache (only 1: split; only 1: auto with sets).	0.0149340629578	15
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.0.3.3.10	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.316285848618	897
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	1.43	search with cache (only 1: left; only 1: trivial).	0.680447816849	5067
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.8.1.7.7	search with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	7.16005015373	3770
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.00573182106018	2
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	7.3.1.7	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?IHd).	5.35926008224	7453
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.707864999771	619
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0.0	search with cache (only 1: unfold unorm, lnorm; only 1: now induction d).	0.0137209892273	2
Coq.Numbers.DecimalFacts.norm_invol	40	5.5.14	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	2.6474840641	2770
Coq.Numbers.DecimalPos.of_lu_eqn	40
Coq.Numbers.DecimalPos.of_lu_revapp	40
Coq.Numbers.DecimalPos.Nadd_simpl	40	2.3.28.3	search with cache (only 1: simpl; only 1: induction n; only 1: auto; only 1: trivial).	2.07085585594	3616
Coq.Numbers.DecimalPos.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.of_uint_alt	40
Coq.Numbers.DecimalPos.of_lu_rev	40
Coq.Numbers.DecimalPos.of_lu_double_gen	40
Coq.Numbers.DecimalPos.of_lu_double	40
Coq.Numbers.DecimalPos.of_lu_succ_double	40	2	search with cache (only 1: apply of_lu_double_gen).	2.11698079109	43
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.succ_double_alt	40
Coq.Numbers.DecimalPos.double_succ	40
Coq.Numbers.DecimalPos.to_lu_succ	40
Coq.Numbers.DecimalPos.nat_iter_S	40	3	search with cache (only 1: auto).	0.0235629081726	11
Coq.Numbers.DecimalPos.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0189199447632	1
Coq.Numbers.DecimalPos.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.of_lu_0	40
Coq.Numbers.DecimalPos.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Nadd_alt	40
Coq.Numbers.DecimalPos.to_of_lu	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_uint_nonzero	40
Coq.Numbers.DecimalPos.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0317840576172	3
Coq.Numbers.DecimalPos.to_uint_inj	40
Coq.Numbers.DecimalPos.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.of_uint_norm	40
Coq.Numbers.DecimalPos.of_inj	40
Coq.Numbers.DecimalPos.of_iff	40
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_int_inj	40
Coq.Numbers.DecimalPos.to_int_pos_surj	40	0.2.1.0.2.1.0.6	search with cache (only 1: destruct (Pos.of_uint d) eqn:E; only 1: simpl norm; only 1: rewrite <- Unsigned.to_of; only 1: now rewrite E; only 1: simpl norm; only 1: rewrite <- Unsigned.to_of; only 1: exists p; only 1: now rewrite E).	17.7152249813	20548
Coq.Numbers.DecimalPos.of_int_norm	40
Coq.Numbers.DecimalPos.of_inj_pos	40
Coq.Numbers.DecimalNat.to_lu_succ	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.00717115402222	2
Coq.Numbers.DecimalNat.to_little_uint_succ	40
Coq.Numbers.DecimalNat.to_lu_equiv	40
Coq.Numbers.DecimalNat.to_uint_alt	40
Coq.Numbers.DecimalNat.of_lu_eqn	40	73.37.11	search with cache (only 1: revert d; only 1: intro H; only 1: now elim H).	34.6446089745	173272
Coq.Numbers.DecimalNat.of_lu_succ	40
Coq.Numbers.DecimalNat.of_to_lu	40
Coq.Numbers.DecimalNat.of_lu_revapp	40
Coq.Numbers.DecimalNat.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.of_uint_alt	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_lu_tenfold	40
Coq.Numbers.DecimalNat.of_lu_0	40
Coq.Numbers.DecimalNat.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.to_of_lu	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_uint_inj	40
Coq.Numbers.DecimalNat.to_uint_surj	40
Coq.Numbers.DecimalNat.of_uint_norm	40	0.0.0.0.0.0.0.0.0.0.0.10	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.721488952637	899
Coq.Numbers.DecimalNat.of_inj	40
Coq.Numbers.DecimalNat.of_iff	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_int_inj	40
Coq.Numbers.DecimalNat.to_int_pos_surj	40	1.0.0.1.0	search with cache (only 1: simpl; only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.0159480571747	7
Coq.Numbers.DecimalNat.of_int_norm	40
Coq.Numbers.DecimalNat.of_inj_pos	40
Coq.Numbers.DecimalN.of_to	40	4.8.1.6	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Unsigned.of_to).	0.866667985916	1339
Coq.Numbers.DecimalN.to_of	40	9.17.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: trivial).	1.80255293846	2707
Coq.Numbers.DecimalN.to_uint_inj	40
Coq.Numbers.DecimalN.to_uint_surj	40
Coq.Numbers.DecimalN.of_uint_norm	40	2	search with cache (only 1: now induction d).	0.0180430412292	3
Coq.Numbers.DecimalN.of_inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0209209918976	3
Coq.Numbers.DecimalN.of_iff	40	0.0.3.1.1	search with cache (only 1: split; only 1: apply DecimalPos.Unsigned.of_inj; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.14164018631	50
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_int_inj	40
Coq.Numbers.DecimalN.to_int_pos_surj	40	2.0.4.0.0	search with cache (only 1: simpl; only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: unfold N.to_int; only 1: exists (N.of_uint d); only 1: f_equal).	0.233149051666	207
Coq.Numbers.DecimalN.of_int_norm	40	13.1.2.1.5	search with cache (only 1: unfold N.to_int, N.of_int, norm; only 1: destruct d; only 1: f_equal; only 1: now induction d; only 1: now induction d).	28.852809906	30692
Coq.Numbers.DecimalN.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_add_opp	40	5.1	search with cache (only 1: intro n; only 1: solve_proper).	0.0132541656494	17
Coq.Numbers.Integer.NatPairs.ZNatPairs.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pair_wd	40	0.0.0.0.9.2	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold Reflexive, Z.eq; only 1: simpl in *; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	1.18341207504	308
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_wd	40	0.8.4.12.1.3.0.27	search with cache (only 1: intro n; only 1: unfold Reflexive, Z.eq; only 1: intros p IH; only 1: simpl in *; only 1: rewrite add_succ_l; only 1: rewrite add_succ_l; only 1: rewrite <- IH by (apply lt_le_incl; now apply le_succ_l); only 1: reflexivity).	34.4153928757	42314
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_wd	40	0.7.13.2.1.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: rewrite add_succ_r; only 1: nzsimpl; only 1: now rewrite H).	2.28097486496	2304
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_succ	40	1.27.3.11.5	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intro H1; only 1: simpl in *; only 1: nzsimpl; only 1: reflexivity).	23.8494758606	50418
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.112200021744	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.one_succ	40	8.5	search with cache (only 1: unfold Z.eq; only 1: now nzsimpl).	1.05790996552	583
Coq.Numbers.Integer.NatPairs.ZNatPairs.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0871860980988	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_0	40	1	search with cache (only 1: reflexivity).	0.0076470375061	2
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_succ	40	1.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: reflexivity).	0.0126099586487	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_0_l	40	0.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.110690832138	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_succ_l	40	14.0.1	search with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now rewrite add_succ_l).	9.95581412315	2114
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_0_r	40	0.1.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.110664129257	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_succ_r	40	0.0.1.2	search with cache (only 1: intros n m; only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.348562955856	39
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_0_l	40	0.0.1.1	search with cache (only 1: unfold Z.mul, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.229785919189	34
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_irrefl	40	0.25.0	search with cache (only 1: intros; only 1: apply le_ngt; only 1: now nzsimpl).	1.80489110947	2195
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_neg	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.5430560112	84
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0321691036224	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0313229560852	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_nonpos	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.153477907181	20
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_m1_0	40	0.34.10	search with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	4.56390380859	2790
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_r	40	0.23.1	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	38.5799248219	14594
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.odd_pred	40	0.8.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	1.39103794098	544
Coq.Numbers.Integer.Abstract.ZParity.even_pred	40	0.0.2.1.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0263221263885	14
Coq.Numbers.Integer.Abstract.ZParity.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_r	40	1.9.8.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: apply add_move_l; only 1: nzsimpl; only 1: now rewrite add_comm).	12.4403800964	7187
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_comm	40	0.22.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.94971704483	1108
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonneg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0251798629761	3
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonneg	40	0.0.11.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	9.57380008698	3027
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_neg	40	0.0.0.0.0.5.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	3.38382411003	1852
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_false	40	0.3.0.0.1.0.1.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: split).	5.72865200043	2551
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_bit0	40	0.0.0.0.25	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	4.38373303413	2471
Coq.Numbers.Integer.Abstract.ZBits.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_mod	40	0.12.0	search with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	1.99548411369	952
Coq.Numbers.Integer.Abstract.ZBits.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_mul_pow2	40	0.1.0.0.0.0.14.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	26.9247248173	12781
Coq.Numbers.Integer.Abstract.ZBits.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0	40	0.4.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: intros a n; only 1: destruct (le_gt_cases 0 n) as [Hn| Hn]; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: left; only 1: split; only 1: order; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2; only 1: rewrite shiftr_mul_pow2 by order; only 1: rewrite eq_mul_0; only 1: generalize (log2_nonneg a); only 1: order).	7.0842461586	2843
Coq.Numbers.Integer.Abstract.ZBits.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.div2_wd	40	0.0.1.1.4.0.2.15	search with cache (only 1: intros a; only 1: intros m Hm; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: trivial; only 1: order'; only 1: order').	8.42995595932	3084
Coq.Numbers.Integer.Abstract.ZBits.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0921928882599	3
Coq.Numbers.Integer.Abstract.ZBits.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0682799816132	3
Coq.Numbers.Integer.Abstract.ZBits.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0789680480957	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0963728427887	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_0_l	40	0.2.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite testbit_eqb; only 1: f_equiv; only 1: trivial).	0.197506904602	132
Coq.Numbers.Integer.Abstract.ZBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0264620780945	4
Coq.Numbers.Integer.Abstract.ZBits.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.land_0_l	40	13.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.83567404747	530
Coq.Numbers.Integer.Abstract.ZBits.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0269381999969	3
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0276739597321	5
Coq.Numbers.Integer.Abstract.ZBits.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_wd	40	0.6.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.164798021317	47
Coq.Numbers.Integer.Abstract.ZBits.clearbit_wd	40	0.6.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.165889024734	47
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_l	40	25.0.12	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	3.21270895004	4479
Coq.Numbers.Integer.Abstract.ZBits.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_l	40	9.0.4	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.516633987427	456
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0269958972931	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_l	40	0.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0716350078583	5
Coq.Numbers.Integer.Abstract.ZBits.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ones_equiv	40	3.1.14	search with cache (only 1: unfold ones; only 1: intros n; only 1: now rewrite shiftl_1_l).	4.44738984108	2313
Coq.Numbers.Integer.Abstract.ZBits.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_neg	40	0.5.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0737991333008	13
Coq.Numbers.Integer.Abstract.ZBits.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.div2_neg	40	0.3.3	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0379350185394	9
Coq.Numbers.Integer.Abstract.ZBits.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_nonneg	40	10.17.11.0	search with cache (only 1: intros a; only 1: unfold lnot; only 1: rewrite <- lt_succ_r, succ_pred; only 1: now apply opp_pos_neg).	11.7667930126	7494
Coq.Numbers.Integer.Abstract.ZBits.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj_wd	40	4.2.0.0.2.1.1	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro H; only 1: now f_equiv).	0.715790987015	606
Coq.Numbers.Integer.Abstract.ZBase.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_r	40	0.0.0.0.0.0.0.0.18.0	search with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).	10.0444829464	9913
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0509221553802	12
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_r	40	0.0.0.0.12.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	2.52128696442	1604
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.07532787323	20
Coq.Numbers.Integer.Abstract.ZGcd.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_rem	40	0.1.1.5.0	search with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	1.01387095451	264
Coq.Numbers.Integer.Abstract.ZLcm.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv1	40	0.1.2.4.5	search with cache (only 1: intros a b Hb; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: order; only 1: apply gcd_divide_r).	5.11846899986	1692
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_nonneg	40	18.0	search with cache (only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	1.86725497246	1329
Coq.Numbers.Integer.Abstract.ZLcm.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_l	40	0.0.1.0.0.1.5	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.417970895767	212
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0353219509125	10
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l_nonneg	40	0.1.0.2.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0371041297913	10
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r_nonneg	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0253059864044	7
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag_nonneg	40	0.1.1.0.0.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0249559879303	10
Coq.Numbers.Integer.Abstract.ZLcm.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_eq_r	40	0.3.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: apply divide_refl; only 1: trivial).	0.0254719257355	9
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_iff	40	1.2.2.1.0.0.0.0.1.0.0.2.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	10.3566920757	8929
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0299470424652	6
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_l	40	0.0.0.4.0.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	3.758010149	2663
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_r	40	0.0.0.0.11.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	1.3512430191	881
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l	40	0.2.0.5.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	1.05280399323	467
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r	40	0.2.5.0.0.2.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	4.53062796593	2581
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag	40	0.2.0.0.6.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	2.54342699051	1342
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r_nonneg	40	0.9.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	7.2526268959	753
Coq.Numbers.Integer.Abstract.ZLcm.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_min_distr	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	0.587544202805	240
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono).	2.49366784096	1132
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_l	40	0.0.0.2.0.0.0.3.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	4.92964506149	1813
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.29395413399	939
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_r	40	0.0.0.9.0.0.0.10.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	12.0831100941	9227
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	10.8199589252	7132
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_l	40	0.0.0.3.0.0.0.4.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	4.90151500702	3010
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.56502008438	756
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_r	40	3.0.0.0.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r).	3.53197193146	1875
Coq.Numbers.Integer.Abstract.ZLt.neg_pos_cases	40	1.0.7.0.19.15.13	search with cache (only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order; only 1: intuition order).	26.4682610035	17834
Coq.Numbers.Integer.Abstract.ZLt.nonpos_pos_cases	40	0.0.0.46.18	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	11.4060540199	17429
Coq.Numbers.Integer.Abstract.ZLt.neg_nonneg_cases	40	1.1.1.41.8.0	search with cache (only 1: intro; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	6.2071659565	10084
Coq.Numbers.Integer.Abstract.ZLt.nonpos_nonneg_cases	40	0.0.3	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.041522026062	6
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_l	40	8.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.136594057083	53
Coq.Numbers.Integer.Abstract.ZLt.le_pred_l	40	14.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	0.456276893616	451
Coq.Numbers.Integer.Abstract.ZLt.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.nle_pred_r	40	1.4.4	search with cache (only 1: intro LS'; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	0.286734104156	206
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_le	40	0.9.6.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_succ_r; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	16.2500331402	5827
Coq.Numbers.Integer.Abstract.ZLt.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.le_le_pred	40	2.0.1.3	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.196844100952	68
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt	40	6.1.1.6.0.1	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: intuition order).	6.29026985168	3595
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt	40	1.15.1	search with cache (only 1: intros n m; only 1: rewrite <- lt_le_pred; only 1: intuition order).	7.86799097061	5335
Coq.Numbers.Integer.Abstract.ZLt.pred_lt_mono	40	0.1.3.6.4.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite lt_succ_r; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	14.7991080284	5612
Coq.Numbers.Integer.Abstract.ZLt.pred_le_mono	40	0.1.0.2.20.3	search with cache (only 1: intros; only 1: rewrite <- lt_le_pred; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	18.2429749966	11176
Coq.Numbers.Integer.Abstract.ZLt.lt_succ_lt_pred	40	1.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0203928947449	5
Coq.Numbers.Integer.Abstract.ZLt.le_succ_le_pred	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0484161376953	6
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt_succ	40	0.1.0.7.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	0.89394903183	363
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt_succ	40	2.1.3.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.153082132339	40
Coq.Numbers.Integer.Abstract.ZLt.neq_pred_l	40	20.6.0.0	search with cache (only 1: intro; only 1: apply lt_gt_cases; only 1: rewrite lt_le_pred; only 1: now left).	17.970676899	23280
Coq.Numbers.Integer.Abstract.ZLt.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos	40	1.6.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order').	2.14299488068	557
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0179059505463	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_nonneg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0243330001831	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0	40	0.0.7	search with cache (only 1: rewrite abs_neq; only 1: now nzsimpl; only 1: order).	0.0221180915833	16
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_or_opp	40	0.3.8.2.2	search with cache (only 1: intros; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).	1.78676891327	1056
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_or_opp_abs	40	0.1.19.13.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: apply add_move_0_r; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag).	23.7109401226	26293
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_involutive	40	1.8.0	search with cache (only 1: intros; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.262603998184	193
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0200788974762	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_square	40	3.2.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.265672922134	95
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_0	40	0.0.0	search with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0110731124878	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_sgn	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct_sgn x; only 1: rewrite sgn_pos; only 1: auto with relations; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.0355179309845	10
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_pos	40	0.0.1.0	search with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).	0.0948400497437	34
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt_upper_bound	40	0.0.0.7.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	0.802858114243	570
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.030424118042	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_l	40	0.0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.53365802765	388
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_pos	40	0.0.0.0.0.1.0.0.0.0.1	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	1.04410505295	473
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0249152183533	4
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique	40	0.1.0.0.1.0.1.0.1.0.2.2.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	28.8652770519	14041
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_pos	40	0.3.1.0.0.1.0.0.2.1	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	3.10460209846	2039
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0257649421692	4
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_or	40	0.0.1.0.1.0.9.6	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: apply mod_pos_bound; only 1: order; only 1: right; only 1: apply mod_neg_bound; only 1: order).	23.4405629635	21740
Coq.Numbers.Integer.Abstract.ZDivFloor.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small	40	1.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0472900867462	8
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small	40	1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.125086069107	32
Coq.Numbers.Integer.Abstract.ZDivFloor.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_r	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.153145074844	53
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0252511501312	5
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0255191326141	5
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mul	40	0.0.0.1.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	4.20764803886	2240
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_exact	40	0.0.3.2.0.0.0.0.0.20	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: intuition order; only 1: nzsimpl; only 1: now try split).	3.73096990585	2101
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.345190048218	111
Coq.Numbers.Integer.Abstract.ZDivFloor.div_pos	40	0.0.1.0	search with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.602279901505	81
Coq.Numbers.Integer.Abstract.ZDivFloor.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.496037960052	117
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_le	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: trivial).	0.0595200061798	13
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_gt	40	0.0.3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: auto).	0.0665678977966	15
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0352458953857	4
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0318870544434	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0337448120117	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0424571037292	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	25.5081980228	8348
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_add	40	0.0.5.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.88626098633	1314
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.095556974411	8
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.0319049358368	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_l	40	0.0.3.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: order).	0.962335109711	128
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	2.28125905991	491
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_r	40	1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.39432311058	43
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_r	40	0.1.3	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l).	0.456752061844	92
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod	40	0.0.3.0.7	search with cache (only 1: intros a b Hb H; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	6.28189897537	2448
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_r	40	0.1.0.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0343148708344	5
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0337688922882	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.rem_mul_r	40	1.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	1.31645989418	249
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0612559318542	8
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_succ_l	40	8.1.1.3.2.0	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: nzsimpl; only 1: rewrite <- add_opp_r; only 1: now f_equiv).	8.00098800659	3706
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_l	40	0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.035248041153	5
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_r	40	0.23.10	search with cache (only 1: intro m; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag).	10.231251955	6142
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_l	40	0.0.0.0.1.3.7.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	6.10383987427	3555
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj_wd	40	0.0.0.1.0.0.1	search with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	0.0462679862976	9
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0211730003357	2
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_distr	40	0.5.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.215928792953	22
Coq.Numbers.Integer.Abstract.ZAdd.sub_sub_distr	40	1.7.2.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	1.17195796967	320
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_l	40	5.1.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.654273986816	192
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_r	40	0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0291340351105	3
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_l	40	2.18.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	3.09397602081	2382
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_r	40	0.1.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0409309864044	4
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_l	40	1.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.150715112686	22
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_l	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0308749675751	3
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_r	40	0.5.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.0431821346283	8
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_l	40	0.0.2.11.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	9.082654953	2908
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_r	40	2.0.0.3	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.168704032898	29
Coq.Numbers.Integer.Abstract.ZAdd.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0256078243256	2
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_l	40	2.17.0	search with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	4.15007305145	2125
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_r	40	0.33.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	6.83322906494	4876
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_same	40	1.5.0.0.15.1.9	search with cache (only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: now nzsimpl).	5.63551688194	14690
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_same	40	0.1.7.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.351167201996	281
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small	40	0.2.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.197920084	63
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small	40	0.2.2.0	search with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.208763122559	79
Coq.Numbers.Integer.Abstract.ZDivEucl.div_0_l	40	0.0.0.0.1.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.117004871368	37
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_r	40	1.0.0.4.0.0.10.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	8.55792403221	9651
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_r	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0346460342407	10
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0123240947723	5
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0110630989075	5
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.0278000831604	9
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique_exact	40	0.0.1.5.0.16	search with cache (only 1: intuition; only 1: apply Private_NZDiv.div_unique with 0; only 1: rewrite abs_pos; only 1: now try split; only 1: nzsimpl; only 1: now try split).	4.70413994789	3422
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_pos	40	0.0.1.0	search with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.390285968781	89
Coq.Numbers.Integer.Abstract.ZDivEucl.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.263642072678	117
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_div_le	40	3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	0.0975470542908	23
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_succ_div_gt	40	0.0.4.2.9.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_always_pos a b); only 1: order; only 1: rewrite abs_eq in *; only 1: auto; only 1: order).	35.9108660221	16332
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0195119380951	4
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt_upper_bound	40	0.4.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.233454942703	119
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0195441246033	7
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0238080024719	6
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	22.6485571861	8398
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_add	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0956349372864	37
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0391049385071	8
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.0162780284882	6
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_l	40	3.4.2	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	2.43915510178	837
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_r	40	1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.243840932846	45
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_r	40	0.1.3	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l).	0.280407190323	95
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod	40	0.0.3.0.7	search with cache (only 1: intros a b Hb Hab; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	4.59824705124	2337
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto).	0.0163230895996	5
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto; only 1: auto).	0.0156049728394	6
Coq.Numbers.Integer.Abstract.ZDivEucl.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul_r	40	0.0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.8403840065	219
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_le	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0367829799652	9
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	10.9	search with cache (only 1: intros a n Hn; only 1: Z.order).	0.504565000534	968
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.120625019073	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	3.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0363011360168	6
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0366311073303	3
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0.0	search with cache (only 1: destruct x; only 1: auto).	0.0317590236664	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.5.1	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0410919189453	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0474519729614	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.0.0.0.1.1	search with cache (only 1: intros n; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now f_equal).	0.045704126358	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	1.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0509560108185	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0398070812225	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.1	search with cache (only 1: destruct x; only 1: auto).	1.04977893829	12
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0391490459442	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.1.0.1.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: auto).	0.0596640110016	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	2.3.3.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	1.02684187889	595
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	4.4.18.0.2.4	search with cache (only 1: destruct x; only 1: intros; only 1: simpl in *; only 1: compute; only 1: rewrite H; only 1: auto).	6.80806303024	6902
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.1.6	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.1149289608	14
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0.4.0.0	search with cache (only 1: intros; only 1: destruct x; only 1: compute; only 1: auto).	0.0433919429779	8
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	3.0	search with cache (only 1: intros; only 1: auto).	0.0305860042572	5
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	3.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0364501476288	7
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	2.0.3.0	search with cache (only 1: intros; only 1: destruct x; only 1: compute; only 1: auto).	0.0455560684204	9
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0388519763947	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0236039161682	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0227949619293	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: reflexivity).	0.0229539871216	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0227401256561	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0224850177765	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.13	search with cache (only 1: simpl; only 1: reflexivity).	1.32676696777	75
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	0	search with cache (only 1: auto).	0.022931098938	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	2.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.161414861679	55
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0287349224091	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.5.0	search with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.102519989014	15
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	0.0.0	search with cache (only 1: unfold sub31; only 1: intros; only 1: apply phi_phi_inv).	0.0357780456543	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0304141044617	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	2.0.0.0	search with cache (only 1: unfold sub31; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: auto with zarith).	0.0532810688019	6
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0299079418182	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	0.1.10.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: intros; only 1: nia).	20.7609288692	5415
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0571179389954	7
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40	0.6.0.0.0.1.1.0.0	search with cache (only 1: intros Hi Hj; only 1: assert (Hij : 0 <= i / j) by (apply Z_div_pos; auto with zarith); only 1: pattern i at 1; only 1: pattern i at 1; only 1: rewrite (Z_div_mod_eq i j); only 1: case (Z_mod_lt i j); only 1: auto with zarith; only 1: nia; only 1: auto with zarith).	31.9443268776	12436
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	8	search with cache (only 1: lia).	0.0494379997253	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0416169166565	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0421199798584	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.3.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0487129688263	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.0.3.0.0.0.6.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: easy; only 1: auto with zarith).	3.50273013115	2833
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	1.6.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.430910110474	189
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0	search with cache (only 1: auto).	0.0239799022675	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	8.1.0.5	search with cache (only 1: intros; only 1: unfold eq0, to_Z in *; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	1.31492900848	596
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	2.8.4.0.0	search with cache (only 1: intros; only 1: unfold sub_c, to_Z, interp_carry; only 1: rewrite Zminus_mod_idemp_r; only 1: rewrite <- Zminus_mod_idemp_l; only 1: auto).	3.11832690239	1969
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	1.3.0.0.1	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite <- Zplus_mod_idemp_l; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.126091003418	17
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	4.02708292007	976
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	6.1.3	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: now apply Z.pow_pos_nonneg).	0.106361865997	91
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	0.3	search with cache (only 1: intros h; only 1: now Z.nzsimpl).	0.0521550178528	5
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	4	search with cache (only 1: reflexivity).	0.0721981525421	5
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: now subst).	0.0197880268097	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: trivial).	0.0195851325989	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	77	search with cache (only 1: congruence).	1.15826916695	4081
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	3.1.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0838401317596	7
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.059849023819	16
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	0.0.0.0.0.6.0.2.1.3.3	search with cache (only 1: intros; only 1: generalize (eqb_correct i i); only 1: generalize (eqb_correct i i); only 1: generalize (eqb_correct i i); only 1: intros; only 1: compute; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).	2.945966959	3576
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.0.0	search with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.0359330177307	6
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	12.0.0	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: apply f_equal).	0.318228960037	259
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.0203101634979	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	search with cache (only 1: apply sub_spec).	0.0336198806763	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0220460891724	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.4.18	search with cache (only 1: symmetry; only 1: subst; only 1: trivial).	0.299736022949	295
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40	0.0.0.15.37.0	search with cache (only 1: unfold eqm; only 1: rewrite Zmod_small; only 1: rewrite Zmod_small; only 1: apply to_Z_inj; only 1: apply to_Z_rec_bounded; only 1: apply to_Z_rec_bounded).	6.76172685623	9611
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.046422958374	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	5.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: auto with zarith).	0.0301630496979	8
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	6.0.0	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: now case eqbP).	0.0319950580597	9
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	4.1.1.0	search with cache (only 1: unfold is_even; only 1: apply eq_sym; only 1: apply eq_sym; only 1: auto).	0.050705909729	17
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_comm	40	1.30.0.7	search with cache (only 1: intros t w0; only 1: zify; only 1: f_equal; only 1: auto with zarith).	6.7358520031	11307
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_comm	40	2.33.0.6	search with cache (only 1: intros f w; only 1: zify; only 1: f_equal; only 1: auto with zarith).	8.28641200066	12893
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_correct	40	2.2.0.7.0.0.0.3	search with cache (only 1: intros f w; only 1: unfold eqb, eq; only 1: rewrite ZnZ.spec_compare; only 1: case Z.compare_spec; only 1: intros; only 1: easy || lia; only 1: easy || lia; only 1: easy || lia).	2.2951169014	2393
Coq.Numbers.Cyclic.Abstract.NZCyclic.eq_equiv	40	15.0.6.7.7.40.6.39	search with cache (only 1: generalize 1%positive; only 1: intros; only 1: split; only 1: easy; only 1: easy; only 1: intros l; only 1: intros; only 1: congruence).	20.4303898811	37020
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_1	40	12	search with cache (only 1: now apply Z.pow_gt_1).	0.107900857925	46
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_0	40	2.0	search with cache (only 1: unfold base; only 1: auto with zarith).	0.0414299964905	15
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_succ	40	0.1.0.5.0.1	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: auto with zarith; only 1: split; only 1: auto with zarith; only 1: apply gt_wB_1).	0.809885978699	117
Coq.Numbers.Cyclic.Abstract.NZCyclic.two_succ	40	5.1.0	search with cache (only 1: zify; only 1: rewrite <- one_mod_wB  at 2; only 1: now rewrite one_mod_wB).	0.508081912994	23
Coq.Numbers.Cyclic.Abstract.NZCyclic.B0	40	5	search with cache (only 1: auto).	0.0519840717316	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_0_l	40	3.0.0	search with cache (only 1: intro n; only 1: zify; only 1: apply NZ_to_Z_mod).	0.0724880695343	11
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_0_l	40	0.1.2.2.3.0.0	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: split; only 1: auto with zarith; only 1: pose proof gt_wB_1; only 1: lia).	1.49537205696	586
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.DecimalString.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.usu_nil	40	0.6	search with cache (only 1: simpl; only 1: auto).	0.0117700099945	8
Coq.Numbers.DecimalString.usu_gen	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.isi_posnil	40	3.0	search with cache (only 1: simpl; only 1: auto).	0.0108969211578	5
Coq.Numbers.DecimalString.isi_negnil	40	2.0	search with cache (only 1: simpl; only 1: auto).	0.0108451843262	4
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.nlt_0_r	40	6.2.3	search with cache (only 1: intro n; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.472043991089	378
Coq.Numbers.Natural.Abstract.NOrder.nle_succ_0	40	0.2.10.0	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.536416053772	670
Coq.Numbers.Natural.Abstract.NOrder.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_0_succ	40	0.2.2	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0275089740753	7
Coq.Numbers.Natural.Abstract.NOrder.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.eq_0_gt_0_cases	40	0.2.0.3.0	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.0330488681793	10
Coq.Numbers.Natural.Abstract.NOrder.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_r	40	0.0.0.0.0.0.0.2.1.3	search with cache (only 1: setoid_rewrite one_succ; only 1: intros n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: now apply eq_le_incl).	1.39558696747	1801
Coq.Numbers.Natural.Abstract.NOrder.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.succ_pred_pos	40	0.0.0.0.1.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intros; only 1: now rewrite pred_succ).	0.0460789203644	21
Coq.Numbers.Natural.Abstract.NOrder.le_pred_l	40	0.1.5.0.0.2.1	search with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: rewrite pred_succ; only 1: apply le_le_succ_r; only 1: now apply eq_le_incl).	0.676865100861	705
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_l	40	0.0.5.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.974514961243	467
Coq.Numbers.Natural.Abstract.NOrder.le_le_pred	40	0.3.1.0.1.0.1.0	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_succ_l in H; only 1: now apply lt_le_incl).	0.958256959915	644
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_pred	40	0.0.0.0.4.1.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: trivial; only 1: intros; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	0.650943040848	384
Coq.Numbers.Natural.Abstract.NOrder.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_le	40	0.0.2.7.2.1.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros m IH; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	4.843542099	5792
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt	40	4.0.0.0.1.3.8	search with cache (only 1: intro H; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply lt_lt_succ_r).	8.09817910194	8298
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le	40	0.0.7.0.0.1.0.1	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intro p; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r).	2.7845480442	2722
Coq.Numbers.Natural.Abstract.NOrder.pred_le_mono	40	1.0.0.0.3.0.4.0.3.1	search with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: order; only 1: clear m H; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: assumption).	9.3731379509	10819
Coq.Numbers.Natural.Abstract.NOrder.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.le_succ_le_pred	40	0.4.0.1.0.2.0.0.1	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_succ_l in H; only 1: now apply lt_succ_r).	3.11796689034	2656
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt_succ	40	0.3.1.0.1.2	search with cache (only 1: cases ltac:(n); only 1: intros n m; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite <- succ_lt_mono; only 1: now rewrite pred_succ).	1.29387593269	950
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique_exact	40	0.0.2.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.0545570850372	19
Coq.Numbers.Natural.Abstract.NDiv.div_same	40	3.1.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl).	0.057314157486	14
Coq.Numbers.Natural.Abstract.NDiv.mod_same	40	1.0.2.3.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0913529396057	51
Coq.Numbers.Natural.Abstract.NDiv.div_small	40	1.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: now nzsimpl).	0.0394380092621	7
Coq.Numbers.Natural.Abstract.NDiv.mod_small	40	1.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0391790866852	7
Coq.Numbers.Natural.Abstract.NDiv.div_0_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0184969902039	3
Coq.Numbers.Natural.Abstract.NDiv.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0186901092529	4
Coq.Numbers.Natural.Abstract.NDiv.div_1_r	40	1.1.18.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: apply lt_0_1; only 1: now nzsimpl).	2.69676303864	5358
Coq.Numbers.Natural.Abstract.NDiv.mod_1_r	40	1.1.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0717208385468	27
Coq.Numbers.Natural.Abstract.NDiv.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0170199871063	3
Coq.Numbers.Natural.Abstract.NDiv.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0163650512695	3
Coq.Numbers.Natural.Abstract.NDiv.div_mul	40	0.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	0.029482126236	8
Coq.Numbers.Natural.Abstract.NDiv.mod_mul	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.106375217438	27
Coq.Numbers.Natural.Abstract.NDiv.mod_le	40	0.0.8.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0911090373993	76
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.475655794144	124
Coq.Numbers.Natural.Abstract.NDiv.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos_iff	40	2.6.1.0.1.0.1.0.1.0.1	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	5.75589895248	5930
Coq.Numbers.Natural.Abstract.NDiv.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_mono	40	3.0.9.1.13	search with cache (only 1: intro; only 1: intros n m p H; only 1: apply div_le_mono; only 1: auto'; only 1: auto').	7.85791993141	8535
Coq.Numbers.Natural.Abstract.NDiv.mul_div_le	40	0.0.4.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0549058914185	16
Coq.Numbers.Natural.Abstract.NDiv.mul_succ_div_gt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0505690574646	7
Coq.Numbers.Natural.Abstract.NDiv.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0335559844971	4
Coq.Numbers.Natural.Abstract.NDiv.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_upper_bound	40	0.0.0.0.0.19.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto; only 1: auto').	35.2993190289	30287
Coq.Numbers.Natural.Abstract.NDiv.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.mod_add	40	0.0.0.1.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.751701831818	358
Coq.Numbers.Natural.Abstract.NDiv.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0955259799957	7
Coq.Numbers.Natural.Abstract.NDiv.div_add_l	40	1.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.033518075943	7
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_r	40	0.0.0.2.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.290079832077	87
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_l	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.120003938675	34
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_r	40	0.0.0.2.0.1.1.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	2.5397810936	772
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_l	40	0.0.0.2.0.2.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.57930803299	502
Coq.Numbers.Natural.Abstract.NDiv.mod_mod	40	1.0.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0537459850311	6
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_l	40	0.0.0.4.1	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.56520318985	82
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_r	40	0.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.0317869186401	5
Coq.Numbers.Natural.Abstract.NDiv.mul_mod	40	0.0.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0325939655304	7
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_l	40	0.0.0.3.1	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.260663032532	35
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0316250324249	5
Coq.Numbers.Natural.Abstract.NDiv.add_mod	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0325400829315	6
Coq.Numbers.Natural.Abstract.NDiv.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.mod_mul_r	40	0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.451658010483	62
Coq.Numbers.Natural.Abstract.NDiv.div_mul_le	40	1.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0662851333618	10
Coq.Numbers.Natural.Abstract.NDiv.mod_divides	40	0.0.0.0.1.0.0.0.1.0	search with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	1.03139901161	269
Coq.Numbers.Natural.Abstract.NBase.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.induction	40
Coq.Numbers.Natural.Abstract.NBase.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0316390991211	7
Coq.Numbers.Natural.Abstract.NBase.neq_0	40	11.0	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.116192102432	125
Coq.Numbers.Natural.Abstract.NBase.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.zero_or_succ	40	0.27.0.33.0	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: now exists n).	6.57675814629	22057
Coq.Numbers.Natural.Abstract.NBase.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.succ_pred	40	1.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.0357391834259	7
Coq.Numbers.Natural.Abstract.NBase.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.double_induction	40	8.18.0.0.6.0.0	search with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: induct ltac:(m); only 1: trivial; only 1: auto).	16.1068520546	18697
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_0	40	0.0.5.1	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.0225899219513	10
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_succ	40	0.0.0.1.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: reflexivity; only 1: auto; only 1: f_equiv').	0.0331201553345	7
Coq.Numbers.Natural.Abstract.NDefOps.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_0_l	40	3.0.4	search with cache (only 1: intro H; only 1: unfold def_add; only 1: now rewrite recursion_0).	0.0331189632416	23
Coq.Numbers.Natural.Abstract.NDefOps.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_0_r	40	0.4.9	search with cache (only 1: unfold def_mul; only 1: intro m; only 1: now rewrite recursion_0).	0.16626906395	346
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_succ_r	40	0.1.0.0.1.1	search with cache (only 1: intros x y; only 1: unfold def_mul; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: reflexivity; only 1: f_equiv').	4.08198404312	62
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_base	40	0.2.2.1	search with cache (only 1: intros; only 1: unfold ltb; only 1: rewrite recursion_0; only 1: f_equiv').	4.05107116699	16
Coq.Numbers.Natural.Abstract.NDefOps.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0_succ	40	3.3.6.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.65793299675	658
Coq.Numbers.Natural.Abstract.NDefOps.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.even_0	40	0.9	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0248079299927	21
Coq.Numbers.Natural.Abstract.NDefOps.even_succ	40	1.0.0	search with cache (only 1: intro n; only 1: unfold even; only 1: now rewrite recursion_succ).	0.0257840156555	4
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.half_0	40	0.0.0.0	search with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	0.0214438438416	4
Coq.Numbers.Natural.Abstract.NDefOps.half_1	40	0.0.0.3.2.0.1	search with cache (only 1: setoid_rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl in *; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	0.613445997238	348
Coq.Numbers.Natural.Abstract.NDefOps.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_0	40	0.4.5	search with cache (only 1: intro n; only 1: unfold pow; only 1: now rewrite recursion_0).	0.138255834579	87
Coq.Numbers.Natural.Abstract.NDefOps.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_l	40	0.0.1.7.12	search with cache (only 1: intros p n m; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l).	9.66367197037	5858
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_r	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0525929927826	15
Coq.Numbers.Natural.Abstract.NMulOrder.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.b2n_proper	40	0.4	search with cache (only 1: intros a a' Ha; only 1: now rewrite ?Ha).	0.159688949585	92
Coq.Numbers.Natural.Abstract.NBits.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.testbit_false	40	0.3.0.0.2.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: split).	3.21409106255	1526
Coq.Numbers.Natural.Abstract.NBits.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.b2n_bit0	40	0.0.0.0.25	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	4.49262714386	2664
Coq.Numbers.Natural.Abstract.NBits.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.bits_0	40	0.0.0.1.2.0.4.10	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	0.686850070953	545
Coq.Numbers.Natural.Abstract.NBits.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0500221252441	10
Coq.Numbers.Natural.Abstract.NBits.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.div2_bits	40	0.2.3.17.0	search with cache (only 1: intros a n; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: now nzsimpl).	3.19272518158	2700
Coq.Numbers.Natural.Abstract.NBits.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.014927148819	2
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.testbit_eqf	40	0.3.1.2.2	search with cache (only 1: repeat red; only 1: intros a n m H; only 1: apply b2n_inj; only 1: do 2 f_equiv; only 1: trivial).	1.37357783318	405
Coq.Numbers.Natural.Abstract.NBits.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_r	40	0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.0532920360565	4
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_l	40	1.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.13068819046	21
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.0393440723419	5
Coq.Numbers.Natural.Abstract.NBits.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0	40	0.0.0.0.2.1	search with cache (only 1: intros a n H; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.696084022522	166
Coq.Numbers.Natural.Abstract.NBits.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.div2_wd	40	0.1.4.0.0.1.4	search with cache (only 1: repeat red; only 1: intros a; only 1: intros; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: trivial).	5.83542084694	2822
Coq.Numbers.Natural.Abstract.NBits.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0648121833801	5
Coq.Numbers.Natural.Abstract.NBits.lor_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0659120082855	5
Coq.Numbers.Natural.Abstract.NBits.ldiff_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.197000980377	5
Coq.Numbers.Natural.Abstract.NBits.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0254218578339	3
Coq.Numbers.Natural.Abstract.NBits.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_0_l	40	1.4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite testbit_eqb; only 1: now nzsimpl).	0.0525109767914	9
Coq.Numbers.Natural.Abstract.NBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0260818004608	4
Coq.Numbers.Natural.Abstract.NBits.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.land_0_l	40	0.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: now try order').	0.0297691822052	9
Coq.Numbers.Natural.Abstract.NBits.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.025600194931	3
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0260391235352	5
Coq.Numbers.Natural.Abstract.NBits.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.setbit_wd	40	0.0.0.9	search with cache (only 1: unfold setbit; only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	1.59900283813	478
Coq.Numbers.Natural.Abstract.NBits.clearbit_wd	40	0.10	search with cache (only 1: unfold clearbit; only 1: solve_proper).	0.861943006516	229
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.ones_equiv	40	0.1.29	search with cache (only 1: unfold ones; only 1: intros; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	35.3860461712	15488
Coq.Numbers.Natural.Abstract.NBits.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_high	40	0.0.0.1.0.0.0.0.0.0.1.1.8	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	20.2050421238	9284
Coq.Numbers.Natural.Abstract.NBits.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.lnot_0_l	40	0.0.6.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	0.20294713974	56
Coq.Numbers.Natural.Abstract.NBits.lnot_ones	40	0.1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0265371799469	5
Coq.Numbers.Natural.Abstract.NBits.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag	40	0.0.1.0.0.0.5.1.1.0.1	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	4.78947997093	4060
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_r	40	0.0.0.9	search with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	1.38572502136	805
Coq.Numbers.Natural.Abstract.NBits.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.hom_nat_iso	40	0.0.1.0.0.0.0.10.1.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.377581834793	631
Coq.Numbers.Natural.Abstract.NIso.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_square	40	9.1.6	search with cache (only 1: intros EQ; only 1: apply sqrt_square; only 1: apply le_0_l).	0.599030017853	569
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.odd_pred	40	0.0.0.0.1.1.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.299016952515	113
Coq.Numbers.Natural.Abstract.NParity.even_pred	40	2.0.3.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.761703968048	419
Coq.Numbers.Natural.Abstract.NParity.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_l	40	0.0.0.0.3.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.530696153641	172
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_l	40	13	search with cache (only 1: apply lt_lt_add_r).	3.72341012955	1003
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_r	40	6.1.2	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	1.40893697739	385
Coq.Numbers.Natural.Abstract.NPow.pow_succ_r'	40	0.7.1.7	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	2.64747619629	773
Coq.Numbers.Natural.Abstract.NPow.pow_0_l	40	0.0.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0198419094086	6
Coq.Numbers.Natural.Abstract.NPow.pow_1_l	40	8.5.10.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	1.96643090248	1198
Coq.Numbers.Natural.Abstract.NPow.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	3.19529891014	1151
Coq.Numbers.Natural.Abstract.NPow.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l	40	2.2.1.4.0.12.3	search with cache (only 1: intros a Ha; only 1: intros b Hb IH; only 1: apply pow_lt_mono_l; only 1: auto'; only 1: split; only 1: auto'; only 1: trivial).	13.0763728619	12246
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l	40	0.0.0.0.0.0.0.0.0.6.0.2.5	search with cache (only 1: intros; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H).	20.5062460899	11787
Coq.Numbers.Natural.Abstract.NPow.pow_gt_1	40	0.2.0.0.0.0.0	search with cache (only 1: intros a b Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: auto'; only 1: order').	0.0296339988708	9
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono	40	0.0.0.5.0.0.1	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.414288043976	310
Coq.Numbers.Natural.Abstract.NPow.pow_inj_l	40	0.3.0.0.2.3.5	search with cache (only 1: intros; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	1.06314611435	1461
Coq.Numbers.Natural.Abstract.NPow.pow_inj_r	40	0.2.0.0.3.0.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.390899896622	268
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l_iff	40	1.0.2.5.0.0.1.0.0.0.4	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: auto'; only 1: eauto; only 1: intro LT; only 1: destruct (le_gt_cases b a) as [LE| GT]; only 1: assert (b ^ c <= a ^ c) by (apply Private_NZPow.pow_le_mono_l; try split; order); only 1: order; only 1: trivial).	4.15047621727	4493
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l_iff	40	0.2.1.5.0.8.0.6	search with cache (only 1: intros; only 1: split; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intro LE; only 1: destruct (le_gt_cases a b) as [LE'| GT]; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	9.86689782143	7379
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r_iff	40	0.0.2.0.0.0.0.0.5	search with cache (only 1: intros a b c Hc; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	0.903898954391	528
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r_iff	40	0.1.1.0.0.0.5.3.0.0.6	search with cache (only 1: intros; only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: order'; only 1: intro LE; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	8.47711205482	5589
Coq.Numbers.Natural.Abstract.NPow.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_l	40	1.0.0.0.1.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).	5.94540500641	1606
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_r	40	0.1.0.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	8.24850201607	2592
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_l	40	0.0.0.3.0.0.0.2.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	7.28581500053	1829
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_r	40	1.0.0.1.1.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	5.72147202492	1755
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	3.6845099926	2137
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_l	40	2.0.0.3.2.0.0.2.3.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	8.33547711372	4409
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	1.23818802834	543
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_alt	40	0	search with cache (only 1: solve_proper).	0.011735200882	1
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0	40	0.0.0.0.1.0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	30.9299709797	367
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0_any	40	0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	2.07506585121	23
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_l	40	1.3.3	search with cache (only 1: intros n; only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.0331890583038	24
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_l	40	0.0.1.2.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: now nzsimpl; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.250129938126	177
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.035542011261	10
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_l	40	0.1.0.0.3.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	0.138790845871	104
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_r	40	0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0357999801636	9
Coq.Numbers.Natural.Abstract.NLcm.lcm_diag	40	0.1.1.1.0.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.0600960254669	50
Coq.Numbers.Natural.Abstract.NLcm.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_eq_r	40	0.1.5.0	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	0.0275452136993	18
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_iff	40	1.2.0.1.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	3.03827500343	2740
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_r	40	0.4.5.0	search with cache (only 1: intros n m p LE; only 1: apply le_sub_le_add_r; only 1: rewrite LE; only 1: auto using sub_add_le).	0.863597154617	560
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.sqrt_square	40	0.0.1.0.0.0.0.5.0.1.2.1.1	search with cache (only 1: intros b LT; only 1: apply sqrt_unique; only 1: rewrite mul_succ_l, <- (add_0_r b²); only 1: split; only 1: now apply add_le_mono_l; only 1: nzsimpl; only 1: apply lt_succ_r; only 1: rewrite <- add_assoc; only 1: rewrite <- add_0_r  at 1; only 1: apply add_le_mono_l; only 1: apply add_nonneg_nonneg; only 1: trivial; only 1: trivial).	9.61790704727	4632
Coq.Numbers.NatInt.NZSqrt.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_0	40	0.0.0.0.0.0.1	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: order; only 1: now nzsimpl).	0.0354480743408	8
Coq.Numbers.NatInt.NZSqrt.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn	40	0.1.1.0.0.2.1	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros EQ; only 1: order; only 1: order).	0.144984006882	104
Coq.Numbers.NatInt.NZSqrt.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_nonneg	40	0.3.14.0.0.0.1	search with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	2.45756793022	2136
Coq.Numbers.NatInt.NZSqrt.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_0	40	0.1.5	search with cache (only 1: rewrite sqrt_up_eqn0; only 1: reflexivity; only 1: order).	0.0619781017303	30
Coq.Numbers.NatInt.NZSqrt.sqrt_up_1	40	4.4.4.1.0.14.2	search with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: order'; only 1: order'; only 1: order').	9.2706258297	10578
Coq.Numbers.NatInt.NZSqrt.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.div_unique	40
Coq.Numbers.NatInt.NZDiv.mod_unique	40	0.0.0.1.0.0.1.0.3.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.635960102081	407
Coq.Numbers.NatInt.NZDiv.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.div_same	40	0.0.0.0.0.7.8	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: solve_proper).	0.2224650383	306
Coq.Numbers.NatInt.NZDiv.mod_same	40
Coq.Numbers.NatInt.NZDiv.div_small	40
Coq.Numbers.NatInt.NZDiv.mod_small	40
Coq.Numbers.NatInt.NZDiv.div_0_l	40	1.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.268136024475	100
Coq.Numbers.NatInt.NZDiv.mod_0_l	40	1.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.229890823364	58
Coq.Numbers.NatInt.NZDiv.div_1_r	40	0.0.0.1.0.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	1.60157203674	1148
Coq.Numbers.NatInt.NZDiv.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.div_1_l	40	3.0.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.0786211490631	42
Coq.Numbers.NatInt.NZDiv.mod_1_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.106837034225	54
Coq.Numbers.NatInt.NZDiv.div_mul	40
Coq.Numbers.NatInt.NZDiv.mod_mul	40	1.0.0.0.0.1.7.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: order; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: apply mul_comm).	38.080422163	7119
Coq.Numbers.NatInt.NZDiv.mod_le	40
Coq.Numbers.NatInt.NZDiv.div_pos	40
Coq.Numbers.NatInt.NZDiv.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.mod_small_iff	40	0.0.2.1.1.0.0.12.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: order; only 1: trivial; only 1: order; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: auto).	27.3633339405	26226
Coq.Numbers.NatInt.NZDiv.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.div_lt	40
Coq.Numbers.NatInt.NZDiv.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.div_exact	40
Coq.Numbers.NatInt.NZDiv.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.mod_add	40
Coq.Numbers.NatInt.NZDiv.div_add	40
Coq.Numbers.NatInt.NZDiv.div_add_l	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.mod_mod	40	1.0.1.8.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: trivial).	1.56324505806	811
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.mul_mod	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.add_mod	40
Coq.Numbers.NatInt.NZDiv.div_div	40
Coq.Numbers.NatInt.NZDiv.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.mod_divides	40
Coq.Numbers.NatInt.NZAdd.add_0_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_r	40	0.1.0.0.1.4.1.0	search with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.10748004913	591
Coq.Numbers.NatInt.NZAdd.add_succ_comm	40	0.1.0.0.0.1.0	search with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0760719776154	9
Coq.Numbers.NatInt.NZAdd.add_comm	40	2.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0718379020691	9
Coq.Numbers.NatInt.NZAdd.add_1_l	40
Coq.Numbers.NatInt.NZAdd.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0526828765869	2
Coq.Numbers.NatInt.NZAdd.add_assoc	40	0.0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.310712099075	46
Coq.Numbers.NatInt.NZAdd.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0985090732574	6
Coq.Numbers.NatInt.NZAdd.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.247897863388	27
Coq.Numbers.NatInt.NZAdd.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.add_shuffle2	40	0.0.0.0.0.7.8.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.89527201653	2377
Coq.Numbers.NatInt.NZAdd.add_shuffle3	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.110648870468	7
Coq.Numbers.NatInt.NZAdd.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0351099967957	2
Coq.Numbers.NatInt.NZOrder.le_wd	40
Coq.Numbers.NatInt.NZOrder.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.le_refl	40	33.1.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: simpl_relation).	3.00349402428	3563
Coq.Numbers.NatInt.NZOrder.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.nle_succ_diag_l	40	3.0.0.2	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	0.208645820618	39
Coq.Numbers.NatInt.NZOrder.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.lt_trans	40
Coq.Numbers.NatInt.NZOrder.le_trans	40
Coq.Numbers.NatInt.NZOrder.lt_strorder	40	0.2.7.0.3.0.2.3	search with cache (only 1: split; only 1: intros n H; only 1: false_hyp H lt_irrefl; only 1: compute; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).	5.99369812012	7635
Coq.Numbers.NatInt.NZOrder.le_preorder	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4.0.5.2.3	search with cache (only 1: split; only 1: intro; only 1: apply lt_eq_cases; only 1: now right; only 1: compute; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	38.9312930107	28203
Coq.Numbers.NatInt.NZOrder.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.lt_neq	40	0.0.0.4	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0703778266907	38
Coq.Numbers.NatInt.NZOrder.le_neq	40
Coq.Numbers.NatInt.NZOrder.eq_le_incl	40	0	search with cache (only 1: intuition order).	0.0120148658752	1
Coq.Numbers.NatInt.NZOrder.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0198369026184	3
Coq.Numbers.NatInt.NZOrder.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0217859745026	3
Coq.Numbers.NatInt.NZOrder.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0196011066437	3
Coq.Numbers.NatInt.NZOrder.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0216720104218	3
Coq.Numbers.NatInt.NZOrder.le_lt_trans	40	1	search with cache (only 1: order).	0.0263669490814	24
Coq.Numbers.NatInt.NZOrder.lt_le_trans	40	6.0	search with cache (only 1: intros x y z; only 1: order).	0.0257070064545	21
Coq.Numbers.NatInt.NZOrder.le_antisymm	40	0.0.0.0.0.2.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	0.049712896347	19
Coq.Numbers.NatInt.NZOrder.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.lt_succ_l	40	0.2.3	search with cache (only 1: intros z Base Step; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0679891109467	53
Coq.Numbers.NatInt.NZOrder.le_le_succ_r	40	1.3.4.4	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	3.94770812988	2372
Coq.Numbers.NatInt.NZOrder.lt_lt_succ_r	40	0.0.6.0	search with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0440890789032	26
Coq.Numbers.NatInt.NZOrder.succ_lt_mono	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	30.0740799904	25187
Coq.Numbers.NatInt.NZOrder.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.le_0_1	40	0.10.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.086131811142	76
Coq.Numbers.NatInt.NZOrder.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.lt_0_2	40	0.6.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0368659496307	16
Coq.Numbers.NatInt.NZOrder.le_0_2	40	0.10.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.688817024231	815
Coq.Numbers.NatInt.NZOrder.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.lt_ge_cases	40	1.0.0.4.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.0692639350891	25
Coq.Numbers.NatInt.NZOrder.le_ge_cases	40	2.0.0.1.3.4	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition order).	1.38836598396	787
Coq.Numbers.NatInt.NZOrder.lt_gt_cases	40	4.0.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.376648902893	26
Coq.Numbers.NatInt.NZOrder.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.eq_dne	40	0.0.1.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0323519706726	6
Coq.Numbers.NatInt.NZOrder.le_ngt	40	0.0.2.1	search with cache (only 1: intro n; only 1: split; only 1: intuition order; only 1: intuition order).	0.0498540401459	28
Coq.Numbers.NatInt.NZOrder.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0144679546356	1
Coq.Numbers.NatInt.NZOrder.lt_decidable	40	2.0.2.5.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	2.26144886017	441
Coq.Numbers.NatInt.NZOrder.lt_dne	40	0.0.5.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.129996061325	63
Coq.Numbers.NatInt.NZOrder.nle_gt	40	1	search with cache (only 1: intuition order).	0.0152630805969	2
Coq.Numbers.NatInt.NZOrder.lt_nge	40	0	search with cache (only 1: intuition order).	0.0153188705444	1
Coq.Numbers.NatInt.NZOrder.le_decidable	40	0.0.4.0.14	search with cache (only 1: unfold decidable, not; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	11.4829850197	2210
Coq.Numbers.NatInt.NZOrder.le_dne	40	0.0.0.1.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.0762031078339	7
Coq.Numbers.NatInt.NZOrder.nlt_succ_r	40	0.1.0.1.0.0	search with cache (only 1: intros n H; only 1: split; only 1: rewrite lt_succ_r; only 1: order; only 1: rewrite lt_succ_r; only 1: order).	0.077409029007	8
Coq.Numbers.NatInt.NZOrder.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.rbase	40	48.1	search with cache (only 1: intros RS' n; only 1: order).	24.1814169884	8268
Coq.Numbers.NatInt.NZOrder.A'A_right	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.lbase	40
Coq.Numbers.NatInt.NZOrder.A'A_left	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.order_induction	40
Coq.Numbers.NatInt.NZOrder.order_induction'	40
Coq.Numbers.NatInt.NZOrder.lt_ind	40
Coq.Numbers.NatInt.NZOrder.le_ind	40
Coq.Numbers.NatInt.NZOrder.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.lt_wf	40
Coq.Numbers.NatInt.NZOrder.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.initial_alt	40
Coq.Numbers.NatInt.NZDomain.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.initial_unique	40
Coq.Numbers.NatInt.NZDomain.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_zero	40	3	search with cache (only 1: solve_proper).	0.00641703605652	4
Coq.Numbers.NatInt.NZDomain.ofnat_succ	40	1	search with cache (only 1: reflexivity).	0.00729703903198	2
Coq.Numbers.NatInt.NZDomain.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.ofnat_add	40	0.0.0.0.0.5.0.4	search with cache (only 1: unfold ofnat; only 1: induction n; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.00629687309	972
Coq.Numbers.NatInt.NZDomain.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.pow_0_l	40
Coq.Numbers.NatInt.NZPow.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.pow_1_r	40	0.24.12	search with cache (only 1: intro LS'; only 1: rewrite one_succ; only 1: now nzsimpl).	1.51036286354	2456
Coq.Numbers.NatInt.NZPow.pow_1_l	40
Coq.Numbers.NatInt.NZPow.pow_2_r	40
Coq.Numbers.NatInt.NZPow.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.pow_add_r	40
Coq.Numbers.NatInt.NZPow.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.divide_wd	40
Coq.Numbers.NatInt.NZGcd.divide_1_l	40	1.35.12.17.1	search with cache (only 1: unfold divide; only 1: intro n; only 1: exists n; only 1: nzsimpl; only 1: order).	25.4255480766	71450
Coq.Numbers.NatInt.NZGcd.divide_0_r	40	3.5.2	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	0.210175037384	206
Coq.Numbers.NatInt.NZGcd.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.divide_refl	40
Coq.Numbers.NatInt.NZGcd.divide_trans	40
Coq.Numbers.NatInt.NZGcd.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_r	40	0.0.21.0	search with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	4.32102203369	3712
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_r	40	0.0.0.2.0.4.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.999517917633	727
Coq.Numbers.NatInt.NZGcd.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.divide_factor_l	40	0.0.7.13	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	1.89561581612	1145
Coq.Numbers.NatInt.NZGcd.divide_factor_r	40	0.9.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.0791001319885	65
Coq.Numbers.NatInt.NZGcd.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.gcd_comm	40	0.7.6.7.0.0.10	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	3.82019495964	5125
Coq.Numbers.NatInt.NZGcd.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.gcd_0_l_nonneg	40	0.0.0.0.0.0.0.6	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.324725151062	167
Coq.Numbers.NatInt.NZGcd.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0262868404388	8
Coq.Numbers.NatInt.NZGcd.gcd_1_l	40	0.0.0.3.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.183231830597	71
Coq.Numbers.NatInt.NZGcd.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0382609367371	7
Coq.Numbers.NatInt.NZGcd.gcd_diag_nonneg	40	0.1.1.0.1.2	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0759229660034	55
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.gcd_mul_diag_l	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	0.0330040454865	9
Coq.Numbers.NatInt.NZGcd.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.Even_wd	40
Coq.Numbers.NatInt.NZParity.Odd_wd	40
Coq.Numbers.NatInt.NZParity.even_wd	40
Coq.Numbers.NatInt.NZParity.odd_wd	40
Coq.Numbers.NatInt.NZParity.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.double_below	40	8.0.16.0.2.0	search with cache (only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: intro p; only 1: now apply add_le_mono).	33.7169821262	8066
Coq.Numbers.NatInt.NZParity.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.195569992065	6
Coq.Numbers.NatInt.NZParity.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.negb_odd	40
Coq.Numbers.NatInt.NZParity.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.44873309135	382
Coq.Numbers.NatInt.NZParity.even_0	40
Coq.Numbers.NatInt.NZParity.odd_0	40
Coq.Numbers.NatInt.NZParity.odd_1	40
Coq.Numbers.NatInt.NZParity.even_1	40
Coq.Numbers.NatInt.NZParity.even_2	40
Coq.Numbers.NatInt.NZParity.odd_2	40
Coq.Numbers.NatInt.NZParity.Odd_succ	40
Coq.Numbers.NatInt.NZParity.odd_succ	40
Coq.Numbers.NatInt.NZParity.even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_succ_succ	40	0.4.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.189872980118	39
Coq.Numbers.NatInt.NZParity.odd_succ_succ	40	0.5.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0374391078949	17
Coq.Numbers.NatInt.NZParity.even_add	40
Coq.Numbers.NatInt.NZParity.odd_add	40
Coq.Numbers.NatInt.NZParity.even_mul	40
Coq.Numbers.NatInt.NZParity.odd_mul	40
Coq.Numbers.NatInt.NZParity.even_add_even	40
Coq.Numbers.NatInt.NZParity.odd_add_even	40	0.0.0.0.1	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.326084852219	66
Coq.Numbers.NatInt.NZParity.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_even	40	0.2.0.1.1.4.2.3.1	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: case_eq (even n); only 1: rewrite ?even_spec; only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm; only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm).	25.2353329659	9549
Coq.Numbers.NatInt.NZParity.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.162574052811	6
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0829939842224	6
Coq.Numbers.NatInt.NZAddOrder.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0285079479218	3
Coq.Numbers.NatInt.NZAddOrder.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0285518169403	3
Coq.Numbers.NatInt.NZAddOrder.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.mul_0_r	40	1.0.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl').	0.0866439342499	23
Coq.Numbers.NatInt.NZMul.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.mul_comm	40	2.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0938141345978	8
Coq.Numbers.NatInt.NZMul.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.mul_assoc	40
Coq.Numbers.NatInt.NZMul.mul_1_l	40	0.1.0.2.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.100065946579	8
Coq.Numbers.NatInt.NZMul.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0340600013733	2
Coq.Numbers.NatInt.NZMul.mul_shuffle0	40	0.0.0.2.0.9.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	13.777105093	4044
Coq.Numbers.NatInt.NZMul.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_unique	40
Coq.Numbers.NatInt.NZLog.log2_wd	40
Coq.Numbers.NatInt.NZLog.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.log2_unique'	40
Coq.Numbers.NatInt.NZLog.log2_pow2	40
Coq.Numbers.NatInt.NZLog.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.log2_1	40	0.1.0.3.0.2.4.0.10	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: nzsimpl; only 1: order; only 1: rewrite pow_succ_r by order; only 1: rewrite two_succ  at 2; only 1: nzsimpl; only 1: order').	33.6935741901	15299
Coq.Numbers.NatInt.NZLog.log2_2	40	1.0.0.1.0.2	search with cache (only 1: apply log2_unique' with 0; only 1: order'; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	0.12915802002	25
Coq.Numbers.NatInt.NZLog.log2_pos	40
Coq.Numbers.NatInt.NZLog.log2_null	40
Coq.Numbers.NatInt.NZLog.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_double	40
Coq.Numbers.NatInt.NZLog.log2_same	40
Coq.Numbers.NatInt.NZLog.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn	40	0.0.0.0.2.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0206410884857	9
Coq.Numbers.NatInt.NZLog.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_up_nonpos	40	0.11.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	1.70641112328	1934
Coq.Numbers.NatInt.NZLog.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_1	40	0.1	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.00724697113037	3
Coq.Numbers.NatInt.NZLog.log2_up_2	40	1.0.6.6.0.0.0.0.1.0.0.6	search with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: order'; only 1: split; only 1: apply pow_lt_mono_r_iff; only 1: order_pos; only 1: order'; only 1: apply succ_lt_mono; only 1: rewrite lt_succ_pred with 0; only 1: apply lt_succ_diag_r; only 1: order'; only 1: order).	20.0594041348	21688
Coq.Numbers.NatInt.NZLog.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.log2_up_null	40
Coq.Numbers.NatInt.NZLog.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_double	40
Coq.Numbers.NatInt.NZLog.log2_up_same	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.eq_sym_iff	40	2.0.1	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intuition).	0.0207748413086	12
Coq.Numbers.NatInt.NZBase.neq_sym	40	1.0	search with cache (only 1: intros; only 1: simpl_relation).	0.0170969963074	3
Coq.Numbers.NatInt.NZBase.eq_stepl	40	0.1.8.0.0	search with cache (only 1: intros x y H; only 1: symmetry; only 1: transitivity x; only 1: intuition; only 1: auto).	0.131000995636	222
Coq.Numbers.NatInt.NZBase.succ_inj	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_r	40	0.1.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	2.77331709862	680
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_r	40	0.0.0.4.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.129060983658	30
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_r	40	0.0.0.1.0.1.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	0.13502407074	23
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0246548652649	4
Coq.Numbers.NatInt.NZMulOrder.mul_neg_pos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.019385099411	3
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_l	40	0.0.3.4.4.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	2.4437379837	1438
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_l	40	0.8.11	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	15.3657951355	10175
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_r	40	0.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0183570384979	5
Coq.Numbers.NatInt.NZMulOrder.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_lt_mono_nonneg	40	18.0	search with cache (only 1: intros p n m Hp; only 1: now apply mul_lt_mono_nonneg).	1.18200588226	930
Coq.Numbers.NatInt.NZMulOrder.square_le_mono_nonneg	40	1.3.1.3.0.1	search with cache (only 1: intros n m p H; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.76096200943	594
Coq.Numbers.NatInt.NZMulOrder.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.eq_refl	40	2	search with cache (only 1: solve_proper).	0.0118179321289	3
Coq.Structures.OrdersTac.le_refl	40
Coq.Structures.OrdersTac.lt_irrefl	40	7.26.5.0	search with cache (only 1: intros; only 1: intuition; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).	1.77737116814	7658
Coq.Structures.OrdersTac.eq_sym	40	2.1	search with cache (only 1: intros; only 1: simpl_relation).	0.0233669281006	27
Coq.Structures.OrdersTac.le_antisym	40
Coq.Structures.OrdersTac.neq_sym	40	0	search with cache (only 1: auto with *).	0.0114970207214	1
Coq.Structures.OrdersTac.trans	40
Coq.Structures.OrdersTac.eq_neq	40
Coq.Structures.OrdersTac.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0149948596954	1
Coq.Structures.OrdersTac.not_neq_eq	40
Coq.Structures.OrdersTac.not_ge_lt	40
Coq.Structures.OrdersTac.not_gt_le	40	0.0.6.0.0	search with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	0.312589883804	168
Coq.Structures.OrdersTac.le_neq_lt	40	0.4.1.1	search with cache (only 1: intros x y; only 1: generalize (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition).	0.301197052002	114
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.lt_compat	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrdersEx.bits_lt_antirefl	40
Coq.Structures.OrdersEx.bits_lt_trans	40
Coq.Structures.OrdersEx.lt_compat	40	1	search with cache (only 1: solve_proper).	0.0888159275055	2
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrderedTypeEx.lt_trans	40	25.2	search with cache (only 1: intros; only 1: now try rewrite H).	0.83801984787	754
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_trans	40	34.3	search with cache (only 1: intros; only 1: now try rewrite H).	1.41431593895	1442
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_refl	40	6.8	search with cache (only 1: intros H; only 1: now subst).	0.152493000031	204
Coq.Structures.OrderedTypeEx.eq_sym	40
Coq.Structures.OrderedTypeEx.eq_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40	0.0.4.2.0	search with cache (only 1: intros (x1, x2); only 1: unfold eq, lt; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	0.705081939697	254
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.le_lteq	40	0.4.1	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intuition).	0.0361230373383	28
Coq.Structures.Orders.lt_total	40
Coq.Structures.Orders.leb_le	40
Coq.Structures.Orders.leb_total	40
Coq.Structures.Orders.leb_trans	40
Coq.Structures.Orders.compare_spec	40
Coq.Structures.Orders.eqb_eq	40	0.1.8.5.0	search with cache (only 1: intros; only 1: compute; only 1: case_eq (x <=? y); only 1: intuition; only 1: intuition).	29.1969070435	34826
Coq.Structures.Orders.eq_equiv	40
Coq.Structures.Orders.lt_strorder	40
Coq.Structures.Orders.lt_compat	40
Coq.Structures.Orders.le_lteq	40
Coq.Structures.DecidableTypeEx.eq_refl	40	8.8	search with cache (only 1: intros H; only 1: now subst).	0.1799929142	330
Coq.Structures.DecidableTypeEx.eq_sym	40	0.3.0.0.6	search with cache (only 1: induction y; only 1: red; only 1: simpl; only 1: intros (x1, x2); only 1: auto).	0.256179094315	289
Coq.Structures.DecidableTypeEx.eq_trans	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.Equalities.eq_equiv	40
Coq.Structures.Equalities.eqb_eq	40
Coq.Structures.Equalities.eq_dec	40
Coq.Structures.Equalities.eqb_compat	40
Coq.Structures.Equalities.eqb_spec	40
Coq.Structures.Equalities.eqb_neq	40
Coq.Structures.Equalities.eqb_refl	40	14.0	search with cache (only 1: apply eqb_eq; only 1: reflexivity).	0.904346227646	1258
Coq.Structures.Equalities.eqb_sym	40
Coq.Structures.OrderedType.eq_dec	40
Coq.Structures.OrderedType.eq_equiv	40
Coq.Structures.OrderedType.lt_antirefl	40
Coq.Structures.OrderedType.lt_strorder	40
Coq.Structures.OrderedType.lt_eq	40
Coq.Structures.OrderedType.eq_lt	40
Coq.Structures.OrderedType.lt_compat	40
Coq.Structures.OrderedType.lt_total	40
Coq.Structures.OrderedType.le_lteq	40	0.0.20	search with cache (only 1: split; only 1: auto; only 1: auto).	0.960596084595	1222
Coq.Structures.OrderedType.le_eq	40
Coq.Structures.OrderedType.eq_le	40	0	search with cache (only 1: order).	0.0163781642914	1
Coq.Structures.OrderedType.neq_eq	40	0	search with cache (only 1: order).	0.0162777900696	1
Coq.Structures.OrderedType.eq_neq	40	0	search with cache (only 1: order).	0.0164279937744	1
Coq.Structures.OrderedType.le_lt_trans	40	0	search with cache (only 1: order).	0.0146241188049	1
Coq.Structures.OrderedType.lt_le_trans	40	0	search with cache (only 1: order).	0.0139009952545	1
Coq.Structures.OrderedType.le_neq	40	0.2.2.1	search with cache (only 1: destruct (compare x y); only 1: order; only 1: order; only 1: auto).	0.0784909725189	30
Coq.Structures.OrderedType.le_trans	40	0	search with cache (only 1: order).	0.015321969986	1
Coq.Structures.OrderedType.le_antisym	40	0	search with cache (only 1: order).	0.0145740509033	1
Coq.Structures.OrderedType.neq_sym	40	0	search with cache (only 1: order).	0.0140202045441	1
Coq.Structures.OrderedType.lt_le	40	0	search with cache (only 1: order).	0.0135159492493	1
Coq.Structures.OrderedType.gt_not_eq	40	0	search with cache (only 1: order).	0.013466835022	1
Coq.Structures.OrderedType.eq_not_lt	40	0	search with cache (only 1: order).	0.0140721797943	1
Coq.Structures.OrderedType.eq_not_gt	40	0	search with cache (only 1: order).	0.0142250061035	1
Coq.Structures.OrderedType.lt_not_gt	40	0	search with cache (only 1: order).	0.0131080150604	1
Coq.Structures.OrderedType.elim_compare_eq	40
Coq.Structures.OrderedType.elim_compare_lt	40	2.0.0.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.14429783821	1118
Coq.Structures.OrderedType.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.771908998489	526
Coq.Structures.OrderedType.lt_dec	40
Coq.Structures.OrderedType.eqb_alt	40
Coq.Structures.OrderedType.In_eq	40	4.5.7.4	search with cache (only 1: intros x l' H H0; only 1: rewrite <- H0; only 1: intros; only 1: auto).	12.977766037	15547
Coq.Structures.OrderedType.ListIn_In	40	9.4.0.6.0.16.0.0	search with cache (only 1: simple induction l; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: auto with ordered_type).	14.8491590023	38898
Coq.Structures.OrderedType.Inf_lt	40	10.0.0.0.1	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).	5.69221305847	2857
Coq.Structures.OrderedType.Inf_eq	40	0.1.3.3.0.3	search with cache (only 1: destruct l; only 1: constructor; only 1: intro; only 1: intro; only 1: intros H; only 1: now rewrite H).	1.05757594109	826
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.ListIn_Inf	40	1.0.0.0.0.0.2	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: auto).	0.0339789390564	11
Coq.Structures.OrderedType.In_Inf	40	5.0.1.5	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.254082202911	195
Coq.Structures.OrderedType.Inf_alt	40
Coq.Structures.OrderedType.Sort_NoDup	40
Coq.Structures.OrderedType.eqke_eqk	40	5.0.20	search with cache (only 1: induction 1; only 1: compute; only 1: auto).	0.646883964539	788
Coq.Structures.OrderedType.ltk_right_r	40	4	search with cache (only 1: auto).	0.0164320468903	13
Coq.Structures.OrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0116741657257	1
Coq.Structures.OrderedType.eqk_refl	40	1.3.1	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto with ordered_type).	0.0167140960693	8
Coq.Structures.OrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.0117630958557	1
Coq.Structures.OrderedType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0182259082794	2
Coq.Structures.OrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0269479751587	3
Coq.Structures.OrderedType.eqk_trans	40	12.2.9	search with cache (only 1: intros H'; only 1: unfold eqk, eqke; only 1: order).	1.27749681473	2015
Coq.Structures.OrderedType.eqke_trans	40
Coq.Structures.OrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0195739269257	2
Coq.Structures.OrderedType.ltk_not_eqk	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: eauto with ordered_type).	0.0251319408417	2
Coq.Structures.OrderedType.ltk_not_eqke	40	17.0.1.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	2.67158603668	2796
Coq.Structures.OrderedType.eqk_equiv	40	0.4.0.0.2	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: unfold eqk, ltk; only 1: eauto with ordered_type).	0.0956718921661	64
Coq.Structures.OrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0393769741058	4
Coq.Structures.OrderedType.ltk_strorder	40	0.5.0.8.1.27.6.1	search with cache (only 1: constructor; only 1: unfold eqk, ltk; only 1: intro; only 1: intuition; only 1: intro; only 1: simpl in *; only 1: order; only 1: eauto with ordered_type).	4.64302802086	14680
Coq.Structures.OrderedType.ltk_compat	40	8.4.4.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: repeat red; only 1: unfold eqk, ltk; only 1: order).	11.7240810394	9882
Coq.Structures.OrderedType.ltk_compat'	40
Coq.Structures.OrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0158867835999	2
Coq.Structures.OrderedType.ltk_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0151889324188	2
Coq.Structures.OrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0149509906769	1
Coq.Structures.OrderedType.InA_eqke_eqk	40	5.5.0.28	search with cache (only 1: induction 1; only 1: destruct H; only 1: auto; only 1: auto).	25.4061551094	16317
Coq.Structures.OrderedType.In_alt	40
Coq.Structures.OrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.Inf_eq	40	5.0.0.1.11	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	0.922095060349	650
Coq.Structures.OrderedType.Inf_lt	40	2.0.0.1.10	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	0.731492042542	296
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.Sort_NoDupA	40	0.0.0.0.6.0.1.0.0.0.0.7	search with cache (only 1: simple induction l; only 1: eauto with ordered_type; only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: intro; only 1: apply (StrictOrder_Irreflexive x); only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: auto).	13.5448069572	8480
Coq.Structures.OrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.In_inv	40
Coq.Structures.OrderedType.In_inv_2	40	0.8.0	search with cache (only 1: inversion_clear 1; only 1: firstorder; only 1: eauto with *).	0.10543513298	54
Coq.Structures.OrderedType.In_inv_3	40	0.0.5.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.0783650875092	33
Coq.Structures.OrdersFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0314528942108	7
Coq.Structures.OrdersFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_nlt_iff	40	0.0.0.1.0.0.1.0.0.0.1.1.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	24.1468069553	6357
Coq.Structures.OrdersFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.compare_compat	40
Coq.Structures.OrdersFacts.compare_refl	40	3.0.1.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: easy).	0.043023109436	20
Coq.Structures.OrdersFacts.compare_antisym	40
Coq.Structures.OrdersFacts.le_compat	40
Coq.Structures.OrdersFacts.le_preorder	40
Coq.Structures.OrdersFacts.le_order	40	0.0.1	search with cache (only 1: red; only 1: compute; only 1: iorder).	0.0236549377441	4
Coq.Structures.OrdersFacts.le_antisym	40	10.0	search with cache (only 1: compute; only 1: iorder).	0.318506002426	306
Coq.Structures.OrdersFacts.le_not_gt_iff	40	12	search with cache (only 1: iorder).	0.253993988037	120
Coq.Structures.OrdersFacts.lt_not_ge_iff	40	1	search with cache (only 1: iorder).	0.0169658660889	2
Coq.Structures.OrdersFacts.le_or_gt	40
Coq.Structures.OrdersFacts.lt_or_ge	40	0.0.4.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.556436061859	50
Coq.Structures.OrdersFacts.eq_is_le_ge	40	4.0	search with cache (only 1: intros x y; only 1: iorder).	0.0873818397522	28
Coq.Structures.OrdersFacts.compare_le_iff	40	2.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0208659172058	4
Coq.Structures.OrdersFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0219528675079	3
Coq.Structures.OrdersFacts.lt_dec	40
Coq.Structures.OrdersFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.eqb_alt	40
Coq.Structures.OrdersFacts.eqb_compat	40	0.0.2.0.1.2.1.0.8	search with cache (only 1: unfold eqb; only 1: intros x x' Hxx' y y' Hyy'; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).	18.4194910526	3630
Coq.Structures.OrdersFacts.lt_not_eq	40	0.4.2.0	search with cache (only 1: intro H; only 1: intro EQ; only 1: contradict ltac:(H); only 1: order).	0.0355358123779	10
Coq.Structures.OrdersFacts.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0226409435272	1
Coq.Structures.OrdersFacts.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0195498466492	1
Coq.Structures.OrdersFacts.le_eq	40	1	search with cache (only 1: order).	1.01257586479	2
Coq.Structures.OrdersFacts.eq_le	40	0	search with cache (only 1: order).	0.01384806633	1
Coq.Structures.OrdersFacts.neq_eq	40	2	search with cache (only 1: order).	1.01193094254	3
Coq.Structures.OrdersFacts.eq_neq	40	0	search with cache (only 1: order).	0.0135009288788	1
Coq.Structures.OrdersFacts.le_lt_trans	40	5.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0597319602966	25
Coq.Structures.OrdersFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0126008987427	1
Coq.Structures.OrdersFacts.le_trans	40	1	search with cache (only 1: order).	1.01229691505	2
Coq.Structures.OrdersFacts.le_antisym	40	1.1.0.1	search with cache (only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: intuition; only 1: intuition).	0.154327869415	81
Coq.Structures.OrdersFacts.le_neq	40	0	search with cache (only 1: order).	0.0131409168243	1
Coq.Structures.OrdersFacts.neq_sym	40	0	search with cache (only 1: order).	0.0123379230499	1
Coq.Structures.OrdersFacts.lt_le	40	3	search with cache (only 1: order).	0.0408289432526	19
Coq.Structures.OrdersFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0126588344574	1
Coq.Structures.OrdersFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.012622833252	1
Coq.Structures.OrdersFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0127520561218	1
Coq.Structures.OrdersFacts.lt_not_gt	40	2	search with cache (only 1: order).	0.0119950771332	3
Coq.Structures.OrdersFacts.eq_is_nlt_ngt	40	2.0.2.2.0.2.2.2.3.2	search with cache (only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: order; only 1: order; only 1: split; only 1: order; only 1: intuition; only 1: split; only 1: order; only 1: intuition).	19.9701020718	16314
Coq.Structures.OrdersFacts.lt_strorder	40	0.0.1.4.0.6.23.20.0.0	search with cache (only 1: split; only 1: compute; only 1: intros; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto; only 1: compute; only 1: intros; only 1: transitivity ltac:(y); only 1: auto; only 1: auto).	7.40973496437	28282
Coq.Structures.OrdersFacts.lt_compat	40
Coq.Structures.OrdersFacts.le_lteq	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0143449306488	2
Coq.Structures.OrdersFacts.compare_refl	40	23.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	1.18797588348	2736
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0162148475647	1
Coq.Structures.OrdersFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0760982036591	3
Coq.Structures.OrdersFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.leb_spec0	40
Coq.Structures.OrdersFacts.leb_spec	40
Coq.Structures.OrdersFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.ltb_spec	40
Coq.Structures.OrdersFacts.leb_nle	40	3.0.7	search with cache (only 1: case leb_spec0; only 1: intuition; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	1.20882105827	491
Coq.Structures.OrdersFacts.leb_gt	40	1.2.6.1.6	search with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	4.14754605293	1968
Coq.Structures.OrdersFacts.ltb_nlt	40	0.1.8	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.394181013107	124
Coq.Structures.OrdersFacts.ltb_ge	40	0.1.10	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.710865974426	207
Coq.Structures.OrdersFacts.leb_refl	40	0.0.8.0	search with cache (only 1: apply leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	0.233349084854	140
Coq.Structures.OrdersFacts.leb_antisym	40	1.0.8.4.0.8	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: case leb_spec0; only 1: trivial; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	4.31838798523	4161
Coq.Structures.OrdersFacts.ltb_irrefl	40	0.10.22	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	4.40499901772	5047
Coq.Structures.OrdersFacts.ltb_antisym	40	1.4.5.4.0.11	search with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: symmetry; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	12.901704073	11643
Coq.Structures.OrdersFacts.eqb_compare	40
Coq.Structures.OrdersFacts.ltb_compare	40
Coq.Structures.OrdersFacts.leb_compare	40	1.3.1.1.1.0.2.21	search with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: split).	5.22938895226	6269
Coq.Structures.OrdersLists.In_eq	40	0.13.0	search with cache (only 1: intros; only 1: subst; only 1: eauto).	1.87523698807	1242
Coq.Structures.OrdersLists.ListIn_In	40	0.3.17.3	search with cache (only 1: intros; only 1: apply In_InA; only 1: intuition; only 1: intuition).	3.27392506599	4552
Coq.Structures.OrdersLists.Inf_lt	40	1.1.4.0.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	2.81848406792	964
Coq.Structures.OrdersLists.Inf_eq	40	0.1.2.4.0.1	search with cache (only 1: destruct l; only 1: constructor; only 1: intro; only 1: intro; only 1: intros H; only 1: now rewrite H).	0.933498859406	567
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.ListIn_Inf	40	1.0.0.0.0.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: auto).	0.115425109863	56
Coq.Structures.OrdersLists.In_Inf	40	5.0.1.5	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.262896060944	201
Coq.Structures.OrdersLists.Inf_alt	40
Coq.Structures.OrdersLists.Sort_NoDup	40
Coq.Structures.OrdersLists.ltk_compat	40	1.1.3.3	search with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	0.397370815277	148
Coq.Structures.OrdersLists.ltk_compat'	40	0.0.0.5.0	search with cache (only 1: unfold eqk, ltk; only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	1.03543901443	21
Coq.Structures.OrdersLists.pair_compat	40	4.1	search with cache (only 1: intros x x' Hx l l' Hl; only 1: intuition).	2.03676700592	12
Coq.Structures.OrdersLists.ltk_not_eqk	40
Coq.Structures.OrdersLists.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0316050052643	3
Coq.Structures.OrdersLists.Inf_eq	40	2	search with cache (only 1: now intros <-).	0.0302109718323	3
Coq.Structures.OrdersLists.Inf_lt	40
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.Sort_NoDupA	40
Coq.Structures.OrdersLists.Sort_In_cons_1	40
Coq.Structures.OrdersLists.Sort_In_cons_2	40
Coq.Structures.OrdersLists.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.00781083106995	1
Coq.Structures.EqualitiesFacts.eqke_def	40	0	search with cache (only 1: firstorder).	0.00547981262207	1
Coq.Structures.EqualitiesFacts.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.00521898269653	1
Coq.Structures.EqualitiesFacts.eqke_1	40	1	search with cache (only 1: firstorder).	0.00806999206543	2
Coq.Structures.EqualitiesFacts.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.00633978843689	2
Coq.Structures.EqualitiesFacts.eqk_def	40	1	search with cache (only 1: reflexivity).	0.00509715080261	2
Coq.Structures.EqualitiesFacts.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.00493311882019	1
Coq.Structures.EqualitiesFacts.eqk_1	40	2	search with cache (only 1: firstorder).	0.0080509185791	3
Coq.Structures.EqualitiesFacts.InA_eqke_eqk	40	5.4	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.131089925766	65
Coq.Structures.EqualitiesFacts.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0236449241638	3
Coq.Structures.EqualitiesFacts.InA_eqk	40
Coq.Structures.EqualitiesFacts.In_alt	40
Coq.Structures.EqualitiesFacts.In_alt'	40
Coq.Structures.EqualitiesFacts.In_alt2	40
Coq.Structures.EqualitiesFacts.In_nil	40	2.7.0	search with cache (only 1: rewrite In_alt; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.14604306221	88
Coq.Structures.EqualitiesFacts.In_cons	40
Coq.Structures.EqualitiesFacts.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.In_compat	40
Coq.Structures.EqualitiesFacts.MapsTo_eq	40	10	search with cache (only 1: now intros <-).	0.302079200745	126
Coq.Structures.EqualitiesFacts.In_eq	40	0	search with cache (only 1: now intros <-).	0.121562957764	1
Coq.Structures.EqualitiesFacts.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0310280323029	2
Coq.Structures.EqualitiesFacts.In_inv_2	40	1.13.25.1	search with cache (only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: auto).	28.1598188877	23340
Coq.Structures.EqualitiesFacts.In_inv_3	40	5.3.20.1	search with cache (only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: eauto).	2.3215110302	2423
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.DecidableType.eqke_eqk	40	5.0.19	search with cache (only 1: induction 1; only 1: compute; only 1: auto).	0.311755895615	694
Coq.Structures.DecidableType.eqk_refl	40	4.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.00815606117249	6
Coq.Structures.DecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.00662899017334	1
Coq.Structures.DecidableType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0104360580444	2
Coq.Structures.DecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0139939785004	2
Coq.Structures.DecidableType.eqk_trans	40	14.2.4	search with cache (only 1: intros x l' H H0; only 1: intros; only 1: eauto).	0.828040838242	927
Coq.Structures.DecidableType.eqke_trans	40
Coq.Structures.DecidableType.eqk_equiv	40	0.0.0.18.1	search with cache (only 1: unfold eqk, eqke; only 1: constructor; only 1: eauto; only 1: eauto; only 1: eauto).	0.121012926102	462
Coq.Structures.DecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0239219665527	4
Coq.Structures.DecidableType.InA_eqke_eqk	40	1.0.0.0.5.0.11.0	search with cache (only 1: intros; only 1: generalize H; only 1: unfold eqk, eqke; only 1: do 2 rewrite InA_alt; only 1: intuition; only 1: destruct H0 as (y, (H0, H1)); only 1: exists y; only 1: intuition).	1.91260194778	1668
Coq.Structures.DecidableType.InA_eqk	40	0.2.1.3.12	search with cache (only 1: intros x l' H H0; only 1: unfold eqk, eqke; only 1: induction 1; only 1: eauto; only 1: intuition).	0.786690950394	727
Coq.Structures.DecidableType.In_alt	40
Coq.Structures.DecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.In_eq	40
Coq.Structures.DecidableType.In_inv	40
Coq.Structures.DecidableType.In_inv_2	40	1.7.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: eauto).	0.124944210052	48
Coq.Structures.DecidableType.In_inv_3	40	0.0.1.3	search with cache (only 1: unfold eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	0.140599966049	53
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.lt_not_eq	40
Coq.Structures.OrdersAlt.lt_trans	40	2.1.6.27.0	search with cache (only 1: intros x y L E; only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	1.08098697662	3201
Coq.Structures.OrdersAlt.compare	40
Coq.Structures.OrdersAlt.eq_equiv	40
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_eq	40
Coq.Structures.OrdersAlt.eq_lt	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.eq_dec	40
Coq.Structures.OrdersAlt.compare_sym	40
Coq.Structures.OrdersAlt.compare_Eq	40
Coq.Structures.OrdersAlt.compare_Lt	40
Coq.Structures.OrdersAlt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	17.4258649349	8442
Coq.Structures.OrdersAlt.compare_trans	40
Coq.Structures.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.min_l	40	0.0.1.0.0.0.0.1.8	search with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	1.64098310471	2278
Coq.Structures.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0283539295197	9
Coq.Structures.GenericMinMax.max_spec	40
Coq.Structures.GenericMinMax.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	1.95219016075	1472
Coq.Structures.GenericMinMax.Proper_instance_0	40
Coq.Structures.GenericMinMax.max_compat	40
Coq.Structures.GenericMinMax.max_unicity	40	1.4.0.4.1.0.6	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	3.92407417297	2376
Coq.Structures.GenericMinMax.max_unicity_ext	40
Coq.Structures.GenericMinMax.max_mono	40
Coq.Structures.GenericMinMax.max_id	40	15.13	search with cache (only 1: apply max_r; only 1: order).	0.358959913254	540
Coq.Structures.GenericMinMax.max_assoc	40
Coq.Structures.GenericMinMax.max_comm	40
Coq.Structures.GenericMinMax.le_max_l	40	3.1.1.7	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.582065105438	332
Coq.Structures.GenericMinMax.le_max_r	40	0	search with cache (only 1: solve_max).	0.0207748413086	1
Coq.Structures.GenericMinMax.max_l_iff	40	10	search with cache (only 1: solve_max).	0.534385204315	187
Coq.Structures.GenericMinMax.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0356709957123	1
Coq.Structures.GenericMinMax.max_le	40
Coq.Structures.GenericMinMax.max_le_iff	40
Coq.Structures.GenericMinMax.max_lt_iff	40
Coq.Structures.GenericMinMax.max_lub_l	40	0	search with cache (only 1: solve_max).	0.0229520797729	1
Coq.Structures.GenericMinMax.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0224828720093	1
Coq.Structures.GenericMinMax.max_lub	40	3	search with cache (only 1: solve_max).	0.0243499279022	4
Coq.Structures.GenericMinMax.max_lub_iff	40	3.3.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0499920845032	9
Coq.Structures.GenericMinMax.max_lub_lt	40	0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0785160064697	18
Coq.Structures.GenericMinMax.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0996088981628	24
Coq.Structures.GenericMinMax.max_le_compat_l	40
Coq.Structures.GenericMinMax.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0334010124207	3
Coq.Structures.GenericMinMax.max_le_compat	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0376720428467	3
Coq.Structures.GenericMinMax.min_spec	40
Coq.Structures.GenericMinMax.min_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply min_l; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply min_r).	5.16748285294	2738
Coq.Structures.GenericMinMax.min_compat	40
Coq.Structures.GenericMinMax.min_unicity	40
Coq.Structures.GenericMinMax.min_unicity_ext	40
Coq.Structures.GenericMinMax.min_mono	40
Coq.Structures.GenericMinMax.min_id	40	0.7	search with cache (only 1: apply min_l; only 1: order).	0.0142397880554	9
Coq.Structures.GenericMinMax.min_assoc	40
Coq.Structures.GenericMinMax.min_comm	40
Coq.Structures.GenericMinMax.le_min_r	40	2.1.1.6	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.352509021759	175
Coq.Structures.GenericMinMax.le_min_l	40	0	search with cache (only 1: solve_min).	0.0210249423981	1
Coq.Structures.GenericMinMax.min_l_iff	40	12	search with cache (only 1: solve_min).	1.09970188141	555
Coq.Structures.GenericMinMax.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0599210262299	1
Coq.Structures.GenericMinMax.min_le	40	0.1.1.3.1.8	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order; only 1: right; only 1: order).	6.16059398651	4112
Coq.Structures.GenericMinMax.min_le_iff	40	7.1.0.0.1.0.0.2.3	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	28.6627860069	17884
Coq.Structures.GenericMinMax.min_lt_iff	40	0.0.0.0.0.0.1.6	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	4.56421589851	1808
Coq.Structures.GenericMinMax.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0208871364594	1
Coq.Structures.GenericMinMax.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0209348201752	1
Coq.Structures.GenericMinMax.min_glb	40	0	search with cache (only 1: solve_min).	0.0218880176544	1
Coq.Structures.GenericMinMax.min_glb_iff	40	0.0.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0431830883026	4
Coq.Structures.GenericMinMax.min_glb_lt	40	0.0.0.0.2.0	search with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0362269878387	8
Coq.Structures.GenericMinMax.min_glb_lt_iff	40	3	search with cache (only 1: solve_min).	0.206073999405	59
Coq.Structures.GenericMinMax.min_le_compat_l	40
Coq.Structures.GenericMinMax.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0338089466095	3
Coq.Structures.GenericMinMax.min_le_compat	40	1.2.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0491440296173	8
Coq.Structures.GenericMinMax.min_max_absorption	40	0.4	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0332911014557	6
Coq.Structures.GenericMinMax.max_min_absorption	40	0.6	search with cache (only 1: apply min_l; only 1: solve_max).	0.043643951416	18
Coq.Structures.GenericMinMax.max_min_distr	40
Coq.Structures.GenericMinMax.min_max_distr	40
Coq.Structures.GenericMinMax.max_min_modular	40
Coq.Structures.GenericMinMax.min_max_modular	40
Coq.Structures.GenericMinMax.max_min_disassoc	40
Coq.Structures.GenericMinMax.max_min_antimono	40	0.0.0.2.0.0.0.0.2.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	3.0370631218	1621
Coq.Structures.GenericMinMax.min_max_antimono	40
Coq.Structures.GenericMinMax.max_case_strong	40
Coq.Structures.GenericMinMax.max_case	40
Coq.Structures.GenericMinMax.max_dec	40
Coq.Structures.GenericMinMax.min_case_strong	40
Coq.Structures.GenericMinMax.min_case	40
Coq.Structures.GenericMinMax.min_dec	40
Coq.Structures.GenericMinMax.max_monotone	40	0.27	search with cache (only 1: apply max_mono; only 1: eauto with *).	0.550648927689	708
Coq.Structures.GenericMinMax.min_monotone	40	0.0.21.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	0.644317865372	946
Coq.Structures.GenericMinMax.min_max_antimonotone	40
Coq.Structures.GenericMinMax.max_min_antimonotone	40
Coq.Structures.GenericMinMax.max_case_strong	40	0.0.0.4.0	search with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0238318443298	16
Coq.Structures.GenericMinMax.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0172390937805	4
Coq.Structures.GenericMinMax.max_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0193660259247	6
Coq.Structures.GenericMinMax.min_case_strong	40	0.0.0.6.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.320708990097	196
Coq.Structures.GenericMinMax.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0169250965118	4
Coq.Structures.GenericMinMax.min_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0189530849457	6
Coq.Structures.GenericMinMax.compare_spec	40
Coq.Structures.OrderedTypeAlt.eq_refl	40
Coq.Structures.OrderedTypeAlt.eq_sym	40
Coq.Structures.OrderedTypeAlt.lt_not_eq	40	0.1.8.2	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	1.98164606094	1494
Coq.Structures.OrderedTypeAlt.compare	40
Coq.Structures.OrderedTypeAlt.eq_dec	40
Coq.Structures.OrderedTypeAlt.compare_sym	40
Coq.Structures.OrderedTypeAlt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: trivial).	0.0259308815002	5
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.1.0.0.2.2.1.3	search with cache (only 1: induction n; only 1: trivial; only 1: simpl N.to_nat; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	1.09584403038	1068
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0297570228577	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0141520500183	1
Coq.ZArith.Znat.positive_N_nat	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0172071456909	2
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0355608463287	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.1.2	search with cache (only 1: induction n; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0242829322815	7
Coq.ZArith.Znat.Z_nat_N	40	0.7.0.13	search with cache (only 1: induction n; only 1: trivial; only 1: Nat2N.nat2N; only 1: trivial).	0.602274894714	445
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0159208774567	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0337450504303	10
Coq.ZArith.Znat.id	40	0.0.1.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial).	0.0226418972015	5
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.0.0.0.0.7.1	search with cache (only 1: split; only 1: apply Nat2N.inj; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	13.8493630886	15782
Coq.ZArith.Znat.is_nonneg	40	1	search with cache (only 1: now destruct n).	0.0389049053192	14
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0131940841675	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0133261680603	1
Coq.ZArith.Znat.inj_compare	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0353062152863	10
Coq.ZArith.Znat.inj_le	40	3.3.0	search with cache (only 1: split; only 1: now destruct n, m; only 1: now destruct n, m).	0.229380846024	118
Coq.ZArith.Znat.inj_lt	40	6	search with cache (only 1: now destruct n, m).	0.121850013733	59
Coq.ZArith.Znat.inj_ge	40	7	search with cache (only 1: now destruct n, m).	0.0940370559692	46
Coq.ZArith.Znat.inj_gt	40	8	search with cache (only 1: now destruct n, m).	0.0596361160278	28
Coq.ZArith.Znat.inj_abs_N	40
Coq.ZArith.Znat.inj_add	40	0.0.1.1.0.0.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: Z.order; only 1: trivial; only 1: trivial; only 1: simpl; only 1: congruence).	0.0660309791565	25
Coq.ZArith.Znat.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.017639875412	1
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_succ	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0254909992218	4
Coq.ZArith.Znat.inj_pred_max	40	0.0.0.0.0.0.22.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	2.25722885132	4599
Coq.ZArith.Znat.inj_pred	40	0.0.0.0.0.0.5.0.0.4	search with cache (only 1: destruct n; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: destruct p; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max).	2.43470811844	1675
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.0.0.40.0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	12.0921039581	33620
Coq.ZArith.Znat.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0918748378754	4
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.id	40	2	search with cache (only 1: now destruct n).	0.0185050964355	3
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.0366749763489	8
Coq.ZArith.Znat.inj_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0162630081177	2
Coq.ZArith.Znat.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.0173559188843	2
Coq.ZArith.Znat.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0168941020966	2
Coq.ZArith.Znat.inj_add	40	9.6.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.596432924271	331
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	0.708822011948	185
Coq.ZArith.Znat.inj_succ	40	0.0.0.0.6.0	search with cache (only 1: intros; only 1: destruct n; only 1: now subst; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct H).	0.311643123627	118
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.0.0.0.0.1.0.4	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: simpl; only 1: trivial).	0.556621074677	167
Coq.ZArith.Znat.inj_compare	40	6.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0595810413361	19
Coq.ZArith.Znat.inj_le	40	12.1.4	search with cache (only 1: unfold Z.le, Z.ge; only 1: intros; only 1: now destruct n, m).	5.59328603745	4132
Coq.ZArith.Znat.inj_lt	40	5.0.16.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: unfold Z.lt; only 1: now destruct n, m).	8.53625202179	8310
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.0.6.0.7	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.70738196373	285
Coq.ZArith.Znat.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0281839370728	6
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40
Coq.ZArith.Znat.abs_N_spec	40	1.0.1.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0310840606689	9
Coq.ZArith.Znat.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.017422914505	1
Coq.ZArith.Znat.id_abs	40	1	search with cache (only 1: now destruct n).	0.0158648490906	2
Coq.ZArith.Znat.id	40	0	search with cache (only 1: now destruct n).	0.0154190063477	1
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0134701728821	1
Coq.ZArith.Znat.inj_pos	40	1.0	search with cache (only 1: simpl; only 1: f_equal).	0.0180051326752	3
Coq.ZArith.Znat.inj_neg	40	1.0	search with cache (only 1: simpl; only 1: f_equal).	0.0174479484558	3
Coq.ZArith.Znat.inj_opp	40	1.0.1.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0315771102905	9
Coq.ZArith.Znat.inj_succ	40	1.0.1.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.226037979126	50
Coq.ZArith.Znat.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	1.45757603645	499
Coq.ZArith.Znat.inj_mul	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.695598125458	326
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	1.1.0.0.0.2.0.1.1.5.1	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: easy; only 1: now destruct Hn || now destruct Hm || clear; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: simpl; only 1: now rewrite Pos.add_1_r).	16.268132925	17767
Coq.ZArith.Znat.inj_compare	40	6	search with cache (only 1: now destruct n, m).	0.196395158768	56
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0215849876404	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0216920375824	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_succ_abs	40	0.2.0.2.2.9	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.83474206924	1330
Coq.ZArith.Znat.inj_add_abs	40	4	search with cache (only 1: now destruct n, m).	0.211311101913	85
Coq.ZArith.Znat.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.021693944931	1
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.0135059356689	1
Coq.ZArith.Znat.inj_succ	40	0.0.0.1.3.0	search with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0325219631195	10
Coq.ZArith.Znat.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0222690105438	1
Coq.ZArith.Znat.id	40	1.0.1.2	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0326638221741	8
Coq.ZArith.Znat.inj	40	3.2.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0366940498352	8
Coq.ZArith.Znat.inj_iff	40	1.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.0279479026794	7
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_ge	40
Coq.ZArith.Znat.inj_gt	40
Coq.ZArith.Znat.inj_abs_nat	40
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred_max	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.id	40	0.1.0.0.0.1.0.0.7.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	4.92523789406	5341
Coq.ZArith.Znat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0243611335754	3
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now subst).	0.14563202858	7
Coq.ZArith.Znat.inj_0	40	0.4.3	search with cache (only 1: symmetry; only 1: simpl; only 1: trivial).	0.0249989032745	12
Coq.ZArith.Znat.inj_pos	40	1	search with cache (only 1: now destruct n).	0.017306804657	2
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0136008262634	1
Coq.ZArith.Znat.inj_add	40	0.1.0.1.1.0.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	11.183604002	6268
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.2.0.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	9.73976993561	5725
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0164020061493	1
Coq.ZArith.Znat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0173671245575	1
Coq.ZArith.Znat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	4.1968960762	4941
Coq.ZArith.Znat.id	40	1.0.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0283479690552	8
Coq.ZArith.Znat.inj_0	40	0	search with cache (only 1: trivial).	0.013592004776	1
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.0142440795898	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0141808986664	1
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_add	40	1.1.0.1.1.0.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	13.0222170353	7480
Coq.ZArith.Znat.inj_mul	40	0.3.0.3.1.0.2.2.1.0.0.3.4	search with cache (only 1: destruct n, m; only 1: trivial; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	20.5584731102	31583
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0238690376282	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0234379768372	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_succ_abs	40	0.0.0.2	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.050057888031	6
Coq.ZArith.Znat.inj_add_abs	40	1.1.0.1.1.0.1.1.1.1.1.5	search with cache (only 1: destruct n, m; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add).	20.8867440224	12033
Coq.ZArith.Znat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	9.261480093	9116
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.1.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0208058357239	5
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40	0.1.0.1.2.4.4.0.0.0.0.0.1.0.0	search with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: intros Hz; only 1: destruct z; only 1: apply Ho; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: now destruct Hz).	21.3533542156	34312
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.1.1.0.4.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	1.23622393608	885
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.0.1.0.0.0.0.0.0.0.1.0.0.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	2.66593599319	2561
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0193159580231	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	10.7828979492	9383
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	0.79.0	search with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: now apply Z.pow_gt_lin_r).	13.5503110886	41370
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	28.9805731773	26466
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	9.9.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	2.5338280201	2113
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.1.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0278568267822	7
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0246069431305	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0257980823517	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	5	search with cache (only 1: now destruct a).	0.0245070457458	6
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0141890048981	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0149948596954	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.1.0.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0371460914612	5
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0261220932007	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.0.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0402607917786	6
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.0.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0474400520325	6
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.1.1	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0768890380859	34
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	1.0.1.0.2.1.0.9	search with cache (only 1: intros [| p| p]; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: simpl; only 1: intuition congruence; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even).	3.49294304848	4182
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0354330539703	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	1.5.4	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.863176107407	348
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	57.0	search with cache (only 1: intros; only 1: constructor).	1.21269106865	5393
Coq.ZArith.Zdigits.two_compl_value	40	6.0	search with cache (only 1: intros; only 1: exact 0%Z).	0.0114660263062	8
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.0131449699402	4
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0166451931	3
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1.0.0.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0271480083466	9
Coq.ZArith.Zdigits.Z_div2_value	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro H; only 1: elim H; only 1: trivial).	9.42684483528	5277
Coq.ZArith.Zdigits.Pdiv2	40	1.0.0.0.0.4.0.0	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: compute; only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: congruence; only 1: auto).	2.1347591877	1322
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.1.0.0.0.0.1	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: auto; only 1: auto; only 1: auto).	0.146929979324	16
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	0.0.0.0.0.0.0.0.0.0.3.1.0.0	search with cache (only 1: destruct z; only 1: unfold bit_value; only 1: simpl; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: auto; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	5.68444800377	3868
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.0.0.1.0.0.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.504839897156	226
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.eq_dec	40
Coq.ZArith.BinInt.pos_sub_spec	40
Coq.ZArith.BinInt.pos_sub_discr	40
Coq.ZArith.BinInt.pos_sub_diag	40	0.0.0.1.1.0.0.1.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.560453176498	413
Coq.ZArith.BinInt.pos_sub_lt	40
Coq.ZArith.BinInt.pos_sub_gt	40
Coq.ZArith.BinInt.pos_sub_opp	40
Coq.ZArith.BinInt.add_0_r	40
Coq.ZArith.BinInt.mul_0_r	40	7	search with cache (only 1: now destruct n).	0.0196418762207	8
Coq.ZArith.BinInt.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0163230895996	1
Coq.ZArith.BinInt.add_comm	40
Coq.ZArith.BinInt.opp_add_distr	40
Coq.ZArith.BinInt.opp_inj	40
Coq.ZArith.BinInt.pos_sub_add	40
Coq.ZArith.BinInt.add_assoc_pos	40
Coq.ZArith.BinInt.add_assoc	40
Coq.ZArith.BinInt.add_opp_diag_r	40	0.0.0.0.0.2.10	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.595571994781	387
Coq.ZArith.BinInt.mul_opp_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	32.7795219421	24871
Coq.ZArith.BinInt.mul_add_distr_pos	40
Coq.ZArith.BinInt.mul_add_distr_r	40
Coq.ZArith.BinInt.one_succ	40	1	search with cache (only 1: trivial).	0.0141661167145	2
Coq.ZArith.BinInt.two_succ	40	0	search with cache (only 1: reflexivity).	0.0142421722412	1
Coq.ZArith.BinInt.add_0_l	40	0	search with cache (only 1: now destruct n).	0.016040802002	1
Coq.ZArith.BinInt.add_succ_l	40
Coq.ZArith.BinInt.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0183482170105	2
Coq.ZArith.BinInt.opp_succ	40	0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	1.81013798714	1012
Coq.ZArith.BinInt.succ_pred	40
Coq.ZArith.BinInt.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0196900367737	2
Coq.ZArith.BinInt.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0159759521484	1
Coq.ZArith.BinInt.sub_succ_r	40
Coq.ZArith.BinInt.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0160319805145	1
Coq.ZArith.BinInt.mul_succ_l	40
Coq.ZArith.BinInt.eqb_eq	40
Coq.ZArith.BinInt.ltb_lt	40
Coq.ZArith.BinInt.leb_le	40
Coq.ZArith.BinInt.compare_eq_iff	40
Coq.ZArith.BinInt.compare_sub	40
Coq.ZArith.BinInt.compare_antisym	40
Coq.ZArith.BinInt.compare_lt_iff	40	0.3.0.0.0	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0501010417938	24
Coq.ZArith.BinInt.compare_le_iff	40	0.1	search with cache (only 1: unfold leb, le; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.272592067719	60
Coq.ZArith.BinInt.lt_succ_r	40
Coq.ZArith.BinInt.max_l	40
Coq.ZArith.BinInt.max_r	40
Coq.ZArith.BinInt.min_l	40
Coq.ZArith.BinInt.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.576089859009	98
Coq.ZArith.BinInt.peano_ind	40
Coq.ZArith.BinInt.bi_induction	40
Coq.ZArith.BinInt.abs_eq	40
Coq.ZArith.BinInt.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0512797832489	5
Coq.ZArith.BinInt.sgn_null	40	21.21.2.19	search with cache (only 1: destruct n; only 1: intuition; only 1: congruence; only 1: congruence).	10.4189710617	26131
Coq.ZArith.BinInt.sgn_pos	40	3.0.2.34	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial; only 1: now subst).	1.05698609352	1842
Coq.ZArith.BinInt.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0239169597626	1
Coq.ZArith.BinInt.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0162398815155	1
Coq.ZArith.BinInt.pow_succ_r	40
Coq.ZArith.BinInt.pow_neg_r	40	0.4.0.0.2.1	search with cache (only 1: destruct m as [| m| m]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct 1 || intros _).	0.387782096863	241
Coq.ZArith.BinInt.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.0139689445496	1
Coq.ZArith.BinInt.square_spec	40
Coq.ZArith.BinInt.sqrtrem_spec	40
Coq.ZArith.BinInt.sqrt_spec	40
Coq.ZArith.BinInt.sqrt_neg	40	2	search with cache (only 1: now destruct n).	0.113327026367	83
Coq.ZArith.BinInt.sqrtrem_sqrt	40
Coq.ZArith.BinInt.log2_spec	40
Coq.ZArith.BinInt.log2_nonpos	40	1	search with cache (only 1: now destruct n).	0.0219969749451	2
Coq.ZArith.BinInt.even_spec	40
Coq.ZArith.BinInt.odd_spec	40
Coq.ZArith.BinInt.double_spec	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0188798904419	1
Coq.ZArith.BinInt.succ_double_spec	40	5.1	search with cache (only 1: simpl; only 1: now destruct n).	0.139841794968	94
Coq.ZArith.BinInt.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.016569852829	1
Coq.ZArith.BinInt.pos_div_eucl_eq	40
Coq.ZArith.BinInt.div_eucl_eq	40
Coq.ZArith.BinInt.div_mod	40
Coq.ZArith.BinInt.pos_div_eucl_bound	40
Coq.ZArith.BinInt.mod_pos_bound	40
Coq.ZArith.BinInt.mod_neg_bound	40
Coq.ZArith.BinInt.quotrem_eq	40
Coq.ZArith.BinInt.quot_rem'	40
Coq.ZArith.BinInt.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.110582113266	24
Coq.ZArith.BinInt.rem_bound_pos	40
Coq.ZArith.BinInt.rem_opp_l'	40
Coq.ZArith.BinInt.rem_opp_r'	40
Coq.ZArith.BinInt.rem_opp_l	40
Coq.ZArith.BinInt.rem_opp_r	40
Coq.ZArith.BinInt.divide_Zpos	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.ggcd_gcd	40
Coq.ZArith.BinInt.ggcd_correct_divisors	40
Coq.ZArith.BinInt.gcd_divide_l	40
Coq.ZArith.BinInt.gcd_divide_r	40
Coq.ZArith.BinInt.gcd_greatest	40
Coq.ZArith.BinInt.gcd_nonneg	40	1.1.1.1.2.1.0.0.0.0.0.0.1	search with cache (only 1: destruct a as [| p| p], b as [| q| q]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy; only 1: now subst; only 1: now subst; only 1: easy; only 1: easy; only 1: now subst).	31.2971358299	28410
Coq.ZArith.BinInt.ggcd_opp	40
Coq.ZArith.BinInt.testbit_of_N	40
Coq.ZArith.BinInt.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	3.84170889854	2719
Coq.ZArith.BinInt.testbit_Zpos	40	1.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0394449234009	8
Coq.ZArith.BinInt.testbit_Zneg	40
Coq.ZArith.BinInt.div2_spec	40	1	search with cache (only 1: reflexivity).	0.0156807899475	2
Coq.ZArith.BinInt.testbit_0_l	40	0.1.0.2.3.0.5	search with cache (only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: split; only 1: unfold testbit; only 1: trivial; only 1: unfold testbit; only 1: trivial).	0.280452013016	359
Coq.ZArith.BinInt.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0613391399384	1
Coq.ZArith.BinInt.testbit_odd_0	40
Coq.ZArith.BinInt.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0181839466095	1
Coq.ZArith.BinInt.testbit_odd_succ	40
Coq.ZArith.BinInt.testbit_even_succ	40
Coq.ZArith.BinInt.shiftr_spec_aux	40
Coq.ZArith.BinInt.shiftl_spec_low	40
Coq.ZArith.BinInt.shiftl_spec_high	40
Coq.ZArith.BinInt.shiftr_spec	40
Coq.ZArith.BinInt.lor_spec	40
Coq.ZArith.BinInt.land_spec	40
Coq.ZArith.BinInt.ldiff_spec	40
Coq.ZArith.BinInt.lxor_spec	40
Coq.ZArith.BinInt.gt_lt_iff	40
Coq.ZArith.BinInt.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0250191688538	2
Coq.ZArith.BinInt.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0251460075378	2
Coq.ZArith.BinInt.ge_le_iff	40	24.24.0	search with cache (only 1: split; only 1: apply le_ngt; only 1: apply le_ngt).	34.6827580929	34424
Coq.ZArith.BinInt.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0261449813843	2
Coq.ZArith.BinInt.le_ge	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0274178981781	2
Coq.ZArith.BinInt.gtb_ltb	40
Coq.ZArith.BinInt.geb_leb	40
Coq.ZArith.BinInt.gtb_lt	40	1.2.1.0	search with cache (only 1: unfold gtb, ltb; only 1: unfold lt, gt; only 1: rewrite compare_antisym; only 1: now case compare).	0.196850061417	42
Coq.ZArith.BinInt.geb_le	40	0.4.0.0	search with cache (only 1: unfold geb, leb; only 1: unfold le, ge; only 1: rewrite compare_antisym; only 1: now case compare).	0.0686960220337	8
Coq.ZArith.BinInt.gtb_spec	40
Coq.ZArith.BinInt.geb_spec	40
Coq.ZArith.BinInt.add_reg_l	40
Coq.ZArith.BinInt.mul_reg_l	40
Coq.ZArith.BinInt.mul_reg_r	40
Coq.ZArith.BinInt.opp_eq_mul_m1	40
Coq.ZArith.BinInt.add_diag	40
Coq.ZArith.BinInt.compare_opp	40
Coq.ZArith.BinInt.add_compare_mono_l	40
Coq.ZArith.BinInt.testbit_mod_pow2	40
Coq.ZArith.BinInt.testbit_ones	40
Coq.ZArith.BinInt.testbit_ones_nonneg	40	0.0.0.0.6	search with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	0.817533016205	307
Coq.ZArith.BinInt.id	40	1.1	search with cache (only 1: simpl; only 1: trivial).	0.0193378925323	4
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40	2.3.4.6.0.4	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H; only 1: Z.bitwise; only 1: split).	0.623548984528	839
Coq.ZArith.BinInt.is_pos	40	0	search with cache (only 1: reflexivity).	0.0178260803223	1
Coq.ZArith.BinInt.is_nonneg	40	1	search with cache (only 1: now f_equal).	0.0233278274536	2
Coq.ZArith.BinInt.inj_1	40	5	search with cache (only 1: now f_equal).	0.016893863678	6
Coq.ZArith.BinInt.inj_xO	40	4	search with cache (only 1: trivial).	0.154007911682	15
Coq.ZArith.BinInt.inj_xI	40	0	search with cache (only 1: reflexivity).	0.017364025116	1
Coq.ZArith.BinInt.inj_succ	40
Coq.ZArith.BinInt.inj_add	40	4	search with cache (only 1: split).	0.0169649124146	5
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_sub_max	40
Coq.ZArith.BinInt.inj_pred	40
Coq.ZArith.BinInt.inj_mul	40	0	search with cache (only 1: reflexivity).	0.0156590938568	1
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0169188976288	1
Coq.ZArith.BinInt.inj_square	40	4.0	search with cache (only 1: simpl; only 1: split).	0.01935505867	6
Coq.ZArith.BinInt.inj_compare	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0182321071625	2
Coq.ZArith.BinInt.inj_leb	40	0	search with cache (only 1: reflexivity).	0.0158629417419	1
Coq.ZArith.BinInt.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0157721042633	1
Coq.ZArith.BinInt.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0156209468842	1
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.0168840885162	1
Coq.ZArith.BinInt.inj_gcd	40	1	search with cache (only 1: reflexivity).	0.0164158344269	2
Coq.ZArith.BinInt.inj_divide	40
Coq.ZArith.BinInt.inj_testbit	40
Coq.ZArith.BinInt.inj_neg	40	0	search with cache (only 1: now injection 1).	0.015704870224	1
Coq.ZArith.BinInt.inj_neg_iff	40	0.1.0.1	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.026615858078	6
Coq.ZArith.BinInt.inj_pos	40	0	search with cache (only 1: now injection 1).	0.0168409347534	1
Coq.ZArith.BinInt.inj_pos_iff	40	0.1.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0269370079041	5
Coq.ZArith.BinInt.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.0168170928955	1
Coq.ZArith.BinInt.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.022616147995	2
Coq.ZArith.BinInt.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0166540145874	1
Coq.ZArith.BinInt.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0220811367035	1
Coq.ZArith.BinInt.neg_le_pos	40	0	search with cache (only 1: easy).	0.0225880146027	1
Coq.ZArith.BinInt.neg_lt_pos	40	0	search with cache (only 1: reflexivity).	0.016312122345	1
Coq.ZArith.BinInt.neg_le_neg	40	1.1.50.1	search with cache (only 1: intros; only 1: unfold Z.le, Z.ge; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	2.8660800457	3667
Coq.ZArith.BinInt.neg_lt_neg	40	0.0.66.1	search with cache (only 1: intros; only 1: unfold Z.lt, Z.gt; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	4.30886602402	5061
Coq.ZArith.BinInt.pos_le_pos	40	5.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: trivial).	0.0322802066803	11
Coq.ZArith.BinInt.pos_lt_pos	40	6.0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: now destruct (p - q)%positive).	0.0275089740753	10
Coq.ZArith.BinInt.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0194461345673	1
Coq.ZArith.BinInt.neg_xI	40	0	search with cache (only 1: reflexivity).	0.018415927887	1
Coq.ZArith.BinInt.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0159900188446	1
Coq.ZArith.BinInt.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0163650512695	1
Coq.ZArith.BinInt.opp_neg	40	6.0	search with cache (only 1: simpl; only 1: split).	0.0212430953979	8
Coq.ZArith.BinInt.opp_pos	40	0	search with cache (only 1: reflexivity).	0.0165200233459	1
Coq.ZArith.BinInt.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0206770896912	1
Coq.ZArith.BinInt.add_pos_neg	40	2	search with cache (only 1: reflexivity).	0.0854289531708	34
Coq.ZArith.BinInt.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0161600112915	1
Coq.ZArith.BinInt.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0157821178436	1
Coq.ZArith.BinInt.divide_pos_neg_r	40
Coq.ZArith.BinInt.divide_pos_neg_l	40
Coq.ZArith.BinInt.testbit_neg	40
Coq.ZArith.BinInt.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.015820980072	1
Coq.ZArith.BinInt.id	40
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40
Coq.ZArith.BinInt.to_pos_nonpos	40	8	search with cache (only 1: now destruct x).	0.106693983078	22
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: trivial).	0.0160789489746	1
Coq.ZArith.BinInt.inj_double	40	1.0.2.0.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: trivial; only 1: simpl; only 1: easy).	0.0620088577271	19
Coq.ZArith.BinInt.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0262231826782	1
Coq.ZArith.BinInt.inj_succ	40	0.0.0.0.0.2.1	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	0.053197145462	10
Coq.ZArith.BinInt.inj_add	40
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_pred	40	0.0.0.0.0.0.1.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: trivial; only 1: easy).	0.225161075592	54
Coq.ZArith.BinInt.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.111325025558	4
Coq.ZArith.BinInt.inj_pow	40
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_compare	40	0.0.2.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy || now destruct y; only 1: simpl; only 1: easy).	0.0718679428101	9
Coq.ZArith.BinInt.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0645408630371	4
Coq.ZArith.BinInt.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0639321804047	4
Coq.ZArith.BinInt.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.124018907547	4
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0.0.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.0277719497681	6
Coq.ZArith.BinInt.inj_gcd	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.10560297966	28
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.2	search with cache (only 1: intros; only 1: now f_equal).	0.0195519924164	4
Coq.ZArith.BinInt.ZL0	40	4	search with cache (only 1: now f_equal).	0.015606880188	5
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	7.0	search with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl').	0.139585971832	9
Coq.ZArith.BinInt.Z_eq_mult	40	5.32.9	search with cache (only 1: intros EQ; only 1: rewrite EQ in *; only 1: now destruct n).	7.54651403427	11816
Coq.ZArith.Zcomplements.floor_gt0	40	1.1.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: easy).	0.0198628902435	5
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	1.2.1.2.12.1	search with cache (only 1: Z.swap_greater; only 1: destruct n; only 1: auto with zarith; only 1: auto with zarith; only 1: simpl; only 1: auto with zarith).	1.90912914276	2950
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	1.0	search with cache (only 1: unfold Zlength; only 1: auto with zarith).	0.015084028244	3
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40	3.0.8.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: assert (H : forall (l : list A) acc, Zlength_aux acc A l = acc + Z.of_nat (length l)); only 1: clear l; only 1: induction l; only 1: auto with zarith; only 1: intros; only 1: simpl length; only 1: simpl Zlength_aux; only 1: rewrite IHl, Nat2Z.inj_succ, Z.add_succ_comm; only 1: auto; only 1: unfold Zlength; only 1: induction l; only 1: now rewrite H; only 1: now rewrite H).	37.2629029751	45447
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.1.0.0.0.0.1.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	3.54200005531	1866
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	12.3777060509	7959
Coq.ZArith.Zeven.Zeven_not_Zodd	40	1.1.1.0.1.1.1.1.0.1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition).	13.0128757954	13109
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.036572933197	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0193979740143	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0237250328064	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.2.1	search with cache (only 1: intros Hn Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.345306158066	40
Coq.ZArith.Zeven.Zquot2_opp	40	0.3	search with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0343239307404	5
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.1	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0369009971619	20
Coq.ZArith.Zeven.Zodd_ex	40	0.0.2.0.2	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.0577261447906	30
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.0.0.4.1.12.2	search with cache (only 1: boolify_even_odd; only 1: change 2 with (1 + 1); only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.21677184105	3003
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.0.1.4.0.3.0.4.11.27.2	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: intuition; only 1: intuition).	9.65409994125	9567
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.0.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.135193824768	14
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0521349906921	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.055722951889	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0096709728241	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0090868473053	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	0.4.3.0.7	search with cache (only 1: case a; only 1: apply Z.divide_opp_l; only 1: auto; only 1: intros p1; only 1: apply Z.divide_opp_l).	1.28729295731	1448
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00887703895569	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.2.0.1.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: trivial).	0.107259988785	30
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.0.7.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: trivial).	1.59267711639	1131
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	8	search with cache (only 1: Z.order).	0.135262012482	23
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	2.5	search with cache (only 1: intros x P Hzero Hpos Hneg; only 1: now apply Z.divide_pos_le).	0.0818138122559	41
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.3.12.5.0	search with cache (only 1: constructor; only 1: apply Z.divide_opp_r; only 1: intuition; only 1: intuition; only 1: intuition).	1.88760495186	4139
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.2.2.11	search with cache (only 1: constructor; only 1: auto with zarith; only 1: now destruct Z.odd; only 1: intuition).	2.65220403671	893
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0128979682922	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0362689495087	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0604000091553	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0231380462646	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.3	search with cache (only 1: intros; only 1: now apply Zis_gcd_sym).	0.0675020217896	21
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	0.0.0.3.1	search with cache (only 1: intros; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0143480300903	9
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	2.2.11	search with cache (only 1: intros a b; only 1: intros (H1, H2) H3; only 1: intuition).	3.40635299683	2347
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.8.3	search with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	0.403730154037	332
Coq.ZArith.Znumtheory.not_prime_1	40	0.12.2	search with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	0.224223136902	278
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.10.1	search with cache (only 1: intro p; only 1: intros a b; only 1: apply Z.gcd_greatest).	1.34391593933	345
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros Hb; only 1: unfold Z.modulo; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	3.15579915047	1241
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.8.1.0	search with cache (only 1: intros; only 1: rewrite Z.mul_comm; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	1.15205979347	485
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	8.0	search with cache (only 1: intros; only 1: easy).	0.0745139122009	25
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0269219875336	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0265929698944	5
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0280940532684	4
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.0.9.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	1.26017618179	590
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0252389907837	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.5.0.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0323829650879	10
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0233900547028	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0237920284271	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0236351490021	3
Coq.ZArith.Zdiv.eqm_refl	40	10	search with cache (only 1: easy).	0.0278840065002	38
Coq.ZArith.Zdiv.eqm_sym	40	1.1	search with cache (only 1: intros x y H; only 1: now subst).	0.019767999649	4
Coq.ZArith.Zdiv.eqm_trans	40	1.0.0.1.10.0.0.0	search with cache (only 1: generalize 1; only 1: intros a b; only 1: unfold eqm; only 1: unfold Z.modulo; only 1: intros Hr1 Hr2 H; only 1: destruct Z.div_eucl; only 1: subst; only 1: auto).	3.43601608276	4527
Coq.ZArith.Zdiv.eqm_setoid	40	9.0.0.0.0.4	search with cache (only 1: constructor; only 1: unfold eqm; only 1: auto; only 1: unfold eqm; only 1: auto; only 1: now unfold eqm; intros a b c ->).	1.6386320591	1348
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	2.5.2.0	search with cache (only 1: unfold eqm; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: auto).	0.194386005402	172
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.1.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0289318561554	4
Coq.ZArith.Zdiv.Zeven_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0411450862885	14
Coq.ZArith.Zdiv.Z_mod_same	40	2.0.0	search with cache (only 1: intros; only 1: apply Z.mod_same; only 1: now intros ->).	0.0241310596466	5
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	2.0.0	search with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).	0.035787820816	5
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0443379878998	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.2.1.0.0.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: zero_or_not b; only 1: easy; only 1: auto).	0.0425338745117	9
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0344541072845	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40	0.0.0.0.0.6.13.25.0	search with cache (only 1: intros; only 1: eapply Zmod_unique_full; only 1: red; only 1: left; only 1: split; only 1: auto with zarith; only 1: now apply inj_lt, Nat.mod_upper_bound; only 1: rewrite <- Nat2Z.inj_mul, <- Nat2Z.inj_add; only 1: now apply inj_eq, Nat.div_mod).	5.34778785706	8127
Coq.ZArith.Zeuclid.mod_wd	40	0	search with cache (only 1: solve_proper).	0.0508389472961	1
Coq.ZArith.Zeuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0140690803528	1
Coq.ZArith.Zeuclid.div_mod	40
Coq.ZArith.Zeuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	4	search with cache (only 1: now destruct n).	0.0145690441132	14
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.eqb_eq	40
Coq.ZArith.Int.eqb_neq	40
Coq.ZArith.Int.ltb_lt	40
Coq.ZArith.Int.ltb_nlt	40
Coq.ZArith.Int.leb_le	40
Coq.ZArith.Int.leb_nle	40
Coq.ZArith.Int.norm_ei_correct	40
Coq.ZArith.Int.norm_ez_correct	40
Coq.ZArith.Int.norm_ep_correct	40
Coq.ZArith.Int.norm_ep_correct2	40
Coq.ZArith.Int.gt_le_dec	40
Coq.ZArith.Int.ge_lt_dec	40
Coq.ZArith.Int.i2z_eq	40	1.2	search with cache (only 1: intros; only 1: now f_equal).	0.0110199451447	5
Coq.ZArith.Int.i2z_0	40	1	search with cache (only 1: now subst).	0.00706887245178	2
Coq.ZArith.Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.00649380683899	1
Coq.ZArith.Int.i2z_2	40	1	search with cache (only 1: reflexivity).	0.00889801979065	2
Coq.ZArith.Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00651001930237	1
Coq.ZArith.Int.i2z_add	40	0	search with cache (only 1: trivial).	0.00744199752808	1
Coq.ZArith.Int.i2z_opp	40	0	search with cache (only 1: trivial).	0.00692796707153	1
Coq.ZArith.Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0073869228363	1
Coq.ZArith.Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00759506225586	1
Coq.ZArith.Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.00773596763611	1
Coq.ZArith.Int.i2z_eqb	40	0	search with cache (only 1: trivial).	0.0072181224823	1
Coq.ZArith.Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00723695755005	1
Coq.ZArith.Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00731492042542	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.2	search with cache (only 1: simpl; only 1: trivial).	0.017951965332	4
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: reflexivity).	0.0149941444397	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	5.3.1.1.10	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: now f_equal).	2.78096699715	3191
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	1	search with cache (only 1: now f_equal).	0.0151040554047	2
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0146489143372	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	6	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0179028511047	7
Coq.ZArith.Zpower.two_p_equiv	40	1.0.1.78	search with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	3.0607919693	10501
Coq.ZArith.Zpower.two_power_nat_S	40	2.1.1	search with cache (only 1: induction n; only 1: trivial; only 1: auto).	0.0257179737091	7
Coq.ZArith.Zpower.shift_nat_plus	40	9.0.0.3.7	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.616662979126	721
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	3	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0152640342712	4
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0167269706726	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.1.0.2.2.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.112627029419	74
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0208129882812	1
Coq.ZArith.auxiliary.Zle_left	40	5	search with cache (only 1: apply Z.le_0_sub).	0.0216300487518	6
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0147740840912	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	4	search with cache (only 1: apply Z.lt_0_sub).	0.0217189788818	5
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0143051147461	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.12	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.130867958069	104
Coq.ZArith.auxiliary.Zgt_left	40	0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.0711359977722	13
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0350069999695	2
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0344309806824	2
Coq.ZArith.auxiliary.Zle_mult_approx	40	37.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	11.2198801041	8456
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	1.0.0.0.66	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: apply Z.max_l; only 1: easy).	1.87335991859	4439
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.115	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	8.37551999092	27635
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.4.0.2.0.0.19	search with cache (only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl Zgcd_bound in *; only 1: lia; only 1: simpl; only 1: lia).	2.60061883926	2123
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	1.1.1.9.1.7	search with cache (only 1: destruct n; only 1: auto; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	3.30603909492	3306
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.1.2.0.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.81649518013	530
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	14	search with cache (only 1: Z.order).	0.178087949753	137
Coq.ZArith.Zorder.Zlt_not_le	40	15	search with cache (only 1: Z.order).	0.226846933365	158
Coq.ZArith.Zorder.Zle_not_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0265500545502	2
Coq.ZArith.Zorder.Zgt_not_le	40	1	search with cache (only 1: auto).	0.0152959823608	2
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0243790149689	2
Coq.ZArith.Zorder.Znot_lt_ge	40	1	search with cache (only 1: auto).	0.0148830413818	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0131199359894	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0258660316467	2
Coq.ZArith.Zorder.not_Zne	40	5.0.0.1	search with cache (only 1: destruct (Z.eq_decidable n m); only 1: subst; only 1: auto; only 1: now subst).	0.0270349979401	10
Coq.ZArith.Zorder.Zgt_asym	40	7.0.4	search with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).	0.483588933945	223
Coq.ZArith.Zorder.Zgt_irrefl	40	9	search with cache (only 1: now destruct n).	0.0421509742737	33
Coq.ZArith.Zorder.Zle_lt_or_eq	40	3.1.1.1.0.1.6.2	search with cache (only 1: intro; only 1: unfold Z.gt, Z.lt; only 1: case Z.compare_spec; only 1: right; only 1: assumption; only 1: left; only 1: auto; only 1: Z.order).	4.99699902534	4327
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0425779819489	3
Coq.ZArith.Zorder.Zle_gt_trans	40	2.13.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.486008882523	316
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0650491714478	2
Coq.ZArith.Zorder.Zge_trans	40	0.3.1	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: now transitivity m).	0.0251729488373	7
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0593328475952	16
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.03080701828	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	search with cache (only 1: apply Z.succ_le_mono).	0.0133171081543	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.013500213623	1
Coq.ZArith.Zorder.Zgt_succ	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0165929794312	2
Coq.ZArith.Zorder.Znot_le_succ	40	0.0	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.0153951644897	2
Coq.ZArith.Zorder.Zgt_le_succ	40	6.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0318441390991	10
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0136761665344	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0134420394897	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.024631023407	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0138759613037	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0257668495178	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.014564037323	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.0.0.0.0.60	search with cache (only 1: induction n; only 1: easy; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy).	25.0560708046	18014
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0256330966949	4
Coq.ZArith.Zorder.Zle_neg_pos	40	0	search with cache (only 1: easy).	0.121185064316	1
Coq.ZArith.Zorder.Zgt_pos_0	40	0.3	search with cache (only 1: intros; only 1: easy).	0.0168960094452	5
Coq.ZArith.Zorder.Zle_0_pos	40	1	search with cache (only 1: easy).	0.119206190109	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: reflexivity).	0.0139150619507	1
Coq.ZArith.Zorder.Zle_0_nat	40	2.3.2.22	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).	0.593496799469	817
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	0.9.0.0.3	search with cache (only 1: intro; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: auto).	2.20373392105	1283
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0147340297699	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.016303062439	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0163140296936	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	0	search with cache (only 1: apply Z.add_le_mono_r).	0.0139400959015	1
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0138869285583	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0156919956207	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0322389602661	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.032781124115	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.7	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.19349694252	111
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.105010986328	53
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.3.1.4.0	search with cache (only 1: intros; only 1: destruct p; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: discriminate).	0.775742053986	300
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0149340629578	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0150020122528	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0433669090271	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.3	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0790731906891	27
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0448131561279	3
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	0.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0169219970703	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0540809631348	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0163488388062	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0265619754791	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0142040252686	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0441999435425	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.044862985611	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.0.17	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	2.29817295074	1501
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0260469913483	2
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	1.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0274741649628	5
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	1.0.21	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	3.30993199348	2751
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0423710346222	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0139408111572	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.1.0	search with cache (only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: discriminate).	0.0135581493378	4
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.00697112083435	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.0	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0238718986511	2
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	13	search with cache (only 1: auto).	0.0320611000061	66
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.8	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0197250843048	17
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.5.1	search with cache (only 1: symmetry; only 1: Z.swap_greater; only 1: apply Z.leb_le).	0.0437490940094	26
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.7.1.0	search with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: rewrite Z.gtb_ltb; only 1: apply Z.ltb_lt).	0.202563047409	160
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0133152008057	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	2.1.0.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: discriminate; only 1: discriminate).	0.0708959102631	9
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0232660770416	4
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0255529880524	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40	0.0.0.0.23	search with cache (only 1: unfold Z.gt, Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	9.50999116898	8360
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.2.0	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.505146026611	102
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.2.4	search with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.516726017	771
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.6.6	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	39.6347489357	18322
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.1.1.1.2	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: unfold Z.ge; only 1: now left || (right; tauto)).	0.424883127213	121
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: auto).	3.08964800835	1812
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: trivial).	0.0137531757355	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.2.3.0.9	search with cache (only 1: intros Hb; only 1: destruct b as [| p| p]; only 1: now elim Hb; only 1: now elim Hb; only 1: trivial).	2.26870799065	1871
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.2	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0413119792938	31
Coq.Program.Wf.Fix_F_inv	40	0.7.7.2.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	1.8726940155	2455
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0197811126709	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0126869678497	3
Coq.Program.Wf.Fix_F_sub_rect	40	0.4.11.2	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.400828123093	754
Coq.Program.Wf.eq_Fix_F_sub	40	1.11.0	search with cache (only 1: induction (Rwf x); only 1: apply Fix_F_inv; only 1: auto).	0.484920978546	311
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	5.4.0.22.3.4.14	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: intros h1 h2; only 1: destruct h2; only 1: subst; only 1: reflexivity).	5.39212179184	26738
Coq.Program.Equality.JMeq_eq_refl	40	1	search with cache (only 1: apply UIP).	0.00613307952881	2
Coq.Program.Equality.UIP_refl_refl	40	7	search with cache (only 1: apply UIP).	0.0554730892181	85
Coq.Program.Equality.inj_pairT2_refl	40	23	search with cache (only 1: apply UIP).	0.0620028972626	255
Coq.Program.Equality.solution_left	40	1.2.16	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0792200565338	219
Coq.Program.Equality.solution_right	40	2.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00876617431641	5
Coq.Program.Equality.deletion	40	2.0	search with cache (only 1: intros; only 1: assumption).	0.00657916069031	4
Coq.Program.Equality.simplification_heq	40	10.12.4.6	search with cache (only 1: intro; only 1: intro eq_dep_eq; only 1: subst; only 1: auto).	0.414617061615	1702
Coq.Program.Equality.simplification_existT2	40	0.0.0.5.15	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.291838884354	728
Coq.Program.Equality.simplification_existT1	40	0.16.3.6.13.30	search with cache (only 1: intro eq_dep_eq; only 1: intros; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: assumption).	5.70701789856	33165
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0102140903473	3
Coq.Program.Combinators.compose_id_left	40	0.2	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.00670003890991	4
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00628304481506	2
Coq.Program.Combinators.compose_assoc	40	9	search with cache (only 1: trivial).	0.00586891174316	10
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.00686097145081	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00705480575562	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0394539833069	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sorted_merge	40
Coq.Sorting.Mergesort.Permuted_merge	40
Coq.Sorting.Mergesort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sorted_merge_stack	40	0.0.0.0.0.0.0.0.0.0.6.0	search with cache (only 1: induction stack as [| [| ]]; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	2.31268501282	2355
Coq.Sorting.Mergesort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sorted_sort	40
Coq.Sorting.Mergesort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Permuted_sort	40
Coq.Sorting.Mergesort.StronglySorted_sort	40
Coq.Sorting.Mergesort.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation_sym	40	6.0.0.0.0.28	search with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial; only 1: constructor; only 1: eauto with arith).	2.38979506493	7231
Coq.Sorting.Permutation.Permutation_trans	40	0.0.1.1	search with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.0191411972046	6
Coq.Sorting.Permutation.Permutation_cons	40	1.0.3.3	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: constructor; only 1: discriminate || auto).	0.0457718372345	47
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40	0.0.0.0.0.0.0.0.2.0.17	search with cache (only 1: intros H y; only 1: intros l l' x Hperm; only 1: subst; only 1: induction Hperm; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: tauto).	9.50093412399	10555
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.2.12	search with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: auto).	4.65669989586	724
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	4.0	search with cache (only 1: intro l'; only 1: auto).	0.0181028842926	6
Coq.Sorting.Permutation.Permutation_rev	40	2.4.4.2.2	search with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	3.34605503082	843
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.0417618751526	10
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	1.04946088791	19
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	15	search with cache (only 1: split).	0.238697052002	316
Coq.Sorting.PermutSetoid.permut_sym	40	0.2	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0145409107208	4
Coq.Sorting.PermutSetoid.permut_trans	40	23.1.4	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: congruence).	39.6329541206	43055
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0205512046814	4
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	1.0.1.4.7	search with cache (only 1: unfold permutation, meq; only 1: symmetry; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	1.10093808174	593
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	0.1.19.8.4	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eqA_dec a a'); only 1: auto with arith; only 1: congruence).	2.64846920967	4277
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	1.65488910675	516
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.2.0.0.0.0.0.0.0.3.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: rewrite Nat.add_comm, <- !Nat.add_assoc; only 1: f_equal; only 1: auto with arith).	10.4129390717	2892
Coq.Sorting.PermutSetoid.if_eqA_else	40	1.3.31.10.0	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: congruence; only 1: auto).	17.2588040829	31896
Coq.Sorting.PermutSetoid.if_eqA_refl	40	23.0.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	2.58615994453	3541
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.0326149463654	5
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40	1.0.1.2.1.4.1.1.1	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros a'; only 1: intros l a; only 1: intros; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	4.25029706955	3280
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	1.0.0.4.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive).	0.0607619285583	49
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.10.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.504622936249	341
Coq.Sorting.Sorted.Sorted_inv	40	0.0	search with cache (only 1: inversion 1; only 1: auto).	0.0218939781189	2
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.0	search with cache (only 1: inversion 1; only 1: auto).	0.0216448307037	2
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0226368904114	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	1.2.0.0.1.8	search with cache (only 1: intro Pdec; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: auto using Sorted, LocallySorted, HdRel).	5.70047497749	3762
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0	search with cache (only 1: split).	0.00844979286194	1
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0141549110413	2
Coq.Sorting.Heap.invert_heap	40	0.13.21	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with datatypes).	0.404375076294	769
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.3.0.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	1.91698288918	1079
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	1.0.1.2.1.1	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl in *; only 1: auto with datatypes).	0.163201093674	79
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	1.6	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0472700595856	34
Coq.Sorting.Heap.list_to_heap	40	1.0.7	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.0595779418945	43
Coq.Sorting.Heap.heap_to_list	40	4.13	search with cache (only 1: fix merge 1; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.554485082626	608
Coq.Sorting.Heap.treesort	40	5.4	search with cache (only 1: fix merge0 1; only 1: auto using Sorted_cons, HdRel_cons with datatypes).	0.134959936142	44
Coq.Init.Wf.Acc_inv	40	5.5.7	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.111404180527	400
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00823092460632	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00840187072754	4
Coq.Init.Wf.Fix_F_eq	40	0.53	search with cache (only 1: intros f [x]; only 1: trivial).	0.537791013718	3150
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.7.0.1.14.1.0	search with cache (only 1: intro z; only 1: intro p; only 1: destruct p; only 1: trivial; only 1: intro H; only 1: induction n; only 1: trivial).	1.0685069561	7030
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0100250244141	6
Coq.Init.Peano.pred_Sn	40	1	search with cache (only 1: reflexivity).	0.00535011291504	2
Coq.Init.Peano.not_eq_S	40	5.6.1	search with cache (only 1: red; only 1: intro A; only 1: auto).	0.089497089386	431
Coq.Init.Peano.O_S	40	3	search with cache (only 1: discriminate).	0.00607204437256	4
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.0.0	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0145719051361	19
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00794696807861	6
Coq.Init.Peano.plus_n_Sm	40	0.0.1.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00958609580994	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00901198387146	6
Coq.Init.Peano.mult_n_O	40	0.0.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00793385505676	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00666117668152	7
Coq.Init.Peano.le_n_S	40	1.2.1	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0128560066223	29
Coq.Init.Peano.nat_case	40	1.1.3.2	search with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.0236320495605	58
Coq.Init.Peano.nat_double_ind	40	0.0.5.1.7	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0790429115295	342
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.5.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	14.0027401447	29996
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.3.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.32841205597	9233
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.67119288445	5040
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	0.1.2.0.3.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	0.274008989334	412
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.1.29.30	search with cache (only 1: intro H; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	3.19678592682	34125
Coq.Init.Datatypes.eq_true_ind_r	40	0.2.19.16.11.8	search with cache (only 1: intro; only 1: intro; only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: assumption).	0.881103992462	12401
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00672197341919	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0070629119873	3
Coq.Init.Datatypes.surjective_pairing	40	1.24	search with cache (only 1: destruct p; only 1: reflexivity).	0.0453369617462	335
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.7	search with cache (only 1: destruct H; only 1: reflexivity).	0.0110130310059	9
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.18	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0429918766022	241
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	8.80991792679	35764
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	0.15.0.0.0.0.15.0.0.0.0.15.0.0.0.5	search with cache (only 1: destruct c; only 1: red; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: trivial; only 1: red; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: trivial; only 1: red; only 1: intros H; only 1: constructor; only 1: inversion_clear H; only 1: trivial).	25.7752718925	213818
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00332593917847	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.1.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0110619068146	37
Coq.Init.Logic.iff_sym	40	0.0.0.2	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00510787963867	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.2.0.0.0.2.0.0.4	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0592639446259	728
Coq.Init.Logic.and_iff_compat_r	40	1.0.1.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0771570205688	1029
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	1.1.0.2.1.1.1.1.0.0.1.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.27316904068	5270
Coq.Init.Logic.imp_iff_compat_l	40	6.6.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0321409702301	319
Coq.Init.Logic.imp_iff_compat_r	40	7.7.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.048015832901	567
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00548505783081	4
Coq.Init.Logic.neg_false	40	1.3.10.0.1.0	search with cache (only 1: split; only 1: split; only 1: trivial; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.124616146088	1431
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [HypL HypR]; only 1: split; only 1: trivial; only 1: trivial).	0.0175168514252	68
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.4.0.0.0.1.4.2	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: exact H; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: exact H).	0.312361955643	1865
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.1	search with cache (only 1: intros; only 1: assumption).	0.00558805465698	4
Coq.Init.Logic.iff_to_and	40	1.2.1.2.6	search with cache (only 1: split; only 1: intro H; only 1: assumption; only 1: intro H; only 1: assumption).	0.0901780128479	572
Coq.Init.Logic.inst	40	4	search with cache (only 1: trivial).	0.00585603713989	5
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00502800941467	2
Coq.Init.Logic.absurd	40	0.7.7.1.5	search with cache (only 1: intro H; only 1: intro A; only 1: intros; only 1: elim H1; only 1: assumption).	0.363130092621	5861
Coq.Init.Logic.eq_sym	40	2.20	search with cache (only 1: destruct 1; only 1: trivial).	0.0609459877014	313
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00576186180115	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00538277626038	2
Coq.Init.Logic.f_equal	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00618004798889	3
Coq.Init.Logic.not_eq_sym	40	0.36.1	search with cache (only 1: destruct 2; only 1: apply H; only 1: trivial).	0.788707017899	7319
Coq.Init.Logic.eq_sind_r	40	0.2.0	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: trivial).	0.00626301765442	5
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00498008728027	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00543093681335	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00591993331909	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.4.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.00794887542725	7
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00581908226013	2
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00668096542358	3
Coq.Init.Logic.f_equal2	40	0.3.1	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.00626802444458	7
Coq.Init.Logic.f_equal3	40	0.1.0.0.5.3	search with cache (only 1: intro H; only 1: intro H1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0423510074615	184
Coq.Init.Logic.f_equal4	40	0.1.0.0.0.5.3	search with cache (only 1: intro H; only 1: intro H1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0650501251221	252
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0.5.3	search with cache (only 1: intro H; only 1: intro H1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.164134025574	336
Coq.Init.Logic.f_equal_compose	40	0.12.29.41	search with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	5.24168491364	61945
Coq.Init.Logic.eq_trans_refl_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00629997253418	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00570893287659	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00565600395203	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00576400756836	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0059540271759	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.11.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.0494518280029	280
Coq.Init.Logic.rew_map	40	0.0.4	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00783896446228	7
Coq.Init.Logic.eq_trans_map	40	4.5.14.0.7.52.7	search with cache (only 1: intro H; only 1: intros A C h1 h2; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: intros; only 1: destruct Fr; only 1: trivial).	25.3973119259	265023
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00664710998535	2
Coq.Init.Logic.map_subst_map	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.00720119476318	3
Coq.Init.Logic.rew_swap	40	5.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00721907615662	10
Coq.Init.Logic.rew_compose	40	2.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00722002983093	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00635004043579	3
Coq.Init.Logic.eq_trans_map_distr	40	0.0.1.1.17.1	search with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: unfold f_equal; only 1: trivial).	0.340560913086	1910
Coq.Init.Logic.eq_sym_map_distr	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00635814666748	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.3.0	search with cache (only 1: destruct e'; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.00911116600037	9
Coq.Init.Logic.eq_trans_rew_distr	40	0.10.5.6	search with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.210985898972	920
Coq.Init.Logic.rew_const	40	0.25.7.16	search with cache (only 1: intro H; only 1: intros ? ? ? Fl Fr; only 1: destruct Fl; only 1: reflexivity).	0.799607992172	10434
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.6.8	search with cache (only 1: intros A B []; only 1: split; only 1: trivial).	0.0503039360046	487
Coq.Init.Logic.inhabited_covariant	40	0.8.19	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.121065855026	681
Coq.Init.Logic.eq_stepl	40	0.3.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00455617904663	6
Coq.Init.Logic.iff_stepl	40	10.10.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.584374904633	3246
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.5.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0108871459961	18
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00732898712158	2
Coq.Init.Logic_Type.identity_sym	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.0054919719696	4
Coq.Init.Logic_Type.identity_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00648903846741	3
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00550603866577	2
Coq.Init.Logic_Type.not_identity_sym	40	0.3.1	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.008465051651	16
Coq.Init.Logic_Type.identity_ind_r	40	2.8.3	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: assumption).	0.0838701725006	369
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00608110427856	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00618410110474	3
Coq.Init.Specif.sigT_eta	40	0.2	search with cache (only 1: destruct p; only 1: reflexivity).	0.00666499137878	4
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00785207748413	2
Coq.Init.Specif.sigT2_eta	40	1.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.0104441642761	4
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00744915008545	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.3.2.8.2	search with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.100908994675	609
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.1.67.40	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	2.02226400375	35192
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0103559494019	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0106220245361	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0158271789551	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.11.18.0	search with cache (only 1: destruct p', q'; only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).	2.99349808693	5777
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0135109424591	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0147299766541	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0371820926666	23
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	6.6.0.0.0.1.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	0.965379953384	1820
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0158400535583	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.0.2.1.1	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0447280406952	15
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	3.7.0.0.1.0.1.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	2.00818800926	2212
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0473210811615	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0199341773987	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.0.0.2.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0492241382599	15
Coq.Init.Specif.eq_sig2_uncurried_iff	40	2.8.0.0.0.0.1.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	1.8122010231	1777
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0206968784332	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0118370056152	3
Coq.QArith.QOrderedType.lt_strorder	40	0.0.0.0.0.0.0.4.0.3.13	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.821444034576	1375
Coq.QArith.QOrderedType.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0182158946991	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0155599117279	3
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0155618190765	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	0.0.1.0.5	search with cache (only 1: intro p; only 1: unfold Qmult'; only 1: intros; only 1: rewrite H, H0; only 1: auto with qarith).	0.25724196434	91
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	0.0.2.0.5	search with cache (only 1: intro p; only 1: unfold Qminus'; only 1: intros; only 1: rewrite H, H0; only 1: auto with qarith).	0.419913053513	152
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	0.0	search with cache (only 1: intros; only 1: now rewrite !Qred_correct).	0.0243561267853	2
Coq.QArith.Qreduction.Qred_le	40	4	search with cache (only 1: now rewrite !Qred_correct).	0.192766904831	34
Coq.QArith.Qreduction.Qred_lt	40	5	search with cache (only 1: now rewrite !Qred_correct).	0.182607889175	33
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40	0.1.3.0.0.0.1.0.1.0.0	search with cache (only 1: destruct x as [[| a| a] d]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos.ggcd a d) as [x [y z]]; only 1: simpl; only 1: intros; only 1: injection H as [=<- <-]; only 1: auto).	8.71903300285	6021
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.0.0.1.3	search with cache (only 1: unfold Qcle, Qcminus; only 1: simpl in *; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	0.0357978343964	26
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	0.7.16	search with cache (only 1: Qc_unfolds; only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	1.81779003143	1242
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	6.3	search with cache (only 1: Qc_unfolds; only 1: apply Qle_Qabs).	0.16326212883	111
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	0.2.5.9	search with cache (only 1: Qc_unfolds; only 1: repeat rewrite Qred_correct; only 1: rewrite Qabs_Qle_condition; only 1: intuition).	4.17780303955	1687
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0500130653381	9
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40	5.0.2.0.0.0.0.1.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite Qinv_mult_distr; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_mult_distr; only 1: repeat rewrite IHn; only 1: reflexivity; only 1: reflexivity).	10.408205986	4596
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.3.1.0.0.0.6	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto with *; only 1: red; only 1: auto with qarith).	0.792517900467	486
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0146589279175	1
Coq.QArith.Qfield.ex2	40	0	search with cache (only 1: exact Qplus_comm).	0.0149941444397	1
Coq.QArith.Qfield.ex3	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0588338375092	3
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: ring).	0.0231080055237	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.024297952652	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0247421264648	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0294589996338	3
Coq.QArith.Qfield.ex8	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0295310020447	3
Coq.QArith.Qfield.ex9	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0297601222992	2
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	2.0.2.4	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.197196960449	59
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0374250411987	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.0538139343262	7
Coq.QArith.Qcanon.Qred_involutive	40	2.0.14	search with cache (only 1: intros E; only 1: apply Qred_complete; only 1: apply Qred_correct).	1.09487080574	1578
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.1.2.1	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.123392820358	68
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	13	search with cache (only 1: intuition).	0.362653017044	391
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	10.1	search with cache (only 1: intro H; only 1: discriminate).	0.139297962189	156
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	3.8.1.26.5.0.0	search with cache (only 1: unfold Q2Qc; only 1: intros H; only 1: qc; only 1: red; only 1: simpl; only 1: repeat rewrite <- Z.mul_assoc; only 1: auto).	19.1824300289	42784
Coq.QArith.Qcanon.Qcplus_0_r	40	34.0.14	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	20.8509991169	43776
Coq.QArith.Qcanon.Qcplus_comm	40	10.19.0.1	search with cache (only 1: intros; only 1: qc; only 1: ring_simplify; only 1: auto with qarith).	7.81812906265	9953
Coq.QArith.Qcanon.Qcopp_involutive	40	30.6.4	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	5.47881603241	12552
Coq.QArith.Qcanon.Qcplus_opp_r	40	3.0.35.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	19.1115109921	15700
Coq.QArith.Qcanon.Qcmult_assoc	40	26.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	2.34351706505	3261
Coq.QArith.Qcanon.Qcmult_0_l	40	2.5.1	search with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: auto with qarith).	0.232773065567	139
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0241310596466	5
Coq.QArith.Qcanon.Qcmult_comm	40	12.11.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	2.64744019508	3575
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	36.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	26.9569327831	17874
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	37.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	22.1387550831	16221
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.6.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.16847205162	74
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	2.19.3	search with cache (only 1: intros p; only 1: red; only 1: auto with qarith).	0.527797937393	1330
Coq.QArith.Qcanon.Qcle_antisym	40	13.8	search with cache (only 1: intro H; only 1: auto with qarith).	8.37548398972	4684
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	13.1.3.1	search with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	6.31753611565	5368
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.5.0.1	search with cache (only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.528568983078	538
Coq.QArith.Qcanon.Qcnot_lt_le	40	16.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	3.70323300362	2856
Coq.QArith.Qcanon.Qcnot_le_lt	40	16.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	3.92973303795	4071
Coq.QArith.Qcanon.Qclt_not_le	40	0.1.1.0.4.3.1	search with cache (only 1: intros; only 1: intro; only 1: destruct (Qlt_not_eq _ _ H); only 1: apply Qle_antisym; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	2.64477086067	1952
Coq.QArith.Qcanon.Qcle_not_lt	40	1.4.0.1	search with cache (only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	0.101166963577	55
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.13.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto with qarith).	1.71564221382	2150
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.2.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.0650639533997	37
Coq.QArith.Qreals.IZR_nz	40	0.4.1	search with cache (only 1: red; only 1: intros H0; only 1: now apply not_0_IZR).	0.0488920211792	14
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	6.1	search with cache (only 1: symmetry; only 1: reflexivity).	0.0443470478058	21
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0422561168671	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	2.2.0	search with cache (only 1: apply Z.compare_eq_iff; only 1: apply Z.compare_eq_iff; only 1: now constructor).	0.0861210823059	19
Coq.QArith.QArith_base.Qeq_sym	40	4.1	search with cache (only 1: symmetry; only 1: trivial).	0.022852897644	7
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.0882060527802	42
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0155148506165	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0155730247498	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	search with cache (only 1: auto with qarith).	0.0156898498535	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0182719230652	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	1.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.0322358608246	3
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.2	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0624980926514	8
Coq.QArith.QArith_base.Qmake_Qdiv	40	5.0.0.0	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: now constructor).	0.0283710956573	9
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	4.0.3.8.3	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	8.25356602669	6698
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	3.2.0	search with cache (only 1: rewrite <- Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: now subst).	0.0605359077454	16
Coq.QArith.QArith_base.Qplus_assoc	40	8.6.1.2.11	search with cache (only 1: symmetry; only 1: unfold Qeq; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	26.0645470619	12815
Coq.QArith.QArith_base.Qplus_0_l	40	0.1.12.5	search with cache (only 1: unfold Qeq; only 1: intros; only 1: simpl in *; only 1: ring).	3.08350300789	787
Coq.QArith.QArith_base.Qplus_0_r	40	0.2.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.059415102005	7
Coq.QArith.QArith_base.Qplus_comm	40	1.0.0.4.0.3	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: intros; only 1: simpl_mult; only 1: ring_simplify; only 1: now constructor).	1.29035496712	153
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0384900569916	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0424580574036	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	1.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.0946419239044	6
Coq.QArith.QArith_base.Qmult_0_l	40	1.0.1	search with cache (only 1: red; only 1: simpl in *; only 1: now subst).	0.0216660499573	5
Coq.QArith.QArith_base.Qmult_0_r	40	3.0.5.0	search with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	0.3792989254	162
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	1.1.0.0.0.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.0982420444489	17
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0619449615479	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	1.3.0.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: simpl_mult; only 1: ring).	0.33975815773	26
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.1179728508	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.1.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: f_equal).	0.0246939659119	5
Coq.QArith.QArith_base.inject_Z_opp	40	5.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: reflexivity).	0.0170881748199	7
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.5.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.0676920413971	10
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0484561920166	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	24.1.0	search with cache (only 1: apply Qle_bool_iff; only 1: apply Zle_is_le_bool; only 1: now reflexivity).	20.6528828144	27998
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.2.18	search with cache (only 1: compute; only 1: apply Z.ge_le_iff; only 1: auto with zarith).	0.3641269207	501
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	1.2.0.12	search with cache (only 1: unfold Qle; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: reflexivity).	1.25179100037	880
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	10	search with cache (only 1: apply Z.ge_le_iff).	0.071790933609	21
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0139689445496	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0577869415283	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.0.0.0.6.0	search with cache (only 1: split; only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	18.8120570183	3368
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.7	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	15.970083952	4059
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.4	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.785398960114	256
Coq.QArith.QArith_base.Qmult_lt_compat_r	40	0.1.0.0.2.0.2.5	search with cache (only 1: unfold Qle, Qlt; only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: simpl_mult; only 1: intros; only 1: match goal with | |- (?a < ?b)%Z => ring_simplify x1 y1 (Z.pos x2) (Z.pos y2) a b end; only 1: do 2 (apply Z.mul_lt_mono_pos_r; try easy)).	13.3722660542	10439
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	2.1.2.1.0.0.2.0.5.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qle; only 1: case x1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: discriminate; only 1: intros; only 1: simpl; only 1: now apply Z.lt_eq_cases).	32.8470320702	24039
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0242369174957	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40	1.0.0.0.1.0.5.0.5.1	search with cache (only 1: intros a c Hc H; only 1: apply Qnot_le_lt; only 1: setoid_replace (/ c) with (1 * / c) by symmetry; apply Qmult_1_l; only 1: intros H0; only 1: apply (Qlt_not_le _ _ H); only 1: apply Qmult_lt_0_le_reg_r with (/ c); only 1: apply Qinv_lt_0_compat; only 1: assumption; only 1: setoid_replace (a * c / c) with a by apply Qdiv_mult_l; auto with *; only 1: assumption).	15.7990751266	10312
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40	1.0.0.0.1.0.8.0.8.1	search with cache (only 1: intros b c Hc H; only 1: apply Qnot_le_lt; only 1: setoid_replace (/ b) with (1 * / b) by symmetry; apply Qmult_1_l; only 1: intros H0; only 1: apply (Qlt_not_le _ _ H); only 1: apply Qmult_lt_0_le_reg_r with (/ b); only 1: apply Qinv_lt_0_compat; only 1: assumption; only 1: setoid_replace (c * b / b) with c by apply Qdiv_mult_l; auto with *; only 1: assumption).	26.1368479729	23695
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.plus_max_distr_l	40	1.0.0.0.0.0.0.0.0.6.0.9.1	search with cache (only 1: intros; only 1: apply max_monotone; only 1: eauto with *; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qle; only 1: simpl; only 1: simpl_mult; only 1: intros; only 1: match goal with | |- (?a <= ?b)%Z => ring_simplify a b end; only 1: apply Z.add_le_mono; only 1: auto with zarith; only 1: match goal with | |- (?a <= ?b)%Z => ring_simplify x1 y1 (Z.pos x2) (Z.pos y2) a b end; only 1: now apply Z.mul_le_mono_pos_r).	30.0380911827	8084
Coq.QArith.Qminmax.plus_max_distr_r	40
Coq.QArith.Qminmax.plus_min_distr_l	40	0.0.0.0.1.13.0	search with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	2.79337406158	666
Coq.QArith.Qminmax.plus_min_distr_r	40	0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.488471031189	82
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	17.8.2	search with cache (only 1: intros; only 1: simpl; only 1: auto with zarith).	0.788343191147	1643
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.3.1.0.1	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.552105903625	195
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.241059064865	48
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0469179153442	9
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.0.12	search with cache (only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate); only 1: abstract (compute; discriminate)).	0.483162879944	478
Coq.QArith.Qabs.Zabs_Qabs	40	7.0	search with cache (only 1: intros x H; only 1: reflexivity).	0.0667669773102	56
Coq.QArith.Qabs.Qabs_opp	40	1.1.0.14.5	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	29.1524569988	26757
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	4.4.0.4.1.1	search with cache (only 1: intros [xn xd] [yn yd]; only 1: simpl in *; only 1: unfold Qeq in *; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).	2.3322429657	2288
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	3.1.0.2.2.9.0	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: abstract (compute; discriminate); only 1: unfold Qle; only 1: simpl; only 1: auto with *; only 1: abstract (compute; discriminate)).	12.0791759491	13120
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.2	search with cache (only 1: symmetry; only 1: trivial).	0.0091290473938	4
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00684595108032	2
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00571298599243	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	4.3.3.7.2.8	search with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: firstorder).	1.96337199211	5069
Coq.Classes.CMorphisms.subrelation_id_proper	40	2	search with cache (only 1: apply H).	0.00646305084229	3
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0100820064545	1
Coq.Classes.CMorphisms.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0118708610535	4
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00755000114441	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	1	search with cache (only 1: simpl_crelation).	0.0124089717865	2
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0156528949738	1
Coq.Classes.CMorphisms.forall_subrelation	40	0.6.0.4	search with cache (only 1: intros; only 1: reduce; only 1: apply X; only 1: auto).	0.0847730636597	117
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.2.0	search with cache (only 1: hnf; only 1: intros A B []; only 1: trivial).	0.0162990093231	13
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00815486907959	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	5.0	search with cache (only 1: reduce; only 1: firstorder).	0.010969877243	7
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00835084915161	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	5	search with cache (only 1: firstorder).	0.0161180496216	6
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	0.256379127502	128
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	3.12498807907	2483
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	1.09860897064	722
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	1.02132582664	588
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	1.91503190994	944
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.178438901901	29
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	2.93729710579	2910
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.0140781402588	4
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	0.17	search with cache (only 1: apply X; only 1: auto).	0.108221054077	145
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.0158460140228	1
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	7	search with cache (only 1: simpl_crelation).	0.0186100006104	8
Coq.Classes.CMorphisms.flip_respectful	40	0.0.1	search with cache (only 1: split; only 1: simpl_crelation; only 1: simpl_crelation).	0.0349969863892	4
Coq.Classes.CMorphisms.flip1	40	0.0	search with cache (only 1: reduce; only 1: auto).	0.0132789611816	2
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00923490524292	1
Coq.Classes.CMorphisms.eq_subrelation	40	0.3.2	search with cache (only 1: hnf; only 1: destruct 1; only 1: firstorder).	0.0279769897461	18
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00930619239807	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00913286209106	1
Coq.Classes.CMorphisms.proper_proper	40	1.0.1.0.0.0	search with cache (only 1: reduce; only 1: split; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0250082015991	8
Coq.Classes.CMorphisms.proper_normalizes_proper	40	7	search with cache (only 1: firstorder).	0.0276298522949	15
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0118019580841	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.1	search with cache (only 1: reduce; only 1: simpl_crelation).	0.024796962738	4
Coq.Classes.CMorphisms.proper_sym_flip_2	40	5.0.1.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: simpl_crelation).	0.193082809448	32
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	15.2.1.4.2	search with cache (only 1: red; only 1: red; only 1: intros x x' Hxx'; only 1: simpl_crelation; only 1: firstorder).	19.384444952	11298
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0233519077301	6
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.0.0.0.0.1.1.0.2.11	search with cache (only 1: intro H; only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: apply Hf; only 1: auto; only 1: auto; only 1: apply Hf; only 1: auto; only 1: auto).	27.861415863	8965
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0302829742432	6
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.5.2	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.0427179336548	59
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.0121290683746	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00780701637268	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0108668804169	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.336632013321	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: reflexivity).	0.00555610656738	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00526690483093	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.00599503517151	4
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	7	search with cache (only 1: firstorder).	0.0206298828125	35
Coq.Classes.CRelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0135889053345	4
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0154411792755	2
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0235080718994	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0252709388733	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00615501403809	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00539994239807	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	7.4.8.14	search with cache (only 1: hnf; only 1: intros; only 1: red; only 1: auto).	0.2606549263	1331
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00571799278259	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00695300102234	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	4	search with cache (only 1: firstorder).	0.0222420692444	18
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0114350318909	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0945429801941	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.1.5.2	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.0446889400482	119
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0101201534271	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00561714172363	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00784420967102	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.2806661129	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: reflexivity).	0.00417995452881	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.0043740272522	1
Coq.Classes.RelationClasses.flip_Reflexive	40	0.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.00576186180115	4
Coq.Classes.RelationClasses.flip_Antisymmetric	40	7	search with cache (only 1: firstorder).	0.0132567882538	22
Coq.Classes.RelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0193660259247	4
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0158960819244	2
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0249500274658	2
Coq.Classes.RelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0241379737854	2
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00458288192749	2
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00368905067444	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1.0	search with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: trivial; only 1: firstorder).	0.0129158496857	5
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.00809288024902	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0162291526794	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.00598406791687	4
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00851893424988	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0270099639893	2
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.00942492485046	1
Coq.Classes.Morphisms.eq_proper_proxy	40	0.2	search with cache (only 1: symmetry; only 1: trivial).	0.00850105285645	4
Coq.Classes.Morphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00729918479919	2
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00615000724792	1
Coq.Classes.Morphisms.pointwise_pointwise	40	1.4.5.3.0.2	search with cache (only 1: hnf; only 1: compute; only 1: intros h1 h2; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.878221988678	1760
Coq.Classes.Morphisms.subrelation_id_proper	40	2.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.010470867157	4
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00913500785828	1
Coq.Classes.Morphisms.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros; only 1: assumption).	0.0103800296783	4
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00737905502319	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	3.5.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.457792043686	149
Coq.Classes.Morphisms.pointwise_subrelation	40	1.3	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0103130340576	6
Coq.Classes.Morphisms.forall_subrelation	40	9	search with cache (only 1: firstorder).	0.0205738544464	19
Coq.Classes.Morphisms.iff_impl_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00904679298401	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00766682624817	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.0163791179657	8
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	14	search with cache (only 1: firstorder).	0.243257045746	137
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.0882019996643	29
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3.3.1	search with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	0.921056032181	618
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	2.1.2.0	search with cache (only 1: transitivity y; only 1: intuition; only 1: symmetry; only 1: intuition).	0.617677927017	335
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	4.3.0	search with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	0.909902095795	474
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	16	search with cache (only 1: firstorder).	37.1877682209	27855
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	4.4.0	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.559024095535	425
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	2.0.1.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0218460559845	9
Coq.Classes.Morphisms.compose_proper_obligation_1	40	8	search with cache (only 1: firstorder).	0.0148298740387	9
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.0.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0150761604309	5
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	3	search with cache (only 1: firstorder).	0.0111420154572	4
Coq.Classes.Morphisms.flip_respectful	40	0.0.0.0.0.1	search with cache (only 1: split; only 1: reduce; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.0660700798035	7
Coq.Classes.Morphisms.flip1	40	5.0.0	search with cache (only 1: reduce; only 1: apply H; only 1: intuition).	0.01602602005	8
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.0094268321991	1
Coq.Classes.Morphisms.eq_subrelation	40	0.0.0.2	search with cache (only 1: hnf; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0184669494629	6
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00958299636841	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00969481468201	1
Coq.Classes.Morphisms.proper_proper	40	3.1.0.0	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: subst; only 1: firstorder).	0.099848985672	66
Coq.Classes.Morphisms.proper_normalizes_proper	40	8	search with cache (only 1: firstorder).	0.0393168926239	16
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0109379291534	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0187530517578	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	5.0.0.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: simpl_relation).	0.0376579761505	9
Coq.Classes.Morphisms.proper_sym_impl_iff	40	15.3	search with cache (only 1: simpl_relation; only 1: firstorder).	2.3801419735	1471
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	4.4.2.16	search with cache (only 1: compute; only 1: repeat split; only 1: simpl_relation; only 1: simpl_relation).	29.3738379478	17670
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	2.23	search with cache (only 1: repeat red; only 1: auto).	0.116288900375	336
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0134840011597	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0445849895477	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.0130338668823	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.0140390396118	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0221099853516	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.334445953369	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0181150436401	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0178370475769	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0152130126953	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0149781703949	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0152359008789	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0149528980255	1
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0230700969696	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	3.2.0.0	search with cache (only 1: repeat red; only 1: firstorder; only 1: compute in *; only 1: auto).	0.203778028488	9
Coq.Classes.DecidableClass.Decidable_sound	40	0.2.0.1.7.13.2.22.5	search with cache (only 1: intros n m; only 1: elim m; only 1: intro H; only 1: simpl; only 1: destruct H; only 1: intros [? ?]; only 1: assumption; only 1: intros [? ?]; only 1: assumption).	8.39898514748	61098
Coq.Classes.DecidableClass.Decidable_complete	40	0.2.9.1.9.3.24.6	search with cache (only 1: intros n m; only 1: elim m; only 1: intro H; only 1: destruct H; only 1: auto; only 1: simpl; only 1: intros [? ?]; only 1: assumption).	7.59059906006	48021
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	33	search with cache (only 1: now simpl).	0.0988550186157	550
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0123698711395	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0125660896301	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	4.0.1.11.20	search with cache (only 1: intros m n v1; only 1: intros def_n0; only 1: intros le_mn2; only 1: intros; only 1: now rewrite H).	8.60285496712	16746
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.31389093399	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.00802898406982	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.00811100006104	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	2.0	search with cache (only 1: do 2 red; only 1: auto).	0.00956106185913	4
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.2.0	search with cache (only 1: intro; only 1: do 2 red; only 1: auto).	0.0345339775085	24
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	3	search with cache (only 1: now simpl).	0.0329141616821	25
Coq.PArith.Pnat.inj_succ	40	0.7.12	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.127389907837	300
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_1	40	2.1.0	search with cache (only 1: unfold to_nat; only 1: simpl; only 1: trivial).	0.0107760429382	6
Coq.PArith.Pnat.inj_xO	40
Coq.PArith.Pnat.inj_xI	40
Coq.PArith.Pnat.is_succ	40	0.1.24	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros q; only 1: trivial).	1.13269090652	4195
Coq.PArith.Pnat.is_pos	40	0.8.3.3.15.6	search with cache (only 1: induction p using peano_ind; only 1: auto; only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: auto; only 1: apply Nat.add_assoc).	1.86620092392	3915
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	1.0.0.0.15	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now f_equal).	1.7988409996	3572
Coq.PArith.Pnat.inj_compare	40	1.1.25.7	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	5.96499896049	11269
Coq.PArith.Pnat.inj_lt	40
Coq.PArith.Pnat.inj_le	40
Coq.PArith.Pnat.inj_gt	40
Coq.PArith.Pnat.inj_ge	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_sub_max	40
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_pred_max	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.inj_iter	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.id_max	40	9.0.0.0.0.8.7	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	0.832605838776	1699
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40
Coq.PArith.Pnat.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.011766910553	4
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.id_succ	40
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.id_succ	40	5.2.1.0.3	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.657925128937	1191
Coq.PArith.Pnat.pred_id	40	1.0.3.0.2.0	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	0.0678679943085	99
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	4.1.0.2.1	search with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: intro H; only 1: f_equal; only 1: trivial).	0.301320075989	374
Coq.PArith.Pnat.inv	40
Coq.PArith.Pnat.inj_succ	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.00852012634277	3
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.eq_dec	40
Coq.PArith.BinPos.xI_succ_xO	40	31	search with cache (only 1: trivial).	0.701793193817	3033
Coq.PArith.BinPos.succ_discr	40
Coq.PArith.BinPos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0119090080261	1
Coq.PArith.BinPos.succ_pred_double	40
Coq.PArith.BinPos.pred_double_succ	40	0.0.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	0.0306310653687	8
Coq.PArith.BinPos.double_succ	40	0	search with cache (only 1: reflexivity).	0.0118560791016	1
Coq.PArith.BinPos.pred_double_xO_discr	40	2	search with cache (only 1: now destruct p).	0.535569906235	102
Coq.PArith.BinPos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0298619270325	1
Coq.PArith.BinPos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.1.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.95682883263	835
Coq.PArith.BinPos.succ_pred_or	40
Coq.PArith.BinPos.succ_pred	40
Coq.PArith.BinPos.succ_inj	40
Coq.PArith.BinPos.pred_N_succ	40	1.0.0.0.1.14.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	8.95473909378	6322
Coq.PArith.BinPos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0141139030457	1
Coq.PArith.BinPos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0140671730042	1
Coq.PArith.BinPos.add_carry_spec	40
Coq.PArith.BinPos.add_comm	40
Coq.PArith.BinPos.add_succ_r	40
Coq.PArith.BinPos.add_succ_l	40
Coq.PArith.BinPos.add_no_neutral	40
Coq.PArith.BinPos.add_carry_add	40
Coq.PArith.BinPos.add_reg_r	40
Coq.PArith.BinPos.add_reg_l	40
Coq.PArith.BinPos.add_cancel_r	40
Coq.PArith.BinPos.add_cancel_l	40
Coq.PArith.BinPos.add_carry_reg_r	40
Coq.PArith.BinPos.add_carry_reg_l	40
Coq.PArith.BinPos.add_assoc	40
Coq.PArith.BinPos.add_xO	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.0165560245514	3
Coq.PArith.BinPos.add_xI_pred_double	40
Coq.PArith.BinPos.add_xO_pred_double	40
Coq.PArith.BinPos.add_diag	40	1.0.0.0.13.7.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	2.59942293167	3145
Coq.PArith.BinPos.peano_rect_succ	40
Coq.PArith.BinPos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0154809951782	2
Coq.PArith.BinPos.peano_case	40
Coq.PArith.BinPos.eq_dep_eq_positive	40
Coq.PArith.BinPos.PeanoViewUnique	40
Coq.PArith.BinPos.peano_equiv	40
Coq.PArith.BinPos.mul_1_l	40	0.1.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0287590026855	8
Coq.PArith.BinPos.mul_1_r	40	0.7.1.9.1.3	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity).	5.2850689888	6434
Coq.PArith.BinPos.mul_xO_r	40	1.0.1.0.1.0.4	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.37852191925	147
Coq.PArith.BinPos.mul_xI_r	40
Coq.PArith.BinPos.mul_comm	40
Coq.PArith.BinPos.mul_add_distr_l	40
Coq.PArith.BinPos.mul_add_distr_r	40
Coq.PArith.BinPos.mul_assoc	40
Coq.PArith.BinPos.mul_succ_l	40
Coq.PArith.BinPos.mul_succ_r	40
Coq.PArith.BinPos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.mul_xO_discr	40
Coq.PArith.BinPos.mul_reg_r	40
Coq.PArith.BinPos.mul_reg_l	40
Coq.PArith.BinPos.mul_cancel_r	40	9.1.2.0	search with cache (only 1: revert q r; only 1: split; only 1: apply mul_reg_r; only 1: congruence).	3.73948597908	2920
Coq.PArith.BinPos.mul_cancel_l	40	1.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.216592073441	91
Coq.PArith.BinPos.mul_eq_1_l	40	0.0.0.0.0.0.0.7.0.0.0.17	search with cache (only 1: revert p q; only 1: intros [q| q| ] r H; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: induction r; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: discriminate; only 1: now f_equal).	12.7770879269	15881
Coq.PArith.BinPos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0943579673767	1
Coq.PArith.BinPos.square_xO	40	2.0.1	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0388669967651	16
Coq.PArith.BinPos.square_xI	40
Coq.PArith.BinPos.iter_swap_gen	40
Coq.PArith.BinPos.iter_swap	40	2.1.0.0.1.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: trivial).	2.04650688171	440
Coq.PArith.BinPos.iter_succ	40
Coq.PArith.BinPos.iter_add	40
Coq.PArith.BinPos.iter_invariant	40
Coq.PArith.BinPos.pow_1_r	40	0.3.2.7.2.0.2.0.20	search with cache (only 1: apply succ_inj; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r; only 1: simpl; only 1: now f_equal).	13.1424560547	20922
Coq.PArith.BinPos.pow_succ_r	40
Coq.PArith.BinPos.square_spec	40
Coq.PArith.BinPos.sub_mask_succ_r	40
Coq.PArith.BinPos.sub_mask_carry_spec	40
Coq.PArith.BinPos.sub_mask_spec	40
Coq.PArith.BinPos.sub_mask_nul_iff	40
Coq.PArith.BinPos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0326061248779	7
Coq.PArith.BinPos.sub_mask_add	40
Coq.PArith.BinPos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.sub_mask_pos_iff	40
Coq.PArith.BinPos.sub_mask_add_diag_r	40	1.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.2.3.0	search with cache (only 1: case sub_mask_spec; only 1: revert q; only 1: induction p as [p IHp| p IHp| ]; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: apply (IHp q H); only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: apply (IHp q H); only 1: destr_eq H; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	38.9098169804	25883
Coq.PArith.BinPos.sub_mask_neg_iff	40
Coq.PArith.BinPos.eqb_eq	40
Coq.PArith.BinPos.ltb_lt	40
Coq.PArith.BinPos.leb_le	40
Coq.PArith.BinPos.compare_cont_spec	40
Coq.PArith.BinPos.compare_cont_Eq	40
Coq.PArith.BinPos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_Lt	40	0.0.0.0.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.438203811646	70
Coq.PArith.BinPos.compare_cont_Gt_Lt	40	0.0.0.0.4.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: easy').	0.256916999817	43
Coq.PArith.BinPos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0514779090881	6
Coq.PArith.BinPos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0456459522247	6
Coq.PArith.BinPos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0453729629517	6
Coq.PArith.BinPos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0516240596771	6
Coq.PArith.BinPos.compare_xO_xO	40	0.0.1.0	search with cache (only 1: destruct compare; only 1: now destruct (p ?= q); only 1: easy'; only 1: easy').	0.0219950675964	5
Coq.PArith.BinPos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0125839710236	1
Coq.PArith.BinPos.compare_xI_xO	40	0.0.7.1.5	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	0.897006034851	631
Coq.PArith.BinPos.compare_xO_xI	40	0.0.7.1.5	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	0.880097866058	579
Coq.PArith.BinPos.compare_sub_mask	40
Coq.PArith.BinPos.lt_iff_add	40
Coq.PArith.BinPos.gt_iff_add	40
Coq.PArith.BinPos.compare_cont_refl	40	5.0.1.0.1.1.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.643821954727	599
Coq.PArith.BinPos.compare_cont_antisym	40
Coq.PArith.BinPos.compare_eq_iff	40
Coq.PArith.BinPos.compare_antisym	40
Coq.PArith.BinPos.compare_lt_iff	40	1.0.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.100003957748	36
Coq.PArith.BinPos.compare_le_iff	40	0.0.1.0.2	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: easy').	0.0779318809509	29
Coq.PArith.BinPos.gt_lt_iff	40	4.3	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.444141864777	98
Coq.PArith.BinPos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0220150947571	2
Coq.PArith.BinPos.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0220260620117	2
Coq.PArith.BinPos.ge_le_iff	40	2.2	search with cache (only 1: unfold ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0266740322113	6
Coq.PArith.BinPos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.022961139679	2
Coq.PArith.BinPos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0128400325775	1
Coq.PArith.BinPos.compare_succ_r	40
Coq.PArith.BinPos.compare_succ_l	40
Coq.PArith.BinPos.lt_succ_r	40
Coq.PArith.BinPos.lt_succ_diag_r	40
Coq.PArith.BinPos.compare_succ_succ	40
Coq.PArith.BinPos.le_1_l	40	2.4.2	search with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.538328886032	255
Coq.PArith.BinPos.nlt_1_r	40	2.4.2	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.119632005692	35
Coq.PArith.BinPos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0545499324799	35
Coq.PArith.BinPos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0206711292267	2
Coq.PArith.BinPos.lt_nle	40	4.1	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.631525039673	132
Coq.PArith.BinPos.lt_le_incl	40	0.0.0.3.2	search with cache (only 1: unfold lt, le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.56356215477	171
Coq.PArith.BinPos.lt_lt_succ	40
Coq.PArith.BinPos.succ_lt_mono	40
Coq.PArith.BinPos.succ_le_mono	40
Coq.PArith.BinPos.lt_trans	40
Coq.PArith.BinPos.lt_ind	40
Coq.PArith.BinPos.lt_strorder	40
Coq.PArith.BinPos.lt_compat	40	11.15	search with cache (only 1: unfold ltb, lt; only 1: now intuition).	4.11433506012	3378
Coq.PArith.BinPos.lt_total	40
Coq.PArith.BinPos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: intuition).	0.0295507907867	3
Coq.PArith.BinPos.le_lt_trans	40
Coq.PArith.BinPos.lt_le_trans	40
Coq.PArith.BinPos.le_trans	40
Coq.PArith.BinPos.le_succ_l	40
Coq.PArith.BinPos.le_antisym	40
Coq.PArith.BinPos.le_preorder	40
Coq.PArith.BinPos.le_partorder	40
Coq.PArith.BinPos.add_compare_mono_l	40
Coq.PArith.BinPos.add_compare_mono_r	40
Coq.PArith.BinPos.lt_add_diag_r	40	0.0.0.1.0.2.1.2.0.2.0	search with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: intros H; only 1: symmetry in H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: trivial).	2.15023779869	1884
Coq.PArith.BinPos.add_lt_mono_l	40	0.0.1.0.0.0.2.2	search with cache (only 1: revert p q r; only 1: unfold lt; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.670792102814	468
Coq.PArith.BinPos.add_lt_mono_r	40	0.0.1.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0260841846466	5
Coq.PArith.BinPos.add_lt_mono	40
Coq.PArith.BinPos.add_le_mono_l	40	0.0.0.0.0.1.1.5	search with cache (only 1: revert p q r; only 1: unfold le; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.770102024078	431
Coq.PArith.BinPos.add_le_mono_r	40	0.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0201859474182	4
Coq.PArith.BinPos.add_le_mono	40
Coq.PArith.BinPos.mul_compare_mono_l	40
Coq.PArith.BinPos.mul_compare_mono_r	40
Coq.PArith.BinPos.mul_lt_mono_l	40
Coq.PArith.BinPos.mul_lt_mono_r	40	0.0.3.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0371091365814	18
Coq.PArith.BinPos.mul_lt_mono	40
Coq.PArith.BinPos.mul_le_mono_l	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0220100879669	6
Coq.PArith.BinPos.mul_le_mono_r	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.021411895752	6
Coq.PArith.BinPos.mul_le_mono	40
Coq.PArith.BinPos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.016942024231	2
Coq.PArith.BinPos.lt_not_add_l	40	0.0.0.0.0.0.0.0.7.10	search with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: discriminate; only 1: intros r H; only 1: apply add_cancel_l in H; only 1: now f_equal; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	6.58775901794	6689
Coq.PArith.BinPos.pow_gt_1	40
Coq.PArith.BinPos.sub_1_r	40	0.0.0.0.0.14	search with cache (only 1: induction p; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: simpl; only 1: trivial; only 1: trivial).	0.264881849289	279
Coq.PArith.BinPos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0142140388489	1
Coq.PArith.BinPos.sub_succ_r	40
Coq.PArith.BinPos.sub_mask_pos'	40
Coq.PArith.BinPos.sub_mask_pos	40	1.0.3.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0308578014374	8
Coq.PArith.BinPos.sub_add	40
Coq.PArith.BinPos.add_sub	40
Coq.PArith.BinPos.mul_sub_distr_l	40
Coq.PArith.BinPos.mul_sub_distr_r	40
Coq.PArith.BinPos.sub_lt_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_r	40
Coq.PArith.BinPos.sub_lt_mono_r	40
Coq.PArith.BinPos.sub_decr	40
Coq.PArith.BinPos.add_sub_assoc	40
Coq.PArith.BinPos.sub_add_distr	40
Coq.PArith.BinPos.sub_sub_distr	40
Coq.PArith.BinPos.sub_xO_xO	40
Coq.PArith.BinPos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0245969295502	4
Coq.PArith.BinPos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0247559547424	4
Coq.PArith.BinPos.sub_xO_xI	40	0.5.1.0.41.9.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: rewrite ?sub_mask_carry_spec; only 1: destruct sub_mask; only 1: auto; only 1: simpl; only 1: now destruct p; only 1: auto).	24.8259949684	58880
Coq.PArith.BinPos.sub_mask_neg_iff'	40	0.2.0.0.0.0.0.0.5	search with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	4.0046620369	2833
Coq.PArith.BinPos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0300319194794	11
Coq.PArith.BinPos.sub_le	40
Coq.PArith.BinPos.sub_lt	40	0.0.0.0.0.11.0	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	2.80913090706	2697
Coq.PArith.BinPos.sub_diag	40
Coq.PArith.BinPos.size_nat_monotone	40
Coq.PArith.BinPos.size_gt	40
Coq.PArith.BinPos.size_le	40
Coq.PArith.BinPos.max_l	40
Coq.PArith.BinPos.max_r	40	0.0.1.0.1.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.045177936554	10
Coq.PArith.BinPos.min_l	40
Coq.PArith.BinPos.min_r	40	0.0.0.1.0.0.9.1	search with cache (only 1: intros x y H; only 1: unfold le, min; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	5.93906617165	4531
Coq.PArith.BinPos.max_1_l	40	5.2.2.0.0.36	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto with relations; only 1: split; only 1: intros H; only 1: elim (nlt_1_r _ H)).	34.9684760571	53992
Coq.PArith.BinPos.max_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: easy'; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0340781211853	8
Coq.PArith.BinPos.min_1_l	40	0.2	search with cache (only 1: apply min_r || apply min_l; only 1: apply le_1_l).	0.0161960124969	4
Coq.PArith.BinPos.min_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: easy'; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0335741043091	8
Coq.PArith.BinPos.succ_max_distr	40
Coq.PArith.BinPos.succ_min_distr	40	0.0.0.9.1	search with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	3.02994513512	1306
Coq.PArith.BinPos.add_max_distr_l	40	2.2.0	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply add_le_mono_l).	0.0509579181671	35
Coq.PArith.BinPos.add_max_distr_r	40
Coq.PArith.BinPos.add_min_distr_l	40	0.0.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0233571529388	6
Coq.PArith.BinPos.add_min_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0273818969727	6
Coq.PArith.BinPos.mul_max_distr_l	40	3.0.4	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	0.101230859756	12
Coq.PArith.BinPos.mul_max_distr_r	40
Coq.PArith.BinPos.mul_min_distr_l	40	0.0.6	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0263869762421	9
Coq.PArith.BinPos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.029109954834	5
Coq.PArith.BinPos.iter_op_succ	40
Coq.PArith.BinPos.of_nat_succ	40
Coq.PArith.BinPos.pred_of_succ_nat	40
Coq.PArith.BinPos.succ_of_nat	40	1.1.1.3.0.0.4.4	search with cache (only 1: destruct n; only 1: simpl; only 1: easy'; only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite IHn).	1.78755092621	2061
Coq.PArith.BinPos.sqrtrem_step_spec	40
Coq.PArith.BinPos.sqrtrem_spec	40
Coq.PArith.BinPos.sqrt_spec	40
Coq.PArith.BinPos.divide_add_cancel_l	40
Coq.PArith.BinPos.divide_xO_xI	40
Coq.PArith.BinPos.divide_xO_xO	40	2.20.14	search with cache (only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: easy).	37.1534018517	26117
Coq.PArith.BinPos.divide_mul_l	40
Coq.PArith.BinPos.divide_mul_r	40
Coq.PArith.BinPos.ggcdn_gcdn	40
Coq.PArith.BinPos.ggcd_gcd	40	2.35.20	search with cache (only 1: intros EQ; only 1: fix sqrtrem_spec 1; only 1: trivial).	38.5284049511	32122
Coq.PArith.BinPos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.ggcd_correct_divisors	40
Coq.PArith.BinPos.gcd_divide_l	40	4.10.0.18	search with cache (only 1: intros EQ; only 1: unfold ggcd, gcd; only 1: fix sqrtrem_spec 1; only 1: now auto).	2.60281014442	5313
Coq.PArith.BinPos.gcd_divide_r	40
Coq.PArith.BinPos.gcdn_greatest	40
Coq.PArith.BinPos.gcd_greatest	40
Coq.PArith.BinPos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	0.176	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto with relations).	13.3069319725	89618
Coq.PArith.BinPos.Pcompare_eq_Gt	40	5.5.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.10377407074	136
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	8.8.9.86	search with cache (only 1: destruct r; only 1: intuition; only 1: intuition; only 1: intuition).	9.17720985413	28849
Coq.Arith.Le.le_n_0_eq	40	14.13.3.21	search with cache (only 1: Nat.induct ltac:(n); only 1: Nat.order'; only 1: intros EQ; only 1: now repeat split).	15.1077709198	20733
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	12.0	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.344693899155	484
Coq.Arith.Even.even_or_odd	40	0.2.8.1.0.1.35	search with cache (only 1: Nat.induct n; only 1: constructor; only 1: constructor; only 1: inversion_clear 1; only 1: now do 2 constructor; only 1: do 2 constructor; only 1: now inversion_clear H0).	5.56955385208	18889
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0255439281464	5
Coq.Arith.Even.not_even_and_odd	40	1.28	search with cache (only 1: fix even_equiv 1; only 1: auto with arith).	5.89276409149	11554
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.127999782562	1
Coq.Arith.Even.even_even_plus	40	0	search with cache (only 1: parity_binop).	0.0805680751801	1
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0680088996887	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0685651302338	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.106561899185	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.232586860657	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0680139064789	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.122559070587	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0687079429626	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0685451030731	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0680928230286	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0678849220276	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0684559345245	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0740189552307	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.156533002853	1
Coq.Arith.Even.even_mult_l	40	0	search with cache (only 1: parity_binop).	0.0460979938507	1
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0461840629578	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0682628154755	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0753781795502	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0692348480225	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0464899539948	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0459308624268	1
Coq.Arith.Minus.minus_n_O	40	70	search with cache (only 1: now Nat.nzsimpl).	1.28584814072	10303
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	21	search with cache (only 1: now Nat.nzsimpl').	0.575513124466	1859
Coq.Arith.Minus.minus_diag_reverse	40	0.0.0.32.39.22	search with cache (only 1: Nat.bitwise; only 1: Nat.induct ltac:(n); only 1: autorewrite with bitwise; only 1: trivial; only 1: intros n IH; only 1: trivial).	27.8895900249	129497
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	13	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.124368906021	225
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.1.15.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	1.89159798622	2749
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	13.2.0.3.20	search with cache (only 1: intros H; only 1: intros a; only 1: intros EQ; only 1: rewrite EQ; only 1: now left).	2.33434009552	8497
Coq.Arith.Between.between_le	40	1.0.38.2.20	search with cache (only 1: intros EQ; only 1: intros m Le; only 1: elim Le; only 1: trivial; only 1: auto with arith).	9.29355597496	19961
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.0.4	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.037889957428	21
Coq.Arith.Between.exists_le_S	40	1.0.1.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0253250598907	6
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	0.2.6.3	search with cache (only 1: intros n m H; only 1: split; only 1: trivial; only 1: trivial).	0.343815803528	441
Coq.Arith.Between.in_int_lt	40	4.9	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order').	0.496155023575	469
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0.0.0.0	search with cache (only 1: intros p q r []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0258629322052	5
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0159990787506	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.0.1.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.028046131134	6
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40	5.2.4	search with cache (only 1: induction 1; only 1: trivial; only 1: eauto with arith).	0.479526996613	449
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.2.9.21.8.0.2.6	search with cache (only 1: destruct n; only 1: intros H; only 1: now left; only 1: simpl; only 1: destruct m as [| m]; only 1: auto; only 1: intros H; only 1: now left).	30.9690778255	55244
Coq.Arith.Mult.mult_is_one	40	0.1.7.0.0.5.7	search with cache (only 1: destruct m as [| m]; only 1: now Nat.nzsimpl; only 1: destruct n; only 1: now split; only 1: destruct m; only 1: now Nat.nzsimpl'; only 1: now split).	18.0388071537	12774
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40	7.1.5.1.0.1.1.13.0	search with cache (only 1: intros; only 1: simpl; only 1: apply Nat.add_lt_le_mono; only 1: trivial; only 1: apply Nat.mul_le_mono_nonneg; only 1: apply Nat.le_0_l; only 1: trivial; only 1: apply Nat.le_0_l; only 1: Nat.order).	31.0939979553	38436
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40	3.54	search with cache (only 1: fix odd_equiv 1; only 1: auto with arith).	26.3081991673	47472
Coq.Arith.Div2.div2_even	40	8.8.19.0	search with cache (only 1: rewrite even_equiv; only 1: fix even_equiv 1; only 1: simpl; only 1: trivial).	39.3663470745	47015
Coq.Arith.Div2.div2_odd	40	2.0.44.0	search with cache (only 1: rewrite odd_equiv; only 1: fix odd_equiv 1; only 1: intro Od'; only 1: auto with arith).	39.1431381702	75785
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	1.1	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	0.0362110137939	34
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0205051898956	3
Coq.Arith.Div2.div2_double	40	0	search with cache (only 1: apply Nat.div2_double).	0.0171449184418	1
Coq.Arith.Div2.div2_double_plus_one	40	0.0.2	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: revert n; only 1: trivial).	0.0166869163513	23
Coq.Arith.Plus.plus_assoc_reverse	40	6.2.2.0.0.4.4.8	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: now Nat.nzsimpl'; only 1: simpl; only 1: intros; only 1: f_equal; only 1: trivial).	17.7064919472	34401
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0129828453064	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0129461288452	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.0119891166687	2
Coq.Arith.Plus.plus_lt_compat	40	3.0.19	search with cache (only 1: intros H; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order).	0.340744972229	361
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	0.2.0.1.2.1.9	search with cache (only 1: induction n as [| n IH]; only 1: split; only 1: split; only 1: trivial; only 1: simpl; only 1: intros; only 1: now repeat split).	2.03839802742	2450
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	3.0	search with cache (only 1: intros H; only 1: Nat.order).	0.0178229808807	5
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.00879311561584	1
Coq.Arith.Lt.le_not_lt	40	5.0	search with cache (only 1: intros LT; only 1: Nat.order_nz).	0.0154211521149	7
Coq.Arith.Lt.lt_not_le	40	3.0	search with cache (only 1: intro H'; only 1: Nat.order).	0.0176601409912	5
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	0.0	search with cache (only 1: intros; only 1: Nat.order).	0.0154910087585	2
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.00856280326843	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00861215591431	1
Coq.Arith.Lt.S_pred	40	8.1.2.13.90	search with cache (only 1: revert m; only 1: Nat.induct ltac:(n); only 1: now Nat.nzsimpl'; only 1: intros a n; only 1: trivial).	20.892701149	57628
Coq.Arith.Lt.S_pred_pos	40
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	9.2.2.18	search with cache (only 1: Nat.induct n; only 1: trivial; only 1: intros a n; only 1: now left).	0.660367012024	1413
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	9.98787093163	9083
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.0.3.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	34.9798970222	30964
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.36984205246	174
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0116219520569	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0113050937653	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0116331577301	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0115768909454	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.032420873642	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40	0.0.0.0.0.3.10	search with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.477665901184	400
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	1.7.3.2	search with cache (only 1: destruct n; only 1: auto; only 1: right; only 1: apply Nat.lt_0_succ).	0.28458404541	333
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.607702970505	251
Coq.Arith.Compare_dec.le_lt_dec	40	0.0.1.0.0.0.2	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	0.0504732131958	10
Coq.Arith.Compare_dec.le_le_S_dec	40	0.1.0.0.1.0.0.1.0.1.3	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	3.1067841053	1766
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.24471783638	159
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.248466968536	110
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.4	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0871031284332	49
Coq.Arith.Compare_dec.lt_dec	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	0.0377199649811	10
Coq.Arith.Compare_dec.gt_dec	40	3	search with cache (only 1: apply le_dec).	0.00729703903198	4
Coq.Arith.Compare_dec.ge_dec	40	3	search with cache (only 1: apply le_dec).	0.131077051163	60
Coq.Arith.Compare_dec.dec_le	40	0.1.0.0.1.2.15	search with cache (only 1: elim (le_lt_dec n m); only 1: now left; only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	1.23335790634	1232
Coq.Arith.Compare_dec.dec_lt	40	2	search with cache (only 1: apply Nat.le_decidable).	0.00661993026733	3
Coq.Arith.Compare_dec.dec_gt	40	5	search with cache (only 1: apply Nat.lt_decidable).	0.00914216041565	6
Coq.Arith.Compare_dec.dec_ge	40	3	search with cache (only 1: apply Nat.le_decidable).	0.0480790138245	38
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0080738067627	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00689792633057	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00686001777649	1
Coq.Arith.Compare_dec.not_ge	40	5	search with cache (only 1: apply Nat.lt_nge).	0.0555291175842	21
Coq.Arith.Compare_dec.not_lt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00696897506714	1
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.00730204582214	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.00727105140686	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00741004943848	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0147869586945	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00794720649719	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	4.26.4	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: trivial).	0.915133953094	1489
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.185532093048	119
Coq.Arith.EqNat.eq_nat_eq	40	4.0	search with cache (only 1: revert m; only 1: apply eq_nat_is_eq).	0.415464162827	130
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	1.3.14.33	search with cache (only 1: Nat.induct n; only 1: split; only 1: intros; only 1: now rewrite H).	0.472057104111	2058
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40	0.0.0.4.0.1.14.3.0.8.7.15	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intros; only 1: intros EQ; only 1: discriminate; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	7.39972901344	23185
Coq.Arith.EqNat.beq_nat_eq	40	1.20.0	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	0.506752967834	1101
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.bi_induction	40
Coq.Arith.PeanoNat.recursion_wd	40
Coq.Arith.PeanoNat.recursion_0	40	1	search with cache (only 1: destr_bool).	0.0103359222412	2
Coq.Arith.PeanoNat.recursion_succ	40	1.2.1.4.18.0	search with cache (only 1: intros A A_wd A0 AS; only 1: unfold Basics.flip, respectful; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	12.0680389404	29623
Coq.Arith.PeanoNat.pred_succ	40	0	search with cache (only 1: auto).	0.00959277153015	1
Coq.Arith.PeanoNat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00825119018555	1
Coq.Arith.PeanoNat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00809097290039	1
Coq.Arith.PeanoNat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00809788703918	1
Coq.Arith.PeanoNat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00794315338135	1
Coq.Arith.PeanoNat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00849914550781	1
Coq.Arith.PeanoNat.sub_0_r	40	0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0133109092712	6
Coq.Arith.PeanoNat.sub_succ_r	40
Coq.Arith.PeanoNat.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00953388214111	1
Coq.Arith.PeanoNat.mul_succ_l	40
Coq.Arith.PeanoNat.lt_succ_r	40
Coq.Arith.PeanoNat.eqb_eq	40
Coq.Arith.PeanoNat.leb_le	40
Coq.Arith.PeanoNat.ltb_lt	40
Coq.Arith.PeanoNat.eq_dec	40
Coq.Arith.PeanoNat.compare_eq_iff	40
Coq.Arith.PeanoNat.compare_lt_iff	40
Coq.Arith.PeanoNat.compare_le_iff	40	0.1.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: intros; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).	39.8267681599	42458
Coq.Arith.PeanoNat.compare_antisym	40	6.0.0.0.0.0.2.0.1.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: split; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split).	24.6604321003	37249
Coq.Arith.PeanoNat.compare_succ	40	1.1.0.1.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0772330760956	47
Coq.Arith.PeanoNat.max_l	40
Coq.Arith.PeanoNat.max_r	40
Coq.Arith.PeanoNat.min_l	40
Coq.Arith.PeanoNat.min_r	40
Coq.Arith.PeanoNat.pow_neg_r	40	5.6	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.041118144989	59
Coq.Arith.PeanoNat.pow_0_r	40	7	search with cache (only 1: split).	0.0107028484344	8
Coq.Arith.PeanoNat.pow_succ_r	40	1	search with cache (only 1: reflexivity).	0.020966053009	19
Coq.Arith.PeanoNat.square_spec	40	5	search with cache (only 1: reflexivity).	0.0104830265045	6
Coq.Arith.PeanoNat.Even_1	40
Coq.Arith.PeanoNat.Even_2	40
Coq.Arith.PeanoNat.Odd_0	40	0.0.0.7	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0334401130676	24
Coq.Arith.PeanoNat.Odd_2	40
Coq.Arith.PeanoNat.even_spec	40
Coq.Arith.PeanoNat.odd_spec	40	7.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0790688991547	59
Coq.Arith.PeanoNat.divmod_spec	40
Coq.Arith.PeanoNat.div_mod	40
Coq.Arith.PeanoNat.mod_bound_pos	40
Coq.Arith.PeanoNat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.sqrt_specif	40
Coq.Arith.PeanoNat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.013857126236	1
Coq.Arith.PeanoNat.log2_iter_spec	40
Coq.Arith.PeanoNat.log2_spec	40
Coq.Arith.PeanoNat.log2_nonpos	40	1.4.2	search with cache (only 1: inversion 1; only 1: inversion H; only 1: easy).	0.0239939689636	10
Coq.Arith.PeanoNat.gcd_divide	40
Coq.Arith.PeanoNat.gcd_divide_l	40	4.27	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.959300041199	2009
Coq.Arith.PeanoNat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0127210617065	2
Coq.Arith.PeanoNat.gcd_greatest	40
Coq.Arith.PeanoNat.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0131230354309	2
Coq.Arith.PeanoNat.div2_double	40
Coq.Arith.PeanoNat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0858919620514	7
Coq.Arith.PeanoNat.le_div2	40
Coq.Arith.PeanoNat.lt_div2	40	1.3.3.6.0.7	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	10.4852340221	11812
Coq.Arith.PeanoNat.div2_decr	40	1.1.3	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0235471725464	16
Coq.Arith.PeanoNat.double_twice	40	2.5.20	search with cache (only 1: intros; only 1: simpl; only 1: now rewrite !add_0_r).	8.92987680435	8779
Coq.Arith.PeanoNat.testbit_0_l	40	5.8	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.101337909698	182
Coq.Arith.PeanoNat.testbit_odd_0	40
Coq.Arith.PeanoNat.testbit_even_0	40
Coq.Arith.PeanoNat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.testbit_even_succ'	40
Coq.Arith.PeanoNat.shiftr_specif	40	3.0.10	search with cache (only 1: fix even_spec 1; only 1: unfold testbit; only 1: trivial).	1.73348498344	1711
Coq.Arith.PeanoNat.shiftl_specif_high	40	3.18	search with cache (only 1: fix even_spec 1; only 1: trivial).	17.2994019985	4231
Coq.Arith.PeanoNat.shiftl_spec_low	40	8.0.3	search with cache (only 1: unfold testbit, odd; only 1: fix odd_spec 1; only 1: trivial).	0.841935873032	675
Coq.Arith.PeanoNat.div2_bitwise	40	1.2.0.2.10.12	search with cache (only 1: intros; only 1: revert n; only 1: fix le_div2 1; only 1: destruct n; only 1: trivial; only 1: trivial).	3.87082409859	6192
Coq.Arith.PeanoNat.odd_bitwise	40	4.3.3.11	search with cache (only 1: intro H; only 1: unfold odd; only 1: fix odd_spec 1; only 1: trivial).	20.0517339706	25076
Coq.Arith.PeanoNat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.land_spec	40
Coq.Arith.PeanoNat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0170881748199	4
Coq.Arith.PeanoNat.lor_spec	40	3.0.34.2	search with cache (only 1: apply testbit_bitwise_1; only 1: fix even_spec 1; only 1: trivial; only 1: solve_max).	4.14401197433	12961
Coq.Arith.PeanoNat.lxor_spec	40	9.1.0.0.0.0.0.0.0.0.1.0.4	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l; only 1: solve_max).	10.4060270786	13405
Coq.Arith.PeanoNat.div2_spec	40	6	search with cache (only 1: trivial).	0.0137169361115	7
Coq.Arith.PeanoNat.testbit_neg_r	40	1	search with cache (only 1: inversion H).	0.0123481750488	2
Coq.Arith.PeanoNat.tail_add_spec	40
Coq.Arith.PeanoNat.tail_addmul_spec	40
Coq.Arith.PeanoNat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	3.6	search with cache (only 1: intros; only 1: Nat.order').	0.0515899658203	69
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0128450393677	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0120570659637	1
Coq.Arith.Gt.gt_S	40	11.10.0.10	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: trivial).	3.39504408836	4961
Coq.Arith.Gt.gt_pred	40	2	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0531849861145	30
Coq.Arith.Gt.le_not_gt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.0136671066284	2
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0124979019165	1
Coq.Arith.Gt.le_S_gt	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.011904001236	1
Coq.Arith.Gt.gt_S_le	40	3	search with cache (only 1: apply Nat.lt_succ_r).	0.0164740085602	4
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0121841430664	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0123479366302	1
Coq.Arith.Gt.le_gt_trans	40	0.2.9.22	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: trivial).	0.700881004333	1114
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40	4.19.0.3.0	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: now apply Nat.lt_le_trans with m; only 1: apply Nat.lt_eq_cases; only 1: now left).	8.86245298386	9478
Coq.Arith.Gt.gt_trans_S	40	3.8.1	search with cache (only 1: intros; only 1: apply Nat.succ_le_mono; only 1: now apply Nat.le_lt_trans with m).	1.09151911736	462
Coq.Arith.Gt.gt_0_eq	40	8.19.6	search with cache (only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: now apply Nat.neq_0_lt_0, Nat.neq_sym).	2.8387491703	3884
Coq.Arith.Gt.plus_gt_reg_l	40	2	search with cache (only 1: apply Nat.add_lt_mono_l).	0.085067987442	23
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0129518508911	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	1.15.8.6	search with cache (only 1: intros H x0; only 1: intros n m; only 1: inversion 1; only 1: auto).	0.494974851608	3104
Coq.Logic.JMeq.JMeq_trans	40	1.0.0.20	search with cache (only 1: intro H1; only 1: intros; only 1: destruct H; only 1: trivial).	0.0987799167633	392
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00798392295837	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00828909873962	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00817489624023	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00821805000305	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00827813148499	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	1.1	search with cache (only 1: destruct 1; only 1: apply eq_dep_intro).	0.0124900341034	4
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0076310634613	2
Coq.Logic.JMeq.eq_dep_JMeq	40	2.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00674796104431	4
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.2.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0201699733734	12
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.26.16	search with cache (only 1: intro z; only 1: intros [x y]; only 1: trivial).	0.327347993851	2402
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00949287414551	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40
Coq.Logic.Classical_Prop.not_imply_elim	40	1.8.10	search with cache (only 1: intro H; only 1: intros nna a; only 1: tauto).	0.487917900085	1227
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0	search with cache (only 1: unfold not; only 1: auto).	0.0174350738525	11
Coq.Logic.Classical_Prop.imply_to_or	40	1.0.0.1.1.5.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: assert (h : P 1); only 1: unfold P; only 1: intuition; only 1: tauto).	1.2085518837	737
Coq.Logic.Classical_Prop.imply_to_and	40	4.0.0.4	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: tauto).	0.775790214539	684
Coq.Logic.Classical_Prop.or_to_imply	40	2.1	search with cache (only 1: intros A; only 1: intuition).	0.0219371318817	14
Coq.Logic.Classical_Prop.not_and_or	40	0.0.0.7	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.23400592804	129
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.0300109386444	16
Coq.Logic.Classical_Prop.not_or_and	40	0.0.1.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0867528915405	48
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.017972946167	1
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.0151288509369	1
Coq.Logic.Classical_Prop.imply_and_or2	40	2.0	search with cache (only 1: intro HAB; only 1: tauto).	0.02414894104	11
Coq.Logic.Classical_Prop.eq_rect_eq	40
Coq.Logic.Hurkens.Omega	40
Coq.Logic.Hurkens.lemma1	40
Coq.Logic.Hurkens.lemma2	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.strength	40
Coq.Logic.Hurkens.modal	40	0.34	search with cache (only 1: intros [x y]; only 1: eauto).	0.292204856873	1143
Coq.Logic.Hurkens.Forall	40	3.24	search with cache (only 1: red; only 1: eauto).	0.140923023224	396
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.mparadox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.up_down	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.29.13.35	search with cache (only 1: intro; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	1.69567012787	12300
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.0307130813599	9
Coq.Logic.Eqdep_dec.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	0.0.0.0.0.0.55	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	15.4972169399	75530
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	3.4.11	search with cache (only 1: compute; only 1: intros A B P R H; only 1: firstorder).	0.678478002548	1214
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	3.0.19.1	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: firstorder).	0.627513885498	1576
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.1	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0263929367065	15
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.13	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	12.0948760509	18255
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.6.12	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	2.9714050293	5411
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	8	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.55691790581	26
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	7.0.0.3	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	5.00814294815	425
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.8.0.0.0.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	1.80097103119	993
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	3.22.34.140	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	7.43101382256	87777
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	10.0.0.4.1	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.103775978088	504
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	5.5.15.1.3.0	search with cache (only 1: intros H A; only 1: destruct (H A); only 1: right; only 1: trivial; only 1: left; only 1: easy).	12.0906791687	38709
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.0.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0228230953217	5
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.2.1.0.1.3.0.1.6.1.0	search with cache (only 1: unfold not; only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	5.14771580696	13205
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	1.0.10.1	search with cache (only 1: unfold not; only 1: intros x [n fxn]; only 1: generalize dependent x; only 1: firstorder).	0.885318994522	1530
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.subsetT_eq_compat	40	0.1.3.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0231490135193	8
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	2.1.7.22.9	search with cache (only 1: intros (l, F); only 1: induction l; only 1: left; only 1: trivial; only 1: now right).	3.67133903503	10571
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.extend_ok	40
Coq.Logic.FinFun.extend_f2n	40
Coq.Logic.FinFun.extend_n2f	40
Coq.Logic.FinFun.restrict_f2n	40
Coq.Logic.FinFun.restrict_n2f	40
Coq.Logic.FinFun.extend_surjective	40
Coq.Logic.FinFun.extend_injective	40
Coq.Logic.FinFun.restrict_surjective	40
Coq.Logic.FinFun.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: Notations.split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: Notations.split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	8.82655405998	9713
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40	14.25	search with cache (only 1: red; only 1: eauto).	1.10443687439	921
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0099458694458	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0	search with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	31.6040680408	19572
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.3.1	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0110611915588	7
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0108649730682	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0129868984222	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0124747753143	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.10.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: eauto using @functional_extensionality_dep).	0.373225927353	374
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00784778594971	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00779390335083	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.1.0	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0129950046539	5
Coq.Logic.HLevels.false_hprop	40	0.0	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00883007049561	2
Coq.Logic.HLevels.true_hprop	40	10.0.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.0362849235535	104
Coq.Logic.HLevels.not_hprop	40	0.4.3.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.0448939800262	70
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	11.0.0.0.44.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	2.6587998867	10840
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.0.0.0.4.0	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.109312057495	51
Coq.Logic.EqdepFacts.eq_dep_sym	40	4.15.15	search with cache (only 1: intros H x0; only 1: induction 1; only 1: reflexivity).	0.650228023529	3687
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.6	search with cache (only 1: destruct 1; only 1: auto).	0.0084969997406	8
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	0.21.1	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.169979810715	670
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.6.59	search with cache (only 1: inversion 1; only 1: subst; only 1: apply eq_dep_intro).	3.87566995621	26094
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.17	search with cache (only 1: destruct 1; only 1: reflexivity).	0.294770956039	800
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.13.0.0.12.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.859405994415	3361
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0101890563965	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	3.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0133550167084	15
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.11.0.0.10.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	0.96488904953	2706
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	1.1.1.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0273921489716	27
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.6.0.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: reflexivity).	0.135198116302	172
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	45.1.13.54	search with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	6.13818097115	41683
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	9.0.0.0	search with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).	0.0678839683533	208
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	1.9.3.3.8.0	search with cache (only 1: red; only 1: intro; only 1: intro eq_dep_eq; only 1: intros; only 1: rewrite H; only 1: apply eq_dep_eq).	1.16899013519	6353
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	2.35	search with cache (only 1: red; only 1: auto).	1.49095201492	6513
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0133559703827	3
Coq.Logic.EqdepFacts.f_eq_dep	40	1.0	search with cache (only 1: destruct 1; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0137348175049	3
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.6.1	search with cache (only 1: intros A x P H y H0; only 1: destruct 1; only 1: auto).	0.0435771942139	54
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0361528396606	36
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	7.0.0	search with cache (only 1: intros Ext A B Equiv; only 1: intros x; only 1: auto).	0.0151679515839	11
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	10.0.0.0.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: apply False_rec).	0.472887992859	867
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00858092308044	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00818991661072	2
Coq.Logic.Decidable.dec_or	40	0.3.1	search with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).	0.0304279327393	12
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0246648788452	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0135250091553	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0189030170441	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.028354883194	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0124099254608	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0130710601807	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0225701332092	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0220739841461	2
Coq.Logic.Decidable.imp_simp	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0166068077087	3
Coq.Logic.Decidable.not_iff	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0711970329285	3
Coq.Logic.Decidable.not_true_iff	40	6	search with cache (only 1: tauto).	0.020103931427	19
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.0108180046082	1
Coq.Logic.Decidable.not_not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0177540779114	3
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0207250118256	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0494420528412	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0262899398804	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0253629684448	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.02645611763	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0280239582062	2
Coq.Logic.Decidable.not_or_iff	40	0	search with cache (only 1: tauto).	0.020124912262	1
Coq.Logic.Decidable.not_and_iff	40	1	search with cache (only 1: tauto).	0.0167889595032	2
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0324440002441	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0326359272003	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.singleton_spec	40
Coq.MSets.MSetRBT.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.00709319114685	2
Coq.MSets.MSetRBT.makeBlack_spec	40	1.0.0.18	search with cache (only 1: induction s; only 1: intuition; only 1: simpl; only 1: intuition_in).	2.91428112984	2541
Coq.MSets.MSetRBT.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.035905122757	5
Coq.MSets.MSetRBT.makeBlack_ok	40	4.0.2.0.6	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	2.24490094185	285
Coq.MSets.MSetRBT.makeRed_ok	40	0.0.0.0	search with cache (only 1: destruct s; only 1: ok; only 1: simpl; only 1: ok).	0.0153079032898	4
Coq.MSets.MSetRBT.rmatch	40
Coq.MSets.MSetRBT.rrmatch	40
Coq.MSets.MSetRBT.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.48442196846	660
Coq.MSets.MSetRBT.lbal_match	40
Coq.MSets.MSetRBT.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.00542306900024	1
Coq.MSets.MSetRBT.rbal'_match	40
Coq.MSets.MSetRBT.lbalS_match	40
Coq.MSets.MSetRBT.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00604486465454	1
Coq.MSets.MSetRBT.lbal_spec	40
Coq.MSets.MSetRBT.lbal_ok	40
Coq.MSets.MSetRBT.rbal_spec	40
Coq.MSets.MSetRBT.rbal_ok	40
Coq.MSets.MSetRBT.rbal'_spec	40
Coq.MSets.MSetRBT.rbal'_ok	40
Coq.MSets.MSetRBT.ins_spec	40
Coq.MSets.MSetRBT.ins_ok	40
Coq.MSets.MSetRBT.add_spec'	40
Coq.MSets.MSetRBT.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0208809375763	2
Coq.MSets.MSetRBT.add_ok	40	1.2.2	search with cache (only 1: destruct s; only 1: ok; only 1: ok).	0.165901899338	34
Coq.MSets.MSetRBT.lbalS_spec	40
Coq.MSets.MSetRBT.lbalS_ok	40
Coq.MSets.MSetRBT.rbalS_spec	40
Coq.MSets.MSetRBT.rbalS_ok	40
Coq.MSets.MSetRBT.append_rr_match	40	6	search with cache (only 1: exact (rmatch _ _ _)).	0.111894845963	53
Coq.MSets.MSetRBT.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00580096244812	1
Coq.MSets.MSetRBT.append_spec	40
Coq.MSets.MSetRBT.append_ok	40
Coq.MSets.MSetRBT.del_spec	40
Coq.MSets.MSetRBT.del_ok	40
Coq.MSets.MSetRBT.remove_spec	40
Coq.MSets.MSetRBT.remove_ok	40	2.0	search with cache (only 1: unfold remove; only 1: auto_tc).	0.0550208091736	27
Coq.MSets.MSetRBT.delmin_spec	40
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40	1.0.0.1.0.0	search with cache (only 1: unfold remove_min; only 1: destruct s as [| c l y r]; only 1: easy; only 1: generalize (delmin_spec l y r c); only 1: destruct delmin as (x0, s0); only 1: easy).	0.0462009906769	11
Coq.MSets.MSetRBT.remove_min_ok	40
Coq.MSets.MSetRBT.treeify_zero_spec	40	3.4.13	search with cache (only 1: intros s Hs; only 1: simpl; only 1: auto).	0.0969870090485	315
Coq.MSets.MSetRBT.treeify_one_spec	40	0.0.15.0.2.17	search with cache (only 1: intros s Hs; only 1: induction s; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	1.34630489349	4966
Coq.MSets.MSetRBT.treeify_cont_spec	40
Coq.MSets.MSetRBT.treeify_aux_spec	40
Coq.MSets.MSetRBT.plength_aux_spec	40
Coq.MSets.MSetRBT.plength_spec	40
Coq.MSets.MSetRBT.treeify_elements	40
Coq.MSets.MSetRBT.treeify_spec	40
Coq.MSets.MSetRBT.treeify_ok	40
Coq.MSets.MSetRBT.filter_aux_elements	40
Coq.MSets.MSetRBT.filter_elements	40
Coq.MSets.MSetRBT.filter_spec	40
Coq.MSets.MSetRBT.filter_ok	40
Coq.MSets.MSetRBT.partition_aux_spec	40
Coq.MSets.MSetRBT.partition_spec	40
Coq.MSets.MSetRBT.partition_spec1	40	2.2.0	search with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.108163118362	7
Coq.MSets.MSetRBT.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.010274887085	1
Coq.MSets.MSetRBT.partition_ok1	40
Coq.MSets.MSetRBT.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0147330760956	3
Coq.MSets.MSetRBT.INV_init	40
Coq.MSets.MSetRBT.INV_sym	40	0.2.0.2.2.4.3.4.34	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: auto with *; only 1: intros; only 1: now inA; only 1: intros; only 1: now inA).	4.73405098915	12201
Coq.MSets.MSetRBT.INV_drop	40
Coq.MSets.MSetRBT.INV_eq	40
Coq.MSets.MSetRBT.INV_lt	40
Coq.MSets.MSetRBT.INV_rev	40
Coq.MSets.MSetRBT.union_list_ok	40
Coq.MSets.MSetRBT.linear_union_ok	40
Coq.MSets.MSetRBT.fold_add_ok	40
Coq.MSets.MSetRBT.union_ok	40
Coq.MSets.MSetRBT.union_list_spec	40
Coq.MSets.MSetRBT.linear_union_spec	40
Coq.MSets.MSetRBT.fold_add_spec	40
Coq.MSets.MSetRBT.union_spec'	40
Coq.MSets.MSetRBT.union_spec	40	0.1.0.1.1.0.0.13	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	4.38909006119	2501
Coq.MSets.MSetRBT.inter_list_ok	40
Coq.MSets.MSetRBT.linear_inter_ok	40
Coq.MSets.MSetRBT.inter_ok	40
Coq.MSets.MSetRBT.inter_list_spec	40
Coq.MSets.MSetRBT.linear_inter_spec	40
Coq.MSets.MSetRBT.mem_proper	40
Coq.MSets.MSetRBT.inter_spec	40
Coq.MSets.MSetRBT.diff_list_ok	40
Coq.MSets.MSetRBT.diff_inter_ok	40
Coq.MSets.MSetRBT.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0238461494446	8
Coq.MSets.MSetRBT.diff_ok	40
Coq.MSets.MSetRBT.diff_list_spec	40
Coq.MSets.MSetRBT.linear_diff_spec	40
Coq.MSets.MSetRBT.fold_remove_spec	40
Coq.MSets.MSetRBT.diff_spec	40
Coq.MSets.MSetRBT.rr_nrr_rb	40
Coq.MSets.MSetRBT.arb_nrr_rb	40	0.3.0.3.52	search with cache (only 1: destruct 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).	7.86953997612	28420
Coq.MSets.MSetRBT.arb_nr_rb	40	1.0.12.5.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: invrb; only 1: revert H; only 1: destruct 1 as [l x r Hl Hr]; only 1: invrb).	0.721947908401	1846
Coq.MSets.MSetRBT.rb_maxdepth	40
Coq.MSets.MSetRBT.rb_mindepth	40
Coq.MSets.MSetRBT.maxdepth_upperbound	40
Coq.MSets.MSetRBT.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.singleton_rb	40
Coq.MSets.MSetRBT.makeBlack_rb	40
Coq.MSets.MSetRBT.makeRed_rr	40	3.1.4.4	search with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: now subst).	0.604696989059	665
Coq.MSets.MSetRBT.lbal_rb	40
Coq.MSets.MSetRBT.rbal_rb	40
Coq.MSets.MSetRBT.rbal'_rb	40
Coq.MSets.MSetRBT.lbalS_rb	40
Coq.MSets.MSetRBT.lbalS_arb	40
Coq.MSets.MSetRBT.rbalS_rb	40
Coq.MSets.MSetRBT.rbalS_arb	40
Coq.MSets.MSetRBT.ifred_notred	40	0.0.0.0.16.2.19	search with cache (only 1: destruct s as [| c l y r]; only 1: intuition_in; only 1: simpl; only 1: descolor; only 1: tauto; only 1: intros; only 1: tauto).	7.89612007141	9503
Coq.MSets.MSetRBT.ifred_or	40	3.0.0.0.0.3.0	search with cache (only 1: destruct s; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.428977012634	345
Coq.MSets.MSetRBT.ins_rr_rb	40
Coq.MSets.MSetRBT.ins_arb	40
Coq.MSets.MSetRBT.add_rb	40
Coq.MSets.MSetRBT.append_arb_rb	40
Coq.MSets.MSetRBT.del_arb	40	0.1	search with cache (only 1: invrb; only 1: auto).	0.0245509147644	13
Coq.MSets.MSetRBT.remove_rb	40
Coq.MSets.MSetRBT.treeify_zero_rb	40	33	search with cache (only 1: now auto_tc).	0.151700973511	550
Coq.MSets.MSetRBT.treeify_one_rb	40
Coq.MSets.MSetRBT.treeify_cont_rb	40
Coq.MSets.MSetRBT.treeify_aux_rb	40
Coq.MSets.MSetRBT.treeify_rb	40
Coq.MSets.MSetRBT.filter_rb	40	25.1	search with cache (only 1: unfold partition, filter; only 1: inA).	1.24190497398	3422
Coq.MSets.MSetRBT.partition_rb1	40	0.4.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0178949832916	12
Coq.MSets.MSetRBT.partition_rb2	40	0.5.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.017735004425	12
Coq.MSets.MSetRBT.fold_add_rb	40	0.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0929498672485	17
Coq.MSets.MSetRBT.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0956108570099	10
Coq.MSets.MSetRBT.union_rb	40	2.0.2.0.6.0.0.1	search with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: intros; only 1: auto_tc; only 1: intros; only 1: auto_tc).	2.79236507416	3320
Coq.MSets.MSetRBT.inter_rb	40	0.0.2.2.0.1.0	search with cache (only 1: unfold inter; only 1: intros; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.535700082779	441
Coq.MSets.MSetRBT.diff_rb	40	1.0.2.3.1.0.0	search with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: intros; only 1: auto_tc).	0.769135951996	721
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetPositive.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0443940162659	3
Coq.MSets.MSetPositive.eq_equiv	40
Coq.MSets.MSetPositive.mem_spec	40	39	search with cache (only 1: solve_proper).	0.270315170288	1279
Coq.MSets.MSetPositive.mem_Leaf	40	1	search with cache (only 1: solve_proper).	0.0160129070282	2
Coq.MSets.MSetPositive.empty_spec	40	3.0	search with cache (only 1: intros a b; only 1: discriminate).	0.0177941322327	5
Coq.MSets.MSetPositive.mem_node	40
Coq.MSets.MSetPositive.is_empty_spec	40
Coq.MSets.MSetPositive.subset_Leaf_s	40	6.4.4	search with cache (only 1: intuition; only 1: intros a b; only 1: discriminate).	0.404407978058	400
Coq.MSets.MSetPositive.subset_spec	40
Coq.MSets.MSetPositive.equal_subset	40
Coq.MSets.MSetPositive.equal_spec	40
Coq.MSets.MSetPositive.eq_dec	40
Coq.MSets.MSetPositive.lex_Opp	40
Coq.MSets.MSetPositive.compare_bool_inv	40	0.0.11.0.0.14.37.36	search with cache (only 1: intros x y; only 1: destruct y; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: destruct x; only 1: trivial; only 1: trivial).	12.4674739838	56680
Coq.MSets.MSetPositive.compare_inv	40
Coq.MSets.MSetPositive.lex_Eq	40
Coq.MSets.MSetPositive.compare_bool_Eq	40
Coq.MSets.MSetPositive.compare_equal	40
Coq.MSets.MSetPositive.compare_gt	40
Coq.MSets.MSetPositive.compare_eq	40
Coq.MSets.MSetPositive.compare_spec	40
Coq.MSets.MSetPositive.ct_cxe	40
Coq.MSets.MSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0241029262543	4
Coq.MSets.MSetPositive.ct_lxl	40	0.4.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0256009101868	8
Coq.MSets.MSetPositive.ct_gxg	40	5.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0250999927521	9
Coq.MSets.MSetPositive.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0231220722198	4
Coq.MSets.MSetPositive.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0233960151672	4
Coq.MSets.MSetPositive.ct_lex	40
Coq.MSets.MSetPositive.ct_compare_bool	40
Coq.MSets.MSetPositive.compare_x_Leaf	40	1.0.0.0.0.0.3	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: trivial; only 1: unfold compare, equal; only 1: case is_empty; only 1: intuition discriminate; only 1: intuition discriminate).	0.183338880539	99
Coq.MSets.MSetPositive.compare_empty_x	40
Coq.MSets.MSetPositive.compare_x_empty	40
Coq.MSets.MSetPositive.ct_compare	40
Coq.MSets.MSetPositive.lt_strorder	40
Coq.MSets.MSetPositive.compare_compat_1	40
Coq.MSets.MSetPositive.compare_compat	40
Coq.MSets.MSetPositive.lt_compat	40	0.0.0.0.8	search with cache (only 1: unfold lt; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	2.98193788528	488
Coq.MSets.MSetPositive.add_spec	40
Coq.MSets.MSetPositive.remove_spec	40
Coq.MSets.MSetPositive.singleton_spec	40
Coq.MSets.MSetPositive.union_spec	40
Coq.MSets.MSetPositive.inter_spec	40
Coq.MSets.MSetPositive.diff_spec	40
Coq.MSets.MSetPositive.fold_spec	40
Coq.MSets.MSetPositive.cardinal_spec	40
Coq.MSets.MSetPositive.xfilter_spec	40
Coq.MSets.MSetPositive.filter_spec	40
Coq.MSets.MSetPositive.xforall_spec	40
Coq.MSets.MSetPositive.for_all_spec	40
Coq.MSets.MSetPositive.xexists_spec	40
Coq.MSets.MSetPositive.exists_spec	40
Coq.MSets.MSetPositive.partition_filter	40
Coq.MSets.MSetPositive.partition_spec1	40
Coq.MSets.MSetPositive.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0246319770813	3
Coq.MSets.MSetPositive.xelements_spec	40
Coq.MSets.MSetPositive.elements_spec1	40
Coq.MSets.MSetPositive.lt_rev_append	40
Coq.MSets.MSetPositive.elements_spec2	40
Coq.MSets.MSetPositive.elements_spec2w	40
Coq.MSets.MSetPositive.choose_spec1	40
Coq.MSets.MSetPositive.choose_spec2	40
Coq.MSets.MSetPositive.choose_empty	40
Coq.MSets.MSetPositive.choose_spec3'	40
Coq.MSets.MSetPositive.choose_spec3	40
Coq.MSets.MSetPositive.min_elt_spec1	40
Coq.MSets.MSetPositive.min_elt_spec3	40
Coq.MSets.MSetPositive.min_elt_spec2	40
Coq.MSets.MSetPositive.max_elt_spec1	40
Coq.MSets.MSetPositive.max_elt_spec3	40
Coq.MSets.MSetPositive.max_elt_spec2	40
Coq.MSets.MSetFacts.In_1	40	4.13.5	search with cache (only 1: intros H; only 1: rewrite H; only 1: auto).	0.666459083557	1591
Coq.MSets.MSetFacts.mem_1	40
Coq.MSets.MSetFacts.mem_2	40
Coq.MSets.MSetFacts.equal_1	40
Coq.MSets.MSetFacts.equal_2	40
Coq.MSets.MSetFacts.subset_1	40
Coq.MSets.MSetFacts.subset_2	40
Coq.MSets.MSetFacts.is_empty_1	40
Coq.MSets.MSetFacts.is_empty_2	40
Coq.MSets.MSetFacts.add_1	40
Coq.MSets.MSetFacts.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0310339927673	3
Coq.MSets.MSetFacts.add_3	40
Coq.MSets.MSetFacts.remove_1	40
Coq.MSets.MSetFacts.remove_2	40	0.1.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0332779884338	5
Coq.MSets.MSetFacts.remove_3	40	1.1	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0576300621033	14
Coq.MSets.MSetFacts.singleton_1	40
Coq.MSets.MSetFacts.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0310349464417	2
Coq.MSets.MSetFacts.union_1	40
Coq.MSets.MSetFacts.union_2	40	2.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0312120914459	4
Coq.MSets.MSetFacts.union_3	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0306859016418	3
Coq.MSets.MSetFacts.inter_1	40
Coq.MSets.MSetFacts.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0294477939606	2
Coq.MSets.MSetFacts.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0358021259308	2
Coq.MSets.MSetFacts.diff_1	40
Coq.MSets.MSetFacts.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0315618515015	2
Coq.MSets.MSetFacts.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.038204908371	2
Coq.MSets.MSetFacts.filter_1	40
Coq.MSets.MSetFacts.filter_2	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0417108535767	4
Coq.MSets.MSetFacts.filter_3	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0487241744995	4
Coq.MSets.MSetFacts.for_all_1	40
Coq.MSets.MSetFacts.for_all_2	40
Coq.MSets.MSetFacts.exists_1	40
Coq.MSets.MSetFacts.exists_2	40
Coq.MSets.MSetFacts.elements_1	40
Coq.MSets.MSetFacts.elements_2	40
Coq.MSets.MSetFacts.In_eq_iff	40	2.0.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0312747955322	5
Coq.MSets.MSetFacts.mem_iff	40	0.7	search with cache (only 1: compute; only 1: intuition).	0.0477800369263	9
Coq.MSets.MSetFacts.not_mem_iff	40	9.37	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	6.32614517212	6365
Coq.MSets.MSetFacts.equal_iff	40	7	search with cache (only 1: intuition).	0.0586841106415	13
Coq.MSets.MSetFacts.subset_iff	40	8	search with cache (only 1: intuition).	0.0582821369171	13
Coq.MSets.MSetFacts.empty_iff	40
Coq.MSets.MSetFacts.is_empty_iff	40	9	search with cache (only 1: intuition).	0.0835418701172	13
Coq.MSets.MSetFacts.singleton_iff	40	3.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0725591182709	5
Coq.MSets.MSetFacts.add_iff	40	1.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0410439968109	3
Coq.MSets.MSetFacts.add_neq_iff	40	0.0.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.0612678527832	6
Coq.MSets.MSetFacts.remove_iff	40	0.4	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.113300085068	15
Coq.MSets.MSetFacts.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0433008670807	3
Coq.MSets.MSetFacts.for_all_iff	40	2.0	search with cache (only 1: intros; only 1: intuition).	0.0523149967194	4
Coq.MSets.MSetFacts.exists_iff	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.0544328689575	5
Coq.MSets.MSetFacts.elements_iff	40	4	search with cache (only 1: intuition).	0.0319859981537	5
Coq.MSets.MSetFacts.mem_b	40
Coq.MSets.MSetFacts.empty_b	40
Coq.MSets.MSetFacts.add_b	40
Coq.MSets.MSetFacts.add_neq_b	40	0.0.0.0.0.0.1.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.152909040451	9
Coq.MSets.MSetFacts.remove_b	40
Coq.MSets.MSetFacts.remove_neq_b	40	0.0.0.0.0.0.1.0	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.115435838699	9
Coq.MSets.MSetFacts.singleton_b	40
Coq.MSets.MSetFacts.union_b	40
Coq.MSets.MSetFacts.inter_b	40
Coq.MSets.MSetFacts.diff_b	40
Coq.MSets.MSetFacts.elements_b	40
Coq.MSets.MSetFacts.filter_b	40
Coq.MSets.MSetFacts.for_all_b	40
Coq.MSets.MSetFacts.exists_b	40
Coq.MSets.MSetFacts.In_m	40
Coq.MSets.MSetFacts.Empty_m	40	10	search with cache (only 1: firstorder).	0.206984996796	92
Coq.MSets.MSetFacts.is_empty_m	40
Coq.MSets.MSetFacts.mem_m	40
Coq.MSets.MSetFacts.singleton_m	40
Coq.MSets.MSetFacts.add_m	40
Coq.MSets.MSetFacts.remove_m	40
Coq.MSets.MSetFacts.union_m	40	0.1.7.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	1.44111609459	155
Coq.MSets.MSetFacts.inter_m	40	0.2.0.8.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite inter_spec; only 1: rewrite Hs, Hx  at 1; only 1: rewrite inter_spec; only 1: intuition).	3.53720498085	818
Coq.MSets.MSetFacts.diff_m	40	0.1.0.9.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite diff_spec; only 1: rewrite Hs, Hx  at 1; only 1: rewrite diff_spec; only 1: intuition).	3.34421491623	737
Coq.MSets.MSetFacts.Subset_m	40	6.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.102378129959	23
Coq.MSets.MSetFacts.subset_m	40
Coq.MSets.MSetFacts.equal_m	40
Coq.MSets.MSetFacts.SubsetSetoid	40	1.1.25.127	search with cache (only 1: compute in *; only 1: split; only 1: auto; only 1: auto).	3.23924517632	24881
Coq.MSets.MSetFacts.In_s_m	40	0.0.0.14	search with cache (only 1: repeat red; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: auto).	24.4692440033	2957
Coq.MSets.MSetFacts.Empty_s_m	40	10	search with cache (only 1: firstorder).	0.45414018631	179
Coq.MSets.MSetFacts.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.0739889144897	3
Coq.MSets.MSetFacts.remove_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0722877979279	3
Coq.MSets.MSetFacts.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.109021902084	3
Coq.MSets.MSetFacts.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0681669712067	3
Coq.MSets.MSetFacts.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.13423705101	4
Coq.MSets.MSetFacts.filter_equal	40
Coq.MSets.MSetFacts.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0665609836578	3
Coq.MSets.MSetFacts.filter_ext	40
Coq.MSets.MSetProperties.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.147511959076	5
Coq.MSets.MSetProperties.Add_Equal	40
Coq.MSets.MSetProperties.equal_refl	40	4.1.1	search with cache (only 1: apply -> equal_spec; only 1: apply <- equal_spec; only 1: intuition).	0.0493199825287	15
Coq.MSets.MSetProperties.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0498058795929	1
Coq.MSets.MSetProperties.equal_trans	40	6	search with cache (only 1: fsetdec).	0.490393877029	125
Coq.MSets.MSetProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0303201675415	1
Coq.MSets.MSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0511569976807	1
Coq.MSets.MSetProperties.subset_antisym	40	5.0.0.0	search with cache (only 1: intros; only 1: apply -> equal_spec; only 1: apply <- equal_spec; only 1: fsetdec).	0.362143039703	33
Coq.MSets.MSetProperties.subset_equal	40	1	search with cache (only 1: fsetdec).	0.175705909729	52
Coq.MSets.MSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0333259105682	1
Coq.MSets.MSetProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0584077835083	1
Coq.MSets.MSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0576050281525	1
Coq.MSets.MSetProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0824539661407	1
Coq.MSets.MSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0512709617615	1
Coq.MSets.MSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0466511249542	1
Coq.MSets.MSetProperties.double_inclusion	40	0.4.11	search with cache (only 1: repeat red; only 1: unfold Equal, Subset; only 1: firstorder).	26.5556118488	1530
Coq.MSets.MSetProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0638608932495	1
Coq.MSets.MSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0592601299286	1
Coq.MSets.MSetProperties.add_equal	40	1.3.0.0.0	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: fsetdec).	0.216732978821	19
Coq.MSets.MSetProperties.add_add	40	0	search with cache (only 1: fsetdec).	0.169123888016	1
Coq.MSets.MSetProperties.remove_equal	40	0	search with cache (only 1: fsetdec).	0.110361099243	1
Coq.MSets.MSetProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.13290309906	1
Coq.MSets.MSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.142194032669	1
Coq.MSets.MSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.149280071259	1
Coq.MSets.MSetProperties.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0940189361572	1
Coq.MSets.MSetProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.300729036331	1
Coq.MSets.MSetProperties.union_sym	40	0	search with cache (only 1: fsetdec).	0.0935719013214	1
Coq.MSets.MSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0783059597015	1
Coq.MSets.MSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.113497018814	1
Coq.MSets.MSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.111317873001	1
Coq.MSets.MSetProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.165733098984	1
Coq.MSets.MSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.100204944611	1
Coq.MSets.MSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.181141853333	1
Coq.MSets.MSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.320621967316	1
Coq.MSets.MSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.290280103683	1
Coq.MSets.MSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.040699005127	1
Coq.MSets.MSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.04065990448	1
Coq.MSets.MSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0658581256866	1
Coq.MSets.MSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0647411346436	1
Coq.MSets.MSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0640051364899	1
Coq.MSets.MSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0783720016479	1
Coq.MSets.MSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0758650302887	1
Coq.MSets.MSetProperties.not_in_union	40	3.0	search with cache (only 1: rewrite union_spec; only 1: intuition).	0.0851421356201	17
Coq.MSets.MSetProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0871379375458	1
Coq.MSets.MSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0756568908691	1
Coq.MSets.MSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.102503061295	1
Coq.MSets.MSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.103888034821	1
Coq.MSets.MSetProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.150894880295	1
Coq.MSets.MSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.197012901306	1
Coq.MSets.MSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.210911989212	1
Coq.MSets.MSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.179487943649	1
Coq.MSets.MSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.148176908493	1
Coq.MSets.MSetProperties.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0563521385193	2
Coq.MSets.MSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0545699596405	1
Coq.MSets.MSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0417351722717	1
Coq.MSets.MSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0424330234528	1
Coq.MSets.MSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0582058429718	1
Coq.MSets.MSetProperties.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0663931369781	2
Coq.MSets.MSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0777571201324	1
Coq.MSets.MSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0461421012878	1
Coq.MSets.MSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.122965097427	1
Coq.MSets.MSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.110074996948	1
Coq.MSets.MSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.176084041595	1
Coq.MSets.MSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.151742935181	1
Coq.MSets.MSetProperties.Add_add	40	0.0.0.10	search with cache (only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.170756101608	65
Coq.MSets.MSetProperties.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.173873901367	3
Coq.MSets.MSetProperties.union_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.240391969681	3
Coq.MSets.MSetProperties.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.393295049667	2
Coq.MSets.MSetProperties.union_Equal	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.397850036621	3
Coq.MSets.MSetProperties.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.288363933563	2
Coq.MSets.MSetProperties.elements_Empty	40
Coq.MSets.MSetProperties.elements_empty	40
Coq.MSets.MSetProperties.of_list_1	40
Coq.MSets.MSetProperties.of_list_2	40
Coq.MSets.MSetProperties.of_list_3	40
Coq.MSets.MSetProperties.fold_spec_right	40
Coq.MSets.MSetProperties.fold_rec	40
Coq.MSets.MSetProperties.fold_rec_bis	40
Coq.MSets.MSetProperties.fold_rec_nodep	40	0.1.0.0.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: eapply Pstep; only 1: eauto; only 1: eauto).	0.583478927612	218
Coq.MSets.MSetProperties.fold_rec_weak	40
Coq.MSets.MSetProperties.fold_rel	40
Coq.MSets.MSetProperties.set_induction	40
Coq.MSets.MSetProperties.set_induction_bis	40
Coq.MSets.MSetProperties.fold_identity	40	2.1.0.2.5.2	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: fsetdec; only 1: intuition; only 1: intros; only 1: fsetdec).	3.20503497124	1582
Coq.MSets.MSetProperties.fold_0	40	12.0.7.3.19.5	search with cache (only 1: intros; only 1: rewrite fold_spec_right; only 1: set (l := rev (elements s)); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: assert (Hsame : forall x, In x s <-> InA x l) by (unfold l; intros; rewrite elements_iff, InA_rev; intuition); only 1: eauto).	13.3447408676	20873
Coq.MSets.MSetProperties.fold_1	40	11.5.2.3.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: fsetdec).	12.1675889492	11531
Coq.MSets.MSetProperties.fold_2	40
Coq.MSets.MSetProperties.fold_1b	40	0.0.0.0.0.1.0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: split; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	6.43092799187	4556
Coq.MSets.MSetProperties.fold_commutes	40
Coq.MSets.MSetProperties.fold_init	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.fold_empty	40
Coq.MSets.MSetProperties.fold_add	40	3.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.445338010788	166
Coq.MSets.MSetProperties.add_fold	40
Coq.MSets.MSetProperties.remove_fold_1	40
Coq.MSets.MSetProperties.remove_fold_2	40	2.2.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.237476110458	49
Coq.MSets.MSetProperties.fold_union_inter	40
Coq.MSets.MSetProperties.fold_diff_inter	40
Coq.MSets.MSetProperties.fold_union	40
Coq.MSets.MSetProperties.fold_plus	40	0.0.1.3.1.0.6.0	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto with relations).	2.36016011238	2567
Coq.MSets.MSetProperties.cardinal_fold	40
Coq.MSets.MSetProperties.cardinal_0	40
Coq.MSets.MSetProperties.cardinal_1	40	0.0.0.7.3.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.630834102631	407
Coq.MSets.MSetProperties.cardinal_2	40
Coq.MSets.MSetProperties.cardinal_Empty	40
Coq.MSets.MSetProperties.cardinal_inv_1	40
Coq.MSets.MSetProperties.cardinal_inv_2	40
Coq.MSets.MSetProperties.cardinal_inv_2b	40	1.1.4.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	1.87574577332	1345
Coq.MSets.MSetProperties.Equal_cardinal	40
Coq.MSets.MSetProperties.cardinal_m	40
Coq.MSets.MSetProperties.empty_cardinal	40	0.0	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0233061313629	2
Coq.MSets.MSetProperties.singleton_cardinal	40
Coq.MSets.MSetProperties.diff_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal_lt	40
Coq.MSets.MSetProperties.union_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal_inter	40
Coq.MSets.MSetProperties.union_cardinal_le	40	2.1.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0553750991821	32
Coq.MSets.MSetProperties.add_cardinal_1	40	1	search with cache (only 1: auto with set).	0.0206120014191	2
Coq.MSets.MSetProperties.add_cardinal_2	40	0.0.0.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0327517986298	5
Coq.MSets.MSetProperties.remove_cardinal_1	40	0.0.3.10.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set relations; only 1: auto with set relations).	1.86540699005	1480
Coq.MSets.MSetProperties.remove_cardinal_2	40	0.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_equal; only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto with set).	0.0791029930115	22
Coq.MSets.MSetProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.gtb_1	40
Coq.MSets.MSetProperties.leb_1	40
Coq.MSets.MSetProperties.gtb_compat	40	10.16.0.0	search with cache (only 1: red; only 1: red; only 1: unfold leb, gtb; only 1: Dec.fsetdec).	21.0244951248	3933
Coq.MSets.MSetProperties.leb_compat	40	0.1.3.0.0.1	search with cache (only 1: red; only 1: red; only 1: intros; only 1: unfold leb, gtb; only 1: rewrite H; only 1: auto).	0.344553947449	76
Coq.MSets.MSetProperties.elements_split	40
Coq.MSets.MSetProperties.elements_Add	40
Coq.MSets.MSetProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.set_induction_max	40
Coq.MSets.MSetProperties.set_induction_min	40
Coq.MSets.MSetProperties.fold_3	40
Coq.MSets.MSetProperties.fold_4	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0346040725708	3
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.036278963089	3
Coq.MSets.MSetProperties.choose_equal	40
Coq.MSets.MSetAVL.singleton_spec	40
Coq.MSets.MSetAVL.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0122978687286	2
Coq.MSets.MSetAVL.create_spec	40
Coq.MSets.MSetAVL.create_ok	40	0.0.0.0.4	search with cache (only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	0.0980598926544	9
Coq.MSets.MSetAVL.bal_spec	40
Coq.MSets.MSetAVL.bal_ok	40
Coq.MSets.MSetAVL.add_spec'	40
Coq.MSets.MSetAVL.add_spec	40	0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	2.08183813095	209
Coq.MSets.MSetAVL.add_ok	40
Coq.MSets.MSetAVL.join_spec	40
Coq.MSets.MSetAVL.join_ok	40
Coq.MSets.MSetAVL.remove_min_spec	40
Coq.MSets.MSetAVL.remove_min_ok	40
Coq.MSets.MSetAVL.remove_min_gt_tree	40
Coq.MSets.MSetAVL.merge_spec	40
Coq.MSets.MSetAVL.merge_ok	40
Coq.MSets.MSetAVL.remove_spec	40
Coq.MSets.MSetAVL.remove_ok	40
Coq.MSets.MSetAVL.concat_spec	40
Coq.MSets.MSetAVL.concat_ok	40
Coq.MSets.MSetAVL.split_spec1	40
Coq.MSets.MSetAVL.split_spec2	40
Coq.MSets.MSetAVL.split_spec3	40
Coq.MSets.MSetAVL.split_ok	40
Coq.MSets.MSetAVL.split_ok1	40
Coq.MSets.MSetAVL.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0118961334229	4
Coq.MSets.MSetAVL.inter_spec_ok	40
Coq.MSets.MSetAVL.inter_spec	40
Coq.MSets.MSetAVL.inter_ok	40	0.0.0.0	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0144209861755	4
Coq.MSets.MSetAVL.diff_spec_ok	40
Coq.MSets.MSetAVL.diff_spec	40
Coq.MSets.MSetAVL.diff_ok	40	0.0.0.0	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0145289897919	4
Coq.MSets.MSetAVL.union_spec	40
Coq.MSets.MSetAVL.union_ok	40
Coq.MSets.MSetAVL.filter_spec	40
Coq.MSets.MSetAVL.filter_weak_spec	40
Coq.MSets.MSetAVL.filter_ok	40
Coq.MSets.MSetAVL.partition_spec1'	40
Coq.MSets.MSetAVL.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0308980941772	6
Coq.MSets.MSetAVL.partition_spec1	40
Coq.MSets.MSetAVL.partition_spec2	40
Coq.MSets.MSetAVL.partition_ok1	40
Coq.MSets.MSetAVL.partition_ok2	40
Coq.MSets.MSetEqProperties.mem_eq	40
Coq.MSets.MSetEqProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.empty_mem	40
Coq.MSets.MSetEqProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.choose_mem_1	40	3.1.3	search with cache (only 1: generalize (FM.mem_iff s x); only 1: rewrite FM.mem_iff; only 1: intuition).	1.18893098831	334
Coq.MSets.MSetEqProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0301668643951	1
Coq.MSets.MSetEqProperties.add_mem_1	40	3.6	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: intuition).	1.8151371479	378
Coq.MSets.MSetEqProperties.add_mem_2	40
Coq.MSets.MSetEqProperties.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0246710777283	2
Coq.MSets.MSetEqProperties.remove_mem_2	40
Coq.MSets.MSetEqProperties.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0201208591461	1
Coq.MSets.MSetEqProperties.union_mem	40
Coq.MSets.MSetEqProperties.inter_mem	40
Coq.MSets.MSetEqProperties.diff_mem	40
Coq.MSets.MSetEqProperties.mem_3	40	0.0.0.0.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: generalize (FM.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.482021808624	138
Coq.MSets.MSetEqProperties.mem_4	40	0.0.0.0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: generalize (FM.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.28182888031	61
Coq.MSets.MSetEqProperties.equal_refl	40	0	search with cache (only 1: auto with set).	0.0197310447693	1
Coq.MSets.MSetEqProperties.equal_sym	40
Coq.MSets.MSetEqProperties.equal_trans	40	0.0.0.1.0.0.4.2.2.0	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply eq_true_iff_eq; only 1: rewrite H; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: apply equal_1; only 1: auto with set).	6.05536007881	2958
Coq.MSets.MSetEqProperties.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0678379535675	3
Coq.MSets.MSetEqProperties.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0276181697845	3
Coq.MSets.MSetEqProperties.subset_refl	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.031476020813	2
Coq.MSets.MSetEqProperties.subset_antisym	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.0384678840637	11
Coq.MSets.MSetEqProperties.subset_trans	40
Coq.MSets.MSetEqProperties.subset_equal	40	3.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0329937934875	7
Coq.MSets.MSetEqProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.add_mem_3	40	1	search with cache (only 1: auto with set relations).	0.0217730998993	2
Coq.MSets.MSetEqProperties.add_equal	40	2.1	search with cache (only 1: intros; only 1: auto with set).	0.0260381698608	5
Coq.MSets.MSetEqProperties.remove_mem_3	40	3.3	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: eauto with set relations).	0.0745761394501	8
Coq.MSets.MSetEqProperties.remove_equal	40	2.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.231805086136	20
Coq.MSets.MSetEqProperties.add_remove	40
Coq.MSets.MSetEqProperties.remove_add	40	3.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.34588599205	28
Coq.MSets.MSetEqProperties.is_empty_cardinal	40	0.0.0.0.0.1.8.0	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	3.040995121	2017
Coq.MSets.MSetEqProperties.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.0217809677124	1
Coq.MSets.MSetEqProperties.singleton_mem_2	40	2.4.3	search with cache (only 1: intro H; only 1: rewrite <- not_mem_iff; only 1: eauto with set).	0.516321897507	66
Coq.MSets.MSetEqProperties.singleton_mem_3	40	3.0.0.2.3.0.0.1	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: auto; only 1: destruct (FM.eq_dec x y); only 1: intuition; only 1: intuition; only 1: discriminate).	1.22942399979	1526
Coq.MSets.MSetEqProperties.union_sym	40	0	search with cache (only 1: auto with set).	0.0204901695251	1
Coq.MSets.MSetEqProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0354719161987	1
Coq.MSets.MSetEqProperties.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0708270072937	1
Coq.MSets.MSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0217070579529	1
Coq.MSets.MSetEqProperties.union_assoc	40	1	search with cache (only 1: auto with set).	0.0391700267792	2
Coq.MSets.MSetEqProperties.add_union_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0957629680634	3
Coq.MSets.MSetEqProperties.union_add	40	1	search with cache (only 1: auto with set).	0.0397460460663	2
Coq.MSets.MSetEqProperties.union_subset_1	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0415680408478	2
Coq.MSets.MSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0197699069977	1
Coq.MSets.MSetEqProperties.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0389099121094	1
Coq.MSets.MSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0204930305481	1
Coq.MSets.MSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0244178771973	1
Coq.MSets.MSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0218019485474	1
Coq.MSets.MSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0217480659485	1
Coq.MSets.MSetEqProperties.inter_assoc	40	1	search with cache (only 1: auto with set).	0.0390241146088	2
Coq.MSets.MSetEqProperties.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0401208400726	2
Coq.MSets.MSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0204010009766	1
Coq.MSets.MSetEqProperties.inter_add_1	40	4.0.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.206589221954	8
Coq.MSets.MSetEqProperties.inter_add_2	40	1.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.389313936234	23
Coq.MSets.MSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0198309421539	1
Coq.MSets.MSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0198798179626	1
Coq.MSets.MSetEqProperties.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0539479255676	4
Coq.MSets.MSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.0196189880371	1
Coq.MSets.MSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0243220329285	1
Coq.MSets.MSetEqProperties.remove_inter_singleton	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.14207816124	2
Coq.MSets.MSetEqProperties.diff_inter_empty	40	3	search with cache (only 1: auto with set).	0.0374269485474	4
Coq.MSets.MSetEqProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0201017856598	1
Coq.MSets.MSetEqProperties.set_rec	40
Coq.MSets.MSetEqProperties.exclusive_set	40
Coq.MSets.MSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0286340713501	2
Coq.MSets.MSetEqProperties.fold_equal	40	0.0.0.0.1.5	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.78583908081	708
Coq.MSets.MSetEqProperties.fold_add	40	0.0.2.0.0.0.0.1.2	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	2.3214161396	964
Coq.MSets.MSetEqProperties.add_fold	40
Coq.MSets.MSetEqProperties.remove_fold_1	40	0.0.0.0.0.1.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	0.201505899429	40
Coq.MSets.MSetEqProperties.remove_fold_2	40
Coq.MSets.MSetEqProperties.fold_union	40
Coq.MSets.MSetEqProperties.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.0193400382996	1
Coq.MSets.MSetEqProperties.add_cardinal_2	40	3.0.1.1.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.10669708252	59
Coq.MSets.MSetEqProperties.remove_cardinal_1	40	0.0.0.7.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.531147956848	479
Coq.MSets.MSetEqProperties.remove_cardinal_2	40	0.3.19	search with cache (only 1: intros H a; only 1: rewrite <- not_mem_iff; only 1: auto with set).	2.1076271534	2847
Coq.MSets.MSetEqProperties.union_cardinal	40	0.0.1.4.1.1.4.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	1.61909008026	1677
Coq.MSets.MSetEqProperties.subset_cardinal	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.0717921257019	17
Coq.MSets.MSetEqProperties.Comp'	40	0.10.0.0.1	search with cache (only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	0.607256889343	307
Coq.MSets.MSetEqProperties.filter_mem	40
Coq.MSets.MSetEqProperties.for_all_filter	40
Coq.MSets.MSetEqProperties.exists_filter	40
Coq.MSets.MSetEqProperties.partition_filter_1	40	15.0	search with cache (only 1: intros; only 1: auto with set).	5.00438189507	3464
Coq.MSets.MSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0274271965027	1
Coq.MSets.MSetEqProperties.filter_add_1	40
Coq.MSets.MSetEqProperties.filter_add_2	40
Coq.MSets.MSetEqProperties.add_filter_1	40
Coq.MSets.MSetEqProperties.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	9.41670799255	1601
Coq.MSets.MSetEqProperties.union_filter	40
Coq.MSets.MSetEqProperties.filter_union	40
Coq.MSets.MSetEqProperties.for_all_mem_1	40	0.0.0.0.0.0.0.1.0.4.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: auto with set).	1.60515999794	1413
Coq.MSets.MSetEqProperties.for_all_mem_2	40	0.1.13.1.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.436823129654	443
Coq.MSets.MSetEqProperties.for_all_mem_3	40
Coq.MSets.MSetEqProperties.for_all_mem_4	40
Coq.MSets.MSetEqProperties.for_all_exists	40
Coq.MSets.MSetEqProperties.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0334470272064	4
Coq.MSets.MSetEqProperties.exists_mem_1	40
Coq.MSets.MSetEqProperties.exists_mem_2	40
Coq.MSets.MSetEqProperties.exists_mem_3	40
Coq.MSets.MSetEqProperties.exists_mem_4	40
Coq.MSets.MSetEqProperties.sum_plus	40
Coq.MSets.MSetEqProperties.sum_filter	40
Coq.MSets.MSetEqProperties.fold_compat	40	0.1.1.13.1.3.2.1	search with cache (only 1: intros; only 1: apply fold_rel with (R := eqA); only 1: auto with relations; only 1: intros; only 1: rewrite <- H; only 1: auto with relations; only 1: auto with relations; only 1: auto with relations).	16.9350600243	18615
Coq.MSets.MSetEqProperties.sum_compat	40
Coq.MSets.MSetDecide.test_push	40	0	search with cache (only 1: auto).	0.0205030441284	1
Coq.MSets.MSetDecide.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.170454978943	3
Coq.MSets.MSetDecide.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0208418369293	1
Coq.MSets.MSetDecide.dec_In	40	0.0.0.2.35	search with cache (only 1: simpl_relation; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	2.02997112274	2653
Coq.MSets.MSetDecide.dec_eq	40
Coq.MSets.MSetDecide.test_eq_trans_1	40
Coq.MSets.MSetDecide.test_eq_trans_2	40	8	search with cache (only 1: fsetdec).	0.511430025101	65
Coq.MSets.MSetDecide.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.110220909119	1
Coq.MSets.MSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.263687133789	1
Coq.MSets.MSetDecide.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.029265165329	1
Coq.MSets.MSetDecide.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0646970272064	1
Coq.MSets.MSetDecide.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0664179325104	1
Coq.MSets.MSetDecide.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.101672887802	1
Coq.MSets.MSetDecide.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.133872032166	1
Coq.MSets.MSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.143004179001	1
Coq.MSets.MSetDecide.test_iff_conj	40	1	search with cache (only 1: fsetdec).	0.0787689685822	2
Coq.MSets.MSetDecide.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.234293937683	1
Coq.MSets.MSetDecide.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.289138793945	1
Coq.MSets.MSetDecide.test_too_complex	40	2.0.3.1	search with cache (only 1: intros x y H a; only 1: intros E; only 1: rewrite singleton_spec; only 1: intuition).	0.100105047226	12
Coq.MSets.MSetDecide.function_test_1	40	1.0	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.106173992157	11
Coq.MSets.MSetDecide.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0982029438019	1
Coq.MSets.MSetDecide.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0705888271332	1
Coq.MSets.MSetGenTree.ltb_tree_iff	40
Coq.MSets.MSetGenTree.gtb_tree_iff	40
Coq.MSets.MSetGenTree.isok_iff	40
Coq.MSets.MSetGenTree.isok_Ok	40
Coq.MSets.MSetGenTree.In_1	40
Coq.MSets.MSetGenTree.In_compat	40
Coq.MSets.MSetGenTree.In_node_iff	40	0.0	search with cache (only 1: intros; only 1: intuition_in).	0.0640759468079	2
Coq.MSets.MSetGenTree.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0280330181122	1
Coq.MSets.MSetGenTree.lt_leaf	40	0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.0188710689545	2
Coq.MSets.MSetGenTree.gt_leaf	40	0.0	search with cache (only 1: unfold gt_tree; only 1: inversion 1).	0.0159170627594	2
Coq.MSets.MSetGenTree.lt_tree_node	40	0.0.4.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0601680278778	8
Coq.MSets.MSetGenTree.gt_tree_node	40	0.0.4.1	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0669639110565	9
Coq.MSets.MSetGenTree.lt_tree_not_in	40	1.4.1	search with cache (only 1: intuition_in; only 1: apply (StrictOrder_Irreflexive x); only 1: auto).	0.0425159931183	9
Coq.MSets.MSetGenTree.lt_tree_trans	40	0.0.0.0.3	search with cache (only 1: intros x y H; only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0226109027863	8
Coq.MSets.MSetGenTree.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0169289112091	3
Coq.MSets.MSetGenTree.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.0143849849701	1
Coq.MSets.MSetGenTree.lt_tree_compat	40	2.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0345349311829	10
Coq.MSets.MSetGenTree.gt_tree_compat	40	0.0.0.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0511379241943	21
Coq.MSets.MSetGenTree.empty_spec	40	5.21	search with cache (only 1: intro H; only 1: auto).	0.162147045135	391
Coq.MSets.MSetGenTree.empty_ok	40	1	search with cache (only 1: intuition_in).	0.0117909908295	2
Coq.MSets.MSetGenTree.is_empty_spec	40
Coq.MSets.MSetGenTree.mem_spec	40
Coq.MSets.MSetGenTree.min_elt_spec1	40
Coq.MSets.MSetGenTree.min_elt_spec2	40
Coq.MSets.MSetGenTree.min_elt_spec3	40
Coq.MSets.MSetGenTree.max_elt_spec1	40
Coq.MSets.MSetGenTree.max_elt_spec2	40
Coq.MSets.MSetGenTree.max_elt_spec3	40	0.0.0.0.0.0.0.1	search with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.129320859909	58
Coq.MSets.MSetGenTree.choose_spec1	40
Coq.MSets.MSetGenTree.choose_spec2	40
Coq.MSets.MSetGenTree.choose_spec3	40
Coq.MSets.MSetGenTree.elements_spec1'	40
Coq.MSets.MSetGenTree.elements_spec1	40
Coq.MSets.MSetGenTree.elements_spec2'	40
Coq.MSets.MSetGenTree.elements_spec2	40
Coq.MSets.MSetGenTree.elements_spec2w	40
Coq.MSets.MSetGenTree.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.elements_cardinal	40
Coq.MSets.MSetGenTree.elements_app	40
Coq.MSets.MSetGenTree.elements_node	40
Coq.MSets.MSetGenTree.rev_elements_app	40
Coq.MSets.MSetGenTree.rev_elements_node	40
Coq.MSets.MSetGenTree.rev_elements_rev	40
Coq.MSets.MSetGenTree.sorted_app_inv	40
Coq.MSets.MSetGenTree.elements_sort_ok	40
Coq.MSets.MSetGenTree.for_all_spec	40
Coq.MSets.MSetGenTree.exists_spec	40
Coq.MSets.MSetGenTree.fold_spec'	40
Coq.MSets.MSetGenTree.fold_spec	40
Coq.MSets.MSetGenTree.subsetl_spec	40
Coq.MSets.MSetGenTree.subsetr_spec	40
Coq.MSets.MSetGenTree.subset_spec	40
Coq.MSets.MSetGenTree.eq_equiv	40
Coq.MSets.MSetGenTree.eq_Leq	40
Coq.MSets.MSetGenTree.lt_strorder	40
Coq.MSets.MSetGenTree.lt_compat	40
Coq.MSets.MSetGenTree.flatten_e_elements	40	1.6.9	search with cache (only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	1.72441697121	1468
Coq.MSets.MSetGenTree.cons_1	40
Coq.MSets.MSetGenTree.compare_end_Cmp	40
Coq.MSets.MSetGenTree.compare_more_Cmp	40	0.0.0.0.1.17.0.1	search with cache (only 1: intros; only 1: simpl; only 1: elim_compare x1 x2; only 1: auto; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).	3.67918801308	3790
Coq.MSets.MSetGenTree.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.compare_Cmp	40
Coq.MSets.MSetGenTree.compare_spec	40
Coq.MSets.MSetGenTree.equal_spec	40
Coq.MSets.MSetGenTree.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.mindepth_cardinal	40
Coq.MSets.MSetGenTree.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.In_compat	40
Coq.MSets.MSetInterface.eq_equiv	40	1.4.1.24.45	search with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.892152070999	3829
Coq.MSets.MSetInterface.eq_dec	40
Coq.MSets.MSetInterface.mem_spec	40
Coq.MSets.MSetInterface.equal_spec	40
Coq.MSets.MSetInterface.subset_spec	40
Coq.MSets.MSetInterface.empty_spec	40
Coq.MSets.MSetInterface.is_empty_spec	40
Coq.MSets.MSetInterface.add_spec	40
Coq.MSets.MSetInterface.remove_spec	40
Coq.MSets.MSetInterface.singleton_spec	40
Coq.MSets.MSetInterface.union_spec	40
Coq.MSets.MSetInterface.inter_spec	40
Coq.MSets.MSetInterface.diff_spec	40
Coq.MSets.MSetInterface.fold_spec	40
Coq.MSets.MSetInterface.cardinal_spec	40
Coq.MSets.MSetInterface.filter_spec	40
Coq.MSets.MSetInterface.for_all_spec	40
Coq.MSets.MSetInterface.exists_spec	40
Coq.MSets.MSetInterface.partition_spec1	40
Coq.MSets.MSetInterface.partition_spec2	40
Coq.MSets.MSetInterface.elements_spec1	40
Coq.MSets.MSetInterface.elements_spec2w	40
Coq.MSets.MSetInterface.choose_spec1	40
Coq.MSets.MSetInterface.choose_spec2	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.compare_spec	40
Coq.MSets.MSetInterface.elements_spec2	40
Coq.MSets.MSetInterface.min_elt_spec1	40
Coq.MSets.MSetInterface.min_elt_spec2	40
Coq.MSets.MSetInterface.min_elt_spec3	40
Coq.MSets.MSetInterface.max_elt_spec1	40
Coq.MSets.MSetInterface.max_elt_spec2	40
Coq.MSets.MSetInterface.max_elt_spec3	40
Coq.MSets.MSetInterface.choose_spec3	40
Coq.MSets.MSetInterface.eq_equiv	40	2.5.2.10.46	search with cache (only 1: compute; only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	1.31180691719	2832
Coq.MSets.MSetInterface.Proper_instance_0	40
Coq.MSets.MSetInterface.Proper_instance_1	40
Coq.MSets.MSetInterface.Proper_instance_2	40
Coq.MSets.MSetInterface.Proper_instance_3	40
Coq.MSets.MSetInterface.Proper_instance_4	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_empty_r	40	7.29	search with cache (only 1: intro H; only 1: firstorder).	1.41517496109	2669
Coq.MSets.MSetInterface.lt_empty_l	40
Coq.MSets.MSetInterface.lt_add_lt	40
Coq.MSets.MSetInterface.lt_add_eq	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat'	40
Coq.MSets.MSetInterface.eq_cons	40	0.0.19	search with cache (only 1: intros l1 l1' l2 l2' H H'; only 1: rewrite H, H'; only 1: reflexivity).	2.08050990105	2130
Coq.MSets.MSetInterface.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.In_In	40	0.1.0.1	search with cache (only 1: intros s Hsame; only 1: rewrite elements_iff; only 1: symmetry; only 1: apply elements_iff).	0.0345249176025	6
Coq.MSets.MSetToFiniteSet.Subset_Included	40	0.0	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.0387887954712	2
Coq.MSets.MSetToFiniteSet.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.empty_Empty_Set	40	8.0.3.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.578192949295	565
Coq.MSets.MSetToFiniteSet.Empty_Empty_set	40	1.0.0.0.1.0.1.6.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: rewrite elements_Empty in H; only 1: intros; only 1: rewrite elements_iff in H0; only 1: destruct H0; only 1: discriminate; only 1: discriminate; only 1: intro; only 1: inversion 1).	9.91105508804	9845
Coq.MSets.MSetToFiniteSet.singleton_Singleton	40	0.6.1	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.288144111633	62
Coq.MSets.MSetToFiniteSet.union_Union	40
Coq.MSets.MSetToFiniteSet.inter_Intersection	40	0.0.0.1.0.0.2.0.0.1.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	9.33466506004	3240
Coq.MSets.MSetToFiniteSet.add_Add	40
Coq.MSets.MSetToFiniteSet.Add_Add	40
Coq.MSets.MSetToFiniteSet.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.Ens_to_MSet	40
Coq.MSets.MSetWeakList.In_compat	40
Coq.MSets.MSetWeakList.mem_spec	40
Coq.MSets.MSetWeakList.isok_iff	40
Coq.MSets.MSetWeakList.isok_Ok	40	0.0.0.0.1.0.2.0.0.0.0.5	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	2.27713513374	1480
Coq.MSets.MSetWeakList.add_spec	40
Coq.MSets.MSetWeakList.add_ok	40
Coq.MSets.MSetWeakList.remove_spec	40
Coq.MSets.MSetWeakList.remove_ok	40
Coq.MSets.MSetWeakList.singleton_ok	40	1.2.1	search with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.0192399024963	7
Coq.MSets.MSetWeakList.singleton_spec	40	0.0.0.0.8	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	1.5020070076	316
Coq.MSets.MSetWeakList.empty_ok	40	3	search with cache (only 1: intuition).	0.0131921768188	4
Coq.MSets.MSetWeakList.empty_spec	40	0.1.7.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0733690261841	79
Coq.MSets.MSetWeakList.is_empty_spec	40
Coq.MSets.MSetWeakList.elements_spec1	40	7.0.0	search with cache (only 1: induction s; only 1: intuition; only 1: intuition).	0.0299229621887	14
Coq.MSets.MSetWeakList.elements_spec2w	40	0.1.1.0.0.1	search with cache (only 1: unfold elements; only 1: induction s; only 1: intuition; only 1: intros; only 1: inv; only 1: auto).	0.181730031967	68
Coq.MSets.MSetWeakList.fold_spec	40	3.0.1.1.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intuition; only 1: simpl; only 1: split).	0.130923032761	32
Coq.MSets.MSetWeakList.union_ok	40
Coq.MSets.MSetWeakList.union_spec	40
Coq.MSets.MSetWeakList.inter_ok	40
Coq.MSets.MSetWeakList.inter_spec	40
Coq.MSets.MSetWeakList.diff_ok	40
Coq.MSets.MSetWeakList.diff_spec	40
Coq.MSets.MSetWeakList.subset_spec	40
Coq.MSets.MSetWeakList.equal_spec	40
Coq.MSets.MSetWeakList.choose_spec1	40
Coq.MSets.MSetWeakList.choose_spec2	40	0.0.0.0.1.0.0.0.3	search with cache (only 1: unfold Empty; only 1: destruct s; only 1: simpl; only 1: intros; only 1: intro; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	2.11615800858	896
Coq.MSets.MSetWeakList.cardinal_spec	40	2.0.0.0.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intros; only 1: intuition; only 1: intros; only 1: simpl; only 1: split).	0.0431458950043	9
Coq.MSets.MSetWeakList.filter_spec'	40
Coq.MSets.MSetWeakList.filter_spec	40
Coq.MSets.MSetWeakList.filter_ok	40
Coq.MSets.MSetWeakList.for_all_spec	40
Coq.MSets.MSetWeakList.exists_spec	40
Coq.MSets.MSetWeakList.partition_spec1	40
Coq.MSets.MSetWeakList.partition_spec2	40
Coq.MSets.MSetWeakList.partition_ok1'	40
Coq.MSets.MSetWeakList.partition_ok2'	40
Coq.MSets.MSetWeakList.partition_ok1	40
Coq.MSets.MSetWeakList.partition_ok2	40
Coq.MSets.MSetList.inf_iff	40
Coq.MSets.MSetList.isok_iff	40
Coq.MSets.MSetList.isok_Ok	40	0	search with cache (only 1: tauto).	0.0129849910736	1
Coq.MSets.MSetList.mem_spec	40
Coq.MSets.MSetList.add_inf	40
Coq.MSets.MSetList.add_ok	40
Coq.MSets.MSetList.add_spec	40
Coq.MSets.MSetList.remove_inf	40
Coq.MSets.MSetList.remove_ok	40	0.0.0.0.0.0.0.1.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	4.16322207451	1725
Coq.MSets.MSetList.remove_spec	40
Coq.MSets.MSetList.singleton_ok	40	1	search with cache (only 1: intuition).	0.0165781974792	2
Coq.MSets.MSetList.singleton_spec	40	0.0.0.14.0	search with cache (only 1: intros x Hs; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: auto).	0.634076118469	508
Coq.MSets.MSetList.union_inf	40
Coq.MSets.MSetList.union_ok	40
Coq.MSets.MSetList.union_spec	40
Coq.MSets.MSetList.inter_inf	40
Coq.MSets.MSetList.inter_ok	40
Coq.MSets.MSetList.inter_spec	40
Coq.MSets.MSetList.diff_inf	40	1.0.2.18.0	search with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	14.5589909554	7354
Coq.MSets.MSetList.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.114682912827	3
Coq.MSets.MSetList.diff_spec	40
Coq.MSets.MSetList.equal_spec	40
Coq.MSets.MSetList.subset_spec	40
Coq.MSets.MSetList.empty_ok	40	4	search with cache (only 1: intuition).	0.0159409046173	5
Coq.MSets.MSetList.empty_spec	40	29	search with cache (only 1: easy).	1.26778388023	1175
Coq.MSets.MSetList.is_empty_spec	40
Coq.MSets.MSetList.elements_spec1	40	0	search with cache (only 1: intuition).	0.0147550106049	1
Coq.MSets.MSetList.elements_spec2	40	3.2.0.0	search with cache (only 1: intro l; only 1: intro H; only 1: inv; only 1: tauto).	0.198591947556	69
Coq.MSets.MSetList.elements_spec2w	40	2.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0256910324097	5
Coq.MSets.MSetList.min_elt_spec1	40
Coq.MSets.MSetList.min_elt_spec2	40
Coq.MSets.MSetList.min_elt_spec3	40	0.0.0.3.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: inversion 1).	0.0378110408783	16
Coq.MSets.MSetList.max_elt_spec1	40
Coq.MSets.MSetList.max_elt_spec2	40
Coq.MSets.MSetList.max_elt_spec3	40
Coq.MSets.MSetList.choose_spec3	40
Coq.MSets.MSetList.fold_spec	40	1.0	search with cache (only 1: intro s; only 1: auto).	0.0169279575348	3
Coq.MSets.MSetList.cardinal_spec	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.026006937027	3
Coq.MSets.MSetList.filter_inf	40
Coq.MSets.MSetList.filter_ok	40
Coq.MSets.MSetList.filter_spec	40
Coq.MSets.MSetList.for_all_spec	40
Coq.MSets.MSetList.exists_spec	40
Coq.MSets.MSetList.partition_inf1	40
Coq.MSets.MSetList.partition_inf2	40
Coq.MSets.MSetList.partition_ok1	40
Coq.MSets.MSetList.partition_ok2	40
Coq.MSets.MSetList.partition_spec1	40
Coq.MSets.MSetList.partition_spec2	40
Coq.MSets.MSetList.In_compat	40	3.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0253369808197	5
Coq.MSets.MSetList.lt_strorder	40
Coq.MSets.MSetList.lt_compat	40
Coq.MSets.MSetList.compare_spec_aux	40	0.2.6.2.8.2.7	search with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: repeat red; only 1: intro H; only 1: induction H; only 1: firstorder; only 1: constructor 2; only 1: constructor 1).	5.43847799301	12409
Coq.MSets.MSetList.compare_spec	40
Coq.MSets.MSetList.eq_leibniz_list	40
Coq.MSets.MSetList.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	5.1	search with cache (only 1: simpl; only 1: easy).	0.0264139175415	8
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0135860443115	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	0.0.0.1.8.3.1.9	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.24082493782	2301
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0232670307159	9
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.2.1.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.0314528942108	18
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.0.5.4	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0603051185608	90
Coq.Relations.Operators_Properties.clos_rtn1_step	40	2.0.5.10.7.24	search with cache (only 1: intro y0; only 1: intro p; only 1: intro H; only 1: right with y0; only 1: auto; only 1: left).	2.58104109764	11317
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.2.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0313498973846	33
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.2.1.0.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.0543971061707	54
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.2.0.0.0.0.5.1	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	6.31955099106	12808
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.4.7.0.10	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	1.43000721931	3634
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.0.1.0.0.2.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	2.60100507736	2184
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40	0.1.16.2.0.2.2.2.0.8	search with cache (only 1: destruct 1; only 1: apply Build_equivalence; only 1: red; only 1: auto; only 1: red; only 1: intros x y H; only 1: intros h1 h2; only 1: eauto; only 1: red; only 1: auto).	3.2148399353	15280
Coq.Relations.Relations.inverse_image_of_eq	40	0.1.0.5.1.1.0.3	search with cache (only 1: intros; only 1: split; only 1: red; only 1: trivial; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	0.491083145142	1031
Coq.Sets.Uniset.leb_refl	40	0	search with cache (only 1: destr_bool).	0.00875186920166	1
Coq.Sets.Uniset.incl_left	40	2.5.4.23	search with cache (only 1: intuition; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.67311501503	1769
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0142910480499	4
Coq.Sets.Uniset.seq_refl	40	3	search with cache (only 1: auto).	0.00838088989258	4
Coq.Sets.Uniset.seq_trans	40	1.0.3.14.1	search with cache (only 1: destruct x; only 1: intro; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.74998998642	3344
Coq.Sets.Uniset.seq_sym	40	0.0.1	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0130848884583	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0131659507751	3
Coq.Sets.Uniset.union_empty_right	40	18.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	2.80948805809	6127
Coq.Sets.Uniset.union_comm	40	16.0.4.2	search with cache (only 1: unfold seq; only 1: simpl; only 1: destruct x; only 1: intuition).	9.67932486534	19980
Coq.Sets.Uniset.union_ass	40	0.1.1.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: auto with bool).	0.044716835022	20
Coq.Sets.Uniset.seq_left	40	0.1.5.0.2.0.0	search with cache (only 1: unfold seq; only 1: destruct y; only 1: destruct x; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	3.14504909515	2609
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0307149887085	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	1.10	search with cache (only 1: intros n IH; only 1: f_equal).	0.0603551864624	91
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	0.0.4.0.0	search with cache (only 1: destruct y; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.0272128582001	9
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0195169448853	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0227808952332	4
Coq.Sets.Multiset.munion_comm	40
Coq.Sets.Multiset.munion_ass	40	0.0.0.1.3.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.225573062897	76
Coq.Sets.Multiset.meq_left	40	0.1.2.0.0	search with cache (only 1: unfold meq; only 1: destruct y; only 1: simpl; only 1: destruct x; only 1: auto).	0.0303370952606	8
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0406758785248	9
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	4.1.1.2	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	1.33822798729	780
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	2.0	search with cache (only 1: intro n'; only 1: auto with sets).	0.00818085670471	4
Coq.Sets.Integers.le_antisym	40	3.5.0	search with cache (only 1: intro n'; only 1: intros m Cm; only 1: auto with sets arith).	0.191184043884	99
Coq.Sets.Integers.le_trans	40	1.1.4.8.1	search with cache (only 1: red; only 1: intros x H'0 y0 H'1; only 1: intro n'; only 1: rewrite H'1; only 1: auto).	5.14560484886	3803
Coq.Sets.Integers.le_Order	40	0.0.0.0.0.0.0.0.0.0.0.0.0.344	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: intros x y H H'; only 1: rewrite (PeanoNat.Nat.le_antisymm x y); only 1: auto; only 1: auto; only 1: auto).	12.6384689808	134822
Coq.Sets.Integers.triv_nat	40	18.4.20	search with cache (only 1: intro f; only 1: red; only 1: split).	0.562861919403	2988
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.0.14.10.12.0	search with cache (only 1: intros; only 1: red; only 1: intro z; only 1: red; only 1: unfold not; only 1: auto).	0.846602916718	4716
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	1.3.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.227519035339	85
Coq.Sets.Relations_1_facts.contains_is_preorder	40	39	search with cache (only 1: auto  10 with sets).	0.166236877441	1200
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	1.4.0.1.5.4.4.0.3.5.15	search with cache (only 1: intros; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: intros x y h; only 1: intros H H'; only 1: destruct H; only 1: destruct H'; only 1: auto  10 with sets; only 1: red; only 1: induction 1; only 1: auto with sets).	5.4680390358	15088
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	2.2.9.5.0	search with cache (only 1: unfold same_relation at 1; only 1: intro z; only 1: intros A B []; only 1: intros; only 1: auto  10 with sets).	1.31106281281	3611
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0108408927917	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0329821109772	33
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	2.0	search with cache (only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.0090160369873	4
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.0073459148407	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.0.3.2.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	2.28641700745	4834
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.3.0.0.2.0.1	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	6.51680588722	10914
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	4.1.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0175421237946	14
Coq.Sets.Permut.comm_left	40	1.3.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0114459991455	7
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	0.8.5.1.0	search with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).	12.1855349541	14348
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	2.0.5.0.2.7.0.0.0.6	search with cache (only 1: intros H'8 H'9; only 1: intros x H'0; only 1: generalize H'0; only 1: generalize H'0; only 1: generalize H'0; only 1: generalize H'0; only 1: intros H'2 H'3; only 1: exists x; only 1: auto with sets; only 1: tauto).	16.2949030399	33194
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	3.2.0.0.0.0.0.3	search with cache (only 1: intro H'3; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: intuition).	0.624406099319	480
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	20.3.3	search with cache (only 1: red; only 1: intros; only 1: elim H).	0.389189958572	1589
Coq.Sets.Powerset.Power_set_Inhabited	40	1.1.1.4.44.72	search with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: intros H'7 H'8; only 1: red; only 1: tauto).	3.68026304245	52982
Coq.Sets.Powerset.Inclusion_is_an_order	40	2.2.2.52	search with cache (only 1: repeat split; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.08493804932	2785
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.0058069229126	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0.6	search with cache (only 1: red; only 1: auto with sets).	0.0082221031189	12
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.3.0.0.0.4.5	search with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	34.4760141373	5979
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	2.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0127708911896	11
Coq.Sets.Powerset.Union_increases_l	40	2.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00800800323486	6
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00519394874573	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.1.1.2	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0496649742126	34
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0107028484344	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	1.0.3.2.2.1	search with cache (only 1: intros A NI; only 1: intros; only 1: red; only 1: red; only 1: red; only 1: auto with sets).	2.13855099678	1072
Coq.Sets.Classical_sets.Subtract_inv	40	16.4	search with cache (only 1: intros A NI; only 1: firstorder).	7.22904706001	8412
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.11.4	search with cache (only 1: intros; only 1: destruct 1; only 1: auto with sets).	1.36386489868	1537
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.0.10.2	search with cache (only 1: intros U R; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	2.29652690887	3849
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.3.0.4.0.2.4.1.0	search with cache (only 1: intros U R x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'5; only 1: red; only 1: elim H'; only 1: intros H'8 H'10; only 1: exists z1; only 1: auto with sets).	29.8029990196	43507
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.4.0.0	search with cache (only 1: intros A x y H'; only 1: intro H'3; only 1: elim H'3; only 1: auto with sets).	0.01935505867	12
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.2.8.0	search with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	4.98097205162	1356
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.4.3.0.3.1.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets).	12.7142310143	15090
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	49.1	search with cache (only 1: intros; only 1: auto  6 with sets).	2.04649400711	5620
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0118119716644	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.11.0	search with cache (only 1: intro H; only 1: unfold Add at 1; only 1: auto  6 with sets).	0.194890022278	142
Coq.Sets.Powerset_facts.less_than_empty	40	4.0	search with cache (only 1: intros; only 1: auto with sets).	0.0129020214081	6
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.0121200084686	1
Coq.Sets.Powerset_facts.Union_associative	40	17.6	search with cache (only 1: intros x H'0; only 1: auto  10 with sets).	2.57015013695	2083
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.012855052948	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0150470733643	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.858631134033	761
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	25.4830009937	18038
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.0.0.0.0.0.0.0.0.5.3	search with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.971131086349	836
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.4.2	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.21747303009	85
Coq.Sets.Powerset_facts.Non_disjoint_union	40	1.0.0.0.1.0.0.0.0.0.3.0.2	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	2.52333712578	2345
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	1.1.0.1.2.0	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.195383071899	94
Coq.Sets.Powerset_facts.incl_add	40	1.0	search with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.0177299976349	3
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	2.0.0	search with cache (only 1: intros; only 1: unfold Add; only 1: auto  9 with sets).	0.0826859474182	5
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	2.0.3.0	search with cache (only 1: intros H'1 H'2; only 1: split; only 1: auto with sets; only 1: auto with sets).	0.0203220844269	9
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0233261585236	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0190968513489	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.0.0.1.4.1.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.939846992493	784
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0363340377808	9
Coq.Sets.Powerset_facts.Setminus_Union_l	40	0.0.1.0.0.1.0.0.2.1.1.7.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	20.0427420139	21363
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	2.0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: intuition; only 1: intuition).	0.816978931427	626
Coq.Sets.Constructive_sets.Extension	40	3.3.3.3.1.8.1	search with cache (only 1: red; only 1: intros A B []; only 1: split; only 1: red; only 1: auto; only 1: red; only 1: auto).	1.36170291901	5155
Coq.Sets.Constructive_sets.Noone_in_empty	40	20.1.2.6	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H1; only 1: elim H1).	0.695040941238	4609
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00951099395752	4
Coq.Sets.Constructive_sets.Add_intro1	40	1.7.5.1.1	search with cache (only 1: intro; only 1: red; only 1: intros B C H'; only 1: left; only 1: auto with sets).	1.08113789558	3304
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00881385803223	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.0.16.6.2	search with cache (only 1: intro; only 1: intro; only 1: exists x; only 1: unfold Add at 1; only 1: auto with sets).	0.765830039978	3672
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	0.1.30.4.7	search with cache (only 1: destruct 1; only 1: intro; only 1: subst; only 1: elim (Noone_in_empty x); only 1: auto with sets).	13.7894761562	86646
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.23.4.5.1.1	search with cache (only 1: red; only 1: intro H'1; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	20.9588260651	108101
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.2.4.5.0	search with cache (only 1: intros A x; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.5648188591	888
Coq.Sets.Constructive_sets.Singleton_inv	40	0.4.1	search with cache (only 1: intros x H'0; only 1: destruct 1; only 1: trivial).	0.0137810707092	8
Coq.Sets.Constructive_sets.Singleton_intro	40	1.1.0.3	search with cache (only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: reflexivity).	0.0295069217682	28
Coq.Sets.Constructive_sets.Union_inv	40	0.0.13.3	search with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto using Noone_in_empty with sets).	0.825385093689	1618
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0121538639069	3
Coq.Sets.Constructive_sets.Couple_inv	40	1.1.1.0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.178248882294	84
Coq.Sets.Constructive_sets.Setminus_intro	40	1.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0099630355835	3
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.00980806350708	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.18.1	search with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.609637022018	1989
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.0.15.4.4	search with cache (only 1: intros H'2 H'3; only 1: intro H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.44734787941	1239
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.13.50	search with cache (only 1: intro; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.31876802444	9203
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	1.4.0.0.1.3	search with cache (only 1: intro H; only 1: intros X H'; only 1: elim H'; only 1: auto; only 1: intros x H'0; only 1: auto with sets).	0.846832990646	1187