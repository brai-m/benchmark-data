coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	15.918720	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	16.932035	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	17.590166	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	120	0.0.1.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	17.674929	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	120	0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	17.569829	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	18.006826	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	120	1	synth with cache (only 1: reflexivity).	18.183827	13
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	120	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	18.289693	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	120	0.1.10	synth with cache (only 1: simpl in *; only 1: destruct p; only 1: reflexivity).	17.951093	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	120	0.1.10	synth with cache (only 1: simpl in *; only 1: destruct p; only 1: reflexivity).	18.705698	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	120	0.5.0.5	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	18.902500	40
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	120	1.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: exact H).	19.816539	12
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	120	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: auto).	21.607354	58
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	120	0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: trivial).	21.476091	55
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	120	2	synth with cache (only 1: reflexivity).	6.641816	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	7.603105	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	120	0.5.3	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).	8.915003	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	9.408467	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	120	0.3.4	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	9.857370	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	120	0.0.2	synth with cache (only 1: destruct 2; only 1: apply H; only 1: trivial).	11.688572	39
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	120	0.0.0	synth with cache (only 1: intros; only 1: destruct p; only 1: reflexivity).	7.231917	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	120	0.5.3.5.7	synth with cache (only 1: destruct q; only 1: destruct p'; only 1: destruct p; only 1: destruct q'; only 1: reflexivity).	11.065504	47
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	120	0.4.3.0.0.0.5.3.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H0; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H1; only 1: apply H; only 1: assumption).	29.623486	137
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	120	0.3.5.0.0.0.3.4.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: split; only 1: intros ?; only 1: intros ?; only 1: apply H; only 1: apply H1; only 1: assumption; only 1: intros ?; only 1: intros ?; only 1: apply H0; only 1: apply H1; only 1: assumption).	30.278365	146
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	120	0.2.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: trivial).	9.162174	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	120	0.0.5.3.4	synth with cache (only 1: destruct r; only 1: destruct p; only 1: destruct q; only 1: destruct 1; only 1: reflexivity).	18.177107	102
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	120	0.5.0.5	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct e; only 1: reflexivity).	10.727288	40
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	120	7.2	synth with cache (only 1: intros ?; only 1: auto).	38.633069	134
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	120	0.2.2.16	synth with cache (only 1: pattern u; only 1: destruct H; only 1: destruct u; only 1: reflexivity).	11.613232	131
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	120	12.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: trivial).	10.579746	67
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	17.937821	228
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	15.764735	123
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	120	2	synth with cache (only 1: reflexivity).	7.069484	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	120	10.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: intros ?; only 1: destruct H; only 1: split; only 1: auto; only 1: auto; only 1: intros ?; only 1: trivial).	19.861097	137
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	120	0.0.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: elim H0; only 1: assumption).	7.362887	15
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	120	0.0.6.4.0.5	synth with cache (only 1: destruct pqr; only 1: destruct x; only 1: destruct e0; only 1: destruct e; only 1: simpl; only 1: reflexivity).	12.028778	101
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	120	15	synth with cache (only 1: apply imp_iff_compat_r).	50.830268	522
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	120	0.2.2.16	synth with cache (only 1: pattern u; only 1: destruct H; only 1: destruct u; only 1: reflexivity).	12.830546	131
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	120	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	6.608768	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	120	0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	8.856219	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	6.317058	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	120	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	15.787036	2
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	20.590641	432
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	120	0.0.2	synth with cache (only 1: destruct 2; only 1: apply H; only 1: trivial).	9.041831	43
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	120	10.20.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: trivial).	18.445665	248
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	120	10.1.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: trivial).	21.550232	249
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	120	10.14.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H0; only 1: trivial).	17.234100	193
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	120	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	5.964495	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	120	10.24.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: trivial).	18.637822	271
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	120	0.3.4.0	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	7.375928	24
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	120	0.2.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.667438	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	120	0.2.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.831800	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	120	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	6.662807	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	120	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.555897	5
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	120	0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	5.980900	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	120	0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	6.174875	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	120	0.7.2	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.255267	18
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	120	0.3.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.185445	8
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	120	0.3.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.808375	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	120	0.3.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	5.755669	7
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	120	0.3.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.087330	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	120	0.6.0	synth with cache (only 1: intros; only 1: destruct e''; only 1: reflexivity).	6.716623	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	120	0.3.1	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	6.484695	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	120	0.2.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	5.879260	6
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	120	0.6.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	6.305725	13
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	120	0.0.9.0.0.0.9.0.1.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: split; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption; only 1: destruct 1; only 1: split; only 1: assumption; only 1: assumption).	118.758778	2794
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	120	0.0.5.8.0.1	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: destruct H2; only 1: destruct H1; only 1: destruct 1; only 1: reflexivity).	16.038323	129
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	120	0.2.2.0	synth with cache (only 1: intros; only 1: destruct H1; only 1: destruct H2; only 1: reflexivity).	7.206978	19
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	120	0.2.3.1	synth with cache (only 1: intros; only 1: destruct H0; only 1: destruct H; only 1: reflexivity).	12.528020	60
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	120	0.3	synth with cache (only 1: intros; only 1: reflexivity).	6.007637	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	120	0.2.2	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	6.870226	11
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	120	0.5.1	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	6.667213	13
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	120	0.6.0	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	6.690041	10
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	120	0.6.1	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	6.980571	13
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	120	0.3.2.0	synth with cache (only 1: intros; only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	7.534242	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	120	0.5.2	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	8.165257	21
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	120	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	6.966627	9
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	120	0.2.0.5	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct H; only 1: reflexivity).	7.223474	36
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	120	0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	8.406993	25
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	120	10.2.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: auto).	9.355227	52
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	120	0.0.0.0.1	synth with cache (only 1: intros ?; only 1: destruct c; only 1: trivial; only 1: trivial; only 1: trivial).	9.555102	22
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	120	0.2.6.34	synth with cache (only 1: pattern True_ind; only 1: destruct u; only 1: destruct H; only 1: reflexivity).	10.783892	135
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	120	0.0.2.19.0.5	synth with cache (only 1: destruct pq; only 1: destruct x; only 1: destruct H0; only 1: destruct H; only 1: simpl; only 1: reflexivity).	11.804754	179
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	120	0.11.12.28	synth with cache (only 1: pattern u; only 1: destruct H; only 1: destruct u in |- * at 1 2; only 1: reflexivity).	17.811475	601
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	120	0.0.2.3.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 2; only 1: destruct H; only 1: split; only 1: auto; only 1: auto).	31.161066	497
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	120	0.3.2.27	synth with cache (only 1: pattern u; only 1: destruct H; only 1: destruct u; only 1: reflexivity).	20.296680	129
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	120	0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	20.870467	20
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	120	0.0.6.4.0.5	synth with cache (only 1: destruct pqr; only 1: destruct x; only 1: destruct e0; only 1: destruct e; only 1: simpl; only 1: reflexivity).	23.555655	101
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	120	1.0.17.3.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: symmetry; only 1: destruct r; only 1: symmetry; only 1: reflexivity).	33.784335	533
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	120	13.0.0.0.8.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: induction decide; only 1: intros ?; only 1: intros ?; only 1: contradiction; only 1: auto).	56.701186	1045
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	120	11.6.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct 1; only 1: assumption).	16.540202	138
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	120	0.10.0.1.0.0.2.10	synth with cache (only 1: pattern f at 1 3; only 1: elim n; only 1: reflexivity; only 1: intros ?; only 1: simpl; only 1: intros ?; only 1: destruct H; only 1: trivial).	20.673740	267
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	120	0.3.2.27	synth with cache (only 1: pattern u; only 1: destruct H; only 1: destruct u; only 1: reflexivity).	57.305236	904
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	120
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	120
