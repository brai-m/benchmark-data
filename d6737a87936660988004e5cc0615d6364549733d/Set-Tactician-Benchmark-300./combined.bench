coq-qcert.2.2.0	Qcert.NNRS.Lang.NNRSCrossShadow.NNRSCrossShadow.cross_shadow_free_disjointness.nnrs_stmt_cross_shadow_free_under_free_mcenv_mdenv	300
coq-corn.8.16.0	CoRN.transc.InvTrigonom.ArcTan_domain	300	0.428406	4	6	2	synth with cache (only 1: easy).
coq-corn.8.16.0	CoRN.transc.SinCos.Basic_Properties.Tan_strext	300	28.787010	1993	255	83.3	synth with cache (only 1: simpl; only 1: apply part_function_div_strext).
coq-qcert.2.2.0	Qcert.Translation.Typing.TNNRStoNNRSimp.TNNRStoNNRSimp.core.tnnrs_core_to_nnrs_imp_core_top_correct_f	300
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection16.Definitions.FTtype_range	300	300.224973	28334	2408
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection15.FittingCore.Fcore_sub_Fitting	300	300.100897	15146	2428
coq-mathcomp-apery.1.0.1	mathcomp.apery.a_props.rho_incr	300	300.198175	20665	1761
coq-mathcomp-apery.1.0.1	mathcomp.apery.reduce_order.ReduceBToOrder2.b_Sn2_at_1	300	300.197289	46310	1950
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection8.Eight.FTypeP_Remarks.compl_of_typeIV	300	300.163704	23366	2355
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.nsHC_HU	300	300.177899	14635	1536
coq-qcert.2.2.0	Qcert.Translation.Lang.NNRCtoNNRCMR.NNRCtoNNRCMR.nnrc_to_nnrcmr_chain_ns_aux_func_obligation_1	300	1.737478	284	8	0.87	synth with cache (only 1: simpl; only 1: lia).
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection13.Section13.OneComplement.Msigma_setI_mmax_central	300	300.235757	19470	1581
coq-corn.8.16.0	CoRN.ftc.MoreIntegrals.Properties_of_Integral.Integral_strext	300	300.089361	15621	2155
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.A'.a'_ge0	300	0.435531	23	3	19	synth with cache (only 1: by rewrite @ltW).
coq-qcert.2.2.0	Qcert.Translation.Lang.cNNRCtoCAMP.cNNRCtoCAMP.trans_let.fresh_bindings_nil	300	0.259775	3	4	0.0.0	synth with cache (only 1: split; only 1: easy; only 1: easy).
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.InducedIrrs.cfAut_seqIndT	300	1.874538	764	8
coq-corn.8.16.0	CoRN.fta.FTAreg.Seq_is_CC_CAuchy.zlt_nrtq	300	300.118422	31797	1272
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection11.Eleven.cfdotS1	300	300.185671	22766	2237
coq-corn.8.16.0	CoRN.ftc.DerivativeOps.Lemmas.bnd_away_zero_square	300	300.139099	50521	1706
coq-qcert.2.2.0	Qcert.NRAEnv.Optim.NRAEnvRewrite.ROptimEnv.appenv_over_env_merge_l	300	300.114773	63539	347
coq-mathcomp-odd-order.1.14.0	odd_order.BGsection11.Section11.exceptional_sigma_nil	300	300.173327	18141	1836
coq-corn.8.16.0	CoRN.metric2.StepFunctionSetoid.SplitLAp	300	303.830310	32342	3570
coq-mathcomp-odd-order.1.14.0	odd_order.PFsection5.Five.SubsetCoherent.subgen_coherent	300	300.206539	52636	2119
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson.Hanson.t2_rat	300	300.127741	23556	2346
coq-corn.8.16.0	CoRN.algebra.COrdCauchy.Monotonous_functions.local_mon'_imp_mon'_lt	300	300.154917	10567	4410
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.array.proof.twp_array_clone	300
coq-tlc.20200328	TLC.LibGraph.is_path_in_nodes_r	300	107.885380	7044	1770	0.18.18.0.0.0	synth with cache (only 1: intros ?; only 1: intros; only 1: red; only 1: exfalso; only 1: clear H; only 1: apply skip_axiom).
coq-corn.8.16.0	CoRN.metric2.Classified.uc_functions.Setoid_instance_1	300	300.562795	25495	1824
coq-qcert.2.2.0	Qcert.NRA.Optim.NRARewrite.NRARewrite.dot_from_duplicate_l	300	300.352008	35263	4191
coq-mathcomp-apery.1.0.1	mathcomp.apery.initial_conds.a1_eq	300	21.812472	4304	216	119.94	synth with cache (only 1: rewrite rat_of_ZEdef; only 1: by rewrite /a unlock).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.ticket_lock.proof.is_lock_persistent	300	300.318099	31840	3890
coq-qcert.2.2.0	Qcert.cNNRC.Lang.cNNRCEq.cNNRCEq.proper_cNNRCFor	300	300.838176	13299	4039
coq-tlc.20200328	TLC.LibEnv.SinglesProperties.map_keys_singles	300	97.901039	8024	1788	83.8.1	synth with cache (only 1: intros; only 1: exfalso; only 1: apply skip_axiom).
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.wf_t_atom	300	1.272547	70	9	1.14	synth with cache (only 1: apply check_atom_correct; only 1: auto).
coq-tlc.20200328	TLC.LibEnv.BindsProperties.binds_single_eq_inv	300	8.574472	353	140	0.39.0.0	synth with cache (only 1: intros; only 1: unfold binds in H; only 1: apply binds_single_inv in H; only 1: tauto).
coq-iris-heap-lang.3.4.0	iris.heap_lang.lib.counter.contrib_spec.read_contrib_spec	300	301.000023	30562	1060
coq-qcert.2.2.0	Qcert.TypeSystem.RSubtypeProp.RSubtypeProp.subtype_pre	300	1.432358	22	21	4.1.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: constructor; only 1: apply subtype_trans).
coq-tlc.20200328	TLC.LibFix.Fix_prop_to_gc	300	300.090550	7448	4640
coq-iris-heap-lang.3.4.0	iris.heap_lang.proofmode.heap.tac_wp_cmpxchg	300	300.247589	22459	1998
coq-iris-heap-lang.3.4.0	iris.heap_lang.derived_laws.lifting.wp_faa_offset	300
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_analysis.RationalPower.exp_quo_gt0	300	300.203955	22671	2486
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.rho_interp	300	300.806400	16054	3682
coq-iris-heap-lang.3.4.0	iris.heap_lang.primitive_laws.lifting.wp_allocN_seq	300	302.120507	13501	1241
coq-mathcomp-odd-order.1.14.0	odd_order.BGappendixC.AppendixC.ExpandHypotheses.inj_psi	300	300.190797	25271	1172
coq-tlc.20200328	TLC.LibContainer.DerivedProperties.empty_incl_inv_of_incl_in_eq_and_in_empty_eq	300	300.043669	10611	4299
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.erase_expr_subst'	300	300.186234	3409	3269
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.erase_val_subst'	300	0.210793	2	3	0.0	synth with cache (only 1: simpl; only 1: auto).
coq-mathcomp-apery.1.0.1	mathcomp.apery.hanson_elem_arith.MajorationOfTheSumOfInversesOfA.sum_aV_leqn	300	300.100443	18017	2923
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Rle_R1_pow	300	300.146554	8043	4653
coq-corn.8.16.0	CoRN.metric2.Complete.lift_eq_complete_2	300	300.410045	16203	3959
coq-qcert.2.2.0	Qcert.Utils.Bindings.Bindings.drec_sort_perm_eq	300	300.059161	8487	4945
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Tietze_extension_func	300	112.778379	17903	1465	201.0.1.11	synth with cache (only 1: destruct X; only 1: simpl; only 1: intros ?; only 1: exact R1).
coq-smtcoq.2.0+8.11	SMTCoq.bva.Bva_checker.Checker.Proof.valid_check_bbExtract	300	300.139911	26813	4542
coq-iris-heap-lang.3.4.0	iris.heap_lang.proph_erasure.pure_step_tp_safe	300	300.091809	8665	4108
coq-smtcoq.2.0+8.11	SMTCoq.euf.Euf.certif.Proof.interp_binop_eqb_sym	300	301.549845	24166	3743
coq-mathcomp-apery.1.0.1	mathcomp.apery.bigopz.TelescopeSum.telescopez	300	300.207177	38465	2483
coq-hott.8.11	HoTT.Homotopy.EMSpace.LicataFinsterLemma.merid_mu	300	300.184703	47871	4753
coq-poltac.0.8.11	PolTac.ReplaceTest.Unnamed_thm22	300	0.948151	14	13	4.0	synth with cache (only 1: intros; only 1: Lia.lia).
coq-poltac.0.8.11	PolTac.ReplaceTest.Unnamed_thm27	300	1.307682	15	17	5.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_comm; only 1: auto with zarith).
coq-corn.8.16.0	CoRN.model.Zmod.ZMod.zmodeq.Zmodeq_modeq	300	282.326400	10089	4139	1.0.0.9.5.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: destruct H; only 1: apply Zmod_minus_intro; only 1: auto with zarith; only 1: rewrite <- H; only 1: auto with zarith).
coq-bits.1.1.0	Bits.extraction.axioms8.implies_lsl	300	101.802356	11838	1333	136.26	synth with cache (only 1: elim  =>//=; only 1: exact : lsl_valid ).
coq-hott.8.11	HoTT.Homotopy.ClassifyingSpace.EncodeDecode.codes_transport	300	300.923146	56596	4943
coq-hott.8.11	HoTT.Classes.orders.rings.from_strict_ring_order.from_strict_ring_order	300	300.559993	41065	5814
coq-poltac.0.8.11	PolTac.Rex.pols_test1	300	3.369047	4	6	0.0.0	synth with cache (only 1: intros ?; only 1: apply Rplus_lt_compat_r; only 1: easy).
coq-topology.10.0.1	Topology.TietzeExtension.Tietze_extension_construction.Tietze_extension_func_bound	300	300.244278	31885	3976
coq-poltac.0.8.11	PolTac.Natex.polr_test1	300	1.050637	18	15	11.0	synth with cache (only 1: intros ?; only 1: Lia.lia).
coq-gaia-stern.1.15	gaia.stern.stern.Stern.Divz.modz_ge0	300	300.163709	24231	3187
coq-mathcomp-apery.1.0.1	mathcomp.apery.lia_tactics.Z_of_intmorphN	300	2.056104	102	19	49	synth with cache (only 1: by do 2!case).
coq-topology.10.0.1	Topology.ProductTopology.continuous_composition_at_2arg	300
coq-topology.10.0.1	Topology.RFuncContinuity.continuous_iff_continuity	300	300.063372	20040	4378
coq-qcert.2.2.0	Qcert.Utils.Assoc.Assoc.Lookup_equiv_on.lookup_equiv_on_incl_prop	300	23.603493	445	354	14.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: subst; only 1: firstorder).
coq-bbv.1.3	bbv.Word.eq_rect_word_match	300	0.644453	8	10	1.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-bbv.1.3	bbv.Word.wordToN_WS_0	300	1.015956	14	16	0.0.1.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: reflexivity).
coq-bits.1.1.0	Bits.spec.operations.properties.andB1	300	154.047193	21934	1970	1.104.22.2	synth with cache (only 1: CRelationClasses.reduce_goal; only 1: rewrite /@andB; only 1: apply lift_right_id; only 1: by case).
coq-bits.1.1.0	Bits.extraction.axioms16.neg_repr	300	300.578327	23663	4039
coq-ceres.0.4.0	Ceres.CeresRoundtrip.DeBindField.sound_bind_field	300	300.072491	13660	4388
coq-smtcoq.2.0+8.11	SMTCoq.SMT_terms.Atom.Typing_Interp.Typ_Aux.check_args_dec	300	300.168106	9242	4350
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.list_sexp_tokens_singleton	300	300.038963	6393	5145
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.is_atom_singleton	300	5.816713	121	95	0.0.1.0.0.0.0	synth with cache (only 1: intros ?; only 1: split; only 1: intros ?; only 1: discriminate H0; only 1: simpl; only 1: rewrite H; only 1: reflexivity).
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternMax.FM_e_value	300	300.084738	16719	3606
coq-bits.1.1.0	Bits.spec.operations.properties.sub0B	300	155.703673	8932	1561	161.23	synth with cache (only 1: rewrite subB_equiv_addB_negB; only 1: by rewrite add0B).
coq-hott.8.11	HoTT.Extensions.extension_functor_sigma	300	300.126976	39493	6017
coq-topology.10.0.1	Topology.QuotientTopology.quotient_connected	300	300.081669	16227	4405
coq-smtcoq.2.0+8.11	SMTCoq.bva.BVList.RAWBITVECTOR_LIST.add_list_assoc	300	25.966723	669	369	0.117.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply add_list_carry_assoc; only 1: reflexivity).
coq-bbv.1.3	bbv.Word.wmult_wmultZ	300	300.088977	18027	4695
coq-bbv.1.3	bbv.Word.wordToNat_lt1	300	3.763263	118	60	0.12.0	synth with cache (only 1: intros; only 1: apply wlt_lt; only 1: assumption).
coq-gaia-stern.1.15	gaia.stern.fibm.pow2_mod3'	300	300.120995	9302	3283
coq-gaia-stern.1.15	gaia.stern.fibm.irreflexive_llen	300	8.601522	447	108	1.0.2.0.1	synth with cache (only 1: red; only 1: intros; only 1: induction x; only 1: by [  ]; only 1: by [  ]).
coq-gaia-stern.1.15	gaia.stern.fibm.Zeckv_nil	300	0.805719	55	10	1.8	synth with cache (only 1: unfold Zeck_val; only 1: by rewrite big_nil).
coq-bbv.1.3	bbv.Word.word_le_ge_eq	300	40.371789	2979	704	12.19.0	synth with cache (only 1: intros; only 1: apply wordNotNot; only 1: intuition).
coq-bbv.1.3	bbv.Word.wzero_wplus	300	10.632907	677	183	85.0	synth with cache (only 1: intros; only 1: apply wplus_wzero_2).
coq-tlc.20200328	TLC.LibRelation.Sym.sym_inv_eq	300	24.255461	1014	286	0.36.0	synth with cache (only 1: intros; only 1: apply prop_ext; only 1: firstorder).
coq-tlc.20200328	TLC.LibRelation.Eq.refl_eq	300	0.428252	8	7	0.0.1	synth with cache (only 1: red; only 1: intros; only 1: auto).
coq-hott.8.11	HoTT.Categories.Comma.Core.CommaCategory.comma_category_parts.path_morphism	300	300.079446	24442	5767
coq-ceres.0.4.0	Ceres.CeresRoundtrip.SoundClass_sum	300	300.100262	21310	4052
coq-iris-heap-lang.3.4.0	iris.heap_lang.lang.heap_lang.to_of_val	300	0.124017	1	2	0	synth with cache (only 1: reflexivity).
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.str_token_string_newline	300	300.093501	5967	1744
coq-gaia-stern.1.15	gaia.stern.stern.Stern.bin_invert_correctB	300	300.094230	21341	3610
coq-bits.1.1.0	Bits.spec.operations.properties.toZp_shlBaux	300	300.073557	18910	2540
coq-ceres.0.4.0	Ceres.CeresRoundtrip.CompleteClass_list	300	83.704208	7526	1354	0.56.3.0.8	synth with cache (only 1: unfold CompleteClass; only 1: intros ?; only 1: intros ?; only 1: apply @complete_class_list; only 1: assumption).
coq-topology.10.0.1	Topology.OrderTopology.OrderTopology.if_total_order.upper_closed_interval_closed	300	300.098987	38145	4182
coq-tlc.20200328	TLC.LibRelation.Tclosure.Ind.tclosure_ind_r	300	194.020304	6032	2778	0.146.0	synth with cache (only 1: intros; only 1: exfalso; only 1: apply skip_axiom).
coq-hott.8.11	HoTT.Limits.Limit.unicone_limit	300	300.058712	32245	7146
coq-hott.8.11	HoTT.Categories.Functor.Prod.Universal.universal.universal.unique.unique_helper2	300	300.061979	30064	4642
coq-gaia-stern.1.15	gaia.stern.fibm.Zeck_S	300	300.074461	15236	3757
coq-topology.10.0.1	Topology.SubspaceTopology.Subspace.subspace_closed_char	300	11.040282	400	167	14	synth with cache (only 1: apply weak_topology1_topology_closed).
coq-haskell.1.0.0	Hask.Control.Category.Morphisms.id_involutive	300	0.484421	11	8	3.0	synth with cache (only 1: intros; only 1: apply id_idempotent).
coq-haskell.1.0.0	Hask.Control.Monad.State.StateLaws.State_Monad_obligation_3	300	27.298260	5658	377	0.28.167	synth with cache (only 1: erewrite @equal_f; only 1: apply @undefined; only 1: reflexivity).
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.new_sexp_List_sound	300	300.069978	9406	4370
coq-bits.1.1.0	Bits.spec.spec.properties.toNat_mod	300	36.181147	8090	378	0.212.23	synth with cache (only 1: symmetry; only 1: apply : modn_small ; only 1: by rewrite toNatBounded).
coq-gaia-stern.1.15	gaia.stern.stern.Stern.SternBrocot.add_near_g	300	300.142701	11635	3531
coq-bits.1.1.0	Bits.spec.operations.properties.toZpCons	300	300.263298	10038	1466
coq-ceres.0.4.0	Ceres.CeresParserRoundtripProof.string_reverse_cons'	300	47.449413	1298	780	0.31.0.0	synth with cache (only 1: intros ?; only 1: subst; only 1: rewrite string_reverse_cons; only 1: reflexivity).
coq-hott.8.11	HoTT.Basics.PathGroupoids.ap011D	300	0.391591	10	9	1.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: split).
coq-smtcoq.2.0+8.11	SMTCoq.Misc.not_ltb_refl	300	1.236685	33	13	15.0	synth with cache (only 1: intros ?; only 1: apply Map.Raw.Proofs.PX.MO.lt_antirefl).
coq-hott.8.11	HoTT.Fibrations.equiv_fibration_replacement	300	300.212030	34289	6401
coq-haskell.1.0.0	Hask.Control.Category.Groupoid_obligation_1	300	214.384944	26706	2965	244.73	synth with cache (only 1: inversion X; only 1: eauto using @iso_compose).
coq-mathcomp-apery.1.0.1	mathcomp.apery.extra_cauchyreals.ExtraCreals.lecr_lt_add	300	300.157322	17393	3129
coq-tlc.20200328	TLC.LibBool.PropertiesIf.if_then_false_else_true	300	0.560139	8	10	0.0.0.0	synth with cache (only 1: intros ?; only 1: destruct x; only 1: easy; only 1: easy).
coq-haskell.1.0.0	Hask.Data.List.olast_last	300	24.866609	877	392	3.2.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: induction us; only 1: reflexivity; only 1: simpl; only 1: destruct us; only 1: simpl in *; only 1: auto; only 1: auto).
coq-poltac.0.8.11	PolTac.PolAux.plus_neg_compat_l	300	3.364400	57	48	8	synth with cache (only 1: intuition).
coq-gaia-stern.1.15	gaia.stern.fibm.ZeckM2	300	300.378937	7603	930
coq-haskell.1.0.0	Hask.Data.Maybe.Equivalence_Maybe_obligation_1	300	5.116324	153	85	0.0.0.3.0	synth with cache (only 1: intros ?; only 1: unfold Maybe_equiv; only 1: destruct x; only 1: reflexivity; only 1: auto).
coq-haskell.1.0.0	Hask.Data.Functor.Yoneda.YonedaLaws.Yoneda_MonadLaws_obligation_3	300	300.061619	25152	3782
coq-hott.8.11	HoTT.WildCat.Equiv.cate_issect	300	300.067019	41146	4023
coq-tlc.20200328	TLC.LibEqual.PropExt.Extensionality_pred_6	300	1.045122	63	16	32	synth with cache (only 1: firstorder).
coq-printf.2.0.0	Printf.FormatParser.Test.roundtrip_test	300	0.483925	8	3	4	synth with cache (only 1: constructor).
coq-bits.1.1.0	Bits.spec.spec.properties.toZp_eq	300	300.131548	18784	3735
coq-bits.1.1.0	Bits.spec.spec.properties.split4eta'	300	2.691879	67	24	40	synth with cache (only 1: exact : split4eta ).
coq-bits.1.1.0	Bits.spec.operations.properties.shlB_mul2exp	300	300.143138	57105	3849
coq-smtcoq.2.0+8.11	SMTCoq.PArray.PArray.IntOrderedType.lt_not_eq	300	93.814551	3180	1630	0.1.0.1.0.1.1.0	synth with cache (only 1: unfold eq; only 1: unfold lt; only 1: rewrite eqb_spec; only 1: intros; only 1: contradict H; only 1: rewrite ltb_spec; only 1: subst; only 1: Lia.lia).
coq-topology.10.0.1	Topology.InteriorsClosures.interior_closure.closure_closed	300	5.766146	364	102	0.0.0.25	synth with cache (only 1: apply @closed_family_intersection; only 1: intros; only 1: destruct H; only 1: tauto).
coq-bbv.1.3	bbv.NatLib.pow2_N	300
coq-haskell.1.0.0	Hask.Control.Category.Monic_Retraction_Iso_obligation_2	300
coq-haskell.1.0.0	Hask.Control.Category.unop	300	1.698862	42	27	0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: simpl; only 1: easy).
coq-poltac.0.8.11	PolTac.RAux.Rlt_sign_pos_pos	300	0.753032	8	10	0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: apply Rmult_lt_0_compat; only 1: easy; only 1: easy).
coq-smtcoq.2.0+8.11	SMTCoq.Misc.afold_left_andb_false_inv	300	300.584425	19682	4120
coq-poltac.0.8.11	PolTac.NatSignTac.Test.hyp_test	300	2.437558	35	37	1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intuition).
coq-bbv.1.3	bbv.NatLib.Npow2_pos	300	45.794260	1998	898	0.0.18.0.0.0.1.0	synth with cache (only 1: intros ?; only 1: induction a; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct Npow2; only 1: easy; only 1: easy).
coq-smtcoq.2.0+8.11	SMTCoq.array.FArray.Raw.Array.Sort_NoDupA	300
coq-printf.2.0.0	Printf.Justify.take_spec	300	2.229837	63	41	0.0.0.0.0.0.4	synth with cache (only 1: intros; only 1: induction l; only 1: cbn; only 1: auto; only 1: cbn; only 1: rewrite IHl; only 1: auto).
coq-bbv.1.3	bbv.ZLib.pow2_nonneg	300	0.553405	7	9	0.1.0	synth with cache (only 1: intros ?; only 1: apply Z.pow_nonneg; only 1: Z.order').
coq-poltac.0.8.11	PolTac.NatAux.gt_mult_rev_0_r	300	17.914351	858	331	11.2.0.1	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Nat.mul_comm; only 1: apply gt_mult_rev_0_l).
coq-printf.2.0.0	Printf.Justify.left_justify_padding'	300	14.488690	456	254	13.3	synth with cache (only 1: intros; only 1: apply drop_spec).
coq-poltac.0.8.11	PolTac.NGroundTac.Eq_diff_Gt	300	0.136606	1	2	0	synth with cache (only 1: discriminate).
coq-gaia-stern.1.15	gaia.stern.fibm.GARr_e	300	300.164155	9994	3897
coq-haskell.1.0.0	Hask.Data.Maybe.bind_endo_just	300	300.058290	8458	5020
coq-bytestring.0.9.0	bedrock.bytestring.Bytestring.print_parse_inv	300	9.535336	368	167	0.2.0.0.1.0	synth with cache (only 1: intros ?; only 1: induction x; only 1: simpl; only 1: reflexivity; only 1: cbn; only 1: congruence).
coq-haskell.1.0.0	Hask.Control.Monad.MonadLaws.join_fmap_join_x	300	300.103695	18711	4194
coq-ceres.0.4.0	Ceres.CeresUtils.app_cons_assoc	300	0.437696	22	10	1.3	synth with cache (only 1: rewrite <- app_assoc; only 1: reflexivity).
coq-printf.2.0.0	Printf.Justify.distribute_length	300	2.282284	49	40	5.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: induction l; only 1: cbn; only 1: auto; only 1: simpl; only 1: auto).
coq-printf.2.0.0	Printf.Justify.left_padding	300	7.111907	263	129	0.4.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction s; only 1: cbn; only 1: reflexivity; only 1: cbn; only 1: rewrite take_spec; only 1: reflexivity).
coq-printf.2.0.0	Printf.Justify.drop_replicate	300	10.021259	382	189	1.0.0.0.1.6	synth with cache (only 1: intros; only 1: induction n; only 1: cbn; only 1: auto; only 1: cbn; only 1: exact IHn).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_refl	300	29.877810	582	549	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros ?; only 1: unfold eq; only 1: unfold byte_cmp; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_trans	300	6.993224	165	114	0.0.1.0.1.0	synth with cache (only 1: unfold eq; only 1: unfold byte_cmp; only 1: intros; only 1: rewrite N.compare_eq_iff in H; only 1: rewrite H; only 1: assumption).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.eq_sym	300	29.091665	912	468	0.0.11.0.1.0	synth with cache (only 1: unfold eq; only 1: unfold byte_cmp; only 1: intros; only 1: rewrite N.compare_antisym; only 1: rewrite H; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.byte_cmp_refl	300	0.393564	5	7	0.0.0.0	synth with cache (only 1: intros; only 1: unfold byte_cmp; only 1: apply N.compare_eq_iff; only 1: reflexivity).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_refl	300	0.437608	6	8	0.0.0	synth with cache (only 1: unfold eq; only 1: intros; only 1: trivial).
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.eq_sym	300	0.483967	6	8	0.0.0.0.0	synth with cache (only 1: unfold eq; only 1: intros ?; only 1: intros ?; only 1: symmetry; only 1: assumption).
coq-poltac.0.8.11	PolTac.RAux.Rge_sign_pos_neg	300	254.918675	11232	4460	0.0.3.44.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: rewrite Rmult_comm; only 1: apply Rge_sign_neg_pos; only 1: auto; only 1: assumption).
coq-bytestring.0.9.0	bedrock.bytestring.OT_byte.lt_trans	300	129.898596	5369	2204	29.0.0.5	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: apply N.lt_trans).
coq-topology.10.0.1	Topology.OpenBases.OpenBasis.coverable_by_open_basis_impl_open	300	300.063035	17084	5262
coq-printf.2.0.0	Printf.Justify.right_padding	300	21.580023	736	416	47.1	synth with cache (only 1: intros; only 1: apply drop_replicate).
coq-bbv.1.3	bbv.ZLib.pow2_times2	300	300.065116	13938	5281
coq-printf.2.0.0	Printf.Justify.left_justify_padding	300	300.043843	13724	5880
coq-ceres.0.4.0	Ceres.CeresString.not_string_elem_app	300	300.085121	9465	5614
coq-bytestring.0.9.0	bedrock.bytestring.to_N_inj	300	300.278447	16557	4354
coq-printf.2.0.0	Printf.Justify.left_justify_length	300	300.069709	10642	5976
coq-printf.2.0.0	Printf.Justify.right_justify_padding	300	300.044527	11589	6238
coq-bytestring.0.9.0	bedrock.bytestring.OT_bs.lt_not_eq	300	300.053094	18331	6333
